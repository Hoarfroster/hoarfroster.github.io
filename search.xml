<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>概率</title>
    <url>/2022/04/10/mathematics/High%20School/Possibility%20and%20Stats/%E6%A6%82%E7%8E%87/</url>
    <content><![CDATA[Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
<h2 id="知识聚焦">知识聚焦</h2>
<h3 id="一随机事件的概率">一、随机事件的概率</h3>
<h4 id="事件与概率">1. 事件与概率</h4>
<p>​ <strong>事件</strong>指试验出现的结果：</p>
<ol type="1">
<li>根据事件是否发生，可以分为<strong>必然事件、不可能事件和随机事件</strong>，其中必然事件的概率为
<span class="math inline">1</span>，不可能事件的概率为 <span class="math inline">0</span>，随机事件的概率属于 <span class="math inline">(0,1)</span>。</li>
<li><strong>互斥事件</strong>指事件不能同时发生，满足 <span class="math inline"><em>P</em>(<em>A</em>∪<em>B</em>) = <em>P</em>(<em>A</em>) + <em>P</em>(<em>B</em>)</span>，<span class="math inline"><em>A</em> ∩ <em>B</em> = ⌀</span>。</li>
<li><strong>对立事件</strong>指 <span class="math inline"><em>A</em> ∪ <em>B</em></span> 为必然事件，<span class="math inline"><em>A</em> ∩ <em>B</em> = ⌀</span>，<strong>对立事件是特殊的互斥事件</strong>，记作
<span class="math inline">$B=\overline{A}$</span>，<span class="math inline">$P(A)=1-P(\overline{A})$</span>。</li>
</ol>
<h4 id="古典概型">2. 古典概型</h4>
<p>​ 如果一次试验有如下两个特征，则称这样的试验为古典概型：</p>
<ol type="1">
<li><strong>有限性</strong>：一次试验的结果只可以是有限个，即只有有限个不同的基本事件。</li>
<li><strong>等可能性</strong>：每个基本事件发生的可能性是均等的。</li>
</ol>
<p>​ 古典概型的计算公式 <span class="math inline">$P(A) = \dfrac{事件 A
包含的基本事件个数}{试验的基本事件总数}$</span>。</p>
<h4 id="独立性">3. 独立性</h4>
<p>​ 一般的，对于两个事件 <span class="math inline"><em>A</em>, <em>B</em></span>，若 <span class="math inline"><em>A</em></span> 事件的发生不改变 <span class="math inline"><em>B</em></span> 事件发生的概率，则称 <span class="math inline"><em>A</em>, <em>B</em></span>
事件<strong>相互独立</strong>。若 <span class="math inline"><em>P</em>(<em>A</em><em>B</em>) = <em>P</em>(<em>A</em>)<em>P</em>(<em>B</em>)</span>，也满足相互独立。</p>
<h3 id="二条件概率">二、条件概率</h3>
<h4 id="条件概率">1. 条件概率</h4>
<p>​ 对于两个事件 <span class="math inline"><em>A</em>, <em>B</em></span> 且 <span class="math inline"><em>P</em>(<em>A</em>) &gt; 0</span>，在已知事件
<span class="math inline"><em>A</em></span> 发生下，事件 <span class="math inline"><em>B</em></span>
发生的概率称为<strong>条件概率</strong> <span class="math inline"><em>P</em>(<em>B</em>|<em>A</em>)</span>，计算公式
<span class="math inline">$P(B|A)=\dfrac{P(AB)}{P(A)}$</span>。条件概率的本质是改变了<strong>基本事件样本空间</strong>，计算条件概率可以使用<strong><em>缩小样本空间法</em></strong>。</p>
<h4 id="全概率与贝叶斯公式">2. 全概率与贝叶斯公式</h4>
<p>​ 对于 <span class="math inline"><em>A</em><sub>1</sub>, <em>A</em><sub>2</sub>, ⋯, <em>A</em><sub><em>n</em></sub></span>
是一组两两互斥的事件，<span class="math inline"><em>A</em><sub>1</sub> ∪ <em>A</em><sub>2</sub> ∪ ⋯ ∪ <em>A</em><sub><em>n</em></sub> = <em>Ω</em></span>，且
<span class="math inline"><em>P</em>(<em>A</em><sub><em>i</em></sub>) &gt; 0, <em>i</em> ∈ {1, 2, ⋯, <em>n</em>}</span>，则对任意事件
<span class="math inline"><em>B</em> ∈ <em>Ω</em></span>
有<strong>全概率公式</strong>： <span class="math display">$$
$P(B)=\sum^n_{i=1}{P(A_i)P(B|A_i)}$
$$</span> ​ 若 <span class="math inline"><em>P</em>(<em>B</em>) &gt; 0</span>，有<strong>贝叶斯公式</strong>：
<span class="math display">$$
$P(A_i|B)=\dfrac{P(A_i)P(B|A_i)}{P(B)}$
$$</span></p>
<h4 id="离散型随机变量及其数字特征">2. 离散型随机变量及其数字特征</h4>
<p>​ 一般地，对于随机试验样本空间 <span class="math inline"><em>Ω</em></span> 的每一个样本点 <span class="math inline"><em>ω</em></span>，都有唯一实数 <span class="math inline"><em>X</em>(<em>ω</em>)</span> 与之对应，则 <span class="math inline"><em>X</em></span>
为<strong>随机变量</strong>。如果随机变量可能取值为<strong>有限个或可以一一列举的无限个</strong>，我们称之为<strong>离散型随机变量</strong>。</p>
<p>​ 对离散型随机变量的可能取值 <span class="math inline"><em>x</em><sub>1</sub>, <em>x</em><sub>2</sub>, ⋯, <em>x</em><sub><em>n</em></sub></span>，我们称
<span class="math inline"><em>X</em></span> 取每一个值 <span class="math inline"><em>x</em><sub><em>i</em></sub></span> 的概率 <span class="math inline"><em>P</em>(<em>X</em>=<em>x</em><sub><em>i</em></sub>) = <em>p</em><sub><em>i</em></sub>, <em>i</em> ∈ {1, 2, ⋯, <em>n</em>}</span>
为 <span class="math inline"><em>X</em></span>
的<strong>随机分布列</strong>，简称<strong>分布列</strong>，可以用表格或图像表示。</p>
<p>​ 我们对上述离散型随机变量，称 <span class="math inline">$E(X)=\sum^n_{i=1}{x_ip_i}$</span>
为随机变量的<strong>均值</strong>或<strong>数学期望</strong>（简称<strong>期望</strong>），即其可能取值关于对应概率的加权平均数。同样，我们规定
<span class="math inline">$D(X)=\sum^{n}_{i=1}{(x_i-E(X))^2p_i}=E(X^2)-(E(X))^2$</span>
为随机变量的<strong>方差</strong>（也可记为 <span class="math inline"><em>V</em><em>a</em><em>r</em>(<em>X</em>)</span>），并称其算数平均数为其标准差，记为
<span class="math inline"><em>σ</em>(<em>X</em>)</span>。</p>
<ol type="1">
<li><span class="math inline"><em>E</em>(<em>a</em><em>X</em>+<em>b</em>) = <em>a</em><em>E</em>(<em>X</em>) + <em>b</em></span>；</li>
<li><span class="math inline"><em>D</em>(<em>a</em><em>X</em>+<em>b</em>) = <em>a</em><sup>2</sup><em>D</em>(<em>X</em>)</span>；</li>
</ol>
<h3 id="三二项分布与超几何分布">三、二项分布与超几何分布</h3>
<h4 id="二项分布">1. 二项分布</h4>
<p>​ 我们把只有两个可能结果的随机试验的结果 <span class="math inline"><em>X</em></span>
称其服从<strong>两点分布</strong>。</p>
<p>​
我们把只包含两个可能结果的试验称为<strong>伯努利试验</strong>，将一个伯努利试验独立地重复进行
<span class="math inline"><em>n</em></span> 次所组成的随机试验称为
<strong><span class="math inline"><em>n</em></span>
重伯努利试验</strong>。一般地，在 <span class="math inline"><em>n</em></span> 重伯努利试验中，设每次试验中事件
<span class="math inline"><em>A</em></span> 发生的概率为 <span class="math inline"><em>p</em> ∈ (0,1)</span>，用 <span class="math inline"><em>X</em></span> 表示其发生的次数，则 <span class="math inline"><em>X</em></span> 的分布列为 <span class="math inline"><em>P</em>(<em>X</em>=<em>k</em>) = <em>C</em><sub><em>n</em></sub><sup><em>k</em></sup><em>p</em><sup><em>k</em></sup>(1−<em>p</em>)<sup><em>n</em> − <em>k</em></sup>, <em>k</em> ∈ {0, 1, 2, ⋯, <em>n</em>}</span>，并称
<span class="math inline"><em>X</em></span> 服从二项分布，记作 <span class="math inline"><em>X</em> ∼ <em>B</em>(<em>n</em>,<em>p</em>)</span>。</p>
<p>​ 一般地，服从二项分布的离散型随机变量 <span class="math inline"><em>X</em></span>：</p>
<ol type="1">
<li><span class="math inline"><em>E</em>(<em>X</em>) = <em>n</em><em>p</em></span>；</li>
<li><span class="math inline"><em>D</em>(<em>X</em>) = <em>n</em><em>p</em>(1−<em>p</em>)</span>；</li>
</ol>
<h4 id="超几何分布">2. 超几何分布</h4>
<p>​ 随机变量如果服从超几何分布，则记为 <span class="math inline"><em>X</em> ∼ <em>H</em>(<em>n</em>,<em>M</em>,<em>N</em>)</span>，其中
<span class="math inline"><em>N</em></span> 为总数，<span class="math inline"><em>M</em></span> 为某类的总数，<span class="math inline"><em>n</em></span> 是选出来的个数，<span class="math inline">$P(X=k)=\dfrac{C_M^kC_{N-M}^{n-k}}{C_N^n}$</span>，<span class="math inline">$E(X)=n\dfrac{M}{N}$</span>，<del><span class="math inline">$D(X)=n\dfrac{M}{N}\cdot\dfrac{(N-M)(N-n)}{N(N-1)}$</span></del>。</p>
<p>​
超几何分布是古典概型的一种情况，特点是==总体有两类元素组成，从总体中不放回的取出元素，其中含有一类元素的个数服从超几何分布==。<strong><em>二项分布是有放回抽样，特点是独立与重复；超几何分布是不放回抽样；当问题涉及“用样本数据估计总体数据”，在超几何分布与二项分布中一般选二项分布</em></strong>。</p>
<h4 id="正态分布">3. 正态分布</h4>
<p>​ 如果一个随机变量取值充满整个区间甚至整个实数轴，但取一点的概率为
<span class="math inline">0</span>，我们称这类变量为<strong>连续型随机变量</strong>。</p>
<p>​ 正态曲线 <span class="math inline">$\phi_{\mu,\sigma}(x)=\dfrac{1}{\sqrt{2\pi}\sigma}e^{-\dfrac{(x-\mu)^2}{2\sigma^2}},
x\in\R$</span>，其中 <span class="math inline"><em>μ</em>, <em>σ</em></span>（<span class="math inline"><em>σ</em> &gt; 0</span>）为参数，我们称该曲线的图像为正态分布密度曲线，简称正态曲线，记作
<span class="math inline"><em>X</em> ∼ <em>N</em>(<em>μ</em>,<em>σ</em><sup>2</sup>)</span>。</p>
<ol type="1">
<li><span class="math inline"><em>μ</em></span> 可以理解为均值，<span class="math inline"><em>σ</em></span> 可以理解为标准差（<span class="math inline"><em>σ</em><sup>2</sup></span> 为方差）；</li>
<li>曲线位于 <span class="math inline"><em>x</em></span> 轴上方，关于
<span class="math inline"><em>x</em> = <em>μ</em></span> 对称，与 <span class="math inline"><em>x</em></span> 轴之间的面积为 <span class="math inline">1</span>；</li>
<li>曲线在 <span class="math inline"><em>x</em> = <em>μ</em></span>
处达到最大值 <span class="math inline">$\dfrac{1}{\sqrt{2\pi}\sigma}$</span>；</li>
<li><span class="math inline"><em>σ</em></span> 一定时，曲线由 <span class="math inline"><em>μ</em></span> 确定位置，沿 <span class="math inline"><em>x</em></span> 轴左加右减；</li>
<li><span class="math inline"><em>μ</em></span> 一定时，曲线由 <span class="math inline"><em>σ</em></span> 确定形状，<span class="math inline"><em>σ</em></span>
越小总体分布越集中曲线越瘦小，反之越分散越矮胖。</li>
</ol>
<p>​ 若 <span class="math inline"><em>X</em> ∼ <em>N</em>(<em>μ</em>,<em>σ</em><sup>2</sup>)</span>，则
<span class="math inline"><em>P</em>(<em>μ</em>−<em>σ</em>≤<em>X</em>≤<em>μ</em>+<em>σ</em>) = 0.6826</span>，<span class="math inline"><em>P</em>(<em>μ</em>−2<em>σ</em>≤<em>X</em>≤<em>μ</em>+2<em>σ</em>) = 0.9544</span>，<span class="math inline"><em>P</em>(<em>μ</em>−3<em>σ</em>≤<em>X</em>≤<em>μ</em>+3<em>σ</em>) = 0.9974</span>。正态总体几乎总取值于区间
<span class="math inline">[<em>μ</em>−3<em>σ</em>,<em>μ</em>+3<em>σ</em>]</span>
之内，在此之外几乎不可能发生，统计学中称之为 <strong><span class="math inline">3<em>σ</em></span> 原则</strong>。</p>]]></content>
      <categories>
        <category>High School</category>
        <category>Mathematics</category>
        <category>Possiblity and Stats</category>
      </categories>
      <tags>
        <tag>School Notes</tag>
        <tag>High School</tag>
        <tag>Mathematics</tag>
      </tags>
  </entry>
  <entry>
    <title>机械波</title>
    <url>/2022/04/09/physics/High%20School/S3%20Waves/%E6%9C%BA%E6%A2%B0%E6%B3%A2/</url>
    <content><![CDATA[Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
<h2 id="课程标准">课程标准</h2>
<h3 id="课程标准内容">课程标准内容</h3>
<h4 id="机械振动与机械波选择性必修">1.2
机械振动与机械波（选择性必修）</h4>
<blockquote>
<p>1.2.4
通过观察，认识波的特征。能区别横波和纵波。能用图像描述横波。理解波速、波长和频率的关系。</p>
</blockquote>
<p>​
本条目要求学生：通过观察水波槽中浮子的运动或绳波的运动，认识波是振动和能量的传播形式，在汉个质粒子只是围绕平衡位置振动，并不随波发生移动。通过观察和比较绳波和弹簧上的波，或者横波、纵波发生演示器演示的的传播过程，区分横波和纵波。在教学过程中，还可以让学生站成一行，依次起立和下蹲来模拟横波。</p>
<p>​
学生要能区别波动图像与振动图像，会在横波的图像上找出波长、振幅，不要求用图像描述纵波；知道波长、波速的含义；知道波的周期和频率由波源决定，而波速与介质的性质有关；能在具体情境中应用波速、频率（周期）、波长三者的关系分析解决问题。</p>
<blockquote>
<p>1.2.5 知道波的反射和折射现象。通过实验，了解波的干涉与衍射现象。</p>
<p>例3 用波动演示器显示波的叠加。</p>
<p>例4 观察音叉双臂振动激发的水波干涉现象。</p>
</blockquote>
<p>​
本条目整合了实验版课程标准关于惠更斯原理和波的干涉、衍行射两个条目并降低了要求，只要求学生认识波的现象，不要求用惠更斯原理解释。在教学中，可以通过水波或声波观察波的反射、折射、干涉和衍射现象，让学生认识到干涉和衍射是波所特有的两种现象。波的叠加是干涉现象的基础，学生应该能用波的叠加解释干涉花样的形成，知道只有两列波的频率相同时它们才能发生干涉。声波是除了水波之外可以用来演示干涉和衍射的另一种波，例如，可以用声波的衍射解释“隔墙有耳”的现象。操场上两个扬声器播放同样的声音，在操场上行走时，感到有的地点声音大，有的地点声音小，这是声波的干涉现象。</p>
<blockquote>
<p>1.2.6
通过实验，认识多普勒效应。能解释多普勒效应产生的原因。能列举多普勒效应的应用实例。</p>
</blockquote>
<p>​
在教学中，教师可以在单音频信号发生器的一端系上绳子，快速旋转绳子使信号发生器做圆周运动，让学生听音调的变化；也可以利用视频，播放鸣笛的火车、汽车等交通工具驶过我们身边时的录像，让学生听音调的变化。在感知这些现象的基础上，引导学生应用所学过的波的知识，对多普勒效应产生的原因做出解释。多普勒效应有多种用途，如交通警察利用超声波测量车速，医生利用彩超诊断疾病等，可以让学生查阅资料了解多普勒效应的应用实例。</p>
<h4 id="教学活动要求">教学活动要求</h4>
<ol type="1">
<li>学生们手拉手站成一排，依次下蹲、起立，模拟机械波。</li>
<li>查阅资料，了解多普勒效应的实际应用。</li>
<li>查阅资料，举办关于引力波的讨论会。</li>
</ol>
<h2 id="知识聚焦">知识聚焦</h2>
<h3 id="一波的形成与描述">一、波的形成与描述</h3>
<h4 id="波的形成">1. 波的形成</h4>
<p>​
振动的传播称为<strong>波动</strong>，简称<strong>波</strong>，产生条件有：</p>
<ol type="1">
<li>波源（机械振动）；</li>
<li>传播振动的介质（相邻质点间存在相互作用力）；</li>
</ol>
<p>​
==质点的振动方向与波的传播方向相互垂直的波==，叫作<strong>横波</strong>。在横波中，凸起的最高处叫作波峰，凹下的最低处叫作波谷。==质点的振动方向与波的传播方向在同一直线上的波==，叫作<strong>纵波</strong>。在纵波中，质点分布最密的位置叫作密部，质点分布最疏的位置叫作疏部。</p>
<h4 id="波的描述">2. 波的描述</h4>
<p>​
如果波的图像是正弦曲线，这样的波叫作正弦波，也叫<strong>简谐波</strong>。可以证明，介质中有正弦波传播时，介质的质点在做简谐运动。</p>
<ol type="1">
<li><p>在波的传播方向上，振动相位总是相同的两个相邻质点间的距离，叫作<strong>波长
<span class="math inline"><em>λ</em></span></strong>。</p></li>
<li><p>机械波在介质中传播的速度为 <strong><span class="math inline"><em>v</em> = <em>λ</em><em>f</em></span></strong>，由介质的性质决定。</p></li>
</ol>
<h3 id="二波的反射折射和衍射-波的干涉-多普勒效应">二、波的反射、折射和衍射
波的干涉 多普勒效应</h3>
<h4 id="波的反射折射和衍射">1. 波的反射、折射和衍射</h4>
<p>​
当水波遇到挡板时会发生<strong>反射</strong>。如果用一条射线代表水波的入射方向（入射线），用另一条射线代表水波的反射方向（反射线），我们发现水波的反射与初中学过的光的反射遵循同样的规律。==反射线、法线与入射线在同一平面内，反射线与入射线分居法线两侧，反射角等于入射角==。</p>
<p>​
理论和实验证明，一切波都会发生<strong>折射</strong>现象。一列水波在深度不同的水域传播时，在交界面处将发生<strong>折射</strong>。</p>
<p>​
波可以绕过障碍物继续传播，这种现象叫作波的<strong>衍射</strong>。==实验表明，只有缝、孔的宽度或障碍物的尺寸跟波长相差不多，或者比波长更小时，才能观察到明显的衍射现象。==</p>
<h4 id="波的独立传播与叠加原理">2. 波的独立传播与叠加原理</h4>
<p>​
<strong>波的独立传播原理</strong>指两列波相遇后，每列波仍像相遇前一致，保持各自特征（波长、频率等）继续沿原方向传播。<strong>波的叠加原理</strong>指几列波相遇后在重叠区域内，介质质点同时参与这几列波的振动，质点位移等于这几列波单独传播时引起的位移的矢量和。</p>
<p>​
频率相同、相位差恒定、振动方向相同的两列波叠加时，某些区域的振动总是加强，某些区域的振动总是减弱，这种现象叫作波的<strong>干涉</strong>。形成的这种稳定图样叫作干涉图样。==波的叠加是无条件的，波的稳定干涉需要频率相同、相位差恒定、振动方向相同==。</p>
<blockquote>
<h3 id="判断某点是振动加强点或振动减弱点">判断某点是振动加强点或振动减弱点</h3>
<h5 id="条件法">条件法</h5>
<p>​
对振动情况完全相同的两个波源，在同一介质中形成的两列波的重叠区内，某点的振动是加强或减弱，取决于两个相干波源到这一点的路程差。</p>
<ol type="1">
<li><span class="math inline">$\Delta r=\pm2k\cdot\dfrac{\lambda}{2},
k\in\N$</span>，即半波长的偶数倍（波长的整数倍）的点振动加强。</li>
<li><span class="math inline">$\Delta
r=\pm(2k+1)\cdot\dfrac{\lambda}{2},
k\in\N$</span>，即半波长的奇数倍（波长的非整数倍）的点振动减弱。</li>
<li>==若两波源振动步调相反，则结论相反==（振动方向相反）。</li>
</ol>
</blockquote>
<p>​
发现波源与观察者相互靠近或者相互远离时，接收到的波的频率都会发生变化。人们把这种现象叫作<strong>多普勒效应</strong>。</p>]]></content>
      <categories>
        <category>High School</category>
        <category>Physics</category>
        <category>Waves</category>
      </categories>
      <tags>
        <tag>School Notes</tag>
        <tag>High School</tag>
        <tag>Physics</tag>
      </tags>
  </entry>
  <entry>
    <title>人与环境</title>
    <url>/2022/04/03/biology/High%20School/b4%20ecology/P4%20%E4%BA%BA%E4%B8%8E%E7%8E%AF%E5%A2%83/</url>
    <content><![CDATA[<h2 id="知识聚焦">知识聚焦</h2>
<p>​
生态足迹又称为生态占用，指在现有技术条件下，维持某一人口单位生存所需要的生态资源和吸收废物的土地、水域的面积。生态足迹越大代表人类所需资源越多，对生态环境影响越大。</p>
<p>​ 基因多样性决定物种多样性，决定生态系统多样性，组成生物多样性。</p>
<p>​
就地保护是保护生物多样性最有效的措施，异地保护是对就地保护的补充。</p>
<p>​
生态工程是一类少消耗、多效益、可持续的工程体系，以生态系统的自组织、自我调节功能为基础，遵循<strong>自生、循环、协调、整体</strong>四个基本原理。</p>]]></content>
      <categories>
        <category>High School</category>
        <category>Biology</category>
        <category>Ecology</category>
      </categories>
      <tags>
        <tag>School Notes</tag>
        <tag>High School</tag>
        <tag>Biology</tag>
      </tags>
  </entry>
  <entry>
    <title>生态系统及其稳定性</title>
    <url>/2022/04/03/biology/High%20School/b4%20ecology/P3%20%E7%94%9F%E6%80%81%E7%B3%BB%E7%BB%9F%E5%8F%8A%E5%85%B6%E7%A8%B3%E5%AE%9A%E6%80%A7/</url>
    <content><![CDATA[Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
<h2 id="知识聚焦">知识聚焦</h2>
<p>​
<strong>在<em>一定空间内</em>，由<em>生物群落与它的非生物环境</em>相互作用而形成的统一整体，称为<em>生态系统</em></strong>。地球上的全部生物及其非生物环境的总和，构成地球上最大的生态系统<strong>生态圈</strong>。</p>
<h3 id="一生态系统的结构">一、生态系统的结构</h3>
<h4 id="生态系统的分类">1. 生态系统的分类</h4>
<p>​
根据生态系统的组成因素，可以分为自然生态系统（进而划分）和人工生态系统两大类。</p>
<pre class="mermaid">graph TB
a[生态系统]
b[人工生态系统]
c[自然生态系统]
d[水域生态系统]
e[陆地生态系统]
f[海洋生态系统]
g[淡水生态系统]
h[森林生态系统]
i[草原生态系统]
j[荒漠生态系统]
k[冻原生态系统]
l[农田生态系统]
m[人工林生态系统]
n[果园生态系统]
o[城市生态系统]
a--&gt;b
a--&gt;c
b--&gt;l
b--&gt;m
b--&gt;n
b--&gt;o
c--&gt;d
c--&gt;e
d--&gt;f
d--&gt;g
e--&gt;h
e--&gt;i
e--&gt;j
e--&gt;k</pre>
<h4 id="生态系统的结构">2. 生态系统的结构</h4>
<h5 id="生态系统的组成结构">生态系统的组成结构</h5>
<p>​ 生态系统由相似的组成成分构成：</p>
<ol type="1">
<li><strong>非生物的物质和能量</strong>：光、热、水、空气、无机盐等。
<ol type="1">
<li>非生物的物质和能量是生态系统中<strong>生物群落的物质和能量的最终来源</strong>。</li>
</ol></li>
<li><strong>生产者</strong>：自养生物，主要为绿色植物。
<ol type="1">
<li>生产者是生态系统中<strong>唯一能把无机物合成为有机物并固定能量</strong>的成分，是<strong>生态系统的<em>基石</em></strong>。</li>
</ol></li>
<li><strong>消费者</strong>：动物，包括植食性动物、肉食性动物、杂食性动物和寄生动物等。
<ol type="1">
<li>消费者能将有机物转化为无机物，<strong>加快生态系统的物质循环</strong>，促进植物传粉与种子的传播，<strong>是生态系统的重要成分，但不是必要成分</strong>。</li>
</ol></li>
<li><strong>分解者</strong>：能将动植物遗体残骸中的有机物分解为无机物的生物，主要是细菌和真菌。
<ol type="1">
<li>分解者能将动植物遗体和动物的排遗物中所含的有机物分解为无机物，并返还给非生物环境，保证物质循环的顺利进行，是<strong>生态系统中必不可缺的成分</strong>。</li>
</ol></li>
</ol>
<h5 id="生态系统的营养结构">生态系统的营养结构</h5>
<p>​
生态系统中的各种生物之间通过食物关系形成的一种关系，称为<strong>食物链</strong>，有捕食链、寄生链和腐生链三种，最常见的是捕食食物链。</p>
<p>​
在捕食食物链中，<strong>生产者为第一营养级，植食性动物（初级消费者）为第二营养级，肉食性动物占据第三、第四……营养级</strong>，一般不会超过五个营养级<strong>（能量流动顺食物链而<em>逐级递减</em>，<em>传递效率只有
<span class="math inline">10% ∼ 20%</span></em>）</strong>。==某一营养级的生物代表处于该营养级的所有生物，而不代表单个生物个体或单个种群==。</p>
<p>​
在生态系统中，许多食物链彼此交错连接成的复杂营养关系称为<strong>食物网</strong>。食物网的复杂性是生态系统保持相对稳定的重要条件，一般而言，食物网越复杂，生态系统抵抗外界干扰的能力就越强。</p>
<p>​
食物链和食物网是生态系统的营养结构，也是生态系统中能量流动和物质循环的渠道。</p>
<h3 id="二生态系统的能量流动">二、生态系统的能量流动</h3>
<h4 id="生态系统的能量来源与去向">1. 生态系统的能量来源与去向</h4>
<ol type="1">
<li>能量来源：<strong>生产者通过光合作用固定太阳能</strong>（光能 =&gt;
体内有机物能量 =&gt; 热能）。</li>
<li>==流经一个生态系统的总能量是生产者固定太阳能的总量==。</li>
<li>传递途径：食物链和食物网，以有机物中化学能为传递载体。</li>
<li>==能量散失的主要途径为以热能形式散失的呼吸作用==。</li>
</ol>
<h4 id="生态系统能量流动过程图">2. 生态系统能量流动过程图</h4>
<p><img src="https://raw.githubusercontent.com/PassionPenguin/picgo-database/main/image-20220405182732193.png" alt="image-20220405182732193" style="zoom:25%;"></p>
<p><img src="https://raw.githubusercontent.com/PassionPenguin/picgo-database/main/image-20220405182745769.png" alt="image-20220405182745769" style="zoom:25%;"></p>
<ol type="1">
<li>生产者的能量来源于光合作用固定的太阳嫩，消费者的能量一般来源于上级营养级，分解者的能量来源于生产者与消费者。</li>
<li>对消费者而言，流入本营养级的能量应该是本营养级生物的同化量。</li>
<li>能量去向一般只考虑自身呼吸作用消耗、流入下一营养级以及被分解者利用，但也可能需要考虑未利用的部分。</li>
</ol>
<p>​
<strong>生态系统中的能量的特点是<em>单向流动、逐级递减</em></strong>，能量传递效率为
<span class="math inline">$\dfrac{某一营养级的同化量}{上一营养级的同化量}\times100\%$</span>，传递效率一般为
<span class="math inline">10% ∼ 20%</span>。</p>
<h4 id="生态循环的金字塔">3. 生态循环的金字塔</h4>
<ol type="1">
<li>数量金字塔通常呈现正金字塔形，少数如树与树上虫鸟则为倒金字塔。</li>
<li>生物量金字塔、能量金字塔一般为正金字塔形。</li>
</ol>
<h3 id="三生态系统的物质循环">三、生态系统的物质循环</h3>
<p>​
生态系统的<strong>物质循环</strong>指生物体的碳氢氧磷氮硫等<strong>元素</strong>在<strong>非生物环境与生物群落之间</strong>的循环过程，带有全球性、循环性，又称为生物地球化学循环。</p>
<h4 id="碳循环">1. 碳循环</h4>
<ol type="1">
<li>碳进入生物群落的途径：绿色植物的的光合作用与微生物的化能合成作用。</li>
<li>碳在生物群落与非生物环境间以 <span class="math inline">$\ce{CO2}$</span> 为载体循环。</li>
<li>碳在生物群落内部以有机物为载体循环。</li>
<li>碳返回非生物环境的途径为呼吸作用、分解作用与化石燃料的燃烧。</li>
</ol>
<h4 id="生物富集作用">2. 生物富集作用</h4>
<p>​
设；生物体从周围环境吸收、积蓄某种<strong>有害元素或难以降解的化合物</strong>，使其在生物体内部的浓度超出环境浓度的现象称为生物富集作用。==营养级越高，有害物质的浓度越高==。</p>
<h4 id="探究实践探究土壤微生物的分解作用">探究·实践：探究土壤微生物的分解作用</h4>
<p>​ 没什么好说的……</p>
<h3 id="三生态系统的信息传递">三、生态系统的信息传递</h3>
<h4 id="生态系统的信息类型">1. 生态系统的信息类型</h4>
<p>​
在日常生活中，人们通常将可以传播的消息、情报、指令、数据与信号等称作<strong>信息</strong>。生态系统中的生物种群之间，以及它们内部都有信息的产生与交换，能够形成信息传递，即<strong>信息流</strong>。</p>
<ol type="1">
<li>自然界中的光、声、温度、湿度、磁场等，通过物理过程传递的信息，称为<strong>物理信息</strong>。
上述蜘蛛网的振动频率与狼的呼叫声均为物理信息。物理信息的来源可以是非生物环境，也可以是生物个体或群体，这类信息十分普遍。</li>
<li>在生命活动中，生物还产生一些可以传递信息的化学物质，如植物的生物碱、有机酸等代谢产物，以及动物的性外激素等，是<strong>化学信息</strong>，它们对其他生物有不同影响。科学实验表明，昆虫、鱼类以及哺乳类等生物体中都存在能传递信息的化学物质——信息素。</li>
<li>动物的特殊行为，主要指各种动作，这些动作也能够向同种或异种生物传递某种信息，即动物的行为特征可以体现为<strong>行为信息</strong>。</li>
</ol>
<p>​
在生态系统中的信息传递过程中，不仅有信息产生的部位——<strong>信息源</strong>；也有信息传播的媒介——<strong>信道</strong>，空气、水以及其他介质均可以传播信息；还需要信息接收的生物或其部位—信息受体，动物的眼、鼻、耳、皮肤，植物的叶、芽以及细胞中的特殊物质如光敏色素）等可以接收多样化的信息。</p>
<p>​
==信息传递影响生物的<strong>生长、发育、繁殖，以及取食、居住、社会行为</strong>等。生命活动的正常进行，离不开信息的作用；生物种群的繁衍，也离不开信息的传递。信息还能够<strong>调节生物的种间关系</strong>，进而维持生态系统的平衡与稳定==。</p>
<h4 id="物质循环与能量流动">2. 物质循环与能量流动</h4>
<ol type="1">
<li>同时进行、相互依存、不可分割。</li>
<li>物质循环是可循环的，能量流动是单向、逐级递减、不可循环的，信息传递通常是双向的。</li>
</ol>
<h3 id="四生态系统的稳定性">四、生态系统的稳定性</h3>
<p>​
<strong>生态系统的<em>结构和功能</em>保持相对稳定的一种状态称为<em>生态平衡</em></strong>。对抗外界的破坏或干扰，使生态系统恢复平衡的调节机制，是<strong>负反馈机制</strong>。所谓负反馈，是指在一个系统中，系统工作的效果，反过来又作为信息调节该系统的工作，并且使系统工作的效果减弱或受到限制，它可使系统保持稳定。</p>
<p>​
==负反馈调节在生态系统中普遍存在，它是生态系统具备<strong>自我调节能力的基础</strong>==。生态系统维持或恢复自身结构与功能处于相对平衡状态的能力，叫作<strong>生态系统的稳定性</strong>。</p>
<p>​
生态系统的稳定性表现在两个方面：一方面是<strong>生态系统抵抗外界干扰并使自身的结构与功能保持原状（不受损害）的能力，叫作<em>抵抗力稳定性</em></strong>；另
一方面是<strong>生态系统在受到外界干扰因素的破坏后恢复到原状的能力，叫作<em>恢复力稳定性</em></strong>。==一般来说，生态系统中的组分越多，食物网越复杂。其自我调节能力就越强，抵抗力稳定性就越高。==</p>
<table>
<colgroup>
<col style="width: 8%">
<col style="width: 42%">
<col style="width: 50%">
</colgroup>
<thead>
<tr class="header">
<th></th>
<th>抵抗力稳定性</th>
<th>恢复力稳定性</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>核心</td>
<td>抵抗干扰，保持原状</td>
<td>遭到破坏，恢复原状</td>
</tr>
<tr class="even">
<td>影响因素</td>
<td>成分越复杂，抵抗力稳定性越高</td>
<td>成分越简单，恢复力稳定性越高</td>
</tr>
<tr class="odd">
<td>联系</td>
<td>一般抵抗力稳定性高的生态系统恢复力稳定性低</td>
<td>同时存在的截然不同的作用力，共同维持生态系统的稳定</td>
</tr>
</tbody>
</table>]]></content>
      <categories>
        <category>High School</category>
        <category>Biology</category>
        <category>Ecology</category>
      </categories>
      <tags>
        <tag>School Notes</tag>
        <tag>High School</tag>
        <tag>Biology</tag>
      </tags>
  </entry>
  <entry>
    <title>群落及其演替</title>
    <url>/2022/04/03/biology/High%20School/b4%20ecology/P2%20%E7%BE%A4%E8%90%BD%E5%8F%8A%E5%85%B6%E6%BC%94%E6%9B%BF/</url>
    <content><![CDATA[<h2 id="知识聚焦">知识聚焦</h2>
<p>​
生活在同一区域的不同种群不是孤立的，而是<strong>直接或间接地联系着，共同构成有序的整体，也即<em>群落</em></strong>。</p>
<h3 id="一群落的结构">一、群落的结构</h3>
<h4 id="群落的物种组成">1.群落的物种组成</h4>
<p>​
<strong>一个群落中的物种数目，称为<em>物种丰富度</em></strong>。群落之间的物种通过复杂的种间关系，形成一个有机整体，其中<strong><em>种间关系</em>主要包括<em>原始合作（互惠）、互利共生、种间竞争和寄生</em>等</strong>。</p>
<ol type="1">
<li><strong><em>原始合作</em></strong>：两种生物共同生活在一起时，双方都受益，但分开之后各自也能独自生活。</li>
<li><strong><em>互利共生</em></strong>：两种生物长期共同生活在一起，相互依存，彼此有利。互利共生曲线呈现<strong>同步性变化</strong>。</li>
<li><strong><em>捕食</em></strong>：一种生物以另一种生物为食的现象。捕食曲线呈现不同步性变化（<strong>此消彼长，但不会导致某种生物灭绝</strong>）。</li>
<li><strong><em>寄生</em></strong>：一种生物从另一种生物（宿主）的体液、组织或已消化的物质中获取营养并通常对宿主产生危害的现象。</li>
<li><strong><em>种间竞争</em></strong>：两种或更多种生物共同利用同样的有限资源和空间而产生的相互排斥的现象。</li>
</ol>
<p>​
需要<strong>注意区分种内关系（同种生物之间的关系）与种间关系（不同生物之间的关系）</strong>。</p>
<h4 id="群落的空间结构">2. 群落的空间结构</h4>
<p>​
在群落中，各个生物种群分别占据了不同的空间，形成一定的空间结构，包括水平结构和垂直结构。</p>
<h5 id="垂直结构">垂直结构</h5>
<p>​
主要指<strong>在垂直方向上的分层现象</strong>，如森林中的分层，湖泊中的分层等。</p>
<p>​
<strong>植物的分层现象与光的利用有关</strong>，分层现象显著提高了群落利用阳光等环境资源的能力。另外，<strong>地上分层</strong>的影响因素也包括<strong>温度</strong>，<strong>地下分层</strong>的影响因素也包括<strong>水分、无机盐</strong>等。动物的分层现象则与植物的垂直分层所提供的<strong>栖息空间与食物条件</strong>有关，有时可能与<strong>水中含氧量</strong>相关。</p>
<h5 id="水平结构">水平结构</h5>
<p>​
群落的结构特征也可以表现在水平方向上，主要特征是<strong>镶嵌性</strong>，主要表现有基于地形不同、土壤湿度不同、盐碱度差异、光照强度不同与生物自身生长特点不同，以及人与动物的影响等因素分布着不同的种群。</p>
<h4 id="群落的时间结构">群落的时间结构</h4>
<h5 id="群落的季节性">群落的季节性</h5>
<p>​
由于阳光、水分、温度等随季节变化而变化，群落的外貌与结构也会随之有规律地变化，如动物的迁徙，植物的生长凋亡等。</p>
<h5 id="生态位">生态位</h5>
<p>​
<strong>一个物种在群落中的地位或作用，包括<em>所出的空间位置、占用资源的情况、与其他物种间的关系</em>，称为这个物种的<em>生态位</em></strong>。研究动物的生态位通常要研究其栖息地、食物、天敌与物种间关系，研究植物的生态位通常研究出现频率、种群密度、植株高度等特征以及物种间关系。</p>
<ol type="1">
<li><p>群落中占据了相同生态位的两个物种，会通过种间竞争相互争夺生态位，结果可能是其中一个物种趋于灭绝，也可能是其通过自然选择，生态位发生分化，减少或排除相互竞争，达到共存。</p></li>
<li><p>生态位的分化提高了群落中生物利用环境资源的能力。</p></li>
<li><p>一个稳定的群落中，由于各种群在群落中具有各自的生态位，种群间能避免直接的竞争，从而保证了群落的稳定，即生态位的多样性是群落结构相对稳定的基础。</p></li>
</ol>
<p><img src="C:\Users\hoarfroster\AppData\Roaming\Typora\typora-user-images\image-20220405121215030.png" alt="image-20220405121215030" style="zoom: 25%;"></p>
<p>图 a：物种 1、2、3
相互间共用资源较少，但是每个物种单独能利用的资源较多，因此种内斗争较激烈，而种间竞争较弱；
图 b：物种 1、2、3
相互间共用资源较多，但是每个物种单独能利用的资源比较少，因此种间竞争激烈，种内竞争较弱，其中物种2能单独利用的资源最少，若资源有限，图
b 中物种 2 有被排除的危险。</p>
<h4 id="探究实践研究土壤中小动物类群的丰富度-exp-研究土壤中小动物类群的丰富度">探究·实践：研究土壤中小动物类群的丰富度
| #exp-研究土壤中小动物类群的丰富度</h4>
<h5 id="取样原理">取样原理</h5>
<p>​
许多土壤动物有较强的活动能力，而且身体微小，因此不适于用样方法或标记重捕法进行调查。在进行这类研究时，常用<strong>取样器取样</strong>的方法进行采集、调查。</p>
<h5 id="采集原理">采集原理</h5>
<ol type="1">
<li><p><strong>采集体型较大的动物</strong>：a.利用土壤动物具有趋暗、趋湿、避高温的特性，用诱虫器采集；b.简易采集法：放在瓷盆内，挑拣动物。</p></li>
<li><p><strong>采集体型较小的动物</strong>：用吸虫器采集，采集到的小动物可以放入酒精溶液中保存，也可以放入试管中保存。</p></li>
</ol>
<h5 id="丰富度的统计方法">丰富度的统计方法</h5>
<ol type="1">
<li><p><strong>记名计算法</strong>：适用于个体较大、种群数量有限的物种。</p></li>
<li><p><strong>目测估计法</strong>：按预先确定的多度等级来估计单位面积（体积）中的种群数量。</p></li>
</ol>
<h5 id="注意事项">注意事项</h5>
<ol type="1">
<li><p>取样时应注意随机取样，避免人为因素的作用，尽量减小结果的偏差。</p></li>
<li><p>小动物类群因取样地段不同，可能差异较大。从不同营养的环境中采集的土壤样本要分开统计，并尽可能多地收集小动物。</p></li>
<li><p>取样时尽量不要破坏环境，同时注意安全。</p></li>
<li><p>在装样的塑料袋上要标明取样的地点和时间。</p></li>
<li><p>本实验调查的对象是样本内肉眼可见（可借助放大镜、实体镜）的所有动物，调查的指标是动物的种类丰富度。</p></li>
</ol>
<h3 id="二群落的主要类型">二、群落的主要类型</h3>
<p>​
根据群落的外貌和物种组成等方面的差异，可以将陆地的群落大致分为荒漠、草原、森林等类型。</p>
<h4 id="不同群落中动植物种类差异与群落特点">1.
不同群落中动植物种类差异与群落特点</h4>
<table>
<colgroup>
<col style="width: 8%">
<col style="width: 27%">
<col style="width: 29%">
<col style="width: 35%">
</colgroup>
<thead>
<tr class="header">
<th>群落类型</th>
<th>主要植物</th>
<th>主要动物</th>
<th>特点</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>针叶林</td>
<td>主要由常绿针叶树种组成，如云杉、红杉、冷杉。</td>
<td>驼鹿、雪兔、松鼠、黑熊、雷鸟、榛鸡等。</td>
<td>气候寒冷，是地球上最大的森林带，覆盖地球表面积的 11%。</td>
</tr>
<tr class="even">
<td>温带落叶阔叶林</td>
<td>槭、山毛榉、栎、椴、柳等，灌林和阔叶草本植物。</td>
<td>田鼠、金花鼠、林猫、红狐、山雀、旋木雀和啄木鸟等。</td>
<td>气候温和，植物林间藤本不发达，以草质和半草质为主，动物多树栖、地栖。</td>
</tr>
<tr class="odd">
<td>热带雨林</td>
<td>常绿植物，种类繁多。</td>
<td>猴类、鹦鹉科鸟类是热带雨林特有动物。</td>
<td>气候高温高湿，生物种类繁多，约占地球一直种类一半，是地球上最丰富的生物基因库。</td>
</tr>
<tr class="even">
<td>草原生物群落</td>
<td>几乎完全由禾本科植物和阔叶草本植物组成。</td>
<td>野驴、黄羊、黄鼠、鼠兔、鸵鸟、鸸鹋等。</td>
<td>动植物种类较少，群落结构相对简单，动物善于奔跑，多穴居聚居。</td>
</tr>
<tr class="odd">
<td>荒漠生物群落</td>
<td>蒿属植物、藜属灌林、肉质旱生植物等。</td>
<td>邵默动物，少数鸟类、蜥蜴。</td>
<td>年降水稀少分布不均，物种少，群落结构非常简单</td>
</tr>
</tbody>
</table>
<h4 id="顶级群落">2. 顶级群落</h4>
<p>​
<strong><em>顶级群落</em></strong>指一个群落演替到与当地的气候和土壤条件处于平衡状态时，群落结构最复杂也最稳定，没有外力干扰将永保现状所<strong>最终达成平衡状态的群落</strong>。顶级群落主要由平均温度和年降雨量所决定。</p>
<h3 id="三群落的演替">三、群落的演替</h3>
<h4 id="群落演替">1. 群落演替</h4>
<p><strong>随着时间的推移，一个群落被另一个群落代替的过程，叫作<em>群落演替</em></strong>。</p>
<h5 id="群落发生演替的主要标志">群落发生演替的主要标志</h5>
<p>群落在物种组成上发生了变化，或者是在一定区域内一个群落逐步被另一个群落替代。</p>
<ol type="1">
<li>在群落演替过程中，<strong>一些种群取代另一些种群是指优势取代，而不是“取而代之”</strong>。如形成森林后，乔木占据优势地位，但森林中仍有灌木、草本植物、苔藓等。</li>
<li>群落的演替是一个<strong>漫长但并非永无休止</strong>的过程，当群落演替到与环境处于平衡状态时，就以相对稳定的群落为发展的顶点。</li>
<li>群落演替最终都能达到其最高阶段形成顶极群落，但顶极群落并不一定是乔木阶段。演替的<strong>最高阶段受非生物环境的限制</strong>。恶劣的条件下，群落的演替一般不能达到最高的乔木阶段。</li>
</ol>
<h5 id="群落演替的特点">群落演替的特点</h5>
<ol type="1">
<li>演替是群落组成<strong>向着一定方向、具有一定规律、随时间而变化的<em>有序过程</em></strong>。因而它<strong>往往是连续变化的过程，是能预见的或可测的</strong>。</li>
<li><strong>演替是<em>生物和环境</em>反复相互作用、发生在时间和空间上的不可逆变化</strong>。</li>
<li><strong>演替使<em>群落的总能量增加、有机物总量增加、生物种类越来越多、群落的结构越来越复杂</em></strong>。</li>
<li>顶极群落是演替达到的最终稳定状态，顶极群落并不是绝对稳定的，而是<strong>处于不断变化的相对稳定状态</strong>。</li>
</ol>
<h5 id="群落演替的原因">群落演替的原因</h5>
<ol type="1">
<li>环境不断变化，为群落中某些物种提供有利的繁殖条件，而对另一些物种的生存产生不利影响。</li>
<li>生物本身不断进行繁殖、迁人或迁出。</li>
<li>群落内部由于生物的生命活动造成内部非生物环境改变。</li>
<li>生物种内和种间关系不断发生变化。</li>
<li>人类活动的影响。人类活动通常是有意识、有目的地进行的，因此人类活动对群落演替的影响有时会超过其他因素。
<ol type="1">
<li>人类的许多活动正影响着群落的演替。人类可以砍伐森林、填湖造地、捕杀动物，也可以封山育林、治理沙漠、管理草原，甚至可以建立人工群落。</li>
<li>人类活动往往会使群落演替按照不同于自然演替的速度和方向进行。</li>
<li>外来物种的引入。人类活动会有意或无意地将一些新物种引入到某一群落之中。在适宜的条件下，新物种会迅速成为优势种，破坏原有群落的稳定。</li>
<li>此外，垦殖荒原、围湖造田、森林砍伐、过度放牧等都会介入群落演替的过程。</li>
</ol></li>
</ol>
<h4 id="群落演替过程的判断">2. 群落演替过程的判断</h4>
<p>​ 群落演替的过程可人为地划分为三个阶段：</p>
<ol type="1">
<li><p><strong>侵入定居阶段</strong>（先锋群落阶段）：一些物种侵入裸地定居成功并改良了环境，为以后侵入的同种或异种物种创造有利条件。</p></li>
<li><p><strong>竞争平衡阶段</strong>：通过种内或种间竞争，优势物种定居并繁殖后代，劣势物种被排斥，相互竞争过程中共存下来的物种，在利用资源上达到相对平衡。</p></li>
<li><p><strong>相对稳定阶段</strong>：物种通过种间竞争，平衡地进入协调进化，资源利用更为充分有效，群落结构更加完善，有比较固定的物种组成和数量比例，群落结构复杂、层次多。
#### 3. 群落演替类型的判断</p></li>
<li><p>从起点上判断</p>
<ol type="1">
<li><p>从没有过植被或原有植被被彻底消灭的地方开始的演替是<strong>初生演替</strong>。</p></li>
<li><p>从只是失去了原有植被但土壤条件仍保留，甚至还保留了植物的种子或其他繁殖体的地方开始的演替是<strong>次生演替</strong>。</p></li>
</ol></li>
<li><p>从时间、速度上判断</p>
<ol type="1">
<li>经历的时间长，速度缓慢的是<strong>初生演替</strong>。</li>
<li>经历的时间短，速度较快的是<strong>次生演替</strong>。</li>
</ol></li>
</ol>]]></content>
      <categories>
        <category>High School</category>
        <category>Biology</category>
        <category>Ecology</category>
      </categories>
      <tags>
        <tag>School Notes</tag>
        <tag>High School</tag>
        <tag>Biology</tag>
      </tags>
  </entry>
  <entry>
    <title>种群及其动态</title>
    <url>/2022/04/03/biology/High%20School/b4%20ecology/P1%20%E7%A7%8D%E7%BE%A4%E5%8F%8A%E5%85%B6%E5%8A%A8%E6%80%81/</url>
    <content><![CDATA[Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
<h2 id="知识聚焦">知识聚焦</h2>
<p>​
任何物种都不可能以单一个体生存和繁衍，<strong>在一定的空间范围内，同种生物的所有个体形成的集合就是<em>种群</em></strong>。</p>
<ol type="1">
<li>同种生物、所有个体：同一个物种（不是同一类生物，如“鱼”、“杂草”……）。</li>
<li>一定的空间和时间：种群具有一定的时空限制，离开一定时空的种群不存在。</li>
<li>从生态学的观点来看，种群是生物繁殖的基本单位，也是组成生物群落的基本单位。从进化的观点来看，种群实生物进化的基本单位。</li>
</ol>
<h3 id="一种群的特征">一、种群的特征</h3>
<p>​ 种群的特征包括其<strong>数量特征与空间特征</strong>：</p>
<ol type="1">
<li>数量特征：<strong><em>种群密度、出生率和死亡率、迁入率和迁出率、年龄结构和性别比例</em></strong>。</li>
<li>空间特征：组成种群的个体在<strong>生活空间中的位置状态或布局</strong>。</li>
</ol>
<h4 id="种群密度">1. 种群密度</h4>
<p>​
种群在单位面积或单位体积中的个体数就是<strong><em>种群密度</em></strong>，是种群<strong><em>最基本</em>的数量特征</strong>，反映种群在一定时期和一定空间的数量，可用于预测预报农林害虫、渔业捕捞强度确定等领域。</p>
<p>​ 计算种群密度，可以使用：</p>
<ol type="1">
<li><p><strong>逐个计数法</strong>：针对<strong>分布范围小、个体较大</strong>的种群。</p></li>
<li><p><strong>估算法</strong>：针对<strong>分布范围较大、个体较小、数量较大且难以逐个计数</strong>的种群，如<strong>样方法和标记重捕法</strong>，又如黑光灯诱捕+估算。</p>
<blockquote>
<h4 id="样方法">样方法</h4>
<h5 id="适用范围">适用范围</h5>
<p>​
适用于大多数植物、某些昆虫卵以及<strong>活动范围小、活动能力弱</strong>的动物。</p>
<h5 id="取样法">取样法</h5>
<ol type="1">
<li><p><strong>五点取样法</strong>：当调查的总体为非长条形时，在总体中取五个样方（形状以正方形为宜）。该方法<strong>适用于个体分布较均匀情况</strong>。</p>
<figure>
<img src="https://raw.githubusercontent.com/PassionPenguin/picgo-database/main/image-20220403173723680.png" alt="五点取样法">
<figcaption aria-hidden="true">五点取样法</figcaption>
</figure></li>
<li><p><strong>等距取样法</strong>：当调查的总体为长条形时，现将调查总体均分为若干份，由抽样比例决定距离或间隔并抽取样方。</p>
<figure>
<img src="https://raw.githubusercontent.com/PassionPenguin/picgo-database/main/image-20220403173734579.png" alt="等距取样法">
<figcaption aria-hidden="true">等距取样法</figcaption>
</figure></li>
</ol>
<h5 id="注意事项">注意事项</h5>
<ol type="1">
<li>需要<strong>随机取样</strong>，不能掺入主观因素。</li>
<li>总面积大的地块相应样方需要多一些。</li>
<li>计数时，<strong>边角只取两边一角</strong>。</li>
<li>植物<strong>大小不同</strong>（动物<strong>活动性不同</strong>），<strong>样方的面积也应该不同</strong>。</li>
</ol>
</blockquote>
<blockquote>
<h4 id="标记重捕法">标记重捕法</h4>
<h5 id="适用范围-1">适用范围</h5>
<p>​ 适用于<strong>活动能力强、活动范围大</strong>的动物。</p>
<h5 id="计算公式">计算公式</h5>
<p>​ 种群数量 <span class="math inline"><em>N</em></span>、标记数 <span class="math inline"><em>a</em></span>、重捕数 <span class="math inline"><em>b</em></span> 与重捕中的标记数 <span class="math inline"><em>c</em></span> 关系： <span class="math inline">$N = \dfrac{ab}{c}$</span>。</p>
<h5 id="注意事项-1">注意事项</h5>
<ol type="1">
<li><strong>标记物或标记方法对动物寿命、行为不能有伤害</strong>。</li>
<li><strong>标记物不能过分醒目</strong>，否则会影响被标记动物与其他动物之间的关系（如影像种群关系或影响捕食关系）。</li>
<li><strong>标记物需要保留一定时间</strong>，在调查期间不能消失。</li>
<li>调查期间种群迁入迁出、出生死亡不能过于活跃。</li>
<li>在重捕前，被标记动物需要在种群中<strong>完全均匀分布</strong>。</li>
</ol>
</blockquote></li>
</ol>
<h4 id="其他种群数量特征">2. 其他种群数量特征</h4>
<p>​
<strong><em>出生率、死亡率</em></strong>指<strong>单位时间</strong>内新产生个体或死亡个体占该种群个体总数的比值。</p>
<p>​
<strong><em>迁入率、迁出率</em></strong>指<strong>单位时间</strong>内迁入或迁出的个体占该种群个体总数的比值。</p>
<p>​
种群的<strong><em>年龄结构</em></strong>指一个种群<strong>各年龄期的个体数目的比例</strong>，大致可以分为下图的三种类型（<strong>增长型、稳定型、衰退型</strong>）。</p>
<figure>
<img src="https://raw.githubusercontent.com/PassionPenguin/picgo-database/main/image-20220403173427178.png" alt="种群的年龄结构示意图">
<figcaption aria-hidden="true">种群的年龄结构示意图</figcaption>
</figure>
<p>​
<strong><em>性别比例</em></strong>指种群中<strong>雌雄个体数目的比例</strong>。</p>
<p>​
综上所述，种群密度是种群最基本的数量特征。种群的其他数量特征是影响种群密度的重要因素，其中出生率和死亡率、迁入率和迁出率直接决定种群密度，年龄结构影响出生率和死亡率，性别比例影响出生率，进而影响种群密度。</p>
<h3 id="二种群数量的变化">二、种群数量的变化</h3>
<p>​
种群数量的变化可以用<strong>增长率</strong>和<strong>增长速率</strong>来描述，前者指代种群在单位时间内净增加的个体数占原有个体数的比率，后者指代种群在单位时间内净增加的个体数量。</p>
<h4 id="种群的-j-形增长">1. 种群的 J 形增长</h4>
<p>​
自然界有类似细菌在理想条件下种群增长的形式，如果以时间为横坐标，种群数量为纵坐标画出曲线表示，曲线大致<strong>呈现
J 形</strong>，这种类型的种群增长称为 <strong>J
形增长</strong>，数学模型为 <span class="math inline"><em>N</em><sub><em>t</em></sub> = <em>N</em><sub>0</sub><em>λ</em><sup><em>t</em></sup></span>​。</p>
<p><img src="https://raw.githubusercontent.com/PassionPenguin/picgo-database/main/image-20220403182947283.png" alt="J 形曲线" style="width:256px;"></p>
<p><img src="https://raw.githubusercontent.com/PassionPenguin/picgo-database/main/image-20220403183430559.png" alt="J 形曲线增长速率" style="width:256px;"></p>
<p>​ J
形增长的特点是<strong>种群的增长率一定，且种群数量没有上限</strong>，反映种群增长的潜力或趋势，增长率
<span class="math inline"><em>λ</em> − 1</span>，增长速率不断变大。</p>
<h4 id="种群的-s-形增长">2. 种群的 S 形增长</h4>
<p>​
生态学家高斯做过单独培养大草履虫的实验，其增长一定时间后，种群数量趋于稳定，增长曲线呈现
S 形，这种类型的种群增长称为 S 形增长，数学模型为逻辑斯谛方程：<span class="math inline">$N_t=\dfrac{kN_0e^{rt}}{k +
N_0(e^{rt}-1)}$</span>（<span class="math inline"><em>k</em></span>
为环境容纳量，<span class="math inline"><em>N</em><sub>0</sub></span>
为种群数量的初始值，<span class="math inline"><em>r</em></span>
为常数）。</p>
<p><img src="https://raw.githubusercontent.com/PassionPenguin/picgo-database/main/image-20220403183227756.png" alt="S 形曲线" style="width: 256px"></p>
<p><img src="https://raw.githubusercontent.com/PassionPenguin/picgo-database/main/image-20220403183327623.png" alt="S 形曲线增长速率" style="width:256px;"></p>
<p>​ S 形增长的特点是种群数量在 <strong><span class="math inline">$0\sim\dfrac{K}{2}$</span>
时增长速率逐渐增大</strong>（<span class="math inline">$\dfrac{K}{2}$</span>
时增长速率取到<strong>最大值</strong>），随后不断降低，<strong>最终在
<span class="math inline"><em>K</em></span>
值上下波动，种群增长速率几乎为零</strong>。种群数量增长率逐渐减小，增长速率先增大再减小。</p>
<blockquote>
<h4 id="环境容纳量-k-值">环境容纳量 K 值</h4>
<p>​ 环境容纳量是指一定的环境条件所能维持的种群的最大数量，又称为 K
值。影响 K 值的因素包括食物、空间、气候、天敌、传染病、人类活动等：</p>
<ol type="1">
<li><p>环境遭到破坏时，K 值会下降；环境得到改善后，K
值会有所提升。</p></li>
<li><p>K
值并不是种群数量的最大值，而是保证环境不被破坏的前提下所能维持的种群最大数量。</p></li>
<li><p>在环境不遭到破坏的情况下，K
值会在平均值附近上下波动。当种群偏离平均值（一定范围）下，会通过负反馈调节机制让种群数量返回一定范围内。</p></li>
</ol>
<p>​ 环境容纳量的研究，可以：</p>
<ol type="1">
<li><strong>合理开发利用野生动植物资源</strong>，即控制种群数量在 <span class="math inline">$\dfrac{K}{2}$</span>
上下时能够得到<strong>最大的增长速率</strong>，以<strong><em>持续</em>获得最大收获量</strong>，而不影响资源再生。</li>
<li><strong>保护野生生物资源</strong>，可以提高野生生物的环境容纳量，其中最有效的措施是建立自然保护区，==就地保护是保护生物多样性最有效的措施，异地保护是对就地保护的补充==。</li>
<li><strong>防治有害生物</strong>，控制有害生物的环境容纳量在 <span class="math inline">$\dfrac{K}{2}$</span> 以下。</li>
</ol>
</blockquote>
<h4 id="探究实践培养液中酵母菌种群数量的变化-exp-培养液中酵母菌种群数量的变化">探究·实践：培养液中酵母菌种群数量的变化
| #exp-培养液中酵母菌种群数量的变化</h4>
<h5 id="问题">问题</h5>
<p>培养液中酵母菌种群的数量是怎样随时间变化的？</p>
<h5 id="材料用具">材料用具</h5>
<p>酵母菌、无菌马铃薯培养液或肉汤培养液、试管、血细胞计数板、滴管、显微镜等。讨论探究思路</p>
<p>在制订计划前，你需要思考以下问题，并与同学讨论。</p>
<ol type="1">
<li>怎样对酵母菌进行计数？</li>
</ol>
<p>​
（1）对一支试管中的培养液（可定为10mL）中的酵母菌逐个计数是非常困难的，可以采用抽样检测的方法：先将盖玻片放在血细胞计数板的计数室上，用吸管吸取培养液，滴于盖玻片边缘，让培养液自行渗入。多余的培养液用滤纸吸去。稍待片刻，待酵母菌全部沉降到计数室底部，将计数板放在载物台的中央，计数一个小方格内的酵母菌数量，再以此为根据，估算试管中的酵母菌总数。</p>
<p>​
盖玻片下的培养液厚度为0.1mm，请推导出将一个小方格范围内的酵母菌数目，换算成10mL培养液中酵母菌总数的公式。</p>
<p>​
（2）从试管中吸出培养液进行计数之前，建议你将试管轻轻振荡几次。这是为什么？</p>
<p>​ （3）如果一个小方格内酵母菌过多，难以数清，应当采取什么措施？</p>
<p>​ （4）对于压在小方格界线上的酵母菌，应当怎样计数？</p>
<ol start="2" type="1">
<li><p>本探究需要设对照吗？如果需要，请论对照组应怎样设计和操作；如果不需要，请说明理由。</p></li>
<li><p>要做重复实验吗？为什么？</p></li>
<li><p>怎样记录结果？记录表怎样设计？</p></li>
</ol>
<h5 id="注意事项-2">注意事项</h5>
<ol type="1">
<li><p>测定酵母菌种群数量变化是在恒定体积的培养液中进行的，与自然界中种群数量的变化有异。</p></li>
<li><p>由于酵母菌是单细胞微生物，在进行酵母菌计数时，必须在显微镜下进行，且不能准确计数、只能估算。</p></li>
<li><p>从试管中吸取培养液进行计数前，需将试管轻轻振荡几次，目的是使培养液中的酵母菌均匀分布，以保证估算的准确性，减少误差。</p></li>
<li><p>每天计数酵母菌的时间要固定。</p></li>
<li><p>若一个小方格内酵母菌过多，难以数清，要将培养液稀释一定倍数，再重新计数。</p></li>
<li><p>计数时，对于压在小方格界线上的酵母菌，应只计数相邻两边及其顶角的酵母菌，原则是“计上不计下，计左不计右”。</p></li>
<li><p>血细胞计数板的使用方法：先将盖玻片放在血细胞计数板的计数室上，用吸管吸取培养液，滴于盖玻片边缘，让培养液自行渗人。多余培养液用滤纸吸去。稍待片刻，待酵母菌全部沉降到计数室底部，将计数板放在载物台的中央，计数一个小方格内的酵母菌数量，再以此为根据，估算试管中的酵母菌总数。</p></li>
</ol>
<h4 id="影响种群数量的波动的因素">3. 影响种群数量的波动的因素</h4>
<ol type="1">
<li>出生率和死亡率、迁入率和迁出率、环境条件的改变（干旱、严冬等）、自身特征改变（种群自身密度）</li>
<li>种群外部因素，如捕食、寄生、种间竞争等种群间关系所致。</li>
</ol>]]></content>
      <categories>
        <category>High School</category>
        <category>Biology</category>
        <category>Ecology</category>
      </categories>
      <tags>
        <tag>School Notes</tag>
        <tag>High School</tag>
        <tag>Biology</tag>
      </tags>
  </entry>
  <entry>
    <title>生物技术的安全性与伦理问题</title>
    <url>/2022/03/30/biology/High%20School/b5%20bioengineering/P4%20%E7%94%9F%E7%89%A9%E6%8A%80%E6%9C%AF%E7%9A%84%E5%AE%89%E5%85%A8%E6%80%A7%E4%B8%8E%E4%BC%A6%E7%90%86%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<h2 id="知识聚焦">知识聚焦</h2>
<h3 id="一转基因产品的安全性">一、转基因产品的安全性</h3>
<h4 id="转基因生物的优点与缺点">1. 转基因生物的优点与缺点</h4>
<p>​ 转基因生物可以：</p>
<ol type="1">
<li>解决粮食短缺问题；</li>
<li>减少农药使用，从而减少环境污染；</li>
<li>节省生产成本，降低粮食售价；</li>
<li>增加食物营养，提高附加价值；</li>
<li>增加食物种类，提升食物品质；</li>
<li>提高生产效率，带动相关产业发展；</li>
</ol>
<p>​ 同时，具有如下缺点：</p>
<ol type="1">
<li>可能产生新病毒、新过敏原；</li>
<li>可能产生抗除草剂的杂草；</li>
<li>可能使疾病的传播跨物种；</li>
<li>可能会损害生物多样性；</li>
<li>可能干扰生态系统的稳定性；</li>
</ol>
<blockquote>
<h4 id="转基因生物安全问题原因">转基因生物安全问题原因</h4>
<ol type="1">
<li>对基因的结构、基因间相互作用以及基因的调控机制等都了解非常有限。</li>
<li>转移的基因虽然是功能已知的基因，但不少是异种生物的基因。</li>
<li>外源基因插入宿主基因组的位置随机，可能会出现无法意料的后果。</li>
</ol>
</blockquote>
<blockquote>
<h6 id="如何看待转基因技术">如何看待转基因技术？</h6>
<ol type="1">
<li>认识到转基因技术的广阔前景与其在医药、农业生产等领域上的重大意义。</li>
<li>正视转基因问题带来的安全性问题，认识到个别有害转基因生物的危害性，趋利避害，不因噎废食。</li>
<li>完善相关政策法规，最大程度地保证转基因技术和产品的安全性。</li>
<li>增强科学家的法治意识与科学研究道德水平</li>
</ol>
</blockquote>
<h3 id="二关注生殖性克隆人">二、关注生殖性克隆人</h3>
<p>​
<strong><em>生殖性克隆</em></strong>指用于<strong>生育、产生新个体</strong>，是个体水平的克隆行为。<strong><em>治疗性克隆</em></strong>指用于<strong>治疗人类疾病</strong>的细胞（或组织、器官）水平的克隆行为。两者均为<strong>无性生殖</strong>，产生新个体或新细胞、组织、器官的<strong>遗传信息相同</strong>。</p>
<p>​
我国政府<strong>不赞成、不允许、不支持、不接受</strong>任何生殖性克隆人的实验，不反对治疗性克隆。</p>
<h3 id="三禁止生物武器">三、禁止生物武器</h3>
<p>​
生物武器包括<strong>致病菌类、病毒类和生化毒剂类</strong>，具有<strong>致命性、传染性强、生物专一性、面积效应大、危害时间长、难以发现</strong>的特点，同时生存繁殖与死亡受到环境约束，不易控制。</p>]]></content>
      <categories>
        <category>High School</category>
        <category>Biology</category>
        <category>Bioengineering</category>
      </categories>
      <tags>
        <tag>School Notes</tag>
        <tag>High School</tag>
        <tag>Biology</tag>
      </tags>
  </entry>
  <entry>
    <title>基因工程</title>
    <url>/2022/03/30/biology/High%20School/b5%20bioengineering/P3%20%E5%9F%BA%E5%9B%A0%E5%B7%A5%E7%A8%8B/</url>
    <content><![CDATA[Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
<h2 id="知识聚焦">知识聚焦</h2>
<p>​
<strong><em>基因工程</em></strong>是指按照人们的愿望，通过<strong>转基因</strong>等技术，<strong>赋予生物新的特性</strong>，创造出更符合人们需要的新的生物类型和生物产品。从技术操作层面看，由于基因工程是在
DNA 分子水平上进行设计和施工的，因此又叫<strong>重组 DNA
技术</strong>。</p>
<h3 id="一基因工程的诞生与发展">一、基因工程的诞生与发展</h3>
<h4 id="基因工程的诞生与发展">1. 基因工程的诞生与发展</h4>
<p>​ 1944 年，艾弗里等人通过肺炎链球菌的转化实验，不仅证明了遗传物质是
DNA，还证明了 DNA 可以在同种生物的不同个体之间转移。</p>
<p>​ 1950 年，埃德曼发明了一种测定氨基酸序列的方法，2
年后，桑格首次完成了对胰岛素氨基酸序列的测定。</p>
<p>​ 1953 年，沃森和克里克建立了 DNA
双螺旋结构模型，提出了遗传物质自我复制的假说。</p>
<p>​ 1958 年，梅塞尔森和斯塔尔用实验证明了 DNA
的半保留复制，随后不久，克里克提出中心法则。</p>
<p>​ 1961 年，尼伦伯格和马太破译了第一个编码氨基酸的密码子，1966 年，64
个密码子均被成功破译。</p>
<p>​ 1967 年，科学家发现，在细菌拟核 DNA
之外的质粒有自我复制能力，并可以在细菌细胞之间转移。</p>
<p>​ 1970 年，科学家在细菌中发现了第一个限制性内切核酸酶（限制酶）。70
年代初，多种限制酶、DNA 连接酶和逆转录酶被相继发现，为 DNA
的切割、连接和功能基因的获得创造了条件。</p>
<p>​ 1972 年，伯格首先在体外进行了 DNA
改造的研究，成功地构建了第一个体外重组 DNA 分子。</p>
<p>​ 1973 年，科学家证明质粒可以作为基因工程的载体，构建重组
DNA，导入受体细胞，使外源基因在原核细胞中成功表达，并实现物种间的基因交流。至此，基因工程正式面世。</p>
<p>​ 1977 年，桑格等科学家发明了 DNA
序列分析的方法，为基因序列图的绘制提供了可能，此后，DNA
合称仪的面世为体外合成 DNA 提供了方便。</p>
<p>​ 1982 年，第一个基因工程药物——重组人胰岛素被批准上市。</p>
<p>​ 1983
年，科学家采用农杆菌转化法培育出世界上第一例转基因烟草，此后，基因工程进入了迅速发展的阶段。</p>
<p>​ 1984 年，我国科学家朱作言领导的团队培育出世界上第一条转基因鱼。</p>
<p>​ 1985 年，穆里斯等人发明 PCR，为获取目的基因提供了有效手段。</p>
<p>​ 1990 年，人类基因组计划启动，2003
年，该计划的测序任务顺利完成。</p>
<p>​ 21
世纪以来，科学家发明了多种高通量测序技术，可以实现低成本测定大量核酸序列，加速了人们对基因组序列的了解。</p>
<h4 id="基因工程的理论基础">2. 基因工程的理论基础</h4>
<ol type="1">
<li>DNA 是主要遗传物质的证明。</li>
<li>DNA 双螺旋结构和中心法则的确立。</li>
<li>遗传密码的破译。</li>
</ol>
<h3 id="二重组-dna-技术的基本工具">二、重组 DNA 技术的基本工具</h3>
<p>​ 为了实现对 DNA
分子进行切割、改造与拼接，至少需要用到三种工具，限制性内切核酸酶、DNA
连接酶与基因进入受体细胞的载体。</p>
<h4 id="限制性内切核酸酶">1. 限制性内切核酸酶</h4>
<p>​ 切割 DNA
分子的工具是<strong><em>限制性内切核酸酶</em></strong>，又称为<strong><em>限制酶</em></strong>，主要从<strong>原核生物</strong>中分离纯化得到，可以识别双链
DNA
分子的特定核苷酸序列，并且使每一条链的特定位置的<strong>磷酸二酯键</strong>断开。</p>
<p>​ 大部分的限制酶识别序列由 6 个核苷酸组成，也有少数为 4 个、8
个或其他数量。DNA 分子经限制酶切割产生的 DNA
片段末端通常有两种形式（黏性末端、平末端）：</p>
<figure>
<img src="https://raw.githubusercontent.com/PassionPenguin/picgo-database/main/EcoRI.png" alt="EcoRI | 黏性末端">
<figcaption aria-hidden="true">EcoRI | 黏性末端</figcaption>
</figure>
<figure>
<img src="https://raw.githubusercontent.com/PassionPenguin/picgo-database/main/DraI" alt="DraI | 平末端">
<figcaption aria-hidden="true">DraI | 平末端</figcaption>
</figure>
<h4 id="dna-连接酶">2. DNA 连接酶</h4>
<p>​ 将切下来的 DNA 片段拼接成新的分子依靠 <strong><em>DNA
连接酶</em></strong>。在基因工程操作中主要有两类 DNA
连接酶，一类是大肠杆菌中分离的 <em>E.coli</em> DNA
连接酶（<strong>只可以</strong>连接黏性末端），一类是 T4 噬菌体分离的 T4
DNA
连接酶（可以连接黏性末端，也可以<strong>较低效率</strong>连接平末端）。</p>
<blockquote>
<h4 id="与-dna-相关的酶">与 DNA 相关的酶</h4>
<table>
<colgroup>
<col style="width: 14%">
<col style="width: 12%">
<col style="width: 10%">
<col style="width: 62%">
</colgroup>
<thead>
<tr class="header">
<th>名称</th>
<th>作用部位</th>
<th>作用底物</th>
<th>作用结果</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>限制酶</td>
<td>磷酸二酯键</td>
<td>DNA 分子</td>
<td>将 DNA 双链中的特定部位断开。</td>
</tr>
<tr class="even">
<td>DNA 连接酶</td>
<td>磷酸二酯键</td>
<td>DNA 分子</td>
<td>将两个 DNA 片段连接为一个 DNA 分子</td>
</tr>
<tr class="odd">
<td>DNA 聚合酶</td>
<td>磷酸二酯键</td>
<td>脱氧核苷酸</td>
<td>将双链 DNA 分子局部解旋，并将单个脱氧核苷酸依次连接到 mRNA
单链末端。</td>
</tr>
<tr class="even">
<td>DNA （水解）酶</td>
<td>磷酸二酯键</td>
<td>DNA 分子</td>
<td>将 DNA 片段水解为单个脱氧核苷酸。</td>
</tr>
<tr class="odd">
<td>解旋酶</td>
<td>碱基对间氢键</td>
<td>DNA 分子</td>
<td>将双链 DNA 分子局部解旋为单链。</td>
</tr>
<tr class="even">
<td>RNA 聚合酶</td>
<td>磷酸二酯键</td>
<td>核糖核苷酸</td>
<td>将双链 DNA 分子局部解旋，将单个核糖核苷酸依次连接到 mRNA
单链末端。</td>
</tr>
</tbody>
</table>
</blockquote>
<h4 id="基因进入受体细胞的载体">3. 基因进入受体细胞的载体</h4>
<p>​
在基因工程中，我们常用<strong><em>质粒</em>、噬菌体、动植物病毒</strong>等运输基因进入受体细胞。质粒是一种裸露的、结构简单并独立于真核细胞细胞核或原核细胞拟合
DNA 外的，具有自我复制能力的环状双链 DNA
分子，具有一个到多个限制酶切割位点供外源 DNA
片段（基因）插入，能在进入细胞后自我复制或整合到受体 DNA
上与之同步复制。基因工程中通常使用改造过的具有特殊标记基因的质粒，以便对重组
DNA 分子进行筛选。</p>
<blockquote>
<h4 id="载体需要具备的条件">载体需要具备的条件</h4>
<ol type="1">
<li>能够在受体内稳定保存并大量复制。</li>
<li>有一个到多个限制酶切割位点，以便与外源基因连接。</li>
<li>具有某些标记基因，便于筛选。</li>
<li>对受体细胞无伤害。</li>
</ol>
</blockquote>
<h4 id="探究实践dna-的粗提取与鉴定-exp-dna-的粗提取与鉴定">4.
探究·实践：DNA 的粗提取与鉴定 | #exp-DNA 的粗提取与鉴定</h4>
<h5 id="实验原理">实验原理</h5>
<p>利用 DNA、RNA、蛋白质和脂质等在物理和化学性质方面存在的差异，提取
DNA，去除其他成分。</p>
<ol type="1">
<li>DNA 的溶解性：不溶于酒精，但是蛋白质溶于酒精（初步分离）。在不同浓度
<span class="math inline">$\ce{NaCl}$</span>
溶液中的溶解度不同（可用于溶解 DNA 或使 DNA 析出 而分离提纯）。</li>
<li>DNA 的鉴定原理：沸水浴条件下，DNA
可以与二苯胺试剂反应呈现蓝色。</li>
</ol>
<h5 id="实验步骤">实验步骤</h5>
<p>DNA
提取分为三个基本步骤，每个步骤的具体方法可根据样品种类、影响提取的物质以及后续步骤的不同而有区别。</p>
<ol type="1">
<li><p>得到细胞裂解液：</p>
<ol type="1">
<li>利用研磨（加入研磨液）得到细胞裂解液。</li>
</ol>
<blockquote>
<h4 id="研磨液成分">研磨液成分</h4>
<p>​ 研磨方法研磨缓冲液有如下成分：</p>
<ol type="1">
<li>Tris：三羟甲基氨基甲烷，pH 缓冲剂，避免 DNA 在 pH 变化时变性。</li>
<li>SDS：十二烷基硫酸钠，可与蛋白质形成复合物，裂解细胞。</li>
<li>EDTA：乙二胺四乙酸，可以络合二价金属离子，抑制 DNA
水解酶的活性。</li>
<li>NaCl：可以与带负电的 DNA 结合，增强极性，促进 DNA 的溶解。</li>
</ol>
</blockquote>
<ol start="2" type="1">
<li>利用裂解缓冲液，在 56℃ 水浴 30min，得到细胞裂解液。</li>
</ol>
<blockquote>
<h4 id="裂解缓冲液">裂解缓冲液</h4>
<p>​ 使用裂解法的裂解缓冲液有如下成分：</p>
<ol type="1">
<li>Tris：三羟甲基氨基甲烷，pH 缓冲剂，避免 DNA 在 pH 变化时变性。</li>
<li>SDS：十二烷基硫酸钠，可与蛋白质形成复合物，裂解细胞。</li>
<li>EDTA：乙二胺四乙酸，可以络合二价金属离子，抑制 DNA
水解酶的活性。</li>
<li>NaCl：可以与带负电的 DNA 结合，增强极性，促进 DNA 的溶解。</li>
<li>RNA 酶：水解 RNA。</li>
<li>蛋白酶 K：来源于白色链球菌，在 SDS 溶液中活性稳定，可以水解与 DNA
结合的组蛋白，释放 DNA。</li>
</ol>
</blockquote></li>
<li><p>纯化 DNA：</p>
<ol type="1">
<li>将 DNA 在冷乙醇或异丙醇中沉淀，因为 DNA
在醇中不可溶而黏在一起，这一步也能除掉盐分。或者也可以 1500 转离心
5min，取上清液，用玻璃棒沿一个方向搅拌，卷起丝状物，用滤纸吸干水分或离心提取，晾干粗提取的
DNA，或 10000 转离心 5min，倒掉废液，将管底沉淀物晾干。</li>
<li>使用苯酚-氯仿混合溶液，12000 转离心 5min，得到含 DNA
的上清液，使用移液器吸出后加入两倍无水乙醇，离心沉淀析出的 DNA，再换 70%
乙醇漂洗，无菌水溶解，得到纯化 DNA 溶液。</li>
</ol>
<blockquote>
<h4 id="酚氯法提取">酚氯法提取</h4>
<p>​
苯酚是强烈的蛋白质变性剂，可以使蛋白质沉淀。氯仿是有机溶剂，可以萃取脂溶性杂质。</p>
</blockquote>
<ol start="3" type="1">
<li>吸附柱法：在细胞裂解液中加入 200μL
无水乙醇，混匀，转移到已经装入收集管的吸附柱中，12000 转离心
1min，倒掉废液，用含有钠离子和乙醇的漂洗液漂洗两次洗去蛋白质、糖类等杂质，将吸附柱放入一个新的
1.5mL 离心管中，敞开晾干，去除乙醇避免对后续酶促反应有所影响。加入 50μL
无菌水或 TE 缓冲液（Tris-EDTA 可防止 DNA 降解），12000 转离心
1min，得到纯化 DNA 上清液。</li>
</ol></li>
<li><p>鉴定 DNA：</p>
<ol type="1">
<li><p>二苯胺试剂鉴定：取两支试管，分别加入 <span class="math inline">2<em>m</em><em>o</em><em>l</em>/<em>L</em></span> 的
<span class="math inline">$\ce{NaCl}$</span> 5mL，将粗提取的 DNA
溶于其中一支试管，并分别添加二苯胺试剂各 4mL，混合均匀后放入沸水水浴加热
5min，等待冷却后比较颜色变化。</p>
<figure>
<img src="https://raw.githubusercontent.com/PassionPenguin/picgo-database/main/200px-Diphenylamine_200.svg.png" alt="二苯胺">
<figcaption aria-hidden="true">二苯胺</figcaption>
</figure></li>
<li><p>琼脂糖凝胶电泳鉴定：见 [[self], 探究·实践：DNA
片段的扩增与电泳鉴定, 探究·实践：DNA 片段的扩增与电泳鉴定]。</p></li>
</ol></li>
</ol>
<h3 id="三基因工程的基本操作程序">三、基因工程的基本操作程序</h3>
<h4 id="目的基因的筛选与获取">1. 目的基因的筛选与获取</h4>
<p>​ 目的基因可以从自然界中已有的物种分离，也可以使用人工方法合成：</p>
<ol type="1">
<li>从基因文库中获取。</li>
<li>利用 PCR 技术扩增。</li>
<li>人工合成（基因片段较小、序列已知）。</li>
</ol>
<h4 id="基因表达载体的构建">2. 基因表达载体的构建</h4>
<p>​ 单独 DNA
片段目的基因在受体细胞中<strong>无法稳定遗传</strong>，为了让其可以稳定存在并传递到下一代，发挥目的基因的作用，需要其他控制元件（启动子、终止子、标记基因等），<strong><em>基因表达载体的构建是基因工程的核心工作</em></strong>。</p>
<p>​ 启动子与终止子都是一段具有特殊结构的 DNA
片段，分别位于基因的上下游，紧挨转录的起始、终止位点，是 <strong><em>RNA
聚合酶识别和结合的部位</em></strong>，由此才能驱动基因转录为
mRNA，最终表达为蛋白质。</p>
<p>​
在基因表达载体的过程中，一般用同种限制酶切割目的基因和载体以获得相同的末端，但最好用两种限制酶切割载体与目的基因，避免载体与载体之间、目的基因与目的基因之间的自身连接以及目的基因与载体基因之间的反向连接。</p>
<h4 id="导入目的基因进入受体细胞">3. 导入目的基因进入受体细胞</h4>
<p>​
<strong><em>转化</em>指目的基因进入受体细胞并在其中维持稳定和表达的过程</strong>，根据受体细胞种类决定转化方法：</p>
<ol type="1">
<li><p>导入植物细胞：农杆菌转化法（常用双子叶）、花粉管通道法。</p>
<p>导入植物细胞时受体可以是受精卵或体细胞（都具有全能性）。</p></li>
<li><p>将目的基因导入动物细胞：显微注射法（受精卵）。</p>
<p>导入动物细胞时，受体一般是受精卵（全能性高）。</p></li>
<li><p>将目的基因导入受体细胞微生物细胞：<span class="math inline">$\ce{Ca^2+}$</span> 处理法（感受态细胞）。</p>
<p>大肠杆菌与酵母菌都可以用作受体细胞，但是基于酵母菌具备多种细胞器，在生产需要加工和分泌的蛋白质时，酵母菌比大肠杆菌有优势。</p></li>
</ol>
<h4 id="目的基因的检测与鉴定">4. 目的基因的检测与鉴定</h4>
<ol type="1">
<li><strong>分子水平</strong>检测：
<ol type="1">
<li>检测目的基因是否插入转基因生物的染色体 DNA 上：PCR 等技术。</li>
<li>检测目的基因是否转录出 mRNA：PCR 等技术。</li>
<li>检测目的基因是否翻译为蛋白质：抗原——抗体杂交技术。</li>
</ol></li>
<li><strong>个体生物学水平</strong>鉴定：
<ol type="1">
<li>进行害虫或病原体的接种实验。</li>
<li>检测转基因产品的功能活性是否与天然产品相同。</li>
</ol></li>
</ol>
<h4 id="探究实践dna-片段的扩增与电泳鉴定-exp-探究实践dna-片段的扩增与电泳鉴定">5.
探究·实践：DNA 片段的扩增与电泳鉴定 | #exp-探究·实践：DNA
片段的扩增与电泳鉴定</h4>
<h5 id="实验原理-1">实验原理</h5>
<ol type="1">
<li>DNA 片段扩增：DNA 片段可以在 DNA 聚合酶的催化下扩增。</li>
<li>电泳鉴定：带电的 DNA
片段可以在外加电流电场作用下定向移动，移动距离与荷质比相关。</li>
</ol>
<h5 id="实验步骤-1">实验步骤</h5>
<ol type="1">
<li><p>将 PCR 所需试剂从 -20℃
环境中取出，放在冰盒上等待融化，避免酶、引物等在室温下失活、降解。</p></li>
<li><p>在冰上，向 200μL PCR 管中按照配方将试剂（依据雄性型染色体 Y
上雄性性别决定基因基因 SRY 设计的，基因大小约 600bp）依次足量加入：</p>
<ol type="1">
<li><p>无菌水 9.5μL；</p></li>
<li><p>正向引物 1μL；</p></li>
<li><p>反向引物 1μL；</p></li>
<li><p>模板 DNA 5μL；</p></li>
<li><p>10XBuffer 2.5μL；</p></li>
<li><p>dNTP 2.5μL；</p>
<blockquote>
<h4 id="dna-合成原料">DNA 合成原料</h4>
<p>​ 在 PCR 技术中，使用的是脱氧核苷三磷酸 dNTP
作为原料供合成互补链，而非如在生物体内，由脱氧核苷酸 dNMP
在磷酸激酶作用下逐步转化为脱氧核苷三磷酸。</p>
</blockquote></li>
<li><p><span class="math inline">$\ce{MgCl2}$</span> 2.5μL；</p></li>
<li><p>Taq 酶 1μL；</p></li>
</ol></li>
<li><p>将 PCR 管在离心机上稍微甩一下使挂在管壁上的液体全部甩下，放入 PCR
仪的加热模块上，盖上盖子，拧紧热盖（105℃），避免反应体系的液体蒸发凝结在管盖（或加入适量无菌石蜡油）。</p>
<ol type="1">
<li>5min 95℃ 预变性。</li>
<li>30s 95℃ 变性（<strong><em>DNA 解旋</em></strong>）。</li>
<li>45s 56℃ 复性（引物结合到互补 DNA 上）。</li>
<li>1min 72℃ 延伸（耐高温的 DNA
聚合酶从引物起始进行互补链的合成）。</li>
<li>重复上述 2、3、4 步骤 30 次。</li>
<li>在 72 ℃环境下保持 10min，补延伸。</li>
<li>放入 4℃ 冰箱中保存，避免 DNA 降解。</li>
</ol></li>
<li><p>称取 1g 琼脂糖粉，加入 99mL TAE
缓冲液（Tris+乙酸+EDTA）的锥形瓶中，封口后放入微波炉中加热直至琼脂糖粉完全溶解。</p></li>
<li><p>冷却，加入 10μL 10000X 浓缩的核酸染料（以前常用溴化乙锭
EB，现常用 SYBR Red 或 SYBR
Green），混匀后，倒入制胶模具中，插入制胶梳，制作点样孔，待冷却凝固后，拔出制胶梳。连底壳一并取出放入
TAE 缓冲液电泳槽中，使点样孔靠近负极一侧。</p></li>
<li><p>将 5μL 基因组 DNA 或 PCR 产物与 1μL 6X
载样缓冲液（甘油+Tris+EDTA+溴酚蓝）混合，加入到点样孔中（预留第一孔，加入已知
bp 数的 DNA 标记）。</p></li>
<li><p>盖上电泳槽盖子，检查装置后，开启电源（8V/cm），待前沿指示剂到
<span class="math inline">$\dfrac{2}{3}$</span>
后，停止电泳，取出凝胶，放入紫外凝胶成像仪中观察实验结果。</p></li>
</ol>
<blockquote>
<h4 id="rna-逆转录为-cdna-过程">RNA 逆转录为 cDNA 过程</h4>
<ol type="1">
<li><p>逆转录酶以 RNA 为模板合成一条与 RNA 互补的 DNA 单链，形成 RNA-DNA
杂交分子。</p></li>
<li><p>核糖核酸酶 H RNaseH 使 RNA-DNA 杂交分子中的 RNA
链降解，使之变成单链的 DNA。</p></li>
<li><p>以单链 DNA 为模板，在 DNA 聚合酶的作用下，合成另一条互补的 DNA
链，构成双链结构。</p></li>
</ol>
<p>​ 因为模板 RNA 中<strong>不存在</strong> DNA
分子中含有的<strong>启动子与终止子序列</strong>，所以得到的基因与基因组文库中的得到的基因不同。</p>
</blockquote>
<h4 id="基因工程的应用">6. 基因工程的应用</h4>
<ol type="1">
<li>农牧业应用：提高农作物<strong>抗逆能力</strong>，改良农作物品质，提高动物<strong>生长速率</strong>，改善畜产品品质。
<ol type="1">
<li>转基因抗虫、抗病、抗逆植物，改良植物品质。</li>
<li>提高动物生长速率，改善畜产品品质。</li>
</ol></li>
<li>医药领域应用：
<ol type="1">
<li>用转基因动植物、微生物生产药物（<strong>蛋白质</strong>）。</li>
<li>用转基因动物作<strong>器官移植的供体</strong>（缓解或解决免疫排斥反应）。</li>
<li>基因治疗：导入正常基因进入人体内，使该基因的表达产物发挥功能，<strong><em>是治疗遗传病的最有效手段</em></strong>，但常用的体细胞基因治疗基本无法遗传。</li>
</ol></li>
</ol>
<h3 id="四蛋白质工程的原理与应用">四、蛋白质工程的原理与应用</h3>
<p>​
基因工程使用的目的基因是自然界中已有的基因，只能控制合成自然界中已有的蛋白，只是转移了蛋白质合成的场所。</p>
<p>​ <strong>蛋白质工程遵循<em>中心法则</em></strong>，<strong>从 DNA 到
mRNA 到 蛋白质 到 折叠产生功能</strong>，按照：</p>
<ol type="1">
<li>从预期蛋白质功能出发。</li>
<li>设计预期的蛋白质结构。</li>
<li>推测应有的氨基酸序列。</li>
<li>找到并改变相对应的脱氧核苷酸序列，或合成新基因，创造自然界中不存在的蛋白质。</li>
</ol>
<p>​
蛋白质工程是基因工程基础上延伸出来的第二代基因工程，基因工程中利用的某些酶需要通过蛋白质工程进行修饰改造。</p>
<p>​
从蛋白质反推目的基因与逆转录得到目的基因结构不一定相同，因为<strong>密码子具有简并性，氨基酸可以由多种密码子决定</strong>。</p>]]></content>
      <categories>
        <category>High School</category>
        <category>Biology</category>
        <category>Bioengineering</category>
      </categories>
      <tags>
        <tag>School Notes</tag>
        <tag>High School</tag>
        <tag>Biology</tag>
      </tags>
  </entry>
  <entry>
    <title>高中古诗文背诵推荐篇目</title>
    <url>/2022/03/27/chinese/High%20School/Classical%20Chinese%20Literature%20and%20Poetry/%E5%8F%A4%E8%AF%97%E6%96%87%E8%83%8C%E8%AF%B5%E6%8E%A8%E8%8D%90%E7%AF%87%E7%9B%AE/</url>
    <content><![CDATA[<h2 id="课程标准附录一高中古诗文背诵推荐篇目">课程标准附录一：高中古诗文背诵推荐篇目</h2>
<h3 id="文言文32-篇">文言文（32 篇）</h3>
<h4 id="一必修10-篇">（一）必修（10 篇）</h4>
<ol type="1">
<li>《论语》十二章（“人而不仁”“朝闻道”“君子喻于义”“见贤思齐焉”“质胜文则野”“士不可以不弘毅”“譬如为山”“知者不惑”“有一言而可以终身行之者乎”“小子何莫学夫《诗》”“君子食无求饱”“克己复礼为仁”）</li>
<li>劝学（学不可以已……用心躁也） 《荀子》</li>
<li>屈原列传（屈平疾王听之不聪也……虽与日月争光可也） 司马迁</li>
<li>谏太宗十思疏 魏 征</li>
<li>师说 韩 愈</li>
<li>阿房宫赋 杜 牧</li>
<li>六国论 苏 洵</li>
<li>答司马谏议书 王安石</li>
<li>赤壁赋 苏 轼</li>
<li>项脊轩志 归有光</li>
</ol>
<h4 id="二选择性必修10-篇">（二）选择性必修（10 篇）</h4>
<ol type="1">
<li>子路、曾晳、冉有、公西华侍坐 《论语》</li>
<li>报任安书（古者富贵而名摩灭……难为俗人言也） 司马迁</li>
<li>过秦论（上） 贾 谊</li>
<li>礼运（大道之行也……是谓大同） 《礼记》</li>
<li>陈情表 李 密</li>
<li>归去来兮辞（并序） 陶 潜</li>
<li>种树郭橐驼传 柳宗元</li>
<li>五代史伶官传序 欧阳修</li>
<li>石钟山记 苏 轼</li>
<li>登泰山记 姚 鼐</li>
</ol>
<h4 id="三选修12-篇">（三）选修（12 篇）</h4>
<ol type="1">
<li>《老子》八章（第八章”上善若水”；第十二章”五色令人目盲”；第十五章”古之善为士者”；第二十二章”曲则全”；第二十四章”跂者不立”；第二十七章”善行无辙迹”；第三十三章”知人者智”；第八十一章”信言不美”）</li>
<li>季氏将伐颛臾 《论语》</li>
<li>大学（古之欲明明德于天下者……壹是皆以修身为本） 《礼记》</li>
<li>中庸（喜怒哀乐之未发……万物育焉；博学之……人十能之，己千之）《礼记》</li>
<li>《孟子》一则（敢问夫子恶乎长……则不能也）</li>
<li>逍遥游（惠子谓庄子曰……则夫子犹有蓬之心也夫） 《庄子》</li>
<li>谏逐客书 李 斯</li>
<li>兰亭集序 王羲之</li>
<li>滕王阁序 王 勃</li>
<li>黄冈竹楼记 王禹偁</li>
<li>上枢密韩太尉书 苏 辙</li>
<li>古代文论选段
<ol type="1">
<li>毛诗序（诗者，志之所之也……不知手之舞之足之蹈之也）</li>
<li>典论·论文（盖文章，经国之大业……而声名自传于后） 曹 丕</li>
<li>诗品序（若乃春风春鸟……故曰：“《诗》可以群，可以怨。”）锺 嵘</li>
<li>与元九书（感人心者……华声，实义） 白居易</li>
<li>题画（江馆清秋……独画云乎哉） 郑 燮</li>
<li>人间词话（词以境界为最上……自有名句；境非独谓景物也……否则谓之无；古今之成大事业、大学问者……恐为晏欧诸公所不许也）
王国维</li>
</ol></li>
</ol>
<h3 id="诗词曲40-首">诗词曲（40 首）</h3>
<ol type="1">
<li><p>静女 《诗经·邶风》</p></li>
<li><p>无衣 《诗经·秦风》</p></li>
<li><p>离骚（帝高阳之苗裔兮……来吾道夫先路） 屈 原</p></li>
<li><p>涉江采芙蓉 《古诗十九首》</p></li>
<li><p>短歌行 曹 操</p></li>
<li><p>归园田居（其一） 陶 潜</p></li>
<li><p>拟行路难（其四） 鲍 照</p></li>
<li><p>春江花月夜 张若虚</p></li>
<li><p>山居秋暝 王 维</p></li>
<li><p>蜀道难 李 白</p></li>
<li><p>梦游天姥吟留别 李 白</p></li>
<li><p>将进酒 李 白</p></li>
<li><p>燕歌行 高 适</p></li>
<li><p>蜀相 杜 甫</p></li>
<li><p>客至 杜 甫</p></li>
<li><p>登高 杜 甫</p></li>
<li><p>登岳阳楼 杜 甫</p></li>
<li><p>琵琶行（并序） 白居易</p></li>
<li><p>李凭箜篌引 李 贺</p></li>
<li><p>菩萨蛮（小山重叠金明灭） 温庭筠</p></li>
<li><p>锦瑟 李商隐</p></li>
<li><p>虞美人（春花秋月何时了） 李 煜</p></li>
<li><p>望海潮（东南形胜） 柳 永</p></li>
<li><p>桂枝香·金陵怀古 王安石</p></li>
<li><p>江城子·乙卯正月二十日夜记梦 苏 轼</p></li>
<li><p>念奴娇·赤壁怀古 苏 轼</p></li>
<li><p>登快阁 黄庭坚</p></li>
<li><p>鹊桥仙（纤云弄巧） 秦 观</p></li>
<li><p>苏幕遮（燎沉香） 周邦彦</p></li>
<li><p>声声慢（寻寻觅觅） 李清照</p></li>
<li><p>书愤（早岁那知世事艰） 陆 游</p></li>
<li><p>临安春雨初霁 陆 游</p></li>
<li><p>念奴娇·过洞庭 张孝祥</p></li>
<li><p>永遇乐·京口北固亭怀古 辛弃疾</p></li>
<li><p>菩萨蛮·书江西造口壁 辛弃疾</p></li>
<li><p>青玉案·元夕 辛弃疾</p></li>
<li><p>贺新郎（国脉微如缕） 刘克庄</p></li>
<li><p>扬州慢（淮左名都） 姜 夔</p></li>
<li><p>长亭送别（【正宫】【端正好】） 王实甫</p></li>
<li><p>朝天子·咏喇叭 王 磐</p></li>
</ol>
<h2 id="古诗文清单">古诗文清单</h2>
<h3 id="一文言文">一、文言文</h3>
<h4 id="论语十二章">《论语》十二章</h4>
<p>子曰：“君子食无求饱，居无求安，敏于事而慎于言，就有道而正焉，可谓好学也已。”（《学而》）</p>
<p>子曰：“人而不仁，如礼何？人而不仁，如乐何？”（《八佾》）</p>
<p>子曰：“朝闻道，夕死可矣。”（《里仁》）</p>
<p>子曰：“君子喻于义，小人喻于利。”（《里仁》）</p>
<p>子曰：“见贤思齐焉，见不贤而内自省也。”（《里仁》）</p>
<p>子曰：“质胜文则野，文胜质则史。文质彬彬，然后君子。”（《雍也》）</p>
<p>曾子曰：“士不可以不弘毅，任重而道远。”仁以为己任，不亦重乎？死而后已，不亦远乎？“（《泰伯》）</p>
<p>子曰：“譬如为山，未成一篑，止，吾止也。”譬如平地，虽覆一篑，进，吾往也。“（《子罕》）</p>
<p>子曰：“知者不惑，仁者不忧，勇者不惧。”（《子罕》）</p>
<p>颜渊问仁。子曰：“克己复礼为仁。一日克己复礼，天下归仁焉。”为仁由己，而由人乎哉？“颜渊曰：”请问其目？“子曰：”非礼勿视，非礼勿听，非礼勿言，非礼勿动。“颜渊曰：”回虽不敏，请事斯语矣。“（《颜渊》）</p>
<p>子贡问曰：“有一言而可以终身行之者乎？”子曰：“其’恕’乎！己所不欲，勿施于人。”（《卫灵公》）</p>
<p>子曰：“小子何莫学夫《诗》？”《诗》可以兴，可以观，可以群，可以怨。“迩之事父，远之事君。多识于鸟兽草木之名。”（《阳货》）</p>
<h4 id="劝学">劝学</h4>
<p>君子曰：学不可以已。</p>
<p>青，取之于蓝，而青于蓝；冰，水为之，而寒于水。木直中绳，（车柔）以为轮，其曲中规。虽有槁暴，不复挺者，（车柔）使之然也。故木受绳则直，金就砺则利，君子博学而日参省乎己，则知明而行无过矣。</p>
<p>吾尝终日而思矣，不如须臾之所学也；吾尝跂而望矣，不如登高之博见也。登高而招，臂非加长也，而见者远；顺风而呼，声非加疾也，而闻者彰。假舆马者，非利足也，而致千里；假舟楫者，非能水也，而绝江河。君子生非异也，善假于物也。</p>
<p>积土成山，风雨兴焉；积水成渊，蛟龙生焉；积善成德，而神明自得，圣心备焉。故不积跬步，无以至千里；不积小流，无以成江海。骐骥一跃，不能十步；驽马十驾，功在不舍。锲而舍之，朽木不折；锲而不舍，金石可镂。蚓无爪牙之利，筋骨之强，上食埃土，下饮黄泉，用心一也。蟹六跪而二螯，非蛇鳝之穴无可寄托者，用心躁也。</p>
<h4 id="屈原列传">屈原列传</h4>
<p>屈平疾王听之不聪也，谗谄之蔽明也，邪曲之害公也，方正之不容也，故忧愁幽思而作《离骚》。“离骚”者，犹离忧也。夫天者，人之始也；父母者，人之本也。人穷则反本，故劳苦倦极，未尝不呼天也；疾痛惨[怛]<sup>(dá)，未尝不呼父母也。屈平正道直行，竭忠尽智以事其君，谗人间之，可谓穷矣。信而见疑，忠而被谤，能无怨乎？屈平之作《离骚》，盖自怨生也。《国风》好色而不淫，《小雅》怨诽而不乱。若《离骚》者，可谓兼之矣。上称帝[喾]</sup>(kù)，下道齐桓，中述汤、武，以刺世事。明道德之广崇，治乱之条贯，靡不毕见。其文约，其辞微，其志洁，其行廉。其称文小而其指极大，举类迩而见义远。其志洁，故其称物芳；其行廉，故死而不容。自疏濯[淖]<sup>(nào)污泥之中，蝉蜕于浊秽，以浮游尘埃之外，不获世之滋垢，[皭]</sup>(jiào)然[泥]<sup>(niè)而不[滓]</sup>(zǐ)者也。推此志也，虽与日月争光可也。</p>
<h4 id="谏太宗十思疏">谏太宗十思疏</h4>
<p>臣闻求木之长者，必固其根本；欲流之远者，必浚其泉源；思国之安者，必积其德义。源不深而望流之远，根不固而求木之长，德不厚而思国之理，臣虽下愚，知其不可，而况于明哲乎！人君当神器之重，居域中之大，将崇极天之峻，永保无疆之休。不念居安思危，戒奢以俭，德不处其厚，情不胜其欲，斯亦伐根以求木茂，塞源而欲流长者也。</p>
<p>凡百元首，承天景命，莫不殷忧而道著，功成而德衰。有善始者实繁，能克终者盖寡。岂取之易而守之难乎？昔取之而有余，今守之而不足，何也？夫在殷忧，必竭诚以待下；既得志，则纵情以傲物。竭诚则吴越为一体，傲物则骨肉为行路。虽董之以严刑，振之以威怒，终苟免而不怀仁，貌恭而不心服。怨不在大，可畏惟人；载舟覆舟，所宜深慎；奔车朽索，其可忽乎！</p>
<p>君人者，诚能见可欲则思知足以自戒，将有作则思知止以安人，念高危则思谦冲而自牧，惧满溢则思江海下百川，乐盘游则思三驱以为度，忧懈怠则思慎始而敬终，虑壅蔽则思虚心以纳下，想谗邪则思正身以黜恶，恩所加则思无因喜以谬赏，罚所及则思无因怒而滥刑。总此十思，弘兹九德，简能而任之，择善而从之，则智者尽其谋，勇者竭其力，仁者播其惠，信者效其忠。文武争驰，在君无事，可以尽豫游之乐，可以养松、乔之寿，鸣琴垂拱，不言而化。何必劳神苦思，代下司职，役聪明之耳目，亏无为之大道哉！</p>
<h4 id="师说">师说</h4>
<p>古之学者必有师。师者，所以传道受业解惑也。人非生而知之者，孰能无惑？惑而不从师，其为惑也，终不解矣。生乎吾前，其闻道也固先乎吾，吾从而师之；生乎吾后，其闻道也亦先乎吾，吾从而师之。吾师道也，夫庸知其年之先后生于吾乎？是故无贵无贱，无长无少，道之所存，师之所存也。</p>
<p>嗟乎！师道之不传也久矣！欲人之无惑也难矣！古之圣人，其出人也远矣，犹且从师而问焉；今之众人，其下圣人也亦远矣，而耻学于师。是故圣益圣，愚益愚。圣人之所以为圣，愚人之所以为愚，其皆出于此乎？爱其子，择师而教之；于其身也，则耻师焉，惑矣。彼童子之师，授之书而习其句读者，非吾所谓传其道解其惑者也。句读之不知，惑之不解，或师焉，或不焉，小学而大遗，吾未见其明也。巫医乐师百工之人，不耻相师。士大夫之族，曰师曰弟子云者，则群聚而笑之。问之，则曰：“彼与彼年相若也，道相似也，位卑则足羞，官盛则近谀。”呜呼！师道之不复，可知矣。巫医乐师百工之人，君子不齿，今其智乃反不能及，其可怪也欤！</p>
<p>圣人无常师。孔子师郯子、苌弘、师襄、老聃。郯子之徒，其贤不及孔子。孔子曰：三人行，则必有我师。是故弟子不必不如师，师不必贤于弟子，闻道有先后，术业有专攻，如是而已。</p>
<p>李氏子蟠，年十七，好古文，六艺经传皆通习之，不拘于时，学于余。余嘉其能行古道，作《师说》以贻之。</p>
<h4 id="阿房宫赋">阿房宫赋</h4>
<p>六王毕，四海一，蜀山兀，阿房出。覆压三百余里，隔离天日。骊山北构而西折，直走咸阳。二川溶溶，流入宫墙。五步一楼，十步一阁；廊腰缦回，檐牙高啄；各抱地势，钩心斗角。盘盘焉，囷囷焉，蜂房水涡，矗不知其几千万落。长桥卧波，未云何龙？复道行空，不霁何虹？高低冥迷，不知西东。歌台暖响，春光融融；舞殿冷袖，风雨凄凄。一日之内，一宫之间，而气候不齐。</p>
<p>妃嫔媵嫱，王子皇孙，辞楼下殿，辇来于秦。朝歌夜弦，为秦宫人。明星荧荧，开妆镜也；绿云扰扰，梳晓鬟也；渭流涨腻，弃脂水也；烟斜雾横，焚椒兰也。雷霆乍惊，宫车过也；辘辘远听，杳不知其所之也。一肌一容，尽态极妍，缦立远视，而望幸焉。有不见者三十六年。燕赵之收藏，韩魏之经营，齐楚之精英，几世几年，剽掠其人，倚叠如山。一旦不能有，输来其间。鼎铛玉石，金块珠砾，弃掷逦迤，秦人视之，亦不甚惜。</p>
<p>嗟乎！一人之心，千万人之心也。秦爱纷奢，人亦念其家。奈何取之尽锱铢，用之如泥沙？使负栋之柱，多于南亩之农夫；架梁之椽，多于机上之工女；钉头磷磷，多于在庾之粟粒；瓦缝参差，多于周身之帛缕；直栏横槛，多于九土之城郭；管弦呕哑，多于市人之言语。使天下之人，不敢言而敢怒。独夫之心，日益骄固。戍卒叫，函谷举，楚人一炬，可怜焦土！</p>
<p>呜呼！灭六国者六国也，非秦也；族秦者秦也，非天下也。嗟乎！使六国各爱其人，则足以拒秦；使秦复爱六国之人，则递三世可至万世而为君，谁得而族灭也？秦人不暇自哀，而后人哀之；后人哀之而不鉴之，亦使后人而复哀后人也。</p>
<h4 id="六国论">六国论</h4>
<p>六国破灭，非兵不利，战不善，弊在赂秦。赂秦而力亏，破灭之道也。或曰：六国互丧，率赂秦耶？曰：不赂者以赂者丧，盖失强援，不能独完。故曰：弊在赂秦也。</p>
<p>秦以攻取之外，小则获邑，大则得城。较秦之所得，与战胜而得者，其实百倍；诸侯之所亡，与战败而亡者，其实亦百倍。则秦之所大欲，诸侯之所大患，固不在战矣。思厥先祖父，暴霜露，斩荆棘，以有尺寸之地。子孙视之不甚惜，举以予人，如弃草芥。今日割五城，明日割十城，然后得一夕安寝。起视四境，而秦兵又至矣。然则诸侯之地有限，暴秦之欲无厌，奉之弥繁，侵之愈急。故不战而强弱胜负已判矣。至于颠覆，理固宜然。古人云：“以地事秦，犹抱薪救火，薪不尽，火不灭。”此言得之。</p>
<p>齐人未尝赂秦，终继五国迁灭，何哉？与嬴而不助五国也。五国既丧，齐亦不免矣。燕赵之君，始有远略，能守其土，义不赂秦。是故燕虽小国而后亡，斯用兵之效也。至丹以荆卿为计，始速祸焉。赵尝五战于秦，二败而三胜。后秦击赵者再，李牧连却之。洎牧以谗诛，邯郸为郡，惜其用武而不终也。且燕赵处秦革灭殆尽之际，可谓智力孤危，战败而亡，诚不得已。向使三国各爱其地，齐人勿附于秦，刺客不行，良将犹在，则胜负之数，存亡之理，当与秦相较，或未易量。</p>
<p>呜呼！以赂秦之地封天下之谋臣，以事秦之心礼天下之奇才，并力西向，则吾恐秦人食之不得下咽也。悲夫！有如此之势，而为秦人积威之所劫，日削月割，以趋于亡。为国者无使为积威之所劫哉！</p>
<p>夫六国与秦皆诸侯，其势弱于秦，而犹有可以不赂而胜之之势。苟以天下之大，下而从六国破亡之故事，是又在六国下矣。</p>
<h4 id="答司马谏议书">答司马谏议书</h4>
<p>某启：昨日蒙教，窃以为与君实游处相好之日久，而议事每不合，所操之术多异故也。虽欲强聒，终必不蒙见察，故略上报，不复一一自辨。重念蒙君实视遇厚，于反覆不宜卤莽，故今具道所以，冀君实或见恕也。</p>
<p>盖儒者所争，尤在于名实，名实已明，而天下之理得矣。
今君实所以见教者，以为侵官、生事、征利、拒谏，以致天下怨谤也。某则以谓受命于人主，议法度而修之于朝廷，以授之于有司,
不为侵官；举先王之政，以兴利除弊，不为生事；为天下理财，不为征利；辟邪说，难壬人，不为拒谏。至于怨诽之多，则固前知其如此也。</p>
<p>人习于苟且非一日，士大夫多以不恤国事、同俗自媚于众为善，上乃欲变此，而某不量敌之众寡，欲出力助上以抗之，则众何为而不汹汹然？盘庚之迁，胥怨者民也，非特朝廷士大夫而已；盘庚不为怨者故改其度，度义而后动，是而不见可悔故也。如君实责我以在位久，未能助上大有为，以膏泽斯民，则某知罪矣；如曰今日当一切不事事，守前所为而已，则非某之所敢知。</p>
<p>无由会晤，不任区区向往之至！</p>
<h4 id="赤壁赋">赤壁赋</h4>
<p>壬戌之秋，七月既望，苏子与客泛舟游于赤壁之下。清风徐来，水波不兴。举酒属客，诵明月之诗，歌窈窕之章。少焉，月出于东山之上，徘徊于斗牛之间。白露横江，水光接天。纵一苇之所如，凌万顷之茫然。浩浩乎如冯虚御风，而不知其所止；飘飘乎如遗世独立，羽化而登仙。</p>
<p>于是饮酒乐甚，扣舷而歌之。歌曰：“桂棹兮兰桨，击空明兮溯流光。渺渺兮予怀，望美人兮天一方。”客有吹洞箫者，倚歌而和之。其声呜呜然，如怨如慕，如泣如诉；余音袅袅，不绝如缕。舞幽壑之潜蛟，泣孤舟之嫠妇。</p>
<p>苏子愀然，正襟危坐，而问客曰：“何为其然也？”客曰：“’月明星稀，乌鹊南飞。’此非曹孟德之诗乎？西望夏口，东望武昌，山川相缪，郁乎苍苍，此非孟德之困于周郎者乎？方其破荆州，下江陵，顺流而东也，舳舻千里，旌旗蔽空，酾酒临江，横槊赋诗，固一世之雄也，而今安在哉？况吾与子渔樵于江渚之上，侣鱼虾而友麋鹿，驾一叶之扁舟，举匏樽以相属。寄蜉蝣于天地，渺沧海之一粟。哀吾生之须臾，羡长江之无穷。挟飞仙以遨游，抱明月而长终。知不可乎骤得，托遗响于悲风。”</p>
<p>苏子曰：“客亦知夫水与月乎？逝者如斯，而未尝往也；盈虚者如彼，而卒莫消长也。盖将自其变者而观之，则天地曾不能以一瞬；自其不变者而观之，则物与我皆无尽也，而又何羡乎！且夫天地之间，物各有主，苟非吾之所有，虽一毫而莫取。惟江上之清风，与山间之明月，耳得之而为声，目遇之而成色，取之无禁，用之不竭。是造物者之无尽藏也，而吾与子之所共适。”</p>
<p>客喜而笑，洗盏更酌。肴核既尽，杯盘狼籍。相与枕藉乎舟中，不知东方之既白。</p>
<h4 id="项脊轩志">项脊轩志</h4>
<p>项脊轩，旧南阁子也。室仅方丈，可容一人居。百年老屋，尘泥渗漉，雨泽下注；每移案，顾视无可置者。又北向，不能得日，日过午已昏。余稍为修葺，使不上漏。前辟四窗，垣墙周庭，以当南日，日影反照，室始洞然。又杂植兰桂竹木于庭，旧时栏<ruby><rb>楯</rb><rt>shǔn</rt></ruby>，亦遂增胜。借书满架，偃仰啸歌，冥然兀坐，万籁有声；而庭阶寂寂，小鸟时来啄食，人至不去。三五之夜，明月半墙，桂影斑驳，风移影动，珊珊可爱。</p>
<p>然余居于此，多可喜，亦多可悲。先是，庭中通南北为一。[迨]<sup>(dài)诸父异[爨]</sup>(cuàn)，内外多置小门，墙往往而是，东犬西吠，客逾庖而宴，鸡栖于厅。庭中始为篱，已为墙，凡再变矣。家有老妪，尝居于此。妪，先大母婢也，乳二世，先妣抚之甚厚。室西连于中闺，先妣尝一至。妪每谓余曰：“某所，而母立于兹。”妪又曰：“汝姊在吾怀，呱呱而泣；娘以指叩门扉曰：’儿寒乎？欲食乎？’吾从板外相为应答。”语未毕，余泣，妪亦泣。余自束发读书轩中，一日，大母过余曰：“吾儿，久不见若影，何竟日默默在此，大类女郎也？”比去，以手[阖]<sup>(hé)门，自语曰：“吾家读书久不效，儿之成，则可待乎！”顷之，持一象[笏]</sup>(hù)至，曰：“此吾祖太常公宣德间执此以朝，他日汝当用之！”瞻顾遗迹，如在昨日，令人长号不自禁。</p>
<p>轩东，故尝为厨，人往，从轩前过。余<ruby><rb>扃</rb><rt>jiōng</rt></ruby>牖而居，久之，能以足音辨人。轩凡四遭火，得不焚，殆有神护者。……</p>
<p>余既为此志，后五年，吾妻来归，时至轩中，从余问古事，或凭几学书。吾妻归宁，述诸小妹语曰：“闻姊家有阁子，且何谓阁子也？”其后六年，吾妻死，室坏不修。其后二年，余久卧病无聊，乃使人复葺南阁子，其制稍异于前。然自后余多在外，不常居。庭有枇杷树，吾妻死之年所手植也，今已亭亭如盖矣。</p>
<h4 id="子路曾晳冉有公西华侍坐">子路、曾晳、冉有、公西华侍坐</h4>
<p>子路、曾<ruby><rb>皙</rb><rt>xī</rt></ruby>、冉有、公西华侍坐。</p>
<p>子曰：“以吾一日<ruby><rb>长</rb><rt>zhǎng</rt></ruby>乎尔，毋吾以也。居则曰：’不吾知也。’如或知尔，则何以哉？”</p>
<p>子路率尔而对曰：“千<ruby><rb>乘</rb><rt>shèng</rt></ruby>之国，摄乎大国之间，加之以师旅，因之以饥馑；由也为之，比及三年，可使有勇，且知方也。”</p>
<p>夫子<ruby><rb>哂</rb><rt>shěn</rt></ruby>之。</p>
<p>“求，尔何如？”</p>
<p>对曰：“方六七十，如五六十，求也为之，比及三年，可使足民。如其礼乐，以俟君子。”</p>
<p>“赤，尔何如？”</p>
<p>对曰：“非曰能之，愿学焉。宗庙之事，如会同，端章甫，愿为小相焉。”</p>
<p>“点，尔何如？”</p>
<p>鼓瑟希，<ruby><rb>铿</rb><rt>kēng</rt></ruby>尔，舍瑟而作，对曰：“异乎三子者之撰。”</p>
<p>子曰：“何伤乎？亦各言其志也！”</p>
<p>曰：“<ruby><rb>莫]<sup>(mù)春者，春服既成，冠者五六人，童子六七人，浴乎[沂]</sup>(yí)，风乎舞[雩</rb><rt>yú</rt></ruby>，咏而归。”</p>
<p>夫子<ruby><rb>喟</rb><rt>kuì</rt></ruby>然叹曰：“吾与点也。”</p>
<p>三子者出，曾皙后。曾皙曰：“夫三子者之言何如？”</p>
<p>子曰：“亦各言其志也已矣！”</p>
<p>曰：“夫子何哂由也？”</p>
<p>曰：“为国以礼，其言不让，是故哂之。”</p>
<p>“唯求则非邦也与？”</p>
<p>“安见方六七十，如五六十而非邦也者？”</p>
<p>“唯赤则非邦也与？”</p>
<p>“宗庙会同，非诸侯而何？赤也为之小，孰能为之大？”</p>
<h4 id="报任安书">报任安书</h4>
<p>古者富贵而名摩灭，不可胜记，唯倜傥非常之人称焉。盖文王拘而演《周易》；仲尼厄而作《春秋》；屈原放逐，乃赋《离骚》；左丘失明，厥有《国语》；孙子膑脚，《兵法》修列；不韦迁蜀，世传《吕览》；韩非囚秦，《说难》《孤愤》；《诗》三百篇，大底圣贤发愤之所为作也。此人皆意有所郁结，不得通其道，故述往事、思来者。乃如左丘无目，孙子断足，终不可用，退而论书策，以舒其愤，思垂空文以自见。</p>
<p>仆窃不逊，近自托于无能之辞，网罗天下放失旧闻，略考其行事，综其终始，稽其成败兴坏之纪，上计轩辕，下至于兹，为十表，本纪十二，书八章，世家三十，列传七十，凡百三十篇。亦欲以究天人之际，通古今之变，成一家之言。草创未就，会遭此祸，惜其不成，是以就极刑而无愠色。仆诚以著此书，藏之名山，传之其人，通邑大都，则仆偿前辱之责，虽万被戮，岂有悔哉！然此可为智者道，难为俗人言也！</p>
<h4 id="过秦论上">过秦论（上）</h4>
<p>秦孝公据<ruby><rb>崤</rb><rt>xiáo</rt></ruby>函之固，拥雍州之地，君臣固守以窥周室，有席卷天下，包举宇内，囊括四海之意，并吞八荒之心。当是时也，商君佐之，内立法度，务耕织，修守战之具，外连衡而斗诸侯。于是秦人拱手而取西河之外。</p>
<p>孝公既没，惠文、武、昭襄蒙故业，因遗策，南取汉中，西举巴、蜀，东割膏腴之地，北收要害之郡。诸侯恐惧，会盟而谋弱秦，不爱珍器重宝肥饶之地，以致天下之士，合[从]<sup>(zòng)缔交，相与为一。当此之时，齐有孟尝，赵有平原，楚有春申，魏有信陵。此四君者，皆明智而忠信，宽厚而爱人，尊贤而重士，约从离衡，兼韩、魏、燕、楚、齐、赵、宋、卫、中山之众。于是六国之士，有[甯]</sup>(nìng)越、徐尚、苏秦、杜赫之属为之谋，齐明、周最、陈[轸]<sup>(zhěn)、[召]</sup>(shào)滑、楼缓、[翟]<sup>(zhái)景、苏厉、乐毅之徒通其意，吴起、孙膑、带佗、倪良、王廖、田忌、廉颇、赵奢之伦制其兵。尝以十倍之地，百万之众，叩关而攻秦。秦人开关延敌，九国之师，[逡]</sup>(qūn)巡而不敢进。秦无亡矢遗镞之费，而天下诸侯已困矣。于是从散约败，争割地而赂秦。秦有余力而制其弊，追亡逐北，伏尸百万，流血漂橹；因利乘便，宰割天下，分裂山河。强国请服，弱国入朝。延及孝文王、庄襄王，享国之日浅，国家无事。</p>
<p>及至始皇，奋六世之余烈，振长策而御宇内，吞二周而亡诸侯，履至尊而制六合，执敲扑而鞭笞天下，威振四海。南取百越之地，以为桂林、象郡；百越之君，俯首系颈，委命下吏。乃使蒙恬北筑长城而守藩篱，却匈奴七百余里；胡人不敢南下而牧马，士不敢弯弓而报怨。于是废先王之道，焚百家之言，以愚黔首；[隳]<sup>(huī)名城，杀豪杰；收天下之兵，聚之咸阳，销锋[镝]</sup>(dí)，铸以为金人十二，以弱天下之民。然后践华为城，因河为池，据亿丈之城，临不测之渊，以为固。良将劲弩守要害之处，信臣精卒陈利兵而谁何。天下已定，始皇之心，自以为关中之固，金城千里，子孙帝王万世之业也。</p>
<p>始皇既没，余威震于殊俗。然陈涉瓮<ruby><rb>牖]<sup>(yǒu)绳枢之子，[氓]</sup>(méng)隶之人，而迁徙之徒也；才能不及中人，非有仲尼、墨[翟</rb><rt>dí</rt></ruby>之贤，陶朱、猗yī顿之富；蹑足行伍之间，而倔起阡陌之中，率疲弊之卒，将数百之众，转而攻秦；斩木为兵，揭竿为旗，天下云集响应，赢粮而景从。山东豪俊遂并起而亡秦族矣。</p>
<p>且夫天下非小弱也，雍州之地，崤函之固，自若也。陈涉之位，非尊于齐、楚、燕、赵、韩、魏、宋、卫、中山之君也；锄<ruby><rb>櫌]<sup>(yōu)棘[矜]</sup>(qín)，非[铦]<sup>(xiān)于钩戟长[铩]</sup>(shā)也；谪戍之众，非抗于九国之师也；深谋远虑，行军用兵之道，非及向时之士也。然而成败异变，功业相反，何也？试使山东之国与陈涉[度]<sup>(duó)长[絜]</sup>(xié)大，比权量力，则不可同年而语矣。然秦以区区之地，致万乘之势，序八州而朝同列，百有余年矣；然后以六合为家，崤函为宫；一夫作[难</rb><rt>nàn</rt></ruby>而七庙隳，身死人手，为天下笑者，何也？仁义不施而攻守之势异也。</p>
<h4 id="礼运">礼运</h4>
<p>大道之行也，天下为公。选贤与能，讲信修睦。故人不独亲其亲，不独子其子，使老有所终，壮有所用，幼有所长，矜、寡、孤、独、废疾者皆有所养，男有分，女有归。货恶其弃于地也，不必藏于己；力恶其不出于身也，不必为己。是故谋闭而不兴，盗窃乱贼而不作，故外户而不闭。是谓大同。</p>
<h4 id="陈情表">陈情表</h4>
<p>臣密言：臣以险衅，夙遭闵凶。生孩六月，慈父见背；行年四岁，舅夺母志。祖母刘愍mǐn臣孤弱，躬亲抚养。臣少多疾病，九岁不行，零丁孤苦，至于成立。既无伯叔，终鲜兄弟，门衰祚薄，晚有儿息。外无期功强近之亲，内无应门五尺之僮，[茕]<sup>(qióng)茕[孑]</sup>(jié)立，形影相吊。而刘夙婴疾病，常在床蓐，臣侍汤药，未曾废离。</p>
<p>逮奉圣朝，沐浴清化。前太守臣逵察臣孝廉；后刺史臣荣举臣秀才。臣以供养无主，辞不赴命。诏书特下，拜臣郎中，寻蒙国恩，除臣洗马。猥以微贱，当侍东宫，非臣陨首所能上报。臣具以表闻，辞不就职。诏书切峻，责臣<ruby><rb>逋</rb><rt>bū</rt></ruby>慢；郡县逼迫，催臣上道；州司临门，急于星火。臣欲奉诏奔驰，则刘病日笃，欲苟顺私情，则告诉不许：臣之进退，实为狼狈。</p>
<p>伏惟圣朝以孝治天下，凡在故老，犹蒙矜育，况臣孤苦，特为尤甚。且臣少仕伪朝，历职郎署，本图宦达，不矜名节。今臣亡国贱俘，至微至陋，过蒙拔<ruby><rb>擢</rb><rt>zhuó</rt></ruby>，宠命优渥，岂敢盘桓，有所希冀！但以刘日薄西山，气息奄奄，人命危浅，朝不虑夕。臣无祖母，无以至今日，祖母无臣，无以终余年。母孙二人，更相为命，是以区区不能废远。</p>
<p>臣密今年四十有四，祖母今年九十有六，是臣尽节于陛下之日长，报养刘之日短也。乌鸟私情，愿乞终养。臣之辛苦，非独蜀之人士及二州牧伯所见明知，皇天后土实所共鉴。愿陛下矜愍愚诚，听臣微志，庶刘侥幸，保卒余年。臣生当陨首，死当结草。臣不胜犬马怖惧之情，谨拜表以闻。</p>
<h4 id="归去来兮辞并序">归去来兮辞（并序）</h4>
<p>余家贫，耕植不足以自给。幼稚盈室，瓶无储粟，生生所资，未见其术。亲故多劝余为长吏，脱然有怀，求之靡途。会有四方之事，诸侯以惠爱为德，家叔以余贫苦，遂见用于小邑。于时风波未静，心惮远役，彭泽去家百里，公田之利，足以为酒。故便求之。及少日，眷然有归欤之情。何则？质性自然，非矫厉所得。饥冻虽切，违己交病。尝从人事，皆口腹自役。于是怅然慷慨，深愧平生之志。犹望一<ruby><rb>稔</rb><rt>rěn</rt></ruby>，当敛裳宵逝。寻程氏妹丧于武昌，情在骏奔，自免去职。仲秋至冬，在官八十余日。因事顺心，命篇曰《归去来兮》。乙巳岁十一月也。</p>
<p>归去来兮，田园将芜胡不归？既自以心为形役，奚惆怅而独悲？悟已往之不谏，知来者之可追。实迷途其未远，觉今是而昨非。舟遥遥以轻<ruby><rb>飏</rb><rt>yáng</rt></ruby>，风飘飘而吹衣。问征夫以前路，恨晨光之熹微。</p>
<p>乃瞻衡宇，载欣载奔。僮仆欢迎，稚子候门。三径就荒，松菊犹存。携幼入室，有酒盈樽。引壶觞以自酌，眄miàn庭柯以怡颜。倚南窗以寄傲，审容膝之易安。园日涉以成趣，门虽设而常关。策扶老以流憩，时矫首而遐观。云无心以出<ruby><rb>岫</rb><rt>xiù</rt></ruby>，鸟倦飞而知还。景翳yì翳以将入，抚孤松而盘桓。</p>
<p>归去来兮，请息交以绝游。世与我而相违，复驾言兮焉求？悦亲戚之情话，乐琴书以消忧。农人告余以春及，将有事于西畴。或命巾车，或棹孤舟。既窈窕以寻壑，亦崎岖而经丘。木欣欣以向荣，泉涓涓而始流。善万物之得时，感吾生之行休。</p>
<p>已矣乎！寓形宇内复几时？<ruby><rb>曷</rb><rt>hé</rt></ruby>不委心任去留？胡为乎遑遑欲何之？富贵非吾愿，帝乡不可期。怀良辰以孤往，或植杖而耘耔。登东皋以舒啸，临清流而赋诗。聊乘化以归尽，乐夫天命复奚疑！</p>
<h4 id="种树郭橐驼传">种树郭橐驼传</h4>
<p>郭橐驼，不知始何名。病偻，隆然伏行，有类橐驼者，故乡人号之”驼”。驼闻之曰：“甚善。名我固当。”因舍其名，亦自谓”橐驼”云。</p>
<p>其乡曰丰乐乡，在长安西。驼业种树，凡长安豪富人为观游及卖果者，皆争迎取养。视驼所种树，或移徙，无不活；且硕茂，早实以蕃。他植者虽窥伺效慕，莫能如也。</p>
<p>有问之，对曰：“橐驼非能使木寿且孳也，能顺木之天以致其性焉尔。凡植木之性，其本欲舒，其培欲平，其土欲故，其筑欲密。既然已，勿动勿虑，去不复顾。其莳shì也若子，其置也若弃，则其天者全而其性得矣。故吾不害其长而已，非有能硕茂之也；不抑耗其实而已，非有能早而蕃之也。他植者则不然，根拳而土易，其培之也，若不过焉则不及。苟有能反是者，则又爱之太恩，忧之太勤。旦视而暮抚，已去而复顾。甚者，爪其肤以验其生枯，摇其本以观其疏密，而木之性日以离矣。虽曰爱之，其实害之；虽曰忧之，其实仇之；故不我若也。吾又何能为哉？”</p>
<p>问者曰：“以子之道，移之官理，可乎？”驼曰：“我知种树而已，理，非吾业也。然吾居乡，见<ruby><rb>长]<sup>(zhǎng)人者好烦其令，若甚怜焉，而卒以祸。旦暮吏来而呼曰：’官命促尔耕，[勖]</sup>(xù)尔植，督尔获，早[缫]<sup>(sāo)而绪，早织而缕，字而幼孩，遂而鸡豚。’鸣鼓而聚之，击木而召之。吾小人辍[飧]</sup>(sūn)[饔</rb><rt>yōng</rt></ruby>以劳吏者，且不得暇，又何以蕃吾生而安吾性耶？故病且怠。若是，则与吾业者其亦有类乎？”</p>
<p>问者曰：“嘻，不亦善夫！吾问养树，得养人术。”传其事以为官戒。</p>
<h4 id="五代史伶官传序">五代史伶官传序</h4>
<p>呜呼！盛衰之理，虽曰天命，岂非人事哉！原庄宗之所以得天下，与其所以失之者，可以知之矣。</p>
<p>世言晋王之将终也，以三矢赐庄宗而告之曰：“梁，吾仇也；燕王，吾所立；契丹与吾约为兄弟；而皆背晋以归梁。此三者，吾遗恨也。与尔三矢，尔其无忘乃父之志！”庄宗受而藏之于庙。其后用兵，则遣从事以一少牢告庙，请其矢，盛以锦囊，负而前驱，及凯旋而纳之。</p>
<p>方其系燕父子以组，函梁君臣之首，入于太庙，还矢先王，而告以成功，其意气之盛，可谓壮哉！及仇<ruby><rb>雠</rb><rt>chóu</rt></ruby>已灭，天下已定，一夫夜呼，乱者四应，仓皇东出，未及见贼而士卒离散，君臣相顾，不知所归。至于誓天断发，泣下沾襟，何其衰也！岂得之难而失之易欤？抑本其成败之迹，而皆自于人欤？《书》曰：“满招损，谦得益。”忧劳可以兴国，逸豫可以亡身，自然之理也。</p>
<p>故方其盛也，举天下之豪杰，莫能与之争；及其衰也，数十伶人困之，而身死国灭，为天下笑。夫祸患常积于忽微，而智勇多困于所溺，岂独伶人也哉？</p>
<h4 id="石钟山记">石钟山记</h4>
<p>《水经》云：“彭蠡之口有石钟山焉。”郦元以为下临深潭，微风鼓浪，水石相搏，声如洪钟。是说也，人常疑之。今以钟磬置水中，虽大风浪不能鸣也，而况石乎！至唐李渤始访其遗踪，得双石于潭上，扣而聆之，南声函胡，北音清越，桴止响腾，余韵徐歇。自以为得之矣。然是说也，余尤疑之。石之铿然有声者，所在皆是也，而此独以钟名，何哉？</p>
<p>元丰七年六月丁丑，余自齐安舟行适临汝，而长子迈将赴饶之德兴尉，送之至湖口，因得观所谓石钟者。寺僧使小童持斧，于乱石间择其一二扣之，[硿]<sup>(kōng)硿焉。余固笑而不信也。至莫夜月明，独与迈乘小舟，至绝壁下。大石侧立千尺，如猛兽奇鬼，森然欲搏人；而山上栖鹘，闻人声亦惊起，[磔]</sup>(zhé)磔云霄间；又有若老人咳且笑于山谷中者，或曰此鹳鹤也。余方心动欲还，而大声发于水上，[噌]<sup>(chēng)[吰]</sup>(hóng)如钟鼓不绝。舟人大恐。徐而察之，则山下皆石穴[罅]<sup>(xià)，不知其浅深，微波入焉，涵澹澎湃而为此也。舟回至两山间，将入港口，有大石当中流，可坐百人，空中而多窍，与风水相吞吐，有[窾]</sup>(kuǎn)坎[镗]<sup>(tāng)[鞳]</sup>(tà)之声，与向之噌吰者相应，如乐作焉。因笑谓迈曰：“汝识之乎？噌吰者，周景王之无射yì也；窾坎镗鞳者，魏庄子之歌钟也。古之人不余欺也！”</p>
<p>事不目见耳闻，而臆断其有无，可乎？郦元之所见闻，殆与余同，而言之不详；士大夫终不肯以小舟夜泊绝壁之下，故莫能知；而渔工水师虽知而不能言。此世所以不传也。而陋者乃以斧斤考击而求之，自以为得其实。余是以记之，盖叹郦元之简，而笑李渤之陋也。</p>
<h4 id="登泰山记">登泰山记</h4>
<p>泰山之阳，汶水西流；其阴，济水东流。阳谷皆入汶，阴谷皆入济。当其南北分者，古长城也。最高日观峰，在长城南十五里。</p>
<p>余以乾隆三十九年十二月，自京师乘风雪，历齐河、长清，穿泰山西北谷，越长城之限，至于泰安。是月丁未，与知府朱孝纯子颍由南麓登。四十五里，道皆砌石为磴，其级七千有余。泰山正南面有三谷。中谷绕泰安城下，郦道元所谓环水也。余始循以入，道少半，越中岭，复循西谷，遂至其巅。古时登山，循东谷入，道有天门。东谷者，古谓之天门溪水，余所不至也。今所经中岭及山巅，崖限当道者，世皆谓之天门云。道中迷雾冰滑，磴几不可登。及既上，苍山负雪，明烛天南。望晚日照城郭，汶水、徂徕如画，而半山居雾若带然。</p>
<p>戊申晦，五鼓，与子颍坐日观亭，待日出。大风扬积雪击面。亭东自足下皆云漫。稍见云中白若樗蒲数十立者，山也。极天云一线异色，须臾成五采。日上，正赤如丹，下有红光动摇承之。或曰，此东海也。回视日观以西峰，或得日或否，绛皓驳色，而皆若偻。</p>
<p>亭西有岱祠，又有碧霞元君祠。皇帝行宫在碧霞元君祠东。是日观道中石刻，自唐显庆以来；其远古刻尽漫失。僻不当道者，皆不及往。</p>
<p>山多石，少土。石苍黑色，多平方，少圜。少杂树，多松，生石罅，皆平顶。冰雪，无瀑水，无鸟兽音迹。至日观数里内无树，而雪与人膝齐。</p>
<p>桐城姚鼐记。</p>
<h4 id="老子八章">《老子》八章</h4>
<p>三十辐共一毂，当其无，有车之用。埏埴以为器，当其无，有器之用。凿户牖以为室，当其无，有室之用。故有之以为利，无之以为用。（第十一章）</p>
<p>企者不立，跨者不行，自见者不明，自是者不彰，自伐者无功，自矜者不长。其在道也，曰余食赘行，物或恶之。故有道者不处。（第二十四章）</p>
<p>知人者智，自知者明。胜人者有力，自胜者强。知足者富。强行者有志。不失其所者久。死而不亡者寿。（第三十三章）</p>
<p>其安易持，其未兆易谋。其脆易泮，其微易散。为之于未有，治之于未乱。合抱之木，生于毫末；九层之台，起于累土；千里之行，始于足下。为者败之，执者失之。是以圣人无为，故无败，无执，故无失。民之从事，常于几成而败之。慎终如始，则无败事。是以圣人欲不欲，不贵难得之货；学不学，复众人之所过。以辅万物之自然，而不敢为。（第六十四章）</p>
<h4 id="季氏将伐颛臾">季氏将伐颛臾</h4>
<p>季氏将伐颛臾。冉有、季路见于孔子曰：“季氏将有事于颛臾。”</p>
<p>孔子曰：“求！无乃尔是过与？夫颛臾，昔者先王以为东蒙主，且在邦域之中矣，是社稷之臣也。何以伐为？”</p>
<p>冉有曰：“夫子欲之，吾二臣者皆不欲也。”</p>
<p>孔子曰：“求！周任有言曰：’陈力就列，不能者止。’危而不持，颠而不扶，则将焉用彼相矣？且尔言过矣。虎兕出于柙，龟玉毁于椟中，是谁之过与？”</p>
<p>冉有曰：“今夫颛臾，固而近于费。今不取，后世必为子孙忧。”</p>
<p>孔子曰：“求！君子疾夫舍曰欲之而必为之辞。丘也闻有国有家者，不患寡而患不均，不患贫而患不安。盖均无贫，和无寡，安无倾。夫如是，故远人不服，则修文德以来之。既来之，则安之。今由与求也，相夫子，远人不服而不能来也；邦分崩离析而不能守也；而谋动干戈于邦内。吾恐季孙之忧，不在颛臾，而在萧墙之内也。”</p>
<h4 id="大学">大学</h4>
<p>古之欲明明德于天下者，先治其国。欲治其国者，先齐其家。欲齐其家者，先修其身。欲修其身者，先正其心。欲正其心者，先诚其意。欲诚其意者，先致其知；致知在格物。物格而后知至，知至而后意诚，意诚而后心正，心正而后身修，身修而后家齐，家齐而后国治，国治而后天下平。自天子以至于庶人，壹是皆以修身为本。</p>
<h4 id="中庸">中庸</h4>
<p>喜怒哀乐之未发，谓之中；发而皆中节，谓之和。中也者，天下之大本也；和也者，天下之达道也。致中和，天地位焉，万物育焉。</p>
<p>博学之，审问之，慎思之，明辨之，笃行之。有弗学，学之弗能，弗措也；有弗问，问之弗知，弗措也；有弗思，思之弗得，弗措也；有弗辨，辨之弗明，弗措也；有弗行，行之弗笃，弗措也。人一能之，己百之；人十能之，己千之。</p>
<h4 id="逍遥游">逍遥游</h4>
<p>惠子谓庄子曰：“魏王贻我大瓠之种，我树之成而实五石。以盛水浆，其坚不能自举也。剖之以为瓢，则瓠落无所容。非不呺然大也，吾为其无用而掊之。”庄子曰：“夫子固拙于用大矣！宋人有善为不龟手之药者，世世以洴澼絖为事。客闻之，请买其方百金。聚族而谋之曰：’我世世为洴澼絖，不过数金。今一朝而鬻技百金，请与之。’客得之，以说吴王。越有难，吴王使之将，冬，与越人水战，大败越人，裂地而封之。能不龟手一也，或以封，或不免于洴澼絖，则所用之异也。今子有五石之瓠，何不虑以为大樽而浮乎江湖，而忧其瓠落无所容？则夫子犹有蓬之心也夫！”</p>
<h4 id="谏逐客书">谏逐客书</h4>
<p>臣闻吏议逐客，窃以为过矣。昔缪公求士，西取由余于戎，东得百里奚于宛，迎蹇叔于宋，来丕豹、公孙支于晋。此五子者，不产于秦，而缪公用之，并国二十，遂霸西戎。孝公用商鞅之法，移风易俗，民以殷盛，国以富强，百姓乐用，诸侯亲服，获楚、魏之师，举地千里，至今治强。惠王用张仪之计，拔三川之地，西并巴、蜀，北收上郡，南取汉中，包九夷，制鄢、郢，东据成皋之险，割膏腴之壤，遂散六国之从，使之西面事秦，功施到今。昭王得范雎，废穰侯，逐华阳，强公室，杜私门，蚕食诸侯，使秦成帝业。此四君者，皆以客之功。由此观之，客何负于秦哉！向使四君却客而不内，疏士而不用，是使国无富利之实而秦无强大之名也。</p>
<p>今陛下致昆山之玉，有随、和之宝，垂明月之珠，服太阿之剑，乘纤离之马，建翠凤之旗，树灵鼍之鼓。此数宝者，秦不生一焉，而陛下说之，何也？必秦国之所生然后可，则是夜光之璧不饰朝廷，犀象之器不为玩好，郑、卫之女不充后宫，而骏良駃騠不实外厩，江南金锡不为用，西蜀丹青不为采。所以饰后宫，充下陈，娱心意，说耳目者，必出于秦然后可，则是宛珠之簪、傅玑之珥、阿缟之衣、锦绣之饰不进于前，而随俗雅化佳冶窈窕赵女不立于侧也。夫击瓮叩缶，弹筝搏髀，而歌呼呜呜快耳者，真秦之声也；《郑》《卫》《桑间》《昭》《虞》《武》《象》者，异国之乐也。今弃击瓮叩缶而就《郑》《卫》，退弹筝而取《昭》《虞》，若是者何也？快意当前，适观而已矣。今取人则不然，不问可否，不论曲直，非秦者去，为客者逐。然则是所重者在乎色、乐、珠玉，而所轻者在乎人民也。此非所以跨海内、制诸侯之术也。</p>
<p>臣闻地广者粟多，国大者人众，兵强则士勇。是以太山不让土壤，故能成其大；河海不择细流，故能就其深；王者不却众庶，故能明其德。是以地无四方，民无异国，四时充美，鬼神降福，此五帝三王之所以无敌也。今乃弃黔首以资敌国，却宾客以业诸侯，使天下之士退而不敢西向，裹足不入秦，此所谓”藉寇兵而赍盗粮”者也。</p>
<p>夫物不产于秦，可宝者多；士不产于秦，而愿忠者众。今逐客以资敌国，损民以益仇，内自虚而外树怨于诸侯，求国无危，不可得也。</p>
<h4 id="兰亭集序">兰亭集序</h4>
<p>永和九年，岁在癸丑，暮春之初，会于会稽山阴之兰亭，修禊事也。群贤毕至，少长咸集。此地有崇山峻岭，茂林修竹；又有清流激湍，映带左右，引以为流觞曲水，列坐其次。虽无丝竹管弦之盛，一觞一咏，亦足以畅叙幽情。</p>
<p>是日也，天朗气清，惠风和畅，仰观宇宙之大，俯察品类之盛，所以游目骋怀，足以极视听之娱，信可乐也。</p>
<p>夫人之相与，俯仰一世，或取诸怀抱，悟言一室之内；或因寄所托，放浪形骸之外。虽趣舍万殊，静躁不同，当其欣于所遇，暂得于己，快然自足，不知老之将至。及其所之既倦，情随事迁，感慨系之矣。向之所欣，俯仰之间，已为陈迹，犹不能不以之兴怀。况修短随化，终期于尽。古人云：“死生亦大矣。”岂不痛哉！</p>
<p>每览昔人兴感之由，若合一契，未尝不临文嗟悼，不能喻之于怀。固知一死生为虚诞，齐彭殇为妄作。后之视今，亦犹今之视昔。悲夫！故列叙时人，录其所述，虽世殊事异，所以兴怀，其致一也。后之览者，亦将有感于斯文。</p>
<h4 id="滕王阁序">滕王阁序</h4>
<p>豫章故郡，洪都新府。星分翼轸，地接衡庐。襟三江而带五湖，控蛮荆而引瓯越。物华天宝，龙光射牛斗之墟；人杰地灵，徐孺下陈蕃之榻。雄州雾列，俊采星驰。台隍枕夷夏之交，宾主尽东南之美。都督阎公之雅望，棨戟遥临；宇文新州之懿范，襜帷暂驻。十旬休假，胜友如云；千里逢迎，高朋满座。腾蛟起凤，孟学士之词宗；紫电青霜，王将军之武库。家君作宰，路出名区；童子何知，躬逢胜饯。</p>
<p>时维九月，序属三秋。潦水尽而寒潭清，烟光凝而暮山紫。俨骖騑于上路，访风景于崇阿。临帝子之长洲，得天人之旧馆。层峦耸翠，上出重霄；飞阁流丹，下临无地。鹤汀凫渚，穷岛屿之萦回；桂殿兰宫，即冈峦之体势。</p>
<p>披绣闼，俯雕甍，山原旷其盈视，川泽纡其骇瞩。闾阎扑地，钟鸣鼎食之家；舸舰弥津，青雀黄龙之舳。云销雨霁，彩彻区明。落霞与孤鹜齐飞，秋水共长天一色。渔舟唱晚，响穷彭蠡之滨，雁阵惊寒，声断衡阳之浦。</p>
<p>遥襟甫畅，逸兴遄飞。爽籁发而清风生，纤歌凝而白云遏。睢园绿竹，气凌彭泽之樽；邺水朱华，光照临川之笔。四美具，二难并。穷睇眄于中天，极娱游于暇日。天高地迥，觉宇宙之无穷；兴尽悲来，识盈虚之有数。望长安于日下，目吴会于云间。地势极而南溟深，天柱高而北辰远。关山难越，谁悲失路之人；萍水相逢，尽是他乡之客。怀帝阍而不见，奉宣室以何年？</p>
<p>嗟乎！时运不齐，命途多舛。冯唐易老，李广难封。屈贾谊于长沙，非无圣主；窜梁鸿于海曲，岂乏明时？所赖君子见机，达人知命。老当益壮，宁移白首之心？穷且益坚，不坠青云之志。酌贪泉而觉爽，处涸辙以犹欢。北海虽赊，扶摇可接；东隅已逝，桑榆非晚。孟尝高洁，空余报国之情；阮籍猖狂，岂效穷途之哭！</p>
<p>勃，三尺微命，一介书生。无路请缨，等终军之弱冠；有怀投笔，慕宗悫之长风。舍簪笏于百龄，奉晨昏于万里。非谢家之宝树，接孟氏之芳邻。他日趋庭，叨陪鲤对；今兹捧袂，喜托龙门。杨意不逢，抚凌云而自惜；钟期既遇，奏流水以何惭？</p>
<p>呜呼！胜地不常，盛筵难再；兰亭已矣，梓泽丘墟。临别赠言，幸承恩于伟饯；登高作赋，是所望于群公。敢竭鄙怀，恭疏短引；一言均赋，四韵俱成。请洒潘江，各倾陆海云尔。</p>
<p>滕王高阁临江渚，佩玉鸣鸾罢歌舞。</p>
<p>画栋朝飞南浦云，珠帘暮卷西山雨。</p>
<p>闲云潭影日悠悠，物换星移几度秋。</p>
<p>阁中帝子今何在？槛外长江空自流。</p>
<h4 id="黄冈竹楼记">黄冈竹楼记</h4>
<p>黄冈之地多竹，大者如椽，竹工破之，刳去其节，用代陶瓦。比屋皆然，以其价廉而工省也。</p>
<p>子城西北隅，雉堞圮毁，蓁莽荒秽，因作小楼二间，与月波楼通。远吞山光，平挹江濑，幽阒辽夐，不可具状。夏宜急雨，有瀑布声；冬宜密雪，有碎玉声；宜鼓琴，琴调虚畅；宜咏诗，诗韵清绝；宜围棋，子声丁丁然；宜投壶，矢声铮铮然；皆竹楼之所助也。</p>
<p>公退之暇，被鹤氅衣，戴华阳巾，手执《周易》一卷，焚香默坐，消遣世虑。江山之外，第见风帆沙鸟，烟云竹树而已。待其酒力醒，茶烟歇，送夕阳，迎素月，亦谪居之胜概也。</p>
<p>彼齐云、落星，高则高矣；井干、丽谯，华则华矣；止于贮妓女，藏歌舞，非骚人之事，吾所不取。</p>
<p>吾闻竹工云，竹之为瓦，仅十稔。若重覆之，得二十稔。噫，吾以至道乙未岁，自翰林出滁上，丙申移广陵；丁酉又入西掖，戊戌岁除日有齐安之命，己亥闰三月到郡。四年之间，奔走不暇，未知明年又在何处，岂惧竹楼之易朽乎！幸后之人与我同志，嗣而葺之，庶斯楼之不朽也！</p>
<p>咸平二年八月十五日记。</p>
<h4 id="上枢密韩太尉书">上枢密韩太尉书</h4>
<p>太尉执事：辙生好为文，思之至深。以为文者气之所形，然文不可以学而能，气可以养而致。孟子曰：“我善养吾浩然之气。”今观其文章，宽厚宏博，充乎天地之间，称其气之小大。太史公行天下，周览四海名山大川，与燕、赵间豪俊交游，故其文疏荡，颇有奇气。此二子者，岂尝执笔学为如此之文哉？其气充乎其中而溢乎其貌，动乎其言而见乎其文，而不自知也。</p>
<p>we辙生十有九年矣。其居家所与游者，不过其邻里乡党之人；所见不过数百里之间，无高山大野可登览以自广；百氏之书，虽无所不读，然皆古人之陈迹，不足以激发其志气。恐遂汩没，故决然舍去，求天下奇闻壮观，以知天地之广大。过秦、汉之故都，恣观终南、嵩、华之高，北顾黄河之奔流，慨然想见古之豪杰。至京师，仰观天子宫阙之壮，与仓廪、府库、城池、苑囿之富且大也，而后知天下之巨丽。见翰林欧阳公，听其议论之宏辩，观其容貌之秀伟，与其门人贤士大夫游，而后知天下之文章聚乎此也。太尉以才略冠天下，天下之所恃以无忧，四夷之所惮以不敢发，入则周公、召公，出则方叔、召虎。而辙也未之见焉。</p>
<p>且夫人之学也，不志其大，虽多而何为？辙之来也，于山见终南、嵩、华之高，于水见黄河之大且深，于人见欧阳公，而犹以为未见太尉也。故愿得观贤人之光耀，闻一言以自壮，然后可以尽天下之大观而无憾者矣。</p>
<p>辙年少，未能通习吏事。向之来，非有取于斗升之禄，偶然得之，非其所乐。然幸得赐归待选，使得优游数年之间，将以益治其文，且学为政。太尉苟以为可教而辱教之，又幸矣！</p>
<h4 id="古代文论选段">古代文论选段</h4>
<h5 id="毛诗序">毛诗序</h5>
<p>诗者，志之所之也。在心为志，发言为诗。情动于中而形于言，言之不足故嗟叹之，嗟叹之不足故永歌之，永歌之不足，不知手之舞之，足之蹈之也。</p>
<h5 id="典论论文">典论·论文</h5>
<p>盖文章，经国之大业，不朽之盛事。年寿有时而尽，荣乐止乎其身，二者必至之常期，未若文章之无穷。是以古之作者，寄身于翰墨，见意于篇籍，不假良史之辞，不讬飞驰之势，而声名自传于后。</p>
<h5 id="诗品序">诗品序</h5>
<p>若乃春风春鸟，秋月秋蝉，夏云暑雨，冬月祁寒，斯四候之感诸诗者也。嘉会寄诗以亲，离群讬诗以怨。至于楚臣去境，汉妾辞宫。或骨横朔野，魂逐飞蓬。或负戈外戍，杀气雄边。塞客衣单，孀闺泪尽。或士有解佩出朝，一去忘返。女有扬蛾入宠，再盼倾国。凡斯种种，感荡心灵，非陈诗何以展其义？非长歌何以骋其情？故曰：“诗可以群，可以怨。”使穷贱易安，幽居靡闷，莫尚于诗矣。</p>
<h5 id="与元九书">与元九书</h5>
<p>感人心者，莫先乎情，莫始乎言，莫切乎声，莫深乎义。诗者：根情，苗言，华声，实义。</p>
<h5 id="题画">题画</h5>
<p>江馆清秋，晨起看竹，烟光日影露气，皆浮动于疏枝密叶之间。胸中勃勃遂有画意。其实胸中之竹，并不是眼中之竹也。因而磨墨展纸，落笔倏作变相，手中之竹又不是胸中之竹也。总之，意在笔先者，定则也；趣在法外者，化机也。独画云乎哉！</p>
<h5 id="人间词话">人间词话</h5>
<p>词以境界为最上，有境界则自成高格，自有名句。</p>
<p>境非独谓景物也，喜怒哀乐，亦人心中之一境界。故能写真景物、真感情者，谓之有境界。否则谓之无境界。</p>
<p>古今之成大事业、大学问者，必经过三种之境界：“昨夜西风凋碧树。独上高楼，望尽天涯路。”此第一境也。“衣带渐宽终不悔，为伊消得人憔悴。”此第二境也。“众里寻他千百度，蓦然回首，那人正在，灯火阑珊处。”此第三境也。此等语皆非大词人不能道。然遽以此意解释诸词，恐为晏、欧诸公所不许也。</p>
<h3 id="诗词曲">诗词曲</h3>
<h4 id="静女">静女</h4>
<p>静女其姝，俟我于城隅。爱而不见，搔首踟蹰。</p>
<p>静女其娈，贻我彤管。彤管有炜，说怿女美。</p>
<p>自牧归荑，洵美且异。匪女之为美，美人之贻。</p>
<h4 id="无衣">无衣</h4>
<p>岂曰无衣？与子同袍。王于兴师，修我戈矛。与子同仇！</p>
<p>岂曰无衣？与子同泽。王于兴师，修我矛戟。与子偕作！</p>
<p>岂曰无衣？与子同裳。王于兴师，修我甲兵。与子偕行！</p>
<h4 id="离骚">离骚</h4>
<p>帝高阳之苗裔兮，朕皇考曰伯庸。摄提贞于孟<ruby><rb>陬]<sup>(zōu)兮，惟庚[寅]</sup>(yín)吾以降。皇览[揆</rb><rt>kuí</rt></ruby>余初度兮，肇锡余以嘉名。名余曰正则兮，字余曰灵均。</p>
<p>纷吾既有此内美兮，又重之以修能。<ruby><rb>扈]<sup>(hù)江离与辟芷兮，纫秋兰以为佩。汩余若将不及兮，恐年岁之不吾与。朝[搴]</sup>(qiān)[阰</rb><rt>pí</rt></ruby>之木兰兮，夕揽洲之宿莽。日月忽其不淹兮，春与秋其代序。惟草木之零落兮，恐美人之迟暮。不抚壮而弃秽兮，何不改此度？乘骐骥以驰骋兮，来吾道夫先路！……</p>
<p>【以下为部编版课本要求背诵内容】长太息以掩涕兮，哀民生之多艰。余虽好修[姱]<sup>(kuā)以羁鞿（革几）兮，[謇]</sup>(jiǎn)朝谇而夕替。既替余以蕙（纟襄）兮，又申之以揽[茝]<sup>(chǎi)。亦余心之所善兮，虽九死其犹未悔。怨灵修之浩荡兮，终不察夫民心。众女嫉余之蛾眉兮，谣[诼]</sup>(zhuó)谓余以善淫。固时俗之工巧兮，偭规矩而改错。背绳墨以追曲兮，竞周容以为度。[忳]<sup>(tún)郁邑余[侘]</sup>(chà)[傺]<sup>(chì)兮，吾独穷困乎此时也。宁[溘]</sup>(kè)死以流亡兮，余不忍为此态也。鸷鸟之不群兮，自前世而固然。何方圜之能周兮，夫孰异道而相安？屈心而抑志兮，忍尤而攘诟。伏清白以死直兮，固前圣之所厚。</p>
<h4 id="涉江采芙蓉">涉江采芙蓉</h4>
<p>涉江采芙蓉，兰泽多芳草。</p>
<p>采之欲遗谁？所思在远道。</p>
<p>还顾望旧乡，长路漫浩浩。</p>
<p>同心而离居，忧伤以终老。</p>
<h4 id="短歌行">短歌行</h4>
<p>帝对酒当歌，人生几何！譬如朝露，去日苦多。慨当以慷，忧思难忘。何以解忧？唯有杜康。青青子衿，悠悠我心。但为君故，沉吟至今。呦呦鹿鸣，食野之苹。我有嘉宾，鼓瑟吹笙。明明如月，何时可掇？忧从中来，不可断绝。越陌度阡，枉用相存。契阔谈<ruby><rb>讌</rb><rt>yàn</rt></ruby>，心念旧恩。月明星稀，乌鹊南飞。绕树三匝，何枝可依？山不厌高，海不厌深。周公吐哺，天下归心。</p>
<h4 id="归园田居其一">归园田居（其一）</h4>
<p>少无适俗韵，性本爱丘山。误落尘网中，一去三十年。羁鸟恋旧林，池鱼思故渊。开荒南野际，守拙归园田。方宅十余亩，草屋八九间。榆柳荫后檐，桃李罗堂前。暧暧远人村，依依墟里烟。狗吠深巷中，鸡鸣桑树颠。户庭无尘杂，虚室有余闲。久在樊笼里，复得返自然。</p>
<h4 id="拟行路难其四">拟行路难（其四）</h4>
<p>泻水置平地，各自东西南北流。</p>
<p>人生亦有命，安能行叹复坐愁？</p>
<p>酌酒以自宽，举杯断绝歌路难。</p>
<p>心非木石岂无感？吞声踯躅不敢言。</p>
<h4 id="春江花月夜">春江花月夜</h4>
<p>春江潮水连海平，海上明月共潮生。</p>
<p>滟滟随波千万里，何处春江无月明！</p>
<p>江流宛转绕芳甸，月照花林皆似霰。</p>
<p>空里流霜不觉飞，汀上白沙看不见。</p>
<p>江天一色无纤尘，皎皎空中孤月轮。</p>
<p>江畔何人初见月？江月何年初照人？</p>
<p>人生代代无穷已，江月年年望相似。</p>
<p>不知江月待何人，但见长江送流水。</p>
<p>白云一片去悠悠，青枫浦上不胜愁。</p>
<p>谁家今夜扁舟子？何处相思明月楼？</p>
<p>可怜楼上月裴回，应照离人妆镜台。</p>
<p>玉户帘中卷不去，捣衣砧上拂还来。</p>
<p>此时相望不相闻，愿逐月华流照君。</p>
<p>鸿雁长飞光不度，鱼龙潜跃水成文。</p>
<p>昨夜闲潭梦落花，可怜春半不还家。</p>
<p>江水流春去欲尽，江潭落月复西斜。</p>
<p>斜月沉沉藏海雾，碣石潇湘无限路。</p>
<p>不知乘月几人归，落花摇情满江树。</p>
<h4 id="山居秋暝">山居秋暝</h4>
<p>空山新雨后，天气晚来秋。</p>
<p>明月松间照，清泉石上流。</p>
<p>竹喧归浣女，莲动下渔舟。</p>
<p>随意春芳歇，王孙自可留。</p>
<h4 id="蜀道难">蜀道难</h4>
<p>噫吁[嚱]<sup>(xī)，危乎高哉！蜀道难以攀越，简直难于上青天。蚕丛及鱼凫，开国何茫然！尔来四万八千岁，不与秦塞通人烟。西当太白有鸟道，可以横绝峨眉巅。地崩山摧壮士死，然后天梯石栈相钩连。上有六龙回日之高标，下有冲波逆折之回川。黄鹤之飞尚不得过，猿[猱]</sup>(náo)欲度愁攀援。青泥何盘盘，百步九折萦岩峦。[扪]<sup>(mén)[参]</sup>(shēn)历井仰胁息，以手抚膺坐长叹。</p>
<p>问君西游何时还？畏途<ruby><rb>巉]<sup>(chán)岩不可攀。但见悲鸟号古木，雄飞雌从绕林间。又闻子规啼夜月，愁空山。蜀道之难，难于上青天，使人听此凋朱颜！连峰去天不盈尺，枯松倒挂倚绝壁。飞湍瀑流争喧[豗]</sup>(huī)，[砯</rb><rt>pīng</rt></ruby>崖转石万壑雷。其险也如此，嗟尔远道之人胡为乎来哉！</p>
<p>剑阁峥嵘而崔嵬，一夫当关，万夫莫开。所守或匪亲，化为狼与豺。朝避猛虎，夕避长蛇，磨牙吮血，杀人如麻。锦城虽云乐，不如早还家。蜀道之难，难于上青天，侧身西望长咨嗟！</p>
<h4 id="梦游天姥吟留别">梦游天姥吟留别</h4>
<p>海客谈瀛洲，烟涛微茫信难求；越人语天姥，云霞明灭或可睹。天姥连天向天横，势拔五岳掩赤城。天台四万八千丈，对此欲倒东南倾。</p>
<p>我欲因之梦吴越，一夜飞度镜湖月。湖月照我影，送我至剡溪。谢公宿处今尚在，渌水荡漾清猿啼。脚著谢公屐，身登青云梯。半壁见海日，空中闻天鸡。千岩万转路不定，迷花倚石忽已暝。熊咆龙吟殷岩泉，栗深林兮惊层巅。云青青兮欲雨，水澹澹兮生烟。列缺霹雳，丘峦崩摧。洞天石扉，<ruby><rb>訇</rb><rt>hōng</rt></ruby>然中开。青冥浩荡不见底，日月照耀金银台。霓为衣兮风为马，云之君兮纷纷而来下。虎鼓瑟兮鸾回车，仙之人兮列如麻。忽魂悸以魄动，恍惊起而长嗟。惟觉时之枕席，失向来之烟霞。</p>
<p>世间行乐亦如此，古来万事东流水。别君去兮何时还？且放白鹿青崖间，须行即骑访名山。安能摧眉折腰事权贵，使我不得开心颜！</p>
<h4 id="将进酒">将进酒</h4>
<p>君不见黄河之水天上来，奔流到海不复回。君不见高堂明镜悲白发，朝如青丝暮成雪。人生得意须尽欢，莫使金樽空对月。天生我材必有用，千金散尽还复来。
烹羊宰牛且为乐，会须一饮三百杯。
岑夫子，丹丘生，将进酒，杯莫停。与君歌一曲，请君为我倾耳听。钟鼓馔玉不足贵，但愿长醉不愿醒。古来圣贤皆寂寞，惟有饮者留其名。陈王昔时宴平乐，斗酒十千恣欢谑。主人何为言少钱，径须沽取对君酌。五花马、千金裘，呼儿将出换美酒，与尔同销万古愁。</p>
<h4 id="燕歌行">燕歌行</h4>
<p>开元二十六年，客有从元戎出塞而还者；作《燕歌行》以示。适感征戍之事，因而和焉。</p>
<p>汉家烟尘在东北，汉将辞家破残贼。</p>
<p>男儿本自重横行，天子非常赐颜色。</p>
<p>摐金伐鼓下榆关，旌旆逶迤碣石间。</p>
<p>校尉羽书飞瀚海，单于猎火照狼山。</p>
<p>山川萧条极边土，胡骑凭陵杂风雨。</p>
<p>战士军前半死生，美人帐下犹歌舞！</p>
<p>大漠穷秋塞草腓，孤城落日斗兵稀。</p>
<p>身当恩遇常轻敌，力尽关山未解围。</p>
<p>铁衣远戍辛勤久，玉箸应啼别离后。</p>
<p>少妇城南欲断肠，征人蓟北空回首。</p>
<p>边庭飘飖那可度，绝域苍茫无所有！</p>
<p>杀气三时作阵云，寒声一夜传刁斗。</p>
<p>相看白刃血纷纷，死节从来岂顾勋？</p>
<p>君不见沙场征战苦，至今犹忆李将军！</p>
<h4 id="蜀相">蜀相</h4>
<p>丞相祠堂何处寻？锦官城外柏森森。</p>
<p>映阶碧草自春色，隔叶黄鹂空好音。</p>
<p>三顾频烦天下计，两朝开济老臣心。</p>
<p>出师未捷身先死，长使英雄泪满襟。</p>
<h4 id="客至">客至</h4>
<p>舍南舍北皆春水，但见群鸥日日来。</p>
<p>花径不曾缘客扫，蓬门今始为君开。</p>
<p>盘飧市远无兼味，樽酒家贫只旧醅。</p>
<p>肯与邻翁相对饮，隔篱呼取尽余杯。</p>
<h4 id="登高">登高</h4>
<p>风急天高猿啸哀，渚清沙白鸟飞回。</p>
<p>无边落木萧萧下，不尽长江滚滚来。</p>
<p>万里悲秋常作客，百年多病独登台。</p>
<p>艰难苦恨繁霜鬓，潦倒新停浊酒杯。</p>
<h4 id="登岳阳楼">登岳阳楼</h4>
<p>昔闻洞庭水，今上岳阳楼。</p>
<p>吴楚东南坼，乾坤日夜浮。</p>
<p>亲朋无一字，老病有孤舟。</p>
<p>戎马关山北，凭轩涕泗流。</p>
<h4 id="琵琶行并序">琵琶行（并序）</h4>
<p>元和十年，予左迁九江郡司马。明年秋，送客湓浦口，闻舟中夜弹琵琶者，听其音，铮铮然有京都声。问其人，本长安倡女，尝学琵琶于穆、曹二善才，年长色衰，委身为贾人妇。遂命酒，使快弹数曲。曲罢悯然，自叙少小时欢乐事，今漂沦憔悴，转徙于江湖间。予出官二年，恬然自安，感斯人言，是夕始觉有迁谪意。因为长句，歌以赠之，凡六百一十六言，命曰《琵琶行》。</p>
<p>浔阳江头夜送客，枫叶荻花秋瑟瑟。主人下马客在船，举酒欲饮无管弦。醉不成欢惨将别，别时茫茫江浸月。</p>
<p>忽闻水上琵琶声，主人忘归客不发。寻声暗问弹者谁，琵琶声停欲语迟。移船相近邀相见，添酒回灯重开宴。千呼万唤始出来，犹抱琵琶半遮面。转轴拨弦三两声，未成曲调先有情。弦弦掩抑声声思，似诉平生不得志。低眉信手续续弹，说尽心中无限事。轻拢慢捻抹复挑，初为《霓裳》后《六幺》。大弦嘈嘈如急雨，小弦切切如私语。嘈嘈切切错杂弹，大珠小珠落玉盘。间关莺语花底滑，幽咽泉流冰下难。冰泉冷涩弦凝绝，凝绝不通声暂歇。别有幽愁暗恨生，此时无声胜有声。银瓶乍破水浆迸，铁骑突出刀枪鸣。曲终收拨当心画，四弦一声如裂帛。东船西舫悄无言，唯见江心秋月白。</p>
<p>沉吟放拨插弦中，整顿衣裳起敛容。自言本是京城女，家在虾蟆陵下住。十三学得琵琶成，名属教坊第一部。曲罢曾教善才服，妆成每被秋娘妒。五陵年少争缠头，一曲红绡不知数。钿头银篦击节碎，血色罗裙翻酒污。今年欢笑复明年，秋月春风等闲度。弟走从军阿姨死，暮去朝来颜色故。门前冷落鞍马稀，老大嫁作商人妇。商人重利轻别离，前月浮梁买茶去。去来江口守空船，绕船月明江水寒。夜深忽梦少年事，梦啼妆泪红阑干。</p>
<p>我闻琵琶已叹息，又闻此语重唧唧。同是天涯沦落人，相逢何必曾相识！我从去年辞帝京，谪居卧病浔阳城。浔阳地僻无音乐，终岁不闻丝竹声。住近湓江地低湿，黄芦苦竹绕宅生。其间旦暮闻何物？杜鹃啼血猿哀鸣。春江花朝秋月夜，往往取酒还独倾。岂无山歌与村笛，呕哑嘲哳难为听。今夜闻君琵琶语，如听仙乐耳暂明。莫辞更坐弹一曲，为君翻作《琵琶行》。</p>
<p>感我此言良久立，却坐促弦弦转急。凄凄不似向前声，满座重闻皆掩泣。座中泣下谁最多？江州司马青衫湿。</p>
<h4 id="李凭箜篌引">李凭箜篌引</h4>
<p>吴丝蜀桐张高秋，空山凝云颓不流。</p>
<p>江娥啼竹素女愁，李凭中国弹箜篌。</p>
<p>昆山玉碎凤凰叫，芙蓉泣露香兰笑。</p>
<p>十二门前融冷光，二十三丝动紫皇。</p>
<p>女娲炼石补天处，石破天惊逗秋雨。</p>
<p>梦入神山教神妪，老鱼跳波瘦蛟舞。</p>
<p>吴质不眠倚桂树，露脚斜飞湿寒兔。</p>
<h4 id="菩萨蛮小山重叠金明灭">菩萨蛮（小山重叠金明灭）</h4>
<p>小山重叠金明灭，鬓云欲度香腮雪。懒起画蛾眉，弄妆梳洗迟。</p>
<p>照花前后镜，花面交相映。新帖绣罗襦，双双金鹧鸪。</p>
<h4 id="锦瑟">锦瑟</h4>
<p>锦瑟无端五十弦，一弦一柱思华年。</p>
<p>庄生晓梦迷蝴蝶，望帝春心托杜鹃。</p>
<p>沧海月明珠有泪，蓝田日暖玉生烟。</p>
<p>此情可待成追忆，只是当时已惘然。</p>
<h4 id="虞美人春花秋月何时了">虞美人（春花秋月何时了）</h4>
<p>春花秋月何时了？往事知多少。小楼昨夜又东风，故国不堪回首月明中。</p>
<p>雕栏玉砌应犹在，只是朱颜改。问君能有几多愁？恰似一江春水向东流。</p>
<h4 id="望海潮东南形胜">望海潮（东南形胜）</h4>
<p>东南形胜，三吴都会，钱塘自古繁华。烟柳画桥，风帘翠幕，参差十万人家。云树绕堤沙，怒涛卷霜雪，天<ruby><rb>堑</rb><rt>qiàn</rt></ruby>无涯。市列珠玑，户盈罗绮，竞豪奢。</p>
<p>重湖叠巘yǎn清嘉，有三秋桂子，十里荷花。羌管弄晴，菱歌泛夜，嬉嬉钓叟莲娃。千骑拥高牙，乘醉听箫鼓，吟赏烟霞。异日图将好景，归去凤池夸。</p>
<h4 id="桂枝香金陵怀古">桂枝香·金陵怀古</h4>
<p>登临送目，正故国晚秋，天气初肃。千里澄江似练，翠峰如簇。归帆去棹残阳里，背西风，酒旗斜矗。彩舟云淡，星河鹭起，画图难足。</p>
<p>念往昔，繁华竞逐，叹门外楼头，悲恨相续。千古凭高对此，谩嗟荣辱。六朝旧事随流水，但寒烟衰草凝绿。至今商女，时时犹唱，后庭遗曲。</p>
<h4 id="江城子乙卯正月二十日夜记梦">江城子·乙卯正月二十日夜记梦</h4>
<p>十年生死两茫茫，不思量，自难忘。千里孤坟，无处话凄凉。纵使相逢应不识，尘满面，鬓如霜。</p>
<p>夜来幽梦忽还乡，小轩窗，正梳妆。相顾无言，惟有泪千行。料得年年肠断处，明月夜，短松冈。</p>
<h4 id="念奴娇赤壁怀古">念奴娇·赤壁怀古</h4>
<p>大江东去，浪淘尽，千古风流人物。故垒西边，人道是，三国周郎赤壁。乱石穿空，惊涛拍岸，卷起千堆雪。江山如画，一时多少豪杰。</p>
<p>遥想公瑾当年，小乔初嫁了，雄姿英发。羽扇纶巾，谈笑间，樯橹灰飞烟灭。故国神游，多情应笑我，早生华发。人生如梦，一尊还<ruby><rb>酹</rb><rt>lèi</rt></ruby>江月。</p>
<h4 id="登快阁">登快阁</h4>
<p>痴儿了却公家事，快阁东西倚晚晴。</p>
<p>落木千山天远大，澄江一道月分明。</p>
<p>朱弦已为佳人绝，青眼聊因美酒横。</p>
<p>万里归船弄长笛，此心吾与白鸥盟。</p>
<h4 id="鹊桥仙纤云弄巧">鹊桥仙（纤云弄巧）</h4>
<p>纤云弄巧，飞星传恨，银汉迢迢暗度。金风玉露一相逢，便胜却人间无数。</p>
<p>柔情似水，佳期如梦，忍顾鹊桥归路！两情若是久长时，又岂在朝朝暮暮。</p>
<h4 id="苏幕遮燎沉香">苏幕遮（燎沉香）</h4>
<p>燎沉香，消溽暑。鸟雀呼晴，侵晓窥檐语。叶上初阳干宿雨，水面清圆，一一风荷举。</p>
<p>故乡遥，何日去？家住吴门，久作长安旅。五月渔郎相忆否？小楫轻舟，梦入芙蓉浦。</p>
<h4 id="声声慢寻寻觅觅">声声慢（寻寻觅觅）</h4>
<p>寻寻觅觅，冷冷清清，凄凄惨惨戚戚。乍暖还寒时候，最难将息。三杯两盏淡酒，怎敌他、晚来风急！雁过也，正伤心，却是旧时相识。</p>
<p>满地黄花堆积，憔悴损，如今有谁堪摘？守着窗儿，独自怎生得黑！梧桐更兼细雨，到黄昏、点点滴滴。这次第，怎一个愁字了得！</p>
<h4 id="书愤早岁那知世事艰">书愤（早岁那知世事艰）</h4>
<p>早岁那知世事艰，中原北望气如山。</p>
<p>楼船夜雪瓜洲渡，铁马秋风大散关。</p>
<p>塞上长城空自许，镜中衰鬓已先斑。</p>
<p>出师一表真名世，千载谁堪伯仲间！</p>
<h4 id="临安春雨初霁">临安春雨初霁</h4>
<p>世味年来薄似纱，谁令骑马客京华。</p>
<p>小楼一夜听春雨，深巷明朝卖杏花。</p>
<p>矮纸斜行闲作草，晴窗细乳戏分茶。</p>
<p>素衣莫起风尘叹，犹及清明可到家。</p>
<h4 id="念奴娇过洞庭">念奴娇·过洞庭</h4>
<p>洞庭青草，近中秋，更无一点风色。玉鉴琼田三万顷，着我扁舟一叶。素月分辉，明河共影，表里俱澄澈。悠然心会，妙处难与君说。</p>
<p>应念岭海经年，孤光自照，肝胆皆冰雪。短发萧骚襟袖冷，稳泛沧浪空阔。尽挹西江，细斟北斗，万象为宾客。扣舷独啸，不知今夕何夕！</p>
<h4 id="永遇乐京口北固亭怀古">永遇乐·京口北固亭怀古</h4>
<p>千古江山，英雄无觅孙仲谋处。舞榭歌台，风流总被雨打风吹去。斜阳草树，寻常巷陌，人道寄奴曾住。想当年，金戈铁马，气吞万里如虎。</p>
<p>元嘉草草，封狼居胥，赢得仓皇北顾。四十三年，望中犹记，烽火扬州路。可堪回首，佛狸祠下，一片神鸦社鼓。凭谁问：廉颇老矣，尚能饭否？</p>
<h4 id="菩萨蛮书江西造口壁">菩萨蛮·书江西造口壁</h4>
<p>郁孤台下清江水，中间多少行人泪。西北望长安，可怜无数山。</p>
<p>青山遮不住，毕竟东流去。江晚正愁予，山深闻鹧鸪。</p>
<h4 id="青玉案元夕">青玉案·元夕</h4>
<p>东风夜放花千树，更吹落、星如雨。宝马雕车香满路。凤箫声动，玉壶光转，一夜鱼龙舞。</p>
<p>蛾儿雪柳黄金缕，笑语盈盈暗香去。众里寻他千百度，蓦然回首，那人却在，灯火阑珊处。</p>
<h4 id="贺新郎国脉微如缕">贺新郎（国脉微如缕）</h4>
<p>实之三和有忧边之语，走笔答之。</p>
<p>国脉微如缕。问长缨何时入手，缚将戎主？未必人间无好汉，谁与宽些尺度？试看取当年韩五。岂有谷城公付授，也不干曾遇骊山母。谈笑起，两河路。</p>
<p>少时棋柝曾联句。叹而今登楼揽镜，事机频误。闻说北风吹面急，边上冲梯屡舞。君莫道投鞭虚语，自古一贤能制难，有金汤便可无张许？快投笔，莫题柱。</p>
<h4 id="扬州慢淮左名都">扬州慢（淮左名都）</h4>
<p>淳熙丙申至日，予过维扬。夜雪初霁，荠麦弥望。入其城，则四顾萧条，寒水自碧，暮色渐起，戍角悲吟。予怀怆然，感慨今昔，因自度此曲。千岩老人以为有《黍离》之悲也。</p>
<p>淮左名都，竹西佳处，解鞍少驻初程。过春风十里，尽荠麦青青。自胡马窥江去后，废池乔木，犹厌言兵。渐黄昏，清角吹寒，都在空城。</p>
<p>杜郎俊赏，算而今重到须惊。纵豆蔻词工，青楼梦好，难赋深情。二十四桥仍在，波心荡，冷月无声。念桥边红药，年年知为谁生？</p>
<h4 id="长亭送别正宫端正好">长亭送别（【正宫】【端正好】）</h4>
<p>碧云天，黄花地，西风紧，北雁南飞。晓来谁染霜林醉？总是离人泪。</p>
<h4 id="朝天子咏喇叭">朝天子·咏喇叭</h4>
<p>喇叭，唢呐，曲儿小腔儿大。官船来往乱如麻，全仗你抬声价。</p>
<p>军听了军愁，民听了民怕。哪里去辨甚么真共假？</p>
<p>眼见的吹翻了这家，吹伤了那家，只吹的水尽鹅飞罢！</p>]]></content>
      <categories>
        <category>High School</category>
        <category>Chinese</category>
        <category>Classical Chinese Literature and Poetry</category>
      </categories>
      <tags>
        <tag>School Notes</tag>
        <tag>High School</tag>
        <tag>Chinese</tag>
      </tags>
  </entry>
  <entry>
    <title>植物生命活动的调节</title>
    <url>/2022/03/26/biology/High%20School/b3%20homeostatic/%E6%A4%8D%E7%89%A9%E7%94%9F%E5%91%BD%E6%B4%BB%E5%8A%A8%E7%9A%84%E8%B0%83%E8%8A%82/</url>
    <content><![CDATA[<h2 id="导言">导言</h2>
<p>植物与动物在生命活动的调节方式上具有明显的区别。植物生命活动的调节中，植物的激素调节是最重要的，环境因素也参与调节之中。</p>
<p>植物激素和环境因素同时参与植物生命活动的调节。植物生长素是第一个被发现的植物激素，故从介绍植物生长素入手，详细介绍其发现过程、合成运输和分布，以及生理作用等。其他植物激素的作用特点和植物生长素类似，在下一部分作出了简要介绍。在此之后，安排了环境因素影响植物生命活动的内容。本节内容从环境、个体、器官、细胞、分子水平等方面介绍了植物生命活动的调节。</p>
<h3 id="课程标准">课程标准</h3>
<p>概念六、植物生命活动受到多种因素的调节，其中最重要的是植物激素的调节</p>
<p>一、概述科学家经过不断的探索，发现了植物生长素，并揭示了它在调节植物生长时表现出两重性，既能促进生长，也能抑制生长</p>
<p>二、举例说明几种主要植物激素的作用，这些激素可通过协同、拮抗等方式共同实现对植物生命活动的调节</p>
<p>三、举例说明生长素、细胞分裂素、赤霉素、脱落酸和乙烯等植物激素及其类似物在生产上得到了广泛应用</p>
<p>四、概述其他因素参与植物生命活动的调节，如光、重力和温度等</p>
<h4 id="教学要求">教学要求</h4>
<ol type="1">
<li><p>探究植物生长调节剂对扦插枝条生根的作用。</p></li>
<li><p>探究乙烯利对水果的催熟作用。</p></li>
</ol>
<h4 id="学业要求">学业要求</h4>
<p>查找植物激素在生产中应用的相关资料</p>
<h4 id="内容说明">内容说明</h4>
<ol type="1">
<li><p>概述植物生长素的发现过程及主要结论，说明生长素在调节植物生长中所表现的两重性。</p></li>
<li><p>举例说明生长素、细胞分裂素、赤霉素、脱落酸和乙烯等植物激素的主要作用。</p></li>
<li><p>举例说明不同植物激素间的协同和拮抗作用关系，揭示植物正常的生命活动是多种激素相互协调、共同调节的结果。</p></li>
<li><p>举例说明植物激素在实践中的应用。</p></li>
<li><p>概述光、重力、温度等因素对植物生长发育的调节作用及其生产实践中的应用。</p></li>
</ol>
<h2 id="知识聚焦">知识聚焦</h2>
<h3 id="一植物生长素">一、植物生长素</h3>
<h4 id="向光性与植物激素">1. 向光性与植物激素</h4>
<p>植物的<strong><em>向光性</em></strong>指在<strong>单侧光的照射</strong>下，植物<strong>朝向光源方向生长</strong>的现象。</p>
<p>植物体中<strong><em>生长素</em></strong>的来源主要是色氨酸的代谢，有吲哚乙酸（IAA）、苯乙酸（PAA）、吲哚丁酸（IBA）。</p>
<p><strong><em>植物激素</em>指植物<em>体内产生</em>，能<em>从产生部位运输到作用部位</em>的，对植物生长发育有<em>显著影响</em>的微量有机物。</strong></p>
<h4 id="生长素的合成运输分布和生理作用">2.
生长素的合成、运输、分布和生理作用</h4>
<p>植物之中，<strong><em>极性运输</em></strong>是只能单方向地运输的方式，是一种<strong>主动运输</strong>。生长素在胚芽鞘、芽、幼叶和幼根中只能从形态学上端（植物生长方向）往形态学下端运输（极性运输）；成熟组织中生长素可以通过输导组织进行非极性运输（自由扩散）。</p>
<p>生长素以传递信息的方式，在<strong>浓度较<em>低</em>时<em>促进</em>生长</strong>，<strong>浓度较<em>高</em></strong>（一般在根茎较下方）时则会<strong><em>抑制</em>生长</strong>。幼嫩的细胞对生长素敏感，衰老的细胞比较迟钝，不同器官对其敏感程度也不同。</p>
<p>由于顶芽产生的生长素向下运输，枝条侧芽处生长素浓度较高，发育受到抑制，因此植株表现出<strong><em>顶端优势</em></strong>。</p>
<h4 id="生长素的发现过程">1. 生长素的发现过程</h4>
<p>19世纪末，达尔文和他的儿子设计了实验来探讨植物向光性的原因。实验发现，在单侧光照射下，金丝雀虉草的胚芽鞘会向光弯曲生长；如果去掉胚芽鞘，或者用锡箔罩子把尖端罩上，则不发生弯曲；如果罩上的是尖端下面的一端，胚芽鞘仍会弯向光源生长。</p>
<p>根据实验，达尔文提出，胚芽鞘的尖端受单侧光的刺激后，向下面的伸长区传递了某种影响，造成伸长区背光面比向光面生长快，因而使胚芽鞘出现向光性弯曲。</p>
<p>1913年，鲍森·詹森的实验证明，胚芽鞘尖端产生的影响可以透过琼脂片传递给下部。</p>
<p>1918年，拜尔的实验证明，胚芽鞘的弯曲生长，是因为尖端产生的影响在其下部分布不均匀。</p>
<p>上述实验初步证明尖端产生的影响可能是一种化学物质，在胚芽鞘尖端以下部位的分布不均匀造成了胚芽鞘的弯曲生长。</p>
<p>1926年，温特将切下的燕麦胚芽鞘尖端放在琼脂块上，几小时后移去尖端，将琼脂切成小块，再将处理后的琼脂块放在切去尖端的其中一侧，置于黑暗中，结果胚芽鞘会向对侧弯曲生长。如果放上的是没有接触过胚芽鞘尖端的琼脂块，胚芽鞘不会生长也不会弯曲。</p>
<p>根据实验，温特进一步证明了确实是一种化学物质影响胚芽鞘的弯曲生长，并命名为生长素。</p>
<p><img src="https://raw.githubusercontent.com/PassionPenguin/picgo-database/main/%E6%A4%8D%E7%89%A9%E7%94%9F%E9%95%BF%E7%B4%A0.png" alt="植物生长素" style="zoom:50%;"></p>
<h3 id="二其他植物激素与植物生长调节剂">二、其他植物激素与植物生长调节剂</h3>
<h4 id="其他激素的种类与作用">1. 其他激素的种类与作用</h4>
<table>
<colgroup>
<col style="width: 10%">
<col style="width: 23%">
<col style="width: 65%">
</colgroup>
<thead>
<tr class="header">
<th>植物激素</th>
<th>合成部位</th>
<th>主要作用</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>细胞分裂素</td>
<td>主要是根尖</td>
<td>促进细胞分裂；促进芽的分化、侧枝发育、叶绿素合成。</td>
</tr>
<tr class="even">
<td>脱落酸</td>
<td>根冠萎蔫的叶片</td>
<td>抑制细胞分裂；促进气孔关闭；促进叶和果实的衰老和脱落；维持种子休眠。</td>
</tr>
<tr class="odd">
<td>乙烯</td>
<td>植物体各个部位</td>
<td>促进果实成熟；促进开花；促进叶、花、果实脱落。</td>
</tr>
<tr class="even">
<td>赤霉素 GA</td>
<td>幼芽、幼根未成熟的种子</td>
<td>促进细胞伸长，从而引起植株增高；促进细胞分裂与分化；促进种子萌发、开花和果实发育。</td>
</tr>
</tbody>
</table>
<p>植物激素在植物的含量很少，但是在调节植物生长发育上的作用极为重要。植物激素对植物生长发育的调控，是依靠调控细胞分裂、伸长、分化和死亡等方式实现的。</p>
<h4 id="植物激素之间相互作用">2. 植物激素之间相互作用</h4>
<p>植物激素并不孤立地起作用，如生长素主要促进细胞核的分裂，而细胞分裂素主要促进细胞质的分裂，二者表现出协同作用。调节种子萌发过程中，赤霉素促进萌发，而脱落酸抑制萌发，二者表现出拮抗作用。另外，不同激素代谢上存在相互作用，如生长素升高的一定值时会促进乙烯合成，乙烯的升高会反过来抑制生长素作用。</p>
<p>在植物各器官中决定器官生长发育的往往是不同激素的相对含量。对于黄瓜开花，黄瓜茎端脱落酸与赤霉素比值较高时有利于分化形成雌花，相反雄花。</p>
<p>在植物生长发育中，不同激素的调节往往同时表现出一定的顺序性。</p>
<p>因此我们说，<strong>植物的生长、发育是由<em>多种激素相互作用</em>形成的调节网络调控的</strong>。</p>
<h4 id="植物生长调节剂">3. 植物生长调节剂</h4>
<p>植物生长调节剂指由人工合成的，对植物的生长发育有调节作用的化学物质。这类制剂属于农药范畴，生产、销售和使用都有明确规定，需要经指定单位证明其效益、无害、无毒，不允许夸大其作用，不允许在肥料中掺入调节剂等。</p>
<p>植物生长调节剂对环境等条件也有一定的需要，需要根据实际情况，综合考虑施用目的、效果和毒性、残留、施用是否方便等因素。浓度、时间、气候条件、施用部位、植株生理状况等，都会影响效果，甚至影响生产。</p>
<h3 id="三环境因素参与植物生命活动的调节">三、环境因素参与植物生命活动的调节</h3>
<h4 id="环境因素参与植物生命活动的调节">1.
环境因素参与植物生命活动的调节</h4>
<p><strong><em>光、温度、重力</em></strong>是植物生命活动的重要调节因素。光作为一种信号，影响调控植物生长、发育的<strong>全过程</strong>。受光照射下，光敏色素结构会改变，信号传递到细胞核内，特定基因转录发生变化，形成的RNA翻译出蛋白质，进而表现出生物学效应。</p>
<h4 id="植物的调节">2. 植物的调节</h4>
<p>高等植物是很多细胞组成的高度复杂的有机体，其正常的生长发育需要各个器官、组织、细胞之间的协调和配合。植物生长发育的调控，是由基因表达调控、激素调节和环境因素调节共同作用的。</p>
<p>植物细胞中存储着全套基因，但是某个细胞的基因如何表达，则会根据需要作调整。植物的生长、发育、繁殖、休眠，都处在基因适时选择性表达的调控之下。</p>
<p>对于多细胞植物体来说，细胞与细胞之间、器官与器官之间的协调，需要通过激素传递信息。激素作为信息分子，会影响细胞的基因表达，从而起到调节作用。同时，激素的产生和分布是基因调控的结果，也受到环境因素的影响。</p>
<p>在个体层次，植物生长、发育、繁殖、休眠，实际上，是植物响应环境变化，调控基因表达以及激素产生、分布，最终表现在器官和个体水平上的变化。</p>]]></content>
      <categories>
        <category>High School</category>
        <category>Biology</category>
        <category>Genetics</category>
      </categories>
      <tags>
        <tag>School Notes</tag>
        <tag>High School</tag>
        <tag>Biology</tag>
      </tags>
  </entry>
  <entry>
    <title>免疫调节</title>
    <url>/2022/03/26/biology/High%20School/b3%20homeostatic/%E5%85%8D%E7%96%AB%E8%B0%83%E8%8A%82/</url>
    <content><![CDATA[<h2 id="导言">导言</h2>
<p>人和动物的各个器官、系统协调配合来维持内环境的稳态，神经系统和内分泌系统在其中发挥了非常重要的作用。但是仅仅如此，机体是无法直接消灭入侵的病原体，也不能直接清除体内衰老、破损或异常的细胞。要对付这些病原体和细胞，就需要免疫系统的作用了。</p>
<p>本章主要围绕免疫系统在稳态维持中的作用与实现方式这一内容，介绍了免疫系统的组成、功能和变化，介绍了特异性免疫的过程、免疫失调与免疫学的应用等内容。</p>
<h3 id="课程标准">课程标准</h3>
<p>概念五、免疫系统能够抵御病原体的侵袭，识别并清除机体内衰老、死亡或异常的细胞，实现机体稳态。</p>
<p>一、举例说明免疫细胞、免疫器官和免疫活性物质等是免疫调节的结构与物质基础。</p>
<p>二、概述人体的免疫包括生来就有的非特异性免疫和后天获得的特异性免疫。</p>
<p>三、阐明特异性免疫是通过体液免疫和细胞免疫两种方式，针对特定病原体发生的免疫应答。</p>
<p>四、举例说明免疫功能异常可能引发疾病，如过敏、自身免疫病、艾滋病和先天性免疫缺陷病等。</p>
<h4 id="学业要求">学业要求</h4>
<ol type="1">
<li><p>结合个人免疫接种的经历，探讨免疫制剂的作用</p></li>
<li><p>讨论器官移植与组织相容性抗原的关系，并探讨干细胞移植的价值</p></li>
</ol>
<h3 id="内容说明">内容说明</h3>
<ol type="1">
<li><p>举例说明免疫调节的物质基础和结构基础。</p></li>
<li><p>举例说明免疫调节在维持稳态上的特殊作用，即免疫防卫、免疫监控和免疫清除功能。</p></li>
<li><p>概述人体的非特异性免疫和特异性免疫的产生、特点和作用。</p></li>
<li><p>阐明体液免疫和细胞免疫的大致过程、区别和联系。</p></li>
<li><p>举例说明免疫功能异常可能引发的疾病种类。</p></li>
<li><p>举例说明免疫学理论和技术在实践中的应用。</p></li>
</ol>
<h2 id="知识聚焦">知识聚焦</h2>
<h3 id="一免疫系统">一、免疫系统</h3>
<h4 id="免疫系统的组成">1. 免疫系统的组成</h4>
<p><strong>免疫系统由<em>免疫器官、免疫细胞、免疫活性物质</em>共同组成</strong>。</p>
<p><strong><em>免疫器官</em></strong>是免疫细胞<strong>生成、成熟或集中分布</strong>的场所，由淋巴组织构成。</p>
<ol type="1">
<li><strong>骨髓、胸腺</strong>是免疫细胞生成、成熟的场所（也即中枢免疫器官），其中骨髓是所有免疫细胞的源泉，胸腺是T细胞成熟的场所；</li>
<li><strong>脾、淋巴结、扁桃体</strong>是免疫细胞集中分布的场所（也即外周免疫器官）。</li>
</ol>
<p><strong><em>免疫细胞</em></strong>指<strong>发挥免疫作用的细胞</strong>，高中阶段分为<strong>淋巴细胞、树突状细胞和巨噬细胞</strong>。</p>
<ol type="1">
<li><strong>树突状细胞</strong>（DC）分布于皮肤、消化道、上呼吸道等，具有强大的吞噬、呈递抗原作用。</li>
<li><strong>巨噬细胞</strong>（Mɸ）：分布在机体各种组织中，具有吞噬消化、抗原处理与呈递作用。</li>
<li><strong>淋巴细胞</strong>位于淋巴液、血液和淋巴结中，可以进一步分为T细胞和B细胞。</li>
</ol>
<p><strong><em>抗原呈递细胞</em></strong>（APC）指能够完成摄取加工、暴露在其表面并呈递抗原给别的免疫细胞的细胞。</p>
<p><strong><em>免疫活性物质</em></strong>指由免疫细胞或其他细胞产生的发挥免疫作用的物质，可以分为<strong>抗体、细胞因子、溶菌酶</strong>。（抗原是病原体表面与免疫细胞受体结合发生免疫反应的物质，<strong><em>可以和抗体特异性结合</em></strong>。）</p>
<p>免疫系统的组成部分是免疫调节的<strong>结构和物质基础</strong>。</p>
<h4 id="免疫系统的功能">2. 免疫系统的功能</h4>
<p>抵御病原体攻击的三道防线指<strong><em>皮肤、黏膜</em> +
体液中的<em>杀菌物质与吞噬细胞</em> +
个体发育中与病原体接触后产生的<em>应对特定抗原的物质与细胞</em></strong>。</p>
<p><strong><em>非特异性免疫</em></strong>是指不针对某一类特定病原体的，生来具有是长期进化下遗传得到的防御作用。<strong><em>特异性免疫</em></strong>是在接触某一（类）特定病原体后机体获得的防御作用。</p>
<p>免疫系统的三大基本功能指<strong><em>免疫防御、免疫自稳、免疫监视</em></strong>。</p>
<ol type="1">
<li><strong>防御</strong>：机体排除外来抗原性异物（最基本功能），异常时导致组织损伤、易被病原体感染。</li>
<li><strong>自稳</strong>：机体清除衰老或损伤的细胞，进行自身调节，维持内环境稳态的功能，异常时容易发生自身免疫性疾病。</li>
<li><strong>监视</strong>：识别和清除突变细胞，防止肿瘤发生，异常时肿瘤发生或病毒持续感染。</li>
</ol>
<h3 id="二特异性免疫">二、特异性免疫</h3>
<p>人体所有细胞膜表面都有用于作为分子标签的蛋白质（MHC/HLA），作为免疫细胞识别是否为自体细胞的依据。免疫细胞依赖于识别病原体的分子标签进行判断。</p>
<h4 id="b细胞介导的体液免疫">1. B细胞介导的体液免疫</h4>
<p>B细胞激活后可以产生抗体，而抗体主要存在于体液之中，所以这种方式称为体液免疫。</p>
<h4 id="t细胞介导的细胞免疫">2. T细胞介导的细胞免疫</h4>
<p>病原体进入细胞后，T细胞直接接触靶细胞并使其凋亡的方式称为细胞免疫。</p>
<p><img src="https://raw.githubusercontent.com/PassionPenguin/picgo-database/main/%E7%89%B9%E5%BC%82%E6%80%A7%E5%85%8D%E7%96%AB.png" alt="特异性免疫" style="zoom:50%;"></p>
<h3 id="三免疫功能缺陷与免疫学的应用">三、免疫功能缺陷与免疫学的应用</h3>
<h4 id="免疫功能缺陷">1. 免疫功能缺陷</h4>
<p><strong><em>过敏反应</em></strong>指<strong><em>已免疫</em>的机体</strong>，再次接触<strong><em>相同</em>抗原</strong>时，引起<strong><em>组织损伤或供能紊乱的免疫反应</em></strong>。其中，过敏原是引起过敏反应的抗原物质。</p>
<p><strong><em>免疫缺陷病</em></strong>指由<strong>机体免疫功能不足或缺乏而引起的疾病</strong>，可以分为<strong>先天性免疫缺陷病</strong>（遗传获得）和<strong>获得性免疫缺陷病</strong>（由疾病或其他因素引起）。</p>
<h4 id="免疫学的应用">2. 免疫学的应用</h4>
<p>疫苗一般是灭活或减毒的病原体（也可能是抗原决定簇）制成的生物制品，接种后人体可以产生对应抗体以对特定传染病具有抵抗力。</p>
<p>器官移植是用正常器官置换丧失功能器官，以重建生理功能的技术。由于机体中细胞有主要组织相容性抗原（MHC）供免疫细胞识别以维持免疫监视作用（对于人类指白细胞抗原HLA），器官移植可能会引发排斥反应。</p>]]></content>
      <categories>
        <category>High School</category>
        <category>Biology</category>
        <category>Genetics</category>
      </categories>
      <tags>
        <tag>School Notes</tag>
        <tag>High School</tag>
        <tag>Biology</tag>
      </tags>
  </entry>
  <entry>
    <title>体液调节</title>
    <url>/2022/03/26/biology/High%20School/b3%20homeostatic/%E4%BD%93%E6%B6%B2%E8%B0%83%E8%8A%82/</url>
    <content><![CDATA[<h2 id="导言">导言</h2>
<p>生物体稳态的维持机制是复杂的，除了神经调节外，还有与之相辅相成的体液调节。本章主要以高等动物体和人体为例，通过介绍激素的发现、来源和调节过程，认识激素调节的机制和特点；通过认识激素调节和神经调节的关系，认识到生物体是如何在变化的外界环境中维持相对内部稳态的。</p>
<p>这一节的内容由具体到抽象，由特殊到一般。第一部分讲述了激素和内分泌系统，介绍了促胰液素的发现并提出激素调节的方式。通过对胰岛素和睾丸分泌的雄激素睾酮的研究以及方法，概括出内分泌腺和激素的一般方法。第一部分是关于激素调节的过程，介绍了有关血糖平衡和甲状腺激素分泌中的分级、反馈调节以及激素间的拮抗、协同作用。第三部分介绍体液调节与神经调节的关系，通过对体温、水盐平衡等认识理解神经调节和体液调节是不同的两个调节方式，各具优势并相辅相成，共同调节各项生命活动。</p>
<h3 id="课程标准">课程标准</h3>
<p>概念、内分泌系统产生的多种类型的激素，通过体液传送而发挥调节作用，实现机体稳态。</p>
<p>一、说出人体内分泌系统主要由内分泌腺组成，包括垂体、甲状腺、胸腺、肾上腺、胰岛和性腺等多种腺体，它们分泌的各类激素参与生命活动的调节。</p>
<p>二、举例说明激素通过分级调节、反馈调节等机制维持机体的稳态，如甲状腺激素分泌的调节和血糖平衡的调节等。</p>
<p>三、举例说出神经调节与体液调节相互协调共同维持机体的稳态，如体温调节和水盐平衡的调节等。</p>
<p>四、举例说明其他体液成分参与稳态的调节，如二氧化碳对呼吸运动的调节等。</p>
<h4 id="学业要求">学业要求</h4>
<ol type="1">
<li><p>以某种激素的发现史为例，讨论研究激素生理功能的方法。</p></li>
<li><p>结合日常生活，讨论生活用品或食品中含有过量激素对人体健康的影响。</p></li>
</ol>
<h3 id="内容说明">内容说明</h3>
<ol type="1">
<li><p>通过某种激素的发现过程，概括出激素的概念。</p></li>
<li><p>概述内分泌系统的组成，说出人体主要的内分泌腺及其分泌的主要激素。</p></li>
<li><p>举例说明激素的分级调节和反馈调节过程，概述激素调节的特点。</p></li>
<li><p>以具体调节实例，说出神经调节和激素调节的区别和联系。</p></li>
<li><p>以二氧化碳对呼吸运动的调节为例，说明体液调节除激素外，还有其他成分的调节。</p></li>
</ol>
<p><img src="https://raw.githubusercontent.com/PassionPenguin/picgo-database/main/体液调节.png" alt="体液调节" style="zoom: 67%;"></p>
<h2 id="知识聚焦">知识聚焦</h2>
<h3 id="一激素与内分泌系统">一、激素与内分泌系统</h3>
<h4 id="激素的发现">1. 激素的发现</h4>
<ol type="1">
<li><p><strong><em>沃泰默实验</em></strong>：错误的方法得出结论“胰液分泌是一个非常顽固的神经反射”。</p>
<figure>
<img src="https://raw.githubusercontent.com/PassionPenguin/picgo-database/main/%E6%BF%80%E7%B4%A0%E4%B8%8E%E5%86%85%E5%88%86%E6%B3%8C%E7%B3%BB%E7%BB%9F%20-%20%E6%B2%83%E6%B3%B0%E9%BB%98%E5%AE%9E%E9%AA%8C.png" alt="激素与内分泌系统 - 沃泰默实验">
<figcaption aria-hidden="true">激素与内分泌系统 -
沃泰默实验</figcaption>
</figure></li>
<li><p><strong><em>斯他林、贝利斯实验</em></strong>：恰当的方法得出结论“小肠黏膜在稀盐酸的作用下分泌的某种化学物质让胰腺分泌胰液”，由此人类发现第一种激素——小肠黏膜分泌的促胰液素。
<img src="https://raw.githubusercontent.com/PassionPenguin/picgo-database/main/%E6%BF%80%E7%B4%A0%E4%B8%8E%E5%86%85%E5%88%86%E6%B3%8C%E7%B3%BB%E7%BB%9F%20-%20%E6%96%AF%E4%BB%96%E6%9E%97%E3%80%81%E8%B4%9D%E5%88%A9%E6%96%AF%E5%AE%9E%E9%AA%8C.png" alt="激素与内分泌系统 - 斯他林、贝利斯实验"></p></li>
</ol>
<h4 id="激素调节及主要激素与内分泌腺">2.
激素调节及主要激素与内分泌腺</h4>
<p>机体存在由内分泌器官或细胞分泌化学物质（激素）进行调节的方式，即激素调节。</p>
<p>内分泌系统由相对独立的内分泌腺（内分泌细胞聚集的场所）和兼有内分泌功能的细胞构成。常见的激素及内分泌腺如下：</p>
<table>
<colgroup>
<col>
<col>
<col>
<col>
<col>
</colgroup>
<thead>
<tr>
<td>
<p>
相关激素
</p>
</td>
<td>
<p>
分泌腺体
</p>
</td>
<td>
<p>
物质类型
</p>
</td>
<td>
<p>
作用部位
</p>
</td>
<td>
<p>
相关疾病、作用
</p>
</td>
</tr>
</thead>
<tbody>
<tr>
<td>
<p>
生长激素 GH
</p>
</td>
<td rowspan="4">
<p>
腺垂体
</p>
</td>
<td rowspan="7">
<p>
含氮激素
</p>
<p>
（蛋白质）
</p>
</td>
<td>
<p>
几乎全身细胞
</p>
</td>
<td>
<p>
侏儒症
</p>
<p>
巨人症
</p>
<p>
肢端肥大症
</p>
</td>
</tr>
<tr>
<td>
<p>
促肾上腺皮质激素 ACTH
</p>
</td>
<td>
<p>
肾上腺
</p>
</td>
<td rowspan="3">
<p>
促进对应激素的释放
</p>
</td>
</tr>
<tr>
<td>
<p>
促性腺激素 Gn
</p>
</td>
<td>
<p>
性腺
</p>
</td>
</tr>
<tr>
<td>
<p>
促甲状腺激素 TSH
</p>
</td>
<td>
<p>
甲状腺
</p>
</td>
</tr>
<tr>
<td>
<p>
释放激素
</p>
<p>
<span>（促肾上腺皮质激素释放激素 CRH、促性腺激素释放激素
GnRH、促甲状腺激素释放激素 TRH）</span>
</p>
</td>
<td>
<p>
下丘脑
</p>
</td>
<td>
<p>
腺垂体
</p>
</td>
<td>
<p>
促进或抑制垂体释放对应的刺激激素，间接控制对应激素的释放
</p>
</td>
</tr>
<tr>
<td>
<p>
催乳素 PRL
</p>
</td>
<td>
<p>
腺垂体、胎盘
</p>
</td>
<td>
<p>
乳腺、卵巢黄体
</p>
</td>
<td>
<p>
促进乳腺发育或泌乳、刺激黄体分泌黄体酮
</p>
</td>
</tr>
<tr>
<td>
<p>
胰岛素
</p>
</td>
<td>
<p>
胰岛B细胞
</p>
</td>
<td>
<p>
组织细胞
</p>
</td>
<td>
<p>
调节代谢，促进细胞摄取、利用、分解糖类物质，促进非糖物质的转换与糖原的合成
</p>
</td>
</tr>
<tr>
<td>
<p>
胰高血糖素
</p>
</td>
<td>
<p>
胰岛A细胞
</p>
</td>
<td rowspan="5">
<p>
含氮激素（多肽）
</p>
</td>
<td>
<p>
组织细胞
</p>
</td>
<td>
<p>
调节代谢，使血糖升高，促进糖原分解和非糖物质的转换
</p>
</td>
</tr>
<tr>
<td>
<p>
促胰液素
</p>
</td>
<td>
<p>
消化管
</p>
</td>
<td>
<p>
胰腺、胆囊
</p>
</td>
<td>
<p>
促进胆汁和胰液中HCO3-的分泌
</p>
</td>
</tr>
<tr>
<td>
<p>
血管紧张素 AT
</p>
</td>
<td>
<p>
血、肝
</p>
</td>
<td>
<p>
血管、肾上腺皮质
</p>
</td>
<td>
<p>
促进血管收缩
</p>
<p>
促进肾上腺皮质释放醛固酮
</p>
</td>
</tr>
<tr>
<td>
<p>
抗利尿激素 ADH
</p>
</td>
<td>
<p>
下丘脑
</p>
<p>
神经垂体
</p>
</td>
<td>
<p>
肾小管和集合管（肾脏）、血管与血小板、垂体
</p>
</td>
<td>
<p>
增加肾脏对水分的重吸收
</p>
<p>
促进血管收缩
</p>
<p>
聚集血小板，促进ACTH释放
</p>
</td>
</tr>
<tr>
<td>
<p>
催产素 OXT、OT
</p>
</td>
<td>
<p>
下丘脑
</p>
<p>
神经垂体
</p>
</td>
<td>
<p>
乳腺、子宫等
</p>
</td>
<td>
<p>
促进乳汁产生、促进分娩等
</p>
</td>
</tr>
<tr>
<td>
<p>
去甲肾上腺素 NE
</p>
</td>
<td>
<p>
肾上腺髓质
</p>
<p>
神经系统
</p>
</td>
<td rowspan="3">
<p>
含氮激素
</p>
<p>
（胺类激素）
</p>
</td>
<td>
<p>
腺垂体
</p>
</td>
<td>
<p>
影响多种促进激素的释放（如TSH、ACTH、Gn）
</p>
</td>
</tr>
<tr>
<td>
<p>
肾上腺素 E
</p>
</td>
<td>
<p>
肾上腺髓质
</p>
</td>
<td>
<p>
心血管细胞等
</p>
</td>
<td>
<p>
提高多种组织的兴奋性
</p>
<p>
加速代谢
</p>
</td>
</tr>
<tr>
<td>
<p>
甲状腺激素 T<span>4</span>
</p>
</td>
<td>
<p>
甲状腺
</p>
</td>
<td>
<p>
几乎全身细胞
</p>
</td>
<td>
<p>
调节机体代谢与生长发育
</p>
<p>
甲亢、甲减
</p>
<p>
大脖子病、呆小症
</p>
</td>
</tr>
<tr>
<td>
<p>
褪黑激素 MLT
</p>
</td>
<td>
<p>
松果体
</p>
</td>
<td>
<p>
含氮激素
</p>
<p>
（胺类激素）
</p>
</td>
<td rowspan="4">
</td>
<td>
<p>
调节生物节律
</p>
</td>
</tr>
<tr>
<td>
<p>
睾酮 T
</p>
</td>
<td>
<p>
睾丸间质细胞
</p>
</td>
<td rowspan="5">
<p>
类固醇激素（甾体）
</p>
</td>
<td>
<p>
维持和促进男性生殖器官和第二性征的发育
</p>
</td>
</tr>
<tr>
<td>
<p>
孕酮 P
</p>
</td>
<td>
<p>
黄体、胎盘
</p>
</td>
<td>
<p>
促使子宫内膜发生分泌期的变化，为受精卵着床和妊娠的维持所必需
</p>
</td>
</tr>
<tr>
<td>
<p>
雌二醇 E2
</p>
</td>
<td>
<p>
卵泡
</p>
<p>
黄体、胎盘
</p>
</td>
<td>
<p>
维持和促进女性生殖器官和第二性征的发育
</p>
</td>
</tr>
<tr>
<td>
<p>
醛固酮（糖皮质）
</p>
</td>
<td rowspan="2">
<p>
肾上腺皮质
</p>
</td>
<td rowspan="2">
<p>
肾小管、集合管
</p>
</td>
<td>
<p>
调节水盐代谢、促进肾脏对钠的重吸收和对钾的排泄
</p>
</td>
</tr>
<tr>
<td>
<p>
皮质醇（盐皮质）
</p>
</td>
<td>
<p>
主要影响糖代谢
</p>
</td>
</tr>
</tbody>
</table>
<p>内分泌系统是机体整体功能的重要调节系统，各内分泌腺间具有复杂的功能联系，共同调控机体活动，包括维持内环境稳定、调节物质和能量代谢、调控生长发育和生殖等。</p>
<h3 id="二激素调节的过程及体液调节与激素调节的关系">二、激素调节的过程及体液调节与激素调节的关系</h3>
<p><strong><em>激素等化学物质</em>通过<em>体液传送</em>的方式对生命活动进行调节，称为<em>体液调节</em></strong>。低等动物只有体液调节没有神经调节。体液调节和神经调节相辅相成、各具优势。</p>
<h4 id="血糖平衡调节">1. 血糖平衡调节</h4>
<p>控制血糖降低：</p>
<ol type="1">
<li><p>血糖升高后胰岛B细胞活性上升，释放胰岛素。另一方面，下丘脑被触发，传递信息给垂体，进而传递信息给胰岛B细胞促进释放。</p></li>
<li><p>胰岛素促进血糖进入组织细胞氧化分解，进入肌、肝细胞合成糖原，进入脂肪组织细胞转化为甘油三酯，抑制肝糖原分解与非糖物质变成葡萄糖（增加去向减少来向）。</p></li>
</ol>
<p>控制血糖升高：</p>
<ol type="1">
<li><p>主要：胰岛A细胞活动增强，释放胰高血糖素，促进肝糖原分解葡萄糖，促进非糖物质转变为糖（增加来向）。</p></li>
<li><p>次要：糖皮质激素（肾上腺皮质）、肾上腺素（肾上腺）、甲状腺激素（甲状腺）。</p></li>
</ol>
<p><strong><em>反馈调节</em>指一个系统中，系统本身工作的效果反过来作为信息，调节该系统的工作的调节。</strong>反馈调节对于机体维持稳态有重要意义。反馈分为正反馈调节（反馈信息促进与加强控制部分的活动（加强生理过程直至完成））和负反馈调节（反馈信息与控制信息的作用方向相反，纠正控制信息的效应）。</p>
<figure>
<img src="https://raw.githubusercontent.com/PassionPenguin/picgo-database/main/6.png" alt="img">
<figcaption aria-hidden="true">img</figcaption>
</figure>
<h4 id="甲状腺激素调节">2. 甲状腺激素调节</h4>
<p>下丘脑—垂体—甲状腺：寒冷刺激⇒下丘脑⇒TRH⇒TSH⇒甲状腺⇒下丘脑、垂体（<strong>反馈+分级</strong>），我们把类似下丘脑、垂体和靶腺体之间存在的分层调控称为<em>分级调节</em>。分级调节可以放大激素调节的调节效应，形成<strong>多级反馈调节</strong>，有利于<strong>精细调控</strong>，进而维持机体稳态。</p>
<p>激素调节的特点是<strong><em>体液运输</em>（血液、淋巴循环系统）、<em>作用于靶器官与靶细胞</em>（激素选择靶细胞）、<em>作为信使传递信息</em>（只传信息不催化不供能不组成细胞结构）、<em>微量激素与高效调节</em></strong>。</p>
<p>不同激素对同一生理效应发挥同样作用：协同。不同激素对同一生理效应发挥相反作用：拮抗。</p>
<h4 id="体温调节">3. 体温调节</h4>
<p>体温保持相对恒定，是产热与散热<strong>动态平衡</strong>的结果。</p>
<p>产热：<strong><em>代谢产热</em></strong>是机体热量的主要来源。安静状态下，肝脑器官是主要的热量来源。运动时，骨骼肌是主要的产热器官。</p>
<p>散热：<strong><em>皮肤</em></strong>是人体最主要的散热器官。皮肤散热的具体方式是<strong>辐射、传导与蒸发</strong>。冷觉感受器和热觉感受器位于皮肤中。</p>
<p>寒冷环境，冷觉感受器受到刺激，传递到下丘脑体温调节中枢，经过神经中枢的分析与综合，产生如下结果：使皮肤血管收缩，减缓皮肤血流量以减少散热；另一方面，汗腺分泌量减少，使蒸发散热减少。使骨骼肌战栗，增加产热；另一方面，释放甲状腺激素与肾上腺素，促进代谢的增快。</p>
<p>炎热环境，热觉感受器受到刺激，传递到下丘脑体温调节中枢，经过神经中枢的分析与综合，产生如下结果：使皮肤血管舒张，增快皮肤血液流动速度以增加散热；另一方面，汗腺分泌量增多，使蒸发散热增多。</p>
<p>人的调节体温能力是<strong>有限的</strong>。体温过低过高都会<strong>影响正常代谢</strong>，使细胞、组织与器官发生<strong>功能紊乱</strong>，破坏内环境稳态，严重时危及生命。</p>
<h4 id="水盐平衡调节">4. 水盐平衡调节</h4>
<p>人体每天都通过饮水、进食等方式摄入水分，通过排汗排尿等方式排出水。机体能够通过调节尿量进而维持机体水平衡。</p>
<p>体内渗透压过高时，机体会释放抗利尿激素，并产生渴觉以增加水的摄入量。体内渗透压过低时，机体会减少抗利尿激素的释放，以通过肾脏排出更多的水分。</p>
<p>大量失水（如大量出汗等情况）下，一般而言（这里指低渗性脱水）血钠含量会降低，促使肾上腺皮质增加分泌醛固醇，以促进肾小管和集合管对钠离子的重吸收，维持血钠平衡。</p>
<p><strong><em>抗利尿激素</em>是下丘脑<em>分泌</em>垂体<em>储存并释放</em></strong>的激素，用于<strong>增加肾小管和集合管对水分的吸收</strong>。</p>
<p>水盐平衡对维持人体的稳态起着非常重要的作用，是人体各种生命活动正常进行的必要条件。</p>
<h4 id="神经调节与体液调节">5. 神经调节与体液调节</h4>
<p>不少内分泌腺直接或间接地受到中枢神经系统的调节，<strong>体液调节可以看作是神经调节的一部分</strong>。另一方面，内分泌腺分泌的激素（如T4）也<strong>影响神经系统的发育与各项功能</strong>。</p>]]></content>
      <categories>
        <category>High School</category>
        <category>Biology</category>
        <category>Genetics</category>
      </categories>
      <tags>
        <tag>School Notes</tag>
        <tag>High School</tag>
        <tag>Biology</tag>
      </tags>
  </entry>
  <entry>
    <title>人体内环境与稳态</title>
    <url>/2022/03/26/biology/High%20School/b3%20homeostatic/%E4%BA%BA%E4%BD%93%E5%86%85%E7%8E%AF%E5%A2%83%E4%B8%8E%E7%A8%B3%E6%80%81/</url>
    <content><![CDATA[<h2 id="导言">导言</h2>
<p>稳态概念的提出源自于对内环境的研究，<strong>内环境的概念是建立稳态概念的基础</strong>。本章节分为两课时，第一节聚焦在内环境的概念上，第二节聚焦在内环境稳态及其重要意义上。本章内容相当于序言，第二、三、四章内容相当于对本章内容的延伸与深化，共同构成了人体内环境稳态调节的知识内容整体。</p>
<p>第一章的主题是<strong>内环境的概念</strong>，通过“细胞生活的环境”与必修一《分子与细胞》相衔接，并揭示内环境与外环境的本质区别，即内环境是体内细胞的生活环境，外环境是机体的生活环境。</p>
<p>第二节的主题是<strong>内环境稳态的概念</strong>，是本章书的核心，也是后续章节的基础。值得注意的是，稳态概念除了个体水平，在分子、器官、生态系统水平上都存在稳态现象，是生命科学的一大基本概念，能够为后续选择性必修二《生物与环境》模块学习奠定基础。</p>
<h3 id="课程标准">课程标准</h3>
<p>==概念一、内环境为机体细胞提供适宜的生存环境，机体细胞通过内环境与外界环境进行物质交换。==</p>
<p>一、说明血浆、组织液和淋巴等细胞外液共同构成高等动物细胞赖以生存的内环境。</p>
<p>二、阐明机体细胞生活在内环境中，通过内环境与外界环境进行物质交换，同时也参与内环境的形成和维持。</p>
<p>三、简述机体通过呼吸、消化、循环和泌尿等系统参与内、外环境间的物质交换。</p>
<p>概念二、内环境的变化会引发机体的自动调节，以维持内环境的稳态。</p>
<p>一、以血糖、体温、pH和渗透压等为例，阐明机体通过调节作用保持内环境的相对稳定，以保证机体的正常生命活动。</p>
<p>二、举例说明机体不同器官、系统协调统一地共同完成各项生命活动，是维持内环境稳态的基础。</p>
<h4 id="教学要求">教学要求</h4>
<ol type="1">
<li><p>观看血液分层实验的视频，讨论血细胞与血浆的关系</p></li>
<li><p>比较清水、缓冲液、体液对pH变化的调节作用</p></li>
</ol>
<h4 id="学业要求">学业要求</h4>
<ol type="1">
<li><p>用概念图教学法揭示内环境与外界环境的物质交换的关系</p></li>
<li><p>以内环境的某种成分为例，讨论各系统是如何协同维持其相对稳定的</p></li>
</ol>
<h3 id="内容说明">内容说明</h3>
<ol type="1">
<li><p>通过血液分层现象等的具体事例，说明血细胞直接接触的液体环境，并分析其大致的化学成分和理化性质，进而认识血浆、组织液和淋巴液等细胞外液共同构成人和高等动物体细胞赖以生存的内环境。</p></li>
<li><p>运用概念图、模型图等直观方式，阐明细胞通过内环境与外环境进行物质交换。</p></li>
<li><p>简述内、外环境之间的物质交换，是消化、呼吸、循环和泌尿等系统直接参与共同完成的。</p></li>
<li><p>说明稳态是指内环境中化学成分和理化性质的相对稳定状态，以具体的化学成分和理化性质为例，阐明的当其发生变化时，可引发机体的反馈调节，以维持相对稳定。</p></li>
<li><p>以内环境的某种成分为例，讨论各系统是如何协同维持其相对稳定的，说明机体各器官、系统的协调统一，是维持内环境稳态的基础。</p></li>
</ol>
<p><img src="https://raw.githubusercontent.com/PassionPenguin/picgo-database/main/人体的内环境与稳态.jpg" alt="人体的内环境与稳态" style="zoom: 33%;"></p>
<h2 id="知识聚焦">知识聚焦</h2>
<h3 id="一体液的组成">一、<strong><em>体液</em></strong>的组成</h3>
<p>体液由<strong><em>细胞内液</em></strong>（基质，占2/3）和<strong><em>细胞外液</em></strong>（占1/3）组成。</p>
<h4 id="细胞外液内环境">1. 细胞外液（<strong>内环境</strong>）</h4>
<p>组成：<strong><em>血浆、组织液、淋巴液</em></strong>。</p>
<p>==血浆是血细胞直接生活的环境。<em>绝大多数细胞</em>都浸浴在组织液中，组织液是体内绝大多数细胞直接生活的环境。淋巴液是淋巴细胞直接生活的环境。==</p>
<p><strong><em>细胞外液构成的液体环境叫做内环境</em></strong>。</p>
<h4 id="化学成分">2. 化学成分</h4>
<p>血浆的90%为水，蛋白质7～9%，无机盐1%。<strong><em>血浆中蛋白质较多</em></strong>，组织液、淋巴液中较少。淋巴液与组织液<strong>几乎相同</strong>，而它们与血浆主要差别在于<strong>蛋白质含量</strong>。</p>
<p>细胞外液的化学成分一定程度上反映了<strong>生命起源于海洋</strong>。</p>
<h4 id="内环境的液体交流">3. 内环境的液体交流</h4>
<ol type="1">
<li>血浆 ⇔ 组织液：</li>
</ol>
<p>血浆在毛细血管动脉端进入组织液，而组织液在毛细血管静脉端被回收。</p>
<ol start="2" type="1">
<li>组织液 ⇒ 淋巴液：</li>
</ol>
<p>组织液在毛细淋巴管吸收为淋巴液。<strong>有盲端的是淋巴管</strong>，淋巴管有单向瓣膜，只向淋巴管内开放。</p>
<ol start="3" type="1">
<li>组织液 ⇔ 细胞内液：</li>
</ol>
<p>组织液与细胞内液透过细胞膜<strong><em>直接</em>进行物质交换</strong>。</p>
<ol start="4" type="1">
<li>淋巴液 ⇒ 血浆：</li>
</ol>
<p>淋巴液在<strong>左右锁骨下静脉</strong>被吸收进入血浆。</p>
<p><img src="https://raw.githubusercontent.com/PassionPenguin/picgo-database/main/细胞生活的环境.png" alt="细胞生活的环境" style="zoom: 33%;"></p>
<h3 id="二内环境理化性质">二、内环境理化性质</h3>
<p>内环境的理化性质主要包括渗透压、酸碱度和温度。</p>
<h4 id="渗透压">1. 渗透压</h4>
<p>渗透压大小取决于<strong>单位体积溶液内溶质微粒数</strong>。细胞外液渗透压的90%来源于Na+、Cl-，而血浆渗透压主要与蛋白质与无机盐含量有关。</p>
<h4 id="酸碱度">2. 酸碱度</h4>
<p>正常人的血浆<strong>接近<em>中性</em></strong>，pH约为7.35～7.45。血浆酸碱度与HCO3-、H2CO3等物质相关。</p>
<p>内环境中有很多缓冲对，最重要的是HCO3-、H2CO3，其次还有HPO42-、H2PO4-，最后还有蛋白质盐、蛋白质。<strong><em>一定量</em></strong>（少量）酸碱性物质进入后内环境酸碱度可以维持在一定范围内。</p>
<p>维持酸碱度，可以保证人体各项生理活动。对于酶促反应，合适酸碱度可以保证酶活性。对于氧的转运，合适酸碱度可以保证血红蛋白不被H+、CO32-抢夺。</p>
<p>相关代谢反应：HA + NaHCO3 = NaA + H2CO3、BOH + H2CO3 = BHCO3 +
H2O。</p>
<p>CO2最终借助肺排出，NaHCO3被肾小管重吸收。</p>
<h4 id="温度">3. 温度</h4>
<p>人体细胞外液的温度<strong><em>一般</em></strong>维持在37℃左右。一个人的体温日变化<strong><em>一般</em></strong>不超过1℃，健康人的体温始终接近37℃。</p>
<h3 id="三内环境的稳态">三、内环境的稳态</h3>
<h4 id="内环境的稳态">1. 内环境的稳态</h4>
<p>随着<strong>外界环境变化和体内细胞代谢活动</strong>的进行，内环境的各种<strong><em>化学成分和理化性质</em></strong>不断发生改变。正常机体通过<strong><em>调节作用</em></strong>，使<strong>各个器官、系统（循环、消化、呼吸、泌尿）协调活动</strong>，共同维持内环境的相对稳定状态叫作<strong><em>稳态</em></strong>。稳态包括<strong>化学成分和理化性质</strong>。</p>
<p>==<em>人体各器官系统协调一致地正常运行，是维持内环境稳态的基础</em>==，某种器官的功能出现障碍，就会引起<strong>稳态失调</strong>。</p>
<p>内环境稳态是机体进行正常生命活动的<strong>必要条件</strong>，内环境的稳态能使<strong>酶的活性</strong>保持，进而维持细胞代谢。内环境的稳态能使<strong>血糖浓度与血氧浓度</strong>保持正常范围，进而为细胞代谢提供能源物质与氧气。</p>
<h4 id="维持稳态的主要调节机制">2. 维持稳态的主要调节机制</h4>
<p>1857年，法国的贝尔纳提出，内环境的稳定是生命能独立和自由存在的首要条件，内环境保持稳定状态主要是依赖神经系统的调节。</p>
<p>1926年，美国的坎农提出稳态概念，认为稳态不是恒定不变的，而是一种动态的平衡。内环境的稳态是在神经调节、体液调节的共同作用下，通过机体的各种器官系统分工合作、协调统一而实现的。</p>
<p>目前认为，<strong><em>神经—体液—免疫调节网络是机体维持稳态的主要调节机制</em></strong>。</p>
<h4 id="探究实践模拟生物体维持ph的稳定-exp-模拟生物体维持ph的稳定">3.
探究·实践：模拟生物体维持pH的稳定 | #exp-模拟生物体维持pH的稳定</h4>
<p>材料为因变量，自来水、肝匀浆是对照组（其中自来水是空白对照组，肝匀浆是标准对照组），缓冲液是实验组。</p>
<p>科学方法：模拟实验法。</p>
<blockquote>
<p>##### 注意事项</p>
<ol type="1">
<li>生物制品现配现用。</li>
<li>实验数据<strong>三次取平均</strong>，减少实验误差。</li>
</ol>
</blockquote>
<blockquote>
<h3 id="物质进出膜数量判断">物质进出膜数量判断</h3>
<p>气体：出肺泡<strong><em>2</em></strong>
进出血管<strong><em>2×2</em></strong>
进出红细胞<strong><em>2</em></strong>
进入组织细胞<strong><em>1</em></strong>
进入线粒体内膜<strong><em>2</em></strong> =
<strong><em>11</em></strong></p>
<p>葡萄糖、氨基酸等：进出小肠黏膜<strong><em>2</em></strong>
进出血管<strong><em>2×2</em></strong>
进入组织细胞<strong><em>1</em></strong> =
<strong><em>7</em></strong></p>
</blockquote>]]></content>
      <categories>
        <category>High School</category>
        <category>Biology</category>
        <category>Genetics</category>
      </categories>
      <tags>
        <tag>School Notes</tag>
        <tag>High School</tag>
        <tag>Biology</tag>
      </tags>
  </entry>
  <entry>
    <title>神经调节</title>
    <url>/2022/03/26/biology/High%20School/b3%20homeostatic/%E7%A5%9E%E7%BB%8F%E8%B0%83%E8%8A%82/</url>
    <content><![CDATA[<h2 id="导言">导言</h2>
<p>动物体各器官系统之间能够紧密配合、相互协调，对环境的变化和体内外的刺激作出反应并维持内环境的稳态，主要是因为它们受神经和内分泌等系统的调节。在大多数情况下，神经系统的调节更快速，并往往处于主导地位。</p>
<p>在生命活动中，神经调节有着自身调节的特点，但也有着与体液调节等共同的调节特点，如反馈调节、分级调节等。</p>
<p>本章内容较多，包括5个部分。神经调节是在特定结构基础上完成的，并通过反射的方式来完成调节活动，故前两部分分别安排为“神经调节的结构基础”和“神经调节的基本方式”，与初中所学习的知识所串连，随后三部分就是全新的内容。神经调节的方式是反射，反射传导的是兴奋对应“神经冲动的产生和传导”，神经具有分级调节的特点对应“神经系统的分级调节”，人类特有语言，有不同学习、记忆、情绪活动，对应“人脑的高级功能”。</p>
<h3 id="课程标准">课程标准</h3>
<p>概念、神经系统能够及时感知机体内、外环境的变化，并作出反应调控各器官、系统的活动，实现机体稳态。</p>
<p>一、概述神经调节的基本方式是反射（可分为条件反射和非条件反射），其结构基础是反射弧。</p>
<p>二、阐明神经细胞膜内外在静息状态具有电位差，受到外界刺激后形成动作电位，并沿神经纤维传导。</p>
<p>三、阐明神经冲动在突触处的传递通常通过化学传递方式完成</p>
<p>四、分析位于脊髓的低级神经中枢和脑中相应的高级神经中枢相互联系、相互协调，共同调控器官和系统的活动，维持机体的稳态。</p>
<p>五、举例说明中枢神经系统通过自主神经来调节内脏的活动。</p>
<p>六、简述语言活动和条件反射是由大脑皮层控制的高级神经活动。</p>
<h4 id="学业要求">学业要求</h4>
<ol type="1">
<li><p>观看反射过程的动画，分析反射弧的组成</p></li>
<li><p>通过资料分析神经系统受损对人体运动等行为的影响，探讨神经调节的结构基础</p></li>
<li><p>讨论滥用兴奋剂以及吸食毒品的危害。</p></li>
</ol>
<h3 id="内容说明">内容说明</h3>
<ol type="1">
<li><p>概述神经系统的组成，认识神经调节的物质基础和结构基础；以具体的反射过程为例，分析其结构基础是反射弧。</p></li>
<li><p>阐明反射过程中，神经冲动产生、传到及突触处的传递方式和特点。</p></li>
<li><p>举例分析脊髓低级中枢和脑内高级中枢在反射调节过程中的联系和协调作用。</p></li>
<li><p>通过相关资料，分析神经系统受损对人体神经调节的影响。</p></li>
<li><p>举例说明自主神经对内脏活动的调节，进而对代谢的影响。</p></li>
<li><p>简述人类大脑皮层控制的条件反射、语言功能等高级神经活动特点及实践意义。</p></li>
</ol>
<p><img src="https://raw.githubusercontent.com/PassionPenguin/picgo-database/main/神经调节.jpg" alt="神经调节" style="zoom: 33%;"></p>
<h2 id="知识聚焦">知识聚焦</h2>
<h3 id="一神经系统">一、神经系统</h3>
<h4 id="中枢神经系统和外周神经系统">1. 中枢神经系统和外周神经系统</h4>
<p>神经系统由<strong><em>中枢神经系统</em></strong>（大脑、脑干、小脑等和脊髓）和<strong><em>外周神经系统</em></strong>（与脑相连的脑神经和与脊髓相连的脊神经）组成，其中外周神经系统包括<strong>传入神经</strong>（<strong>感觉神经</strong>）和<strong>传出神经</strong>，且传出神经可分为支配躯体运动的神经（<strong>躯体运动神经</strong>）与支配内脏器官的神经（<strong>内脏运动神经</strong>）。</p>
<h4 id="交感神经系统">2. 交感神经系统</h4>
<p>支配<strong><em>内脏、血管和腺体</em></strong>的传出神经，活动不受意识支配，是<strong><em>自主神经系统</em></strong>。自主神经由交感神经和副交感神经组成，作用<strong>通常相反</strong>，<strong>兴奋时交感神经活动占优势</strong>，心跳加快支气管扩张，胃肠蠕动和消化腺分泌活动减弱，<strong>安静时副交感神经占据优势</strong>，心跳减慢支气管收缩，但胃肠蠕动和消化液分泌会加强，有利于食物的消化和营养物质的吸收。交感神经与副交感神经的共同作用能够让机体对外界刺激作出更精确的反应，使机体更好地适应环境的变化。</p>
<table>
<thead>
<tr class="header">
<th></th>
<th>交感神经（兴奋）</th>
<th>副交感神经（安静）</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>眼</td>
<td>使瞳孔扩张</td>
<td>使瞳孔收缩</td>
</tr>
<tr class="even">
<td>肺</td>
<td>使支气管扩张</td>
<td>使支气管收缩</td>
</tr>
<tr class="odd">
<td>心脏</td>
<td>使心跳加快</td>
<td>使心跳减慢</td>
</tr>
<tr class="even">
<td>血管</td>
<td>使血管收缩</td>
<td>-</td>
</tr>
<tr class="odd">
<td>胃肠</td>
<td>抑制胃肠蠕动</td>
<td>促进胃肠蠕动</td>
</tr>
</tbody>
</table>
<h4 id="组成神经系统的细胞">3. 组成神经系统的细胞</h4>
<p>组成：<strong><em>神经元、神经胶质细胞</em></strong>。</p>
<p>神经元是<strong><em>神经系统结构和功能的基本单位</em></strong>，由细胞体、树突、轴突等部分构成。<strong><em>细胞体</em></strong>是膨大部分，<strong>包含细胞核</strong>；<strong><em>树突</em></strong>是细胞体向外伸出的，通常短而粗的突起；<strong><em>轴突</em></strong>是神经元长而细的突起，呈纤维状，==外表大多套有<em>髓鞘</em>，构成<em>神经纤维</em>，再集结为束，包有<em>包膜</em>，构成<em>神经</em>==。<strong>神经末梢是树突和轴突末端的小分支</strong>。</p>
<h4 id="神经系统的分级调节">4. 神经系统的分级调节</h4>
<p><strong>大脑皮层</strong>作为<strong>高级中枢</strong>，通过<strong>脑干</strong>连接到<strong>脊髓</strong>这一<strong>低级中枢</strong>，间接控制机体的躯体和内脏运动。</p>
<h3 id="二反射与神经冲动">二、反射与神经冲动</h3>
<h4 id="反射与反射弧">1. 反射与反射弧</h4>
<p>在<strong><em>中枢神经系统的参与下</em>，机体对<em>内外刺激</em>所产生的<em>规律性应答活动</em></strong>是<strong>反射</strong>。<strong>反射是神经调节的<em>基本方式</em></strong>，<strong>反射弧是完成反射的<em>结构基础</em></strong>。</p>
<p>反射弧由<strong><em>感受器、传入神经、神经中枢、传出神经和效应器</em></strong>（<strong><em>传出神经末梢+</em></strong>其所支配的<strong><em>肌肉或腺体</em></strong>）组成。</p>
<h4 id="条件反射人脑的高级功能">2. 条件反射、人脑的高级功能</h4>
<p><strong>条件反射</strong>是在<strong>非条件反射的基础上</strong>，通过<strong><em>学习和训练</em></strong>而建立的。条件反射建立之后要维持下去，需要依赖非条件刺激的强化。如果反复应用条件刺激而不给予非条件刺激，就会产生<strong><em>条件反射的消退</em></strong>，这个过程是<strong>两个刺激间新联系产生的过程</strong>，<strong>需要大脑皮层的参与</strong>。</p>
<p>条件反射拓展了机体对外界复杂环境的适应范围，让机体可以识别并预先作出不同反应，具有更高的预见性、灵活性与适应性，提高动物对复杂环境变化的应对能力。</p>
<p>条件反射与非条件反射的建立依赖于<strong><em>脑的高级功能学习与记忆</em></strong>，条件反射的建立也是动物学习的过程。人类的记忆过程分为四段，<strong>感觉性记忆、第一级记忆、第二级记忆和第三极记忆</strong>。前两阶段相当于<strong>短时记忆</strong>，后两个阶段相当于<strong>长时记忆</strong>。</p>
<p><strong>语言功能是人脑特有的<em>高级功能</em></strong>，包括听说读写，在大脑皮层分为<strong><em>W、V、S、H</em></strong>四个言语区。情绪也是大脑的高级功能之一。</p>
<figure>
<img src="https://raw.githubusercontent.com/PassionPenguin/picgo-database/main/image-20220326233030534.png" alt="image-20220326233030534">
<figcaption aria-hidden="true">image-20220326233030534</figcaption>
</figure>
<h4 id="神经冲动及其传递">3. 神经冲动及其传递</h4>
<p>动物体或人体内的<strong>某些细胞或组织感受外界刺激后，由相对静止状态变为显著活跃状态的过程是<em>兴奋</em></strong>。</p>
<p>兴奋在神经纤维上的传递是以<strong>电信号（<em>神经冲动</em>）</strong>的形式进行传递的，在神经元间是以化学信号传递的，依赖<strong>神经递质</strong>。</p>
<p>神经纤维的电位测量依赖的是电流表，静息状态下对应的是<strong>静息电位（<em>外正内负</em>）</strong>，产生原因主要是<strong>钾离子的外流</strong>，兴奋状态下的是<strong>动作电位（<em>外负内正</em>）</strong>，产生原因主要是<strong>钠离子的内流</strong>。</p>
<p>神经末梢分支后形成<strong><em>突触小体</em></strong>，与其他神经元的细胞体、树突、轴突等相接近，共同形成<strong><em>突触</em></strong>（组成：突出前膜、突触间隙、突触后膜）。神经冲动传至前膜时，突触小泡向前膜移动并以胞吐方式释放神经递质。神经递质在突触间隙中扩散到突触后膜的<strong>特异性转运蛋白受体</strong>上，结合引发突触后膜电位变化。随后神经递质会与受体分开，<strong><em>迅速被降解或被回收进入细胞</em></strong>，避免持续发挥作用。</p>
<p>毒品、兴奋剂等大多是通过突触起作用，干扰递质-受体的结合或递质的合成分泌、降解回收速率起到相应作用，有违公平公正，对健康产生影响。</p>
<p><img src="https://raw.githubusercontent.com/PassionPenguin/picgo-database/main/神经冲动的产生和传导.png" alt="神经冲动的产生和传导" style="zoom:50%;"></p>]]></content>
      <categories>
        <category>High School</category>
        <category>Biology</category>
        <category>Genetics</category>
      </categories>
      <tags>
        <tag>School Notes</tag>
        <tag>High School</tag>
        <tag>Biology</tag>
      </tags>
  </entry>
  <entry>
    <title>排列组合</title>
    <url>/2022/03/26/mathematics/High%20School/Possibility%20and%20Stats/%E6%8E%92%E5%88%97%E7%BB%84%E5%90%88/</url>
    <content><![CDATA[Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
<h2 id="知识聚焦">知识聚焦</h2>
<h3 id="一排列数与组合数">一、排列数与组合数</h3>
<h4 id="排列数与组合数">1. 排列数与组合数</h4>
<p>​ 从 <span class="math inline"><em>n</em></span> 个不同的元素中任取
<span class="math inline"><em>m</em>(<em>m</em>≤<em>n</em>)</span>
个元素的所有不同排列的个数为 <span class="math inline"><em>A</em><sub><em>n</em></sub><sup><em>m</em></sup></span>，且
<span class="math inline"><em>A</em><sub><em>n</em></sub><sup><em>m</em></sup> = <em>n</em>(<em>n</em>−1)(<em>n</em>−2)⋯(<em>n</em>−<em>m</em>+1)</span>（<span class="math inline">$m,n\in\N^*$</span>），并规定 <span class="math inline"><em>A</em><sub><em>n</em></sub><sup><em>n</em></sup> = <em>n</em>(<em>n</em>−1)(<em>n</em>−2)⋯1 = <em>n</em>!</span>（规定
<strong><span class="math inline">0! = 1</span></strong>）。</p>
<p>​ 从 <span class="math inline"><em>n</em></span> 个不同的元素中任取
<span class="math inline"><em>m</em>(<em>m</em>≤<em>n</em>)</span>
个元素的所有不同组合的个数为 <span class="math inline"><em>C</em><sub><em>n</em></sub><sup><em>m</em></sup></span>，且
<span class="math inline">$C_n^m=\dfrac{n(n-1)(n-2)\cdots(n-m+1)}{m!}=\dfrac{n!}{m!(n-m)!}=\dfrac{A_n^m}{A_m^m}$</span>（<span class="math inline">$m,n\in\N^*$</span>），组合数有如下性质：</p>
<ol type="1">
<li>性质一：<strong><span class="math inline"><em>C</em><sub><em>n</em></sub><sup><em>m</em></sup> = <em>C</em><sub><em>n</em></sub><sup><em>n</em> − <em>m</em></sup></span></strong>，规定
<strong><span class="math inline"><em>C</em><sub><em>n</em></sub><sup>0</sup> = 1</span></strong>；</li>
<li>性质二：<strong><span class="math inline"><em>C</em><sub><em>n</em> + 1</sub><sup><em>m</em></sup> = <em>C</em><sub><em>n</em></sub><sup><em>m</em></sup> + <em>C</em><sub><em>n</em></sub><sup><em>m</em> − 1</sup></span></strong>。</li>
</ol>
<h4 id="分类与分布">2. 分类与分布</h4>
<p>​ <strong>分类计数原理</strong>指做一件事有 <span class="math inline"><em>n</em></span> 类方法，第 1 类方法中有 <span class="math inline"><em>m</em><sub>1</sub></span> 中不同的方法，第 2
类方法中有 <span class="math inline"><em>m</em><sub>2</sub></span>
种不同的方法，……，第 <span class="math inline"><em>n</em></span>
类方法中一共有 <span class="math inline"><em>m</em><sub><em>n</em></sub></span>
种不同的方法，完成这件事一共有 <span class="math inline"><em>N</em> = <em>m</em><sub>1</sub> + <em>m</em><sub>2</sub> + ⋯ + <em>m</em><sub><em>n</em></sub></span>
种方法。</p>
<p>​ <strong>分步计数原理</strong>指做一件事有 <span class="math inline"><em>n</em></span> 个步骤，第 1 步有 <span class="math inline"><em>m</em><sub>1</sub></span> 种不用的方法，做第 2
步有 <span class="math inline"><em>m</em><sub>2</sub></span>
种不同的方法，……，第 <span class="math inline"><em>n</em></span> 步有
<span class="math inline"><em>m</em><sub><em>n</em></sub></span>
种不同的方法，完成这件事一共有 <span class="math inline"><em>N</em> = <em>m</em><sub>1</sub> × <em>m</em><sub>2</sub> × ⋯ × <em>m</em><sub><em>n</em></sub></span>
种不同的方法。</p>
<h3 id="二排列组合数学模型">二、排列组合数学模型</h3>
<h4 id="特殊分析">1. 特殊分析</h4>
<p>​ <strong>在与不在</strong>问题的处理方法有两种：</p>
<ol type="1">
<li>元素优先法：先排特殊元素，再排普通元素。</li>
<li>位置优先法：先排特殊位置，再排普通位置。</li>
<li>设元素与位置组成的集合分别为 <span class="math inline"><em>A</em></span> 与 <span class="math inline"><em>B</em></span>，如果：
<ol type="1">
<li>集合 <span class="math inline"><em>A</em></span> 和 <span class="math inline"><em>B</em></span>
中每个元素都有对应，且都有特殊元素，则<strong>优先分类特殊元素少的</strong>。</li>
<li>集合 <span class="math inline"><em>A</em></span>
中的每一个元素在集合 <span class="math inline"><em>B</em></span>
中的有对应，而 <span class="math inline"><em>B</em></span>
中的元素不是每一个都能在 <span class="math inline"><em>A</em></span>
中找到对应，则<strong>优先讨论全部元素对应的</strong>。</li>
</ol></li>
</ol>
<p>​ 对于 <strong>含有、不含有</strong>
的组合，含有则先取出这些元素，再用其他元素补足；不含有则先将这些元素剔除，再从剩下的元素中选取。</p>
<p>​ 对于 <strong>至少、之多含有几个元素</strong>
的组合，当直接法分类复杂时可以逆向求解，排除法解决。</p>
<h4 id="重复定序问题">2. 重复、定序问题</h4>
<p>​ 设一共有 <span class="math inline"><em>n</em></span> 个元素，有
<span class="math inline"><em>m</em></span>
中不同的类别，且各类元素的个数为 <span class="math inline"><em>n</em><sub>1</sub>, <em>n</em><sub>2</sub>, ⋯, <em>n</em><sub><em>m</em></sub></span>，即
<span class="math inline"><em>n</em> = <em>n</em><sub>1</sub> + <em>n</em><sub>2</sub> + ⋯ + <em>n</em><sub><em>m</em></sub></span>，将这
<span class="math inline"><em>n</em></span> 个数排成一列，有：</p>
<ol type="1">
<li>元素优先法：<span class="math inline">$\dfrac{n!}{n_1!n_2!\cdots
n_m!}$</span> 种。</li>
<li>位置优先法：<span class="math inline"><em>C</em><sub><em>n</em></sub><sup><em>n</em><sub>1</sub></sup><em>C</em><sub><em>n</em> − <em>n</em><sub>1</sub></sub><sup><em>n</em><sub>2</sub></sup>⋯<em>C</em><sub><em>n</em> − <em>n</em><sub>1</sub> − ⋯ − <em>n</em><sub><em>m</em> − 1</sub></sub><sup><em>n</em><sub><em>m</em></sub></sup></span>
种。</li>
</ol>
<p>​ 定序问题本质上与重复问题一样，因为如果 <span class="math inline"><em>m</em></span> 个不同元素按一定顺序排列，等价于
<span class="math inline"><em>m</em></span>
个相同元素进行排列。<strong>多排定序问题与单排定序问题相同</strong>。</p>
<h4 id="差异分组问题">3. 差异分组问题</h4>
<p>​ <span class="math inline"><em>n</em></span>
个<em>不同元素</em>平均分成 <span class="math inline"><em>m</em></span>
组，有 <span class="math inline">$\dfrac{C_n^kC_{n-k}^k\cdots
C_k^k}{A_m^m}, k=\dfrac{n}{m}$</span> 种不同的方法（分完后消序除以 <span class="math inline"><em>m</em>!</span>）。</p>
<p>​
对于局部分组问题，同理，只需消去所有重复的组（也即均匀分配的组）。</p>
<h4 id="无差异分组问题">4. 无差异分组问题</h4>
<p>​ 将 <span class="math inline"><em>n</em></span> 个相同元素分给 <span class="math inline"><em>m</em></span> 个不同的对象（<span class="math inline"><em>n</em> ≥ <em>m</em></span>），则：</p>
<ol type="1">
<li>挡板法：若每个对象至少分得一个元素，有 <span class="math inline"><em>C</em><sub><em>n</em> − 1</sub><em>m</em> − 1</span>
种方法，可描述为 <strong><span class="math inline"><em>n</em> − 1</span>
个空中插入 <span class="math inline"><em>m</em> − 1</span>
块板</strong>。</li>
</ol>
<h4 id="相邻与不相邻">5. 相邻与不相邻</h4>
<p>​ <strong>相邻问题捆绑法</strong>：若有 <span class="math inline"><em>n</em></span> 个元素排成一列，要求 <span class="math inline"><em>a</em><sub>1</sub>, <em>a</em><sub>2</sub>, ⋯, <em>a</em><sub><em>m</em></sub></span>
相邻，我们可以先将这些元素捆绑成一个元素，此时共有 <span class="math inline"><em>n</em> − <em>m</em> + 1</span> 各元素，有 <span class="math inline">(<em>n</em>−<em>m</em>+1)!</span>
种排法，再排序捆绑的元素内部的顺序，故共有 <span class="math inline">(<em>n</em>−<em>m</em>+1)!<em>m</em>!</span>
种排法。</p>
<p>​ <strong>不相邻问题插空法</strong>：若有 <span class="math inline"><em>n</em></span> 个元素排成一列，要求 <span class="math inline"><em>a</em><sub>1</sub>, <em>a</em><sub>2</sub>, ⋯, <em>a</em><sub><em>m</em></sub></span>
不相邻，我们可以先将其他元素排序，有 <span class="math inline">(<em>n</em>−<em>m</em>)!</span> 种排法，再将 <span class="math inline"><em>m</em></span> 个不相邻的元素插入空位，有 <span class="math inline"><em>A</em><sub><em>n</em> − <em>m</em> + 1</sub><sup><em>m</em></sup></span>
种排法，故不同排法有 <span class="math inline">(<em>n</em>−<em>m</em>)!<em>A</em><sub><em>n</em> − <em>m</em> + 1</sub><sup><em>m</em></sup></span>
种排法。</p>
<p>​
<strong>涂色问题</strong>求解时，一般按分步乘法计数原理、分类加法计数原理分析。</p>
<h3 id="三二项式定理">三、二项式定理</h3>
<h4 id="二项式定理">1. 二项式定理</h4>
<p>​ <span class="math inline">(<em>a</em>+<em>b</em>)<sup><em>n</em></sup> = <em>C</em><sub><em>n</em></sub><sup>0</sup><em>a</em><sup><em>n</em></sup><em>b</em><sup>0</sup> + <em>C</em><sub><em>n</em></sub><sup>1</sup><em>a</em><sup><em>n</em> − 1</sup><em>b</em><sup>1</sup> + ⋯ + <em>C</em><sub><em>n</em></sub><sup><em>n</em></sup><em>a</em><sup>0</sup><em>b</em><sup><em>n</em></sup></span>，通项
<span class="math inline"><em>T</em><sub><em>r</em> + 1</sub> = <em>C</em><sub><em>n</em></sub><sup><em>r</em></sup><em>a</em><sup><em>n</em> − <em>r</em></sup><em>b</em><sup><em>r</em></sup></span>，<strong>二项式系数</strong>指
<span class="math inline"><em>C</em><sub><em>n</em></sub><sup><em>r</em></sup></span>。</p>
<h4 id="二项式定理的系数问题">2. 二项式定理的系数问题</h4>
<ol type="1">
<li>求展开式的所有二项式系数和，我们只需令二项式中两个元素都为 <span class="math inline">1</span>，可推出 <strong><span class="math inline">(<em>a</em>+<em>b</em>)<sup><em>n</em></sup></span>
的二项式系数和为 <span class="math inline">2<sup><em>n</em></sup></span></strong>。
<ol type="1">
<li>奇偶数项问题：同理，令 <span class="math inline"><em>a</em> = 1, <em>b</em> =  − 1</span>，可以得出<strong>奇数项的二项式系数和与偶数项的二项式系数和均为
<span class="math inline">2<sup><em>n</em> − 1</sup></span></strong>。</li>
</ol></li>
<li>求展开式 <span class="math inline"><em>f</em>(<em>x</em>) = <em>a</em><sub>0</sub> + <em>a</em><sub>1</sub><em>x</em> + <em>a</em><sub>2</sub><em>x</em><sup>2</sup> + ⋯ + <em>a</em><sub><em>n</em></sub><em>x</em><sup><em>n</em></sup></span>
的所有系数和，我们只需令未知数等于 <span class="math inline">1</span>（<strong>赋值法</strong>），则得到展开式的各项系数之和。
<ol type="1">
<li>奇数项系数和：<span class="math inline">$a_1+a_3+\cdots=\dfrac{f(1)-f(-1)}{2}$</span>。</li>
<li>偶数项系数和：<span class="math inline">$a_0+a_2+\cdots=\dfrac{f(1)+f(-1)}{2}$</span>。</li>
<li>特殊系数和：<span class="math inline"><em>a</em><sub>1</sub> + 2<em>a</em><sub>2</sub> + 3<em>a</em><sub>3</sub> + 4<em>a</em><sub>4</sub> + ⋯ + <em>n</em><em>a</em><sub><em>n</em></sub> = <em>f</em>′(1)</span>（求导，多次求导可以求出每一个单独的值）。</li>
</ol></li>
</ol>]]></content>
      <categories>
        <category>High School</category>
        <category>Mathematics</category>
        <category>Possiblity and Stats</category>
      </categories>
      <tags>
        <tag>School Notes</tag>
        <tag>High School</tag>
        <tag>Mathematics</tag>
      </tags>
  </entry>
  <entry>
    <title>兰亭集序-王羲之</title>
    <url>/2022/03/25/chinese/High%20School/Classical%20Chinese%20Literature%20and%20Poetry/%E9%80%89%E6%8B%A9%E6%80%A7%E5%BF%85%E4%BF%AE/%E5%85%B0%E4%BA%AD%E9%9B%86%E5%BA%8F-%E7%8E%8B%E7%BE%B2%E4%B9%8B/</url>
    <content><![CDATA[<h2 id="课文解读">课文解读</h2>
<p>​
东晋永和九年（353）的上已节（三月三日），王羲之与谢安、孙绰、支遁等41人，集会于会稽山阴的兰亭，在水边游赏。他们一起流觞饮酒，感兴赋诗，畅叙幽情。事后，将诗作结集成册，由王羲之写成此序。此外，孙绰作有《三月三日兰亭诗序》，一般被认为是这部诗集的“后序”（也有学者认为这是另一次聚会的诗序），与《兰亭集序》可相呼应。</p>
<p>​
从书法角度来看，《兰亭集序》是中国书法史上的至宝，虽然真迹已经隐没，但历代摹本亦足以令人叹赏不已。从文章角度来看，《兰亭集序》“文翰之美，自兹以还，亦未见的然有以过之者”（文微明《重修兰亭记》），堪称千古名文。</p>
<p>​
这是一篇序文，其基本作用是“序典籍之所以作”（王应麟《辞学指南》卷四），对所序的文章或著作的缘起、内容、主旨等加以介绍或引申，有时也做些评价。徐师曾《文体明辨序说》将其分为两类，“一曰议论，二曰叙事”，其实这两者并非截然不同，只是具体到每篇文章时会各有侧重罢了，而且很多著名的序文除了议论、叙事外还有抒情的成分。例如，李清照《金石录后序》、文天祥《指南录后序》，将对身世经历的记叙与情感的抒发融于一体。又如，欧阳修《五代史伶官传序》将记叙、议论、抒情结合起来，既概括史实，又论说历史教训，还抒发对后唐庄宗亡国丧身的感慨。除了为文章、著作所写的序，还有如《送孟东野序》《送薛存义之任序》《送东阳马生序》的赠序，所谓“君子赠人以言，庶人赠人以财”（《荀子·大略》），内容多为述交游、道惜别、致愿望，有时也谆谆教海，以求有益于对方。</p>
<p>​
至于《兰亭集序》《滕王阁序》这样的序，有学者认为应别立一类，“它们多用以记宴饮盛会，其来源也与临觞赋诗，为诗作序有关，但它主要在写盛会的场面和宴饮之乐，既不专为诗而作，也与赠序性质不同，我们可以称之为序记”（褚斌杰《中国古代文体概论》）。当然也有学者有别的看法：“非止序禊事也，序诗意也。修短死生，皆一时诗意所感，故其言如此。笔情绝俗，高出选体。”（浦起龙《古文眉诠》卷四十二）对《兰亭集序》的教学来说，重要的不在于增加一个新的概念，或辨析文中的感叹究竟主要是来自山水自然还是集中的诗作，而在于把握文章的写作特点，了解“序”这一文体的灵活性和多样性。</p>
<p>​
本文记叙的是东晋时期名土们的一次大集会，表达了他们相通的思想、情感。文章融叙事、写景、抒情、议论于一体，文笔腾挪跌岩，语言清畅精警，表达了富有哲理的生命之思。</p>
<p>​ 教材将此文分为四段，大致可以看成两个部分。</p>
<p>​
第一部分为前两段，主要是叙事、写景，属于文章的写实部分。开头两句，寥寥数语即点明集会的时间、地点、事由、参加者，接下来，作者几乎是“迫不及待”地将笔触指向兰亭所处的自然环境。在描写山水方面，作者并不做细腻的刻画，而是寥寥数笔，以传神为主：山高则形胜，林密则气爽，流清则境幽，无非是“幽”“雅”二字。至于峻岭宜有翔羽啼猿，长林宜有丰草繁花，湍水宜有清波瓣潺，均不着墨，只以曲水流觞，将笔触又拉回到兰亭的聚会上，一个“虽无”、一个“亦足”，可见此会之“雅”，亦可见相谈之“清”，当然也就可以稍稍回扣“群贤”。文笔忽而疾去，忽而缓回，张弛有度，富有诗意。接下来，以“是日也”三字承上启下，从写具体的景物、氛围转向整体的天气、环境，从列坐山水之间，到畅观宇宙万物，文章的境界陡然变得宏阔起来，充满无尽生机。写自然，到时空宇宙便为尽头，一般文章可能就会由此抒发情感，阐述哲思。但是，王羲之并不如此，他反而把文章又拉回到了兰亭之会，拉回到了“足以极视听之娱”，与第一段的“足以畅叙幽情”呼应，而“调门”似乎还略低。最后，以平静、沉稳的笔调，用一个“乐”字绾住文章的前半部分。这个“乐”既是对雅集的一种概括，也为下文的“岂不痛哉”蓄势。不仅如此，前半部分文章从语言上看虽然流畅自然，从笔法上看却吞吐往返，并不追求开合自如，只是交代了雅集的情况，营造出一种幽雅而生机勃勃的氛围，设定了一种游目宇宙万物的视角，这其实是为下面的说理蓄势。</p>
<p>​
第二部分笔锋一转，变为抒情、议论，由赏景畅饮、游目骋怀引发出有关忧乐生死的感慨与思考，大致可以概括为：人生苦短，乐必生悲；托之诗文，传诸后人。这部分仍然不离兰亭雅集，但以表达哲思为主。与前一部分的沉稳平静不同，文章第二部分的情感起了波澜。面对欢乐短暂、岁月如梭，人生苦短、终归于尽的永恒痛苦，所有内心敏感的人都不会漠然视之。但作者并没有让情感淹没自己，而是保持着思考与行文的理性。</p>
<p>​
第3段以“夫人之相与”数字，紧扣雅集欢会之事，其实下面所说的并不只是“相与”之事，又以“俯仰一世”点明下文中痛苦之源——人生苦短，忽如朝露。接下来承接前面的“乐”，以简洁的笔调刻画不同的人生趣味：或倾心唔谈，或放浪形骸。随后以“趣舍万殊，静躁不同”八字截住欢乐的各种“形态”，以“当其”“及其”领起对比，展现出人世间诸种欢乐之源和欢乐易逝之苦，概括力极强又不乏形象性。正当读者以为作者即将直接抒发永恒的苦痛时，作者偏使文章又生一个顿挫，以“向之所欣”总括一切赏心乐事（当然也就包括了上文中提到的雅集欢会、游目骋怀、晤言一室、放浪形骸），再次使用“俯仰”二字，强调其短暂不永的特征，随之以“犹”字稍作让步，收住对欢乐易逝的思考，以“况”字推进一层，道出人生终必有尽的苦痛。文章由欢乐而凝默，由凝默而惨然，由惨然而终于放声一恸，如同那山间的溪水，千回百折最终奔泻而下。虽然有“古人云”稍作缓冲，那一声“岂不痛哉！”的感叹依然痛彻心扉。</p>
<p>​
但是作者并没有任由痛苦的情绪蔓延井来，用“昔人”承接“古人”，将文章从哲理性的思考转向历史性的叙述，文章的情绪也逐渐平静下来，以古人与自己心有戚戚焉，缓缓引出对庄子观点的批评。进而以“后之视今，亦犹今之视昔”收束前面的遐思，把视线转向现实，回扣到兰亭集会和兰亭诗集上来，并更进一步放眼未来，希望后人也能感受到自己（及雅集诸人）的情怀。全文的情感于此又趋平静，虽也有“悲夫！”，但比起“岂不痛哉！”来，已经沉静得多了。最后几句的写法，在很大程度上受到序文体式的影响，但确实使全文形成了一个“当下—哲思—历史—未来—当下”的思路循环，既立足当下，又思接千载，既不离现实，又不拘于现实。</p>
<p>​
纵观全文，看似随意写来，实则思路清晰，笔法多变，结构紧凑。随感情的变化，文章由平静而激荡，再由激荡而平静，极尽波澜起伏之美。特别是文章能将流畅自然的语言与吞吐顿挫的笔致结合起来，既不因语言流畅而致文意一泄无余，又不因笔致顿挫而使文意晦涩迁远，文章卷舒自如，辞畅韵谐，实为难得。比起大量使用四字句的《陈情表》，本文的语言以散句为主，间有骈句点染其间，且句子字数参差不齐，四字句连续使用的情况较少，因此文气舒缓悠长又时有紧凑整齐之处，节奏沉稳平缓。《世说新语·赏誉》中记殷中军（浩）对王羲之的两段评价，一曰“清贵”，一曰“清鉴贵要”，《晋书·王羲之传》记庾亮临薨，“上疏称羲之清贵有鉴裁”，可见是时人的共识。从风格上来说，本文恰如其人，确实体现出一种淡雅雍容的清贵气度。</p>
<p>​
自古以来，关于《兰亭集序》的话题很多。例如，“快然自足”在唐神龙摹本和敦煌抄本中作“怏然自足”，但在《晋书·王羲之传》中作“快然”，是《晋书》有误，还是“怏”有不常见的意思或有假借，抑或是“怏”“快”常相混用，故《晋书·王羲之传》的作者（其中包括对《兰亭集序》极其熟悉的唐太宗）改俗为正？这些问题都有待进一步研究。又如，《文选》为什么不选《兰亭集序》的问题，古来争议也极多，究竟是王羲之的为人处世的风格不为萧统认可，还是《文选》编选者的审美观判断过于苛刻？再如，郭沫若先生提出《兰亭集序》既不是王羲之的文章，也不是他的书法作品，而是隋代僧人智永伪托（见《兰亭序）与老庄思想》）.这样的结论是怎样得出的？郭老有哪些证据？推论的过程又是怎样的？等等。</p>
<p>​
在诸多问题中，与学生理解课文关系最为密切的，还是对本文所体现的思想的讨论。由于文中有关生死观的思考集中体现在“固知一死生为虚诞，齐彭殇为妄作”一语中，所以相关的讨论大多围绕其展开。就观点而言大致可以分为两类。</p>
<p>​
一类观点认为王羲之在文中表达了对庄子思想的批评。面对人必有死、欢愉易逝这样的必然结局，“一死生”“齐彭殇”不过是一种虚妄的回避，不如直面苦痛。因此，他反对那种沉湎于庄老玄思、耽于谈论生死的清谈，主张关怀实际的国计民生，济世救民，也就是他对谢安说的“虚谈费务，浮文妨要”（《世说新语·言语》）。古人中持这一观点的就有不少，如林云铭说：</p>
<blockquote>
<p>​
其曰“一死生为虚诞，齐彭殇为妄作”，明明力肆抵排，则砥柱中流，主持世教之意，尤为大著。（《古文析义》卷九）</p>
</blockquote>
<p>​ 文徵明则更进一步说：</p>
<blockquote>
<p>​
使其得志，行其所学，而功烈施置，当不在茂弘、安石之下。时不能用，而敛其所为，优游于山林泉石之间，至于誓墓自绝。鸣呼，岂其本心战！若其所谓虚谈废务，浮文妨要，斯言也，实切当时之弊，而以一死生、齐彭殇为妄诞，于斯文特致慨焉，其意可见已。（《重修兰亭记》）</p>
</blockquote>
<p>​
郭预衡先生则认为王羲之的身上虽然染有当时士族文人的习气，但在乱世之中，实有济世安民的志向。正因为在政治上有积极用世的一面，所以写出“固知一死生为虚诞，齐彭殇为妄作”的话也并不奇怪（《王羲之的《兰亭集序》）。</p>
<p>​
另一类观点则跳出只看序文的窠臼，综合《兰亭集》的诗作（特别是王羲之自己的诗作）、孙绰的《三月三日兰亭诗序》等，探究王羲之与庄子思想的关系。其实，王羲之受庄子影响很深，其言行中常有顺任自然、无为避世的成分，仅凭“固知一死生为虚诞，齐彭殇为妄作”二语，并不能断定王羲之就纯然是批判老庄、主张关注现实的。宋代葛立方说：</p>
<blockquote>
<p>​
谢安五言诗曰：“万殊混一象，安复觉彭殇。”而義之序乃以一死生为虚诞，齐彭殇为妄作，盖反谢安一时之语耳。而或者遂以为未达，此特未见当时羲之之诗尔。其五言曰：“仰视碧天际，俯瞰漆水滨。寥阒无涯观，寓目理自陈。大矣造化功，万殊莫不均。群籁虽参差，适我无非亲。”此诗则岂未达者耶？（《韵语阳秋》卷五）</p>
</blockquote>
<p>​
很好地点出了王羲之与老庄思想的密切联系。更何况《兰亭诗集》中的诗作充满了老庄思想的韵味，王羲之作为作序者（可能也是与会者中年岁最高者），在序言中批判诗集中众多作品的主题思想，从交往之道和序言体例来说也显得不太合适。</p>
<p>​
上述两种观点可以说都有道理。王羲之确实批评了庄子，也确实有反对清谈的言论，从他写给殷浩等人的书笺来看，他对政治观念、政事决策、军务方略、民情世运都有比较切实的认识。但与此同时，他“素自无廊庙志”，“雅好服食养性，不乐在京师，初渡浙江，便有终焉之志”（《晋书·王羲之传》），深受老庄思想影响。因此，忽视“固知一死生为虚诞，齐彭殇为妄作”这样的批评（甚至以此为质疑《兰亭集序》著作权的由头），忽视王羲之思想中切于世用的成分，或过分夸大王羲之这种批评，认为王羲之脱离了当时崇老庄、重玄谈、求长生的士人风气，甚至认为他是个纯粹的儒者，都是偏颇的。</p>
<p>​ 此外，钱锺书先生认为：</p>
<blockquote>
<p>​
盖羲之薄老、庄道德之玄言，而崇张、许方术之秘法；其诋毁“一死生”“齐彭殇”为虚妄，乃出于修神仙、求长寿之妄念虚想，以真贪痴而讥伪清净。识见不“高”，正复在此。（《管锥编》第三册）</p>
</blockquote>
<p>​
指出王羲之之所以批评庄子齐一生死的观点，是因为这种思想上的超越生死不如服散修仙更能突破生死的界限，因此这种批判并不能算特别“高明”的思想。这一评价联系了王羲之好“服散”的事实，别开生面。庄子的观点是同一生死以轻去就，前提是肯定“修短随化，终期于尽”，服药求仙则是要突破这个前提，就精神层面讲，还不如颇具哲理意味的“一死生”“齐彭殇”。唐人张彦远《法书要录·右军书记》记有一条王羲之的“杂帖”说：“知足下率法转到，胜理极此。此故荡涤尘垢，研遣滞虑，可为尽矣，无以复加，漆园比之，殊诞谩如不言也。”这里对庄子的批评可能是王羲之晚年所为，已经“上升”到道教层面，嫌弃庄子的玄言了。</p>
<p>​
综上所述，王羲之的思想是复杂的，但对文章解读而言，重要的还不是为其定性，或看他的思想是崇儒还是重道，是偏向一般的道家还是进入道教的范畴，而是要仔细分析他在具体文本中体现的思想。</p>
<p>​
在《兰亭集序》中，王羲之清醒地认识到人（即使是名士、高僧）也不可能如庄子说的那样真正“无待”，以获得欢乐而言，或参与雅集，或游目骋怀，或晤言一室，都要“有所待”，即使所谓放浪形骸，也不过是“静”的反面而已。凡事既有所待，则必不能久，欢乐易逝，人生亦如此。人们对欢乐易逝尚且“不能不以之兴怀”，对人生苦短就必然要长叹“岂不痛哉！”了。这里的思路是比较清楚的。接下来追叙自己对古人的生死之叹有所感而无确知，进一步表现这种生命必将终结的苦痛是古今皆有，喻之于心而不能明之于智的。但是，作者并非全无确知，至少他明白，“一死生”“齐彭殇”这样的玄思在人生苦短的残忍现实面前不过是一种虚诞。“固知一死生为虚诞，齐彭殇为妄作”只是说庄子的思考也无法改变现实，所有人都将“修短随化，终期于尽”。这可以视作对庄子思想的一种批评，但不是严厉的批评，更不是要批判清谈、主张务实，而只是要表达一种由衷的悲痛，就如孔繁先生所说，“‘固知一死生为虚诞，齐彭殇为妄作’，似乎是不赞成老庄齐物思想，其实不然，他不过是由人生寿命有限而发出一种感慨，所谓‘修短随化，终期于尽’，恰是老庄对人生的看法”（《魏晋玄谈》）。毕竞我们很难想象这位在与支道林谈论《逍遥游》时“披襟解带，留连不能已”（《世说新语·文学》）的名士，能在一两年后的兰亭会上就叛出老庄的门户。当然，由于老庄无法解决王羲之心中那永远的痛处，在兰亭会后不过数年，他辞归山林，就开始与道士许迈修仙服食，试图以道教丹药完成道家思想无能为力之事，以实现“卒当以乐死”（《晋书·王羲之传》）的愿望。</p>
<p>​
由此看来，王羲之在《兰亭集序》中表达的思想，与汉末魏晋时期许多文人名士的思想并无太大区别，甚至连兴感之由都差不多。《古诗十九首》其四先写“今日良宴会，欢乐难具陈”，没过几句就转为“人生寄一世，奄忽若飙尘”。曹植说：“人生处一世，去若朝露晞。”（《赠白马王彪》其五）陆机说：“慷慨惟平生，俯仰独悲伤。”（《门有车马客行》）石崇《金谷诗序》写宴集之乐，终以“感性命之不永，惧凋落之无期”作结。孙绰《三月三日兰亭诗序》写“高岭千寻，长湖万顷……乃席芳草，镜清流，览卉木，观鱼鸟，具物同荣，资生咸畅”，与《兰亭集序》同一机杼，而所谓“耀灵纵辔，急景西迈，乐与时去，悲亦系之。往复推移，新故相换，今日之迹，明复陈矣”，与《兰亭集序》也无甚不同。魏晋时期“人的觉醒”，其重要内涵之一就是对生命的极度看重，当究心事功道德以求不朽的儒家思想日趋衰微，对年命不永的悲凉认识也只有通过道家（以及道教）的方式来化解，悲叹生死也好，饮酒清谈也好，服药修仙也好，都是如此。</p>
<p>​
质而言之，过分重视“一死生”“齐彭殇”，其实基于一种“前理解”：《兰亭集序》作为杰作，其中的思想必定高出流辈，不同凡俗。但事实上，每位作者都会受到时代思想的影响，在生死、爱情这样的永恒主题上，杰作之为杰作，并不一定是在思想认识上有特出之见，有时只是表达感情特别诚挚、修辞造语特别深隽。袁宏道说《兰亭集序》“于死生之际，感叹尤深”（《兰亭记》），可以说是道出了此文为后世称道的关键所在。他对《兰亭集序》中生死之思的理解也相当深透：</p>
<p>​
古今文士爱念光景，未尝不感叹于死生之际。故或登高临水，悲陵谷之不长；花晨月夕，嗟露电之易逝。虽当快心适志之时，常若有一段隐忧埋伏胸中，世间功名富贵，举不足以消其牢骚不平之气。于是卑者或纵情曲蘖，极意声传；高者或托为文章声歌，以求不朽，或究心仙佛与夫飞升坐化之术。其事不同，其贪生畏死之心一也。独庸夫俗子，耽心势利，不信眼前有死。而一种腐儒，为道理所锢，亦云：“死即死耳，何畏之有！”此其人皆庸下之极，无足言者。夫蒙庄达士，寄喻于藏山；尼父圣人，兴叹于逝水。死如不可畏，圣贤亦何贵于闻道哉？（《兰亭记》）</p>
<p>​
在《兰亭集序》中，王羲之的可贵之处在于：他既不因为要面对苦痛而去回避人必有死的现实，也不因这样的自然规律无法逃避而“活在当下”；他敢于直面现实，并承担直面现实的痛苦。因为认识到死亡的痛苦，所以他珍视如兰亭集会这样的欢乐，看重生机勃勃的自然；因为认识到一切终将消逝，所以他并不沉溺于各种快乐之中，而是用哲人的目光审视它们；因为认识到生死之叹贯串古今，所以他寄望后人能与兰亭诸贤心灵相通。因为有了痛苦，所以珍惜欢乐；因为有了痛苦，所以思考生命；因为有了痛苦，所以寄情未来：这可能就是《兰亭集序》能够打动古今无数读者的重要原因吧。</p>
<h2 id="参考资料">参考资料</h2>
<h3 id="参考译文">参考译文</h3>
<div class="classcial-chinese-literature-and-poetry-translation"><div class="paragraph"><p class="original-text">永和九年，岁在癸丑，暮春之初，会于会稽山阴之兰亭，修禊事也。</p><p class="translation">永和九年，正值發丑。暮春三月之初，（我们）在会稽郡山阴县的兰亭聚会，行修禊之事。</p><p class="original-text">群贤毕至，少长咸集。</p><p class="translation">众多贤士全来参加，少者老者都聚于一处。</p><p class="original-text">此地有崇山峻岭，茂林修竹；</p><p class="translation">（兰亭）这地方有崇山峻岭、茂密的树林和高高的翠竹，</p><p class="original-text">又有清流激湍，映带左右，引以为流觞曲水，列坐其次。</p><p class="translation">又有清激湍急的溪流，映衬萦绕在亭子左右，引（溪水）作为流觞的曲水， （大家）列坐在水边。</p><p class="original-text">虽无丝竹管弦之盛，一觞一咏，亦足以畅叙幽情。</p><p class="translation">即使没有音乐伴奏的盛况，只是饮酒赋诗，也足以酣畅地抒发深远高雅的情思。</p></div><div class="paragraph"><p class="original-text">是日也，天朗气清，惠风和畅，</p><p class="translation">这一天，天气晴朗，空气清新，和风阵阵，温暖舒畅。</p><p class="original-text">仰观宇宙之大，俯察品类之盛，</p><p class="translation">抬头观览宇宙之广大，低首细察万物之众多，</p><p class="original-text">所以游目骋怀，足以极视听之娱，信可乐也。</p><p class="translation">借以纵目观察，开畅胸怀，足以尽情享受所见所闻的乐趣，确实是令人愉快的啊。</p></div><div class="paragraph"><p class="original-text">夫人之相与，俯仰一世，或取诸怀抱，悟言一室之内；</p><p class="translation">人们互相交往，很快便度过一生。（有的人）在室中晤谈，互相倾吐心里话；</p><p class="original-text">或因寄所托，放浪形骸之外。</p><p class="translation">（有的人）把情怀寄托在所爱好的事物上，言行不受拘束，自由放纵。</p><p class="original-text">虽趣舍万殊，静躁不同，</p><p class="translation">虽然人们（对生活的）取舍千差万别，（性情也有）沉静和躁动的不同，</p><p class="original-text">当其欣于所遇，暂得于己，</p><p class="translation">但当他们对所接触的感到欢喜，心里一时感到自得，</p><p class="original-text">快然自足，不知老之将至。</p><p class="translation">（就感到）高兴和满足，（竟然）没想到老年将要到来；</p><p class="original-text">及其所之既倦，情随事迁，感慨系之矣。</p><p class="translation">等到他们对所得的事物已经厌倦，心情也随情况的变化而起变化，感慨就随之有所不同了。</p><p class="original-text">向之所欣，俯仰之间，已为陈迹，犹不能不以之兴怀。</p><p class="translation">从前感到欢欣的，很快就成为往事，（人）尚且不能不因这些引起心中的感触，</p><p class="original-text">况修短随化，终期于尽。</p><p class="translation">何况（人的）寿命长短听凭造化，最终归于消灭！</p><p class="original-text">古人云：“死生亦大矣。”岂不痛哉！</p><p class="translation">古人说：“死生也是一件大事啊。”这怎能不让人痛心啊！</p></div><div class="paragraph"><p class="original-text">每览昔人兴感之由，若合一契，</p><p class="translation">（我）每当看到古人（文中）（对死生）发生感慨的原因，像符契那样相合，</p><p class="original-text">未尝不临文嗟悼，不能喻之于怀。</p><p class="translation">没有一次不对着这些文章叹息哀伤，（却）不能明了于心。</p><p class="original-text">固知一死生为虚诞，齐彭殇为妄作。</p><p class="translation">（我）本来就知道把死和生等同起来的说法是不真实的，把长寿和短命等同起来的说法是虚妄之谈。</p><p class="original-text">后之视今，亦犹今之视昔。</p><p class="translation">后人看待今人，也就像今人看待前人，可悲啊！</p><p class="original-text">悲夫！故列叙时人，录其所述，</p><p class="translation">因此（我）一一记下当时与会者（的姓名），抄录下他们所作的诗篇。</p><p class="original-text">虽世殊事异，所以兴怀，其致一也。</p><p class="translation">即使时代不同、世事各异，（但）触发人们情怀的原因，大概是一致的。</p><p class="original-text">后之览者，亦将有感于斯文。</p><p class="translation">后世的读者，也将由这些诗文产生（一样的）感慨吧。</p></div></div>]]></content>
      <categories>
        <category>High School</category>
        <category>Chinese</category>
        <category>Classical Chinese Literature and Poetry</category>
      </categories>
      <tags>
        <tag>School Notes</tag>
        <tag>High School</tag>
        <tag>Chinese</tag>
      </tags>
  </entry>
  <entry>
    <title>归去来兮辞并序-陶渊明</title>
    <url>/2022/03/25/chinese/High%20School/Classical%20Chinese%20Literature%20and%20Poetry/%E9%80%89%E6%8B%A9%E6%80%A7%E5%BF%85%E4%BF%AE/%E5%BD%92%E5%8E%BB%E6%9D%A5%E5%85%AE%E8%BE%9E%E5%B9%B6%E5%BA%8F-%E9%99%B6%E6%B8%8A%E6%98%8E/</url>
    <content><![CDATA[<h2 id="课文解读">课文解读</h2>
<p>​
欧阳修曾说“晋无文章，惟陶渊明《归去来兮辞》一篇而已”（李公焕《笺注陶渊明集》引），此言夸张太甚，但可见后人对于《归去来兮辞》艺术成就和价值的推崇。或许归有光的评价更能准确地反映本文的价值：“两晋文章，此其杰然者。”（《文章指南》仁集）</p>
<p>​
《归去来兮辞》的“辞”是一种文体，源出于《楚辞》，但是《文选》单列为一类，置于议论性的“设论”和应用性的“序”当中，选入刘彻《秋风辞并序》和陶渊明《归去来兮辞并序》两篇。从其出源来看，“辞”讲究押韵和节奏，有诗歌的特性（其实《秋风辞》基本上就是一首诗）；从《文选》的定位来看，这一文体又属于“文”，其句式等方面的特点从某种意义上讲接近于赋。所以，后代的《陶渊明集》整理本，一般将其与《感士不遇赋》《闲情赋》合并为“赋辞”。</p>
<p>​
本文的主标题是《归去来兮辞》，关于这个题目的大体意思没有异议，就是“归隐吧”，但“归去来”三字却颇有争议。清人毛庆蕃认为：“于官曰‘归去’，于家曰‘归来’，故曰‘归去来’。”（《古文学余》卷二十六）这一观点为很多人接受。但有学者以清人王引之“来，句末语助也”（《经传释词》卷七）的说法为据，认为“来兮”是语气助词连用，以加强语气。也有学者统计陶渊明其他诗文中“来”字的方法，发现基本没有作句末语气助词的用法，因此认为“来”字还应当作一般的动词理解。还有学者指出“归去来”是六朝习语，“涵义重在‘归’字，而‘去’’来’之方向性已逐渐淡化，重在表示强调、呼唤之语气”（袁行霈《陶渊明集笺注》卷五）。</p>
<p>​
全文分“序”和“辞”两部分，序文是标准的散体，叙述了作者出仕的缘由和辞官的原因，交代了写作背景和时间。这部分内容看起来只是一般性的陈述，其实并不如此简单。</p>
<p>​
序文所说的辞官归隐一事发生在东晋义熙元年（405年），其时陶渊明41岁，任彭泽令。他“少怀高尚，博学善属文，颖脱不羁，任真自得”（《晋书·陶潜传》），为生计所迫任彭泽令，仅八十余天就弃官归隐。《宋书·陶潜传》云：“郡遣督邮至，县吏白应束带见之。潜叹曰：’我不能为五斗米折腰向乡里小人。’即日解印绶去职。赋《归去来》。”算是为序文所说增加了具体生动的情节。而序文中所说的妹妹去世，算是他辞官的动因之一。其实，作者在序文里面说得很清楚，他告别官场是因为“质性自然”，改变不了也不愿改变，也就是说，当官的生活方式违背了他的本性。至于督邮至县、程氏妹亡，都不是他辞官的根本原因。朱自清先生说：“彭泽之归，史称因督邮之故，与‘序’异……寻督邮之事，殆非虚构，而谓以此去职，则史家张大之词；妹丧固是实情，然亦以去志久决，故借此急求自免，庶有辞以对亲友及执事者耳。序中语气明明可见，不仅辞中不及武昌也。”（《陶渊明年谱中之问题》）分析得入情入理。</p>
<p>​
《归去来兮辞》写于陶渊明辞去彭泽令之后的“乙已岁十一月”，这一点本没有疑问，但金代王若虚认为此文是“将归而赋”，不应当写春景春耕（《滹南遗老集》卷三十四），刘祁指出此文“前想象，后直述，不相侔”（《归潜志》卷八）。此后，“序”中的写作时间与“辞”中的景物特征之间的季节不合就成为一个无法回避的问题。逯钦立、王瑶、朱东润诸先生均认为本文是陶渊明归家之初或归家后第二年所写，景物行程均属实录。但这一说法无法解释序文中对写作时间的明确记录。钱锺书先生和周振甫先生认为此文所写内容都是想象，并非追述，并举出《诗经·豳风·东山》里征夫尚未回返先想象家中情景的写法作为佐证。这一说法解决了前述的“序”与“辞”的矛盾，且“归途及春耕之事释为预想之辞，更有意趣”（袁行霈《陶渊明集笺注》卷五），得到不少学者的认可。</p>
<p>​ “辞”的部分是文章的主体，教材将其分为四段。</p>
<p>​
第1段以“归去来兮，田园将芜胡不归”的喟叹唤起全篇，平地拔起，直抒胸臆，仿佛久受拘束之后忽得解脱，一声长叹，似乎是舒缓的自问，其实是峻峭的决绝，表达了自己归田之志的坚决，同时点出了作为文章核心的“归”字和作为全篇线索的“田园”二字。接下来的六句包含了对自己人生的复杂思考和多样情感，回顾当初为了谋生而出仕，感到痛苦悲哀，所幸虽已“迷途”，但“迷途其未远”，回头还不迟。寥寥数句，既有对自己误入尘网的沉痛追悔，又不乏决意归隐的庆幸自得；既是自我觉醒的宣言，又是永绝于污浊官场的宣言。在反思与抒情之中，“归去来兮”的原因也就不言自明了。以上是本文文意的第一层。接下来的“舟遥遥”四句展开想象，悬想归程的情景和自己的心情。“遥遥”“飘飘”两个叠词，表现出作者摆脱“樊笼”、复返自然的舒畅；一“问”一“恨”，含蓄地表达了归心似箭的感觉。全段把将归之愿，欲归之因，望归之情融于一体，充满期待与欣悦，为下文想象“归家”“归园”“归田”，感悟“归尽”做了很好的铺垫。</p>
<p>​
第2段想象初回到家时的情景。一个“瞻”字，与前面的归心似箭、急盼天明相扣合。自己“奔”，僮仆“迎”，稚子“候”，两动一静，画面充满情味又有节制，与其说是描绘场景，不如说是表现心情。接下来“三径就荒，松菊犹存”两句所蕴涵的感情相当丰富，有对久违的田园生活的向往，有恨自己不早谋归的感叹，“松菊犹存”更是比喻自己高洁品格仍在。“携幼入室，有酒盈樽”呼应序文中的“公田之利，足以为酒”，“樽满”即是于愿已足。以下选取了几个有代表性的生活场景和画面，行文节奏趋缓，表现了作者“归来后”的生活情景：举酒观树，悠闲自得，舒心展颜；倚窗吟啸，傲气犹存，安处陋室；每日涉园，意趣无限，摒绝凡尘；扶杖闲游，远观流云，或有会心。这些生活情景中包含的感情是多样的：既有白由与欢愉，又有傲岸与易足；既有独处园内时不可与人道的趣味，又有独自出游时遥望远方，无从揣摩的凝望。最后四句，虽也属于生活场景，但作者以云鸟的动作构成一个富有象征性的画面——云无心出而终出，与自己的出仕何其相似；鸟倦飞而终知还，也正是自己辞官而归的象征。这样的写法，既避免了一直铺陈生活画面有可能带来的单调感，也能以形象化的方式回顾第1段开头处（乃至序文中）关于出仕与辞官的内容。最后刻画日落人独立，与孤松为友的画面，日落思归而未归，松本坚贞而独立，余韵无穷，作者的想象从热闹欢愉很快地转向独处、独游、独思、独悟，虽然在本段文字中并未出现“独”字，仅有的一个“孤”字也给了松树，但作者的“独”仍然从字里行间中流露出来，这种“独”是特立独行，是孤独傲岸，是追求超出尘网的精神的独自遨游。陶渊明之为隐逸诗人之宗，颇得力于此；后人“和陶”往往徒具形貌，所缺者亦常在此。</p>
<p>​
第3段再以“归去来兮”引出描写和感叹，由归园走向归田，而与世俗相忘相诀之志更加坚定，先用“息交”“绝游”反复强调，表示对官场生活的鄙弃，接下来以一个反问句，与更广大的俗世告别。作者的“独”，似乎发展到了一个极致。然而随后我们就会发现，作者的心灵并不是彻底封闭，而是向所爱的亲人、质朴的农人开放着，向高雅的琴书开放着，最重要的是向生机勃勃的自然开放。伍涵芬认为文章至此“尤妙于‘息交绝游’一句，下即接云‘悦亲戚之情话，乐琴书以消忧’。若无此两句，不将疑是孤僻一流，同于槁木乎”（《读书乐趣》卷三），说得很有道理。作者的描述中充满了深挚的感情，带着探幽访奇的愉悦，带着对生机勃勃的大自然的微笑，当然，也带着吾生行休的一丝悲凉。最后两句触景生情，自然引出末段的抒情议论，以“万物”与“吾生”相比，将作者的“独”从超绝尘世之上的高度，推向了独自品味生命与自然的深度。</p>
<p>​
第4段以“已矣乎！”的感叹发端，把文章的感情推向高潮。“寓形宇内复几时？曷不委心任去留？”这是作者抒发感慨，也是对自己辞官而返的真实告白——不仅是质性自然，矫抑不得，也不仅是厌恶官场，向往田园，而是不能“以心为形役”，要在有限的生命中做出自由的选择。“富贵非吾愿，帝乡不可期”是作者的人生态度；“怀良辰以孤往，或植杖而耘籽。登东皋以舒啸，临清流而赋诗”则是作者所追求的生活境界。至此，作者终于把属于自己的那个“孤”字点了出来，独自亲近自然，独自躬耕陇亩，独自畅抒胸怀，独自赋诗属文，这就是作者心中的理想人生。最后以“聊乘化以归尽，乐夫天命复奚疑”二句作为结语，点出全篇主旨。作者的处世态度和人生哲学在此段得以充分体现。这种顺乎天命、委心任化的态度是充满诗意的，也是由痛苦和折磨中得来的。它总结了陶渊明对此前人生的反思，对个人本性的澄明，对未来人生的想望，是陶渊明生命观、生死观的核心，也是他辞官归里的最根本原因和最深刻总结。</p>
<p>​
本文篇幅不长，结构安排严谨周密。散体序文重在叙述，韵文辞赋则全力描写、抒情。从“辞”的整体结构来看，线索清晰，脉络分明，思想内容的层次不断递进，文字前呼后应形成整体。清代余诚在谈到本文的结构时说：</p>
<p>​
开首以田园句挈全篇要领，而下面尽本此书写，是顺提文法。结处以乐天句作全篇结穴。而上面尽照此发挥，是倒装文法。然其笔力高超，故无痕迹可寻。”（《重订古文释义新编》卷七）</p>
<p>​
可见无论什么文体、何种风格，写作时总要先把思想感情的脉络和文章结构理清楚，然后才谈得到欣赏，所谓“故情者文之经，辞者理之纬。经正而后纬成，理定而后辞畅。此立文之本源也”（《文心雕龙·情采》）。从具体的句法来看，全文常以四句为一小节，小节与小节之间或有承上启下之意，或两两相对，互相呼应，既有一气呵成之势，又有回环往复之姿。首尾贯通，浑然天成。</p>
<p>​
“辞”的部分在写作上还有一个突出特点就是主要以画面的描绘和组接来传达感情，较少直接抒情，这就使文章更加耐人寻味。诚如张中行先生所说：</p>
<p>​
这些活动和景物构成一幅画面，我们可以从中体会到，生活在画面中的人物是远离世俗的，是安乐闲适的。这样，作者创造的意境就更加透彻地阐明了自己的生活理想，更加深入地感染了读者。（《古文选读》）</p>
<p>​
同时值得注意的是，这些画面中有些是具有象征性、暗示性的，除了前面提到的“松菊犹存”“有酒盈樽”“云无心以出岫，鸟倦飞而知还”等，其实“既窈窕以寻壑，亦崎岖而经丘”这样的句子，又何尝不是作者人生历程的象征？带有象征性的动作和画面，在表现思想感情方面更具有深度和余韵。还有一些画面融入了典故，比如“悟已往之不谏，知来者之可追”（楚狂接舆）、“三径就荒”（蒋诩隐居）、“审容膝之易安”（《韩诗外传》载北郭先生辞楚王之聘）、“或植杖而耘籽”（荷蓧丈人）等。这些典故都与世外高人、隐居高士、远离尘嚣、不接世务相关，很好地传达了作品的主题。</p>
<p>​
本文在语言上也很有特点，匠心独运而不见斧凿之痕，语言流畅清新，音节铿锵，自然成韵。多双声词、叠韵词，骈句和散句的结合非常自然。文中所用词语并不华丽，却能贴切传神地表达作者的思想感情，营造诗一般的意境，“其妙处乃在无一语非真境，而语却无一字不琢炼”（孙月峰评、闵齐华注《文选》卷十三）。刘勰说：“必使理圆事密，联壁其章。迭用奇偶，节以杂佩，乃其贵耳。”（《文心雕龙·丽辞》）本文就具备这样的特点。</p>
<p>​
《兰亭集序》和《归去来兮辞并序》都体现了在“人的觉醒”和“山水的发现”的魏晋时代文士对生命和自然的思考。王羲之和陶渊明都在人生苦短、终必有尽的现实面前有着心灵的悸动和思想的波澜，都在自然中感受到生命的气息和衷心的欢愉。</p>
<p>​
从人生经历和个人思想来看，他们也有相似之处，他们都曾关注现实，都曾受到儒家思想的深刻影响。王羲之对天下大势、军务民政的认识，陶渊明说自己少时“猛志逸四海”（《杂诗八首》其五），想要“抚剑独行游”（《拟古九首》其八），都体现了这一点。但他们也从少年时就深受老庄崇尚自然的思想影响，王羲之一见会稽山水就想永居那里，陶渊明则“少无适俗韵，性本爱丘山”（《归园田居五首》其一）。也许并非巧合的是，他们都经历了从“出仕”到“辞官”的过程，最后都在自然田园中“归尽”。</p>
<p>​
但是王羲之和陶渊明毕竟是不同的人，这两篇文章也有着许多不同之处。</p>
<p>​
就作为人生关键的“辞官”而言，王羲之主要是因为宦途上的人事矛盾，甚至有“羲之耻为之（王述）下，遣使诣朝廷，求分会稽为越州”（《晋书·王羲之传》）之事，被动性较强；陶渊明共三次辞官，前两次的原因分别是“不堪吏职”（萧统《陶渊明传》）和“商歌非吾事，依依在耦耕”（《辛丑岁七月赴假还江陵夜行涂口》），都是主动辞官，根本原因都在于天性与官场生活相违。可见两人虽都有超尘之想，但超脱程度毕竟有所不同。</p>
<p>​
就对生死的思考而言，王羲之感叹欢乐的易逝、人生的短暂，对此感到痛苦，想要超越生死而又认识到把生死、寿天等同起来是一种虚妄。在《兰亭集序》之中，他希望以诗文与后人心灵沟通；在《兰亭集序》之外，他服食养性，云游采药，希望将生命延长。陶渊明则不然，对他来说，尽管“寓形宇内复几时”，但重要的是怎样选择和利用好这短暂的人生。至于死亡，只是“乘化以归尽”，“死去何所道，托体同山阿”（《拟挽歌辞》），他把生命与自然融为一体，因此也就没有了要汲汲于突破生死的焦虑，减少了对死亡的沉痛之感。他平静随化，因而也就自然乐天。对陶渊明来说，重要的是扑进自然、田园、本性的怀抱，而不是突破自然为生命设置的界限。</p>
<p>​
由此就带来这两篇文章中自然观的差异。参加雅集的人在崇山峻岭、茂林修竹间游目骋怀，感到愉悦，在这里，自然是人的审美对象，虽然能带来欢乐，但欢乐很快也会逝去。陶渊明则将自然作为自己精神的家园，把自己的生命与自然融为一体。对他来说，自然令他愉悦，但这种愉悦已经超越了一般意义上的审美愉悦，而是一种在自然中反观自我，荡涤心胸，感受到“与天地参”的生命的微笑。理解了这些，我们也许就会更加认同刘熙载对陶渊明诗文的评价：“陶渊明为文不多，且若未尝经意，然其文不可以学而能。非文之难，有其胸次为难也。”（《艺概·文概》）</p>
<h2 id="参考资料">参考资料</h2>
<h3 id="参考译文">参考译文</h3>
<div class="classcial-chinese-literature-and-poetry-translation"><div class="paragraph"><p class="original-text">余家贫，耕植不足以自给。</p><p class="translation">我家境贫困，仅靠耕田植桑不能供给自己生活。</p><p class="original-text">幼稚盈室，瓶无储粟，生生所资，未见其术。</p><p class="translation">（家中）孩子甚多，粮缸里常常没有余粮，（又）没有什么维持生计的本领。</p><p class="original-text">亲故多劝余为长吏，脱然有怀，求之靡途。</p><p class="translation">亲戚朋友大多劝我出去做个县丞、县尉（一类的官），我（因而）没了忧虑（却）有了（做官的）念头，想求取官职却苦于没有门路。</p><p class="original-text">会有四方之事，诸侯以惠爱为德，家叔以余贫苦，遂见用于小邑。</p><p class="translation">刚巧碰上有出使外地的职事，地方大吏以爱惜人才为美德，叔父因为我贫苦（就把我推荐了去），于是我被任命为小城的官吏。</p><p class="original-text">于时风波未静，心惮远役，</p><p class="translation">当时战乱还没有平息，（我）心里害怕到远方服役。</p><p class="original-text">彭泽去家百里，公田之利，足以为酒。故便求之。</p><p class="translation">而彭泽离家乡只有百里，官田的收获也足够酿酒之用，于是我就求做彭泽的官职。</p><p class="original-text">及少日，眷然有归欤之情。何则？</p><p class="translation">没过多久，我便思念田园，有了辞官回家的想法。为什么呢？</p><p class="original-text">质性自然，非矫厉所得。</p><p class="translation">因为我的本性天然如此，不是造作勉强所能（拘束）。</p><p class="original-text">饥冻虽切，违己交病。</p><p class="translation">挨冻受饿虽是急需解决的问题，但违背自己意志（则会导致）身心都感到痛苦。</p><p class="original-text">尝从人事，皆口腹自役。</p><p class="translation">我曾经出仕，都是为了谋生糊口而役使自己。</p><p class="original-text">于是怅然慷慨，深愧平生之志。</p><p class="translation">于是怅然感叹，觉得这实在有愧于平生的志愿。</p><p class="original-text">犹望一<ruby><rb>稔</rb><rt>rěn</rt></ruby>，当敛裳宵逝。</p><p class="translation">只想着等到秋收以后，就收拾行装连夜回去。</p><p class="original-text">寻程氏妹丧于武昌，情在骏奔，自免去职。</p><p class="translation">不久，嫁人程家的妹妹在武昌去世，我去吊丧的心情非常急迫，就自己弃官离职了。</p><p class="original-text">仲秋至冬，在官八十余日。</p><p class="translation">从八月到冬天，只做了八十多天的官。</p><p class="original-text">因事顺心，命篇曰《归去来兮》。乙巳岁十一月也。</p><p class="translation">因辞官之事顺遂心意，写了这篇名为《归去来兮》的文章。乙已年十一月。</p></div><div class="paragraph"><p class="original-text">归去来兮，田园将芜胡不归？既自以心为形役，奚惆怅而独悲？</p><p class="translation">归去吧，田园快要荒芜了，为什么还不回去呢？既然自己使精神受到形体的役使，为什么（还要如此）惆帐而独自伤悲？</p><p class="original-text">悟已往之不谏，知来者之可追。</p><p class="translation">我明白过往的（错误）已经不可挽回，知道未来的事还来得及补救。</p><p class="original-text">实迷途其未远，觉今是而昨非。</p><p class="translation">我确实迷了路，或许走得还不太远，（如今）觉悟到今日（归田）为是、以往（出仕）为非。</p><p class="original-text">舟遥遥以轻<ruby><rb>飏</rb><rt>yáng</rt></ruby>，风飘飘而吹衣。问征夫以前路，恨晨光之熹微。</p><p class="translation">船在水面上轻轻地摇荡着前进，微风飘飘地吹动着我的衣襟。向行人打听前面的路程，（不由得）怨恨晨光微弱依稀。</p></div><div class="paragraph"><p class="original-text">乃瞻衡宇，载欣载奔。僮仆欢迎，稚子候门。</p><p class="translation">于是看见了自家简陋的房屋，（我）满心欢喜地向前飞奔。仆人高兴地迎接，孩子们都等在家门。</p><p class="original-text">三径就荒，松菊犹存。携幼入室，有酒盈樽。</p><p class="translation">院中的小路已经荒芜废弃，松树和菊花却幸而犹存。带着孩子们进入屋里，美酒已经盛满了酒樽。</p><p class="original-text">引壶觞以自酌，<ruby><rb>眄</rb><rt>miàn</rt></ruby>庭柯以怡颜。倚南窗以寄傲，审容膝之易安。</p><p class="translation">我举壶端杯自斟自饮，看着院子里的树木展开笑颜。倚着南窗寄托自己傲岸的情怀，深知住在陋室中反而容易使人心安。</p><p class="original-text">园日涉以成趣，门虽设而常关。策扶老以流憩，时矫首而遐观。</p><p class="translation">每天在园中游赏自成佳趣，家门虽设却常关。拉着拐杖出去走走歇歇，常常抬头向远方观览。</p><p class="original-text">云无心以出<ruby><rb>岫</rb><rt>xiù</rt></ruby>，鸟倦飞而知还。景<ruby><rb>翳</rb><rt>yì</rt></ruby>翳以将入，抚孤松而盘桓。</p><p class="translation">云气自然而然地冒出山头，鸟儿飞倦了也知道归还。日光暗淡，太阳即将落山，我仍抚着那孤松流连盘桓。</p></div><div class="paragraph"><p class="original-text">归去来兮，请息交以绝游。世与我而相违，复驾言兮焉求？</p><p class="translation">归去吧，让我断绝那世俗的交游。（既然）这尘世和我的情志彼此违背，还要驾车出去把什么追求？</p><p class="original-text">悦亲戚之情话，乐琴书以消忧。农人告余以春及，将有事于西畴。</p><p class="translation">喜爱亲人间的知心话，乐于弹琴读书来消愁解忧。农人们告诉我春日已至，将要到西边的田里去耕作奔走。</p><p class="original-text">或命巾车，或棹孤舟。既窈窕以寻壑，亦崎岖而经丘。</p><p class="translation">（我）有时坐着覆帷小车，有时划着一叶孤舟。有时探寻曲折幽深的沟壑，有时也经过道路崎呕的山丘。</p><p class="original-text">木欣欣以向荣，泉涓涓而始流。善万物之得时，感吾生之行休。</p><p class="translation">树木欣欣向荣地生长，泉水涓涓开始涌流。（我）羡慕万物恰逢时令，生机勃勃，感叹自己的一生行将终休。</p></div><div class="paragraph"><p class="original-text">已矣乎！寓形宇内复几时？<ruby><rb>曷</rb><rt>hé</rt></ruby>不委心任去留？胡为乎遑遑欲何之？</p><p class="translation">算了吧！人寄身于天地间能有多长时间？为什么不随心所愿，生与死都顺随自然？为什么心神惶惶不安，到底想要到哪里流连？</p><p class="original-text">富贵非吾愿，帝乡不可期。怀良辰以孤往，或植杖而耘耔。</p><p class="translation">富贵不是我的心愿，仙境也无法期求。爱惜那良辰美景（我）独自去游赏，有时倚着棍杖除草培苗。</p><p class="original-text">登东皋以舒啸，临清流而赋诗。聊乘化以归尽，乐夫天命复奚疑！</p><p class="translation">（我）登上向阳的高地放声长啸，面对清激的溪流吟咏作诗。姑且顺随自然的变化走到生命的尽头，乐天安命还有什么可以怀疑？</p></div></div>]]></content>
      <categories>
        <category>High School</category>
        <category>Chinese</category>
        <category>Classical Chinese Literature and Poetry</category>
      </categories>
      <tags>
        <tag>School Notes</tag>
        <tag>High School</tag>
        <tag>Chinese</tag>
      </tags>
  </entry>
  <entry>
    <title>种树郭橐驼传-柳宗元</title>
    <url>/2022/03/25/chinese/High%20School/Classical%20Chinese%20Literature%20and%20Poetry/%E9%80%89%E6%8B%A9%E6%80%A7%E5%BF%85%E4%BF%AE/%E7%A7%8D%E6%A0%91%E9%83%AD%E6%A9%90%E9%A9%BC%E4%BC%A0-%E6%9F%B3%E5%AE%97%E5%85%83/</url>
    <content><![CDATA[<h2 id="课文解读">课文解读</h2>
<p>​
本文题名为“传”，兼有寓言性质，是柳宗元针对当时官吏繁政扰民的现象发而为言的。中唐时期，豪强地主兼并掠夺土地日益严重，“富者兼地数万亩，贫者无容足之居”（陆贽《均节赋税恤百姓》）。仅有一点土地的农民，除了交纳正常的绢粟外，还要承受地方军政长官摊派下来的各种杂税。据《旧唐书·食货志》载，各地官僚为巩固自己的地位，竞相向朝廷进奉，加紧对下层的盘剥，于是“通津达道者税之，莳蔬艺果者税之，死亡者税之”，民不聊生。这就是柳宗元写作本文的社会背景。柳宗元通过对郭橐驼种树之道的记述，说明“顺木之天，以致其性”是“养树”的法则，只有“顺天”才是循其根本之道，并由“顺木之天”推论出“顺人之天”，也就是“养人”的道理，指出为官治民不能“好烦其令”，指摘中唐吏治的扰民、伤民，规讽为政者，主张让百姓休养生息，反映出作者同情人民的思想和改革弊政的愿望。</p>
<p>​
文章第1、2段是第一部分，介绍人物姓名、外貌、住所、技能。人们对于郭橐驼，不能知其原名，可见他是位身份低微的小人物。“驼”是驼背，让我们联想起因劳累而驼背的农民。“橐驼”本来有轻视嘲谑的意味，而主人公并不反感，反倒认为“甚善”，用以自称。欣然接受丑陋之名而不自卑自怜，显然是一位性情谐趣，不把无谓之事放在心上的人。正因为如此，他才能不背任何包袱，凭借自己的绝技，一能让树木不怕移植，二能让树木枝繁叶茂、早熟多果，让同行羡慕仿效。</p>
<p>​
文章第3段是第二部分，写郭橐驼种树与他人种树的不同之处。“能顺木之天，以致其性焉尔”是总括种树经验，也暗含了全文的寓意。让根舒展、把土培平、多带旧土、踩紧踩实，这是从理论上说明“顺木之天”；完成了就不再去动它，离开了就不再去看它，这是从实践上总结种植方法。然后插入议论，重新强调了顺其自然的观点。接着，又从反面，批评“他植者”违反树木天性的做法，特别指出顾虑重重、过于用心的危害。最后，以“吾又何能为哉”发为感叹，在自谦中再次表明“种植之术”并不高深。这些贴近生活实际的描写能让我们从中得到启发。</p>
<p>​
文章第4、5段是第三部分，把话题从种树转移到政事上来。郭橐驼对于“以子之道，移官之理，可乎？”的回答，仍谦逊如故，明确表示“理，非吾业也”，然后以“外行”的身份试探着用他的种树理论衡量官吏的所作所为，比照之下，自然得出繁政扰民犹如勤虑害树的结论，从而将旦暮而来的官吏打入“他植者”的行列。“官命促尔耕，勖尔植，督尔获，早缫而绪，早织而缕，字而幼孩，遂而鸡豚。”一连串短促的排比句，把官吏神气活现的样子描写得细致入微。这些扰民官吏的行为，与不善植树者的“虽日爱之，其实害之；虽曰忧之，其实仇之”在本质上是一致的。这也就形象地说明了无论种树或治民都要顺应天性的道理。在郭橐驼回答完毕后，作者以问者之口表达出“问养树，得养人术”的欣喜。“传其事以为官戒”，表明了作传的真正意图是警示上层统治者为政宜简，要顺应百姓的生活习惯和生产规律，让他们休养生息。</p>
<p>​
文章融叙事说理于一体，婉而多讽。以寓言的方式进行讽谏，是中国古代文人向帝王或上层统治者提意见的传统做法，它有着委婉含蓄的特点，也间杂着幽默的成分。柳宗元这篇文章，也是通过故事进行劝诫的。这种风格基本上是通过所传人物的话语表现出来的，如第4段，一个“知种树而已”的驼者，欲止又言，在朴实的简单类比中，揭示出了吏治的弊端，颇具讽刺意味。其中的一些话语，如“理，非吾业也”“若甚怜焉，而卒以祸”“若是，则与吾业者其亦有类乎”，婉转而幽默，含不尽之意于言外。</p>
<p>​
顾炎武在《日知录》中说本文是“稗官之属”，把它当作小说来看。鲁迅在《中国小说史略》中则更进一步说它是“幻设为文”“以寓言为本”。寓言一般以简短的结构、鲜明的形象、夸张与想象的艺术手法，阐明某种道理或讽刺某种社会现象。传记是记述人物生平事迹的文体，我国古代的传记一般可分为历史传记（也称“史传”）和文学传记（也称“史外传”）。本文借郭橐驼之口讽喻时弊，从内容上看是一篇寓言；这篇寓言在写作时借鉴了一些人物传记的写法，因此本文从内容上看是一篇寓言，从形式上看是一篇人物传记。柳宗元以写奇人奇事来讽喻时事的“传”还有《童区寄传》《宋清传》《梓人传》，同类的寓言体散文还有《三戒》（包括《临江之麋》《黔之驴》《永某氏之鼠》三篇）、《蝜（虫负）蝂传》等。这些寓言体散文继承并发扬了《庄子》《列子》《韩非子》《吕氏春秋》的传统，善于运用各种人物或者动物拟人化形象来寄寓哲理，针砭时弊。</p>
<p>​
对比和类比的说理方式也是这种寓言风格的需要。本文中的对比，有叙事性也有论述性的。叙事性的对比，有郭橐驼和“乡人”之间的对比，乡人用橐驼的身体缺陷开玩笑，给他取外号，而他自己却说“名我固当”，表现郭橐驼的乐观豁达；有郭橐驼和“他植者”的对比，尽管别人暗中效仿，但也种不出橐驼那样的树，说明橐驼的技艺高明；有两种种树方法的对比，一种“顺性”，一种“动摇根本”，突出“顺性”的重要性。有论述性的对比，即郭橐驼对自己种树方法的归纳和对“他植者”的批评；有通过问者之口所表现的“爱民”与“扰民”的差别，以此表明文章中心。本文先谈“养树”，后论“养人”，这本身是运用了类比的写法。这样写，有关树和人的话题合而为一，互相补充，增强了文章的气势。</p>
<p>​
柳宗元本人做地方官时，也践行着本文所提倡的“爱民”。韩愈《柳子厚慕志铭》载，柳宗元任柳州刺史时，“因其土俗，为设教禁，州人顺赖。其俗以男女质钱，约不时赎，子本相侔，则没为奴婢。子厚与设方计，悉令赎归。其尤贫力不能者，令书其佣，足相当，则使归其质。观察使下其法于他州，比一岁，免而归者且千人。”</p>
<p>​
值得注意的是，本文在讲郭橐驼种树心得的时候，提到“顺木之天，以致其性”“勿动勿虑，去不复顾”，而其他种树者关心得太多，什么都放不下，结果适得其反。这一观点看似与老庄学派的“道法自然”一脉相承，但柳宗元并不是主张“无为”，本文其实体现的是柳宗元在中唐儒道合流背景之下的儒家积极的济世思想。</p>
<p>​
《孟子》云：“天下之言性也，则故而已矣。故者以利为本。所恶于智者，为其凿也。如智者若禹之行水也，则无恶于智矣。禹之行水也，行其所无事也。如智者亦行其所无事，则智亦大矣。”（《离娄下》）杨伯峻先生将其译为“天下的讨论人性，只要能推求其所以然便行了。推求其所以然，基础在于顺其自然之理。我们厌恶使用聪明，就是因为聪明容易陷于穿凿附会。假若聪明人像禹的使水运行一样，就不必对聪明有所厌恶了。禹的使水运行，就是行其所无事，（顺其自然，因势利导。）假设聪明人也能行其所无事，（不违反其所以然而努力实行，）那聪明也就不小了。”本文“顺木之天”的“天”指的是自然规律，“顺”是对这一规律的尊重。但这种尊重并不是目的，而是一种方法，“致其性”（即使其按照本性充分发展）才是最终目的。再结合第4段对官吏扰民的批评，文章结尾“以为官戒”，说明本文是针对当时繁政扰民有感而发的，旨在告诫统治者要按照规律治理百姓，让百姓休养生息，目的还是在于“经世济民”，为国献策，并不是老庄意义上的“法自然”。</p>
<h2 id="参考资料">参考资料</h2>
<h3 id="参考译文">参考译文</h3>
<div class="classcial-chinese-literature-and-poetry-translation"><div class="paragraph"><p class="original-text">郭橐驼，不知始何名。</p><p class="translation">郭橐驼，不知道他起初叫什么名字。</p><p class="original-text">病偻，隆然伏行，有类橐驼者，故乡人号之“驼”。</p><p class="translation">（他）患了脊背弯曲的病，脊背高起而弯着腰走，就像骆驼一样，所以乡里人给他起外号叫“橐驼”。</p><p class="original-text">驼闻之曰：“甚善。名我固当。”</p><p class="translation">橐驼听说后，说：“这个名字很好啊。用这个名字称呼我确实很恰当。”</p><p class="original-text">因舍其名，亦自谓“橐驼”云。</p><p class="translation">于是他舍弃了他原来的名字，也自称起“橐驼”来。</p></div><div class="paragraph"><p class="original-text">其乡曰丰乐乡，在长安西。</p><p class="translation">他的家乡叫丰乐乡，在长安城西边。</p><p class="original-text">驼业种树，凡长安豪富人为观游及卖果者，皆争迎取养。</p><p class="translation">郭橐驼以种树为业，凡是长安城里经营观赏游览和做种树卖果买卖的豪富人，都争着迎接和雇用他。</p><p class="original-text">视驼所种树，或移徙，无不活；且硕茂，早实以蕃。</p><p class="translation">看橐驼种的树，或者移植来的，没有不成活的；而且（树长得）高大茂盛，结果实早且多。</p><p class="original-text">他植者虽窥伺效慕，莫能如也。</p><p class="translation">其他种树的人虽然暗中观察仿效，也没有能像（橐驼的树）那样的。</p></div><div class="paragraph"><p class="original-text">有问之，对曰：</p><p class="translation">有人问他种树种得好的原因，他回答说：</p><p class="original-text">“橐驼非能使木寿且孳也，能顺木之天以致其性焉尔。</p><p class="translation">“我郭橐驼不是能够使树木活得长久而且生长茂盛啊，只不过能够顺应树木的天性，来使它依照本性生长罢了。</p><p class="original-text">凡植木之性，其本欲舒，其培欲平，其土欲故，其筑欲密。</p><p class="translation">但凡种树的方法，树根要舒展，培土要平均，根下的土要用原来培育树苗的土，捣土要结实。</p><p class="original-text">既然已，勿动勿虑，去不复顾。</p><p class="translation">已经这样完成了，就不要再动，不要再惦记它，离开后就不再去照看它。</p><p class="original-text">其<ruby><rb>莳</rb><rt>shì</rt></ruby>也若子，其置也若弃，则其天者全而其性得矣。</p><p class="translation">栽种时要像对待孩子那样（细心呵护），栽好后要像丢弃它一样（放在一边），那么树木的天性就得以保全，它的习性就得以实现。</p><p class="original-text">故吾不害其长而已，非有能硕茂之也；</p><p class="translation">所以我只不过不妨碍它的生长罢了，并不是有能使它长得高大茂盛的办法；</p><p class="original-text">不抑耗其实而已，非有能早而蕃之也。</p><p class="translation">只不过不损伤它的果实罢了，并不是有能使它果实结得早又多的办法。</p><p class="original-text">他植者则不然，根拳而土易，其培之也，若不过焉则不及。</p><p class="translation">别的种树人却不是这样。树根拳曲又换了新土，他培土的时候，不是过紧就是太松。</p><p class="original-text">苟有能反是者，则又爱之太恩，忧之太勤。</p><p class="translation">如果有能够和这种做法相反的人，就是又养护太过，担心它太过分了。</p><p class="original-text">旦视而暮抚，已去而复顾。</p><p class="translation">早晨去看了，晚上又去摸摸；已经离开了，又回头去看看。</p><p class="original-text">甚者，爪其肤以验其生枯，摇其本以观其疏密，而木之性日以离矣。</p><p class="translation">更严重的，用指甲划破树皮来察看它是活着还是枯死了，动摇树根看土捣得实不实，这样就一天天背离了树木的天性了。</p><p class="original-text">虽曰爱之，其实害之；虽曰忧之，其实仇之；</p><p class="translation">虽然说是喜爱它，这实际上是害了它；虽然说是担心它，这实际上是仇视它；</p><p class="original-text">故不我若也。吾又何能为哉？”</p><p class="translation">所以他们（种树）都不如我。我又能做什么呢？”</p></div><div class="paragraph"><p class="original-text">问者曰：“以子之道，移之官理，可乎？”</p><p class="translation">问的人说：“把你种树的方法，移用到做官治民上，可行吗？”</p><p class="original-text">驼曰：“我知种树而已，理，非吾业也。</p><p class="translation">橐驼说：“我只知道种树罢了，做官治民，不是我的职业。</p><p class="original-text">然吾居乡，见<ruby><rb>长</rb><rt>zhǎng</rt></ruby>人者好烦其令，若甚怜焉，而卒以祸。</p><p class="translation">但是我住在乡里，看见那些做官的人喜好多发政令，好像是很爱（百姓），但到头来给他们造成了灾难。</p><p class="original-text">旦暮吏来而呼曰：‘官命促尔耕，<ruby><rb>勖</rb><rt>xù</rt></ruby>尔植，督尔获，</p><p class="translation">早晚那些小吏（都）跑来大喊：＇长官命令：催促你们耕地，勉励你们种植，督促你们收获，</p><p class="original-text">早<ruby><rb>缫</rb><rt>sāo</rt></ruby>而绪，早织而缕，字而幼孩，遂而鸡豚。’</p><p class="translation">早早地煮茧抽丝，早早地织你们的布，养育你们的小孩，喂养好你们的鸡和猪。”</p><p class="original-text">鸣鼓而聚之，击木而召之。</p><p class="translation">一会儿打鼓聚拢乡民，一会儿敲梆子召集大家。</p><p class="original-text">吾小人辍<ruby><rb>飧</rb><rt>sūn</rt></ruby><ruby><rb>饔</rb><rt>yōng</rt></ruby>以劳吏者，且不得暇，又何以蕃吾生而安吾性耶？</p><p class="translation">我们小民停止吃饭来慰劳官吏尚且不得空暇，又怎能使我们人口增多、生活安定呢？</p><p class="original-text">故病且怠。若是，则与吾业者其亦有类乎？”</p><p class="translation">所以我们困苦并且疲倦。像这样（治民反而扰民）的官，与干我这一行的人大概也有相似的地方吧？”</p></div><div class="paragraph"><p class="original-text">问者曰：“嘻，不亦善夫！吾问养树，得养人术。”传其事以为官戒。</p><p class="translation">问的人说：“啊，不也是很好吗！我问种树的方法，得到了治民的方法。”（于是）记载这件事（把它）作为官吏们的鉴戒。</p></div></div>]]></content>
      <categories>
        <category>High School</category>
        <category>Chinese</category>
        <category>Classical Chinese Literature and Poetry</category>
      </categories>
      <tags>
        <tag>School Notes</tag>
        <tag>High School</tag>
        <tag>Chinese</tag>
      </tags>
  </entry>
  <entry>
    <title>石钟山记-苏轼</title>
    <url>/2022/03/25/chinese/High%20School/Classical%20Chinese%20Literature%20and%20Poetry/%E9%80%89%E6%8B%A9%E6%80%A7%E5%BF%85%E4%BF%AE/%E7%9F%B3%E9%92%9F%E5%B1%B1%E8%AE%B0-%E8%8B%8F%E8%BD%BC/</url>
    <content><![CDATA[<h2 id="课文解读">课文解读</h2>
<p>​
《石钟山记》是一篇带有说理性质的游记。山水游记散文，始于魏晋，所谓“庄老告退，而山水方滋”（《文心雕龙·明诗》）。到了唐代，经元结、柳宗元等人的创作实践，山水游记得到了极大的发展。宋代说理之风大盛，以记游为议论，在叙述中说明事理，形成了山水游记散文新的风格。宋神宗元丰七年（1084）六月，苏轼由黄州团练副使调任汝州（今属河南）团练副使时，顺便送他的长子苏迈到饶州德兴（今属江西）任县尉，途经湖口县，游览了石钟山，写了这篇文章。文章通过记叙作者探究石钟山得名由来的经过，说明要想认识事物的真相必须“目见耳闻”，切忌主观臆断。</p>
<p>​
第1段交代了文献记载中石钟山得名由来的两种说法，以及对这两种说法的怀疑。文章首先引用《水经》的记载，交代了石钟山的位置在鄱阳湖口。然后提出郦道元对此山得名由来的说法，和人们对“水石相搏”这一说法的质疑。钟磬放到水中，即使有大风浪也不能鸣响，更何况石头呢？由此通过郦道元的说法引出其后唐代李渤的说法。李渤亲自到石钟山，扣打双石，聆听其声，以此成说。而作者认为处处皆有石，有石皆可扣而发声，因此李渤之说也站不住脚。正是对郦说的“人常疑之”和对李说的“余尤疑之”，引出后文作者探访石钟山的经历。</p>
<p>​
第2段记叙了作者实地考察石钟山，得以探明其名由来的经过。“元丰七年……因得观所谓石钟者”，点明探访石钟山的时间、同行者和缘由。此部分承接上文，正因为第1段中作者对石钟山的得名存疑已久，才有本次的实地考察。当地的僧人让小童拿着斧头扣石发声，说明僧人相信李渤的说法，侧面反映李说有一定的影响力。“余固笑而不信也”表明了作者的态度，照应第1段的“余尤疑之”，于是才有了下面月夜考察的行动。作者探访石钟山的时间是“暮夜月明”时分，同游者是长子苏迈，方式是“乘小舟”，地点是“绝壁下”。在绝壁下是一幅阴森恐怖、冷清凄厉的景象：看见的是“侧立千尺，如猛兽奇鬼，森然欲搏人”的大石；听到的是“云霄间”鹊鸟的“磔磔”的惊叫声，以及“山谷中”鹤鹤像老人边咳边笑的怪叫声。这部分描写堪称“绘声”文字中的上品，有远有近，有高有低，有动有静，有形有声，让人有身临其境之感。这种对绝壁下环境的着力渲染，烘托出作者亲往探访的不易，为下文批评“士大夫终不肯以小舟夜泊绝壁之下”伏笔。就在作者“心动欲还”的时候，水上传来钟鼓一般的响声，让船夫非常惊恐。作者仔细查看，发现是山下的石洞和裂缝因水波激荡而发出声音。到“舟回至两山间”时，看到入港处有大石当中流，其空窍与风声相吞吐，发出窾坎镗鞳的声音。作者对两处声音的考察，极为细致深人，处处印证了首段的郦说：“微波入焉”和“与风水相吞吐”，分别照应“微风鼓浪”；“山下皆石穴罅…涵澹澎湃而为此也”和“大石当中流……空中而多窍”，分别照应“水石相激”；“噌吰如钟鼓不绝”和“窾坎镗鞳之声”，分别照应“声如洪钟”。这就不仅证实了郦说，而且以详补简，为末段叹郦说之“简”作好铺垫。在疑惑消解后，作者欣然而笑，将两种声音与“周景王之无射”和“魏庄子之歌钟”相联系，肯定自己的考察结果，又以“古之人不余欺也”肯定了郦道元的说法。</p>
<p>​
第3段写探明石钟山得名由来的感想，表明写作意图。“事不目见耳闻，而臆断其有无，可乎？”点明文章主旨。然后从两方面分析世人不能准确知道石钟山得名由来的原因。首先说正确说法不能流传的原因，有三点：一是“郦元之所见闻，殆与余同，而言之不详”，认为郦道元的说法正确，只是说得太过简略，导致“人常疑之”；二是士大夫不肯亲身实践，不做实地考察，所以不能知道真相；三是渔工水师虽然知道却不能写成文章记录下来。郦说不详，士大夫能为文却“莫能知”，“渔工水师”虽知而不能为文，这就是石钟山得名由来在世上没有流传下来的原因。而另一方面，“陋者乃以斧斤考击而求之，白以为得其实”，是说李渤之类的“陋者”，主观臆断，自以为发现了真相，这是李渤产生错误观点和后人以讹传讹的原因。文章最后点明写这篇游记的目的，即记录自己的见解，证实、补充郦道元的观点，纠正李渤的观点。</p>
<p>​
文章行文潇洒随性而自有法度，姚鼐《古文辞类纂》卷五十六引方苞语云：“潇洒自得，子瞻诸记中特出者。”刘大櫆则说：“以心动欲还，跌出大声发于水上，才有波折，而兴会更觉淋漓。钟声二处，必取古钟二事以实之，具此诙谐，文章妙趣洋溢行间。坡公第一首记文。”（王文濡《评校音注古文辞类纂》卷五十引）这些说法都是很有道理的。</p>
<p>​
苏轼写成此文后，明代罗洪先也写了一篇《石钟山记》：“丙午春余过湖口，临渊上下两山，皆若钟形……东坡舣涯，未目其麓，故犹有遗论”，认为苏轼的考察有局限性，没有看到山脚下。罗洪先考察时为早春，春汛尚未开始，而苏轼考察时鄱阳湖已入汛期，他只看到了石钟山的上半部分。清人彭玉麟《石钟洞叙》认为：“盖全山内空，如钟覆地，而上钟山，亦中多空洞。且山势上锐下宽，似宜以形论，不以声论。苏子……乃过其门未入其室也。”曾国藩实地考察后认为：“石钟山者，山中空，形如钟，东坡叹李渤之陋，不知坡亦陋也！”这些人都认为石钟山是因形得名。但不论《水经注》、李渤还是苏轼，都记载石钟山是有声音如钟声的，且石钟山也并不完全似钟形，故罗、彭、曾等仅认为其“以形得名”亦不全面。今人通过考察，渐以石钟山之得名是因其“形声兼备”。此问题不妨引导学生进行研习讨论。</p>
<h2 id="参考资料">参考资料</h2>
<h3 id="参考译文">参考译文</h3>
<div class="classcial-chinese-literature-and-poetry-translation"><div class="paragraph"><p class="original-text">《水经》云：“彭蠡之口有石钟山焉。”</p><p class="translation">《水经》说：“鄱阳湖的湖口有一座石钟山。”</p><p class="original-text">郦元以为下临深潭，微风鼓浪，水石相搏，声如洪钟。</p><p class="translation">郦道元认为（石钟山）下面靠近深潭，微风掀动波浪，水和石头互相拍打，发出的声音好像大钟一般。</p><p class="original-text">是说也，人常疑之。</p><p class="translation">这个说法，人们常常怀疑它。</p><p class="original-text">今以钟磬置水中，虽大风浪不能鸣也，而况石乎！</p><p class="translation">现在如果把钟磬放在水中，即使大风大浪也不能使它发出声响，何况是石头呢！</p><p class="original-text">至唐李渤始访其遗踪，得双石于潭上，</p><p class="translation">到了唐代，李渤才访求石钟山之所在，在深潭边发现两块山石，</p><p class="original-text">扣而聆之，南声函胡，北音清越，桴止响腾，余韵徐歇。</p><p class="translation">敲击聆听它们（发出）的声音，南边那块山石的声音重浊模糊，北边那块山石的声音清脆悠扬，鼓槌停止了（敲击），声音还在传播，余音慢慢消失。</p><p class="original-text">自以为得之矣。然是说也，余尤疑之。</p><p class="translation">（李渤）自己认为找到了（石钟山命名的）原因。但是这个说法，我更加怀疑。</p><p class="original-text">石之铿然有声者，所在皆是也，而此独以钟名，何哉？</p><p class="translation">敲击后能发出声响的石头，到处都这样，可唯独这座山用钟来命名，这是为什么呢？</p></div><div class="paragraph"><p class="original-text">元丰七年六月丁丑，余自齐安舟行适临汝，</p><p class="translation">元丰七年六月丁丑日（初九），我从齐安坐船到临汝去，</p><p class="original-text">而长子迈将赴饶之德兴尉，送之至湖口，因得观所谓石钟者。</p><p class="translation">大儿子苏迈将要去就任饶州德兴县的县尉，我送他到湖口，因此能够看所谓的石钟山。</p><p class="original-text">寺僧使小童持斧，于乱石间择其一二扣之，<ruby><rb>硿</rb><rt>kōng</rt></ruby>硿焉。</p><p class="translation">庙里的僧人让小童拿着斧头，在乱石中间选一两块敲打，硿硿地发出声响。</p><p class="original-text">余固笑而不信也。至莫夜月明，独与迈乘小舟，至绝壁下。</p><p class="translation">我本来就觉得很好笑，并不相信。到了夜晚，月光明亮，我独自和苏迈坐着小船到绝壁下面。</p><p class="original-text">大石侧立千尺，如猛兽奇鬼，森然欲搏人；</p><p class="translation">巨大的山石在旁边耸立着，高达千尺，好像凶猛的野兽和奇异的鬼怪，阴森森地要向人扑过来；</p><p class="original-text">而山上栖鹘，闻人声亦惊起，<ruby><rb>磔</rb><rt>zhé</rt></ruby>磔云霄间；</p><p class="translation">山上宿巢的隼听到人声也受惊飞起来，在云霄中磔磔地鸣叫；</p><p class="original-text">又有若老人咳且笑于山谷中者，或曰此鹳鹤也。</p><p class="translation">又有像老人在山谷中边咳边笑的声音，有人说这是鹳鹤。</p><p class="original-text">余方心动欲还，而大声发于水上，<ruby><rb>噌</rb><rt>chēng</rt></ruby><ruby><rb>吰</rb><rt>hóng</rt></ruby>如钟鼓不绝。</p><p class="translation">我正内心惊恐想要回去，忽然巨大的声音从水上发出，“噌吰”地响着像钟鼓的声音连续不断。</p><p class="original-text">舟人大恐。徐而察之，则山下皆石穴<ruby><rb>罅</rb><rt>xià</rt></ruby>，</p><p class="translation">船夫非常害怕。我慢慢地观察，原来山脚下都是石头的洞穴和裂缝，</p><p class="original-text">不知其浅深，微波入焉，涵澹澎湃而为此也。</p><p class="translation">不知它们的深浅，微微的水波涌进洞穴和裂缝，波浪激荡便产生这样的声音。</p><p class="original-text">舟回至两山间，将入港口，有大石当中流，可坐百人，空中而多窍，</p><p class="translation">船调转到两山之间，将要进入港口，有块大石头挡在水流的中央，上面可坐百来个人，中间是空的而且有许多窟窿，</p><p class="original-text">与风水相吞吐，有<ruby><rb>窾</rb><rt>kuǎn</rt></ruby>坎<ruby><rb>镗</rb><rt>tāng</rt></ruby><ruby><rb>鞳</rb><rt>tà</rt></ruby>之声，与向之噌吰者相应，如乐作焉。</p><p class="translation">把风浪吞进去又吐出来，发出“窾坎镗鞳”的声音，同先前“噌吰”的声音相互应和，好像音乐演奏。</p><p class="original-text">因笑谓迈曰：“汝识之乎？噌吰者，周景王之无<ruby><rb>射</rb><rt>yì</rt></ruby>也；</p><p class="translation">我于是笑着对苏迈说：“你知道吗？那（噌吰）的响声，是周景王无射钟的声音；</p><p class="original-text">窾坎镗鞳者，魏庄子之歌钟也。古之人不余欺也！”</p><p class="translation">（窾坎镗鞳）的响声，是魏庄子歌钟的声音。古时的人没有欺骗我啊！”</p></div><div class="paragraph"><p class="original-text">事不目见耳闻，而臆断其有无，可乎？</p><p class="translation">凡事不亲眼看到亲耳听到，却凭主观想象去推断它的有无，可以吗？</p><p class="original-text">郦元之所见闻，殆与余同，而言之不详；</p><p class="translation">郦道元见到和听到的，大概和我一样，但是记载得不详细；</p><p class="original-text">士大夫终不肯以小舟夜泊绝壁之下，故莫能知；</p><p class="translation">士大夫终究不肯夜晚乘着小船停靠在悬崖绝壁下面，所以不能知道真相；</p><p class="original-text">而渔工水师虽知而不能言。此世所以不传也。</p><p class="translation">而渔夫船工虽然知道却又不能用文字记载。这就是世上没有流传（石钟山得名由来）的缘故啊。</p><p class="original-text">而陋者乃以斧斤考击而求之，自以为得其实。</p><p class="translation">而浅陋的人竟用斧头敲打（山石）的办法来探求石钟山得名的原因，自以为得到了它的真相。</p><p class="original-text">余是以记之，盖叹郦元之简，而笑李渤之陋也。</p><p class="translation">我因此记下这件事，是要叹惜郦道元记叙的简略，讥笑李渤的浅陋啊。</p></div></div>]]></content>
      <categories>
        <category>High School</category>
        <category>Chinese</category>
        <category>Classical Chinese Literature and Poetry</category>
      </categories>
      <tags>
        <tag>School Notes</tag>
        <tag>High School</tag>
        <tag>Chinese</tag>
      </tags>
  </entry>
  <entry>
    <title>陈情表-李密</title>
    <url>/2022/03/25/chinese/High%20School/Classical%20Chinese%20Literature%20and%20Poetry/%E9%80%89%E6%8B%A9%E6%80%A7%E5%BF%85%E4%BF%AE/%E9%99%88%E6%83%85%E8%A1%A8-%E6%9D%8E%E5%AF%86/</url>
    <content><![CDATA[<h2 id="课文解读">课文解读</h2>
<p>​
《陈情表》亦名《陈情事表》，出自《华阳国志·后贤传》，裴松之为《三国志·蜀书·杨戏传》作注时曾引用全文。本文自被选入《文选》以后，一直都是各类文章选本（如《古文观止》《骈体文钞》等）的常选篇目，是中国古代散文史上的经典名篇。</p>
<p>​
“表”是一种实用性文体。从汉代开始，由臣下写给君主的文章被区分为章、奏、表、议四体，“章以谢恩，奏以按劾，表以陈请（一作“情”），议以执异”（《文心雕龙·章表》），“表”的主要内容不是劝谏君主，也不是表达对国家大事的意见，而是向君主陈述请求，抒发己志。按照文章学家的说法，“表”的用处其实很多，包括了请劝、陈乞、进献、推荐、庆贺、慰安、辞解、陈谢等多种功能（徐师曾《文体明辨序说》）。在数不胜数的表文中，广为传诵者都是将事、理融于真情之中的，如孔融《荐祢衡表》、曹植《求自试表》、诸葛亮《出师表》、欧阳修《辞枢密副使表》等。其中《出师表》以“忠”著称，《陈情表》以“孝”感人，均堪称这一文体的典范之作。</p>
<p>​
作者李密出生于犍为大族，但他父亲并不出名，且很早去世，父亡后不到四年，母亲就改嫁了。李密从小依赖祖母刘氏抚养成人，故侍奉刘氏十分孝顺，《晋书·孝友传》将他列在首位。李密除了“以孝谨闻”，还很有才华，长于《左传》，所撰《述理论》曾受到当时著名学者皇甫谧的称赞。他曾任蜀汉的尚书郎、大将军主簿、太子洗马等职，因为口才出众，曾多次出使吴国，受到吴国君臣的称赞。</p>
<p>​
公元263年蜀汉灭亡，李密成为亡国遗臣。平蜀的大将邓艾闻李密之名，想用他为主簿，写信相招、约与相见，李密都不为所动。后来邓艾被杀，这事也就不了了之。公元265年，司马炎称帝，建立晋朝，是为晋武帝。武帝为加强统治、收拾人心，开始起用亡国旧臣，先任命李密为郎中，后因立司马衷（晋惠帝）为太子，又征李密为太子洗马。但是，李密对晋武帝征召一直辞不赴任，《陈情表》就是他为辞洗马之任而写的一封辞表，也是他留存至今的唯一一篇作品。</p>
<p>​
李密辞不赴任，是要顶着相当大的压力的。从他本人的身份来看，作为蜀汉旧臣，不赴征召很容易被认为是心念旧国，拒绝与征服者合作。况且，这已经不是他第一次拒绝出仕于晋廷了，辞让帝位，不过以三次为限，李密仅辞朝命即有两次，个人所受压力已接近极限。从当时的具体情势来看，李密此前“具以表闻，辞不就职”，已经引发了“诏书切峻，责臣逋慢”的情况。如果还不治装就道，后果很难预料。但李密还是撰写了《陈情表》“辞不赴命”。从某种意义上来说，本文之所以成为千古名作，就在于作者以一个“孝”字，反复阐说，顶住了上述的诸多压力，最终在强大的皇权面前守住了自己拒绝出仕的个体意志，也实现了自己在伦理道德方面的操守。</p>
<p>​
文章首段，先叙述白身遭遇的不幸和祖母疾病缠身的困境。“臣以险衅，夙遭闵凶”，落笔酸楚，奠定了文章悲凉的基调。下边分述自己的不幸：“慈父见背”“舅夺母志”是一不幸，幼年失去恃估（按：父母）确实让人同情；“少多疾病，九岁不行”是二不幸，幸亏祖母的慈爱、关怀与精心照顾，才能侥幸生存下来，他怎能不由衷感激祖母的抚养之恩呢？祖孙二人感情真挚，相依为命的境况是可以想见的。“孤弱”是三不幸，表现为“既无伯叔，终鲜兄弟”，“外无期功强近之亲，内无应门五尺之僮”，这既是祖母躬亲抚养作者的原因之一，也正是下文作者“区区不能废远”的原因，可谓一笔双关。现在祖母“夙婴疾病，常在床”，生活不能自理，进人人生晚景，作者是她唯一的感情支柱与生活依靠，他怎能置之不理？于情于理都必须照顾祖母。这些描写凄楚哀婉，恻然动人，而且情理并发，将自己的经历写得情深有致，感人肺腑，为下文“愿乞终养”做好了必要的铺垫。作者写作本文的意图是希望晋武帝允许他暂不赴任，但这一段先不揭明本意，而是以情铺垫，这当然是一种高明的写作技巧，同时也隐约透露出作者当时身受的压力。从后文看，作者始终注意营造文章的情感氛围，真正做到了寓“陈请”于“陈情”之中，最终打动了晋武帝。</p>
<p>​
第2段叙述朝廷多次征召的经过以及自已进退两难的尴尬处境。如果说第1段侧重叙述祖孙之情的话，此段则推进到君臣之义上，突出尽忠与尽孝这一矛盾，表达了自己因处境狼狈而产生的忧惧之情。首句以“逮奉圣朝”作为过渡。接着历数两次被荐举而“辞不赴任”的经过和原因：即祖母“供养无主”，与此次辞命的原因是一样的，表明情况属实，并非托词，以消除晋武帝的疑惑。接着写对朝廷征召的无限感激之情：“寻蒙国恩”“猥以微贱”“非臣陨首所能报上”，甚至“欲率诏奔驰”。“奔驰”二字形象地写出了作者欲赴任就职以报答君恩的焦急心情，切合亡国旧臣身份。这样使晋武帝相信其不欲负朝廷的器重及眷爱后，才又笔锋一转，说出自己确有隐情，“刘病日笃”。面对情况急迫的征召——“特下”“切峻”“责臣”“催臣”等，“臣之进退，实为狼狈”，这几句情真意切而含蓄精当的叙述，既含蓄地抚慰了皇帝的愤怒，又直率地表现出自己基于孝心的为难，合情入理地把自己不就征辟的理由暗示出来。作者写皇帝责备自己的诏书，只用八字，写地方官的逼迫和不受申诉却用字甚多，且用对句加以强调，这样就把自己置于一个实有苦衷、无处可诉的悲凉境地，不知不觉地让晋武帝成为自己的倾听者，进一步拉近了上表者和览表者的心理距离。然而，此时李密仍并未直接提出请求，反而就此含蓄住笔。</p>
<p>​
第3段可以看作前两段的深化。第2段说自己“微贱”，第3段就直陈自己是“亡国贱俘”“至微至陋”。这样，李密自己揭开了他与朝廷关系中敏感的要害，在身份上自贬，在情理上输诚，委婉地消除武帝的疑惑，取得对方的认同。接下来再次诉说了祖母“朝不虑夕”的情状，强调自已“区区不能废远”的处境。一般而言，在这里把真实的态度和请求明确说出来，也可以算是水到渠成，有理有据，情真语切了。但李密仍然只是说祖母离不开自己这一事实，没有把推辞的话直接说出来。这样其实是在暗示皇帝，逼自己出来做官有违背“以孝治天下”的国策的嫌疑，这样的表达方式是含蓄的，但表达的力度一点也不弱。本段在回扣、深化前两段内容时，最为重要的就是“圣朝以孝治天下，凡在故老，犹蒙矜育，况臣孤苦，特为尤甚”这一句。这既具体陈述了“圣朝”的“清化”，也将自己孝养祖母、不愿远离的“私情”上升到了践行本朝国策的高度，找到了理论依据，更为自己不立即奉诏赴任做了言之有理的开脱。</p>
<p>​
关于晋朝的“以孝治天下”，其中缘由当然很复杂。鲁迅先生说：“魏晋，是以孝治天下的……为什么要以孝治天下呢？因为天位从禅让，即巧取豪夺而来，若主张以忠治天下，他们的立脚点便不稳，办事便棘手，立论也难了，所以一定要以孝治天下。”（《魏晋风度及文章与药及酒之关系》）同时也和当时的社会状况与思想观念有关。“自汉以至三国君、亲之间是允许有所选择的”，“自晋以后，门阀制度的确立，促使孝道的实践在社会上具有更大的经济上与政治上的作用，因此亲先于君、孝先于忠的观念得以形成。同时，现实的政治也加强了，并且发展了这种观点”（唐长孺《魏晋南朝的君父先后论》）。这既是李密这篇文章的重要写作背景，同时也是这篇文章立论的根基。</p>
<p>​
第4段针对前面铺陈的矛盾，提出一个折中的解决办法。作者先说明终养祖母不会有碍于报效国家，只是有先后缓急之分而已。紧接着进一步强调自己的难处，而且这难处真实到“蜀之人土及二州牧伯”尽知的程度。最后再次明确恳求“听臣微志”，那么以后“生当陨首，死当结草”，为晋朝尽忠。直到最后，作者还是没有直说“臣不奉诏”，仍然紧扣“孝”字做文章，以“缓行”代替了“不行”，以“尽孝”代替了“不出”。这样既表明前面所说的愿意出来做官的话都是真的，绝对没有“不合作”的意思，也在以孝道堵皇帝嘴之后，向皇帝服软，给皇帝台阶。在文章快结束时，作者的情感表达更进一步，不乏赌咒发誓一般的言语，将文章从“陈情”推向“恳求”，对皇帝的内心给予“最后一击”。史载，“武帝览之，……嘉其诚款，赐奴婢二人，下郡县供其祖母奉膳”（《华阳国志·后贤传》），这篇情理并具的辞表确实说服了晋武帝。</p>
<p>​
从整体风格来看，本文的语言简洁流畅，叙事婉转亲切，描绘生动形象，情感真切动人。刘勰曾指出，表这种文体“恳侧者辞为心使，浮侈者情为文使”（《文心雕龙·章表》）。《陈情表》的语言属于质朴恳切的一类，不堆砌辞藻，不刻意修饰，不滥用典故，说实话，抒真情，自然感人至深。与后代大批徒具文采，缺少实质内容的表文相比，林云铭说《陈情表》“不事雕饰，唯见天真烂漫”（《古文析义》卷十）是有道理的。这篇文章的高明之处，就在于以意为先，词不害意，雕而不饰，大巧若拙。</p>
<p>​
从句式来看，本文有两个主要特点，一是骈散结合，二是善用四言。晋初张华等人的表章已经出现了讲究排偶的倾向，“理周辞要，引义比事，必得其偶”（《文心雕龙·章表》）。《陈情表》则仍以散句为主，间以骈句但不过度使用。可谓善作散行然不废骈语。虽然它被选人偏重骈体的《文选》，虽然它读起来节奏感很强，但仍不离散体。吴讷曾考证表文的句式变化，认为“汉晋皆尚散文，盖用陈答情事，若孔明《前后出师》、李令伯《陈情》之类是也。唐宋以后，多尚四六”（《文章辨体序说》）。在骈句的使用上，本文很有讲究。有时在简洁紧凑的散句叙事之后，以骈句描绘具体情境，强化表达效果，如“外无期功强近之亲，内无应门五尺之僮”生动表现孤苦之状，“前太守臣逵察臣孝廉，后刺史臣荣举臣秀才”含蓄表达感激之情，“郡县逼迫，催臣上道；州司临门，急于星火”集中展示尴尬处境。有时则用骈句直接抒情说理，如“臣无祖母，无以至今日；祖母无臣，无以终余年”，堪称篇中警策之语，把前面的内容一笔收住，四个“无”字，说得斩钉截铁却又饱含感情，将文章的情感推向高潮。总体而言，作者善于利用整齐对偶的骈句来表达重要的内容，以吸引皇帝的注意，起到感动和说服的效果。除此之外，作者也善于搭配骈句和散句，以收到更好的表达效果。如“臣无祖母，无以至今日；祖母无臣，无以终余年”一句情感极强烈，有过“亢”之嫌，随即就用“母、孙二人，更相为命，是以区区不能废远”这样的散句把调子降下来。适当重复前一句的内容，又以“是以”二字引出了后面的结论（同时也是含蓄的请求）。</p>
<p>​
就四字句的使用来说，本文充分体现了“四字密而不促”（《文心雕龙·章句》）的特点，以四言为主，形成了全文整齐、紧凑而不紧迫的节奏，读来既典雅又有气势，强化了文章的表达效果（特别是抒情氛围）。此外，由于四字句本身就比较齐整，所以可以毫不费力地在骈散之间切换，让文章在整齐的节奏中又具备了流转自如的美感。四字句在表达上非常灵活，既有很强的概括性（如文中对自已生平、被征召情况的叙述，殊少渲染，多为直陈，用语不多但内容不少）；又有很强的生动性，可以抓住点状细节作传神描绘（如“茕茕孑立，形影相吊”），也可以运用修辞手法作形象化表达（如“日薄西山，气息奄奄”）。本文中不少广为人知的成语，都出自上述生动的表达中。</p>
<p>​
文中还有一些字数较多的句子，有些如“且臣少仕伪朝”一样由四字句增饰而来，增饰部分或提顿，或承接，或转折，大体属于“立言以间之，然后义势可得相承”（《文镜秘府论·论对属》），主要起结构作用；有些则字数较多且结构不以四言为基础，或为骈句，或为散句。其中后一类句子特别值得注意，它们不仅起到了调节文章节奏，使其疏密有致的作用，往往还带有强调、描绘或抒情、说理的意图。就全文来看，超过七个字的长句最为集中地出现在最后一段，而这一段正是作者比较直接地提出请求和反建议，既抒情又说理，既陈请又哀恳的部分，可见句式的使用自有其表达上的规律和精心的安排，并非随意为之。</p>
<p>​
本文还有一个比较重要的问题值得稍加探讨：李密辞不赴任的真正原因是不是要尽孝，他的“孝”是不是一个借口？</p>
<p>​
从李密的行止来看，他对祖母确实很孝顺，以孝辞命也并不只是在晋朝。《华阳国志》记他在蜀汉时就“事祖母以孝闻，其侍疾则泣涕侧息，日夜不解带，膳饮汤药，必过目尝口。本郡礼命，不应”。在上《陈情表》获免出仕之后，他在家一直侍奉祖母以终其天年，直到祖母去世，“服阕，复以洗马征至洛”（《晋书·李密传》）。《陈情表》里反复说自己必须留在祖母身边不能远离，看来也是实情。这表明文章举出的“事亲”这一理由，确是真实不虚。另一方面，当时的政治环境和他本人的特殊身份，也是李密拒绝出仕的一个重要原因。西晋初年，政局暗流涌动，以缺乏根基的亡国旧臣身份贸然投身其间，包含着很大的风险。从后来李密在西晋出仕的经历来看，虽然声誉甚高，“贵势之家惮其公直”（《华阳国志·后贤传》），却也在仕途上受到不少打压，很不得志，这也说明他的这一顾虑是有现实依据的。</p>
<h2 id="参考资料">参考资料</h2>
<h3 id="参考译文">参考译文</h3>
<div class="classcial-chinese-literature-and-poetry-translation"><div class="paragraph"><p class="original-text">臣密言：臣以险衅，夙遭闵凶。</p><p class="translation">臣李密上言：臣因命运不好，小时候就遭遇了不幸。</p><p class="original-text">生孩六月，慈父见背；行年四岁，舅夺母志。</p><p class="translation">生下来刚六个月，慈父便弃我而去；到四岁时，舅父又强迫母亲改变守节的志向（逼她改嫁）。</p><p class="original-text">祖母刘<ruby><rb>愍</rb><rt>mǐn</rt></ruby>臣孤弱，躬亲抚养。</p><p class="translation">祖母刘氏，可怜臣幼年丧父又身体虚弱，亲自抚养（臣）。</p><p class="original-text">臣少多疾病，九岁不行，零丁孤苦，至于成立。</p><p class="translation">臣小时多病，九岁还不能走路，伶仃孤苦，直到成人自立。</p><p class="original-text">既无伯叔，终鲜兄弟，门衰祚薄，晚有儿息。</p><p class="translation">（臣）既没有伯叔，也没有兄弟，家门衰微而福分浅薄，很晚才有儿子。</p><p class="original-text">外无期功强近之亲，内无应门五尺之僮，</p><p class="translation">在外面没有什么近亲，在家里又没有照管门户的小童，</p><p class="original-text"><ruby><rb>茕</rb><rt>qióng</rt></ruby>茕<ruby><rb>孑</rb><rt>jié</rt></ruby>立，形影相吊。</p><p class="translation">（臣）孤单无靠地独自生活，（只有自己的）身体和影子互相安慰。</p><p class="original-text">而刘夙婴疾病，常在床蓐，臣侍汤药，未曾废离。</p><p class="translation">而祖母刘氏早已疾病缠身，经常卧床不起，臣侍奉她服用汤药，从来没有停止（侍奉）而离开过她。</p></div><div class="paragraph"><p class="original-text">逮奉圣朝，沐浴清化。</p><p class="translation">到了当今圣朝，（臣）浸润在清明的教化中。</p><p class="original-text">前太守臣逵察臣孝廉；后刺史臣荣举臣秀才。</p><p class="translation">从前太守逵察举臣为孝廉，后来刺史荣又推荐臣为秀才。</p><p class="original-text">臣以供养无主，辞不赴命。</p><p class="translation">臣因为（一旦外出做官）供奉祖母之事没人来做，（所以）辞谢而未接受任命。</p><p class="original-text">诏书特下，拜臣郎中，寻蒙国恩，除臣洗马。</p><p class="translation">（陛下）特地颁下诏书，任命臣为郎中，不久又蒙受国家恩典，任命臣为太子洗马。</p><p class="original-text">猥以微贱，当侍东宫，非臣陨首所能上报。</p><p class="translation">像臣这样卑微低贱的人，承担侍奉太子的职务，（皇上的恩遇）实在不是臣用生命所能报答的。</p><p class="original-text">臣具以表闻，辞不就职。</p><p class="translation">臣（把自己的苦衷）在奏表中一一呈报，辞谢而不去就职。</p><p class="original-text">诏书切峻，责臣<ruby><rb>逋</rb><rt>bū</rt></ruby>慢；</p><p class="translation">（不料）诏书（又下）急切严峻，责备臣有意回避、怠慢上命。</p><p class="original-text">郡县逼迫，催臣上道；州司临门，急于星火。</p><p class="translation">郡县长官逼迫，催臣上路；州官登门催促，急迫过于流星。</p><p class="original-text">臣欲奉诏奔驰，则刘病日笃，</p><p class="translation">臣想接受诏命赶路（就职），但刘氏的病一天比一天沉重，</p><p class="original-text">欲苟顺私情，则告诉不许：臣之进退，实为狼狈。</p><p class="translation">想姑且迁就私情，但申诉（苦衷）不被许可：臣目下实在是进退两难，处境窘迫。</p></div><div class="paragraph"><p class="original-text">伏惟圣朝以孝治天下，凡在故老，犹蒙矜育，</p><p class="translation">臣想到圣朝是用孝道来治理天下的，凡是元老旧臣，均受到怜惜养育，</p><p class="original-text">况臣孤苦，特为尤甚。</p><p class="translation">何况臣的孤苦，（情况）特别严重。</p><p class="original-text">且臣少仕伪朝，历职郎署，本图宦达，不矜名节。</p><p class="translation">再说臣年轻时曾在伪朝做官，历任郎官之职，本来就希图官位显达，并不想自命清高。</p><p class="original-text">今臣亡国贱俘，至微至陋，过蒙拔<ruby><rb>擢</rb><rt>zhuó</rt></ruby>，宠命优渥，岂敢盘桓，有所希冀！</p><p class="translation">如今臣是卑贱的亡国之俘，极为卑微鄙陋，过分地受到提拔，荣宠优厚，怎么敢犹豫徘徊，另有所图呢？</p><p class="original-text">但以刘日薄西山，气息奄奄，人命危浅，朝不虑夕。</p><p class="translation">只因刘氏（已如）迫近西山的落日，气息微弱，生命垂危，朝不保夕。</p><p class="original-text">臣无祖母，无以至今日，祖母无臣，无以终余年。</p><p class="translation">臣（如果）没有祖母，就无从（长大）以至今日；祖母（如果）没有臣的照顾，就不能尽其余生。</p><p class="original-text">母孙二人，更相为命，是以区区不能废远。</p><p class="translation">祖孙二人，相依为命，因此（就臣）内心（而言）不能够废止（奉养）、远离（祖母）。</p></div><div class="paragraph"><p class="original-text">臣密今年四十有四，祖母今年九十有六，</p><p class="translation">臣李密今年四十四岁，祖母今年九十六岁，</p><p class="original-text">是臣尽节于陛下之日长，报养刘之日短也。</p><p class="translation">这样（看来）臣在陛下面前尽忠的时日（还）很长，（而）报答奉养刘氏的时日（却）很短了。</p><p class="original-text">乌鸟私情，愿乞终养。</p><p class="translation">（臣怀着）像乌鸦反哺一样的私情，希望求得奉养祖母到最后。</p><p class="original-text">臣之辛苦，非独蜀之人士及二州牧伯所见明知，皇天后土实所共鉴。</p><p class="translation">臣的辛酸苦楚，不仅蜀地人士和梁州、益州的长官明白知晓，天地神明实在也都看得清清楚楚。</p><p class="original-text">愿陛下矜愍愚诚，听臣微志，庶刘侥幸，保卒余年。</p><p class="translation">祈望陛下能怜恤臣的衷情，准许臣（实现）卑微的志愿，使刘氏能侥幸（因此）安尽余年。</p><p class="original-text">臣生当陨首，死当结草。臣不胜犬马怖惧之情，谨拜表以闻。</p><p class="translation">臣生时应当献身，死后也当结草报恩。臣怀着像犬马对（主人一样）不胜恐惧的心情，恭谨地上奏章以达天听。</p></div></div>]]></content>
      <categories>
        <category>High School</category>
        <category>Chinese</category>
        <category>Classical Chinese Literature and Poetry</category>
      </categories>
      <tags>
        <tag>School Notes</tag>
        <tag>High School</tag>
        <tag>Chinese</tag>
      </tags>
  </entry>
  <entry>
    <title>项脊轩志-归有光</title>
    <url>/2022/03/25/chinese/High%20School/Classical%20Chinese%20Literature%20and%20Poetry/%E9%80%89%E6%8B%A9%E6%80%A7%E5%BF%85%E4%BF%AE/%E9%A1%B9%E8%84%8A%E8%BD%A9%E5%BF%97-%E5%BD%92%E6%9C%89%E5%85%89/</url>
    <content><![CDATA[<h2 id="课文解读">课文解读</h2>
<p>​
本文是一篇借记物以叙事、抒情的散文。项脊，因归有光先人所居之处——项脊泾（在今江苏昆山）而得名。将这一书斋命名为“项脊轩”，有怀祖追远之意。“志”就是“记”的意思，是古代记叙事物、抒发感情的一种文体。“志”或“记”属于“杂记类”文体，这种文体常常灵活运用记叙、描写、抒情、议论等多种表达方式，来记人叙事，描摹对象，抒发怀抱。其内容丰富多样，可以写“书斋记”（如《项脊轩志》），可以写“书画杂物”（如《核舟记》），可以写“亭台名胜”（如《喜雨亭记》），等等。在描写对象时，形神兼顾；写法多样，随物赋形，言而有序。</p>
<p>​
本文第1—3段写于作者18岁时：第4、5段写于作者而立之年，是对前文的补充。通过记叙“项脊轩”这间“室仅方丈，可容一人居”的小小书斋，作者深情地回顾了自已当年安于清贫、发奋读书的生活和志趣，并引出自己与亲人朝夕相处“多可喜，亦多可悲”的往事，抒发了物是人非、世事变迁的感慨，表达了自己对祖母、母亲、妻子深深的怀念。与一般的“志”相比，本文较多着眼于生活中的细节琐事，将过去与现今连结记述，融入了作者深挚的情感。</p>
<p>​
第1段写项脊轩修葺前后的不同风貌。旧时的项脊轩是“室仅方丈”的“百年老屋”，简直无法居住。经过作者修葺之后，变成了理想的书斋。他在其中安居休息，长啸歌吟，陶醉于自己的世界中。这段文字在对闲适清幽的理想书斋生活场景的描绘中，寄托了作者对往日闲适、静谧的生活的无限眷恋。第2段写项脊轩的变迁和家人间的往事。庭院本是一个整体，在“诸父异爨”后“多置小门墙”，狗吠鸡栖，客逾庖而宴，篱笆变为围墙，家中变得凌乱不堪，每况愈下。在这一铺垫下，作者接着讲述了母亲对自己的爱抚和祖母对自己的期望。写母亲，是借老妪的口述，表现母亲的温柔慈爱；写祖母，则是抓住她看望并鼓励孙子读书的感人场面，特别是祖母“持一象笏至”的叮咛和勉励，希望孙子改变“读书久不效”的家庭现状的嘱咐，细致入微地表现了祖母对孙子的关怀、疼爱和殷殷期许。作者“瞻顾遗迹”，睹物思人，又感慨自己当时无法改变“吾家读书久不效”，不禁悲从中来，“长号不自禁”。第3段再写项脊轩的变迁和逸事。回忆自己闭门苦读、以足音辨人的情境，项脊轩四次遭遇火灾的变故。这一段是补叙，用极富生活实感的琐事写出作者的生活体验，与第1段呼应，进一步表达作者对人、对老屋的深厚感情。</p>
<p>​
第4、5段补写作者与妻子的往事。妻子“从余问古事，或凭几学书”，向作者转述小妹的问话，充满生活乐趣。然世事难料，生死无常，妻子去世，项脊轩也渐渐破败，直至作者将其再次修葺。结尾一句，亭亭如盖的枇杷树融人了作者无限的感伤之情，寄托了作者对往事、亡妻的追怀。补写部分从时间推移、人物关系变化、感情发展等角度看都是正文的自然延续和补充，以妻子所植的枇杷树作结，无一字言及思念，而思念之情表现得极为诚挚动人。</p>
<p>​
文章无论是记述还是描写，都渗透着“喜”和“悲”的浓烈情感，两种情感互为衬托，彼此交织，最终将文章推入悲欣交集的境界。这篇文章也因此成为古代散文的名篇。</p>
<p>​
作者善于抓住生活中的典型细节，如小鸟啄食、风移影动的景物细节，东犬西吠的场面细节，母亲、妻子动作言语的细节。特别是写祖母看望和勉励孙子的场面，祖母说：“吾儿，久不见若影，何竞日默默在此，大类女郎也？”语气亲切、诙谐，生动贴切地表现了祖母对孙子的疼爱和关心。临去时，以手阖门，喇喃自语，细致生动地刻画出祖母内心的喜悦和对孙子的期许。而后祖母“持一象笏至”，再三叮宁，激励孙子为改变整个家族的现状而发奋读书。祖母的这些语言、动作描写具有鲜明的个性特征，充满浓浓的生活气息。这些细节看似平淡，实则感人肺府，使祖母的音容笑貌、神态举止甚至复杂的心理活动，全都跃然纸上。</p>
<p>​
《项脊轩志》在选入时做了删节。“殆有神护者”后面掉了一段，原文是：</p>
<blockquote>
<p>​
项脊生曰：“蜀清守丹穴，利甲天下，其后奉皇帝筑女怀清台。刘玄德与曹操争天下，诸葛孔明起陇中。方二人之昧昧于一隅也，世何足以知之？余区区处败屋中，方扬眉瞬目，谓有奇景。人知之者，其谓与坎井之蛙何异？”</p>
</blockquote>
<p>​
这段其实是《项脊轩志》正文的结尾。以议论结束正文，是古代记叙文常见的写法。这一段议论用了蜀清、诸葛亮两人的例子，意在说明他们之所以后来显赫，一个是因为“利甲天下”，一个是因为遇到明主，而自己不具备这样的条件。似乎也不羡慕他们。以坎井之蚌自喻，自我解嘲。以此排解心中郁结，也表露自己不得志的感概。</p>
<p>​
这两篇文章都体现了中国人对亲人、家庭、家族的重视。李密不愿为官而要奉养祖母，体现的是感人至深的孝道：归有光对“诸父异爨”感到遗憾，深情怀念与项脊轩相关的亲人，体现的是对家庭、家族的珍视。由此我们可以体会到中国文化传统的某些核心内容。正如梁漱溟所说：</p>
<p>​
中国文化的特色就是重视人与人的关系，它总是把家庭那种彼此亲密的味道，应用到社会上去，跟“个人本位、自我中心”相反，它是互以对方为重。（《这个世界会好吗？一梁漱溟晚年口述》）</p>
<p>​
两篇文章之间的相异之处很多，开展比较探究时，不妨抓住文体这一要素。《陈情表》是“表”，其叙事、说理，总以实现具体目的为指归。这篇文章的内容本身是感人的，但由于是给皇帝的奏表，仅仅靠孝心、孝道去感动对方显然是不够的。作者必须基于自己的目标，评估自己的处境，揣测皇帝的心理，考虑表文的体例。作出有针对性的安排，文章要做到思虑有序且不露痕迹，反复致意又不能烦冗，以达到感人服人的效果。换句话说，《陈情表》的感人固然是因为作者的孝心本来感人，也因为作者精心结撰文章刻意感人。与此不同的是，《项脊轩志》是“志”，是作者自抒情意之文，虽然不无法度，但毕竟可以随性落笔，写景物，绘细节，记言语，不求感人而自有动人之处。</p>
<h2 id="参考资料">参考资料</h2>
<h3 id="参考译文">参考译文</h3>
<div class="classcial-chinese-literature-and-poetry-translation"><div class="paragraph"><p class="original-text">项脊轩，旧南阁子也。室仅方丈，可容一人居。</p><p class="translation">项脊轩，是原来的南阁子。屋内仅一丈见方，只可以容纳一个人居住。</p><p class="original-text">百年老屋，尘泥渗漉，雨泽下注；每移案，顾视无可置者。</p><p class="translation">上百年的老屋，（屋顶、墙上的）泥土渗透漏下，雨水往下流；每当移动书桌时，环视四周没有可以挪置（桌案）的地方。</p><p class="original-text">又北向，不能得日，日过午已昏。</p><p class="translation">（屋子）又朝北，不能照到阳光，时间一过中午（屋内）就已经昏暗。</p><p class="original-text">余稍为修葺，使不上漏。</p><p class="translation">我稍稍修理了一下，使它不从上面漏土漏雨。</p><p class="original-text">前辟四窗，垣墙周庭，以当南日，日影反照，室始洞然。</p><p class="translation">阁子北面开了四扇窗子，四周围绕院子砌上墙，用（北墙）对着南边射来的日光（使其反照室内）。日光反照，室内才明亮起来。</p><p class="original-text">又杂植兰桂竹木于庭，旧时栏<ruby><rb>楯</rb><rt>shǔn</rt></ruby>，亦遂增胜。</p><p class="translation">又在庭院里错杂地种上兰花、桂树、竹子等植物，往日的栏杆，也就增加了光彩。</p><p class="original-text">借书满架，偃仰啸歌，冥然兀坐，万籁有声；</p><p class="translation">借来的书籍摆满书架，我安居室内长啸歌吟，静静地独自端坐，听到自然界各种各样的声音；</p><p class="original-text">而庭阶寂寂，小鸟时来啄食，人至不去。</p><p class="translation">庭院、阶前却静悄悄的，小鸟不时飞来啄食，有人来了（鸟）也不离开。</p><p class="original-text">三五之夜，明月半墙，桂影斑驳，风移影动，珊珊可爱。</p><p class="translation">十五的夜晚，明月照亮半截墙壁，桂树的影子交杂错落，微风吹来，树影摇动，非常喜人。</p></div><div class="paragraph"><p class="original-text">然余居于此，多可喜，亦多可悲。</p><p class="translation">然而我住在这里，有许多可喜的事，也有许多可悲的事。</p><p class="original-text">先是，庭中通南北为一。<ruby><rb>迨</rb><rt>dài</rt></ruby>诸父异<ruby><rb>爨</rb><rt>cuàn</rt></ruby>，内外多置小门墙，往往而是，</p><p class="translation">在此以前，庭院南北相通成为一体。等到伯父、叔父们分家，内外设置了许多矮院墙，到处都是。</p><p class="original-text">东犬西吠，客逾庖而宴，鸡栖于厅。</p><p class="translation">东家的狗（听到西家的声音）就对着西家叫，客人越过厨房去吃饭，鸡在厅堂里栖息。</p><p class="original-text">庭中始为篱，已为墙，凡再变矣。</p><p class="translation">庭院中先是用篱笆隔开，不久后砌成了墙，一共变了两次。</p><p class="original-text">家有老妪，尝居于此。</p><p class="translation">家中有个老婆婆，曾经在这里居住。</p><p class="original-text">妪，先大母婢也，乳二世，先妣抚之甚厚。</p><p class="translation">这个老婆婆是我去世的祖母的婢女，给两代人喂过奶，我母亲生前待她很好。</p><p class="original-text">室西连于中闺，先妣尝一至。妪每谓余曰：</p><p class="translation">房子的西边和内室相连，先母曾经来过一次。老婆婆常常对我说：</p><p class="original-text">“某所，而母立于兹。”</p><p class="translation">“这个地方，你母亲曾经站在这儿。”</p><p class="original-text">妪又曰：“汝姊在吾怀，呱呱而泣；</p><p class="translation">老婆婆又说：“你姐姐在我怀中，呱呱地哭泣；</p><p class="original-text">娘以指叩门扉曰：‘儿寒乎？欲食乎？’吾从板外相为应答。”</p><p class="translation">你母亲用手指敲着门说： ‘孩子是冷呢？还是想吃东西呢？’我在门外一一应答。”</p><p class="original-text">语未毕，余泣，妪亦泣。</p><p class="translation">话还没有说完，我就哭了起来，老婆婆也哭了起来。</p><p class="original-text">余自束发读书轩中，一日，大母过余曰：</p><p class="translation">我从十五岁起就在轩内读书，有一天，祖母来看我，说：</p><p class="original-text">“吾儿，久不见若影，何竟日默默在此，大类女郎也？”</p><p class="translation">“我的孩子，好久没有见到你的身影了，为什么整天默默待在这里，很像个女孩子啊？”</p><p class="original-text">比去，以手<ruby><rb>阖</rb><rt>hé</rt></ruby>门，自语曰：</p><p class="translation">等到离开时，用手关上门，自言自语地说：</p><p class="original-text">“吾家读书久不效，儿之成，则可待乎！”</p><p class="translation">“我们家读书长久没有人考取功名了，这孩子取得成就是指日可待的呀！”</p><p class="original-text">顷之，持一象<ruby><rb>笏</rb><rt>hù</rt></ruby>至，曰：</p><p class="translation">不一会儿，拿着一个象牙制的手板走来，说：</p><p class="original-text">“此吾祖太常公宣德间执此以朝，他日汝当用之！”</p><p class="translation">“这是我祖父太常公在宣德年间拿着上朝觐见皇帝用的，日后你会用到它！”</p><p class="original-text">瞻顾遗迹，如在昨日，令人长号不自禁。</p><p class="translation">瞻视回顾这些旧物， （这些事）就好像发生在昨天一样，令人忍不住放声大哭。</p></div><div class="paragraph"><p class="original-text">轩东，故尝为厨，人往，从轩前过。</p><p class="translation">项脊轩的东边以前曾经是厨房，人们到那里去，要从轩前经过。</p><p class="original-text">余<ruby><rb>扃</rb><rt>jiōng</rt></ruby>牖而居，久之，能以足音辨人。</p><p class="translation">我关上窗户待在里面，时间长了，能根据脚步声辨别经过的人是谁。</p><p class="original-text">轩凡四遭火，得不焚，殆有神护者。……</p><p class="translation">项脊轩一共遭过四次火灾，能够不被焚毁，大概是有神明护佑着它吧。</p></div><div class="paragraph"><p class="original-text">余既为此志，后五年，吾妻来归，</p><p class="translation">我已经作了这篇志，过了五年，我的妻子嫁到我家来，</p><p class="original-text">时至轩中，从余问古事，或凭几学书。</p><p class="translation">她时常来到轩中，问我一些古代的事情，或者伏在桌旁学写字。</p><p class="original-text">吾妻归宁，述诸小妹语曰：“闻姊家有阁子，且何谓阁子也？”</p><p class="translation">我妻子回娘家省亲，回来转述小妹们的话说： “听说姐姐家有个小阁子，那么什么是阁子呀？”</p><p class="original-text">其后六年，吾妻死，室坏不修。</p><p class="translation">这以后六年，我的妻子去世，项脊轩破败没有整修。</p><p class="original-text">其后二年，余久卧病无聊，乃使人复葺南阁子，其制稍异于前。</p><p class="translation">又过了两年，我很长时间生病卧床，感到无聊，就让人再次修茸南阁子，形制跟过去稍有不同。</p><p class="original-text">然自后余多在外，不常居。</p><p class="translation">然而此后我多在外地，不常住在这里。</p><p class="original-text">庭有枇杷树，吾妻死之年所手植也，今已亭亭如盖矣。</p><p class="translation">庭院中有一株枇杷树，是我妻子去世那年亲手种植的，现在已经像伞盖一样高高耸立了。</p></div></div>]]></content>
      <categories>
        <category>High School</category>
        <category>Chinese</category>
        <category>Classical Chinese Literature and Poetry</category>
      </categories>
      <tags>
        <tag>School Notes</tag>
        <tag>High School</tag>
        <tag>Chinese</tag>
      </tags>
  </entry>
  <entry>
    <title>蜀相-杜甫</title>
    <url>/2022/03/25/chinese/High%20School/Classical%20Chinese%20Literature%20and%20Poetry/%E9%80%89%E6%8B%A9%E6%80%A7%E5%BF%85%E4%BF%AE/%E8%9C%80%E7%9B%B8-%E6%9D%9C%E7%94%AB/</url>
    <content><![CDATA[<h2 id="课文解读">课文解读</h2>
<p>​
《蜀相》作于唐肃宗上元元年（760）春天。此时的杜甫，刚刚来到成都不久，暂住于城西的浣花溪畔。在此之前的五年，他颠沛流离，一度身陷安史叛军中，逃脱后做过左拾遗、华州司功参军之类的小官，之后又弃官而去。这五年里，他目睹了安史之乱中兵火连天、百姓涂炭、田园荒芜的景况，《哀江头》《羌村三首》《北征》以及“三吏”“三别”都作于这一时期；加之唐肃宗昏庸颟顸，宠信宦官，排斥功臣，而杜甫本人亦因上书救宰相房琯而遭疏远、贬斥，这使得早年间一心想要“致君尧舜上，再使风俗淳”（《奉赠韦左丞丈二十二韵》）的他倍感失落，对时局的优虑也始终徘徊在心头。正是在这样的心理背景下，杜甫游览了成都城外的诸葛武侯祠，写下了《蜀相》一诗。诸葛亮是三国时期著名的政治家和军事家，他为蜀汉制定了统一天下的策略，辅佐刘备、刘禅父子建立并巩固蜀汉政权。他“鞠躬尽瘁，死而后已”的精神，他与刘备之间鱼水相得的关系，当然会使仕途坎坷、报国无门的杜甫心潮起伏、热泪盈眶。</p>
<p>​
“丞相祠堂何处寻，锦官城外柏森森。”杜甫对诸葛亮是十分崇敬、心向往之的，因此初到成都就前往瞻仰、参拜。因为没有来过，所以要打听“丞相祠堂”的所在，“寻”说明是有意识地寻访，“何处寻”表现了一种钦慕和迫切之感。“锦官城外”点明了地点，而“柏森森”三字则意蕴丰厚，一来是写实，展现了武侯祠周围的环境；二是渲染气氛，表现祠堂附近的庄严肃穆，也表达诗人参拜时内心的崇敬之感；三是带有象征意味，“岁寒，然后知松柏之后凋也”，柏树在中国传统文化中素来有忠贞、高洁的意味，在这里可以视为诸葛亮伟大人格的象征；此外，“森森”不仅是茂密、繁多，也给人整肃之感，说明武侯祠并非一个荒芜废弃的所在，而是有人在悉心维护，因此这也是人民爱戴诸葛亮的见证。</p>
<p>​
“映阶碧草自春色，隔叶黄鹂空好音。”此二句写祠堂内的景物，更深刻地表达对诸葛亮的崇敬、怀念、惋惜之情。“自春色”的“自”字和“空好音”的“空”字，是这两句中的关键字。过去一般认为这两个字描写的是武侯祠的寂寥冷清，仅有杜甫形单影只地前来拜谒，但细想起来可能是有问题的。南宋祝穆《方舆胜览·成都府路·成都府》载：“武侯庙，在府西北二里，今乘烟观。孔明表云‘薄田十顷，桑八百株’即此地。孔明初亡，百姓遇节朔各私祭于道上。李雄称王，始为庙于少城内。桓温平蜀，夷少城，独存孔明庙。后封武兴王庙，至今祠祀不绝。”诸葛亮在历朝历代都属于人们普遍崇敬的对象，“祠祀不绝”才是常态，何况此时成都并无战乱，平和安乐，又值春光明媚之际，很难想象杜甫前往拜谒时祠中会空荡寂寥。这两句诗表达的真实意思是，青草映阶，鸟鸣婉转，春光大好，但“热闹是它们的”，诗人的心中只有对诸葛亮的崇敬与追怀，青草再幽媚，鸟声再动听，也人不得诗人的眼、耳，只能是“自春色”“空好音”。此二句写景，绝非一般意义上的情景交融、值染气氛，这里的景与诗人的心情是不相融的，只是起到反向衬托的作用。</p>
<p>​
“三顾频烦天下计，两朝开济老臣心”此二句以高度凝练，精脚的语言概括了诸亮一生的丰功伟绩——在刘备的诚恳邀请下出山并制定了统一天下的策略，一心一意辅佐刘备、刘禅父子建立并巩固蜀汉政权。这两句是概括，也是评价，而且饱含深情。“三顾频烦”言刘备之求贤若渴，从侧面反映诸葛亮之才干出众；“天下计”既言诸葛亮雄才大略，亦暗含事业艰难之意；“两朝开济”言其对蜀汉基业既有开创之力，又有维持之劳，堪称居功至伟；“老臣心”言其忠贞不贰，坚毅不拔。每个字都下得极重，可谓字字千钧，因此抒情意味更为浓重，形象更为饱满。</p>
<p>​
“出师未捷身先死，长使英雄泪满襟。”此二句在诗意上紧承上两句而来，表现出诗人对诸葛亮献身精神的景仰和对他事业未竟、赍志以殁的痛惜心情。正因为对诸葛亮有着分量极重的评价，对其壮志未酬才会有“泪满襟”这样强烈的痛惜之情。而“长使”二字，不仅将诗人自己，也将一切有志于匡扶社稷的英雄们都包括了进来，在后世总能引起无数仁人志士的共鸣。</p>
<p>​
诸葛亮是杜甫最为崇敬的古人之一。他写诸葛亮的诗还有《八阵图》、《咏怀古迹五首》（其五）、《古柏行》等，可以与此诗参读。</p>
<p>​
李白和杜甫都与蜀地有着不解之缘。李白的青少年时代都是在蜀中度过的，在这里，“他获得了富有创造性的壮美的风格的源头”（李长之《李白传》）；杜甫则在蜀中客居数年，其间留下了四百多首诗作，除《蜀相》外，《客至》《赠花卿》《戏为六绝句》《茅屋为秋风所破歌》《闻官军收河南河北》《登楼》《宿府》等名篇也都创作于这一时期。</p>
<p>​
这里所选的《蜀道难》和《蜀相》很能代表李、杜二人的诗歌风格。李白的个性开朗豪迈，诗风豪放不羁，《蜀道难》一诗仿佛来不及推敲就脱口而出，节奏促迫，一泻千里，无可阻挡，正如“黄河之水天上来”；杜甫则含蓄蕴藉，讲求法度，《蜀相》仿佛每个字都经过了精打细磨，每句话都经过了精心设计，初读似平常，反复咀嚼方觉其有味，可谓“随风潜入夜，润物细无声”。二人风格迥异，各擅胜场，正如南宋严羽《沧浪诗话》所说，“子美不能为太白之飘逸，太白不能为子美之沉郁”；又如清代洪亮吉《北江诗话》所说，“李青莲之诗，佳处在不着纸，杜浣花之诗，佳处在力透纸背”。</p>
<h2 id="参考资料">参考资料</h2>
<h3 id="参考译文">参考译文</h3>
<div class="classcial-chinese-literature-and-poetry-translation"><div class="paragraph"><p class="original-text">丞相祠堂何处寻？锦官城外柏森森。</p><p class="translation">去哪里寻找武侯诸葛亮的祠堂？在成都城外那柏树茂密的地方。</p><p class="original-text">映阶碧草自春色，隔叶黄鹂空好音。</p><p class="translation">碧草照映台阶自当显露春色，树上的黄鹂隔枝空对婉转鸣唱。</p><p class="original-text">三顾频烦天下计，两朝开济老臣心。</p><p class="translation">刘备为统一天下而三顾茅庐，问计于诸葛亮，辅佐两代君主的老臣忠心耿耿。</p><p class="original-text">出师未捷身先死，长使英雄泪满襟。</p><p class="translation">可惜出师伐魏还没有取得最后的胜利就先去世了，常使后代英雄感慨泪湿衣襟！</p></div></div>]]></content>
      <categories>
        <category>High School</category>
        <category>Chinese</category>
        <category>Classical Chinese Literature and Poetry</category>
      </categories>
      <tags>
        <tag>School Notes</tag>
        <tag>High School</tag>
        <tag>Chinese</tag>
      </tags>
  </entry>
  <entry>
    <title>望海潮·东南形胜-柳永</title>
    <url>/2022/03/25/chinese/High%20School/Classical%20Chinese%20Literature%20and%20Poetry/%E9%80%89%E6%8B%A9%E6%80%A7%E5%BF%85%E4%BF%AE/%E6%9C%9B%E6%B5%B7%E6%BD%AE%C2%B7%E4%B8%9C%E5%8D%97%E5%BD%A2%E8%83%9C-%E6%9F%B3%E6%B0%B8/</url>
    <content><![CDATA[<h2 id="课文解读">课文解读</h2>
<p>​
这是一首投赠之作。当时词人途经杭州，想要谒见当时的两浙转运使孙何（也有人认为是杭州太守孙沔），于是写了这样一首词投赠。因为是写给镇守一方的官员的，所以词作的主要内容是描写杭州自然环境之隽美、城市经济之繁荣、黎民百姓之安居乐业，借此表达对官员的赞美，并希望得到提携奖掖。</p>
<p>​
词的上阙总写杭州的风光。开篇是一个总体定位，三句虽然说的都是杭州，但从三个不同的角度出发，用了三种完全不同的表述：“东南形胜”，地理位置重要；“三吴都会”，社会条件优越；“钱塘自古繁华”，有着长期繁盛的历史。而且从“东南”到“三吴”到“钱塘”，如同一个鸟瞰式的镜头不断推近，最终聚焦到杭州一城。接下来就是对城市风光的具体描述。画桥在烟柳中掩映，帘幕在微风中摇摆，在这令人沉醉的景象中，生活着“十万人家”。钱塘江岸绿树如云，钱塘江水汹涌壮观，不愧为形胜之地。市场上陈列着各种珠宝，普通人家也披罗着锦，满目富足气象，果然是繁华之都。据《元丰九域志》记载，北宋元丰年间（1078-1085），杭州有主户约16.4万，客户约3.8万，大致可以推测在柳永写作《望海潮》的时代，“十万人家”恐怕也没有太多夸张的成分。</p>
<p>​
下阕则进一步聚焦到西湖一带。写杭州，不能不重点写西湖，西湖至今也还是杭州的核心区域。“重湖叠巘清嘉”是一个总体性的概括，“重湖”指西湖分里湖、外湖，“叠巘”指附近的山峦，一“重”一“叠”表现了景观的层次感，“清嘉”则点出了西湖景致的秀美风格。接下去又聚焦到“三秋桂子，十里荷花”。桂花和荷花，是杭州最具代表性的花、历代文人墨客题咏不绝。如白居易《忆江南》：“江南忆，最忆是杭州。山寺月中寻桂子，郡亭枕上看潮头。何日更重游？”又如杨万里《晓出净慈寺送林子方》：“毕竟西湖六月中，风光不与四时同。接天莲叶无穷碧，映日荷花别样红。”二者本是不同时节开放，词人却打破了时间界限，将其集中在一个画面里，且对仗工稳，遂成名句。下面开始写人物活动。“羌管弄晴，菱歌泛夜”为互文见义，意谓无论昼夜，总有优美的歌声、乐声在湖面上回荡。而“嬉嬉钓叟莲娃”更描绘出一派和乐之景。而“千骑”三句从普通百姓转到地方官的身上，写其与民同乐，又不失排场、气概，“异日”二句则预祝其早日高升，投赠之意至此明了。</p>
<p>​
这首词从写作目的上来看，格调并不高，甚至有一点儿吹嘘政绩、粉饰升平之嫌；但除却这一点，从词作本身来看，仍有可取之处。首先，它是宋词中较早的全面描绘都市生活的作品，拓展了词的题材，也在一定程度上反映了当时真实的社会面貌，即城市经济发达，物质文明繁荣，市民生活丰富。与柳永几乎同时代的北宋名臣范镇也曾感慨：“仁宗四十二年太平，镇在翰苑十余载，不能出一语咏歌，乃于耆卿词见之。”（王象之《舆地纪胜》引）时代较柳永稍晚的黄裳曾跋柳永《乐章集》曰：“予观柳氏《乐章》，喜其能道嘉祐中太平气象，如观杜甫诗，典雅文华，无所不有。是时予方为儿，尤想见其风俗，欢声和气，洋溢道路之间，动植咸若。今人歌柳词，闻其声，听其词，如丁斯时，使人慨然有感。鸣呼！太平气象，柳能一写于《乐章》，所谓词人盛世之黼藻，岂可废耶？”（《书〈乐章集〉后》）李之仪也说：“柳耆卿铺叙展衍，备足无余，形容盛明，千载如逢当日。”（《跋吴师道小词》）这些评价虽然并非针对《望海潮》而言，但用来评价《望海潮》也是很合适的。其次，柳永虽然在后世以其婉约词著称，但这首词却不乏壮美之感，如“怒涛卷霜雪，天堑无涯”一句，较之苏轼的“乱石穿空，惊涛拍岸，卷起千堆雪”，可谓早着先鞭。其余诸如“参差十万人家”“十里荷花”“千骑拥高牙”等，均带有夸饰语气，可以说完全是豪放词的气概。《望海潮》至今仍是杭州重要的城市名片之一，亦可见其永恒的艺术魅力。</p>
<h2 id="参考资料">参考资料</h2>
<h3 id="参考译文">参考译文</h3>
<div class="classcial-chinese-literature-and-poetry-translation"><div class="paragraph"><p class="original-text">东南形胜，三吴都会，钱塘自古繁华。</p><p class="translation">杭州地处东南方，地理形势优越，风景优美，是三吴的都会，这里自古以来就十分繁华。</p><p class="original-text">烟柳画桥，风帘翠幕，参差十万人家。</p><p class="translation">雾气笼罩着的柳树、装饰华美的桥梁，挡风的帘子、青绿色的帐幕，楼阁高高低低，大约有十万户人家。</p><p class="original-text">云树绕堤沙，怒涛卷霜雪，天<ruby><rb>堑</rb><rt>qiàn</rt></ruby>无涯。</p><p class="translation">高耸入云的树，环绕着钱塘江沙堤，又高又急的潮头冲过来，浪花像霜雪在滚动，宽广的江面一望无涯。</p><p class="original-text">市列珠玑，户盈罗绮，竞豪奢。</p><p class="translation">市场上陈列着琳琅满目的珠玉珍宝，家家户户都存满了绫罗绸缎，争相比奢华。</p></div><div class="paragraph"><p class="original-text">重湖叠巘yǎn清嘉，有三秋桂子，十里荷花。</p><p class="translation">里湖、外湖与重重叠叠的山岭非常清秀美丽。秋天桂花飘香，夏季十里荷花。</p><p class="original-text">羌管弄晴，菱歌泛夜，嬉嬉钓叟莲娃。</p><p class="translation">晴天欢快地吹奏羌笛，夜晚划船采菱唱歌，钓鱼的老翁、采莲的姑娘都嬉笑颜开。</p><p class="original-text">千骑拥高牙，乘醉听箫鼓，吟赏烟霞。</p><p class="translation">孙何外出时，成群的马队簇拥着高高的牙旗，缓缓而来，声势暄赫。在微醺中听着箫鼓管弦，吟诗作词，赞赏着美丽的水色山光。</p><p class="original-text">异日图将好景，归去凤池夸。</p><p class="translation">他日把这美好的景致画出来，回京升官时向人们夸耀。</p></div></div>]]></content>
      <categories>
        <category>High School</category>
        <category>Chinese</category>
        <category>Classical Chinese Literature and Poetry</category>
      </categories>
      <tags>
        <tag>School Notes</tag>
        <tag>High School</tag>
        <tag>Chinese</tag>
      </tags>
  </entry>
  <entry>
    <title>扬州慢·淮左名都-姜夔</title>
    <url>/2022/03/25/chinese/High%20School/Classical%20Chinese%20Literature%20and%20Poetry/%E9%80%89%E6%8B%A9%E6%80%A7%E5%BF%85%E4%BF%AE/%E6%89%AC%E5%B7%9E%E6%85%A2%C2%B7%E6%B7%AE%E5%B7%A6%E5%90%8D%E9%83%BD-%E5%A7%9C%E5%A4%94/</url>
    <content><![CDATA[<h2 id="课文解读">课文解读</h2>
<p>​
柳永说“钱塘自古繁华”，其实扬州也配得上“自古繁华”这四个字。特别是隋代开凿运河之后、扬州成为南北交通枢纽，商贾往来、文人荟萃，到了唐代甚至有“扬一益二”（《资治通鉴》卷二五九）的说法，有着“天府之国”美誉的益州，在扬州面前都只能甘拜下风。然而到了南宋，金兵屡屡南侵，而扬州因地处南北交通要道而屡遭兵燹，故辛弃疾有“四十三年，望中犹记，烽火扬州路”之语。建炎三年（1129），金军突袭扬州，迫使宋高宗狼狈南逃。后来由于“绍兴和议”、双方停战了一段时间，绍兴三十一年（1161），完颜亮撕毁和议，率军大举南侵，扬州再遭焚掠、元气大伤。隆兴元年（1163）南宋遭符离之败，次年金军再次渡淮攻宋，迫使南宋朝廷达成“隆兴和议”。孝宗淳熙三年（1176）冬至，年仅二十出头的姜夔经过扬州，眼见这座过去繁华无比的都市如今破败不堪，感慨万千，抚今追昔，写下了这首《扬州慢》。</p>
<p>​
词的正文前有一段小序，交代了写作背景，亦与词作正文彼此照应。由于时值冬至，又赶上“夜雪初霁”，天寒地冻，进人这样一座萧条破败的城市，夜幕降临，又有悲壮的戍角响起，诸多能够引发人悲凉情绪的因素叠加在一起，促成了这首作品的诞生。“千岩老人以为有黍离之悲也”一句，显然是后来追记的。千岩老人即萧德藻，是姜夔的前辈，欣赏姜夔的才华，还将侄女许配给他。黍离之悲则指《诗经·王风·黍离》表达的故国之思和今昔之感。</p>
<p>​
美言上阕开头两句很像柳永《望海潮》的开头，总括扬州的地位，是“名都”，有“佳处”，但当“解鞍少驻初程”，停下来看一看的时候，却看到了什么呢？“过春风十里，尽荠麦青青。”有学者读此词，以为既是冬至，何来“春风十里”，“难以索解”（彭玉平《唐宋词举要》），这是不识典故造成的。“春风十里”是借用杜牧《赠别》“春风十里扬州路”之意，“春风十里”即“扬州路”。这里写其昔日之繁华，而今却已是“荠麦青青”，成为一片片野麦丛生的荒地，上下两句形成了鲜明的对比。“自胡马窥江去后”点出了扬州衰败的原因，“废池乔木，犹厌言兵”则赋予无生命的景物以人的情感，仿佛那废弃的池塘和残存的古木也在控诉着对战争的厌倦，不难让人联想到“木犹如此，人何以堪”（《世说新语·言语》）。时至黄昏，凄清的号角声伴着寒风袭来，回荡在这座荒凉寂寥的空城之上，如何能不令人无限伤感？</p>
<p>​
下阕笔锋一转，悬想几百年前那个曾在扬州留下过无数经典诗篇的才华横溢的风流才子杜牧，就算他“穿越”到此时的扬州，看到此情此景，恐怕也要惊恐不已。杜牧的名字，几乎是可以与扬州捆绑在一起的。“娉娉袅袅十三余，豆蔻梢头二月初”“十年一觉扬州梦，赢得青楼薄幸名”，这是杜牧面对“春风十里”的扬州写下的千古名句，而当昔日的繁华荡然无存，就算再有诗才，也难写出这种情意绵绵的佳句了。“二十四桥仍在，波心荡，冷月无声”，又将历史与现实紧紧勾连：杜牧笔下的“二十四桥明月夜，玉人何处教吹箫”，何等浪漫的场景，到如今却成了“波心荡，冷月无声”，桥还是那二十四桥，明月化为冷月，玉人不知何处，强烈的物是人非之感油然而生。而桥边的芍药，纵使开花，又有何人来赏呢？芍药寂寞开放，是这座都市繁华不再、凄清冷落的表征。以此作结，宛如一声哀叹，传达出回味不尽的伤感。</p>
<p>​
综观全词，词人选取了大量清空冷寂的意象，营造出悲凄惨淡的氛围，同时多处化用杜牧诗中的典故，反复对照扬州昔日之繁盛与今日之破败，将战争给人们内心带来的创伤表达得淋漓尽致。其中的沉痛之感，比起《黍离》中那“悠悠苍天，此何人哉”的痛切呼号是毫不逊色的。</p>
<p>​
《望海湖》与《扬州慢》，均以城市为表现对象，一颂升平，一伤离乱，一铺张华丽，一曲折深锦，情感主旨与表达方式均有着显著的差别，通读时应有所留意。两首词的词牌均为首创，一般来说词牌只规定词作的格式，和内容往往没有什么关系，但这两首却是例外，词牌兼有题目的功能。除此之外，两首词还有另外一种有趣的关联。据南宋罗大经《鹤林玉露》丙编卷一，《望海潮》流传至金国，金主完颜亮闻之，“欣然有慕于‘三秋桂子，十里荷花’，遂起投鞭渡江之志”，于金正隆六年（1161，即南宋高宗绍兴三十一年）大举南下侵宋，一度攻占扬州，并作有《南征至维扬望江左》一诗：“万里车书一混同，江南岂有别疆封。屯兵百万西湖上，立马吴山第一峰。”但他没能如愿，很快就被宋军在采石击败，后被部将所杀。而这次南侵给扬州带来了深重的灾难，这才有了姜夔眼中的破败不堪的扬州。如果《鹤林玉露》的说法属实（当然，后世学者多认为其有夸张成分，近乎小说家言），那么大概可以说：没有《望海潮》，就没有《扬州慢》。</p>
<h2 id="参考资料">参考资料</h2>
<h3 id="参考译文">参考译文</h3>
<div class="classcial-chinese-literature-and-poetry-translation"><div class="paragraph"><p class="original-text">淳熙丙申至日，予过维扬。夜雪初霁，荠麦弥望。</p><p class="translation">丙申年冬至这天，我经过扬州。夜雪初晴，放眼望去，全是荠草和麦子。</p><p class="original-text">入其城，则四顾萧条，寒水自碧，暮色渐起，戍角悲吟。</p><p class="translation">进入扬州，一片萧条，河水碧绿凄冷，天色渐晚，城中响起凄凉的号角。</p><p class="original-text">予怀怆然，感慨今昔，因自度此曲。千岩老人以为有《黍离》之悲也。</p><p class="translation">我内心悲凉，感慨于扬州城今昔的变化，于是自创了这支曲子。千岩老人认为这首词有《黍离》的悲凉意蕴。</p></div><div class="paragraph"><p class="original-text">淮左名都，竹西佳处，解鞍少驻初程。过春风十里，尽荠麦青青。</p><p class="translation">扬州自古是著名的都会，这里有著名游览胜地竹西亭，初到扬州我解鞍下马稍作停留。昔日繁华热闹的扬州路，如今长满了青青荠麦，一片荒凉。</p><p class="original-text">自胡马窥江去后，废池乔木，犹厌言兵。渐黄昏，清角吹寒，都在空城。</p><p class="translation">金兵侵略长江流域地区，洗劫扬州后，只留下残存的古树和废毁的池台，都不愿再谈论那残酷的战争。临近黄昏，凄清的号角声响起，回荡在这座凄凉残破的空城。</p></div><div class="paragraph"><p class="original-text">杜郎俊赏，算而今重到须惊。纵豆蔻词工，青楼梦好，难赋深情。</p><p class="translation">杜牧俊逸清赏，料想他现在再来的话也会感到震惊。即使“豆蔻”词语精工，青楼美梦的诗意很好，也难抒写此刻深沉悲怆感情。</p><p class="original-text">二十四桥仍在，波心荡，冷月无声。念桥边红药，年年知为谁生？</p><p class="translation">二十四桥依然还在，桥下江水水波荡漾，月色凄冷，四周寂静无声。想那桥边红色的芍药花年年花叶繁荣，可它们是为谁生长为谁开放呢？</p></div></div>]]></content>
      <categories>
        <category>High School</category>
        <category>Chinese</category>
        <category>Classical Chinese Literature and Poetry</category>
      </categories>
      <tags>
        <tag>School Notes</tag>
        <tag>High School</tag>
        <tag>Chinese</tag>
      </tags>
  </entry>
  <entry>
    <title>蜀道难-李白</title>
    <url>/2022/03/25/chinese/High%20School/Classical%20Chinese%20Literature%20and%20Poetry/%E9%80%89%E6%8B%A9%E6%80%A7%E5%BF%85%E4%BF%AE/%E8%9C%80%E9%81%93%E9%9A%BE-%E6%9D%8E%E7%99%BD/</url>
    <content><![CDATA[<h2 id="课文解读">课文解读</h2>
<p>​
关于《蜀道难》的主旨，历来众说纷纭，主要有以下几种观点：一是忧虑剑南节度使严武会危害在蜀的房琯和杜甫，见于唐人范摅《云溪友议》卷上；二是讽刺四川军阀章仇兼琼（章仇为复姓），见于某些李白别集版本的题下小注；三是讽刺安史之乱后唐玄宗入蜀，见于元人萧士赟《分类补注李太白诗》；四是“即事成篇，别无寓意”，以明人胡震亨《唐音癸签》和清初顾炎武《日知录》为代表。经今人研究，前三种说法，或于史实不合，或于时间不符，都很难成立，第四种是比较稳妥的说法。也有人在第四种说法的基础上，认为诗中有寓意人生不易或功名难求的意味，此说也未成定论。一般认为此诗作于李白初入长安之时，对于人生艰难的感触不致如此痛切；更何况，如果是感叹人生不易，那么“锦城虽云乐，不如早还家”无疑就是一种出世、退避的态度了，这与李白这一阶段的思想状况是不合的。对比同一时期的《行路难》，他对人生艰难的认识不过是“欲渡黄河冰塞川，将登太行雪满山”，远不及他笔下的蜀道险恶；而最终的态度则是“长风破浪会有时，直挂云帆济沧海”，是积极的、乐观的、进取的，而非消极的、悲观的、退避的。即便诗中真有这样的情感，也不免有“为赋新词强说愁”之嫌。还有人据诗中“问君西游何时还”等语，将其断为送友人入蜀之作，与其集子中的《送友人入蜀》和《剑阁赋》是同一时期的作品。也有可能，这首诗其实并没有一个明确的送别对象，诗中那位“西游”之“君”或许只是虚拟出来的抒情对象。</p>
<p>​
据孟棨《本事诗·高逸》和王定保《唐摭言》卷七记载，李白初到长安，名声未振，拿《蜀道难》给当时京城文坛的领袖贺知章看，贺大为赞赏，目为“谪仙”“太白精星”，李白由此声名鹊起。这件轶事不见得真实，但可以看出《蜀道难》很早就已被当作李白的代表作。</p>
<p>​
诗歌开头便不同凡响。前七个字中只有“危”和“高”两个实词。“噫吁嚱”是蜀地方言，蜀人见物惊异辄发此惊叹（据宋庠《宋景文公笔记》），同为蜀人的苏轼也曾用过“呜呼噫嘻”这样的感叹（见《后赤壁赋》）。“乎”“哉”也是表示感叹的语气词，“危”和“高”都有高的意思，但并不是简单的同义复用，《国语》高诱注“危，高险也”，即兼有高大、险峻二义。一上来就惊呼并极力渲染蜀山之高大险峻，仿佛一座高山突然横亘在面前，真可谓“开门见山”。接下来的“蜀道之难，难于上青天”，是对蜀道难行的一个总括。这一总括并不抽象，而是借助了一个颇为形象可感的比较——“上青天”，极言蜀道之难（在修辞上称为“强喻”）。这句话在全诗之中凡三见，反复强化、渲染，也成为全诗中最广为人知的名句之一。接下来，诗人笔锋一转，将目光投向远古时代，回溯蜀国古老而光怪陆离的传说，写出了历史的纵深感，也为险峻的蜀道增加了几分神秘的色彩。蜀地与秦地多少年来由于崇山峻岭的阻隔，仅有“鸟道”可通，直至“五丁开山”（实际上是先秦时期开凿蜀道的一种间接反映）才出现“天梯石栈相钩连”的局面。这几句看似写蜀道的来历，但突出的仍是蜀山的险峻与蜀道开凿的艰辛。随后描写现如今的蜀道。“上有”句写山势高峻，高得连太阳都无法逾越，不得不掉头回转；“下有”句写谷深水急，江河至此再难浩荡，只得撞击岩石，改变方向，曲折行进。两句一仰一俯，拉开纵向的空间，蜀山仿佛是一堵高墙矗立于天地之间。“黄鹤”“猿猱”二句则用侧面烘托之法，振翅高飞的黄鹤、善于攀缘的猿猱都难以逾越，何况是人呢？“青泥”句起，才从人类的攀登感受写蜀道之难。“何盘盘”“百步九折萦岩峦”写出山路之盘曲，“扪参历井”道出山势之高峻，“仰胁息”有战战兢兢、如履薄冰之感，“以手抚膺坐长叹”则是一种徒唤奈何的情态。</p>
<p>​
接下来，诗人才透露出送别之意。原来诗人此前极力渲染的“蜀道难”，其实是出于对入蜀友人的关切。在亲切地询问友人“何时还”之后，诗人又旧话重提，再度渲染“蜀道难”。而这次的角度又有所不同。“但见”“又闻”四句，“见”“闻”互文见义，古木悲鸟，夜月子规，鸣声凄切，空谷响绝，一种悲凉愁苦乃至于阴森恐怖的气氛油然而生，有此见闻，如何不让人胆寒肠断。至此，诗人又情不自禁地高呼“蜀道之难，难于上青天”，还追加了一句“使人听此凋朱颜”，道出了一种“谈蜀道色变”之感。继而再次从视觉、听觉两方面人手，写山之高峻，壁之险绝，水之湍急咆哮，使人心惊胆战，在作了“其险也若此”的小结之后，又顺势向友人发出急切的叩问：“嗟尔远道之人胡为乎来哉！”较之前面的“问君西游何时还”的殷切询问，这里是叹大于问，情感在反复渲染“蜀道难”之后愈加强烈。</p>
<p>​
以下再换角度，从社会人事写蜀道之险。蜀道之难，不仅在于高山绝壁、险道急流这些自然因素，也可能存在人为因素。那“峥嵘而崔嵬，一夫当关，万夫莫开”的剑阁，如果不是可靠的人把守，一旦发生叛乱，便会如豺狼、猛虎、长蛇一样难以应付、躲避，而“磨牙吮血，杀人如麻”更把这种凶险描述得令人不寒而栗。有如此众多不安定的因素，锦官城的生活再快乐又如何？还是“不如归去”吧。末了，第三次感叹“蜀道之难，难于上青天”，并以“侧身西望长咨嗟”收束，与诗歌开头“噫吁嚱”的嗟叹遥相呼应，又给人余音绕梁之感。</p>
<p>​
优秀的文学作品，常常能在借鉴前人的基础上推陈出新，这首《蜀道难》也是如此。如“上有……下有…”的句式是从楚辞、汉赋中演化而来，“上有六龙回日之高标”脱胎于西晋左思《蜀都赋》中的“羲和假道于峻歧，阳乌回翼乎高标”，“一夫当关，万夫莫开”化用左思《蜀都赋》中的“一人守隘，万夫莫向”和西晋张载《剑阁铭》中的“一人荷戟，万夫趑趄”，“所守或匪亲，化为狼与豺”则来自张载《剑阁铭》中的“形胜之地，匪亲勿居”。但李白又能在前人的基础上有所突破创新。《蜀道难》是南朝乐府旧题，《乐府诗集》卷四十列于《相和歌辞·瑟调曲》，在李白之前，以此为题的诗作也大抵是写蜀地山川之险，现存的萧纲、刘孝威、阴铿、张文琮诸作均为五言诗，也相对较短，读起来似乎并不觉其险；而李白之作则以七言为主（其实也只占一半左右的篇幅），三言、四言、五言、八言、九言、十一言杂出并用，甚至融人了辞赋、古文的句法，句式的参差错落、节奏的变化不拘让人读来仿佛行进在崎岖不平的蜀道上，加之以丰富的想象、奇特的比喻、夸饰的笔法、反复的渲染，将蜀道之难描绘到极致，也将自己纵横排奡的诗风、奔放不羁的个性表现得淋漓尽致。</p>
<h2 id="参考资料">参考资料</h2>
<h3 id="参考译文">参考译文</h3>
<div class="classcial-chinese-literature-and-poetry-translation"><div class="paragraph"><p class="original-text">噫吁<ruby><rb>嚱</rb><rt>xī</rt></ruby>，危乎高哉！蜀道难以攀越，简直难于上青天。</p><p class="translation">唉呀呀！多么高峻伟岸！蜀道之难，难于上青天！</p><p class="original-text">蚕丛及鱼凫，开国何茫然！尔来四万八千岁，不与秦塞通人烟。</p><p class="translation">传说中蚕丛和鱼凫建立了蜀国，开国的年代实在久远无法详谈。从那时至今约有四万八千年了吧，秦蜀被秦岭所阻从不沟通往返。</p><p class="original-text">西当太白有鸟道，可以横绝峨眉巅。</p><p class="translation">西边太白山高峻无路只有飞鸟可以飞过此山，直到蜀国的峨眉山巅。</p><p class="original-text">地崩山摧壮士死，然后天梯石栈相钩连。</p><p class="translation">山崩地裂，埋葬了五位开山英雄壮士，这样以后高险的山路和栈道才相互勾连。</p><p class="original-text">上有六龙回日之高标，下有冲波逆折之回川。</p><p class="translation">蜀中上有挡住太阳神六龙车的山巅，下有激浪排空迂回曲折的大川。</p><p class="original-text">黄鹤之飞尚不得过，猿<ruby><rb>猱</rb><rt>náo</rt></ruby>欲度愁攀援。</p><p class="translation">善于高飞的黄鹤尚且无法飞过，即使猢狲要想翻过也愁于攀援。</p><p class="original-text">青泥何盘盘，百步九折萦岩峦。</p><p class="translation">青泥岭的泥路曲曲弯弯，百步九折萦绕着山峦。</p><p class="original-text"><ruby><rb>扪</rb><rt>mén</rt></ruby><ruby><rb>参</rb><rt>shēn</rt></ruby>历井仰胁息，以手抚膺坐长叹。</p><p class="translation">屏住呼吸仰头就可触摸参星和井星，紧张得透不过气来，用手抚胸惊恐不已徒长吁短叹。</p></div><div class="paragraph"><p class="original-text">问君西游何时还？畏途<ruby><rb>巉</rb><rt>chán</rt></ruby>岩不可攀。</p><p class="translation">好朋友呵请问你西游何时回还？这蜀道的峭岩险道实在难以登攀！</p><p class="original-text">但见悲鸟号古木，雄飞雌从绕林间。</p><p class="translation">只见那悲鸟在古树上哀鸣啼叫，雄雌相随飞翔在茂密树丛之间。</p><p class="original-text">又闻子规啼夜月，愁空山。</p><p class="translation">月夜又听到杜鹃凄凉悲啼，在空山中传响回荡，令人愁思绵绵无穷尽！</p><p class="original-text">蜀道之难，难于上青天，使人听此凋朱颜！</p><p class="translation">蜀道难以攀越，简直难于上青天，使人听到这些怎么不脸色突变？</p><p class="original-text">连峰去天不盈尺，枯松倒挂倚绝壁。</p><p class="translation">山峰座座相连离天还不到一尺，枯松老枝倒挂倚贴在绝壁之间。</p><p class="original-text">飞湍瀑流争喧<ruby><rb>豗</rb><rt>huī</rt></ruby>，<ruby><rb>砯</rb><rt>pīng</rt></ruby>崖转石万壑雷。</p><p class="translation">漩涡飞转瀑布飞泻争相喧闹着，飞流撞击着巨石在山谷中滚动像万壑鸣雷一般。</p><p class="original-text">其险也如此，嗟尔远道之人胡为乎来哉！</p><p class="translation">这样危险的地方，唉呀呀你这个远方而来的客人，为什么非要来这里不可呀？</p></div><div class="paragraph"><p class="original-text">剑阁峥嵘而崔嵬，一夫当关，万夫莫开。</p><p class="translation">剑阁所在崇峻巍峨高入云端，只要一人把守千军万马难攻占。</p><p class="original-text">所守或匪亲，化为狼与豺。</p><p class="translation">驻守的官员倘若不是可信赖的人，难免要变为豺狼，据险作乱。</p><p class="original-text">朝避猛虎，夕避长蛇，磨牙吮血，杀人如麻。</p><p class="translation">每日每夜都要躲避猛虎和长蛇，它们磨牙吮血，杀人如麻。</p><p class="original-text">锦城虽云乐，不如早还家。</p><p class="translation">锦官城虽然说是个快乐的所在；如此险恶还不如早早地把家还。</p><p class="original-text">蜀道之难，难于上青天，侧身西望长咨嗟！</p><p class="translation">蜀道难以攀越呵简直难于上青天，侧身西望令人不免感慨与长叹！</p></div></div>]]></content>
      <categories>
        <category>High School</category>
        <category>Chinese</category>
        <category>Classical Chinese Literature and Poetry</category>
      </categories>
      <tags>
        <tag>School Notes</tag>
        <tag>High School</tag>
        <tag>Chinese</tag>
      </tags>
  </entry>
  <entry>
    <title>孔雀东南飞并序</title>
    <url>/2022/03/25/chinese/High%20School/Classical%20Chinese%20Literature%20and%20Poetry/%E9%80%89%E6%8B%A9%E6%80%A7%E5%BF%85%E4%BF%AE/%E5%AD%94%E9%9B%80%E4%B8%9C%E5%8D%97%E9%A3%9E%E5%B9%B6%E5%BA%8F/</url>
    <content><![CDATA[<h2 id="课文解读">课文解读</h2>
<p>​
《孔雀东南飞》是中国古典叙事诗的代表作品。全诗结构宏大，情节曲折，语言生动细腻而平实流畅，在思想内涵和艺术表现方面都有很高的成就。</p>
<p>​ 全诗可以分为以下几个部分：</p>
<p>​
第一部分（第1段）是全诗的序曲。“孔雀东南飞，五里一徘徊”是起兴，虽然与诗的内容没有直接联系，但却为全诗确立了哀婉缠绵的基调。汉代诗歌常用鸿鹄徘徊比喻夫妻离别，如汉乐府《艳歌何尝行》（又名《飞鹄行》）：“飞来双白鹄，乃从西北来。十十将五五，罗列行不齐。忽然卒疲病，不能飞相随。五里一反顾，六里一徘徊。”《古艳歌》中也说：“孔雀东飞，苦寒无衣。为君作妻，中心恻悲。夜夜织作，不得下机。三日载匹，尚言吾迟。”</p>
<p>​
第二部分（第2一6段），写兰芝自请遣归，仲卿向母求情，终不获允。第2段，完全是刘兰芝向焦仲卿的告白。她历数自己的身世经历，从十三到十六，学会了“织素”“裁衣”，能“弹箜篌”，能“诵诗书”，表现出心灵手巧、热爱劳动、知书达礼、多才多艺的一面。“十七为君妇”，是她人生的转折点，却以“心中常苦悲”概而论之。这“苦悲”中，固然有对夫君的相思之苦，也包括夜以继日织布的劳作之苦，但更主要的是“大人”的刁难之苦。她对婆婆的“驱使”已不堪忍受，所以自请遣归。接下来，是仲卿向母求情，表示自已仕途暗淡，誓与兰芝同生共死，恩爱不渝。想不到，他卑怯的自陈，温和的质疑，却遭到其母严厉的训斥。在她眼里，这个儿媳不听话，不任她摆布。所以决定“遣去”，再为其子另娶。而仲卿哀伤的跪白，表示“终老不复娶”，又引来其母的暴怒。诗歌叙事至此，揭开矛盾冲突，刘兰芝被遣已成定局。</p>
<p>​
第三部分（第7一12段），写兰芝辞别焦家。先写告别夫君：面对他的哽咽、解释、谋划和宽慰，兰芝以“勿复重纷纭”一语否定，表明她对事态有着清醒的认识，已不抱什么幻想。她又义正词严地批驳了婆婆对自己“自专”的指责，说明自己的劳作、孝心之不被理解。她把自已的衣物、帷帐、箱奁留下，名曰“留待作遗施”，实则是给仲卿留作纪念，让他“时时为安慰，久久莫相忘”，表现出深深的留恋、惜别之情。再写兰芝认真地打扮自己：从头到脚，衣饰足履，样样妥帖。美丽无比，绝世无双。这展现了她的爱美之心，更表现了她的自尊与人格独立。她拜别婆婆，自言出身卑微，教养缺失，换来的只是“阿母怒不止”：她辞别小姑，忆抚今，泪如散珠。一句“初七及下九，嬉戏莫相忘”，多少情思尽在其中！离别的时刻终于到来，他的耳语相惜，她的感念希冀，总归于“二情同依依”。时间仿佛凝固定格，“举手长劳劳”的画面，千古以来成为描绘情人离别的经典。</p>
<p>​
第三部分（第13一23段），写兰芝归家，官府托媒，兰芝抗婚。面对母亲的责备，兰芝有的只是惭愧；面对母亲的催婚，兰芝以与仲卿的“结誓”为由婉拒，还是得到了母亲的理解。母亲为兰芝挡住了县令家的求娇，又婉拒了太守派来的媒人，表现出母爱的温情。但是，面对“阿兄”的逼婚，兰芝陷人了进退维谷的境地，最后答应了再婚——实则也抱定了必死的决心。而在太守强大威势、厚重彩礼面前，兰芝母最终也默许了这桩婚姻，并说“莫令事不举”。母亲态度的转变，使兰芝孤立无援，陷入绝境。她终日以泪洗面，愁肠百结。</p>
<p>​
第四部分（第24一31段），写焦仲卿与刘兰芝的诀别和殉情。这对情侣的对话，五味杂陈，无限酸楚。兰芝解释人事多变，家人逼婚难挡：仲卿重提二人旧誓，语带讥讽，并以死相约——实则是不能摆脱眼前事变的痛苦和对兰芝深深的爱恋。兰芝苦于不被理解，也发出了“黄泉下相见”的誓言。接下来，仲卿拜别其母，让铁石心肠的她“零泪应声落”。悲剧不可避免地发生了，当仲卿听说兰芝赴死清池，他也“自挂东南枝”。这对情侣，饱尝了生离之苦，希望在死后可以相聚。</p>
<p>​
第五部分（第32段），写焦、刘两家合葬已逝的情侣。兰芝、仲卿的精气魂魄，仿佛化成了一对鸳鸯，相向悲鸣，昼夜不停。白天，“行人驻足听”；夜里，“寡妇起彷徨”。这悲鸣的鸟声在提醒世人记取兰芝和仲卿生死与共的爱情和他们生前的抗争。</p>
<p>​
这首长篇叙事诗以女主人公被遣、抗婚、殉情的命运为线索，展现了复杂激烈的矛盾冲突，塑造了鲜明生动的人物形象，可以当作小说或戏剧来读。</p>
<p>​
刘兰芝美丽、聪明、勤劳、知礼、自尊，忠于爱情，又有着蔑视礼法、坚贞不屈、追求自由的性格特征。当婆婆的役使指责与厮守爱情形成不可调和的矛盾时，她毅然选择了离开，表现出极大的勇气和反抗精神。她深爱仲卿，依依惜别，表现出温婉柔情的一面；她拒抗再婚，最后以死明志，又表现出性格刚烈的一面。她面辞折磨她的婆婆，有礼有仪；告别一起嬉戏的小姑，珍重情谊。她含泪乞求母亲拒绝再婚，柔弱可怜；又“仰头”面对“阿兄”的逼婚，刚强可敬。在她身上，闪耀着美丽、真情、善意的光辉，表里澄澈，是古代文学作品中少有的反抗封建礼教、追求婚姻自由的女性形象。</p>
<p>​
焦仲卿是“大家子”，为“庐江府小吏”。他谨于职守，忠于爱情，正直纯朴。同时，又性格懦弱，优柔寡断，在母亲的威势之下俯首帖耳，不敢断然反抗。他深爱兰芝，在其母面前露出苦相，温和地质问她：“女行无偏斜，何意致不厚？”遭到母亲的厉声训斥后，他只有“长跪”，表示不再婚娶——这是他所能做到的最激烈的抗争，然后“默无声”地告退。他的行为举止，完全符合礼教规定。《礼记·内则》中说：“父母有过，下气怡色，柔声以谏。谏若不入，起敬起孝。”当仲卿决定殉情，与其母诀别时，还担心其母日后孤单，祝愿她寿比南山，表现出孝顺的性格特点。他送别兰芝，对接她回来还抱有幻想；他听说兰芝再嫁的消息后，请假暂归，以贺语反讽，以黄泉为誓，饱含无限悲酸；他听到兰芝的死讯，不忍独生，“自挂东南枝”。他有善良软弱的顺从，也有苦苦抗争的坚韧，更有为爱而死的忠贞不渝，表现出性格的多面性。</p>
<p>​
焦母的性格主要表现为专横跋扈，独断专行，蛮横无理。她不能容忍兰芝的个性，斥其为“自专由”，衔恨在心，耿耿于怀，表现出一个封建家长的强势和暴戾。归根到底，还是封建礼教给了她这样的权力。《礼记·内则》中规定：“子甚宜其妻，父母不说，出。”因此，即使面对哀哀求情的儿子，她也声色俱厉，无情无义地训斥。她无视仲卿和兰芝相亲相爱的事实，完全凭着自己的心意行事，坚决拆散了他们。直到仲卿与她诀别，她在落泪之余，还是不思悔过，仍然卖弄为子另娶的谋略。</p>
<p>​
刘兄“性行暴如雷”，是一个没有责任心、自私自利、趋炎附势、见利忘义的市井小人。他斥责兰芝“作计何不量”，逼她再嫁，既不想让妹妹居家增加他的经济负担，又想让她嫁到豪门，使他得以攀附权贵，捞取利益。他的逼婚，最终把兰芝送上了绝路。</p>
<p>​
这首长篇叙事诗以人物对话为主体，体现出民歌的特点。同时，人物的对话，也推动了故事情节的发展，展现了矛盾冲突。清代陈祚明《采菽堂古诗选》中评论道：“历叙十许人口中语，各各肖其声情，神化之笔也。”如刘兰芝说“及时相遣归”“勿复重纷纭”，表明了她放弃幻想、毅然离去的决心；焦仲卿说“我自不驱卿，逼迫有阿母”，表现了他的软弱和无可奈何；焦母说“汝岂得自由”“小子无所畏，何敢助妇语”，活画出她的蛮横无理。这些人物语言，都声口可闻，对塑造人物形象起到了重要作用。另外，诗句的口语化、大量叠词的使用，以及一些互文句子（如最后一段里“东西植松柏，左右种梧桐。枝枝相覆盖，叶叶相交通”等），使诗歌具有鲜明的民歌特点。</p>
<p>​
这首诗经数百年的流传才见于著录，其间一定经过了很多文人的润色加工。诗中的叙述语言，大都是白描式的，精警凝练，如“举手长劳劳，二情同依依”“怅然遥相望，知是故人来”“生人作死别，恨恨那可论”等。这些议论和抒情的诗句，往往出现在情感发展达到高潮之处，起到了点睛的作用。</p>
<p>​
诗中赋、比、兴方法的运用，一方面继承了《诗经》的传统，另一方面也保留了民歌自身的特点。第2段开头兰芝自述种种技能修养，颇含自夸之情，即是赋的写法，有很强的冲击力；同样的话，在第13段经刘母重复一遍，就有了遗憾之意。这样内容相同，文字稍异的重复，也称“叠文”，有明显的讲故事痕迹。对同一事件，通过不同角色的叙述，收到回环往复的丰富意趣，这在通俗文学中，特别是后来的古代白话小说中比较常见。另外，写兰芝留物（“妾有绣腰糯”）、“起严妆”的两段，写太守下聘礼一段，写兰芝裁衣一段，都是赋的写法。比的写法虽然不多，但也颇为传神，如对兰芝化妆后的描写：“腰若流纨素”，“指如削葱根，口如含朱丹”。特别是第12段兰芝的“磐石蒲苇”之喻，是理解全诗的关键。兰芝正是不想让仲卿觉得她是“蒲苇一时纫”，才发出了“黄泉下相见”的誓言。诗的第1段用“兴”，凌空发端，起到了创设氛围、笼罩全篇的作用。</p>
<p>​
剪裁精当，也是这首诗的一个突出特点。诗的开头，并没有赘叙两家的家世，而是让人物直接出场；结尾也并没有写两家的悔恨悲伤，而尽在不言之中。清代的沈德潜在《古诗源》中评论说：“入手若叙两家家世，末段若叙两家如何悲恸，岂不冗慢拖沓？故竟以一二语了之，极长诗中具有裁剪也。”其他例子，如兰芝拜别焦母、小姑，皆无答语，为读者的想象力留足空间，可谓“无声胜有声”</p>
<h2 id="参考资料">参考资料</h2>
<h3 id="参考译文">参考译文</h3>
<div class="classcial-chinese-literature-and-poetry-translation"><div class="paragraph"><p class="original-text">汉末建安中，庐江府小吏焦仲卿妻刘氏，为仲卿母所遣，</p><p class="translation">东汉末年建安年间，庐江府小吏焦仲卿的妻子刘氏，被仲卿的母亲驱赶回娘家，</p><p class="original-text">自誓不嫁。其家逼之，乃投水而死。</p><p class="translation">她发誓不再改嫁。但她娘家的人一直逼着她再嫁，她只好投水自尽。</p><p class="original-text">仲卿闻之，亦自缢于庭树。时人伤之，为诗云尔。</p><p class="translation">焦仲卿听到妻子的死讯后，也吊死在自己家里庭院的树上。当时的人哀悼他们，便写了这样一首诗。</p></div><div class="paragraph"><p class="original-text">孔雀东南飞，五里一徘徊。</p><p class="translation">孔雀朝着东南方向飞去，每飞五里便是一阵徘徊。</p><p class="original-text">“十三能织素，十四学裁衣。</p><p class="translation">“我十三岁就能织出白色的丝绢，十四岁就学会了裁衣。</p><p class="original-text">十五弹箜篌，十六诵诗书。十七为君妇，心中常苦悲。</p><p class="translation">十五岁学会弹箜篌，十六岁就能诵读诗书。十七岁做了你的妻子，但心中常常感到痛苦伤悲。</p><p class="original-text">君既为府吏，守节情不移。</p><p class="translation">你既然已经做了府吏，当然会坚守臣节专心不移。</p><p class="original-text">贱妾留空房，相见常日稀。</p><p class="translation">只留下我孤身一人待在空房，我们见面的日子常常是日渐疏稀。</p><p class="original-text">鸡鸣入机织，夜夜不得息。</p><p class="translation">每天当鸡叫的时候我就进入机房纺织，天天晚上都不能休息。</p><p class="original-text">三日断五匹，大人故嫌迟。</p><p class="translation">三天就能在机上截下五匹布，但婆婆仍然嫌我织得慢。</p><p class="original-text">非为织作迟，君家妇难为！</p><p class="translation">不是我纺织缓慢行动松弛，而是你家的媳妇难做公婆难服侍。</p><p class="original-text">妾不堪驱使，徒留无所施。</p><p class="translation">我已经受不了你家这样的驱使，徒然留下来也没有什么用处无法再驱驰。</p><p class="original-text">便可白公<ruby><rb>姥</rb><rt>mǔ</rt></ruby>，及时相遣归。”</p><p class="translation">你这就禀告婆婆，及时遣返我送我回娘家去。”</p></div><div class="paragraph"><p class="original-text">府吏得闻之，堂上启阿母：</p><p class="translation">府吏听到这些话，便走到堂上禀告阿母：</p><p class="original-text">“儿已薄禄相，幸复得此妇。</p><p class="translation">“儿已经没有做高官享厚禄的福相，幸而娶得这样一个好媳妇。</p><p class="original-text">结发同枕席，黄泉共为友。</p><p class="translation">刚成年时我们便结成同床共枕的恩爱夫妻，并希望同生共死直到黄泉也相伴为伍。</p><p class="original-text">共事二三年，始尔未为久。</p><p class="translation">我们共同生活才过了两三年，（婚姻生活）才开头，还不算很久。</p><p class="original-text">女行无偏斜，何意致不厚。”</p><p class="translation">她的行为没有什么不正当，哪里想到竟会招致你的不满得不到慈爱亲厚。”</p></div><div class="paragraph"><p class="original-text">阿母谓府吏：“何乃太区区！</p><p class="translation">阿母对府吏说：“你怎么这样愚拙</p><p class="original-text">此妇无礼节，举动自专由。</p><p class="translation">这个媳妇不懂得礼节，一举一动完全凭（她）自己的意思</p><p class="original-text">吾意久怀忿，汝岂得自由！</p><p class="translation">我心中早已怀着愤怒，你哪能自作主张对她迁就。</p><p class="original-text">东家有贤女，自名秦罗敷。</p><p class="translation">东邻有个贤惠的女子，她的名字叫秦罗敷。</p><p class="original-text">可怜体无比，阿母为汝求。</p><p class="translation">她可爱的体态没有谁能比得上，我当为你的婚事去恳求。</p><p class="original-text">便可速遣之，遣去慎莫留！”</p><p class="translation">你就应该把兰芝快赶走，把她赶走千万不要让她再停留！”</p></div><div class="paragraph"><p class="original-text">府吏长跪告：“伏惟启阿母。</p><p class="translation">府吏直身长跪作回答，他恭恭敬敬地再向母亲哀求：“</p><p class="original-text">今若遣此妇，终老不复取！”</p><p class="translation">现在如果赶走这个媳妇，儿到老也不会再娶别的女子！”</p></div><div class="paragraph"><p class="original-text">阿母得闻之，槌床便大怒：</p><p class="translation">阿母听了府吏这些话，便敲着坐床大发脾气：</p><p class="original-text">“小子无所畏，何敢助妇语！</p><p class="translation">“你这小子胆子太大毫无畏惧，你怎么敢帮着媳妇胡言乱语。</p><p class="original-text">吾已失恩义，会不相从许！”</p><p class="translation">我对她已经断绝了情谊，对你的要求决不会依从允许！”</p></div><div class="paragraph"><p class="original-text">府吏默无声，再拜还入户。</p><p class="translation">府吏默默不说话，再拜之后辞别阿母回到自己的房里。</p><p class="original-text">举言谓新妇，哽咽不能语：</p><p class="translation">开口向媳妇说话，悲痛气结已是哽咽难语：</p><p class="original-text">“我自不驱卿，逼迫有阿母。</p><p class="translation">“我本来不愿赶你走，但阿母逼迫着要我这样做。</p><p class="original-text">卿但暂还家，吾今且报府。</p><p class="translation">但你只不过是暂时回到娘家去，现在我也暂且回到县官府。</p><p class="original-text">不久当归还，还必相迎取。</p><p class="translation">不久我就要从府中回家来，回来之后一定会去迎接你。</p><p class="original-text">以此下心意，慎勿违吾语。”</p><p class="translation">你就为这事委屈一下吧，千万不要违背我这番话语。”</p></div><div class="paragraph"><p class="original-text">新妇谓府吏：“勿复<ruby><rb>重</rb><rt>chóng</rt></ruby>纷纭。</p><p class="translation">兰芝对府吏坦陈：“不要再这样麻烦反复叮咛！</p><p class="original-text">往昔初阳岁，谢家来贵门。</p><p class="translation">记得那年初阳的时节，我辞别娘家走进你家门。</p><p class="original-text">奉事循公姥，进止敢自专？</p><p class="translation">侍奉公婆都顺着他们的心意，一举一动哪里敢自作主张不守本分？</p><p class="original-text">昼夜勤作息，伶<ruby><rb>俜</rb><rt>pīng</rt></ruby>萦苦辛。</p><p class="translation">日日夜夜勤劳地操作，孤身一人周身缠绕着苦辛。</p><p class="original-text">谓言无罪过，供养卒大恩；</p><p class="translation">自以为可以说是没有什么罪过，能够终身侍奉公婆报答他们的大恩。</p><p class="original-text">仍更被驱遣，何言复来还！</p><p class="translation">但仍然还是要被驱赶，哪里还谈得上再转回你家门。</p><p class="original-text">妾有绣腰<ruby><rb>襦</rb><rt>rú</rt></ruby>，葳<ruby><rb>蕤</rb><rt>ruí</rt></ruby>自生光；</p><p class="translation">我有一件绣花的短袄，绣着光彩美丽的花纹。</p><p class="original-text">红罗复斗帐，四角垂香囊；</p><p class="translation">还有一床红罗做的双层斗形的小帐，四角都垂挂着香囊。</p><p class="original-text">箱帘六七十，绿碧青丝绳，物物各自异，种种在其中。</p><p class="translation">大大小小的箱子有六七十个，都是用碧绿的丝线捆扎紧。里面的东西都各不相同，各种各样的东西都收藏其中。</p><p class="original-text">人贱物亦鄙，不足迎后人，留待作<ruby><rb>遗</rb><rt>wèi</rt></ruby>施，于今无会因。</p><p class="translation">人既然低贱东西自然也卑陋，不值得用它们来迎娶后来的新人。你留着等待以后有机会施舍给别人吧，走到今天这一步今后不可能再相会相亲。</p><p class="original-text">时时为安慰，久久莫相忘！”</p><p class="translation">希望你时时安慰自己，长久记住我不要忘记我这苦命的人。”</p></div><div class="paragraph"><p class="original-text">鸡鸣外欲曙，新妇起严妆。</p><p class="translation">当公鸡呜叫窗外天快要放亮，兰芝起身精心地打扮梳妆。</p><p class="original-text">著我绣夹裙，事事四五通。</p><p class="translation">她穿上昔日绣花的裌裙，梳妆打扮时每件事都做了四五遍才算妥当。</p><p class="original-text">足下蹑丝履，头上玳瑁光。</p><p class="translation">脚下她穿着丝鞋，头上的玳瑁簪闪闪发光。</p><p class="original-text">腰若流纨素，耳<ruby><rb>著</rb><rt>zhuó</rt></ruby>明月珰。</p><p class="translation">腰间束着流光的白绸带，耳边挂着明月珠装饰的耳珰。</p><p class="original-text">指如削葱根，口如含朱丹。</p><p class="translation">十个手指像尖尖的葱根又细又白嫩，嘴唇涂红像含着朱丹一样。</p><p class="original-text">纤纤作细步，精妙世无双。</p><p class="translation">她轻轻地小步行走，艳丽美妙真是举世无双。</p></div><div class="paragraph"><p class="original-text">上堂拜阿母，阿母怒不止。</p><p class="translation">她走上堂去拜别阿母，阿母听任她离去而不挽留阻止。</p><p class="original-text">“昔作女儿时，生小出野里。</p><p class="translation">“从前我做女儿的时候，从小就生长在村野乡里。</p><p class="original-text">本自无教训，兼愧贵家子。</p><p class="translation">本来就没有受到教管训导，更加惭愧的是又嫁到你家愧对你家的公子。</p><p class="original-text">受母钱帛多，不堪母驱使。</p><p class="translation">受了阿母许多金钱和财礼，却不能胜任阿母的驱使。</p><p class="original-text">今日还家去，念母劳家里。”</p><p class="translation">今天我就要回到娘家去，还记挂着阿母孤身操劳在家里。”</p><p class="original-text">却与小姑别，泪落连珠子。</p><p class="translation">她退下堂来又去向小姑告别，眼泪滚滚落下像一连串的珠子。</p><p class="original-text">“新妇初来时，小姑始扶床；</p><p class="translation">“我这个新媳妇初嫁过来时，小姑刚学走路始会扶床。</p><p class="original-text">今日被驱遣，小姑如我长。</p><p class="translation">今天我被驱赶回娘家，小姑的个子已和我相当。</p><p class="original-text">勤心养公姥，好自相扶将。</p><p class="translation">希望你尽心地侍奉我的公婆，好好地扶助他们精心奉养。</p><p class="original-text">初七及下九，嬉戏莫相忘。”</p><p class="translation">每当七夕之夜和每月的十九日，玩耍时千万不要把我忘。”</p><p class="original-text">出门登车去，涕落百余行。</p><p class="translation">她走出家门上车离去，眼泪落下百多行。</p></div><div class="paragraph"><p class="original-text">府吏马在前，新妇车在后。</p><p class="translation">府吏骑着马走在前头，兰芝坐在车上跟在后面走。</p><p class="original-text">隐隐何<ruby><rb>甸</rb><rt>tián</rt></ruby>甸，俱会大道口。</p><p class="translation">车声时而小声隐隐时而大声甸甸，但车和马都一同到达了大道口。</p><p class="original-text">下马入车中，低头共耳语：</p><p class="translation">府吏下马走进车中，低下头来在兰芝身边低声细语：</p><p class="original-text">“誓不相隔卿，且暂还家去。</p><p class="translation">“我发誓不同你断绝，你暂且回到娘家去。</p><p class="original-text">吾今且赴府，不久当还归。誓天不相负！”</p><p class="translation">我今日也暂且赶赴官府，不久我一定会回来，我向天发誓永远不会辜负你。”</p></div><div class="paragraph"><p class="original-text">新妇谓府吏：“感君区区怀！</p><p class="translation">兰芝对府吏说：“感谢你对我的诚心和关怀。</p><p class="original-text">君既若见录，不久望君来。</p><p class="translation">既然承蒙你这样的记着我，不久之后我会殷切地盼望着你来。</p><p class="original-text">君当作磐石，妾当作蒲苇。</p><p class="translation">你应当像一块大石，我必定会像一株蒲苇。</p><p class="original-text">蒲苇纫如丝，磐石无转移。</p><p class="translation">蒲苇像丝一样柔软但坚韧结实，大石也不会转移。</p><p class="original-text">我有亲父兄，性行暴如雷，恐不任我意，逆以煎我怀。”</p><p class="translation">只是我有一个亲哥哥，性情脾气不好常常暴跳如雷。恐怕不能任凭我的心意由我自主，他一定会违背我的心意使我内心饱受熬煎。”</p></div><div class="paragraph"><p class="original-text">举手长劳劳，二情同依依 。</p><p class="translation">两人忧伤不止地举手告别，双方都依依不舍情意绵绵。</p><p class="original-text">入门上家堂，进退无颜仪。</p><p class="translation">兰芝回到娘家进了大门走上厅堂，进退为难觉得脸面已失去。</p><p class="original-text">阿母大<ruby><rb>拊</rb><rt>fǔ</rt></ruby>掌，不图子自归：</p><p class="translation">母亲十分惊异地拍着手说道：“想不到没有去接你你自己回到家里。</p><p class="original-text">“十三教汝织，十四能裁衣，十五弹箜篌，十六知礼仪，十七遣汝嫁，谓言无誓违。</p><p class="translation">十三岁我就教你纺织，十四岁你就会裁衣，十五岁会弹箜篌，十六岁懂得礼仪，十七岁时把你嫁出去，总以为你在夫家不会有什么过失。</p><p class="original-text">汝今何罪过，不迎而自归？”</p><p class="translation">你现在并没有什么罪过，为什么没有去接你你自己回到家里？”</p><p class="original-text">兰芝惭阿母：“儿实无罪过。”阿母大悲摧。</p><p class="translation">“我十分惭愧面对亲娘，女儿实在没有什么过失。”亲娘听了十分伤悲。</p></div><div class="paragraph"><p class="original-text">还家十余日，县令遣媒来。</p><p class="translation">回家才过了十多日，县令便派遣了一个媒人来提亲。</p><p class="original-text">云有第三郎，窈窕世无双。</p><p class="translation">说县太爷有个排行第三的公子，身材美好举世无双。</p><p class="original-text">年始十八九，<ruby><rb>便</rb><rt>pián</rt></ruby>言多令才。</p><p class="translation">年龄只有十八九岁，口才很好文才也比别人强。</p></div><div class="paragraph"><p class="original-text">阿母谓阿女：“汝可去应之。”</p><p class="translation">亲娘便对女儿说：“你可以出去答应这门婚事。”</p></div><div class="paragraph"><p class="original-text">阿女含泪答：“兰芝初还时，府吏见丁宁，结誓不别离。</p><p class="translation">兰芝含着眼泪回答说：“兰芝当初返家时，府吏一再嘱咐我，发誓永远不分离。</p><p class="original-text">今日违情义，恐此事非奇。自可断来信，徐徐更谓之。”</p><p class="translation">今天如果违背了他的情义，这门婚事就大不吉利。你就可以去回绝媒人，以后再慢慢商议。”</p></div><div class="paragraph"><p class="original-text">阿母白媒人：“贫贱有此女，始适还家门。</p><p class="translation">亲娘出去告诉媒人：“我们贫贱人家养育了这个女儿，刚出嫁不久便被赶回家里，不配做小吏的妻子，</p><p class="original-text">不堪吏人妇，岂合令郎君？幸可广问讯，不得便相许。”</p><p class="translation">哪里适合再嫁你们公子为妻？希望你多方面打听打听，我不能就这样答应你。”</p><p class="original-text">媒人去数日，寻遣丞请还，说有兰家女，承籍有宦官。</p><p class="translation">媒人去了几天后，那派去郡里请示太守的县丞刚好回来。他说：“在郡里曾向太守说起一位名叫兰芝的女子，出生于官宦人家。”</p><p class="original-text">云有第五郎，娇逸未有婚。</p><p class="translation">又说：“太守有个排行第五的儿子，貌美才高还没有娶妻。</p><p class="original-text">遣丞为媒人，主簿通语言。</p><p class="translation">太守要我做媒人，这番话是由主簿来转达。”</p><p class="original-text">直说太守家，有此令郎君，既欲结大义，故遣来贵门。</p><p class="translation">县丞来到刘家直接说：“在太守家里，有这样一个美好的郎君，既然想要同你家结亲，所以才派遣我来到贵府做媒人。”</p></div><div class="paragraph"><p class="original-text">阿母谢媒人：“女子先有誓，老姥岂敢言！”</p><p class="translation">兰芝的母亲回绝了媒人：“女儿早先已有誓言不再嫁，我这个做母亲的怎敢再多说？”</p></div><div class="paragraph"><p class="original-text">阿兄得闻之，怅然心中烦。</p><p class="translation">兰芝的哥哥听到后，心中不痛快十分烦恼，</p><p class="original-text">举言谓阿妹：“作计何不<ruby><rb>量</rb><rt>liáng</rt></ruby>！</p><p class="translation">向其妹兰芝开口说道：“作出决定为什么不多想一想！</p><p class="original-text">先嫁得府吏，后嫁得郎君。</p><p class="translation">先嫁是嫁给一个小府吏，后嫁却能嫁给太守的贵公子。</p><p class="original-text">否pǐ泰如天地，足以荣汝身。</p><p class="translation">命运好坏差别就像天和地，改嫁之后足够让你享尽荣华富贵。</p><p class="original-text">不嫁义郎体，其往欲何云？”</p><p class="translation">你不嫁这样好的公子郎君，往后你打算怎么办？”</p></div><div class="paragraph"><p class="original-text">兰芝仰头答：“理实如兄言。</p><p class="translation">兰芝抬起头来回答说：“道理确实像哥哥所说的一样，</p><p class="original-text">谢家事夫婿，中道还兄门。</p><p class="translation">离开了家出嫁侍奉丈夫，中途又回到哥哥家里，</p><p class="original-text">处分适兄意，那得自任专！</p><p class="translation">怎么安排都要顺着哥哥的心意，我哪里能够自作主张？</p><p class="original-text">虽与府吏<ruby><rb>要</rb><rt>yāo</rt></ruby>，渠会永无缘。</p><p class="translation">虽然同府吏有过誓约，但同他相会永远没有机缘。</p><p class="original-text">登即相许和，便可作婚姻。”</p><p class="translation">立即就答应了吧，就可以结为婚姻。”</p></div><div class="paragraph"><p class="original-text">媒人下床去。诺诺复尔尔。</p><p class="translation">媒人从坐床走下去，连声说好!好!就这样!就这样!</p><p class="original-text">还部白府君：“下官奉使命，言谈大有缘。”</p><p class="translation">他回到太守府禀告太守：“下官承奉着大人的使命，商议这桩婚事谈得很投机。”</p><p class="original-text">府君得闻之，心中大欢喜。</p><p class="translation">太守听了这话以后，心中非常欢喜。</p><p class="original-text">视历复开书，便利此月内，六合正相应。</p><p class="translation">他翻开历书反复查看，吉日就在这个月之内，月建和日辰的地支都相合。</p><p class="original-text">良吉三十日，今已二十七，卿可去成婚。</p><p class="translation">“成婚吉日就定在三十日，今天已是二十七日，你可立即去办理迎娶的事。”</p><p class="original-text">交语速装束，络绎如浮云。</p><p class="translation">彼此相互传语快快去筹办，来往的人连续不断像天上的浮云。</p><p class="original-text">青雀白<ruby><rb>鹄</rb><rt>hú</rt></ruby>舫，四角龙子<ruby><rb>幡</rb><rt>fān</rt></ruby>。</p><p class="translation">亲的船只上画着青雀和白鹄，船的四角还挂着绣着龙的旗子。</p><p class="original-text">婀娜随风转，金车玉作轮。</p><p class="translation">迎旗子随风轻轻地飘动，金色的车配着玉饰的轮。</p><p class="original-text"><ruby><rb>踯</rb><rt>zhí</rt></ruby><ruby><rb>躅</rb><rt>zhú</rt></ruby>青<ruby><rb>骢</rb><rt>cōng</rt></ruby>马，流苏金镂鞍。</p><p class="translation">驾上那毛色青白相杂的马缓步前进，马鞍两旁结着金线织成的缨子。</p><p class="original-text">赍钱三百万，皆用青丝穿。</p><p class="translation">送了聘金三百万，全部用青丝串联起。</p><p class="original-text">杂彩三百匹，交广市鲑珍。</p><p class="translation">各种花色的绸缎三百匹，还派人到交州广州购来海味和山珍。</p><p class="original-text">从人四五百，郁郁登郡门。</p><p class="translation">随从人员共有四五百，热热闹闹地齐集太守府前准备去迎亲。</p></div><div class="paragraph"><p class="original-text">阿母谓阿女：“适得府君书，明日来迎汝。</p><p class="translation">亲娘对兰芝说：“刚才得到太守的信，明天就要来迎娶你。</p><p class="original-text">何不作衣裳？莫令事不举！”</p><p class="translation">你为什么还不做好衣裳？不要让事情办不成!”</p></div><div class="paragraph"><p class="original-text">阿女默无声，手巾掩口啼，泪落便如泻。</p><p class="translation">兰芝默默不说话，用手巾掩口悲声啼，眼泪坠落就像流水往下泻。</p><p class="original-text">移我琉璃榻，出置前窗下。</p><p class="translation">移动她那镶着琉璃的坐榻，搬出来放到前窗下。</p><p class="original-text">左手持刀尺，右手执绫罗。</p><p class="translation">左手拿着剪刀和界尺，右手拿着绫罗和绸缎。</p><p class="original-text">朝成绣夹裙，晚成单罗衫。</p><p class="translation">早上做成绣裌裙，傍晚又做成单罗衫。</p><p class="original-text">晻晻日欲暝，愁思出门啼。</p><p class="translation">一片昏暗天时已将晚，她满怀忧愁想到明天要出嫁便伤心哭泣。</p></div><div class="paragraph"><p class="original-text">府吏闻此变，因求假暂归。</p><p class="translation">府吏听到这个意外的变故，便告假请求暂且回家去看看。</p><p class="original-text">未至二三里，摧<ruby><rb>藏</rb><rt>zàng</rt></ruby>马悲哀。</p><p class="translation">还未走到刘家大约还有二三里，人很伤心马儿也悲鸣。</p><p class="original-text">新妇识马声，蹑履相逢迎。</p><p class="translation">兰芝熟悉那匹马的鸣声，踏着鞋急忙走出家门去相迎。</p><p class="original-text">怅然遥相望，知是故人来。</p><p class="translation">心中惆怅远远地望过去，知道是从前的夫婿已来临。</p><p class="original-text">举手拍马鞍，嗟叹使心伤：</p><p class="translation">她举起手来拍拍马鞍，不断叹气让彼此更伤心。</p><p class="original-text">“自君别我后，人事不可量。</p><p class="translation">“自从你离开我之后，人事变迁真是无法预测和估量。</p><p class="original-text">果不如先愿，又非君所详。</p><p class="translation">果然不能满足我们从前的心愿，内中的情由又不是你能了解端详。</p><p class="original-text">我有亲父母，逼迫兼弟兄。</p><p class="translation">我有亲生的父母，逼迫我的还有我的亲兄长。</p><p class="original-text">以我应他人，君还何所望！”</p><p class="translation">把我许配了别的人，你还能有什么希望!”</p></div><div class="paragraph"><p class="original-text">府吏谓新妇：“贺卿得高迁！磐石方且厚，可以卒千年；</p><p class="translation">府吏对兰芝说：“祝贺你能够高升!大石方正又坚厚，可以千年都不变。</p><p class="original-text">蒲苇一时纫，便作旦夕间。卿当日胜贵，吾独向黄泉！”</p><p class="translation">蒲苇虽然一时坚韧，但只能坚持很短的时间。你将一天比一天生活安逸地位显贵，只有我独自一人下到黄泉。”</p></div><div class="paragraph"><p class="original-text">新妇谓府吏：“何意出此言！</p><p class="translation">兰芝对府吏说：“想不到你会说出这样的话!</p><p class="original-text">同是被逼迫，君尔妾亦然。</p><p class="translation">两人同样是被逼迫，你是这样我也是这样受熬煎。</p><p class="original-text">黄泉下相见，勿违今日言！”</p><p class="translation">我们在黄泉之下再相见，不要违背今天的誓言!”</p><p class="original-text">执手分道去，各各还家门。</p><p class="translation">他们握手告别分道离去，各自都回到自己家里面。</p><p class="original-text">生人作死别，恨恨那可论？</p><p class="translation">活着的人却要做死的离别，心中抱恨哪里能够说得完。</p><p class="original-text">念与世间辞，千万不复全！</p><p class="translation">他们都想很快地离开人世，无论如何也不愿苟且偷生得保全。</p></div><div class="paragraph"><p class="original-text">府吏还家去，上堂拜阿母：</p><p class="translation">府吏回到自己家，上堂拜见阿母说：</p><p class="original-text">“今日大风寒，寒风摧树木，严霜结庭兰。</p><p class="translation">“今天风大天又寒，寒风摧折了树木，浓霜冻坏了庭院中的兰花。</p><p class="original-text">儿今日冥冥，令母在后单。</p><p class="translation">我今天已是日落西山生命将终结，让母亲独留世间以后的日子孤单。</p><p class="original-text">故作不良计，勿复怨鬼神！</p><p class="translation">我是有意作出这种不好的打算，请不要再怨恨鬼神施责罚!</p><p class="original-text">命如南山石，四体康且直！”</p><p class="translation">但愿你的生命像南山石一样的久长，身体强健又安康。”</p></div><div class="paragraph"><p class="original-text">阿母得闻之，零泪应声落：</p><p class="translation">阿母听到了这番话，泪水随着语声往下落：</p><p class="original-text">“汝是大家子，仕宦于台阁。</p><p class="translation">“你是大户人家的子弟，一直做官在官府台阁。</p><p class="original-text">慎勿为妇死，贵贱情何薄！</p><p class="translation">千万不要为了一个妇人去寻死，贵贱不同你将她遗弃怎能算情薄？</p><p class="original-text">东家有贤女，窈窕艳城郭，阿母为汝求，便复在旦夕。”</p><p class="translation">东邻有个好女子，苗条美丽全城称第一。做母亲的为你去求婚，答复就在这早晚之间。”</p></div><div class="paragraph"><p class="original-text">府吏再拜还，长叹空房中，作计乃尔立。转头向户里，渐见愁煎迫。</p><p class="translation">府吏再拜之后转身走回去，在空房中长叹不已。他的决心就这样定下了，把头转向屋子里，心中忧愁煎迫一阵更比一阵紧。</p></div><div class="paragraph"><p class="original-text">其日牛马嘶，新妇入青庐。</p><p class="translation">迎亲的那一天牛马嘶叫，新媳妇兰芝被迎娶进入青色帐篷里。</p><p class="original-text">奄奄黄昏后，寂寂人定初。</p><p class="translation">天色昏暗已是黄昏后，静悄悄的四周无声息。</p><p class="original-text">“我命绝今日，魂去尸长留！”</p><p class="translation">“我的生命终结就在今天，只有尸体长久留下我的魂魄将要离去。”</p><p class="original-text">揽裙脱丝履，举身赴清池。</p><p class="translation">她挽起裙子脱下丝鞋，纵身一跳投进了清水池。</p></div><div class="paragraph"><p class="original-text">府吏闻此事，心知长别离。徘徊庭树下，自挂东南枝。</p><p class="translation">府吏听到了这件事，心里知道这就是永远的别离，于是来到庭院大树下徘徊了一阵，自己吊死在东南边的树枝。</p></div><div class="paragraph"><p class="original-text">两家求合葬，合葬华山傍。</p><p class="translation">家要求将他们夫妻二人合葬，结果合葬在华山旁。</p><p class="original-text">东西植松柏，左右种梧桐。</p><p class="translation">坟墓东西两边种植着松柏，左右两侧栽种梧桐。</p><p class="original-text">枝枝相覆盖，叶叶相交通。</p><p class="translation">各种树枝枝枝相覆盖，各种树叶叶叶相连通。</p><p class="original-text">中有双飞鸟，自名为鸳鸯。</p><p class="translation">中间又有一对双飞鸟，鸟名本是叫鸳鸯。</p><p class="original-text">仰头相向鸣，夜夜达五更。</p><p class="translation">它们抬起头来相对鸣叫，每晚都要鸣叫一直叫到五更。</p><p class="original-text">行人驻足听，寡妇起彷徨。</p><p class="translation">过路的人都停下脚步仔细听，寡妇惊起更是不安和彷徨。</p><p class="original-text">多谢后世人，戒之慎勿忘。</p><p class="translation">我要郑重地告诉后来的人，以此为鉴戒千万不要把它忘。</p></div></div>]]></content>
      <categories>
        <category>High School</category>
        <category>Chinese</category>
        <category>Classical Chinese Literature and Poetry</category>
      </categories>
      <tags>
        <tag>School Notes</tag>
        <tag>High School</tag>
        <tag>Chinese</tag>
      </tags>
  </entry>
  <entry>
    <title>离骚（节选）-屈原</title>
    <url>/2022/03/25/chinese/High%20School/Classical%20Chinese%20Literature%20and%20Poetry/%E9%80%89%E6%8B%A9%E6%80%A7%E5%BF%85%E4%BF%AE/%E7%A6%BB%E9%AA%9A%EF%BC%88%E8%8A%82%E9%80%89%EF%BC%89-%E5%B1%88%E5%8E%9F/</url>
    <content><![CDATA[<h2 id="课文解读">课文解读</h2>
<p>​
《离骚》是楚辞的代表作品。关于“离骚”之义，古今学者众说纷纭。司马迁在《史记·屈原列传》中解释为“离忧”，即遭遇忧愁；王逸《楚辞章句》释为“别愁”。这两家的解释较为通行，而以《史记》的诠释更为人们认可。有的学者认为，以忧愁解“骚”，尚不能尽意。“骚”之为“忧愁”，另含“扰动不安”之意，表现了屈原“心烦意乱、去住不宁”（钱澄之《庄屈合诂》）的矛盾心理。</p>
<p>​
清人王邦采在《离骚汇订》中将《离骚》全诗分为三个部分：第一部分，从开头到“岂余心之可惩”，写诗人政治斗争失败后的苦闷情怀；第二部分，从“女嬃之婵媛兮”到“余焉能忍与此终古”，写诗人在幻想世界中寻求理想的实现；其余为第三部分，写诗人犹豫徘徊，终不忍去国远游。课文节选的是第一部分，有所删节。</p>
<p>​
诗的开篇，诗人自叙族源出身。颛顼为中国远古部落联盟首领，传说的“五帝”之一。奉其为远祖，表明了屈原对华夏文化的认同。太岁在寅，庚寅而生，表明他是在寅年寅月寅日生的。庚寅，在楚国风俗中被认为是吉祥日；生逢三寅，是吉祥的征兆，当时有“男命起寅”之说。正因为有如此的“初度”，诗人的父亲欣喜之际，赐他“嘉名”。《史记·屈原列传》：“屈原者，名平，楚之同姓也。”《离骚》中所说的“正则”“灵均”，都与“平”有语意上的关联。王逸：“正，平也。则，法也。”《玉篇》：“均，平也。”《周礼·小司徒》中也有“乃均土地”之语。灵，当为美称。帛书《十六经》记载了黄帝问其大臣的一段话：“唯余一人，兼有天下，今余欲畜而正之，均而平之，为之若何？”可见，正、均、平，皆为古人的政治理想。屈原的名字，源于度量衡，其父在给他起名、字时，是颇费一番斟酌的，寓意也比较明显。这连同生日的吉利，构成了屈原天生的“内美”。所以朱熹说：“生得日月之良，是天赋我美质于内也。”（《楚辞集注》）诗人因出身高贵而自负、自傲、自爱，这是他高洁的自我形象的一个内因，却也是构成他悲剧命运的一个因素。</p>
<p>​
与先天的“内美”相对的，是后天的“修能”。明代汪瑗解释道：“内美是得之祖、父与天者，修能是勉之于己者。”（《楚辞集解》）无论是佩带香草，还是朝取木兰，夕撷宿莽，都是一种隐喻，是诗人志趣高洁的表征。这种洁身自好的追求，随着春秋代序、岁月流逝而更加迫切。美人迟暮，如同草木零落，虽有雄心壮志，何以施展？因此，诗人决心趁年岁未老，为国家除污去秽，改变法度。驾驭骏马，“道夫先路”，这是何等的豪迈与自信！</p>
<p>​
然而，屈原的政治理想被黑暗的社会现实撞得粉碎，令他迷惘、徘徊，陷人痛苦的反思与抉择。“长太息以掩涕兮，哀民生之多艰”的呼号，千载而今，仍具有强大的震撼力，动人心魄。关心民生疾苦，是屈原美政理想最为崇高的一面。为此，他自我修饰，自我约束，希望用自己的美德和政见打动君王。但由于“王听之不聪也，谗谄之蔽明也”（《史记·屈原列传》）、其政治理想无从实现。诗中说“朝谇而夕替”，愤懑之情，溢于言表。接下来，诗人继续对“夕替”表示愤愤不平。他佩戴的香草——亦即他的政治主张，都被废弃了，替之以什么呢？诗人在这里隐而不言。我们从后文的两句诗，即“何昔日之芳草，今直为此萧艾也”约略可以找到答案。原来，替代屈原的香草的，是萧艾（白蒿）一类的野草。诗人遭受挫折，仍坚信自己的主张是对的，所以发出了“虽九死其犹未悔”的誓言。由于楚王骄纵狂放，不体察人心，不采纳屈原的政见，无形中鼓励了谗臣对屈原的诋毁。正如司马迁所说：“女无美恶，居宫见妒；士无贤不肖，入朝见疑。”（《史记·扁鹊仓公列传》）“固时俗之工巧兮”等四句，诗人以工匠的规矩、绳墨比喻法度、法规，直斥朝中那些破坏规矩法度的谄媚之徒。不能背离准则，坚持原则，从中我们可以看到屈原的法治思想，也不禁让人联想到他名字中的正、均、平，亦可见其父给他命名时的期待对屈原性格形成的影响。由于“举世皆浊我独清，众人皆醉我独醒”（《渔父》），屈原深切地感受到了在人群中的孤独。他抑郁愁苦，进退无路，颇怀舍生取义之志，表示：“宁溘死以流亡兮，余不忍为此态也！”他以品性刚烈、卓尔不群的鸷鸟自比，以方圆不合（方枘圆凿）、异道难同为喻，表明了不肯与朝中奸臣同流合污的意志。他宁可委屈自己，压抑心志，承受责骂侮辱，也要固守气节，正道直行。如果因此而死去，那不也正是前代圣人所推崇的精神吗？诗歌至此，诗人的身世、情操、理想，他爱国爱民、坚持真理、不屈不挠的情怀，都形象生动地表现出来了。</p>
<p>​
从“悔相道之不察”开始，诗意转为悔悟、反思、延宕、徘徊。诗人用悔、反、回、复等词语，描写了他的精神状态。他策马徐行于兰草水边、芳椒山冈，思绪万千。他想到自己不但不能容于朝中，反而获罪，就打算退到未仕之初的状态。“初服”，就是没有被官场染污的“清洁之服”，可用芰荷为衣，芙蓉为裳。“不吾知其亦已矣，苟余情之信芳”，诗人用这样顿挫有力的倒装句，表明自己的心志，表示要返回充盈的自我。高冠岌岌，长佩陆离，是屈原典型的自我画像。他在《涉江》一诗的开头也说：“余幼好此奇服兮，年既老而不衰。带长铗之陆离兮，冠切云之崔嵬。”这样的“初服”，才能保持诗人纯洁的本性，才能保持一份悠然自得的闲适，让诗人游目骋怀，“观乎四荒”。所以，在诗人看来，缤纷芳香的衣饰，与美好的心灵互为表里，相得益彰。诗人喜欢美服奇饰，如同世人“各有所乐”一样。他的这一嗜好，固然出于他的爱美之心，也是因为他立身高洁。挫折坎坷，甚至死亡，都不能让他改变这样的追求。</p>
<p>​
司马迁在《史记》中对屈原作出了最为经典的评价：“其志洁，故其称物芳；其行廉，故死而不容。”“虽放流，眷顾楚国，不忘欲反，冀幸君之一悟，俗之一改也。其存君兴国而欲反覆之，一篇之中三致志焉。”又说屈原的精神，“虽与日月争光可也”。在《离骚》中，屈原表现出洁身自好、“好修以为常”的性格特征，对其心中追求的美政，矢志不渝。他反复致意，申述自己遵守绳墨规矩法度，宁可“死直”，也要维护自己的清白，显现出“独立不迁”、耿介拔俗的个性。</p>
<p>​
《离骚》“书楚语，作楚声，纪楚地，名楚物，故可谓之楚词”（黄伯思《东观余论·校定楚词序》），具有浓郁的楚文化色彩。源于楚地歌谣的以“三三”“三二”节奏为主的六字句和五字句，形成了辞赋的基本形式，对两汉及其后的文学语言产生了深刻的影响。诗人运用奔放而瑰丽的想象，将楚地特有的风物引人诗篇，表达自己的情感与追求。繁多的比喻，不但使叙事、说理更加生动形象，也使情感的抒发更加委婉含蓄，蕴藉有致。“香草美人”等许多比喻，也从此成为中国古典文学语言的基本元素。同时，《离骚》的语言除了华美之外，还具有警策、凝练的特质。特别是“虽九死其犹未悔”“宁溘死以流亡兮”“伏清白以死直兮”“虽体解吾犹未变兮”等自誓之词，正如司马迁所说那样，反复表白，直抒心志，情真意切。</p>
<h2 id="参考资料">参考资料</h2>
<h3 id="参考译文">参考译文</h3>
<div class="classcial-chinese-literature-and-poetry-translation"><div class="paragraph"><p class="original-text">帝高阳之苗裔兮，朕皇考曰伯庸。摄提贞于孟<ruby><rb>陬</rb><rt>zōu</rt></ruby>兮，惟庚<ruby><rb>寅</rb><rt>yín</rt></ruby>吾以降。</p><p class="translation">我是颛顼帝的远代子孙，父亲名为伯庸。正当寅年的寅月寅日，我降生了。</p><p class="original-text">皇览<ruby><rb>揆</rb><rt>kuí</rt></ruby>余初度兮，肇锡余以嘉名。名余曰正则兮，字余曰灵均。</p><p class="translation">父亲仔细揣测我的生辰，于是赐给我美名。父亲把我的名取为正则，同时把我的字叫作灵均。</p></div><div class="paragraph"><p class="original-text">纷吾既有此内美兮，又重之以修能。<ruby><rb>扈</rb><rt>hù</rt></ruby>江离与辟芷兮，纫秋兰以为佩。</p><p class="translation">我既有这么多美好的优秀品质，又加之以美好的容态。肩披江离芷草，将秋天的兰花连缀起来做成配饰。</p><p class="original-text">汩余若将不及兮，恐年岁之不吾与。朝<ruby><rb>搴</rb><rt>qiān</rt></ruby><ruby><rb>阰</rb><rt>pí</rt></ruby>之木兰兮，夕揽洲之宿莽。</p><p class="translation">光阴似箭我好像跟不上，岁月不等待人令我心慌。早晨我在大坡采集木兰，傍晚在小洲中摘取宿莽。</p><p class="original-text">日月忽其不淹兮，春与秋其代序。惟草木之零落兮，恐美人之迟暮。</p><p class="translation">时光迅速逝去不能久留，四季更相代谢变化有常。我想到草木已由盛到衰，恐怕自己身体逐渐衰老。</p><p class="original-text">不抚壮而弃秽兮，何不改此度？乘骐骥以驰骋兮，来吾道夫先路！……</p><p class="translation">何不利用年富力强去除邪恶污秽，何不改变现行的法度？乘上千里马纵横驰骋吧，来呀我在前面引导开路！</p></div><div class="paragraph"><p class="original-text">长太息以掩涕兮，哀民生之多艰。余虽好修<ruby><rb>姱</rb><rt>kuā</rt></ruby>以羁鞿（革几）兮，<ruby><rb>謇</rb><rt>jiǎn</rt></ruby>朝谇而夕替。</p><p class="translation">我揩着眼泪啊声声长叹，可怜人生道路多么艰难。我虽崇尚美德而严于律己，可早晨进谏晚上即遭贬。</p><p class="original-text">既替余以蕙（纟襄）兮，又申之以揽<ruby><rb>茝</rb><rt>chǎi</rt></ruby>。亦余心之所善兮，虽九死其犹未悔。</p><p class="translation">他们弹劾我佩带蕙草啊，又因我采白芷加我罪名。这是我心中追求的东西，就是多次死亡也不后悔。</p><p class="original-text">怨灵修之浩荡兮，终不察夫民心。众女嫉余之蛾眉兮，谣<ruby><rb>诼</rb><rt>zhuó</rt></ruby>谓余以善淫。</p><p class="translation">怨就怨楚王这样糊涂啊，他始终不体察别人心情。众多小人嫉妒我秀美的峨眉，诽谤我好做奸邪之事。</p><p class="original-text">固时俗之工巧兮，偭规矩而改错。背绳墨以追曲兮，竞周容以为度。</p><p class="translation">世俗本来是善于取巧的，背弃规矩而任意改变正常的措施。违背准绳而追求邪曲，争着把迎合讨好奉作法度。</p><p class="original-text"><ruby><rb>忳</rb><rt>tún</rt></ruby>郁邑余<ruby><rb>侘</rb><rt>chà</rt></ruby><ruby><rb>傺</rb><rt>chì</rt></ruby>兮，吾独穷困乎此时也。宁<ruby><rb>溘</rb><rt>kè</rt></ruby>死以流亡兮，余不忍为此态也。</p><p class="translation">忧愁烦闷而又失意，独有我在此时走投无路。宁可马上死去魂魄离散，媚俗取巧啊我坚决不干。</p><p class="original-text">鸷鸟之不群兮，自前世而固然。何方圜之能周兮，夫孰异道而相安？</p><p class="translation">猛禽不与凡鸟同群，原本自古以来就是这般。哪有方枘和圆锥能够契合，哪有道不同却能够相互安处的？</p><p class="original-text">屈心而抑志兮，忍尤而攘诟。伏清白以死直兮，固前圣之所厚。</p><p class="translation">受着委屈压抑着意志。忍受着责备和辱骂。保持清白节操死于直道，这本为古代圣贤所推崇。</p></div><div class="paragraph"><p class="original-text">悔<ruby><rb>相</rb><rt>xiàng</rt></ruby>道之不察兮，延伫乎吾将反。回朕车以复路兮，及行迷之未远。</p><p class="translation">后悔选择道路时没有看清，我久久伫立而想返回。调转我的车走回原路啊，趁着迷途未远赶快罢休。</p><p class="original-text">步余马于兰皋兮，驰椒丘且焉止息。进不入以离尤兮，退将复修吾初服。</p><p class="translation">让我的马缓缓走在长着兰草的水边，驱马疾行到椒木小山暂且在那里休息。到朝廷做官不被君王接受而又遭指责，推下来重新整理我当初的衣服。</p><p class="original-text">制<ruby><rb>芰</rb><rt>jì</rt></ruby>荷以为衣兮，集芙蓉以为裳。不吾知其亦已兮，苟余情其信芳。</p><p class="translation">我要把菱叶裁剪成上衣，我并用荷花把下裳织就。没有人了解我也就罢了，只要内心确实是美好的。</p><p class="original-text">高余冠之岌岌兮，长余佩之陆离。芳与泽其杂糅兮，唯昭质其犹未亏。</p><p class="translation">把我的帽子加得高高的，把我的佩带增得长悠悠。虽然芳洁污垢混杂一起，只有纯洁品质不会腐朽。</p><p class="original-text">忽反顾以游目兮，将往观乎四荒。佩缤纷其繁饰兮，芳菲菲其弥章。</p><p class="translation">我忽然回头啊纵目远望，我将游观四面遥远地方。佩着五彩缤纷华丽装饰，散发出一阵阵浓郁清香。</p><p class="original-text">民生各有所乐兮，余独好修以为常。虽体解吾犹未变兮，岂余心之可惩？</p><p class="translation">人们各有自己的爱好啊，我独爱好修饰习以为常。即使粉身碎骨也不改变，难道我的心会因为受到惩罚而停止（爱美好从正道）？</p></div></div>
<h3 id="参考文献">参考文献</h3>
<h4 id="中国哲学史的里程碑老子的无-milestone_in_chinese_philosophy_laozi_none">中国哲学史的里程碑——老子的“无”
<span class="citation" data-cites="Milestone_in_Chinese_philosophy_Laozi_None">[@Milestone_in_Chinese_philosophy_Laozi_None]</span></h4>
<p>​
中国哲学史是中华民族的认识史。多年来一直沿着这条思路考察中国哲学的发展、变化，踪迹昭然、历然。老子首先提出了“无”作为最根本的范畴，是中国哲学史第一座里程碑。</p>
<p>​
人类认识外界，总是经历由外到内、由具体到抽象的过程。近半个世纪以来，儿童心理学发展较快，研究儿童认识外界的过程及其发展轨迹，经过观察、实测、比较，得出大体可信、比较接近儿童思维成长的实际状况。一个民族思维成长的过程与儿童心理的发展过程大体相似，至少从中可得相关的昭示。</p>
<p>​
儿童认识外界先从身边周围的事物开始。由近及远，先认识母亲，后及家人，扩大到身外的食物、玩具，再扩大到鸟兽草木虫鱼等目力所及更大的范围。如高山、大河、天空、气象、风雷等外界虽在视听范围之内，并不能引起足够的认识。日月星辰先被认识，日月依附着的更大的“太空”则较后才会引起注意。朱熹儿时，其父向他指示天空曰“天”，朱熹问其父：“天之上何物？”这被看作特异儿童的表现，所以古人特别记上一笔。古今中外千千万万儿童，是很少关心“天之上有何物”的。</p>
<p>​
儿童教育家还发现，小学生春游，虽然喜欢爬山、涉水，但不懂得欣赏山水风景、朝辉落霞之美。认识过程总是由具体事物开始，由微细到宏大。儿童学习数字计算，也是先学计算一个两个实物，然后形成“1”“2”……的数的概念。先有自然数的实数，“0”的概念形成较后。因为“0”没有形象，也找不到与0相当的对象（实体）可供抽象。</p>
<p>​ 我们回顾中华民族的认识史，竟与儿童成长过程有惊人相似之处。</p>
<p>​
人类认识从有形开始，逐渐由分到合，由具体到抽象，形成了“有”（存在）的概念。“有”有形象（大小、形色等），“有”有性质（坚软、轻重、香臭等），“有”有结果（得到或未得到），各种“有”都可见闻，可感知，可推得结果。这些都属于人类认识的幼年期。</p>
<p>​
随着生活实践、社会实践、科学实践的深化，从“有”进而认识到“有”的对立面——“没有”。</p>
<p>​
“没有”是生活中经常遇到的现实。打猎、捕鱼，可能“有”，也可能“没有”，而且出现的频率很高。把“没有”抽象到概念的高度，也作为认识的“客体”对待，达到这个认识水平，只在具有先进文化的民族才有这种可能。“没有”在未上升到概念时，只是一次性的客观描述。提出了“无”，是认识的一次大飞跃。</p>
<p>​
由于“无”具有“有”所不具备的“实际存在”，号称“无”，并非空无一物，而有总括万有的特点。老子称之为“无状之状，无物之象”。它不同于“有”，所以“视之不可见，听之不可闻，搏之不可得”，“此三者不可致诘，故混而为一”。对这一最高的负概念给以特殊名称，有时叫作“无”；因为它具有规律性，也称为“道”。在一定情况下，“无”与“道”同义，有时“无”也是“道”，“道”也是“无”。</p>
<p>​
老子的“无”不是停留在描述性的“没有”的认识阶段。“无”并不是消极的存在，而是有它实际多样肯定性的含义，有现实作用，有可以预测的后果，也经常用作对待日常生活、政治生活的一个原则。“无”的发现，为人类认识史开了新生面，的确非同寻常。</p>
<p>​
《老子》书经历史上老学传人的补充、完善，现存的定本共五千七百字左右。这部书从各个方面提醒人们重视“无”的地位和作用。不但认识“无”，而且用“无”的原则来指导日常生活、社会生活以及政治生活。</p>
<p>​ 日常生活中认识“无”的功用：</p>
<blockquote>
<p>​
“三十辐共一毂，当其无，有车之用。埏埴以为器，当其无，有器之用。凿户牖以为室，当其无，有室之用。故有之以为利，无之以为用。”（十一章）</p>
</blockquote>
<p>​ 把“无”的原则运用到政治生活：</p>
<blockquote>
<p>​
“取天下常以无事。”（四十八章）“以无事取天下。”（五十七章）“我无欲而民自朴。”（五十七章）</p>
</blockquote>
<blockquote>
<p>​ “为无为，事无事，味无味。”（六十三章）</p>
</blockquote>
<blockquote>
<p>​ “是谓行无行，攘无臂，扔无敌，执无兵。”（六十九章）</p>
</blockquote>
<blockquote>
<p>“是以圣人处无为之事，行不言之教。”（二章）</p>
</blockquote>
<blockquote>
<p>​ “为无为。”（三章）</p>
</blockquote>
<blockquote>
<p>​ “爱民治国，能无为乎。”（十章）</p>
</blockquote>
<blockquote>
<p>​ “道常无为。”（三十七章）</p>
</blockquote>
<blockquote>
<p>​ “吾是以知无为之有益。”（四十三章）</p>
</blockquote>
<blockquote>
<p>​ “不言之教，无为之益，天下希及之。”（四十三章）</p>
</blockquote>
<p>日常行为准则也离不开“无”的原则指导：</p>
<blockquote>
<p>​
“善行，无辙迹；善言，无瑕谪；善数，不用筹策；善闭，无关楗而不可开；善结，无绳约而不可解。”（二十七章）</p>
</blockquote>
<p>“无”也是政治生活的指导原则：</p>
<blockquote>
<p>​ “生而不有，为而不恃，长而不宰。”（十章）</p>
</blockquote>
<blockquote>
<p>​ “爱民治国，能无为乎？……明白四达，能无知乎？”（十章）</p>
</blockquote>
<p>老子由“无”衍生出一系列否定概念的积极含义：</p>
<blockquote>
<p>​
“绝圣弃智，民利百倍；绝仁弃义，民复孝慈；绝巧弃利，盗贼无有；……见素抱朴，少私寡欲。”（十九章）</p>
</blockquote>
<p>​ 处理人际关系，要遵循“无”的原则，以退让、收敛为原则：</p>
<blockquote>
<p>​
“不自见，故明；不自是，故彰；不自伐，故有功；不自矜，故长；夫唯不争，故天下莫能与之争。”（二十二章）</p>
</blockquote>
<p>​
老子思想的深刻性在于，善于从纷乱多样的现象中，概括出“无”这一负概念。其可贵处在于把负概念给予积极肯定的内容。老子的“无为”不是一无所为，而是用“无”的原则去“为”。所以能做到有若无，实若虚，以退为进，以守为攻，以屈为伸，以弱为强，以不争为争，从而丰富了中国古代辩证法思想，建立了中国古代辩证法贵柔的体系，与儒家《易传》尚刚健体系并峙。两大流派优势互补，共同丰富了中华民族的文化宝库。</p>
<p>​
人类认识总是在旧的认识基础上提出新见解。新见解对旧知识来说，是一次进步。同时，这新见解往往成为后来更新见的障碍。《荀子·天论》篇中曾指出，“老子有见于诎，无见于信”。老子发现了“无”的价值，把它提高到应有的位置，是老子的贡献。如果把“无”的地位、作用过分夸大，反倒背离了真理。比如，老子指出建房屋供人使用的地方是墙壁中间的空间部分。但也应看到供使用的空间部分是在墙壁、梁柱等实体支持下才能供居住。没有墙壁、梁柱、砖木的“有”，也就没有供起居的空间，只是一片空旷的开阔地，虽有空间（“无”），却不能居住。有与无互相依存，相得益彰。</p>
<p>​
总之，老子发现，提出了“无”这个范畴，是一大贡献，并赋予以肯定、积极意义，功不可没。老子的无为，不是什么也不干，而是变换一种方法去干。</p>
<p>​
老子的辩证法贵无、尚柔，肯定生活，而不消极玩世。老子贵“无”而务“实”，不具有怀疑论色彩。战国末期出现黄老之学，讲治道，重形名，在战争后经济残破时期，用来恢复生产，收到了治国安民的实效。黄老不同于原来的老子，司马迁把老子与韩非子同篇立传，事出有因。韩非子也有《解老》《喻老》的著作，足见二者有内在的联系。老子、庄子，古来并提，老子多讲治国用兵，庄子更偏重于养生、适性，也采取了老子思想的一部分，但历史上还没有发现庄子治国安民的思想。</p>
<p>​
庄学作为老学的补充，自有其重要地位。庄学的高明、豁达，不谴是非，是庇荫在老子构建的大厦下设立的一个摊位，离了老子，庄子的光彩就无从显露。这一点，正如王守仁之所以能自张一军，耸动天下，是在朱熹的基础上开创起来的。必先有朱熹，王守仁反对朱熹的格物的新见解才有新意。没有朱学，就没有王学。</p>
<p>​
“无”被提示出来，纳入认识最高范畴，涵盖范围广大无限，给后来道教神学提供了广阔驰骋的领域。这是另外的问题，本文从略。</p>
<p>（选自《竹影集——任继愈自选集》，新世界出版社2002年版）</p>]]></content>
      <categories>
        <category>High School</category>
        <category>Chinese</category>
        <category>Classical Chinese Literature and Poetry</category>
      </categories>
      <tags>
        <tag>School Notes</tag>
        <tag>High School</tag>
        <tag>Chinese</tag>
      </tags>
  </entry>
  <entry>
    <title>氓-《诗经·卫风》</title>
    <url>/2022/03/25/chinese/High%20School/Classical%20Chinese%20Literature%20and%20Poetry/%E9%80%89%E6%8B%A9%E6%80%A7%E5%BF%85%E4%BF%AE/%E6%B0%93-%E3%80%8A%E8%AF%97%E7%BB%8F%C2%B7%E5%8D%AB%E9%A3%8E%E3%80%8B/</url>
    <content><![CDATA[<h2 id="课文解读">课文解读</h2>
<p>​
《氓》这首诗共六章，以弃妇的身份和口吻，依次写了相识与允婚、相思与成婚、相爱与新婚、遭弃与离婚，以至忆苦自伤、情断义绝等内容，展现了女主人公曲折的人生经历。全诗叙事线索清楚，情感变化明晰，描写生动细腻，人物形象鲜活，读来凄婉动人，是《诗经》中的名篇。这首诗篇幅较长，具有强烈的叙事性，有的学者认为此篇“可作为短篇小说读”（陈子展《诗经直解》），同时又仍然具有浓郁的抒情风格，对后世的诗歌创作产生了深远的影响。</p>
<p>​
诗歌第一章，直接从“氓”的样貌行为写起，直叙其事。“氓之蚩蚩，抱布贸丝”，写男子貌似忠厚能干、拿着布来换丝。短短八个字，可谓“以少总多，情貌无遗”。这里“布”与“丝”对举，“布”应该是棉麻等织物（也作货币流通），而不是铜铸的布币。以布易丝，表现了当时原始的物物交易商业模式。“匪来贸丝、来即我谋”两句，一语道破“天机”：原来男子到来后即无心“贸丝”，只是打“我”的主意。“我”似嗔似喜之情，也尽在不言之中，可谓“言有尽而意无穷”。而“送子涉淇”的情意绵绵，“子无良媒”“将子无怒”的善意宽慰，字里行间，又不知隐去了多少甜言蜜语。</p>
<p>​
第二章写女子的相思及成婚。她登上残破的墙垣，远望着男子的方向。“不见”使她“泣涕涟连”，“既见”又让她“载笑载言”。悲喜之间，见出一个热恋中的女子特殊的情感状态，如或可睹、如在目前。当龟卜草占，皆示吉利后，“我”便带着自己的财物，嫁为男子之妻。诗歌至此，留下了小说情节般的悬念。</p>
<p>​
三、四两章平行而下，开头皆以桑树起兴，形成了一个对比鲜明的平行结构。当桑叶光鲜润泽之时，斑鸠贪吃可以酿酒的桑葚，不醉自醉；如同女子沉溺于爱情，不能自拔。她自说自话，明知不能摆脱这样的沉湎、却若有若无地给自己敲敲警钟，真不知为醉语还是醒语。第四章“桑之落矣”，暗示了婚姻的破裂。她日渐衰老的容颜，一如枯黄陨落的桑叶，成为被抛弃的理由。汤汤淇水，见证了她羞辱的归程。她品行无过，只因美貌不再，在“二三其德”的男子面前便没有了珍惜的价值。男子当年狂热追求她，是以色取人；如今抛弃她，则毫不掩饰地暴露出虚伪的本质。痴情女子负心汉，这悲伤的曲调从古弹到今，令人感叹唏嘘！</p>
<p>​
诗的最后两章，是她对这场失败婚姻的反思。她“夙兴夜寐”的劳作，低眉顺目的服从，换来的只有“氓”的暴怒。回到娘家，兄弟们不知内情的讥笑，如同往她的伤口上撒盐，加倍痛苦。凡此种种，她“静言思之”，只能自伤自怜。她想起对方从前发过的“偕老”誓言，更生怨恨。往昔的嬉戏游玩、海誓山盟，都不能唤醒负人心的良知，那也就算了吧！</p>
<p>​
这首叙事诗，塑造了鲜明生动的人物形象。首先是弃妇的自我形象：她面对男子的追求，热烈回应，表现出对爱情的渴望；她遵守婚嫁礼法，表现出端庄的一面；她好言劝慰男子，善良体贴；她涕泣言笑，沉醉爱情，颇具性情；她不乏警觉，自我反思，聪明伶俐。诗的最后一句“亦已焉哉”的呼喊，更表现出她倔强刚强的一面。诗歌第一人称的叙述，更有利于从正面塑造弃妇的形象，是明写；而诗中的男子形象，则是通过女子的描述间接呈现的，是暗写。他是一个“抱布贸丝”的小商贩，为了追求爱情，可以置生意于不顾，表现出对爱情执着的一面；他急于成婚，至于发怒，表现出急躁的性格特征；而婚后的暴躁，“二三其德”，又表现出他品德的败坏；婚前的热烈，婚后的离弃，两相对照，则揭示了他的虚伪。总之，隐现于诗句之中的男子，是一个性情狂暴、违背诺言、始爱终弃的负心汉。</p>
<p>​
孔子论诗，有“兴、观、群、怨”之说。以此来观照《氓》，它首先是一首“怨”诗，是女主人公因不幸婚姻而生出的感伤与怨诽。因为真情流露，不加粉饰，而又表现出人生的某些永恒的真相，也就足以感动世人，敦美风俗，从而兼有了“兴”“群”的意义。至于“观”，本诗也有着多方面的认识价值。例如，“子无良媒”表现了当时的婚俗，可以与《诗经·齐风·南山》中“取妻如之何？匪媒不得”的诗句联系起来；又如，“秋以为期”，也可结合《荀子·大略》“霜降逆女”、张衡《定情赋》“秋为期兮时已征”等文句，可知古人常以秋季为婚期；再如，“尔卜尔筮，体无咎言”，表现了卜筮对古人的重大意义。《左传·僖公四年》记载：“晋献公欲以骊姬为夫人，卜之不吉，筮之吉。公曰：‘从筮。’”可以作为佐证。</p>
<p>​
通过这首诗，我们还可以进一步理解《诗经》赋、比、兴的手法。本诗以叙事为主，完整地呈现了一个女子的婚姻悲剧，正是“敷陈其事而直言之”，体现了“赋”的手法。中间两章分别以“桑之未落，其叶沃若”和“桑之落矣，其黄而陨”开头，是“比而兴也”，“比显而兴隐”，融为一体。采桑养蚕，应该是女主人公的日常劳动生活。“能近取譬”，更显得自然真切。再如，“淇则有岸，隰则有泮”，也是兴比兼用，语气委婉而词锋刚劲。比兴的运用，表面上中断了叙述，舒缓了节奏，实则往往暗示了故事的走向，起到了过渡作用。</p>
<p>​
本诗中许多细节也值得仔细琢磨。例如对“氓”称呼的转换，恋爱时称“子”，婚前称“尔”，婚后称“士”，既避免重复，产生错落之美，也符合人物的身份变化和情感发展。诗中三次出现淇水之名：“送子涉淇”，淇水看见她对爱情的痴迷；“淇水汤汤”，淇水仿佛也在为她被抛弃而伤心；“淇则有岸”，淇水成为她迷惘时的精神寄托。淇水既是环境要素，也是女主人公人生经历的见证，如同音乐剧的背景。</p>
<p>​
《氓》讲述的是两千多年前一个普通女性婚恋的悲情故事，也代表了自古以来无数有同类遭遇的女子的心声。它讲述的是一个代代有之的悲剧，因而具有持久的震撼力量和永恒的审美魅力。</p>
<h2 id="参考资料">参考资料</h2>
<h3 id="参考译文">参考译文</h3>
<div class="classcial-chinese-literature-and-poetry-translation"><div class="paragraph"><p class="original-text">氓之<ruby><rb>蚩</rb><rt>chī</rt></ruby>蚩，抱布贸丝。匪来贸丝，来即我谋。送子涉淇，至于顿丘。匪我<ruby><rb>愆</rb><rt>qiān</rt></ruby>期，子无良媒。<ruby><rb>将</rb><rt>qiāng</rt></ruby>子无怒，秋以为期。</p><p class="translation">那个人老实忠厚，怀抱布匹来换丝。其实不是真的来换丝，是找个机会谈婚事。送郎君渡过淇水，一直送到顿丘。并非我要拖延约定的婚期而不肯嫁，是因为你没有找好媒人。请郎君不要生气，秋天到了来迎娶。</p></div><div class="paragraph"><p class="original-text">乘彼<ruby><rb>垝</rb><rt>guǐ</rt></ruby><ruby><rb>垣</rb><rt>yuán</rt></ruby>，以望复关。不见复关，泣涕涟涟。既见复关，载笑载言。尔卜尔<ruby><rb>筮</rb><rt>shì</rt></ruby>，体无咎言。以尔车来，以我贿迁。</p><p class="translation">登上那倒塌的墙壁，遥向复关凝神望。复关没有见到盼望的人，眼泪簌簌掉下来。情郎即从复关来，又说又笑喜洋洋。你去卜卦求神仙，卜筮的结果没有不吉利。你用车来迎娶，我带上嫁妆嫁给你。</p></div><div class="paragraph"><p class="original-text">桑之未落，其叶沃若。<ruby><rb>于</rb><rt>xū</rt></ruby>嗟鸠兮，无食桑葚！于嗟女兮，无与士耽！士之耽兮，犹可<ruby><rb>说</rb><rt>tuō</rt></ruby>也。女之耽兮，不可说也。</p><p class="translation">桑树还没落叶的时候，桑叶像水浸润过一样有光泽。唉那些斑鸠呀，不要贪吃桑葚。哎年轻的姑娘们呀，不要沉溺在与男子的情爱中。男子沉溺在爱情里，还可以脱身。女子沉溺在爱情里，就无法摆脱了。</p></div><div class="paragraph"><p class="original-text">桑之落矣，其黄而陨。自我<ruby><rb>徂</rb><rt>cú</rt></ruby>尔，三岁食贫。淇水<ruby><rb>汤</rb><rt>shāng</rt></ruby>汤，渐车帷裳。女也不爽，士贰其行。士也罔极，二三其德。</p><p class="translation">undefined</p></div><div class="paragraph"><p class="original-text">桑树落叶的时候，它的叶子枯黄，纷纷掉落了。自从嫁到你家，多年来忍受贫苦的生活。淇水波涛滚滚，水花打湿了车上的布幔。我女子没有什么差错，男子行为却前后不一致了。男人的爱情没有定准，他的感情一变再变。</p><p class="translation">undefined</p></div><div class="paragraph"><p class="original-text">三岁为妇，靡室劳矣。夙兴夜寐，靡有朝矣。言既遂矣，至于暴矣。兄弟不知，咥xì其笑矣。静言思之，躬自悼矣。</p><p class="translation">undefined</p></div><div class="paragraph"><p class="original-text">婚后多年守妇道，繁重家务劳动没有不干的。起早睡迟，朝朝如此，不能计算了。你的心愿实现后，渐渐对我施凶暴。兄弟不知道我的遭遇，见面时都讥笑我啊。静下心来细细想，只能独自伤心。</p><p class="translation">undefined</p></div><div class="paragraph"><p class="original-text">及尔偕老，老使我怨。淇则有岸，隰xí则有泮。总角之宴，言笑晏晏。信誓旦旦，不思其反。反是不思，亦已焉哉！</p><p class="translation">undefined</p></div><div class="paragraph"><p class="original-text">当初曾相约和你一同过到老，偕老之说徒然使我怨恨罢了。淇水滔滔终有岸，沼泽虽宽终有尽头。回想少时多欢乐，谈笑之间露温柔。海誓山盟犹在耳，哪里料到你会违反誓言。莫再回想背盟事，既已终结便罢休！</p><p class="translation">undefined</p></div></div>]]></content>
      <categories>
        <category>High School</category>
        <category>Chinese</category>
        <category>Classical Chinese Literature and Poetry</category>
      </categories>
      <tags>
        <tag>School Notes</tag>
        <tag>High School</tag>
        <tag>Chinese</tag>
      </tags>
  </entry>
  <entry>
    <title>你不会不知道最新的 CSS API 可以给选中的文本添加样式吧？</title>
    <url>/2022/03/23/computer%20science/frontend/css-custom-highlight-api/</url>
    <content><![CDATA[<blockquote>
<ul>
<li>原文地址：<a href="https://css-tricks.com/css-custom-highlight-api-early-loo/">CSS
Custom Highlight API: The Future of Highlighting Text Ranges on the
Web</a></li>
<li>原文作者：<a href="https://css-tricks.com/author/patrickbrosset/">Patrick
Brosset</a></li>
<li>译者：<a href="https://github.com/PassionPenguin">霜羽
Hoarfroster</a></li>
</ul>
</blockquote>
<p><strong>给选中的文本添加样式</strong>并不是没用的行为，而值得开心的是，CSS
Custom Highlight API 即将到来，而且它将会成为未来 Web
上样式化选中文本的不二法门！</p>
<figure>
<img src="https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/02/s_8E0FC85C45E73C25EFCF623C768360F2F95DBDDEC338D5F6DE316BB0830F6F67_1644484463021_highlight-api-demo-no-text-deco.gif?resize=800%2C733&amp;ssl=1" alt="CSS Custom Highlight API demo 动画演示">
<figcaption aria-hidden="true">CSS Custom Highlight API demo
动画演示</figcaption>
</figure>
<p>举个例子：如果我们用过 知乎编辑器、Google Docs、百度文库、Word 或
Dropbox Paper
这些文本编辑软件，我们不难发现它们会检测到拼写和语法错误，并会在错误的下方用下划波浪线提醒我们<strong>“大傻子！写错了！”</strong>。类似的，VS
Code、IDEA 这样的代码编辑器也会在出现代码错误时有类似的提醒。</p>
<p><img src="https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/02/s_8E0FC85C45E73C25EFCF623C768360F2F95DBDDEC338D5F6DE316BB0830F6F67_1643042116795_image.png?resize=977%2C269&amp;ssl=1"></p>
<p>对于高亮文本，另一个非常常见的用例的是<strong>搜索并高亮</strong>这一操作。在我们进行网页内搜索时，浏览器会弹出一个文本输入框。在我们输入相关内容后，网页中相匹配的内容就会被高亮。我们可以现在试试按
<code>Ctrl</code>/<code>⌘</code>+
<code>F</code>，然后并输入本文中的一些文字尝试这一操作。</p>
<p><img src="https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/02/s_8E0FC85C45E73C25EFCF623C768360F2F95DBDDEC338D5F6DE316BB0830F6F67_1643042176497_image.png?resize=1117%2C951&amp;ssl=1"></p>
<p>浏览器本身就经常需要处理这类高亮，比如说可编辑元素（如
<code>&lt;textarea&gt;</code>）会有错误拼写检查，搜索功能会自动高亮找到的文本内容……</p>
<p>但是我们是否（或者我们的产品经理是否）想要让我们在网页上实现这种样式呢？似乎在网页上实现高亮文本一直是个常见的需求，可能浪费了不少人让他们去造轮子……</p>
<p>别把这个问题想得太简单啦，我们不只需要将文本扔进一个有特定
<code>class</code> 的 <code>&lt;span&gt;</code> 中并对它应用一些 CSS
样式。实际上，我们需要能够在各种情形下的复杂的 DOM
树中正确高亮文本<em>多段</em>文本，并且任意一段文本都可能会跨越多个 DOM
元素的边界。</p>
<p>有两种常见的解决方案，包括：</p>
<ol type="1">
<li>给伪元素样式化（<code>:selection</code> 等伪元素）；</li>
<li>创建自己的文本高亮系统；</li>
</ol>
<p>我们将首先用这两种方法完成高亮文本操作，然后看看<strong>即将推出的可以改变这一切的
CSS Custom Highlight API</strong>。</p>
<h3 id="潜在方案-1可样式化的文本范围">潜在方案
#1：可样式化的文本范围</h3>
<p>可能最常见的用例是我们选择的文本，当我们使用鼠标等选择网页中的一段文本时，浏览器会自动创建一个
<a href="https://developer.mozilla.org/en-US/docs/Web/API/Selection"><code>Selection</code></a>
对象。事实上，现在尝试在此页面上选择文本，然后在 DevTools 控制台中运行
<code>document.getSelection()</code>。
我们应该会看到有关所选文本的位置信息。</p>
<figure>
<img src="https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/02/Screen-Shot-2022-02-14-at-7.33.16-AM.png?resize=1846%2C1196&amp;ssl=1" alt="DevTools 的一个显示当前文本选择位置的控制台窗口。">
<figcaption aria-hidden="true">DevTools
的一个显示当前文本选择位置的控制台窗口。</figcaption>
</figure>
<p>事实证明，我们还可以通过 JavaScript 以编程方式创建文本选择。
这是一个例子：</p>
<div class="sourceCode" id="cb1"><pre class="sourceCode javascript"><code class="sourceCode javascript"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a><span class="co">// First, create a Range object.</span></span>
<span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a><span class="kw">const</span> range <span class="op">=</span> <span class="kw">new</span> <span class="bu">Range</span>()<span class="op">;</span></span>
<span id="cb1-3"><a href="#cb1-3" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-4"><a href="#cb1-4" aria-hidden="true" tabindex="-1"></a><span class="co">// And set its start and end positions.</span></span>
<span id="cb1-5"><a href="#cb1-5" aria-hidden="true" tabindex="-1"></a>range<span class="op">.</span><span class="fu">setStart</span>(parentNode<span class="op">,</span> startOffset)<span class="op">;</span></span>
<span id="cb1-6"><a href="#cb1-6" aria-hidden="true" tabindex="-1"></a>range<span class="op">.</span><span class="fu">setEnd</span>(parentNode<span class="op">,</span> endOffset)<span class="op">;</span></span>
<span id="cb1-7"><a href="#cb1-7" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-8"><a href="#cb1-8" aria-hidden="true" tabindex="-1"></a><span class="co">// Then, set the current selection to this range.</span></span>
<span id="cb1-9"><a href="#cb1-9" aria-hidden="true" tabindex="-1"></a><span class="bu">document</span><span class="op">.</span><span class="fu">getSelection</span>()<span class="op">.</span><span class="fu">removeAllRanges</span>()<span class="op">;</span></span>
<span id="cb1-10"><a href="#cb1-10" aria-hidden="true" tabindex="-1"></a><span class="bu">document</span><span class="op">.</span><span class="fu">getSelection</span>()<span class="op">.</span><span class="fu">addRange</span>(range)<span class="op">;</span></span></code></pre></div>
<p>还有一些代码，用于定义选中内容的样式。 CSS 有一个名为 <a href="https://css-tricks.com/almanac/selectors/s/selection/"><code>::selection</code></a>
的伪元素可以做到这一点，它在 <a href="https:%20//caniuse.com/css-selection">所有浏览器</a>
中几乎都得到支持。</p>
<div class="sourceCode" id="cb2"><pre class="sourceCode css"><code class="sourceCode css"><span id="cb2-1"><a href="#cb2-1" aria-hidden="true" tabindex="-1"></a><span class="in">::selection</span> &#123;</span>
<span id="cb2-2"><a href="#cb2-2" aria-hidden="true" tabindex="-1"></a>  <span class="kw">background-color</span>: <span class="cn">#f06</span><span class="op">;</span></span>
<span id="cb2-3"><a href="#cb2-3" aria-hidden="true" tabindex="-1"></a>  <span class="kw">color</span>: <span class="cn">white</span><span class="op">;</span></span>
<span id="cb2-4"><a href="#cb2-4" aria-hidden="true" tabindex="-1"></a>&#125;</span></code></pre></div>
<p>这是一个使用此方案按单词顺序高亮页面中所有单词的示例：<a href="https://codepen.io/captainbrosset/pen/eYeYJBx">CodePen</a>。</p>
<p>在 <code>::selection</code> 伪元素之上，还有许多其他伪元素：</p>
<ul>
<li><code>::target-text</code> 选择在支持 <a href="https://wicg.github.io/scroll-to-text-fragment/">scroll-to-text</a>
功能的浏览器中滚动到的文本。 (<a href="https://developer.mozilla.org/en-US/docs/Web/CSS/::target-text">MDN</a>)</li>
<li><code>::spelling-error</code> 选择被浏览器标记为包含拼写错误的文本。
(<a href="https://developer.mozilla.org/en-US/docs/Web/CSS/::spelling-error">MDN</a>)</li>
<li><code>::grammar-error</code> 选择被浏览器标记为包含语法错误的文本。
(<a href="https://developer.mozilla.org/en-US/docs/Web/CSS/::grammar-error">MDN</a>)</li>
</ul>
<p>不幸的是，这些 CSS
选择器的浏览器支持不是很好，虽然这些范围选择器在需要用到它们的领域中都很有用，但它们不能用于设置自定义文本的样式
—— 这些只能由浏览器定义。</p>
<p>所以我们的方案很好，因为它相对简单，不会改变页面的
DOM。事实上，<code>Range</code>
对象本质上是页面中段落的坐标，而不是需要创建才能存在的 HTML 元素。</p>
<p>然而，一个主要缺点是创建选择会重置用户已经手动选择的任何内容。尝试在上面的演示中选择文本来测试它。一旦代码将选择移动到其他地方，我们就会看到它是如何消失的。</p>
<h3 id="潜在方案-2自定义高亮文本系统">潜在方案
#2：自定义高亮文本系统</h3>
<p>如果使用 <code>Selection</code>
对象对我们来说不够用，那么第二个解决方案几乎是我们唯一可以做的事情。这个解决方案围绕着自己做所有事情，使用
JavaScript 在我们希望高亮文本的 DOM 中插入新的 HTML 元素。</p>
<p>不幸的是，这意味着要编写和维护更多的
JavaScript，更不用说它迫使浏览器在高亮文本发生变化时重新创建页面布局。此外，还有一些复杂的边缘情况，例如，当我们想要高亮文本跨越多个
DOM 元素的一段文本时。</p>
<figure>
<img src="https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/02/s_8E0FC85C45E73C25EFCF623C768360F2F95DBDDEC338D5F6DE316BB0830F6F67_1643109885151_image.png?resize=1129%2C100&amp;ssl=1" alt="显示一行用斜体、粗体显示，并且由一条亮黄色的高亮的 HTML 内容。">
<figcaption aria-hidden="true">显示一行用斜体、粗体显示，并且由一条亮黄色的高亮的
HTML 内容。</figcaption>
</figure>
<p>有趣的是，<a href="https://codemirror.net">CodeMirror</a> 和 <a href="https://microsoft.github.io/monaco-editor/">Monaco</a>（支持 VS
Code 的 JavaScript
文本编辑器库）有自己的高亮逻辑，使用了稍微不同的方法，其中高亮放在了 DOM
树单独一个部分中 —— 文本行和高亮文本的段在 DOM
中的两个不同位置呈现，然后彼此重叠。如果我们检查包含文本的 DOM
子树，你会发现并没有高亮样式。这样，可以重新渲染高亮样式，而不会影响文本行，也不必在其中引入新元素。</p>
<p>总体而言，感觉就像缺少浏览器驱动的高亮文本功能。有助于解决所有这些缺点（不干扰用户文本选择、多选支持、简单代码）并且比定制解决方案更快的东西。</p>
<p>幸运的是，这就是我们在这里谈论的内容！</p>
<h3 id="开始研究-css-自定义高亮-api">开始研究 CSS 自定义高亮 API</h3>
<p><a href="https://www.w3.org/TR/css-highlight-api-1/">CSS 自定义高亮
API</a> 是一个新的 W3C
规范（目前处于工作草案状态），它可以设置任意文本范围的样式来自
JavaScript！这里的方法与我们之前回顾的用户文本选择技术非常相似。它为开发人员提供了一种从
JavaScript 创建任意范围，然后使用 CSS 设置样式的方法。</p>
<h4 id="创建文本范围">创建文本范围</h4>
<p>第一步是创建要高亮文本的文本范围。这可以使用 JavaScript 中的 <a href="https://developer.mozilla.org/en-US/docs/Web/API/Range"><code>Range</code></a>
来完成。所以，就像我们在设置当前选择时所做的那样：</p>
<div class="sourceCode" id="cb3"><pre class="sourceCode javascript"><code class="sourceCode javascript"><span id="cb3-1"><a href="#cb3-1" aria-hidden="true" tabindex="-1"></a><span class="kw">const</span> range <span class="op">=</span> <span class="kw">new</span> <span class="bu">Range</span>()<span class="op">;</span></span>
<span id="cb3-2"><a href="#cb3-2" aria-hidden="true" tabindex="-1"></a>range<span class="op">.</span><span class="fu">setStart</span>(parentNode<span class="op">,</span> startOffset)<span class="op">;</span></span>
<span id="cb3-3"><a href="#cb3-3" aria-hidden="true" tabindex="-1"></a>range<span class="op">.</span><span class="fu">setEnd</span>(parentNode<span class="op">,</span> endOffset)<span class="op">;</span></span></code></pre></div>
<p>值得注意的是，如果作为第一个参数传递的节点是否是文本节点，则
<code>setStart</code> 和 <code>setEnd</code>
方法的工作方式不同。对于文本节点，偏移量对应于节点内的字符数。对于其他节点，偏移量对应于父节点内的子节点数。</p>
<p>另外值得注意的是，<code>setStart</code> 和 <code>setEnd</code>
并不是描述范围开始和结束位置的唯一方法。查看 <code>Range</code>
类上可用的 <a href="https://developer.mozilla.org/en-US/docs/Web/API/Range#methods">其他方法</a>
以查看其他选项。</p>
<h4 id="创建-highlight-对象">创建 Highlight 对象</h4>
<p>第二步包括为最后一步中创建的范围创建 <a href="https://www.w3.org/TR/css-highlight-api-1/#highlight"><code>Highlight</code></a>
对象。一个 <code>Highlight</code> 对象可以接收一个或多个
<code>Range</code>。因此，如果我们想以完全相同的方式高亮文本一堆文本，我们可能应该创建一个
<code>Highlight</code> 对象并使用与这些文本相对应的所有
<code>Range</code> 来初始化它。</p>
<div class="sourceCode" id="cb4"><pre class="sourceCode javascript"><code class="sourceCode javascript"><span id="cb4-1"><a href="#cb4-1" aria-hidden="true" tabindex="-1"></a><span class="kw">const</span> highlight <span class="op">=</span> <span class="kw">new</span> <span class="fu">Highlight</span>(range1<span class="op">,</span> range2<span class="op">,</span> <span class="op">...,</span> rangeN)<span class="op">;</span></span></code></pre></div>
<p>但我们也可以根据需要创建任意数量的 <code>Highlight</code> 对象。
例如，如果我们正在构建一个协作文本编辑器，其中每个用户都获得不同的文本颜色，那么我们可以为每个用户创建一个
<code>Highlight</code> 对象。
然后每个对象都可以设置不同的样式，我们接下来会看到。</p>
<h4 id="注册-highlight">注册 Highlight</h4>
<p>现在高亮对象自己不做任何事情。 他们首先需要在所谓的高亮注册表中注册。
这是通过使用 <a href="https://www.w3.org/TR/css-highlight-api-1/#highlight-registry">CSS
Highlights API</a> 完成的。
注册表就像一张地图，我们可以在其中通过命名来注册新的亮点，以及删除亮点（甚至清除整个注册表）。</p>
<p>这是注册单个亮点的方法。</p>
<div class="sourceCode" id="cb5"><pre class="sourceCode javascript"><code class="sourceCode javascript"><span id="cb5-1"><a href="#cb5-1" aria-hidden="true" tabindex="-1"></a><span class="bu">CSS</span><span class="op">.</span><span class="at">highlights</span><span class="op">.</span><span class="fu">set</span>(<span class="st">'my-custom-highlight'</span><span class="op">,</span> highlight)<span class="op">;</span></span></code></pre></div>
<p>其中 <code>my-custom-highlight</code> 是我们选择的名称，而
<code>highlight</code> 是在最后一步中创建的 <code>Highlight</code>
对象。</p>
<h4 id="给高亮文本设置样式">给高亮文本设置样式</h4>
<p>最后一步是实际设置注册高光的样式。 通过定义新的 CSS <a href="https://www.w3.org/TR/css-highlight-api-1/#custom-highlight-pseudo"><code>::highlight()</code></a>
伪元素并使用我们在注册 <code>Highlight</code>
对象时选择的名称（在我们上面的示例中为<code>my-custom-highlight</code>），我们就完成设置了。</p>
<div class="sourceCode" id="cb6"><pre class="sourceCode css"><code class="sourceCode css"><span id="cb6-1"><a href="#cb6-1" aria-hidden="true" tabindex="-1"></a><span class="in">::highlight(my-custom-highlight)</span> &#123;</span>
<span id="cb6-2"><a href="#cb6-2" aria-hidden="true" tabindex="-1"></a>  <span class="kw">background-color</span>: <span class="cn">yellow</span><span class="op">;</span></span>
<span id="cb6-3"><a href="#cb6-3" aria-hidden="true" tabindex="-1"></a>  <span class="kw">color</span>: <span class="cn">black</span><span class="op">;</span></span>
<span id="cb6-4"><a href="#cb6-4" aria-hidden="true" tabindex="-1"></a>&#125;</span></code></pre></div>
<p>值得注意的是，就像 <code>::selection</code> 一样，CSS
属性的子集只能与 <code>::highlight()</code> 伪元素一起使用：</p>
<ul>
<li><a href="https://css-tricks.com/almanac/properties/b/background-color/"><code>background-color</code></a></li>
<li><a href="https://css-tricks.com/almanac/properties/c/caret-color/"><code>caret-color</code></a></li>
<li><a href="https://css-tricks.com/almanac/properties/c/color/"><code>color</code></a></li>
<li><a href="https://css-tricks.com/almanac/properties/c/cursor/"><code>cursor</code></a></li>
<li><a href="https://css-tricks.com/almanac/properties/f/fill/"><code>fill</code></a></li>
<li><a href="https://css-tricks.com/almanac/properties/s/stroke/"><code>stroke</code></a></li>
<li><a href="https://css-tricks.com/almanac/properties/s/stroke-width/"><code>stroke-width</code></a></li>
<li><a href="https://css-tricks.com/almanac/properties/t/text-decoration/"><code>text-decoration</code></a>（可能仅在规范的第
2 版中受支持）</li>
<li><a href="https://css-tricks.com/almanac/properties/t/text-shadow/"><code>text-shadow</code></a></li>
</ul>
<h4 id="更新高亮文本">更新高亮文本</h4>
<p>有多种方法可以更新页面上高亮文本的文本。</p>
<p>例如，我们可以使用 <code>CSS.highlights.clear()</code>
完全清除高亮注册表，然后从头开始。或者，我们也可以更新基础范围，而无需重新创建任何对象。为此，再次使用
<code>range.setStart</code> 和 <code>range.setEnd</code>
方法（或任何其他 <code>Range</code>
方法），浏览器将重新绘制高亮文本。</p>
<p>但是，<code>Highlight</code> 对象的工作方式类似于 JavaScript 的 <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set"><code>Set</code></a>，因此这意味着我们还可以添加使用
<code>highlight.add(newRange)</code> 将新的 <code>Range</code>
对象添加到现有的 <code>Highlight</code> 或使用
<code>highlight.delete(existingRange)</code> 删除
<code>Range</code>。</p>
<p>第三，我们还可以从 <code>CSS.highlights</code>
注册表中添加或删除特定的 <code>Highlight</code> 对象。由于此 API
的工作方式类似于 JavaScript 的 <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map"><code>Map</code></a>，因此我们可以
<a href="https:%20//developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/set"><code>set</code></a>
和 <a href="https://developer.mozilla.org/en-US/docs/Web%20/JavaScript/Reference/Global_Objects/Map/delete"><code>delete</code></a>
来更新当前注册的<code>Highlight</code>。</p>
<h4 id="浏览器支持">浏览器支持</h4>
<p>CSS Custom Highlight API
的规范相对较新，它在浏览器中的实现仍然不完整。因此，尽管这将成为 Web
平台的一个非常有用的补充，但它还没有完全准备好用于生产环境。</p>
<p>Microsoft Edge 团队目前正在 Chromium 中实现 CSS 自定义高亮
API。事实上，通过启用 Experimental Web Platform features 标志（在
<code>about:flags</code> 下），该功能现在已经可以在 Canary
版本中使用。目前还没有确定该功能何时会在 Chrome、Edge 和其他基于
Chromium 的浏览器中发布的计划，但已经非常接近了。</p>
<p><a href="https://developer.apple.com/safari/technology-preview/release-notes/#r99">Safari
99+</a> 也支持该 API，但需要开启 Experiment Flag（Develop → Experimental
Features → Highlight API）后才可以使用，并且接口有点不同，因为它使用 <a href="https://developer.mozilla.org/en-US/docs/Web/API/StaticRange"><code>StaticRange</code></a>
对象。</p>
<p>Firefox 尚不支持 API，你可以 <a href="https://github.com/mozilla/standards-positions/issues/482">阅读
Mozilla 对此的观点</a> 了解更多信息。</p>
<h3 id="demo">Demo</h3>
<p>说到 Microsoft Edge，他们在 GitHub 上建立了一个
Demo，让我们可以在其中使用 CSS 自定义高亮 API 进行试驾。（尝试 demo
前，首先请确保使用的是 Chrome Canary 或 Edge Canary，并在
<code>about:flags</code> 页面中开启 Experimental Web Platform features
flag）：<a href="https://microsoftedge.github.io/Demos/custom-highlight-api/">查看演示</a>。</p>
<p>该演示使用自定义高亮文本 API
根据我们在页面顶部的搜索字段中键入的内容高亮文本页面中的文本范围。</p>
<p>页面加载后，JavaScript 代码检索页面中的所有文本节点（使用 <a href="https://developer.mozilla.org/en-US/docs/Web/API/TreeWalker">TreeWalker</a>）以及当用户键入时在搜索字段中，代码会遍历这些节点，直到找到匹配项。然后使用这些匹配项创建“范围”对象，然后使用自定义高亮文本
API 高亮文本这些对象。</p>
<h3 id="结语">结语</h3>
<p>那么，这个新的浏览器提供的高亮 API
真的值得我们的关注吗？当然，它<strong>太值得了</strong>！</p>
<p>一方面，即使 CSS 自定义高亮文本 API
一开始可能看起来有点复杂（即必须创建范围，然后高亮文本，然后注册它们，最后为它们设置样式），它仍然比创建新的
DOM 元素并插入要简单得多，而且也能更棒的胜任高亮文本的任务。</p>
<p>更重要的是，浏览器引擎可以非常非常快速地设置这些范围的样式。</p>
<p>仅允许将 CSS 属性的子集与 <code>::highlight()</code>
伪元素一起使用的原因是子集仅包含可以由浏览器非常有效地应用而无需重新创建页面布局的属性.通过在周围的页面中插入新的
DOM 元素来高亮文本文本范围需要引擎做更多的工作。</p>
<p><a href="https://github.com/ffiori">Fernando Fiori</a>，这一 API
的贡献者，创建了这个漂亮的<a href="https://ffiori.github.io/highlight-api-demos/demo-performance%20.html">性能比较演示</a>。在笔者的测试中，CSS
自定义高亮 API 的平均执行速度比基于 DOM 的高亮快 5 倍。</p>
<p>有了 Chromium 和 Safari
的实验性支持，我们正在稳步接近这一即将可以运用在生产中的
API。我着实迫不及待地期盼着浏览器对这一 API 的广泛支持，想象着可以用这一
API 解决什么问题，解锁什么 CSS 的骚操作！</p>]]></content>
      <categories>
        <category>Computer Science</category>
        <category>Frontend</category>
        <category>Styling</category>
      </categories>
      <tags>
        <tag>Computer Science</tag>
        <tag>UI</tag>
        <tag>Frontend</tag>
        <tag>CSS</tag>
      </tags>
  </entry>
  <entry>
    <title>电路及其应用</title>
    <url>/2022/03/18/physics/High%20School/S2%20Electricity%20and%20Electromagnetism/%E7%94%B5%E8%B7%AF%E5%8F%8A%E5%85%B6%E5%BA%94%E7%94%A8/</url>
    <content><![CDATA[Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
<h2 id="课程标准">课程标准</h2>
<h3 id="课程标准内容">课程标准内容</h3>
<h4 id="电路及其应用必修">3.2 电路及其应用（必修）</h4>
<blockquote>
<p>3.2.1
观察并能识别常见的电路元器件，了解它们在电路中的作用。会使用多用电表。</p>
</blockquote>
<p>​
本条目要求学生：通过观察常见的电路元器件实物，识别生活与技术中应用较多的电路元器件，知道相应的电路元器件在电路中的符号，并通过具体的电路和实验了解这些电路元器件在电路中的作用。通过对电压表、电流表改装原理和欧姆表工作原理的分析，了解多用电表的工作原理。在实际操作中学习使用多用电表测量直流电压、电流、电阻等物理量的方法，在测量中学会换挡，知道怎样减小测量误差等。建议以多用电表作为测量工具，组织一些探究实验，如判断二极管的正负极、光敏电阻和热敏电阻的电阻特性、电容器的电容和漏电现象等，还可以练习用多用电表判断电路的故障。</p>
<blockquote>
<p>3.2.2
通过实验，探究并了解金属导体的电阻与材料、长度和横截面积的定量关系。会测量金属丝的电阻率。</p>
<p>例1 知道滑动变阻器的工作原理。</p>
<p>例2 通过 <span class="math inline"><em>I</em> − <em>U</em></span>
图像了解材料的电阻特性。</p>
</blockquote>
<p>​
本条目要求学生：通过实验探究了解金属导体的电阻与材料、长度和横截面积之间的定量关系，理解电阻定律及其表达式，在实验探究中经历提出间题、寻找证据、解释与交流等科学探究的过程，体验用图像法处理数据的科学方法，促进实验探究能力的提升。学生能设计出测量金属电阻率的实验方案，并通过实验测量金属的电阻率，体验用图像法处理数据的科学方法。通过对不同导体的电阻率测量，了解电阻率的概念，知道常见金属导体电阻率的大小。在实验过程中，了解螺旋测微器的工作原理，在测量导体直径的实验中，学会正确使用螺旋测微器，培养在科学实验中严谨的科学态度。</p>
<blockquote>
<p>3.2.3 了解串、并联电路电阻的特点。</p>
</blockquote>
<p>​
本条目要求学生：了解电阻串、并联电路电压、电流、功率的分配原则；知道串联电路具有分压作用，并联电路具有分流作用；知道串联电路等效电阻等于各电阻之和，大于各个电阻值；知道并联电路等效电阻值倒数等于每条支路电阻值倒数之和，小于各支路电阻值。在串并联电路的探究过程中，教师应让学生体会等效方法来处理复杂问题的思想，让学生通过电压表、电流表改装，加深对串、并联电路特点的理解。</p>
<blockquote>
<p>3.2.4 理解闭合电路欧姆定律。会测量电源的电动势和内阻。</p>
<p>例3
通过探究电源两端电压与电流的关系，体会图像法在研究物理问题中的作用。</p>
</blockquote>
<p>​
本条目要求学生：通过探究实验理解闭合电路欧姆定律，掌握电源电动势与路电压和内电压的关系金并能用能量点解释。通过对实验现象的观察和解释。理电动势的概念和物理合知道电源电动劳和内阻是标志电源性能的重要参数。闭合电路欧如定律释绒对路端电压和电源输出功率的影响等实际问题。能利用闭合电路欧姆定律设计内测量电源电动势和内阻”的实验方案，并能通过实际操作测量出电源电动势和内阻，学习有关的电路连接、测量方面的实验操作技能和规范，通过对实验数据的处理，体会图像在研究物理中的作用。</p>
<blockquote>
<p>3.2.5
理解电功、电功率及焦耳定律，能用焦耳定律解释生产生活中的电热现象。</p>
</blockquote>
<p>​
本条目要求学生：理解电功、电功率的概念和物理含义，掌握电功和电功率的计算公式；通过实验理解焦耳定律，能用焦耳定律计算电路中的电热，能区分电功和电热，能从能量转化和守恒的角度理解非纯电阻电路中电功和电热的关系，提升用能量的观点来理解、解释物理现象的能力。通过分析电流热效应在生产生活中的应用，提升应用物理知识解决实际问题的能力。</p>
<blockquote>
<p>3.2.6
能分析和解决家庭电路中的简单问题，能将安全用电和节约用电的知识应用于生活实际。</p>
<p>例4 根据某家庭的电器设施，估算该家庭电路中所需导线的规格。</p>
</blockquote>
<p>​
本条目要求学生：通过估算家庭电路中所需导线的规格，分析电路故障等简单电路问题，提升物理观念，发展科学思维；通过检查电路是否存在安全隐患，知道安全用电的基本方法；通过调查近年来家庭用电的情况，讨论节约用电如何从自己做起，具有节约用电的意识，养成节约用电的习惯。</p>
<h4 id="教学活动要求">教学活动要求</h4>
<ol type="1">
<li>分别描绘电炉丝、小灯泡、半导体二极管的I-U特性曲线，对比它们导电性能的特点。</li>
<li>收集新型电热器的资料，了解其发热原理。</li>
<li>观察家庭用电器的工作状况，检查是否存在安全隐患，知道安全用电的基本方法。</li>
<li>调查近年来家庭用电的情况，讨论节约用电如何从自己做起，养成节约用电的习惯。</li>
</ol>
<h2 id="知识聚焦">知识聚焦</h2>
<h3 id="一电源和电流电阻">一、电源和电流、电阻</h3>
<h4 id="电源">1. 电源</h4>
<p>​ 能把电子从 <span class="math inline"><em>A</em></span> 搬运到 <span class="math inline"><em>B</em></span> 的装置 <span class="math inline"><em>P</em></span> 就是<strong>电源</strong>，<span class="math inline"><em>A</em></span> 和 <span class="math inline"><em>B</em></span>
是电源的两个电极。电源中存在由稳定分布的电荷所产生的稳定的电场，叫作<strong>恒定电场</strong>，让导体中的自由电荷做定向运动，形成一个大小、方向都不随时间变化的电流（<strong>恒定电流</strong>）。</p>
<h4 id="电流">2. 电流</h4>
<p>​
电流的强弱用<strong>电流</strong>这一物理量描述，==反应单位时间内通过导体横截面的电荷数量多少==，用符号
<span class="math inline"><em>I</em></span> 描述，单位安培，简称安，符号
<span class="math inline"><em>A</em></span>，有 <span class="math inline">$I=\dfrac{q}{t}=nqSv$</span>。</p>
<h4 id="电阻">3. 电阻</h4>
<p>​ 同一个金属导体的<strong>伏安特性曲线</strong>即 <span class="math inline"><em>U</em> − <em>I</em></span>
图像是一条过原点的直线，不管电流电压怎样变化，同一导体电压跟电流之比都是一个常量，我们称之为<strong>电阻</strong>，==反应导体对电流的阻碍作用==，用符号
<span class="math inline"><em>R</em></span>
表示，单位欧姆，简称欧，符号<span class="math inline"><em>ω</em></span>。</p>
<p>​ ==同种材料的导体，其电阻 <span class="math inline"><em>R</em></span> 与它的长度 <span class="math inline"><em>l</em></span> 成正比，与它的横截面积 <span class="math inline"><em>S</em></span>
成反比；导体电阻还与构成它的材料有关==，也即 <span class="math inline">$R=\rho\dfrac{l}{S}$</span>。同种材料的 <span class="math inline"><em>ρ</em></span>
不变，称为该材料的<strong>电阻率</strong>。一些金属在温度特别低时电阻可以降为
<span class="math inline">0</span>，该现象称为<strong>超导现象</strong>。</p>
<h4 id="实验研究影响导体电阻的因素-exp-研究影响导体电阻的因素">4.
实验：研究影响导体电阻的因素 | #exp-研究影响导体电阻的因素</h4>
<h5 id="一实验原理">一、实验原理</h5>
<p>​
电压表测量电压比较电压之比，根据串联电路电流关系可以得出电阻关系。</p>
<h5 id="二实验思路">二、实验思路</h5>
<p>​ <span class="math inline"><em>a</em></span>、<span class="math inline"><em>b</em></span>、<span class="math inline"><em>c</em></span>、<span class="math inline"><em>d</em></span>
是四段不同的金属导体。在长度、横截面积和材料三个因素中，<span class="math inline"><em>b</em></span>、<span class="math inline"><em>c</em></span>、<span class="math inline"><em>d</em></span> 跟 <span class="math inline"><em>a</em></span> 相比，分别只有一个因素不同。</p>
<p>​
图中四段导体是串联的，每段导体两端的电压与它们的电阻成正比，因研究影响导体电阻的因素此，用电压表分别测量<span class="math inline"><em>a</em></span>、<span class="math inline"><em>b</em></span>、<span class="math inline"><em>c</em></span>、<span class="math inline"><em>d</em></span>
两端的电压，就能知道它们的电阻之比。这样就可以得出长度、横截面积和材料这三个因素与导体电阻的关系。</p>
<figure>
<img src="https://raw.githubusercontent.com/PassionPenguin/picgo-database/main/image-20220319100527608.png" alt="影响导体电阻的因素">
<figcaption aria-hidden="true">影响导体电阻的因素</figcaption>
</figure>
<h5 id="三实验操作">三、实验操作</h5>
<ol type="1">
<li><strong>导体电阻与长度的关系</strong>：<span class="math inline"><em>b</em></span> 与 <span class="math inline"><em>a</em></span>，长度不同，横截面积、材料相同。比较
<span class="math inline"><em>a</em></span>、<span class="math inline"><em>b</em></span> 的电阻之比与它们的长度之比。</li>
<li><strong>导体电阻与横截面积的关系</strong>：<span class="math inline"><em>c</em></span> 与 <span class="math inline"><em>a</em></span>，横截面积不同，长度、材料相同。比较
<span class="math inline"><em>a</em></span>、<span class="math inline"><em>c</em></span>
的电阻之比与它们的横截面积之比。</li>
<li><strong>导体电阻与材料的关系</strong>：<span class="math inline"><em>d</em></span> 与 <span class="math inline"><em>a</em></span>，材料不同，长度、横截面积相同。比较
<span class="math inline"><em>a</em></span>、<span class="math inline"><em>d</em></span> 的电阻 是否相等。</li>
<li>改变滑动变阻器滑片的位置，重复上述步骤，可以获得多组实验数据以得到更可靠的结论。</li>
</ol>
<h5 id="四测量物理量">四、测量物理量</h5>
<p>​ 测量 <span class="math inline"><em>a</em></span>、<span class="math inline"><em>b</em></span>、<span class="math inline"><em>c</em></span>、<span class="math inline"><em>d</em></span>
四段电压，记录数据以比较电阻关系。</p>
<!--##### 五、误差分析-->
<h4 id="实验导体电阻率的测量-exp-导体电阻率的测量">5.
实验：导体电阻率的测量 | #exp-导体电阻率的测量</h4>
<h5 id="长度的测量">1. 长度的测量</h5>
<h6 id="游标卡尺">游标卡尺</h6>
<p><img src="https://raw.githubusercontent.com/PassionPenguin/picgo-database/main/vernier_caliper.png" alt="游标卡尺示例图" style="max-width: 480px"></p>
<p>游标卡尺各部分：</p>
<ol type="1">
<li>外测量爪</li>
<li>内测量爪</li>
<li>深度尺</li>
<li>主尺（单位英尺）</li>
<li>主尺（单位厘米）</li>
<li>游标尺（单位厘米）</li>
<li>游标尺（单位英尺）</li>
<li>紧固螺丝</li>
</ol>
<p><img src="https://raw.githubusercontent.com/PassionPenguin/picgo-database/main/vernier_caliper_reading.png" alt="游标卡尺读数示例图" style="max-width:480px"></p>
<ol type="1">
<li>主尺读数：读游标尺，看零刻度线位于主尺哪两个刻度之间：
<ul>
<li>图例：零刻度线位于 2.4 与 2.5 之间，见 <strong>①</strong>
处，则主尺刻度为 <strong>24mm</strong>。</li>
</ul></li>
<li>游标尺读数：读游标尺，找游标尺上与主尺相重叠的刻度线：
<ul>
<li>图例：恰好第 15 条刻度线与主尺刻度线 5.4 相重叠，见
<strong>②</strong> 处，则游标尺刻度为刻度线数与分度的积 <strong>15 ×
0.05 = 0.75mm</strong>。</li>
</ul></li>
<li>读数为主尺读数与游标尺读数之和：
<ul>
<li>图例：<strong>24 + 0.75 = 24.75mm</strong>。</li>
</ul></li>
</ol>
<h6 id="螺旋测微计">螺旋测微计</h6>
<p><img src="https://raw.githubusercontent.com/PassionPenguin/picgo-database/main/micrometer.png" alt="螺旋测微计示例图" style="zoom:25%;"></p>
<p>螺旋测微器各部分：</p>
<ol type="1">
<li>螺旋测微器框架，决定<strong>测量的最大长度</strong></li>
<li>小砧</li>
<li>测微螺杆</li>
<li>紧固螺丝</li>
<li>主轴 固定刻度</li>
<li>旋轴 可动刻度</li>
<li>旋钮</li>
<li>微调旋钮</li>
</ol>
<p><img src="https://raw.githubusercontent.com/PassionPenguin/picgo-database/main/micrometer_reading.png" alt="螺旋测微计读数示例图" style="zoom:25%;"></p>
<p>螺旋测微器的读数分为以下步骤：</p>
<ol type="1">
<li><strong>查零：检查小砧与测微螺杆紧靠时，可动刻度的零刻度线</strong>是否与<strong>固定刻度</strong>所在轴直线平齐。</li>
<li><strong>测量</strong>：物体放入<strong>小砧</strong>与<strong>测微螺杆</strong>之间，旋转<strong>旋钮</strong>到接近物体长度，再旋转<strong>微调旋钮</strong>到“<strong>咔嗒</strong>声”。</li>
<li><strong>读数</strong>：先读固定刻度，单位 1mm，分度
0.5mm。再读可动刻度，单位 0.01mm，分度 0.001mm。</li>
<li>记录：读数=固定刻度+可动刻度。
<ul>
<li>图例：<strong>20.5 + 0.13 = 20.63mm</strong>。</li>
</ul></li>
</ol>
<h5 id="二实验原理">二、实验原理</h5>
<p>​ 电阻大小与长度、横截面积、电阻率的关系：<span class="math inline">$R=\rho\dfrac{l}{S}$</span>，可以推出 <span class="math inline">$\rho=\dfrac{\pi d^2U}{4Il}$</span>。</p>
<h5 id="三实验操作-1">三、实验操作</h5>
<figure>
<img src="https://raw.githubusercontent.com/PassionPenguin/picgo-database/main/image-20220319111344431.png" alt="image-20220319111344431">
<figcaption aria-hidden="true">image-20220319111344431</figcaption>
</figure>
<ol type="1">
<li>用螺旋测微器或游标卡尺在被测金属丝三个不同位置各测一次直径，求平均值
<span class="math inline"><em>d</em></span>。</li>
<li>按实验电路图连接实物电路。</li>
<li>用毫米刻度尺测量接入电路中的被测金属丝的有效长度，反复测量三次，求平均值
<span class="math inline"><em>L</em></span>。</li>
<li>闭合开关，改变滑动变阻器滑片的位置， 读取多组电压、电流值， 通过
<span class="math inline"><em>U</em> − <em>I</em></span> 图像求得电阻
<span class="math inline"><em>R</em></span>。</li>
<li>根据关系式计算电阻率</li>
</ol>
<h5 id="四测量物理量-1">四、测量物理量</h5>
<p>​ 测量金属丝直径 <span class="math inline"><em>d</em></span>、接入电路有效长度 <span class="math inline"><em>L</em></span> 以及金属丝两端电压电流 <span class="math inline"><em>U</em>, <em>I</em></span>。根据关系式计算得到
<span class="math inline">$\rho=\dfrac{\pi d^2U}{4lI}$</span>。</p>
<h5 id="五误差分析">五、误差分析</h5>
<ol type="1">
<li>测量金属丝直径、有效长度时测量误差。</li>
<li>伏安法测量电阻时，电压表分流产生误差。</li>
<li>金属丝通电后发热，使电阻率升高。</li>
</ol>
<h3 id="二串联电路和并联电路">二、串联电路和并联电路</h3>
<h4 id="电流电压和电阻的关系">1. 电流、电压和电阻的关系</h4>
<table>
<colgroup>
<col style="width: 8%">
<col style="width: 24%">
<col style="width: 32%">
<col style="width: 34%">
</colgroup>
<thead>
<tr class="header">
<th></th>
<th><span class="math inline"><em>I</em></span></th>
<th><span class="math inline"><em>U</em></span></th>
<th><span class="math inline"><em>R</em></span></th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>串联电路</td>
<td>处处相等</td>
<td>总电压等于各部分电路两端电压之和</td>
<td>总电阻等于各部分电路电阻之和</td>
</tr>
<tr class="even">
<td>并联电路</td>
<td>总电流等于各支路电流之和</td>
<td>总电压与各支路电压相等</td>
<td>总电阻的倒数等于各支路电阻的倒数和</td>
</tr>
</tbody>
</table>
<h4 id="等效电路问题">2. 等效电路问题</h4>
<p>​
求解电路问题，首先要识别电路的结构，即串并联关系及特点；其次要掌握电路简化的方法和技巧。</p>
<ol type="1">
<li>凡是接在两个同样等势点上的用电器为并联关系，凡是同一电流流过的用电器为串联关系。</li>
<li>用导线直接连接的各点电势一定相等（包括用不计电阻的电流表、没有电流通过的电阻连接的点）。</li>
<li>在没有特殊说明下，不考虑电表对电路的影响，电流表视为短路，电压表、电容器视为断路。</li>
</ol>
<h4 id="电流表电压表的电路结构">3. 电流表、电压表的电路结构</h4>
<p>​
常用的电压表和电流表都是由小量程的电流表（表头）改装而成的。表头的工作原理涉及磁场对通电导线的作用（磁电式电流计）。</p>
<p>​ 表头的电阻 <span class="math inline"><em>R</em><sub><em>g</em></sub></span>
叫作电流表的<strong>内阻</strong>。指针偏转到最大刻度时的电流 <span class="math inline"><em>I</em><sub><em>g</em></sub></span>
叫作<strong>满偏电流</strong>。表头通过满偏电流时，加在它两端的电压
<span class="math inline"><em>U</em><sub><em>g</em></sub></span>
叫作<strong>满偏电压</strong>。由欧姆定律可知 <span class="math inline"><em>U</em><sub><em>g</em></sub>＝<em>I</em><sub><em>g</em></sub><em>R</em><sub><em>g</em></sub></span>。表头的满偏电压
<span class="math inline"><em>U</em><sub><em>g</em></sub></span>
和满偏电流 <span class="math inline"><em>I</em><sub><em>g</em></sub></span>
一般都比较小，测量大电压时需要串连一个分压电阻，测量大电流时需要并联一个分流电阻。</p>
<blockquote>
<h4 id="改装电压表">改装电压表</h4>
<p>​ 下图为将表头改装为电压表的方式：串连一个较大电阻 <span class="math inline"><em>R</em></span>。</p>
<figure>
<img src="https://raw.githubusercontent.com/PassionPenguin/picgo-database/main/image-20220319113205989.png" alt="改装示例图">
<figcaption aria-hidden="true">改装示例图</figcaption>
</figure>
<p>​ 最大量程由 <span class="math inline"><em>U</em><sub><em>g</em></sub></span> 变为 <span class="math inline"><em>U</em></span>，则 <span class="math inline"><em>U</em> = <em>U</em><sub><em>g</em></sub> + <em>U</em><sub><em>R</em></sub></span>；</p>
<p>​ 由表头与 <span class="math inline"><em>R</em></span> 串联，有 <span class="math inline">$\dfrac{U_R}{R}=\dfrac{U_g}{R_g}\Rightarrow
R=\dfrac{U_r}{U_g}R_g=\dfrac{U-U_g}{U_g}R_g$</span>；</p>
<p>​ 故电表总电阻<span class="math inline">$R_V=R_g+R=\dfrac{U}{I_g}$</span>。</p>
</blockquote>
<blockquote>
<h4 id="改装电流表">改装电流表</h4>
<p>​ 下图为将表头改装为电压表的方式：并联一个较小电阻 <span class="math inline"><em>R</em></span>。</p>
<figure>
<img src="https://raw.githubusercontent.com/PassionPenguin/picgo-database/main/image-20220319113227077.png" alt="改装示例图">
<figcaption aria-hidden="true">改装示例图</figcaption>
</figure>
<p>​ 最大量程由 <span class="math inline"><em>I</em><sub><em>g</em></sub></span> 变为 <span class="math inline"><em>I</em></span>，则 <span class="math inline"><em>I</em> = <em>I</em><sub><em>g</em></sub> + <em>I</em><sub><em>R</em></sub></span>；</p>
<p>​ 由表头与 <span class="math inline"><em>R</em></span> 串联，有 <span class="math inline">$I_gR_g=I_RR\Rightarrow
R=\dfrac{I_g}{I_R}R_g=\dfrac{I_g}{I-I_g}R_g$</span>；</p>
<p>​ 故电表总电阻<span class="math inline">$R_A=\dfrac{R_gR}{R_g+R}=\dfrac{U_g}{I}$</span>。</p>
</blockquote>
<h3 id="三-电阻的测量">三、 电阻的测量</h3>
<p>​
测量电阻，一般使用伏安法（测量电阻的电压、电流），可拓展为电表的内外接、滑动变阻器的限流与分压。</p>
<h4 id="内接法与外接法">1. 内接法与外接法</h4>
<p>​
电流表内外接的选择原则是<strong>大内小外</strong>，也即==测大电阻用内接法，测小电阻用外接法==，合并误差的大小关系，可以得出口诀<strong>大内大小外小</strong>。</p>
<blockquote>
<h4 id="电流表内接法">电流表内接法</h4>
<p>​ 下图为电流表的内接法，<span class="math inline"><em>R</em><sub><em>测</em></sub> = <em>R</em><sub><em>A</em></sub> + <em>R</em></span>：</p>
<figure>
<img src="https://raw.githubusercontent.com/PassionPenguin/picgo-database/main/A_inside.svg" alt="电流表内接">
<figcaption aria-hidden="true">电流表内接</figcaption>
</figure>
<ol type="1">
<li>电压表示数 <span class="math inline"><em>U</em><sub><em>V</em></sub> = <em>U</em><sub><em>R</em></sub> + <em>U</em><sub><em>A</em></sub> &gt; <em>U</em><sub><em>R</em></sub></span>，电流表示数
<span class="math inline"><em>I</em><sub><em>A</em></sub> = <em>I</em><sub><em>R</em></sub></span>；</li>
<li><span class="math inline">$R_测=\dfrac{U_V}{I_A}&gt;\dfrac{U_R}{I_R}=R_真$</span>，<strong>测量值偏大</strong>，==误差来源于电流表的分压作用==。</li>
</ol>
</blockquote>
<blockquote>
<h4 id="电流表外接法">电流表外接法</h4>
<p>​ 下图为电流表的外接法，<span class="math inline">$R_测=\dfrac{R_VR}{R_V+R}$</span>：</p>
<figure>
<img src="https://raw.githubusercontent.com/PassionPenguin/picgo-database/main/A_outside.svg" alt="电流表外接">
<figcaption aria-hidden="true">电流表外接</figcaption>
</figure>
<ol type="1">
<li>电压表示数 <span class="math inline"><em>U</em><sub><em>V</em></sub> = <em>U</em><sub><em>R</em></sub></span>，电流表示数
<span class="math inline"><em>I</em><sub><em>A</em></sub> = <em>I</em><sub><em>R</em></sub> + <em>I</em><sub><em>V</em></sub> &gt; <em>I</em><sub><em>R</em></sub></span>；</li>
<li><span class="math inline">$R_测=\dfrac{U_V}{I_A}&lt;\dfrac{U_R}{I_R}=R_真$</span>，<strong>测量值偏小</strong>，==误差来源于电压表的分流作用==。</li>
</ol>
</blockquote>
<h4 id="限流法与分压法">2. 限流法与分压法</h4>
<p>​
滑动变阻器一般选择<strong>阻值范围小，额定电流大</strong>，使其调节起来更为灵敏。</p>
<blockquote>
<h4 id="滑动变阻器限流接法">滑动变阻器限流接法</h4>
<p>下图为滑动变阻器的限流接法，电阻 <span class="math inline"><em>R</em><sub><em>x</em></sub></span>
的电压变化范围为 <span class="math inline">$\dfrac{R_xU}{R+R_x}\to
U$</span>。</p>
<figure>
<img src="https://raw.githubusercontent.com/PassionPenguin/picgo-database/main/limit_current.svg" alt="滑动变阻器限流">
<figcaption aria-hidden="true">滑动变阻器限流</figcaption>
</figure>
<ol type="1">
<li>电压不能从零开始调节，调节范围较小；</li>
<li>电能损耗小。</li>
</ol>
</blockquote>
<blockquote>
<h4 id="滑动变阻器分压接法">滑动变阻器分压接法</h4>
<p>​ 下图为滑动变阻器的分压接法，电阻 <span class="math inline"><em>R</em><sub><em>x</em></sub></span>
的电压变化范围为 <span class="math inline">0 → <em>U</em></span>。</p>
<figure>
<img src="https://raw.githubusercontent.com/PassionPenguin/picgo-database/main/separate_voltage.svg" alt="滑动变阻器分压">
<figcaption aria-hidden="true">滑动变阻器分压</figcaption>
</figure>
<ol type="1">
<li>电压可以从零开始调节到等于电源两端电压，调节范围极大；</li>
<li>电能损耗大。</li>
</ol>
</blockquote>
<h4 id="替代法包括半偏法测量电阻">3. 替代法（包括半偏法）测量电阻</h4>
<p>​
测量电表内阻时，我们可以的认为它是一个能直接测量自身分得电压或通过电流的工具，需要测量的就是另一未知的物理量。</p>
<blockquote>
<h4 id="半偏法测量电流表内阻">半偏法测量电流表内阻</h4>
<p>​ 下图为半偏法测量电流表内阻 <span class="math inline"><em>R</em><sub><em>A</em></sub></span>
的示例图：</p>
<ol type="1">
<li>先闭合 <span class="math inline"><em>S</em><sub>1</sub></span>，断开
<span class="math inline"><em>S</em><sub>2</sub></span>，调节滑动变阻器
<span class="math inline"><em>R</em><sub>1</sub></span>
使电流表读数达到满偏 <span class="math inline"><em>I</em><sub>0</sub></span>；</li>
<li>保持 <span class="math inline"><em>R</em><sub>1</sub></span>
不变，闭合 <span class="math inline"><em>S</em><sub>2</sub></span>，调节
<span class="math inline"><em>R</em><sub>2</sub></span> 使电流表读数为
<span class="math inline">$\dfrac{I_0}{2}$</span>，此时 <span class="math inline"><em>R</em><sub>2</sub> = <em>R</em><sub><em>A</em></sub></span>。</li>
</ol>
<figure>
<img src="https://raw.githubusercontent.com/PassionPenguin/picgo-database/main/half_ammeter.svg" alt="半偏法测电流表内阻">
<figcaption aria-hidden="true">半偏法测电流表内阻</figcaption>
</figure>
</blockquote>
<blockquote>
<h4 id="半偏法测量电压表内阻">半偏法测量电压表内阻</h4>
<p>​ 下图为半偏法测量电压表内阻 <span class="math inline"><em>R</em><sub><em>V</em></sub></span>
的示例图：</p>
<ol type="1">
<li>先闭合 <span class="math inline"><em>S</em></span>，将电阻箱 <span class="math inline"><em>R</em><sub>2</sub></span> 的阻值调为 <span class="math inline">0</span>，使电压表达到满偏 <span class="math inline"><em>U</em><sub>0</sub></span>；</li>
<li>保持 <span class="math inline"><em>R</em><sub>1</sub></span>
不变，调节 <span class="math inline"><em>R</em><sub>2</sub></span>，使电压表的示数为
<span class="math inline">$\dfrac{U_0}{2}$</span>，此时 <span class="math inline"><em>R</em><sub>2</sub> = <em>R</em><sub><em>V</em></sub></span>。</li>
</ol>
<figure>
<img src="https://raw.githubusercontent.com/PassionPenguin/picgo-database/main/half_voltmeter.svg" alt="半偏法测电压表内阻">
<figcaption aria-hidden="true">半偏法测电压表内阻</figcaption>
</figure>
</blockquote>
<blockquote>
<h4 id="替代法测电阻">替代法测电阻</h4>
<p>​ 下图为替代法测电阻 <span class="math inline"><em>R</em><sub><em>x</em></sub></span>
的示例图：</p>
<ol type="1">
<li>先闭合 <span class="math inline"><em>S</em></span>，调节 <span class="math inline"><em>R</em><sub>1</sub></span> 使电压表示数为 <span class="math inline"><em>U</em><sub>0</sub></span>；</li>
<li>保持 <span class="math inline"><em>R</em><sub>1</sub></span>
不变，换接电阻箱 <span class="math inline"><em>R</em></span>，调节使电压表示数为 <span class="math inline"><em>U</em><sub>0</sub></span>，此时 <span class="math inline"><em>R</em><sub><em>x</em></sub> = <em>R</em></span>。</li>
</ol>
<figure>
<img src="https://raw.githubusercontent.com/PassionPenguin/picgo-database/main/alternative_oh.svg" alt="替代法测电阻">
<figcaption aria-hidden="true">替代法测电阻</figcaption>
</figure>
</blockquote>
<h4 id="实验练习使用多用电表-exp-练习使用多用电表">4.
实验：练习使用多用电表 | #exp-练习使用多用电表</h4>
<figure>
<img src="https://raw.githubusercontent.com/PassionPenguin/picgo-database/main/image-20220319112315612.png" alt="image-20220319112315612">
<figcaption aria-hidden="true">image-20220319112315612</figcaption>
</figure>
<blockquote>
<h5 id="注意事项">注意事项</h5>
<ol type="1">
<li>使用前应该调整<strong>指针定位螺丝</strong>进行<strong>机械调零</strong>操作，使指针指到零刻度。然后用红表笔和黑表笔分别插入正负孔，测试笔插孔。</li>
<li>使用时，应先将选择开关旋转到与被测物理量对应的位置上并选择合适的量程。</li>
<li>测量电阻时，需要注意：
<ol type="1">
<li>选档时<strong>尽可能让指针转到中央刻度附近</strong>。</li>
<li>测量前短接表笔进行<strong>欧姆调零</strong>（每次换挡后都需要欧姆调零）。</li>
</ol></li>
<li>测量完成后调节选择开关至 <strong><span class="math inline"><em>O</em><em>F</em><em>F</em></span>
或交流电压最高档</strong>。</li>
<li>红表笔接触点的电势应该比黑表笔高，电流总是红入黑出。</li>
</ol>
</blockquote>
<h3 id="四电功和电功率欧姆定律">四、电功和电功率、欧姆定律</h3>
<h4 id="纯电阻电路电功和电功率">1. 纯电阻电路电功和电功率</h4>
<p>​
电流在一段电路中所做的功与通电时间之比叫作<strong>电功率</strong>，用
<span class="math inline"><em>P</em></span> 表示，由 <span class="math inline">$P=\dfrac{W}{t}$</span>， 进而得到 <span class="math inline"><em>P</em> = <em>U</em><em>I</em></span>，即==电流在一段电路中做功的功率
<span class="math inline"><em>P</em></span> 等于这段电路两端的电压 <span class="math inline"><em>U</em></span> 与电流 <span class="math inline"><em>I</em></span> 的乘积==。</p>
<p>​ 同样，由欧姆定律我们可以得到热量 <span class="math inline"><em>Q</em></span> 的定义式 <span class="math inline"><em>Q</em> = <em>I</em><sup>2</sup><em>R</em><em>t</em></span>，即<strong>焦耳定律</strong>：==电流通过导体产生的热量跟电流的二次方成正比，跟导体的电阻及通电时间成正比==</p>
<h4 id="闭合电路欧姆定律">2. 闭合电路欧姆定律</h4>
<p>​
由导线、电源和用电器连成的电路叫作<strong>闭合电路</strong>，分为<strong>外电路</strong>与<strong>内电路</strong>，如图：</p>
<figure>
<img src="https://raw.githubusercontent.com/PassionPenguin/picgo-database/main/image-20220318183340415.png" alt="image-20220318183340415">
<figcaption aria-hidden="true">image-20220318183340415</figcaption>
</figure>
<p>​
在电源内部要让正电荷定向移动到正极，需要有一种与静电力方向相反的力，即<strong>非静电力</strong>作用于电荷上，使电荷的电势能增加，即==电源是通过非静电力做功把其他形式的能转化为电势能的装置==。</p>
<p>​
在电源内部电源移动电荷，增加电荷的电势能，其做的功与移动的电荷量之比称为电源的<strong>电动势</strong>，即
<span class="math inline">$E=\dfrac{W}{q}$</span>。</p>
<p>​
==在外电路中，沿电流方向电势降低。==在内电路中也存在电阻（<strong>内电阻</strong>，简称<strong>内阻</strong>），使其中电势也沿电流方向降低。</p>
<p>​
==闭合电路的电流跟电源的电动势成正比，跟内、外电路的电阻之和成反比==。这个结论叫<strong>闭合电路的欧姆定律</strong>，即
<span class="math inline">$I=\dfrac{E}{R+r}$</span>，推出 <span class="math inline"><em>E</em> = <em>U</em><sub><em>外</em></sub> + <em>U</em><sub><em>内</em></sub></span>。</p>
<p>​
我们常将外电路的用电器称为<strong>负载</strong>，称外电路的电势降落为<strong>路端电压</strong>
<span class="math inline"><em>U</em></span>，根据闭合电路的欧姆定律，有
<span class="math inline"><em>U</em> = <em>E</em> − <em>I</em><em>r</em></span>。</p>
<h4 id="实验电池电动势和内阻的测量-exp-电池电动势和内阻的测量">3.实验：电池电动势和内阻的测量
| #exp-电池电动势和内阻的测量</h4>
<h5 id="一实验原理-1">一、实验原理：</h5>
<p>​ 实验原理为闭合电路欧姆定律。</p>
<h5 id="二实验思路-1">二、实验思路</h5>
<ol type="1">
<li><p>思路一：<strong>伏安法</strong></p>
<p>​ 根据闭合电路的欧姆定律，电源电动势 <span class="math inline"><em>E</em></span>、内阻 <span class="math inline"><em>r</em></span>，与路端电压 <span class="math inline"><em>U</em></span>、电流 <span class="math inline"><em>I</em></span> 的关系可以写成 <span class="math inline"><em>E</em> = <em>U</em> + <em>I</em><em>r</em></span>，如果能测出
<span class="math inline"><em>U</em></span> 与 <span class="math inline"><em>I</em></span> 的两组数据，就可以解出 <span class="math inline"><em>E</em></span> 与 <span class="math inline"><em>r</em></span>​。因此，用电压表、电流表加上一个滑动变阻器
<span class="math inline"><em>R</em></span>，就能测定电源的电动势 <span class="math inline"><em>E</em></span> 和内阻 <span class="math inline"><em>r</em></span>。</p>
<figure>
<img src="https://raw.githubusercontent.com/PassionPenguin/picgo-database/main/image-20220320142426857.png" alt="image-20220320142426857">
<figcaption aria-hidden="true">image-20220320142426857</figcaption>
</figure></li>
<li><p>思路二：<strong>安阻法</strong></p>
<p>​ 根据闭合电路欧姆定律的变式 <span class="math inline"><em>E</em> = <em>I</em><em>R</em> + <em>I</em><em>r</em></span>​，测出
<span class="math inline"><em>I</em></span>、<span class="math inline"><em>R</em></span> 的两组数据，也可以得到关于 <span class="math inline"><em>E</em></span> 和 <span class="math inline"><em>r</em></span> 的两个方程，从中解出 <span class="math inline"><em>E</em></span> 和 <span class="math inline"><em>r</em></span>。这样，用电流表和电阻箱也可以测定电源的电动势
<span class="math inline"><em>E</em></span> 和内阻 <span class="math inline"><em>r</em></span>。</p>
<figure>
<img src="https://raw.githubusercontent.com/PassionPenguin/picgo-database/main/image-20220320142612756.png" alt="image-20220320142612756">
<figcaption aria-hidden="true">image-20220320142612756</figcaption>
</figure></li>
<li><p>思路三：<strong>伏阻法</strong></p>
<p>​ 根据闭合电路欧姆定律的变式 <span class="math inline">$E=U+\dfrac{U}{R}r$</span>​，测出 <span class="math inline"><em>U</em></span>、<span class="math inline"><em>R</em></span> 的两组数据，同样能通过解方程组求出
<span class="math inline"><em>E</em></span> 和 <span class="math inline"><em>r</em></span>。这样，除了以上两个方法外，还可以用电压表和电阻箱来测定电源的电动势
<span class="math inline"><em>E</em></span> 和内阻 <span class="math inline"><em>r</em></span>。</p>
<figure>
<img src="https://raw.githubusercontent.com/PassionPenguin/picgo-database/main/image-20220320142719137.png" alt="image-20220320142719137">
<figcaption aria-hidden="true">image-20220320142719137</figcaption>
</figure></li>
</ol>
<h5 id="三实验操作-2">三、实验操作</h5>
<p>​ 只测量两组数据，通过联立方程解得 <span class="math inline"><em>E</em></span> 和 <span class="math inline"><em>r</em></span>，看起来比较简单，误差却可能较大。只有多次测量，并对数据进行处理，才能减小误差。所以，应该使用滑动变阻器改变外电路的电阻，进行多次测量。</p>
<h5 id="四测量物理量-2">四、测量物理量</h5>
<p>​ 按照不同思路分别测量不同的物理量，代入式计算。</p>
<ol type="1">
<li>伏安法处理数据有以下两种方式：
<ol type="1">
<li>公式法：根据闭合电路欧姆定律，列方程组即可。</li>
<li>作图法：根据 <span class="math inline"><em>U</em> =  − <em>I</em><em>r</em> + <em>E</em></span>（<span class="math inline"><em>y</em> = <em>k</em><em>x</em> + <em>b</em></span>），根据描点作图结果，直线的斜率的绝对值为内阻
<span class="math inline"><em>r</em></span>，直线的 <span class="math inline"><em>y</em></span> 轴截距为电源电动势 <span class="math inline"><em>E</em></span>。</li>
</ol></li>
<li>安阻法处理数据有以下两种方式：
<ol type="1">
<li>公式法，根据闭合电路欧姆定律 <span class="math inline"><em>E</em> = <em>I</em>(<em>R</em>+<em>r</em>)</span>，有
<span class="math inline">$E=\dfrac{(R_1-R_2)I_1I_2}{I_2-I_1}$</span>，<span class="math inline">$r=\dfrac{I_1R_1-I_2R_2}{I_2-I_1}$</span>。</li>
<li>作图法：根据 <span class="math inline"><em>E</em> = <em>I</em>(<em>R</em>+<em>r</em>)</span>，有变式
<span class="math inline">$\dfrac{1}{r}=\dfrac{R}{E}+\dfrac{r}{E}$</span>，即直线的斜率为
<span class="math inline">$\dfrac{1}{E}$</span>，<span class="math inline"><em>y</em></span> 轴截距为 <span class="math inline">$\dfrac{r}{E}$</span>。</li>
</ol></li>
<li>伏阻法处理数据有以下两种方式：
<ol type="1">
<li>公式法：根据闭合电路欧姆定律 <span class="math inline">$E=U+\dfrac{U}{R}r$</span>，有 <span class="math inline">$E=\dfrac{U_1U_2(R_2-R_1)}{U_1R_2-U_2R_1}$</span>，<span class="math inline">$r=\dfrac{R_1R_2(U_1-U_2)}{U_2R_1-U_1R_2}$</span>。</li>
<li>作图法：根据闭合电路欧姆定律 <span class="math inline">$E=U+\dfrac{U}{R}r$</span>，有变式 <span class="math inline">$\dfrac{1}{U}=\dfrac{1}{E}+\dfrac{r}{E}\cdot\dfrac{1}{R}$</span>，即直线的斜率为
<span class="math inline">$\dfrac{r}{E}$</span>，在 <span class="math inline"><em>y</em></span> 轴上的截距为 <span class="math inline">$\dfrac{1}{E}$</span>。</li>
</ol></li>
</ol>
<h5 id="五误差分析-1">五、误差分析</h5>
<ol type="1">
<li><p>伏安法测得的误差来源于电压表的分流时（电流表外接），测量值均偏小。伏安法测得的误差来源于电流表的分压时（电流表内接），电源电动势无系统误差，但电源内阻偏大。</p>
<ol type="1">
<li><p>电流表外接误差分析：<span class="math inline">$E_测=\dfrac{R_V}{R_V+r}E$</span>，<span class="math inline">$r_测=\dfrac{R_V}{R_V+r}r$</span>。</p>
<p><img src="https://raw.githubusercontent.com/PassionPenguin/picgo-database/main/Electromotive-force-measurement-Ammeter-separate-voltage.svg" alt="电流表外接误差分析" style="max-width: 240px"></p></li>
<li><p>电流表内接误差分析：<span class="math inline"><em>E</em><sub><em>测</em></sub> = <em>E</em></span>，<span class="math inline"><em>r</em><sub><em>测</em></sub> = <em>R</em><sub><em>A</em></sub> + <em>r</em></span>。</p>
<p><img src="https://raw.githubusercontent.com/PassionPenguin/picgo-database/main/Electromotive-force-measurement-Voltmeter-separate-current.svg" alt="电流表内接误差分析" style="max-width: 240px"></p></li>
</ol></li>
<li><p>安阻法测得的电源电动势无系统误差，但电源内阻测量值偏大，误差来源于<strong>电流表的分压</strong>。</p></li>
<li><p>伏阻法计算得到的的数据都偏小，误差来源于<strong>电压表的分流</strong>。</p></li>
</ol>
<h4 id="电源的最大输出功率">4. 电源的最大输出功率</h4>
<p>​ 电源的输出功率 <span class="math inline"><em>P</em><sub><em>O</em></sub> = <em>U</em><em>I</em></span>，由闭合电路欧姆定律，<span class="math inline"><em>I</em></span> 与 <span class="math inline"><em>U</em></span> 成反比关系，证明 <span class="math inline"><em>U</em><em>I</em></span>
有极值存在。如果外电路是纯电阻电路，则有 <span class="math inline">$P_O=UI=I^2R=(\dfrac{E}{R+r})^2\times
R$</span>。</p>
<p>​ 因为 <span class="math inline">(<em>R</em>+<em>r</em>)<sup>2</sup> = (<em>R</em>−<em>r</em>)<sup>2</sup> + 4<em>R</em><em>r</em></span>，故==当
<span class="math inline"><em>R</em> = <em>r</em></span>（外电路电阻与内电阻相等时）功率有最大值==，<span class="math inline">$P_{Omax}=\dfrac{E^2}{4r}$</span>。</p>]]></content>
      <categories>
        <category>High School</category>
        <category>Physics</category>
        <category>Electricity and Electromagnetism</category>
      </categories>
      <tags>
        <tag>School Notes</tag>
        <tag>High School</tag>
        <tag>Physics</tag>
      </tags>
  </entry>
  <entry>
    <title>静电场</title>
    <url>/2022/03/17/physics/High%20School/S2%20Electricity%20and%20Electromagnetism/%E9%9D%99%E7%94%B5%E5%9C%BA/</url>
    <content><![CDATA[Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
<h2 id="课程标准">课程标准</h2>
<h3 id="课程标准内容">课程标准内容</h3>
<h4 id="静电场必修">3.3 静电场（必修）</h4>
<blockquote>
<p>3.1.1
通过实验，了解静电现象。能用原子结构模型和电荷守恒的知识分析静电现象。</p>
<p>例1 通过多种方式使物体带电，观察静电现象。</p>
<p>例2 演示并分析静电感应现象。</p>
</blockquote>
<p>​
本条目要求学生：通过对摩擦起电、感应起电、电荷之间的相互作用等实验的观察，了解静电现象。教师应基于静电现象的实验事实，用原子结构模型和电荷守恒的知识构建物理模型解释现象，培养学生基于事实证据进行科学推理的核心素养。</p>
<blockquote>
<p>3.1.2
知道点电荷模型。知道两个点电荷间相互作用的规律。体会探究库仑定律过程中的科学思想和方法。</p>
<p>例3 与质点模型类比，体会在什么情境下可将带电体抽象为点电荷。</p>
<p>例4 体会库仑扭秤实验设计的巧妙之处。</p>
</blockquote>
<p>​
本条目要求学生：体验在研究带电体之间相互作用力的定量关系时，建立带电体理想模型一一点电荷，体会构建物理模型的方法在科学研究中的作用。通过与质点模型的类比，知道将带电物体看成点电荷的条件，体验类比法在科学研究中的作用，并能在其他场合中尝试运用理想化模型的方法研究物理问题。知道库仑定律和静电力常量，知道真空中的库仑定律及其应用，了解电介质对静电作用有影响。通过具体实例知道利用点电荷之间的相互作用规律处理复杂带电体之间的静电力作用的思想和方法。了解科学家在探究库仑定律过程中利用库仑扭秤实验和扭摆实验巧妙解决电量测量问题、微小库仑力测量问题，领会在研究库仑力与电荷之间距离的平方成反比问题中采用的对称、微小力放大和类比等思想方法，体验科学思想和方法在科学研究中的重要作用。通过静电力与万有引力的对比，体会自然规律的多样性和统一性，体会自然界和谐的多样美。通过认识库仑扭秤实验和扭摆实验在建立库仑定律过程中所起的重要作用，了解科学家是如何巧妙解决实验过程中的诸多间题的，提升学生的科学态度和责任素养。</p>
<blockquote>
<p>3.1.3
知道电场是一种物质。了解电场强度，体会用物理量之比定义新物理量的方法。会用电场线描述电场。</p>
<p>例5 用电场线描绘两个等量异种点电荷周围的电场。</p>
</blockquote>
<p>​
本条目要求学生：通过电场对电荷的作用来检验电场的存在，了解电场是物质存在的形式之一，知道电场对位于其中的电荷有作用力。通过检验电荷在具体电场受到电场力情况，了解电场强度是描述电场强弱的物理量，是描述电场力的性质的物理量；知道用物理量比值法定义新物理量电场强度，知道电场强度的客观性和矢量性。通过比值法定义电场强度，体会比值法定义物理量的重要方法。通过对等量异种电荷电场强度的计算，了解电场强度的叠加原理。知道电场线是为了形象描述电场而引入的，能通过电场线的分布了解两个等量异种点电荷周围的电场线。通过电场线描述电场强弱分布，体会使概念具体化、形象化是科学研究中的一种重要方法。</p>
<blockquote>
<p>3.1.4 了解生产生活中关于静电的利用与防护。</p>
<p>例6
分析讨论静电在激光打印、静电喷雾和静电除尘等技术中的应用。知道在有可燃气体、粉尘的环境中如何防止静电事故。</p>
</blockquote>
<p>​
本条目要求学生：对激光打印、静电喷雾和静电除尘等技术应用中的静电现象进行分析，了解静电在生产生活中的应用。通过在有可燃气体、粉尘的环境中防止静电的方法，了解静电防护的原理。</p>
<blockquote>
<p>3.1.5
知道静电场中的电荷具有电势能。了解电势能、电势和电势差的含义。知道匀强电场中电势差与电场强度的关系。能分析带电粒子在电场中的运动情况，能解释相关的物理现象。</p>
</blockquote>
<p>​
本条目要求学生：通过与重力势能引入的对比，了解电荷在电场中的电势能，知道电场力做功与电势能变化的关系。体验类比法在科学研究中的作用。通过用电场力做功与电势能变化的关系来计算电荷在电场中的电势能，了解电势能的系统性和相对性。通过对检验电荷在具体电场中电势能的分析，知道用比值法定义表示电场另一方面的性质一一能的性质一电势，体会类比方法也是科学研究的一种重要方法。通过具体电场中电势的分析，了解电势的客观性、标量性和相对性；理解电势差概念，知道电势差与零电势的选择无关，具有绝对性。通过对匀强电场中电势差与电场强度关系的分析研究，知道电场力做功与电势差的定量关系。会用等势面描绘静电场，了解电场线和等势面的关系。知道匀强电场中电势差与电场强度的定量关系，了解非匀强电场中电势差与电场强度的定性关系。通过分析电场线和等势面之间的关系、电势差与电场强度的关系，体会科学研究应该从不同角度展开。通过对电场加速器、减速器、示波管等仪器的工作原理的初步了解，认识电场对带电粒子的作用，会计算带电粒子在电场中的运动问题。</p>
<blockquote>
<p>3.1.6
观察常见的电容器，了解电容器的电容，观察电容器的充、放电现象。能举例说明电容器的应用。</p>
<p>例7 查阅资料，了解电容器在照相机闪光灯电路中的作用。</p>
</blockquote>
<p>​
本条目要求学生：通过观察和解剖常见的电容器，了解电容器的构造。通过电容器的充、放电实验，了解电容器的作用，了解电容器电容的物理含义。知道用比值法来定义电容器的电容，体会比值法在定义物理量中的重要作用。通过平行板电容器的电容与哪些因素有关的实验，了解电容器电容与电容器结构及绝缘介质有关。</p>
<p>​
“能举例说明电容器的应用”是指让学生查阅资料，了解电容器在照相机闪光灯电路等电子技术中的应用，体会科学·技术·社会·环境的关系。</p>
<h4 id="教学活动要求">教学活动要求</h4>
<ol type="1">
<li>通过观察、查阅资料等方式，了解避雷针的结构和基本原理，撰写一篇研究报告。</li>
<li>收集资料，综述静电的危害，了解预防的方法。</li>
<li>通过观察、查阅资料等方式，了解并分析电容器应用的实例，撰写研究报告。</li>
</ol>
<h2 id="知识聚焦">知识聚焦</h2>
<h3 id="一电荷">一、电荷</h3>
<h4 id="电荷">1. 电荷</h4>
<p>​ 16 世纪英国科学家吉尔伯特用希腊文的琥珀创造了英语中的
<code>electricity</code>
一词，表示琥珀经过摩擦后具有的性质，并且认为摩擦过的琥珀带有<strong>电荷</strong>。</p>
<p>​
自然界中只存在正负两种电荷，电荷的多少叫作<strong>电荷量</strong>，符号
<span class="math inline"><em>Q</em>/<em>q</em></span>，单位库伦（简称库），符号
<span class="math inline"><em>C</em></span>。<strong>离子</strong>指带电的粒子，<strong>电子</strong>和<strong>质子</strong>是带电量最小的离子，所带电量的<strong>大小</strong>为元电荷
<span class="math inline"><em>e</em> = 1.6 × 10<sup>−19</sup><em>C</em></span>。一个离子所带电量与质量之比称为<strong>比荷</strong>。</p>
<blockquote>
<h4 id="密立根油滴实验">密立根油滴实验</h4>
<p>​
密立根所用方法原理为平衡重力与库仑力，使油滴悬浮于两片金属电极之间。并根据已知的电场强度，计算出整颗油滴的总电荷量。重复对许多油滴进行实验之后，密立根发现所有油滴的总电荷值皆为同一数字的倍数，确定该数值为元电荷量。</p>
</blockquote>
<h4 id="电荷的转移">2. 电荷的转移</h4>
<p>​
起电的方式有<strong>摩擦起电</strong>（对电子的束缚能力不同导致的）、<strong>接触起电</strong>（电荷转移到另一物体）、<strong>感应起电</strong>（电荷的重新分布）。<strong>电荷守恒定律</strong>的内容是电荷不能创造，不能被消灭，只能在物体间或物体内转移，或者说，==一个与外界没有电荷交换的系统，电荷的代数和保持不变。==。</p>
<p>​
当一个带电体靠近导体时，由于电荷间相互吸引或排斥，导体中的自由电荷便会趋向或远离带电体，使导体靠近带电体的一端带异种电荷，远离带电体的一端带同种电荷。这种现象叫作<strong>静电感应</strong>。利用静电感应使金属导体带电的过程叫作<strong>感应起电</strong>。</p>
<h4 id="电荷间的作用力">3. 电荷间的作用力</h4>
<p>​
法国科学家库伦设计了库伦扭称实验，确认了==真空中（空气近似真空）两个静止点电荷之间的相互作用力，与它们的电荷量的乘积成正比，与它们的距离的二次方成反比，作用力的方向在它们的连线上==，也即<strong>库仑定律</strong>。这种电荷之间的相互作用力称为<strong>静电力</strong>或库仑力。两个点电荷所带电荷量为同种时它们间作用力为斥力，反之为吸力。</p>
<p>​
当带电体之间的距离比它们自身的大小大得多，以致带电体的形状、大小及电荷分布状况对它们之间的作用力的影响可以忽略时，这样的带电体可以看作带电的点，叫作<strong>点电荷</strong>。</p>
<blockquote>
<h4 id="库伦扭称实验">库伦扭称实验</h4>
<p>​
库仑做实验用的装置叫作库仑扭秤。细银丝的下端悬挂一根绝缘棒，棒的一端是一个小球
<span class="math inline"><em>A</em></span>，另一端通过物体B使绝缘棒平衡，悬丝处于自然状态。把另一个带电的金属小球
<span class="math inline"><em>C</em></span> 插入容器并使它接触 <span class="math inline"><em>A</em></span>，从而使 <span class="math inline"><em>A</em></span> 与 <span class="math inline"><em>C</em></span> 带同种电荷。将 <span class="math inline"><em>C</em></span> 和 <span class="math inline"><em>A</em></span> 分开，再使 <span class="math inline"><em>C</em></span> 靠近 <span class="math inline"><em>A</em></span>，<span class="math inline"><em>A</em></span> 和 <span class="math inline"><em>C</em></span> 之间的作用力使 <span class="math inline"><em>A</em></span> 远离。扭转悬丝，使 <span class="math inline"><em>A</em></span>
回到初始位置并静止，通过悬丝扭转的角度可以比较力的大小。改变 <span class="math inline"><em>A</em></span> 和 <span class="math inline"><em>C</em></span> 之间的距离 <span class="math inline"><em>r</em></span>，记录每次悬丝扭转的角度，就可以找到力
<span class="math inline"><em>F</em></span> 与距离 <span class="math inline"><em>r</em></span> 的关系，结果是力 <span class="math inline"><em>F</em></span> 与距离 <span class="math inline"><em>r</em></span> 的二次方成反比，即 <span class="math display">$$
$F\propto\dfrac{1}{r^2}$
$$</span> ​
在库仑那个年代，还不知道怎样测量物体所带的电荷量，甚至连电荷量的单位都没有。不过两个相同的金属小球，一个带电、一个不带电，互相接触后，它们对相隔同
样距离的第三个带电小球的作用力相等，因此，可以断定这两个小球接触后所带的电荷量相等。这意味着，如果使一个带电金属小球与另一个不带电的完全相同的金属小球接触，前者的电荷量就会分给后者一半。多次重复，可以把带电小球的电荷量
<span class="math inline"><em>q</em></span> 分为： <span class="math display">$$
$\dfrac{q}{2},\dfrac{q}{4},\dfrac{q}{8},\dfrac{q}{16}\cdots$
$$</span> ​ 这样又可以得出电荷之间的作用力与电荷量的关系：力 <span class="math inline"><em>F</em></span> 与 <span class="math inline"><em>q</em><sub>1</sub></span> 和 <span class="math inline"><em>q</em><sub>2</sub></span> 的乘积成正比，即：
<span class="math display">$$
$F\propto q_1q_2$
$$</span> <img src="https://raw.githubusercontent.com/PassionPenguin/picgo-database/main/image-20220317184450248.png" alt="image-20220317184450248"></p>
<p>​ 根据上述实验，得出： <span class="math display">$$
$F=k\dfrac{q_1q_2}{r^2}$
$$</span> ​ 注：库仑最初的实验是用带电木髓小球进行的，
并非金属小球。关系式 <span class="math inline"><em>F</em> ∝ <em>q</em><sub>1</sub><em>q</em><sub>2</sub></span>
是由库仑作为假设提出的。文中所说的实验可以看作对这个假设的检验。</p>
</blockquote>
<p>​ 式中的 <span class="math inline"><em>k</em></span>
是比例系数，叫作<strong>静电力常量</strong>，实验测得为 <span class="math inline"><em>k</em> = 9.0 × 10<sup>9</sup><em>N</em> ⋅ <em>m</em><sup>2</sup>/<em>C</em><sup>2</sup></span>。</p>
<blockquote>
<h3 id="三点平衡问题两同夹异两大夹小近小远大">三点平衡问题：两同夹异、两大夹小、近小远大。</h3>
</blockquote>
<h3 id="二电场">二、电场</h3>
<h4 id="电场与场强">1. 电场与场强</h4>
<p>​
电荷周围存在<strong>电场</strong>，库仑力通过电场发生。高中阶段只讨论静止电荷产生的电场，即<strong>静电场</strong>。激发电场的带电体所带电荷叫<strong>场源电荷</strong>或<strong>源电荷</strong>。</p>
<p>​
电场以及磁场已被证明是一种<strong>客观存在</strong>。场像分子、原子等实物粒子一样具有能量，因而场也是物质存在的一种形式。</p>
<p>​
电场的性质用电场强度来描述，借助<strong>试探电荷</strong>在电场中所受到的电场力
<span class="math inline"><em>F</em></span> 与带电量 <span class="math inline"><em>q</em></span>
之比定义<strong>电场强度</strong>，符号 <span class="math inline"><em>E</em></span>，单位牛每库，符号 <span class="math inline"><em>N</em>/<em>C</em></span>，定义式 <span class="math inline">$E=\dfrac{F}{q}$</span>。点电荷是最简单的场源电荷，带电量
<span class="math inline"><em>Q</em></span> 的点电荷在与之相距 <span class="math inline"><em>r</em></span> 处的电场强度为 <span class="math inline">$E=k\dfrac{Q}{r^2}$</span>。</p>
<p>​
因为定义式中是矢量的运算，场强是一个矢量，在一点处场强的大小等于各电场在该点的场强的矢量叠加。</p>
<p>​
如果电场中各点的电场强度的大小相等、方向相同，这个电场就叫作<strong>匀强电场</strong>。</p>
<h4 id="电场线">2. 电场线</h4>
<p>​
为了描述电场，法拉第采用了绘制<strong>电场线</strong>的方法。电场线是在电场中无数条有向曲线，各点处的切线方向表示该点的场强方向。==电场线从正电荷或无限远出发，终止于无限远或负电荷；同一电场的电场线在电场中不相交，这是因为在电场中任意一点的电场强度不可能有两个方向。==</p>
<p><img src="https://raw.githubusercontent.com/PassionPenguin/picgo-database/main/image-20220317190117199.png" alt="点电荷的电场线呈辐射状" style="zoom:67%;"></p>
<p><img src="https://raw.githubusercontent.com/PassionPenguin/picgo-database/main/image-20220317190141162.png" alt="等量异种点电荷的电场线和等量同种点电荷的电场线" style="zoom:67%;"></p>
<h4 id="电场力-vs.-万有引力">3. 电场力 vs.&nbsp;万有引力</h4>
<table>
<colgroup>
<col style="width: 8%">
<col style="width: 45%">
<col style="width: 45%">
</colgroup>
<thead>
<tr class="header">
<th></th>
<th>电场力</th>
<th>万有引力</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>表达式</td>
<td><span class="math inline">$F=k\dfrac{q_1q_2}{r^2}$</span></td>
<td><span class="math inline">$F=G\dfrac{m_1m_2}{r^2}$</span></td>
</tr>
<tr class="even">
<td>场强</td>
<td><span class="math inline">$E_E=\dfrac{F}{q}=k\dfrac{q}{r^2}$</span></td>
<td><span class="math inline">$E_G=\dfrac{F}{m}=G\dfrac{m}{r^2}$</span></td>
</tr>
<tr class="odd">
<td>特殊场</td>
<td>匀强场：E</td>
<td>重力场：g</td>
</tr>
<tr class="even">
<td>距离</td>
<td><span class="math inline"><em>r</em></span> 不能极小</td>
<td><span class="math inline"><em>r</em></span> 可以极小</td>
</tr>
<tr class="odd">
<td>做功</td>
<td>与路径无关</td>
<td>与路径无关</td>
</tr>
</tbody>
</table>
<h3 id="三静电的防止与利用">三、静电的防止与利用</h3>
<h4 id="静电平衡">1. 静电平衡</h4>
<p>​
将不带电金属导体放入电场中，因为静电感应，在导体两端会感应出正负电荷，在导体内部产生与外电场相反的电场，叠加后使内部电场减弱，最终会使导体内部各点场强都为
0，此时处于<strong>静电平衡</strong>。</p>
<figure>
<img src="https://raw.githubusercontent.com/PassionPenguin/picgo-database/main/image-20220317190638211.png" alt="静电场中的导体">
<figcaption aria-hidden="true">静电场中的导体</figcaption>
</figure>
<h4 id="尖端放电">2. 尖端放电</h4>
<p>​
在强电场下是空气中残留的带电粒子剧烈运动与空气分子碰撞，使空气分子中的正负电荷分离的现象称为空气的<strong>电离</strong>。导体的尖端部位所感应出的电荷与空气中电离的电荷相互中和，使导体失去电荷的现象叫作<strong>尖端放电</strong>，常见用例为避雷针。</p>
<h4 id="静电屏蔽">3. 静电屏蔽</h4>
<p>​
把一个电学仪器放在封闭的金属壳里，即使壳外有电场，但由于壳内电场强度保持为
<span class="math inline">0</span>，外电场对壳内的仪器不会产生影响。金属壳的这种作用叫作<strong>静电屏蔽</strong>。常见例子为高压线的屏蔽等。</p>
<figure>
<img src="https://raw.githubusercontent.com/PassionPenguin/picgo-database/main/image-20220317191025032.png" alt="导体腔内的电场为 0">
<figcaption aria-hidden="true">导体腔内的电场为 <span class="math inline">0</span></figcaption>
</figure>
<h4 id="静电吸附">4. 静电吸附</h4>
<p>​
电场中，带电粒子受到静电力的作用，向着电极运动，最后会被吸附在电极上的原理称为<strong>静电吸附</strong>，被用于<strong>静电除尘、静电喷漆、静电复印</strong>。</p>
<h3 id="四电势能和电势">四、电势能和电势</h3>
<h4 id="电势能与电势">1. 电势能与电势</h4>
<p>​
静电力做功具有跟重力做功一样的特点，即静电力做功的多少与路径无关，只与电荷在电场中的始、末位置有关。电荷在电场中也具有势能，我们称这种形式的能为<strong>电势能</strong>，用
<span class="math inline"><em>E</em><sub><em>p</em></sub></span>
表示。</p>
<p>​
电荷在电场中某一点的电势能与它的电荷量之比，叫作电场在这一点的<strong>电势</strong>，用
<span class="math inline"><em>ϕ</em></span> 表示，有 <span class="math inline">$\phi=\dfrac{E_p}{q}$</span>，单位伏特，符号 <span class="math inline"><em>V</em></span>。==沿着电场线方向电势逐渐降低==。</p>
<h4 id="电势差">2. 电势差</h4>
<p>​
在电场中，两点之间的电势差值称为<strong>电势差</strong>，又称<strong>电压</strong>，<span class="math inline">$U_{AB}=\phi_A-\phi_B=\dfrac{W_{AB}}{q}$</span>。电势相同的各点构成的面叫作<strong>等势面</strong>，==电场线与等势面垂直，并且由电势高的等势面指向电势低的等势面==。</p>
<figure>
<img src="C:\Users\hoarfroster\AppData\Roaming\Typora\typora-user-images\image-20220317215947882.png" alt="常见电场的等势面">
<figcaption aria-hidden="true">常见电场的等势面</figcaption>
</figure>
<p>​ 根据上述公式，我们可以得到 <span class="math inline"><em>U</em><sub><em>A</em><em>B</em></sub> = <em>E</em><em>d</em></span>，即==匀强电场中两点间的电势差等于电场强度与这两点沿电场方向的距离的乘积。==同样，可以推出
<span class="math inline">$E=\dfrac{U_AB}{d}$</span>。</p>
<p>​ 对于一般场，有 <span class="math inline">$E=\dfrac{\Delta\phi}{\Delta
x}$</span>（梯度）。</p>
<h4 id="电容器">3. 电容器</h4>
<p>​
<strong>电容器</strong>是一种重要的电学元件。在两个相距很近的平行金属板中间夹上一层绝缘物质——<strong>电介质</strong>（空气也是一种电介质），就组成一个最简单的电容器，叫作<strong>平行板电容器</strong>。这两个金属板叫作电容器的极板。实际上，任何两个彼此绝缘又相距很近的导体，都可以看成一个电容器。</p>
<p>​
电容器充电的过程中，两极板的电荷量增加，极板间的电场强度增大，电源的能量不断储存在电容器中；放电的过程中，电容器把储存的能量通过电流做功转化为电路中其他形式的能量。</p>
<p>​ 精确的实验表明，一个电容器所带的电荷量 <span class="math inline"><em>Q</em></span> 与两极板之间的电势差 <span class="math inline"><em>U</em></span>
之比是不变的。不同的电容器，这个比一般是不同的，可见电荷量 <span class="math inline"><em>Q</em></span> 与电势差 <span class="math inline"><em>U</em></span>
之比表征了电容器储存电荷的特性。</p>
<p>​ 电容器所带的电荷量 <span class="math inline"><em>Q</em></span>
与电容器两极板之间的电势差 <span class="math inline"><em>U</em></span>
之比，叫作电容器的<strong>电容</strong>，单位法拉，简称法，符号 <span class="math inline"><em>F</em></span>。用 <span class="math inline"><em>C</em></span> 表示，则有 <span class="math inline">$C=\dfrac{Q}{U}$</span>。</p>
<p>​ 对于平行板电容器，电容是一个定值 <span class="math inline">$C=\dfrac{\epsilon_rS}{4\pi kd}$</span>。</p>
<h4 id="实验探究电容器两极板间电势差跟所带电荷量的关系-exp-探究电容器两极板间电势差跟所带电荷量的关系">4.
实验：探究电容器两极板间电势差跟所带电荷量的关系 |
#exp-探究电容器两极板间电势差跟所带电荷量的关系</h4>
<h5 id="一实验原理">一、实验原理</h5>
<p>​ 电容器充放电原理。</p>
<h5 id="二实验思路">二、实验思路</h5>
<p>​
使用两个完全一致的电容器，先充满一个电容器，再用另一个完全一样的电容器放电，在不断放电中测量电容器两端的电势差。</p>
<figure>
<img src="https://raw.githubusercontent.com/PassionPenguin/picgo-database/main/image-20220317220540382.png" alt="image-20220317220540382">
<figcaption aria-hidden="true">image-20220317220540382</figcaption>
</figure>
<h5 id="三实验操作">三、实验操作</h5>
<ol type="1">
<li>取电容器 <span class="math inline"><em>A</em></span>
与数字电压表相连，将开关 <span class="math inline"><em>S</em><sub>1</sub></span> 接
1，用几节干电池串联后给 <span class="math inline"><em>A</em></span>
充电，可以看到 <span class="math inline"><em>A</em></span>
充电后两极板具有一定的电压。</li>
<li>将开关 <span class="math inline"><em>S</em><sub>1</sub></span> 接
2，使另一个相同但不带电的电容器 <span class="math inline"><em>B</em></span> 与 <span class="math inline"><em>A</em></span>
并联，可以看到电压表示数减半。</li>
<li>断开开关 <span class="math inline"><em>S</em><sub>1</sub></span>，闭合 <span class="math inline"><em>S</em><sub>2</sub></span>，使 <span class="math inline"><em>B</em></span> 两极板完全放电，随后再断开开关
<span class="math inline"><em>S</em><sub>2</sub></span>，重复（2）。</li>
</ol>
<h5 id="四测量物理量">四、测量物理量</h5>
<p>​ 测量每一次操作后 <span class="math inline"><em>A</em></span>
对应的电压 <span class="math inline"><em>U</em><sub><em>A</em></sub></span>。</p>
<h5 id="五误差控制">五、误差控制</h5>
<ol type="1">
<li>步骤（2）中需要注意不然要让手或其他导体与电容器的两极板相接触，避免所带电荷漏失。</li>
</ol>
<h4 id="带电粒子在电场中的运动">5. 带电粒子在电场中的运动</h4>
<p>​ 在电学中，<strong>基本粒子不计重力</strong>，有：<span class="math inline"><sub>1</sub><sup>1</sup><em>H</em></span>（质子）、<span class="math inline"><sub>2</sub><sup>4</sup><em>H</em><em>e</em></span>（<span class="math inline"><em>α</em></span>粒子）、<span class="math inline"><sub>+</sub><sup>0</sup><em>e</em><sup>−</sup></span>（电子）。其他带电粒子重力不可忽略。</p>
<ol type="1">
<li><p>带正电粒子在电容器中速度（正极板⇒负极板）：</p>
<p><span class="math inline">$\displaystyle
v=\sqrt{\frac{2qU}{m}}$</span>，即速度与比荷有关。</p></li>
<li><p>带电粒子的偏转问题：</p></li>
</ol>
<p>​ 带电粒子在电场中运动时间：</p>
<p>​ <span class="math inline">$t=\dfrac{l}{v}$</span>。</p>
<p>​ 忽略带电粒子重力，加速度为：</p>
<p>​ <span class="math inline">$a=\dfrac{F}{m}=\dfrac{Uq}{dm}$</span>。</p>
<p>​ 穿出电场，竖直方向位移：</p>
<p>​ <span class="math inline">$y=\dfrac{1}{2}at^2=\dfrac{ql^2}{2dmv_0^2}U$</span>。</p>
<p>​ 穿出电场，竖直方向分速度：</p>
<p>​ <span class="math inline">$v_y=at=\dfrac{ql}{dmv_0^2}U$</span>。</p>
<p>​ 结合数学知识，可得：</p>
<p>​ <span class="math inline">$\tan{\theta}=\dfrac{v_y}{v_0}=\dfrac{ql}{dmv_0^2}U$</span>。</p>]]></content>
      <categories>
        <category>High School</category>
        <category>Physics</category>
        <category>Electricity and Electromagnetism</category>
      </categories>
      <tags>
        <tag>School Notes</tag>
        <tag>High School</tag>
        <tag>Physics</tag>
      </tags>
  </entry>
  <entry>
    <title>电磁感应及其应用</title>
    <url>/2022/03/15/physics/High%20School/S2%20Electricity%20and%20Electromagnetism/%E7%94%B5%E7%A3%81%E6%84%9F%E5%BA%94%E5%8F%8A%E5%85%B6%E5%BA%94%E7%94%A8/</url>
    <content><![CDATA[Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
<h2 id="课程标准">课程标准</h2>
<h3 id="课程标准内容">课程标准内容</h3>
<h4 id="电磁场与电磁波初步必修">3.3 电磁场与电磁波初步（必修）</h4>
<blockquote>
<p>3.3.3
知道磁通量。通过实验，了解电磁感应现象，了解产生感应电流的条件。知道电磁感应现象的应用及其对现代社会的影响。</p>
<p>例2 收集资料，了解手机无线充电的原理。</p>
</blockquote>
<p>​
本条目要求学生：知道磁通量是描述磁感线通过某一面的条数多少的物理量通过该面磁感线越多，则该处磁感应强度越大，即磁感线越密，磁感应强度越大通过实验知道磁通量变化能在闭合回路中产生电流，知道这种现象叫电磁感应现象；在实验中了解产生感应电流的条件是闭合线圈内磁通量发生变化。通过了解科学家对“电生磁、磁生电”的研究，体验科学探索中科学思想方法的重要作用体会物质世界的多样性和统一性。通过调查、查阅资料等活动，知道电磁感应现象在生产生活中的广泛应用，以及对现代社会的影响，体验科学知识在生活和科技中的应用，理解科学·技术·社会·环境的关系。</p>
<h4 id="教学活动要求">教学活动要求</h4>
<ol type="1">
<li>查阅资料，了解电磁感应现象的发现过程。</li>
</ol>
<h4 id="电磁感应及其应用选择性必修">2.2
电磁感应及其应用（选择性必修）</h4>
<blockquote>
<p>2.2.1 探究影响感应电流方向的因素，理解楞次定律。</p>
<p>例1 用能量的观点解释楞次定律。</p>
</blockquote>
<p>​
本条目的内容既是这个模块的重点，也是难点。探究感应电流的方向从科学思维角度来说，要求学生有极强的推理与归纳能力；从实验设计上来说，要求学生对操作程序有一个清晰的思维通道。“探究影响感应电流方向的因素”要求学生在教师的指导下，经历实验设计、实验操作和实验结论解释等环节，培养实验设计思想和实验解释能力。楞次定律的实验探究的关键在于，学生能否从实验的表面现象中看出“相同事件”或“相关事件”的共同特征，这是归纳思维的本质。教师要引导学生进行自我总结，不要包办代替学生的思考过程而“强制”学生得出结论。当然，楞次定律可以用能量守恒的观点来解释，“阻碍磁通量的变化”的过程本质上是一个从其他形式的能量转化成电能的过程，因此这个过程中的“阻碍”的意义就非常明确了，是通过阻碍使非电磁力克服电磁力做功的过程，这样才能使其他形式的能量转化成电能。课程标准中“用能量的观点解释楞次定律”的案例，使学生既能用不同的视角来理解楞次定律，又能更深入地理解能量及其转化，建立更宽泛的能量观。</p>
<blockquote>
<p>2.2.2 通过实验，理解法拉第电磁感应定律。</p>
</blockquote>
<p>​
限于实验条件和数学方法，法拉第电磁感应定律在高中阶段不可能用实验的方法做定量研究，因此，理解这个定律是主要的教学任务。教师可以让学生从实验中定性地了解磁通量变化的快慢如何影感应电动势的大小，在这样的定性研究的基础上可直接给出结论。法拉第电磁感应定律是电磁学中最重要的、最基础的定律之一，要求学生能够用此定律来解释一些电磁学现象，解决一些简单的电磁学间题。</p>
<blockquote>
<p>2.2.3
通过实验，了解自感现象和涡流现象。能举例说明自感现象和涡流现象在生产生活中的应用。</p>
<p>例2 了解电磁炉的结构和原理。</p>
</blockquote>
<p>​
了解自感现象和涡流现象的主要原理是电磁感应。在教学中，要让学生通过实验过程来了解自感现象，基本了解这些现象产生的原理。对于自感现象只要求定性分析，不要求定量描述，当然不要求掌握自感系数和自感电动势。对于涡流现象，学生了解即可，要知道如何利用与防止涡流现象。</p>
<p>​
当然，自感与涡流在生产生活中有大量的应用，要多让学生见识，可利用实验演示和资料呈现等各种方式来实现。电磁炉是一种常见的家用电器，其原理比较简单，可以让学生查资料了解它的基本结构、工作原理，也可让学生在班上相互交流。</p>
<blockquote>
<p>2.2.4 通过实验，认识交变电流。能用公式和图像描述正弦交变 电流。</p>
<p>例3 用示波器或其他设备观察交变电流的波形，并测算其峰值和有效值。</p>
</blockquote>
<p>​
本条目要求学生了解交变电流的产生原理和交变电流的基本特征，属于了解水平。学生应该从交流电的产生实验中明确交流电的产生原理是电磁感应，知道交流电是大小和方向随时间发生周期性变化的电流。学生能够根据交流电的特征用函数表达式来描述交变电流，并知道公式中的交变电流的电流或电压的最大值、瞬时值、有效值以及它们之间的相互关系；能够用图像来表示一个交变电流，并从图像中找出电流或电压的最大值和某一时刻的瞬时值，进而计算有效值。学生应该明确描述交流电的另外两个重要物理量周期与频率及其意义，知道我国供电系统的交流电的频率。课程标准对相位和相位差不做要求。</p>
<blockquote>
<p>2.2.5
通过实验，探究并了解变压器原、副线圈电压与匝数的关系。知道远距离输电时通常采用高压输电的原因。</p>
<p>例4 观察常见的变压器，了解其作用。</p>
<p>例5 探讨远距离输电中导致电能损耗的因素。</p>
</blockquote>
<p>​
本条目要求学生：用实验探究的方法来认识变压器的原理及其原、副线圈的电压与匝数的关系。在教学中，要让学生进行实验设计，实验操作，实验数据处理（归纳），分析实验产生误差的原因，并分析得出实验结论；要求学生从变压器的结构来分析变压器能量损耗的主要原因，并探究降低能量损耗的方法。</p>
<p>​
变压器在生产生活和科技活动中应用非常广泛，从家庭到工厂，从生活到生产，要让学生见识各种形式和各式大小的变压器，了解变压器的结构与用途。</p>
<p>​
学生在初中物理（科学）学习中对输配电过程已经有一个大致的了解，这里要求学生在初中学习的基础上对输配电有更深的了解。有条件的地方可组织学生参观小型发电厂，了解“发电一升压一输电一降压一用户”整个流程，并了解各种设施设备。参观后要让学生画出从电厂到用户输电的流程图，并解释各部分结构的原理。</p>
<p>​
本条目要求学生：在初中学习的基础上探究高压输电的理论基础。可以让学生进行以下探究：输电线的电能损耗主要有哪些？如何降低电能损耗？既经济又可行的输电方式应该是怎么样的？</p>
<p>​
电网建设是电力输送的关键，高压输电技术研究非常重要。我国的高压输电技术发展非常迅速，已达到世界领先水平。要让学生通过资料查阅、访谈等方式了解我国高压输电研究与应用的最新成果，了解本地区电力建设的基本情况，并写出一份有关电网建设、电力输送的调查报告。</p>
<blockquote>
<p>2.2.6
了解发电机和电动机工作过程中的能量转化。认识电磁学在人类生活和社会发展中的作用。</p>
</blockquote>
<p>​
发电机和电动机技术是电磁理论的重要应用。发电机与电动机也是实现第二次工业革命重要基础。要让学生查阅资料，了解第二次工业革命兴起的科学技术基础，工业发展的基本情况，体会科学发展对技术发展的作用，技术发展对生产力水平和社会发展的作用。可以让学生在查阅资料的基础上，写一篇简单的电动机和发电机技术的发展对工业发展、社会发展的推动情况的综述报告。</p>
<h4 id="教学活动要求-1">教学活动要求</h4>
<ol type="1">
<li>查阅资料，与同学讨论动车组进站过程中是如何进行能量转化的。</li>
<li>查阅资料，撰写报告分析奥斯特电流磁效应和法拉第电磁感应定律对第二次工业革命的贡献，体会科学技术对社会发展的意义。</li>
</ol>
<h2 id="知识聚焦">知识聚焦</h2>
<h3 id="一楞次定律">一、楞次定律</h3>
<p>​ 1834
年，俄国物理学家楞次在分析了许多实验事实后，得到了关于感应电流方向的规律（<strong>楞次定律</strong>，Lenz’s
Law）：==感应电流具有这样的方向，即感应电流的磁场总要阻碍引起感应电流的磁通量的变化==。感应电流沿着楞次定律所述的方向，是<strong>能量守恒定律</strong>的必然结果。</p>
<p>​
我们可以用右手的手掌和手指的方向来判断导线切割磁感线时产生的感应电流的方向，即：==伸开右手，使拇指与其余四个手指垂直，并且都与手掌在同一个平面内；
让磁感线从掌心进入，并使拇指指向导线运动的方向，这时四指所指的方向就是感应电流的方向。==这就是更便于判定导线切割磁感线时感应电流方向的<strong>右手定则</strong>（righthand
rule）。</p>
<h3 id="二法拉第电磁感应定律">二、法拉第电磁感应定律</h3>
<h4 id="法拉第电磁感应定律">1. 法拉第电磁感应定律</h4>
<p>​
在电磁感应现象中产生的电动势叫作<strong>感应电动势</strong>（induction
electromotive force）。产生感应电动势的那部分导体就相当于电源。</p>
<p>​ 德国物理学家纽曼、韦伯在对理论和实验资料进行严格分析后，于 1845
年和 1846
年先后指出：==闭合电路中感应电动势的大小，跟穿过这一电路的磁通量的变化率成正比。==因法拉第对电磁感应现象研究的巨大贡献，后人称之为<strong>法拉第电磁感应定律</strong>（Faraday’s
law of electromagnetic
induction）。<strong>产生电磁感应现象的过程是克服安培力做功的过程</strong>。</p>
<p>​ 如果在极短的时间 <span class="math inline"><em>Δ</em><em>t</em></span> 内，磁通量的变化量为
<span class="math inline"><em>Δ</em><em>ϕ</em></span>，磁通量的变化率就是
<span class="math inline">$\dfrac{\Delta\Phi}{\Delta t}$</span>。用
<span class="math inline"><em>E</em></span>
表示闭合电路中的感应电动势，那么电磁感应定律就可以表示为： <span class="math display">$$
\begin{align}
{\mathcal  {E}} = k\frac{\Delta\Phi}{\Delta t}\\
{\mathcal  {E}} = \frac{\Delta\Phi}{\Delta t}
\end{align}
$$</span> ​ 上式（1）中 <span class="math inline"><em>k</em></span>
是比例常量。在国际单位制中，电动势 <span class="math inline"><em>E</em></span> 的单位是伏（<span class="math inline"><em>V</em></span>）、磁通量 <span class="math inline"><em>ϕ</em></span> 的单位是韦伯（<span class="math inline"><em>W</em><em>b</em></span>）、时间 <span class="math inline"><em>t</em></span> 的单位是秒（<span class="math inline"><em>s</em></span>），这时 <span class="math inline"><em>k</em> = 1</span>，得到式（2）。</p>
<p>​ 闭合电路常常是一个匝数为 <span class="math inline"><em>n</em></span>
的线圈，而且穿过每匝线圈的磁通量总是相同的。 由于这样的线圈可以看成是由
<span class="math inline"><em>n</em></span>
个单匝线圈串联而成的，因此整个线圈中的感应电动势是单匝线圈的 <span class="math inline"><em>n</em></span> 倍，即：<span class="math inline">${\mathcal {E}} ＝ n\dfrac{\Delta\Phi}{\Delta
t}$</span>。</p>
<p>​
根据这一定律，可以推导在<strong>匀强磁场中运动的一段导体垂直切割磁感线所产生的感应电动势</strong>：<span class="math inline">${\mathcal {E}}={\frac {\Delta \Phi }{\Delta
t}}={\frac {B\Delta S}{\Delta t}}={\frac {BL\Delta x}{\Delta
t}}=BLv$</span>。</p>
<h4 id="求解感应电动势相关问题">2. 求解感应电动势相关问题</h4>
<ol type="1">
<li><p>对于回路（不一定闭合），常用电磁感应定律 <span class="math inline">${\mathcal {E}}=\dfrac{\Delta\Phi}{\Delta t}$</span>
计算平均值。</p>
<p>对于求解<strong>电磁感应现象中的<em>电荷量</em></strong>，设 <span class="math inline"><em>Δ</em><em>t</em></span> 通过导线某一横截面电荷量
<span class="math inline"><em>q</em></span>，根据 <span class="math inline">$I=\dfrac{q}{\Delta t}$</span> 与 <span class="math inline">${\mathcal E}=\dfrac{\Delta\Phi}{\Delta
t}$</span>，可以推出 <span class="math inline">$q=I\Delta
t=\dfrac{E}{R}\cdot\Delta t=n\dfrac{\Delta\Phi}{R\Delta
t}=n\dfrac{\Delta\Phi}{R}$</span>。</p></li>
<li><p>导体棒平动切割磁感线时产生的感应电动势 <span class="math inline">ℰ = <em>B</em><em>l</em><em>v</em></span>，需要注意，<strong><span class="math inline"><em>l</em></span>
变化会影响电动势与电路电阻</strong>。</p></li>
<li><p>导体棒转动垂直切割磁感线时产生的感应电动势利用棒中点平均速度
<span class="math inline">$\overline{v}=\dfrac{\omega l}{2}$</span>
计算即可。</p></li>
<li><p>导线框绕与磁感线垂直的轴转动产生的感应电动势 <span class="math inline">ℰ = <em>n</em> ⋅ <em>B</em> ⋅ <em>S</em>sin <em>ω</em> ⋅ <em>ω</em><em>t</em></span>。</p></li>
</ol>
<h3 id="三涡流电磁阻尼和电磁驱动">三、涡流、电磁阻尼和电磁驱动</h3>
<h4 id="感生电场">1. 感生电场</h4>
<p>​
麦克斯韦认为，磁场变化时会在空间激发一种电场。这种电场与静电场不同，它不是由电荷产生的，我们把它叫作<strong>感生电场</strong>（induced
electric field）。</p>
<h4 id="涡流">2. 涡流</h4>
<p>​
当某线圈中的电流随时间变化时，由于电磁感应，附近的另一个线圈中可能会产生感应电流。如果用图表示这样的感应电流，看起来就像水中的旋涡，所以把它叫作<strong>涡电流</strong>，简称<strong>涡流</strong>（eddy
current）。</p>
<figure>
<img src="https://raw.githubusercontent.com/PassionPenguin/picgo-database/main/image-20220315223833500.png" alt="image-20220315223833500">
<figcaption aria-hidden="true">image-20220315223833500</figcaption>
</figure>
<h4 id="电磁阻尼">3. 电磁阻尼</h4>
<p>​
当导体在磁场中运动时，感应电流会使导体受到安培力，安培力的方向总是阻碍导体的运动，这种现象称为电磁阻尼。</p>
<h4 id="电磁驱动">4. 电磁驱动</h4>
<p>​
如果磁场相对于导体转动，在导体中会产生感应电流，感应电流使导体受到安培力的作用，安培力使导体运动起来，这种作用常常称为电磁驱动。</p>
<p>​
交流感应电动机就是利用电磁驱动的原理工作的。配置的三个线圈连接到三相电源上，就能产生类似上面演示实验中的旋转磁场，磁场中的导线框也就随着转动。就这样，电动机把电能转化成机械能。</p>
<figure>
<img src="https://raw.githubusercontent.com/PassionPenguin/picgo-database/main/image-20220315224112879.png" alt="image-20220315224112879">
<figcaption aria-hidden="true">image-20220315224112879</figcaption>
</figure>
<h3 id="四互感和自感">四、互感和自感</h3>
<p>​
在法拉第最初发现电磁感应现象的实验中，两个线圈之间并没有导线相连，但当一个线圈中的电流变化时，它所产生的变化的磁场会在另一个线圈中产生感应电动势。这种现象叫作<strong>互感</strong>（mutual
induction），这种感应电动势叫作互感电动势。</p>
<p>​
当一个线圈中的电流变化时，它所产生的变化的磁场在线圈本身激发出感应电动势。这种现象称为<strong>自感</strong>（self
induction），由于自感而产生的感应电动势叫作自感电动势。</p>
<p>​ 自感电动势也是感应电动势，同样遵从法拉第电磁感应定律，即 <span class="math inline">$E=L\dfrac{\Delta I}{\Delta
t}$</span>，L是比例系数，叫作<strong>自感系数</strong>，简称<strong>自感</strong>或<strong>电感</strong>。它与线圈的大小、形状、匝数，以及是否有铁芯等因素有关。</p>
<p>​
电感的单位是<strong>亨利</strong>（henry），简称<strong>亨</strong>，符号是<span class="math inline"><em>H</em></span>。
常用的单位还有毫亨（mH）、微亨（μH）。</p>
<table>
<colgroup>
<col style="width: 8%">
<col style="width: 61%">
<col style="width: 30%">
</colgroup>
<thead>
<tr class="header">
<th></th>
<th>电感 <span class="math inline"><em>L</em></span></th>
<th>电阻 <span class="math inline"><em>R</em></span></th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>阻碍作用</td>
<td>阻碍电流的变化</td>
<td>阻碍电流</td>
</tr>
<tr class="even">
<td>表现</td>
<td>产生自感现象</td>
<td>导体发热</td>
</tr>
<tr class="odd">
<td>大小因素</td>
<td>电感越大，电流变化越大，对电流变化的阻碍作用越大，产生的自感电动势越大</td>
<td>电阻越大，对电流的阻碍作用越大</td>
</tr>
<tr class="even">
<td>决定因素</td>
<td>线圈大小、形状、匝数、铁芯</td>
<td>导体长度、横截面积、电阻率</td>
</tr>
<tr class="odd">
<td>联系</td>
<td>都是反映导体本身性质的物理量</td>
<td></td>
</tr>
</tbody>
</table>]]></content>
      <categories>
        <category>High School</category>
        <category>Physics</category>
        <category>Electricity and Electromagnetism</category>
      </categories>
      <tags>
        <tag>School Notes</tag>
        <tag>High School</tag>
        <tag>Physics</tag>
      </tags>
  </entry>
  <entry>
    <title>传感器</title>
    <url>/2022/03/15/physics/High%20School/S2%20Electricity%20and%20Electromagnetism/%E4%BC%A0%E6%84%9F%E5%99%A8/</url>
    <content><![CDATA[Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
<h2 id="课程标准">课程标准</h2>
<h3 id="课程标准内容">课程标准内容</h3>
<h4 id="传感器选择性必修">2.4 传感器（选择性必修）</h4>
<blockquote>
<p>2.4.1 知道非电学量转换成电学量的技术意义。</p>
</blockquote>
<p>​
对传感器的所有内容的学习要求都属于了解水平的。传感器在现代生产生活和科技活动中的应用是非常普遍的，而且传感器的研发、生产越来越快，运用越来越普遍。本条目要求学生：了解把非电学量转化成电学量的原因和转化意义。电学量（电流、电压等信号）便于控制、处理（放大、衰减或波形调整），便于显示或储存，也便于传输与接收。把非电学量转化成电学量才可能实现信息采集、处理、储存和传输的自动化与智能化。所以非电学量转化成电学量是实现自动控制、数字化信息传输的基础。</p>
<blockquote>
<p>2.4.2
通过实验，了解常见传感器的工作原理。会利用传感器制作简单的自动控制装置。</p>
<p>例1 通过热敏电阻实验，了解温度传感器的工作原理。</p>
</blockquote>
<p>​
教师可以通过实验演示，让学生了解各种常用的传感器的工作原理。在教学中可以用学生熟悉的热敏电阻、光敏电阻、驻极体话筒等常用元件进行实验，让学生了解这些元件如何将非电学量转化成电学量。其实，各种传感器把非电学量转化成学量的原理都不尽相同，因此这里只要求学生了解常见的几种传感器的工作原理即可。教师可以鼓励有兴趣的同学了解传感器研发与应用的新的技术进展，也可以让学生了解传感器在一种家用电器中的应用。
​
在教学中，可以让学生动手设计一个简单的传感器电路，电路中只要有以下功能即可：将非电学量转化成电学量、电学量的处理、电学量对设备的控制和操作等。</p>
<blockquote>
<p>2.4.3 列举传感器在生产生活中的应用。</p>
<p>例2 了解光敏传感器及其在生产生活中的应用。</p>
</blockquote>
<p>​
传感器在生产生活与技术中具有广泛的应用，可以让学生查阅资料，了解传感器的各种应用。例如，汽车、电饭锅、冰箱、空调、自动售货机、扫地机器人等各种设备或用具中都有传感器的应用，一些现代化的生产企业在一条流水线上可能会用上万个传感器来实现自动控制。智能手机中也有很多传感器，例如重力传感器等，学生可以通过查阅手机的说明书等技术资料了解有关应用。在教学中，可以让学生查阅资料，对资料进行学习与整理后在班内或组内交流。</p>
<p>​
传感器这部分内容主要是让学生了解一些身边的技术应用及原理，让学生理解传感器的原理、传感器应用给人们带来的便利性以及它的经济效益与社会效益。</p>
<h4 id="教学活动要求">教学活动要求</h4>
<ol type="1">
<li>调查生产生活中传感器的应用，分析某一种传感器的工作原理。</li>
<li>调查手机中的各种传感器，了解它们的应用。</li>
</ol>
<h2 id="知识聚焦">知识聚焦</h2>
<h3 id="一传感器">一、传感器</h3>
<p>​
<strong>传感器</strong>（sensor）是指这样一类器件或装置：它能够感受诸如==力、温度、光、声、化学成分==等被测量，并能把它们按照一定的规律转换为便于传送和处理的可用信号输出。通常转换成的可用信号是电压、电流等电学量，或转换为电路的通断。把非电学量转换为电学量，可以很方便地进行测量、传输、处理和控制。</p>
<h3 id="二常见的传感器及其应用">二、常见的传感器及其应用</h3>
<h4 id="光敏电阻">1. 光敏电阻</h4>
<p>​
有一些物质，例如硫化镉，==电阻率与所受光照的强度有关==。使用这些物质涂敷到绝缘板上，再用银浆涂敷两个互不相连的梳状电极，就能制成一个<strong>光敏电阻</strong>。光敏电阻是光电传感器中常见的光敏元件。</p>
<p>​ 光敏电阻在被光照射时电阻发生变化，原因是：
硫化镉是一种半导体材料，==无光照时，载流子极少，导电性能差；
随着光照的增强，载流子增多，导电性变好。==</p>
<figure>
<img src="https://raw.githubusercontent.com/PassionPenguin/picgo-database/main/image-20220316230352626.png" alt="光电计数基本原理">
<figcaption aria-hidden="true">光电计数基本原理</figcaption>
</figure>
<h4 id="金属热电阻与热敏电阻">2. 金属热电阻与热敏电阻</h4>
<p>​
<strong>金属热电阻</strong>和<strong>热敏电阻</strong>是传感器中常见的感知温度的敏感元件。</p>
<p>​
金属的电阻率随温度的升高而增大。用金属丝可以制作温度传感器，称为热电阻。常用的一种热电阻是用铂制作的，可用来做电阻温度计。与金属不同，有些半导体在温度上升时导电能力增强，因此可以用半导体材料制作热敏电阻。==金属热电阻和热敏电阻都能够把温度这个热学量转换为电阻这个电学量。==</p>
<figure>
<img src="https://raw.githubusercontent.com/PassionPenguin/picgo-database/main/image-20220316230241861.png" alt="image-20220316230241861">
<figcaption aria-hidden="true">image-20220316230241861</figcaption>
</figure>
<figure>
<img src="https://raw.githubusercontent.com/PassionPenguin/picgo-database/main/image-20220316230423936.png" alt="液位报警示意图">
<figcaption aria-hidden="true">液位报警示意图</figcaption>
</figure>
<h4 id="电阻应变片">3. 电阻应变片</h4>
<p>​
电阻应变片是一种使用非常广泛的力敏元件。因为电阻与导体的材料、长度和横截面积有关，当金属丝受到拉力时，长度变长、横截面积变小，导致电阻变大；当金属丝受到压力时，长度变短、横截面积变大，导致电阻变小。==金属导体在外力作用下发生机械形变（伸长或缩短）时，其电阻随着它所受机械形变的变化而发生变化的现象==，称为金属的<strong>电阻应变效应</strong>。<strong>金属电阻应变片</strong>就是利用这一原理制成的。</p>
<p>​
除了金属电阻应变片外，常用的电阻应变片还有<strong>半导体电阻应变片</strong>，它的工作原理是基于半导体材料的压阻效应（当单晶半导体材料沿某一轴向受到外力作用时，其电阻率发生变化的现象，称为压阻效应）。==电阻应变片能够把物体形变这个力学量转换为电阻这个电学量。==</p>
<h4 id="电容式传感器">4. 电容式传感器</h4>
<p>​ 电容器的电容 <span class="math inline"><em>C</em></span>
决定于极板的正对面积 <span class="math inline"><em>S</em></span>、极板间的距离 <span class="math inline"><em>d</em></span>
以及极板间的电介质这三个因素。如果某个物理量的变化能引起上述某个因素的变化，从而引起电容的变化，那么，通过测定电容器的电容就可以确定这个物理量的变化，由此可以制成电容式传感器。</p>
<figure>
<img src="https://raw.githubusercontent.com/PassionPenguin/picgo-database/main/image-20220316231237558.png" alt="image-20220316231237558">
<figcaption aria-hidden="true">image-20220316231237558</figcaption>
</figure>
<h4 id="霍尔元件">5. 霍尔元件</h4>
<p>​ 1879
年，美国物理学家霍尔观察到，在匀强磁场中放置一个矩形截面的载流导体，当磁场方向与电流方向垂直时，导体中能够自由移动的带电粒子在洛伦兹力的作用下，向着与电流、磁场都垂直的方向漂移，继而在该方向上出现了电势差。后来大家把这个现象称为<strong>霍尔效应</strong>，所产生的电势差称为<strong>霍尔电势差</strong>或<strong>霍尔电压</strong>。</p>
<figure>
<img src="https://raw.githubusercontent.com/PassionPenguin/picgo-database/main/image-20220316231736317.png" alt="image-20220316231736317">
<figcaption aria-hidden="true">image-20220316231736317</figcaption>
</figure>
<p>​
除导体外，半导体也能产生霍尔效应，而且半导体的霍尔效应要强于导体。在一个很小的矩形半导体（如砷化铟）薄片上，制作四个电极
<span class="math inline"><em>E</em></span>、<span class="math inline"><em>F</em></span>、<span class="math inline"><em>M</em></span>、<span class="math inline"><em>N</em></span>，它就成了一个霍尔元件。在 <span class="math inline"><em>E</em></span>、<span class="math inline"><em>F</em></span> 间通入恒定的电流 <span class="math inline"><em>I</em></span>，同时外加与薄片垂直的磁感应强度为
<span class="math inline"><em>B</em></span> 的磁场，则在 <span class="math inline"><em>M</em></span>、<span class="math inline"><em>N</em></span> 间可出现霍尔电压 <span class="math inline"><em>U</em><sub><em>H</em></sub></span>。通过分析可知，霍尔电压
<span class="math inline"><em>U</em><sub><em>H</em></sub></span>
与磁感应强度 <span class="math inline"><em>B</em></span>
有线性关系，因此利用霍尔元件可以测量磁感应强度的大小和方向。==霍尔元件能够把磁感应强度这个磁学量转换为电压这个电学量。==</p>
<figure>
<img src="https://raw.githubusercontent.com/PassionPenguin/picgo-database/main/image-20220316231748800.png" alt="image-20220316231748800">
<figcaption aria-hidden="true">image-20220316231748800</figcaption>
</figure>
<p>​
霍尔元件除了可以检测磁场及其变化，还可以在各种与磁场有关的场合中使用。如下图中，在两块磁感应强度相同、同极相对放置的磁体缝隙中放入霍尔元件，当霍尔元件处于中间位置时，磁感应强度
<span class="math inline"><em>B</em></span> 为 <span class="math inline">0</span>，霍尔电压 <span class="math inline"><em>U</em><sub><em>H</em></sub></span> 为 <span class="math inline">0</span>，可将该点作为位移的零点。当霍尔元件沿着
<span class="math inline"> ± <em>z</em></span>
方向移动时，则有霍尔电压输出，且电压大小与位移大小成正比，从而能够实现微小位移的测量。</p>
<h4 id="干簧管">6. 干簧管</h4>
<p>​
干簧管的结构很简单，玻璃管内封入了两个软磁性材料制成的簧片。当磁体靠近干簧管时，两个簧片被磁化而接通，所以干簧管能起到开关的作用，操纵开关的是磁场这只看不见的“手”。==干簧管是一种能够感知磁场的传感器。==</p>
<figure>
<img src="https://raw.githubusercontent.com/PassionPenguin/picgo-database/main/image-20220316232208880.png" alt="image-20220316232208880">
<figcaption aria-hidden="true">image-20220316232208880</figcaption>
</figure>]]></content>
      <categories>
        <category>High School</category>
        <category>Physics</category>
        <category>Electricity and Electromagnetism</category>
      </categories>
      <tags>
        <tag>School Notes</tag>
        <tag>High School</tag>
        <tag>Physics</tag>
      </tags>
  </entry>
  <entry>
    <title>电磁波</title>
    <url>/2022/03/15/physics/High%20School/S2%20Electricity%20and%20Electromagnetism/%E7%94%B5%E7%A3%81%E6%B3%A2/</url>
    <content><![CDATA[<h2 id="课程标准">课程标准</h2>
<h3 id="课程标准内容">课程标准内容</h3>
<h4 id="电磁场与电磁波初步必修">3.3 电磁场与电磁波初步（必修）</h4>
<blockquote>
<p>3.3.4 通过实验，了解电磁波，知道电磁场的物质性。</p>
</blockquote>
<p>​
本条目要求学生：通过实验知道电磁波的产生、传播和接收，了解电磁波，知道电磁场的物质性。</p>
<blockquote>
<p>3.3.5 通过实例，了解电磁波的应用及其带来的影响。</p>
<p>例3 知道手机和卫星通信等都是电磁波的应用。</p>
</blockquote>
<p>​
本条目要求学生：通过调查、查阅资料等活动，了解电磁波在生产生活中的广泛应用，及其对现代社会的影响，体验科学知识在生活和科技中的应用，理解科学·技术·社会·环境的关系。</p>
<blockquote>
<p>3.3.6
知道光是一种电磁波。知道光的能量是不连续的。初步了解微观世界的量子化特征。</p>
</blockquote>
<p>​
本条目要求学生：知道光也是一种电磁波，知道光具有波动性，了解光的能量是不连续的，知道光子；通过了解有关原子结构模型的科普知识，体验物理模型在探索世界中的重要作用。</p>
<h4 id="教学活动要求">教学活动要求</h4>
<ol type="1">
<li>调查电磁波在现代社会中应用的实例。</li>
</ol>
<h4 id="电磁振荡与电磁波选择性必修">2.3
电磁振荡与电磁波（选择性必修）</h4>
<blockquote>
<p>2.3.1
初步了解麦克斯韦电磁场理论的基本思想，初步了解场的统一性与多样性，体会物理学对统一性的追求。</p>
<p>例1
结合牛顿万有引力定律和麦克斯韦电磁场理论，体会物理学发展过程中对统一性的追求。</p>
</blockquote>
<p>​
麦克斯韦电磁理论是19世纪物理学的重要发现，它是人类第一次把电、磁、光等现象统一起来的“统一性理论”。本条目要求学生：了解麦克斯韦电磁理论的主要思想。一方面，变化的磁场可以激发电场。这个观念比较容易理解，我们可以从电磁感应现象来解释。因为电磁感应现象产生的条件是闭合电路的磁通量发生变化，即变化的磁场可产生感应电流，而产生感应电流的原因是“电场推动”，这种推动感应电流的电场就是从变化的磁场产生或激发的。教师在教学中要充分利用电磁感应原理来解释，这种解释也可使学生对电磁感应的本质有更深的理解。另一方面，变化的电场也能激发磁场。学生没有办法对这一个假设提出可靠的解释，可以从对称性原理来理解。麦克斯韦当时就是根据对称性原理做了大胆的假设。麦克斯韦理论是一种统一场理论，它统一了电、磁和光等各种现象，电磁场模型把所有发现的电磁现象都统一在一个理论中。这正如牛顿的万有引力定律把天体之间的力、天地之间的力都统一起来一样。统一理论一直是物理学的追求，可以讠学生查阅资料了解人类对统一性的追求。</p>
<blockquote>
<p>2.3.2 通过实验，了解电磁振荡。</p>
</blockquote>
<p>​
本条目要求学生：大致了解电磁波产生于电磁振荡。了解电磁波的产生主要让学生了解
LC 振荡电路的基本特征，了解 LC
振荡电路中回路电流、电容器的板上的电量、极板电压等基本量的变化规律。可以让学生了解振荡电路的周期性变化规律，但不要求学生知道或理解振荡周期公式。</p>
<blockquote>
<p>2.3.3 知道电磁波的发射、传播和接收。</p>
<p>例2
演示赫兹实验，体会理论预言在科学发展中的作用，以及实验证据对新理论的支撑作用。</p>
</blockquote>
<p>​
本条目要求学生：大致了解电磁波的发射、传播和接收，包括电磁波的产生条件、发射条件和传播规律，以及振荡电路中电场能与磁场能的相互转化过程。其实电磁波的产生、发射和接收都源自最基本的原理一电磁振荡和电磁共振。按一定规律变化的振荡电流能够在空间激发变化的磁场，而按一定规律变化的磁场又能激发产生变化的电场。当然，这里不要求学生知道调谐、检波等内容。</p>
<p>建议教师用演示实验说明电磁波的发射、传播和接收。赫兹实验是一个判决性实验，它向我们宣告了麦克斯韦电磁理论的正确性。</p>
<blockquote>
<p>2.3.4 认识电磁波谱。知道各个波段的电磁波的名称、特征和典型应用。</p>
</blockquote>
<p>​
本条目要求学生：认识实际使用的电磁波，例如无线电波、可见光、红外线、紫外线、射线等。可见光是一种电磁波，可以在电磁波谱中加以理解。教师要介绍这些电磁波的性质、特征、实际应用，并把它们按频率或波长大小排列出来。电磁波谱已经应用于生产生活的各个方面。可以让学生列举生产生活中的应用案例，也可列举家用电器中应用电磁波的例子，例如微波炉、电磁炉、消毒柜、电烤箱等。应该说，现代技术的应用非常多，发展也越来越快，学生应该学会通过查阅资料、运用基本原理进行解释等方法来研究各种感兴趣的器械或设备。例如，学生可以查阅有关微波炉的工作原理与技术资料，并从资料分析与学习中写出有关微波炉使用规范的说明文。再如，蓝牙、Wi-Fi（无线网）等的应用已经非常普遍，学生可以查阅资料，学习、理解它们的原理，并把学习结果介绍给班内同学。</p>
<h4 id="教学活动要求-1">教学活动要求</h4>
<ol type="1">
<li>查阅资料，了解微波炉的加热原理，总结使用微波炉的注意事项。</li>
<li>查阅资料，了解移动通信技术发展情况，并了解蓝牙、Wi-Fi
等无线通信设备的原理、使用的电磁波频段和常用频率。</li>
<li>列举家用电器和生活用品中与红外线、紫外线有关的应用实例。</li>
</ol>]]></content>
      <categories>
        <category>High School</category>
        <category>Physics</category>
        <category>Electricity and Electromagnetism</category>
      </categories>
      <tags>
        <tag>School Notes</tag>
        <tag>High School</tag>
        <tag>Physics</tag>
      </tags>
  </entry>
  <entry>
    <title>磁场</title>
    <url>/2022/03/14/physics/High%20School/S2%20Electricity%20and%20Electromagnetism/%E7%A3%81%E5%9C%BA/</url>
    <content><![CDATA[Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
<h2 id="课程标准">课程标准</h2>
<h3 id="课程标准内容">课程标准内容</h3>
<h4 id="电磁场与电磁波初步必修">3.3 电磁场与电磁波初步（必修）</h4>
<blockquote>
<p>3.3.1 能列举磁现象在生产生活中的应用。了解我国古代在磁现
象方面的研究成果及其对人类文明的影响。关注与磁相关的现代技术 发展。</p>
</blockquote>
<p>​
本条目要求学生：通过调查、查阅资料等活动，整理磁现象在生产生活中应用的例子和我国古代对磁学的研究成果，体验科学知识在生活和科技中的应用，体会科学·技术·社会·环境的关系。教师可以通过介绍我国古代的磁学研究成果，以及对人类文明的重大贡献，来增强学生的民族自豪感，落实物理学科教书育人功能。</p>
<blockquote>
<p>3.3.2 通过实验，认识磁场。了解磁感应强度,
会用磁感线描述磁场。体会物理模型在探索自然规律中的作用。</p>
<p>例1
判断通电直导线和通电线圈周围磁场的方向，用磁感线描绘通电直导线和通电线圈周围的磁场。</p>
</blockquote>
<p>​
本条目要求学生：通过实验的方法认识磁场，知道磁极和通电导线周围存在磁场；认识磁场也是一种物质，体会物质世界的多样性，丰富他们的物质观；知道磁场有强弱，知道磁感应强度是用于描述磁场强弱的物理量，有大小和方向；类比电场与电场线引入磁感线，知道磁感线是描述磁场的一种物理模型；通过实验知道条形磁铁、蹄形磁铁的磁场分布情况，并会用磁感线近似描绘它们的磁场；通过实验知道通电直导线、螺线管周围的磁感场分布情况，体会物理模型在探索自然规律电的作用。</p>
<h4 id="教学活动要求">教学活动要求</h4>
<ol type="1">
<li>查阅资料，了解我国古代对磁现象的认识和应用及其对人类文明的影响。</li>
</ol>
<h4 id="磁场选择性必修">2.1 磁场（选择性必修）</h4>
<blockquote>
<p>2.1.1
通过实验，认识安培力。能判断安培力的方向，会计算安培力的大小。了解安培力在生产生活中的应用。</p>
<p>例1 利用电流天平等简易装置测量安培力。</p>
<p>例2 了解磁电式电表的结构和工作原理。</p>
</blockquote>
<p>​
本条目要求学生：认识和了解安培力，了解影响安培力的大小和方向的相关因素。教师要设计探究性实验，让学生逐步认识安培力的大小和方向。</p>
<p>​
判断安培力的方向对学生来说并不难，学生在初中物理（科学）已经学习过相关知识，而且学生对这部分内容的知识基础还是比较扎实的。计算安培力的大小只要求电流元与磁场垂直的情况，对于不垂直的情况可以用磁感应强度的等效值或等效电流元的方法来解释或解决，这一点不做统一要求。</p>
<p>​
关于“了解安培力在生产生活中的应用”，可以用重点解剖典型案例和一般性了解各种应用相结合的教学方法进行，可以让学生对电流天平、磁电式仪表的原理进行重点学习与分析，并让他们与同伴交流自己的理解。</p>
<p>​
“利用电流天平等简易装置测量安培力”和“了解磁电式电表的结构和工作原理”两个案例是重要的典型应用。教师可使用电流天平测量安培力，使学生了解电流天平的基本原理；磁电式仪表的结构以及结构与原理之间的关系，需要用安培力解释并进行综合分析，教学中要用好这些案例。</p>
<p>​
电磁继电器是电流的磁效应的重要应用，它也是重要的电工元件。教师可安排一个设计性作业让学生来完成，培养学生的动手实践能力，同时使学生对继电器的原理有深度的理解。</p>
<blockquote>
<p>2.1.2
通过实验，认识洛伦兹力。能判断洛伦兹力的方向，会计算洛伦兹力的大小。</p>
</blockquote>
<p>​
建议教师用演示实验的方法来让学生了解影响洛伦兹力的大小和方向的相关因套，教师要设计好这个实验的探究方法和程序，让学生来讨论每一步实验结果的判断洛伦兹力的方同的要求属于操作水平，因此，与前面判断安培力一样，要尽可能让学生自已动手操作、判断，并达到比较熟练的程度。对于洛伦兹力的计算公式只要求电荷运动方向与磁场方向垂直的情况，对于不垂直的情况可根据学生的学习能力来确定是否要求。</p>
<blockquote>
<p>2.1.3
能用洛伦兹力分析带电粒子在匀强磁场中的圆周运动。了解带电粒子在匀强磁场中的偏转及其应用。</p>
<p>例3 观察阴极射线在磁场中的偏转。</p>
<p>例4 了解质谱仪和回旋加速器的工作原理。</p>
</blockquote>
<p>​
用洛伦兹力公式来计算与处理带电粒子在磁场中的运动问题，一般只要求粒子运动方向与磁场垂直的情况，教学中要引导学生掌握判断圆周运动中的向心力与电荷运动之间的关系的方法。了解带电粒子的磁偏转的应用主要让学生了解阴极射线在磁场中的偏转现象，能分析计算与质谱仪和回旋加速器有关的物理问题。作为应用来说，这些内容是比较重要的，关键是让学生完全理解其原理。</p>
<h4 id="教学活动要求-1">教学活动要求</h4>
<ol type="1">
<li>用电磁继电器设计一个自动控制电路，说明其工作原理。</li>
<li>观察洛伦兹力演示仪的结构，定性讨论电子束偏转的原理。</li>
</ol>
<h2 id="知识聚焦">知识聚焦</h2>
<h3 id="一安培力">一、安培力</h3>
<h4 id="安培力">1. 安培力</h4>
<p>​
安培在研究磁场与电流的相互作用方面作出了杰出的贡献，为了纪念他，人们把通电导线在磁场中受的力称为<strong>安培力</strong>（Ampère
force），把电流的单位定为<strong>安培</strong>。</p>
<p>​
实验现象表明，==通电导体棒受力方向与磁场方向、电流方向有关==。<strong>左手定则</strong>的内容是==伸开左手，使拇指与其余四个手指垂直，并且都与手掌在同一个平面内；让磁感线从掌心垂直进入，并使四指指向电流的方向，这时拇指所指的方向就是通电导线在磁场中所受安培力的方向==。</p>
<p>​ 安培力的公式为：<span class="math inline"><em>F</em><sub><em>安</em></sub> = <strong>I</strong><strong>B</strong><em>L</em>sin ⟨<strong>I</strong>,<strong>B</strong>⟩</span>，需要注意的是，<strong>弯曲导线安培力直接<em>按磁场中有效长度计算</em></strong>。</p>
<blockquote>
<h3 id="向量法判断磁场安培力洛伦兹力电流的问题">向量法判断磁场、安培力、洛伦兹力、电流的问题</h3>
<p>​
安培力是洛伦兹力在安培力方向上的分力的表现形式，在高中阶段，我们可以简单使用洛伦兹力判断安培力相关问题（<span class="math inline"><strong>F</strong> = <em>q</em><em>v</em> × <strong>B</strong></span>）：右手定则（向量叉乘）。</p>
</blockquote>
<blockquote>
<h3 id="安培力作用下导体运动情况的判断">安培力作用下导体运动情况的判断</h3>
<h5 id="直线电流元法">1. 直线电流元法</h5>
<p>​
将整段电流等效分成很多段电流元，先用左手定则判断出每一小段电流元所受安培力的方向，从而判断出整段电流所受合力的方向，最后确定运动方向。==一般取对称的电流元分析判断能自由移动的导线运动情况==。</p>
<h5 id="特殊位置法">2. 特殊位置法</h5>
<p>​
根据通电导体在特殊位置所受安培力方向判断能够自由移动的导线运动情况，然后推广到一般位置。</p>
<h5 id="等效分析法">3. 等效分析法</h5>
<p>​
判断环形电流受到的安培力方向时，可以将环形电流等效为小磁针（或条形磁铁）；反之，条形磁铁也可以等效成环形电流，通电螺线管可以等效为多个环形电流或条形磁铁。</p>
<h5 id="一些结论">4. 一些结论</h5>
<p>​
两线圈电流互相平行时无转动趋势，同向电流相互吸引，异向电流相互排斥。两电流不平行时候，有转动到相互平行且方向相同的趋势。</p>
</blockquote>
<h4 id="磁电式电流表">2. 磁电式电流表</h4>
<p>​
磁电式电流表原理就是通电线圈受安培力作用而转动，且线圈连接一个螺旋弹簧（受力与偏转角度相关，即
<span class="math inline"><em>T</em> = <em>k</em><em>θ</em></span>。电流表的两磁极装有极靴，极靴中间还有一个用软铁制成的圆柱。这样，极靴与圆柱间的磁场都沿半径方向，如下图
2。</p>
<p>​
磁电式电流表的优点是<strong>灵敏度高</strong>，可以测出很弱的电流；缺点是线圈的导线很细，允许通过的<strong>电流很弱</strong>（几十微安到几毫安）。如果要用它测量较大的电流，就要根据在必修第三册中学到的方法扩大其量程。</p>
<figure>
<img src="https://raw.githubusercontent.com/PassionPenguin/picgo-database/main/image-20220314233445504.png" alt="image-20220314233445504">
<figcaption aria-hidden="true">image-20220314233445504</figcaption>
</figure>
<figure>
<img src="https://raw.githubusercontent.com/PassionPenguin/picgo-database/main/image-20220314233721413.png" alt="image-20220314233721413">
<figcaption aria-hidden="true">image-20220314233721413</figcaption>
</figure>
<blockquote>
<h4 id="直流电动机">直流电动机</h4>
<p>​
值得注意的是，直流电动机的基本结构与磁电式电流表基本一致，只是在线圈头端添加了一个换向器，在转过半圈后换向器恰好使电流反向（短暂有一段为<strong>惯性驱动</strong>）。</p>
</blockquote>
<h4 id="电流天平">3. 电流天平</h4>
<p>​
普通天平原理为杠杠原理进行力学平衡，并利用等效替代法测出被测物体的质量。<strong>等臂电流天平</strong>的原理为运用等效替代法与杠杆原理，测量安培力与磁感应强度。</p>
<blockquote>
<p>​ 如下图，对杠杆作受力分析，有： <span class="math display">$$
$m_Ag=m_Bg+\mathbf{I}\times\mathbf{B}L$
$$</span></p>
<p><img src="https://raw.githubusercontent.com/PassionPenguin/picgo-database/main/image-20220314233110681.png" alt="image-20220314233110681" style="zoom: 80%;"></p>
</blockquote>
<h3 id="二洛伦兹力">二、洛伦兹力</h3>
<h4 id="洛伦兹力">1. 洛伦兹力</h4>
<p>​
实验表明，电子束受到磁场的力的作用，径迹发生了弯曲。运动电荷在磁场中受到的力称为<strong>洛伦兹力</strong>（Lorentz
force）。通电导线在磁场中受到的安培力，实际是洛伦兹力的宏观表现。洛伦兹力的方向可以依照左手定则判定：==伸开左手，使拇指与其余四个手指垂直，并且都与手掌在同一个平面内；让磁感线从掌心垂直进入，并使四指指向正电荷运动的方向，这时拇指所指的方向就是运动的正电荷在磁场中所受洛伦兹力的方向==。</p>
<p>​ 高中所指的洛伦兹力为磁洛伦兹力，表达式为 <span class="math inline"><em>F</em><sub><em>洛</em></sub> = <em>q</em><strong>v</strong> × <strong>B</strong></span>，<strong>有洛伦兹力存在的直线运动一定是匀速直线运动</strong>。</p>
<blockquote>
<h4 id="总洛伦兹力与磁洛伦兹力">总洛伦兹力与磁洛伦兹力</h4>
<p>​
根据<strong>洛伦兹力定律</strong>（基本公理），（总）洛伦兹力可以用方程（<strong>洛伦兹力方程</strong>）表达为：<span class="math inline"><em>F</em><sub><em>洛</em></sub> = <em>q</em>(<strong>E</strong>+<strong>v</strong>×<strong>B</strong>)</span>。</p>
</blockquote>
<h4 id="电子束的磁偏转">2.电子束的磁偏转</h4>
<p>​
洛伦兹力的方向与粒子的运动方向垂直，当离子在磁场中运动时，因为受到洛伦兹力的作用，就会发生偏转。显像管中所用到的技术<strong>扫描</strong>的原理就是粒子受洛伦兹力的偏转作用。</p>
<h4 id="静电力洛伦兹力与安培力的比较">3.
静电力、洛伦兹力与安培力的比较</h4>
<table>
<colgroup>
<col style="width: 6%">
<col style="width: 33%">
<col style="width: 42%">
<col style="width: 18%">
</colgroup>
<thead>
<tr class="header">
<th></th>
<th>静电力</th>
<th>洛伦兹力</th>
<th>安培力</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>性质</td>
<td>电场对放入其中的带电粒子的作用力</td>
<td>磁场对在其中运动的带电粒子的作用力</td>
<td>磁场对通电导线的作用力</td>
</tr>
<tr class="even">
<td>产生条件</td>
<td>电荷处于电场中</td>
<td><span class="math inline"><strong>v</strong> ≠ 0</span>且<span class="math inline"><strong>v</strong></span>不与<span class="math inline"><strong>B</strong></span>平行</td>
<td>通电导线</td>
</tr>
<tr class="odd">
<td>大小</td>
<td><span class="math inline"><em>F</em> = <em>q</em><em>E</em></span></td>
<td><span class="math inline"><em>F</em> = <em>q</em><em>v</em><em>B</em></span></td>
<td><span class="math inline"><em>F</em> = <em>I</em><em>B</em><em>L</em></span></td>
</tr>
<tr class="even">
<td>方向</td>
<td>与电场方向相同（正电荷）或相反（负电荷）</td>
<td>左手定则</td>
<td>左手定则</td>
</tr>
<tr class="odd">
<td>做功</td>
<td>可能做功</td>
<td>一定不做功</td>
<td>可能做功</td>
</tr>
<tr class="even">
<td>作用效果</td>
<td>可以改变带电粒子速度大小和（或）方向</td>
<td>只改变电荷的速度方向，不改变电荷的速度大小</td>
<td>可以改变导线的运动状态</td>
</tr>
</tbody>
</table>
<h3 id="三带电粒子在匀强磁场中的运动">三、带电粒子在匀强磁场中的运动</h3>
<h4 id="带电粒子在匀强磁场中的运动">1. 带电粒子在匀强磁场中的运动</h4>
<p>​
洛伦兹力总是与粒子的运动方向垂直，只改变粒子速度的方向，不改变粒子速度的大小。由于粒子速度的大小不变，粒子在匀强磁场中所受洛伦兹力的大小也不改变，洛伦兹力对粒子起到了向心力的作用。所以，沿着与磁场垂直的方向射入磁场的带电粒子，在匀强磁场中做匀速圆周运动。<strong>带电粒子在磁场中的运动具有对称性</strong>。</p>
<figure>
<img src="https://raw.githubusercontent.com/PassionPenguin/picgo-database/main/image-20220315201005422.png" alt="image-20220315201005422">
<figcaption aria-hidden="true">image-20220315201005422</figcaption>
</figure>
<p>​ 需要注意，如下结论全部需要推导。 <span class="math display">$$
$F_L=q\mathbf{v}\times\mathbf{B}\\
F_n=q\mathbf{v}\times\mathbf{B}=m\dfrac{\mathbf{v}^2}{r}\\\\
r=\dfrac{m\mathbf{v}}{q\mathbf{B}}\\\\
T=\dfrac{2\pi m}{q\mathbf{B}}$
$$</span></p>
<h4 id="电磁技术的应用">2.电磁技术的应用</h4>
<p>​
因为电场、磁场都可以对带电粒子施加作用力，且粒子偏转的半径与其质量、带电量相关，我们可以利用这一原理制成<strong>质谱仪</strong>。</p>
<figure>
<img src="https://raw.githubusercontent.com/PassionPenguin/picgo-database/main/image-20220315202129775.png" alt="image-20220315202129775">
<figcaption aria-hidden="true">image-20220315202129775</figcaption>
</figure>
<p>​
同理，我们可以利用电场、磁场加速带电粒子，而为了避免铺设过长的加速轨道，我们可以让带电粒子做循环往复的圆周加速运动，利用这一原理制成<strong>回旋加速器</strong>。</p>
<figure>
<img src="https://raw.githubusercontent.com/PassionPenguin/picgo-database/main/image-20220315202415205.png" alt="image-20220315202415205">
<figcaption aria-hidden="true">image-20220315202415205</figcaption>
</figure>
<p>​ 同理，霍尔元件中，载流子偏转到导线两端，产生电压 <span class="math inline">$U=k\dfrac{IB}{d},
k=\dfrac{1}{ne}$</span>（根据电场力推导）。 <span class="math display">$$
$qvB = q\dfrac{U}{h}\\
I=neSv=nehdv\\
\therefore e\dfrac{I}{nehd}B=e\dfrac{U}{h}\\
\therefore U=\dfrac{1}{ne}\dfrac{IB}d
$
$$</span> ​
同理，速度选择器利用外加电场、磁场，使带电粒子受力平衡，只有满足 <span class="math inline">$v=\dfrac{E}{B}$</span>（<span class="math inline"><em>q</em><em>v</em><em>B</em> = <em>q</em><em>E</em></span>）的粒子能通过。</p>]]></content>
      <categories>
        <category>High School</category>
        <category>Physics</category>
        <category>Electricity and Electromagnetism</category>
      </categories>
      <tags>
        <tag>School Notes</tag>
        <tag>High School</tag>
        <tag>Physics</tag>
      </tags>
  </entry>
  <entry>
    <title>五代史伶官传序-欧阳修</title>
    <url>/2022/03/14/chinese/High%20School/Classical%20Chinese%20Literature%20and%20Poetry/%E9%80%89%E6%8B%A9%E6%80%A7%E5%BF%85%E4%BF%AE/%E4%BA%94%E4%BB%A3%E5%8F%B2%E4%BC%B6%E5%AE%98%E4%BC%A0%E5%BA%8F-%E6%AC%A7%E9%98%B3%E4%BF%AE/</url>
    <content><![CDATA[<h2 id="课文解读">课文解读</h2>
<p>​
《史记》首创论赞体例，即在许多篇章正文前后以“太史公曰”为开头写一段议论抒情性文字，唐刘知几在《史通》中将篇前文字称为“序”，篇后文字称为“赞”。欧阳修撰《新五代史》，沿用此体，在一些纪传前后撰写序论，阐发自己对一些历史事件或历史问题的看法，以总结经验，引为借鉴。本文即为欧阳修为《伶官传》所写的短序。《伶官传》是一篇合传，写后唐庄宗好俳优，宠幸伶人，伶人因而用事，败政乱国，终至于国灭身亡。所写四个伶人敬新磨、景进、史彦琼、郭从谦，唯敬新磨善于讽谏，颇有楚国优孟之风，无恶评，其他三人皆擅宠乱政、谄媚奸邪之徒。文末，欧阳修有几句评论：“《传》曰：’君以此始，必以此终。’庄宗好伶，而弑于门高（即郭从谦），焚以乐器。可不信哉！可不戒哉！”可见其撰述此传以史为鉴、居安思危之意。</p>
<p>​
后唐庄宗李存勖被誉为军事天才，骁勇善战，战功赫赫，很短时间内率兵横扫南北，灭燕，灭后梁，驱逐契丹兵出境，被认为是最有可能统一天下之人。可他仅仅称帝四年，即陷入内外交困的境地，最终身死于伶人之手。其勃兴速亡的教训，令人感叹。这篇短序与文末评论前后呼应，通过论述后唐庄宗得天下与失天下的历史教训，阐明“盛衰之理”多由人事，“忧劳可以兴国，逸豫可以亡身”的道理。</p>
<p>​
第1段是立论。文章以“呜呼”发端，寓含深沉的历史感慨，奠定叹惋基调。五代十国时期，政权更迭频繁，战乱频仍，可以算是中国历史上最为黑暗的时期之一。也许是其间感觉沉痛、可资嗟叹处甚多，故欧阳修作序论均以嗟叹之词“鸣呼”开篇。紧接着作者亮出主张：“盛衰之理，虽曰天命，岂非人事哉！”天下兴亡国家盛衰的道理，无非归结为天命和人事两方面，欧阳修不否认其中有天命的因素，但更强调人事。如何知之？“原庄宗之所以得天下，与其所以失之者，可以知之矣。”</p>
<p>​
接下来两段紧承上文，分别引述庄宗得天下与失天下史实，说明立论的根据。第2段，写庄宗继承晋王遗命。晋王三遗恨的故事，近乎小说家语，未必确有其事，故云“世言”；但庄宗继晋王位时，强敌环伺却是不争的史实。其功业发端于“殷忧”之时，故而欧阳修从这个故事说起。魏征《谏太宗十思疏》云：“夫在殷忧，必竭诚以待下。”庄宗恪遵父命，矢志复仇，用兵前请三矢，“盛以锦囊，负而前驱”，凯旋后还三矢，恭敬收藏，可谓竭诚尽忠，故能有所成就。第3段，以两个对比渲染庄宗由成到败的巨大反差。先写其成功。灭燕，“系燕父子以组”，再灭梁，“函梁君臣之首”，终于报燕、梁之仇，“还矢先王，而告以成功”。功业达到顶峰，“其意气之盛，可谓壮哉！”再写其由胜转败。本来“仇雠已灭，天下已定”，可以高枕无忧了，孰料“一夫夜呼”，竟然“乱者四应”，原先的“意气之盛”荡然无存，代之以“仓皇东出”“士卒离散”“君臣相顾”“泣下沾襟”。作者评论说：“何其衰也！”这两句概括性极强，对比也极为鲜明，不禁引发人们思考：到底是什么原因呢？为何庄宗能善始却不能善终呢？这就引出下文的议论。文章先让一步：难道是得天下困难、失天下容易吗（归于天命）？自然并非如此，文章随即作出回答：或者考察他成败的原因，都是因为人事吧？紧接着开始分析到底是怎样的“人事”导致其成败。文章引《尚书》“满招损，谦得（受）益”的古训，暗寓庄宗之前谦虚谨慎，终于成事，“既得志，则纵情以傲物”，终致颠覆。由此得出结论
——“忧劳可以兴国，逸豫可以亡身”，这才是“自然之理也”。</p>
<p>​
第4段，从上文“盛”“衰”处进一步阐发。正因为他之前忧虑劳苦，竭忠尽智，所以“方其盛也，举天下之豪杰，莫能与之争”；而后来安于享乐，不思戒慎，所以“及其衰也，数十伶人困之，而身死国灭，为天下笑”。实际还是阐发开头所云“盛衰之理……岂非人事”的观点。最后又将此论扩而广之，以“祸患常积于忽微，而智勇多困于所溺，岂独伶人也哉”结束全篇，强调逸豫亡身不限于伶人，只要是“困于所溺”，虽智勇者也会因漠视“忽微”之患而积少成多，酿为大祸。言外之意，此事不可不戒慎！</p>
<p>​ 本文语言有如下特点：</p>
<ol type="1">
<li>辞气委婉，言语恳切。</li>
</ol>
<p>​
文章作为一篇旨在以史为鉴的史论文，依据史实，娓娓道来，仿佛与预想中的读者谈古论道，辞气委婉，言语恳切。文章从“呜呼”起笔，寄寓感慨，其后“可谓壮哉”“何其衰也”，一叹再叹，语重心长。叙庄宗功业辉煌，语含敬佩；述其迅疾陨落，则充满叹惋，叹其未能善终，悯其勃兴忽亡。论其败因，先用反问，再以疑问呼应观点，最后以“岂独伶人也哉”收尾，更是使说理委婉而富恳切之意。</p>
<ol start="2" type="1">
<li>抑扬顿挫，错落有致</li>
</ol>
<p>​
文章以散体写史论，间以对仗工整的骈句，骈散结合，错综有致；适当运用长句，调节语势，张弛有度。读起来抑扬顿挫，感情饱满，气势旺盛。文章语势波澜起伏。开篇亮出观点，突兀而起，随后阐发立论根据，叙述“晋王三矢”故事，节奏为之一缓；第3段写其成败反转，涉及论述核心，语势猛然一升，先写其成，慷慨激昂，达到高潮，后写其败，仓仓皇皇，语势紧迫；继而步步紧逼，设疑问、引古语而得出“自然之理”；再举其盛衰不同，从另一角度阐发教训，并以反问作结，余音袅袅，启人深思。</p>
<ol start="3" type="1">
<li>语言平实，言简意丰。</li>
</ol>
<p>​
与《过秦论》相比，这篇文章并没有华丽的辞藻，基本用平实的语言叙述事例，阐发道理，平易近人，自然晓畅。叙事不枝不蔓，概括性极强；议论简明扼要，切中肯綮。其中一些格言式语句，如“忧劳可以兴国，逸豫可以亡身”，“祸患常积于忽微，智勇多困于所溺”，句式整齐，言简意丰，发人深省。</p>
<p>​
综上，文章开篇立论，提出盛衰多由“人事”的观点，随后以庄宗故事加以印证，并反复阐发，推广其意，以鉴往知来，警戒后人。文章叙论结合，说理平正，言辞委婉，质朴自然，情意恳切，引人深思。清沈德潜评论此文“抑扬顿挫，得《史记》神髓，《五代史》中第一篇文字”。</p>
<h2 id="参考资料">参考资料</h2>
<h3 id="参考译文">参考译文</h3>
<div class="classcial-chinese-literature-and-poetry-translation"><div class="paragraph"><p class="original-text">呜呼！盛衰之理，虽曰天命，岂非人事哉！</p><p class="translation">唉！国家盛衰兴亡的道理，虽说是天命，难道不是由于人的作为吗！</p><p class="original-text">原庄宗之所以得天下，与其所以失之者，可以知之矣。</p><p class="translation">推究后唐庄宗取得天下与失去天下的根本原因，就可以知道了。</p></div><div class="paragraph"><p class="original-text">世言晋王之将终也，以三矢赐庄宗而告之曰：</p><p class="translation">世人传说晋王李克用临死时，把三支箭赐给庄宗，告诉他说：</p><p class="original-text">“梁，吾仇也；燕王，吾所立；契丹与吾约为兄弟；而皆背晋以归梁。</p><p class="translation">“梁王朱温是我的仇敌；燕王是我立他为王的，契丹与我订立盟约结为兄弟，可是他们都背叛我归顺了梁。</p><p class="original-text">此三者，吾遗恨也。与尔三矢，尔其无忘乃父之志！”</p><p class="translation">这三个人是我到死还感到悔恨的事情。给你三支箭，你不要忘记你父亲报仇的志愿！”</p><p class="original-text">庄宗受而藏之于庙。</p><p class="translation">庄宗领了箭，将其收藏在祖庙中。</p><p class="original-text">其后用兵，则遣从事以一少牢告庙，请其矢，盛以锦囊，负而前驱，及凯旋而纳之。</p><p class="translation">其后庄宗出兵的时候，便派属官用羊、猪各一头祭告祖庙，恭敬地取出他父亲留下的箭，用锦囊装着，背着在军前开路，等凯旋时再把箭收藏在祖庙里。</p></div><div class="paragraph"><p class="original-text">方其系燕父子以组，函梁君臣之首，</p><p class="translation">当庄宗用绳索捆绑着刘仁恭、刘守光父子，用木匣子装着后梁皇帝、大臣的头，</p><p class="original-text">入于太庙，还矢先王，而告以成功，其意气之盛，可谓壮哉！</p><p class="translation">进入祖庙，把箭交还到先王的灵位前，向先王禀告成功的时候，他意骄气盛，可以说豪壮极了！</p><p class="original-text">及仇雠chóu已灭，天下已定，一夫夜呼，乱者四应，</p><p class="translation">等到仇人已经消灭，天下已经平定，一人在夜里呼喊，作乱的人四方响应，</p><p class="original-text">仓皇东出，未及见贼而士卒离散，君臣相顾，不知所归。</p><p class="translation">他匆忙往东逃，还没见到乱贼。手下的士卒就溃散了，君臣面面相觑，不知道到哪里去，</p><p class="original-text">至于誓天断发，泣下沾襟，何其衰也！岂得之难而失之易欤？</p><p class="translation">最后剩下的那些将领只落得截断头发，对天发誓愿以死相报，大家的泪水浸湿了衣襟，又是多么衰败啊！难道是取得天下难，而失去天下容易吗？</p><p class="original-text">抑本其成败之迹，而皆自于人欤？</p><p class="translation">或者说推究他成功与失败的原因，都出自人的原因吗？</p><p class="original-text">《书》曰：“满招损，谦得益。”忧劳可以兴国，逸豫可以亡身，自然之理也。</p><p class="translation">《尚书》上说：“骄傲自满会招来损害，谦虚谨慎能得到益处。”忧劳可以使国家兴盛，安乐可以使自身灭亡，这是自然的道理啊。</p></div><div class="paragraph"><p class="original-text">故方其盛也，举天下之豪杰，莫能与之争；</p><p class="translation">因此当庄宗强盛时，全天下的豪杰，没有谁能与他相争；</p><p class="original-text">及其衰也，数十伶人困之，而身死国灭，为天下笑。</p><p class="translation">到他衰败时，几十个伶人把他困住，落得个身死国灭，被天下人耻笑。</p><p class="original-text">夫祸患常积于忽微，而智勇多困于所溺，岂独伶人也哉？</p><p class="translation">人生的祸患常常在极小的事上积累而成，而智勇之人往往被自己所溺爱的人或物困住，难道只有伶人才如此吗？</p></div></div>
<h3 id="有关史料">有关史料</h3>
<h4 id="唐庄宗其人朱则莹">（1）唐庄宗其人（朱则莹）</h4>
<p>​
欧阳修为五代史伶官传作序，客观地分析唐庄宗的成败得失。唐庄宗姓朱邪，名存勖，本是沙陀族人，他的祖上做唐朝的臣子，被赐姓李。他父亲李克用被唐王朝招来镇压黄巢农民军，沙陀兵进入长安，焚宫殿，烧府库，大肆掠夺，无恶不作。</p>
<p>​
公元908年，晋王李克用死，李存勖继承父业。他初有大志，着手整顿纪律败坏的沙陀兵，组成精锐部队。913年破幽州，取河北，击败对手梁国军队。923年在魏州称帝，国号称后唐。</p>
<p>​
唐庄宗骁勇善战，常冒死搏斗。最激烈的也是决定性的一仗是称帝后夺取郓州之战。梁军破德胜南城，庄宗弃北城，坚守杨刘城，与号称十万之众的梁军日夜苦战，庄宗再占德胜城，梁军决黄河口用洪水阻唐军。庄宗听取谋臣郭崇韬的计策，留兵守杨刘，自率轻骑从郓州直取汴州，一举消灭梁国。赫赫战绩，使欧阳修禁不住赞叹：“举天下之豪杰，莫能与之争”，“其意气之盛，可谓壮哉！”</p>
<p>​
唐庄宗小名亚子，喜演剧，能度曲。伶人能接近他，并渐渐参与政事。庄宗宠幸的伶人周匝为梁所得。庄宗灭梁进入汴州那天，周匝至马前拜见，庄宗非常高兴，并赐以金帛慰劳。周匝说：“我在梁国没遭杀身之祸，多亏教坊使陈俊、内园栽接使储德源的帮助，请天子好好答谢他二人。”庄宗当场答应封官。郭崇韬竭力劝阻说：“帮陛下取天下的功臣还未封赏，却先封伶人，是要失去人心的。”庄宗到底不听，封陈为景州刺史，封储为宪州刺史。</p>
<p>​
唐庄宗宠信伶人，让景进、史彦琼、郭从谦等优伶掌握实权。景进等专替他探听宫外消息，回报的情况往往颠倒是非。许多朝官和四方藩镇都争着向伶官行贿，以求在庄宗面前说些好话。最阴险的是那个演杂剧出身的郭从谦，因有些军功，被封为掌握亲兵的从马直指挥使。因姓郭，又去亲近权臣郭崇韬，并拜其为叔父。崇韬无辜被杀，郭从谦借此机会在营中蛊惑军心。当时军士王温趁夜作乱，事发后被斩。有一次庄宗戏语郭从谦，说：“你的党朋，忘恩负义，又教王温造反。你们还想干什么呢？”从谦大为震惊，回来后便进一步煽动兵将道：“快把你们的积蓄拿出来买酒肉吃，不必考虑后事。”大家问为什么，他说：“陛下为王温的事，等到攻占邺地，要把你们统统活埋。”从此，这支亲兵部队便萌发了叛乱的念头。</p>
<p>​
不久，李嗣源发动兵变，郭从谦首先响应，率从马直亲兵攻皇城，纵火焚烧兴教门，闯入内宫，乱兵在宫楼上用箭射死仓皇东出的唐庄宗。《伶官传序》把这个过程概括评述为：“一夫夜呼，乱者四应”，“及其衰也，数十伶人困之，而身死国灭，为天下笑”。当初梁国大将王彦章就说过：“李亚子是个斗鸡小儿，不足畏。”诚然，庄宗把打仗治国视为斗鸡寻乐，此外一无所知。正如欧阳修所说：“夫祸患常积于忽微，而智勇多困于所溺。”因此，唐庄宗斗败梁国，自己也接着灭亡。</p>
<h4 id="此三者吾遗恨也陈亚仁">（2）此三者，吾遗恨也。（陈亚仁）</h4>
<p>​
庄宗李存勖的父亲李克用，与后梁朱温、燕刘仁恭父子、契丹阿保机三者的关系，有一个历史演变的过程。李克用的父亲原名朱邪赤心，世统领沙陀部落。唐懿宗时，庞勋起义，朱邪赤心统领骑兵帮助唐王朝镇压了起义军，因而受封代北行营节度使并赐名李国昌。黄巢起义军攻克长安后，李克用又率其部属追击屠杀起义军，受封河东节度使，后进爵晋王。</p>
<p>​
公元885年，李克用同起义军叛将朱温等相约合击黄巢。回兵时，李克用途经汴，朱温假意置酒宴请，夜里却纵火烧上源驿，意图杀害李克用。适逢倾盆大雨，将大火熄灭，李克用由侍人郭景铢相救，得以缒城逃出，双方从此结怨。朱温窃取农民起义果实，于公元907年废唐称帝，各地势大力强的藩镇也纷纷称王称帝，开始了中国历史上一个纷扰割据的时期—五代十国。在你争我夺的血战中，双方结怨越来越深。</p>
<p>​
刘仁恭原是幽州李可举的部属。李死后，其子匡威、匡俦相互残杀，刘仁恭趁机拥兵攻打幽州。兵败之后，刘仁恭投奔晋王李克用，常“道燕之虚实，陈可取之谋”，受到宠信。后来李克用攻打罗弘信，求兵于刘仁恭，刘不但不给，反而杀了晋王的亲信燕留得，反目成仇。刘仁恭的儿子刘守光于公元911年称帝，自号大燕皇帝。</p>
<p>​
李克用一度与契丹阿保机关系密切。公元905年，阿保机极盛时期，统领30万军，应李克用邀请来到云州。双方“握手甚欢，结为兄弟”。后来，阿保机却背约归梁。</p>
<p>​
因此，《五代史阙文》有这样的记载：“武皇临薨，以三矢付庄宗曰：‘一矢讨刘仁恭，汝不先下幽州，河南未可图也；一矢击契丹，且曰阿保机与吾把臂而盟，结为兄弟，誓复唐家社稷，今背约附贼，汝必伐之；一矢灭朱温。汝能成吾志，死无恨矣。’”</p>
<h4 id="系燕父子以组函梁君臣之首">（3）系燕父子以组，函梁君臣之首。</h4>
<p>​
后唐庄宗李存勖接受父命，决心报仇。天祐十年（913），李存勖攻幽州，“以组系仁恭、守光，号令而入，是日诛守光。遣大将李存霸拘送仁恭于代州，刺其心血，奠告于武皇陵（即李克用陵墓），然后斩之”。至此李克用的燕仇已报。后唐庄宗同光元年（923），李存勖兵破开封，后梁末帝朱友贞见大势已去，“召控鹤都将皇甫麟，谓之曰：＇吾与晋人世仇，不可俟彼刀锯。卿可尽我命，无令落雠人之手！麟举刀将自刭，帝持之，因相对大恸”。于是皇甫麟杀了朱友贞，然后自杀。庄宗闻之，“诏河南尹张全义收葬之，其首藏于太社”。李克用的梁王之恨又除。（4）一夫夜呼，乱者四应。</p>
<p>​
公元926年，枢密使崇韬和他的女婿、庄宗异母弟存相继被杀，加上其他天灾人祸，一时谣传四起，人心浮动。兵士皇甫晖当时奉命戍瓦桥关，戍期已满，却被留下守贝州，心怀不满，便趁机纠众杀部将杨仁晸，裹胁裨将赵在礼为乱。这次兵变发生于夜间，故云“夜呼”。庄宗之祸，自皇甫晖一夫夜呼而起。</p>
<p>​
魏州兵变时，拥有兵权的伶官史彦琼先拒不发兵，后又单骑逃逸，乱兵因得以很快据有邺城。庄宗闻变，派宋州节度使元行钦招抚不成，又遣诸军大集于邺城而攻城不克，于是命蕃汉总管李嗣源统亲军讨伐。李嗣源领军到邺城下，军士大乱，迫嗣源为帝。庄宗只得御驾亲征。谁知未与乱兵相接，诸军先于途中离散奔汴，不得已中道而返。还军途中，庄宗精神沮丧，流泪责备诸将说：“卿等事余已来，富贵急难，无不共之。今兹危蹙，赖尔筹谋，而竟默默无言，坐观成败。”元行钦等百余人都援刀截发，置发于地，以示忠诚。是时，君臣相对悲号。</p>
<p>​
四月，丁丑朔，伶官郭从谦率所部叛乱，进攻宫城，庄宗为流矢所中，崩于绛霄殿之庑下。坊人善友，将廊下乐器聚簇在庄宗的尸体上，发火焚之。</p>
<h4 id="身死国灭">（5）身死国灭。</h4>
<p>​
庄宗亲征李嗣源败回，众叛亲离，郭从谦乘危作乱，射杀庄宗。庄宗死，李嗣源正式继承帝位，是为明宗。李嗣源曾企图改国号，事虽未行，但李克用嫡亲子孙全被诛杀，后唐政权实质上已经覆灭，故曰“身死国灭”。</p>
<h4 id="祸患常积于忽微智勇多困于所溺">（6）祸患常积于忽微，智勇多困于所溺。</h4>
<p>​
李存勖24岁继晋王位，历经十余年鏖战，终于执杀刘仁恭父子，逼使朱梁魏州来归，于公元903年称帝魏州。如果包括李克用在世时所参与的征战，那么庄宗夺天下，历时二十年以上；然而，这个得来颇不容易的天下，不到四年工夫，竟又在庄宗的手里丧失。“得之难而失之易”，不能不引起历史学家们的慨叹并进而追根寻源了。</p>
<p>​
北宋薛居正在《旧五代史》里评论道：“庄宗以雄图而起河、汾，以力战而平汴、洛，家仇既雪，国祚中兴，……然得之孔劳，失之何速？岂不以骄于骤胜，逸于居安，忘栉沐之艰难，狗色禽之荒乐。外则伶人乱政，内则牝鸡司晨，靳吝货财，激六师之愤怒；征搜兴赋，竭万姓之脂膏。……”</p>
<p>​
庄宗失败的原因很多，如任用租庸使孔谦，“峻法以剥下，厚敛以奉上”，弄得“四方饥馑，军士匮乏，有卖儿贴妇者，道路怨咨”；刘皇后专权信谗，擅杀鼎臣，致使人人恐悚，众口吞声。而“伶人乱政”则是其失天下的重要原因。</p>
<p>​
庄宗自幼好俳优，常与俳优杂戏于庭。伶人得宠，为官作宦，“军机国政皆与参决”，伶人郭从谦竟当上皇帝近卫军“从马直”的指挥使。</p>
<p>​ 《五代史·伶官传》详细记载了“伶官乱政”的许多史料。</p>
<p>​
庄宗刚入洛时，居住唐故宫室。宫中一度传说闹“鬼”，有人说是因为后宫人太少的缘故，庄宗便派遣景进在邺选美女千人以充后宫，景进趁机大肆鱼肉百姓，中饱私囊，致使军士妻女逃亡达数千人。</p>
<p>（选自《&lt;伶官传序&gt;有关史料》，《语文战线》1983年第8期）</p>
<h3 id="参考文献">参考文献</h3>
<h4 id="一篇名副其实的过唐论欧阳修五代史伶官传序浅说-real_comments_on_the_faults_of_tang_comments_on_the_preface_of_the_history_of_the_five_dynastys_lingguan">一篇名副其实的“过唐论”——欧阳修《五代史伶官传序》浅说
<span class="citation" data-cites="Real_comments_on_the_faults_of_Tang_Comments_on_the_Preface_of_the_history_of_the_five_dynastys_Lingguan">[@Real_comments_on_the_faults_of_Tang_Comments_on_the_Preface_of_the_history_of_the_five_dynastys_Lingguan]</span></h4>
<p>​
朝代盛衰，兴亡相继，随着旧王朝的覆灭，新的王朝又代之而起，开始了新一轮的统治历史。前车之覆，当为后车之鉴。对刚刚取得政权的统治阶级来说，在推翻旧王朝的同时，又不能不反省自身，思考自己王朝的命运，及时总结历史经验，从前朝的败亡中汲取教训，引出戒鉴，从而较量长短，改弦更张，避败就胜，以维护自己统治的长治久安。汉代以降，大抵如此。</p>
<h5 id="一">（一）</h5>
<p>​
西汉方兴，汉高祖刘邦和陆贾有一段十分著名的对话。因陆贾“称诗书”，刘邦便骂
道：“乃公居马上而得之，安事诗书！”陆贾反言相问：“居马上得之，宁可以马上治之乎？”刘邦受到顶撞，大为不悦。但当时正值立国之初，万事未安，百废待举，统治者尚未在国人中树立起自己的良好形象，还不便以“大不敬”来处置才士。刘邦虽未问罪于陆贾，却出了一道题目：“试为我著秦所以失天下，吾所以得之者何，及古成败之国。”此题一出，陆贾遂应命属文，撰成《新语》一书，论说秦代和前朝的成败得失。此后，一些文人学者都竞相在这个题目下面大作文章，以至总结“秦所以失，汉所以得”，以及历代兴亡之迹，成为汉初散文的共同特征，一时蔚为风气。陆贾之后，贾谊、董仲舒、司马迁等又继之而起，凡所立论，大都不出这个命题。其中最切题、最出色的文章，当推贾谊的《过秦论》。此文详尽地分析了秦所以能削平六国及其所以迅速灭亡的原因，简洁明确地得出“仁义不施而攻守之势异也”的结论。董仲舒虽也有作，但着眼点不同，方法自异，他力图以天人感应的观点来解释盛衰循环之理。司马迁立志要“究天人之际，通古今之变，成一家之言”，其史学巨著《史记》，更是在这个总题目下所作的大块文章。由此可见，汉代初年的散文，是皇帝出题目，文人们去作的，文章内容也是按皇帝的意旨写的。</p>
<h5 id="二">（二）</h5>
<p>​
北宋的情况和西汉自是不同，但著文以稽成败，撰书以垂鉴戒，却与汉代相近。北宋前期，一些关切国事的文人学者，一般都很注意研究前代治乱兴衰的历史经验，以警戒当世，欧阳修、尹师鲁、司马光等莫不如此。他们为文作史，其立足点都在治乱兴亡，政治得失，而不在其他方面。作为一代文宗，欧阳修又颇重治史，用力极勤。他留心前朝史事，历观成败得失，联系现实，借古讽今，用近三十年的时间著成《新五代史》，其目的在于总结历史经验，用相隔不久的五代之兴亡成败，给北宋的统治者提供鉴戒。如他自己所言：“昔孔子作《春秋》，因乱世而立治法；余述《本纪》，以治法而正乱君。”（《欧阳文忠公文集》附录卷五“事迹”）这不正是他治史的宣言和昭示吗？</p>
<p>​
《新五代史》总结前朝经验，引为鉴戒的事例很多，《伶官传序》之论伶人败政乱国，即是其中最具代表性的篇目之一。欧阳修之为史，极重得失存亡，对一些他认为特别值得后人警惕的事件，或发人深思的问题，都用序、论的形式阐明自己的看法，《伶官传序》就属于这类文字。文章通过总结后唐庄宗既得天下又失天下的历史教训，说明“忧劳可以兴国，逸豫可以亡身”，指出国家的盛衰主要决定于人事，而非天命。对历史的升沉，王朝的盛衰，能从人事方面加以考察，推究其因，其观察事物、论析问题的视点与角度无疑是正确的，识见是极为可贵的。这种看法，不但在当时富有现实意义，就是在今天也还值得我们深思。欧阳修之考究后唐的败亡，与贾谊之推论秦朝的破灭，直是如出一辙，略无二致。</p>
<h5 id="三">（三）</h5>
<p>​
《过秦论》是评述秦的过失，揭示其顷刻覆亡的原因。《伶官传序》是论说后唐的错谬，指出其迅速败灭的根由。两文从撰述背景到写作意图，从内容到形式，都有许多相同或相近的地方。据此，窃意《伶官传序》俨然就是一篇“过唐论”。为了说明问题，我们不妨作如下比较：</p>
<p>​
首先，从两文写作的背景和目的来看，如前所言，贾谊身处封建盛世的汉代，他的《过秦论》是在汉初统治者要求总结历史经验，从中汲取教训，进而采取新的统治政策，以巩固新生的封建政权这样一个背景下产生的。作为封建统治集团的一员，贾谊当然有维护自己王朝、维护自已阶级利益的要求，因而，他适应当时的政治需要，写出了《过秦论》这篇著名的政论散文，论述秦之盛衰，推究其“所以得，所以失”的缘由，使统治者有所警惕，引以为训，为维护西汉政权尽一点臣子之责。</p>
<p>​
欧阳修生当弱宋之际，和贾谊相去甚远，千年之间，几多变易，时移而势迁。北宋王朝建立之后，一直是最大限度地满足大官僚、大地主的政治经济利益，“不立田制”，“不抑兼并”，贵族豪强享有免役、免税等种种特权。随着土地和财富的高度集中，统治阶级日益腐化堕落，为了充盈贫竭日空的国库，维持自己骄奢淫逸的生活，支付连年战争的巨大开支，也为了满足外族统治者输款纳币的苛刻要求，求得暂时的苟安，他们对内则加紧搜刮民脂民膏，残酷压榨穷苦百姓，阶级矛盾日益尖锐。对外则忍辱求全，非但不力图振作，反而一味地妥协退让，不惜出卖国家民族的利益，民贫国弱，外族步步进逼，民族矛盾日趋激烈。在统治阶级歌舞享乐、粉饰太平的背后，潜藏着严重的社会危机。统治集团中一些思想敏锐、头脑清醒的有识之士，从关切王朝命运的立场出发，或者给统治阶级出谋划策，促使其采取相应的措施，调整统治政策，以缓和社会矛盾；或者身体力行，在得到最高统治者的默许和支持下，实行自上而下的政治变革，以挽救社会危机；或者著书立说，总结前朝的兴盛败亡，以为当朝之戒，警告和提醒统治阶级，革除弊政，励精图治，使国家走上复兴之路。欧阳修的《伶官传序》，正是这种历史条件和现实社会的产物。作为统治阶级的一分子，对统治当局的腐朽，对自己阶级的没落，欧阳修不可能漠然置之，无动于衷。他一方面积极参与当时的政治改革运动，一方面著述撰文，大声疾呼，从历史的烟云中撷取可资借鉴的经验教训，以垂示当世。</p>
<p>​
可见，《过秦论》和《伶官传序》，都是对前代盛衰兴亡的历史经验的总结和概括，其目的也都在于维护当朝的统治。所不同的是，《过秦论》是贾谊按皇帝拟定的题目写的，是应制之作。而在欧阳修的时代，统治阶级并未明确地向文人学者提出类似的政治要求，《伶官传序》的写作，则显然出自作者的自觉行动，带有一种自发的性质。</p>
<p>​
其次，从文章的思想内容来看，《过秦论》的主旨是总结、推究秦代灭亡的历史原因，在贾谊看来，秦朝所以迅疾覆亡，就是因为其推行暴政，不施仁义。像秦朝这样一个“席卷天下”、“威振四海”、举世无敌的强大帝国，却在率疲惫散乱之众数百的陈涉的奋臂大呼下顷刻瓦解。这就说明，农民起义的巨大威力，足以给封建王朝以致命的打击。统治者如若不向人民作些让步，施行一些仁政，那只有丧失民心，最终走向灭亡之途。文章表面上是论述秦的兴亡，实际上是提醒汉朝统治者应以秦为戒，推行仁政，争取民心，以免重蹈秦朝的覆辙。</p>
<p>​
《伶官传序》的中心思想是总结和寻绎后唐灭亡的历史因由，说明国家的“盛衰之理”，非关天命，实由人事，揭示忧虑勤劳能使国家兴盛，安逸享乐会使自身丧命的道理。作者认为，后唐所以兴盛，就在于统治者的“忧劳”，而其所以破灭，原因又在统治者的“逸豫”。同样，此文名义上是写后唐的盛衰之迹，实际上，作者托古讽今，对症下药，通过活生生的后唐兴亡史，提醒和勉励当今之主要努力做到“忧劳兴国”，防止和避免“逸豫亡身”，“得之难而失之易”，步后唐覆亡的后尘。后来的历史事实证明，北宋之亡于金人，南宋之灭于蒙元，其原因之一，就是由于宋朝统治者只求苟安享乐，不图振作，毫无进取之心。欧阳修早在北宋前期就能洞悉未来，明察事理，看到问题的严重性，这说明他是有一定的历史眼光的，不愧为一个深谋远虑、高瞻远瞩的杰出政治家。</p>
<p>​
由是观之，《过秦论》和《伶官传序》都是在评说历史，推究原因，总结经验，提供鉴戒，两文的思想内容不无相似之处。所不同的是，贾谊是论秦，欧阳修是说唐。</p>
<p>​
再次，从文章的写法来看，在谋篇布局上，《过秦论》先极写秦朝吞灭六国、统一天下的威势，可谓盛极一时。接着写陈涉起事反秦，天下云合响应，秦朝迅疾灭亡。最后据题立意，因叙而议，点明缘由，得出结论。文章结构严谨，剪裁得当，笔笔设伏，层层照应。《伶官传序》开宗明义，正面提出主张，以此作为全篇的总纲。继而叙写庄宗接受父王遗命和执行遗命的情况，以具体的历史事实作为论述盛衰之理的例证，通过记述后唐的兴盛破亡，进一步阐明成败由人的道理。篇末生发议论，探究因由，总结教训。文章逻辑严密，布局恰切，环环相扣，步步深入。两文的运思谋篇，大体相类。论述前代兴亡，由盛而衰，由叙写史事到议论说理，最后画龙点睛，一语破的。不同的是，两文虽然都是史论文章，基本上也都由提出论点、分析论证、揭示题旨这三部分组织成文，但相比之下，《伶官传序》更像一篇严密规范的政论文。</p>
<p>​
在表现手法上，《过秦论》善用衬托对比，极力渲染秦的强大，反衬它的易亡；虚张六国合纵的声威，反衬秦人的善攻；备言陈涉的卑微弱小，与六国的煊赫强盛构成鲜明对比，突显了秦朝灭亡的基本原因。对比反衬愈是强烈，文章的中心思想就愈加突出。《伶官传序》同样采用了对比的手法，主要是后唐的盛衰之比，先写庄宗极盛的史实，再写其极衰的场面，后面总言兴亡，喟叹不已：“方其盛也，举天下之豪杰，莫能与之争；及其衰也，数十伶人困之，而身死国灭，为天下笑。”一盛一衰，既扬又抑，交错成文。通过盛衰之比，作者意在昭示忧劳兴国、逸乐亡身这样一个发人深思的历史教训。</p>
<p>​
在语言方面，两文都大量地运用了排比、对偶的句式，又多用短句，音节紧促，一气流注，艺术感染力极强。《过秦论》铺陈夸张，文笔酣畅，感情充沛，气势磅礴，带有战国纵横之风；《伶官传序》辞气极盛，波澜迭起，沉厚淋漓，顿挫有致，见出哲人的才气。更值得注意的是，两文在论述前代衰亡之时，使用的语言亦极为相近。《过秦论》写秦的灭亡，说其发难者陈涉是出身低贱、才不惊人的平庸之辈，“而倔起阡陌之中，率疲弊之卒，将数百之众，转而攻秦；木为兵，揭竿为旗，天下云集响应”。文末，作者深有感慨地议论说：“一夫作难而七庙堕，身死人手，为天下笑。”《伶官传序》写后唐的衰亡，说其首先叛乱者亦是一介匹夫，然“一夫夜呼，乱者四应”，议论后唐之主是“数十伶人困之，而身死国灭，为天下笑”。语言、文意的相似，达到了惊人的地步。</p>
<p>​
清人沈德潜曾盛赞欧阳修的《伶官传序》：“抑扬顿挫，得《史记》神髓，《五代史》中第一篇文字。”其实，《伶官传序》不独得力于《史记》，而且也深受《过秦论》的影响，两文在思想内容和艺术手法方面，颇多相同或相近之处，其间的传承关系，昭然可见。综上所述，我们完全有理由说，欧阳修的《伶官传序》，堪称一篇名副其实的“过唐论”。</p>
<p>（选自《宝鸡文理学院学报（哲社版）》1993年第4期）</p>]]></content>
      <categories>
        <category>High School</category>
        <category>Chinese</category>
        <category>Classical Chinese Literature and Poetry</category>
      </categories>
      <tags>
        <tag>School Notes</tag>
        <tag>High School</tag>
        <tag>Chinese</tag>
      </tags>
  </entry>
  <entry>
    <title>苏武传-班固</title>
    <url>/2022/03/14/chinese/High%20School/Classical%20Chinese%20Literature%20and%20Poetry/%E9%80%89%E6%8B%A9%E6%80%A7%E5%BF%85%E4%BF%AE/%E8%8B%8F%E6%AD%A6%E4%BC%A0-%E7%8F%AD%E5%9B%BA/</url>
    <content><![CDATA[<h2 id="课文解读">课文解读</h2>
<p>​
班固编著的《汉书》是我国第一部纪传体断代史，在叙事写人方面有着很高的成就，是继《史记》之后的又一部史传文学巨著，展现了西汉广阔的社会生活和各种人物的精神风貌。《苏武传》是其中的名篇，节选自《李广苏建传》，文章以时间顺序记叙了苏武出使匈奴、持汉节不失的事迹，生动刻画了苏武这位爱国者的形象。</p>
<p>​
苏武出使匈奴，被扣留凡十九年，其间可写事情无数，文章按时间顺序写来，脉络清晰，却并不平铺直叙，而是选取其中一些重要节点事件，详加描绘，表现人物在艰难环境中的人生选择和理想坚守，凸显人物的精神品质；其他无关紧要事情，则一笔带过或略述几句；其间运用插叙、借人物之口补叙等手段，同类情节（如两次自杀、两次拒降）又有不同表达，使得文章摇曳多姿，极富可读性。读者阅读此文，竟如观看一部英雄传奇大片：故事有首有尾，情节结构完整，一波三折；重点场面浓墨重彩，夺人眼目；人物语言富于个性，真切可感。</p>
<p>​
文章的情节可概括为：奉命出使—因变被扣—自杀殉汉—卫律劝降—幽置大窖—苦守北海—李陵劝降—获释归汉。</p>
<p>​
文章一上来还是标准传记笔法，交代姓名字号、官职履历等。接下来直入主题，说明苏武出使的背景和直接原因。汉连年征伐匈奴，“数通使相窥观”，并各自扣留对方使者。天汉元年（前100），匈奴主动释放善意，遣归汉朝使者，汉朝遂派遣苏武以中郎将身份送匈奴使者回归，一方面出于外交礼仪，表现大汉的宽宏，“答其善意”；一方面也是借此“窥观”匈奴。结果发现，因“厚赂单于”，“单于益骄”，并非汉之“所望”。也为下文苏武等人被扣埋下了伏笔。</p>
<p>​
本来苏武等人使命已完成，准备回归，结果陡然生变。文章第2、3段写苏武等“因变被扣”。先是一段插叙，交代缑王与长水虞常谋反的背景，从中也可见出当时汉与匈奴斗争的复杂性。因虞常与苏武的副使张胜过去相熟，以射杀汉天子所恨的卫律为由，私下请求帮忙，张胜许之。后事发，叛变未成，虞常被生擒。张胜“恐前语发，以状语武”，苏武知道自己必受牵连，与其“见犯乃死，重负国”，不如自己先行了断。其后，虞常果然牵连出张胜，单于大怒，“欲杀汉使者”，在臣下劝说后，改为劝降。</p>
<p>​
第4段写苏武“自杀殉汉”。等到卫律“召武受辞”，苏武知道接受讯问终不可免，于是“引佩刀自刺”。也许此前苏武“欲自杀”被劝止后未施行，也有一番考量，因为未被讯问先行自杀，不加辩驳，无异于自陈其罪；此次当着卫律面自杀，反可显其坦荡无私。他的一番话语“屈节辱命，虽生，何面目以归汉”，也是铿锵有力，表现出守节不辱、刚烈不屈的品格。卫律这个降臣，之前因事株连，畏罪逃亡，投降匈奴，自然理解不了苏武的行动，所以“惊”，赶忙“自抱持武，驰召医”。经过一番土法诊治，苏武气绝半日后又苏醒过来。这一刚烈行为，甚至让单受到震动，“壮其节，朝夕遣人候问武”。也许知道这样的人才是真正的忠臣贤士，单于愈发想让苏武投降，收为己用。这才有了下文三番五次的威逼利诱，也才有了苏武高尚人格的集中展现。</p>
<p>​
第5-8段是文章最为浓墨重彩的部分，“卫律劝降”和“李陵劝降”是两个重头戏，一个剑拔弩张，场面激烈，一个把酒言欢，却绵里藏针，氛围、风格、语调截然不同，作者于其中暗藏对劝降者的不同态度；“幽置大窖”和“苦守北海”是中间的过渡，有效地将两个重头戏连在一起，不致前后反差太大，也在简略的叙事中寄寓着作者的赞颂和敬佩。</p>
<p>​
先看“卫律劝降”。卫律降匈奴后，成为匈奴单于的亲信，死心塌地为匈奴服务，他的眼中只有趋利避害和荣华富贵，因而他的劝降是威逼和利诱。单于将劝降时机选在“会论虞常”时，欲威逼之，于是先斩虞常，再“举剑欲击”张胜，最后对着苏武“复举剑拟之”。可惜威逼对张胜有用，对苏武却无效果——“武不动”，甚至义正词严地反驳卫律：“本无谋，又非亲属，何谓相坐？”苏武在生死门前走了一遭，早将生死置之度外；但严词辩驳，也是要留个清白名声，不因自己使得国家受辱。威逼不成，于是利诱。卫律先述自己投降后享受的荣华富贵，欲以此引诱苏武——“赐号称王。拥众数万，马畜弥山，富贵如此！”其骄奢无耻之状，跃然纸上，可见作者对其不齿，这是作者“于序事中寓论断”之一例。继之以正反劝说——“苏君今日降，明日复然”，正面劝；“空以身膏草野，谁复知之”，反面逼。意即与其空守着所谓的名节默默无闻死去，不如选择一些实惠。但“武不应”。前面“不动”，后面“不应”，简洁明了，凸显苏武既不怕死，也不爱利，甚至行动之中充满着蔑视。卫律有些恼羞成怒，下了最后通牒：“君因我降，与君为兄弟”；可你假如不听我的，过了这个村就没这个店了，以后想哭着喊着见我，“尚可得乎？”苏武被彻底激怒，痛骂卫律，正义凛然，铿锵有力。他总共三句话，表达了三层意思：其一，你本是汉臣，“不顾恩义，畔主背亲，为降虏于蛮夷”，不以为耻，反以为荣，我与你无话可说，见你作甚！其二，单于让你审理此案，你“不平心持正”，是何居心？难道你想借此挑拨汉与匈奴关系，“斗两主，观祸败”，从中渔利吗？这里体现出苏武从使臣立场看待问题的思维方式，反唇相讥，可谓有理有节。其三，你明知道我是绝对不会投降的，还要从我身上下手，“欲令两国相攻”；如果你杀了我，匈奴与汉再次陷入战争，那么匈奴之祸可就开始了。言外之意，你们要以我为借口向汉开战，最终受害的将是匈奴。可谓反击有力。</p>
<p>​
再看“幽置大窖”和“苦守北海”。卫律“知武终不可胁”，向单于作了汇报，单于也许愈发敬重苏武，因而“愈益欲降之”。在肉体消灭不成的情况下，先后以“幽置大窖”和“徙置北海”处置苏武，欲以绝境之苦威逼，消磨其生存的意志。然而苏武有着非同一般的绝境生存能力。在大窖中，匈奴“绝不饮食”，苏武却趁“天雨雪”，“啮雪，与旃毛并咽之，数日不死”，匈奴人把他当成神一般的存在。不得已，“乃徙武北海上无人处”，这就是著名的“苏武牧羊”的故事，文章以简笔叙述。北海上环境恶劣，匈奴人断绝了苏武的粮食供应，使其放牧公羊，待公羊生了小羊才能回归。这无疑是刻意的刁难，目的就是消磨其意志，使其自行哀求归降。没食物，苏武百般施展荒野求生本领，“掘野鼠去草实而食之”，“能网纺缴，檠弓弩”，不仅生存了下来，还因为生活生产技术获得了单于弟的青睐，“给其衣食”，“赐武马畜、服匿、穹庐”。可惜好景不长，随着单于弟死去，其人马都走了；雪上加霜的是，丁令人盗走了苏武放牧的牛羊，“武复穷厄”。在这样艰难的境地中，面对着九死一生的困境，苏武“杖汉节牧羊，卧起操持，节旄尽落”。行文不免有些夸张，但却富于象征意味，也许作者如此处理，就是想借此表明，正是汉节所代表的国家民族和君主，成为支撑苏武勇敢活下去，并最终迎来回归希望的强大精神力量。</p>
<p>​
接下来就是另一场重头戏—“李陵劝降”。李陵是苏武故友，二人均做过皇帝的侍从官。苏武出使匈奴的第二年，李陵兵败投降匈奴，内心愧，“不敢求武”。单于派李陵劝说苏武，希望以二人过往的交谊加以感化。李陵遂“置酒设乐”，以故友身份动之以情，晓之以理，加以劝说。他先转达单于“虚心欲相待”之意，次以“自苦亡人之地”实无必要加以劝说：一则，“终不得归汉”，信义无所见乎天下。二则，自苏武出使以来，家人连遭横祸，大哥苏嘉、三弟苏贤或“伏剑自刎”或“惶恐饮药而死”，母亲去世，妻子改嫁，三个儿女不知是死是活（从叙事的角度看，这是作者借人物之口所做的补叙）。人生无常，譬如朝露，瞬息即逝，何必“久自苦如此”？再以自己刚投降时的心情劝慰苏武最后指出，武帝年高，法令无常，待臣下刻薄寡恩，即使能归汉，安危也不可知。意即，这样的君主，你家这样的遭际，何必为汉守节？从友情角度看，李陵推心置腹，言辞恳切，不虚伪，不做作，指出汉之薄情，君上之寡恩，劝降也确是在为苏武的现实处境考虑；但从所持立场看，李陵更多考虑私情和个人利益，而苏武却是超越个人，从家国角度看待此事，显然李陵的思想境界与苏武不在一个层面。苏武信奉的是儒家“臣事君，犹子事父也，子为父死，亡所恨”的思想，愿意“杀身自效”，以报答皇帝对他们一家的知遇之恩，“虽蒙斧钺汤镬，诚甘乐之”。不仅不怨，还能保持感恩，这种思想诚然有愚忠的一面，但其恪守伦理，坚守道义，不惜杀身成仁，在任何时代都是一种值得赞扬的高尚行为；历史地看，苏武故事为后人传颂，客观上也有利于中国人家国观念的形成。其后，李陵再次提及归降一事，苏武不惜以绝交、“效死于前”相迫，请其不再提及劝降话题。其坚决态度、至诚之心，令李陵心生敬佩，叹其为“义士”，同时也惭愧不已——“陵与卫律之罪上通于天”，至于“泣下沾衿”。</p>
<p>​
李陵劝降，始终在友人相聚的和乐氛围中进行，与卫律劝降风格截然不同，盖因作者对此二人的态度和评价不同有关。卫律是因罪逃亡，主动投降匈奴，为的是荣华富贵，作者借苏武的言辞表现对其不齿的态度，行文多用贬抑之语，且以苏武的正气凛然与之形成鲜明对比。李陵当年率五千之卒孤军深入，歼敌过万，因无救援，最后力竭被俘，投降实属不得已；投降之后，也并不为匈奴真心出力，始终对故国心怀眷恋；只是后来因武帝误听传言，杀其全家，这才断了李陵的归汉之路。从李陵的话语中，我们能够体会其内心的酸涩、忧愤，他对汉虽有不满、怨艾，却也时时感到惭愧。作者对他寄予了同情，并未把他视作十恶不赦的叛臣看待（实际后来的汉政府也未将其看作叛臣，尚记挂着他的战功，汉昭帝期间，曾遣使者赴匈奴召回李陵），而苏武的措辞也不像对卫律那样金刚怒目，而是相对委婉柔和，这又是作者“于序事中寓论断”之一例。</p>
<p>​
第9、10两段写苏武“获释归汉”。汉朝天子虽然喜怒无常，却也并非全然刻薄寡恩，还记挂着苏武等人，于是在和亲期间，向匈奴要人。匈奴还是不愿让苏武回归，诈称其已死。经常惠等夜见汉使，定下计谋，单于这才无法隐瞒。于是苏武等得归汉朝。来时“百余人俱”，“随武还者”仅九人；留匈奴十九年，“始以强壮出，及还，须发尽白”。前后对比，物是人非，语含凄凉，作者的叹惋之情溢于言表；然而虽然历经磨难，终于守节不辱，坚执道义，作者对苏武的感佩之情也可以体会。</p>
<p>​
综上，文章通过记叙苏武出使匈奴守节不失的传奇经历，将苏武置于尖锐的矛盾冲突中加以表现，善用对比，灵活选用人物的典型语言，生动刻画了了一个“富贵不能淫，贫贱不能移，威武不能屈”的爱国志士形象，脉络清晰，结构完整，颇具可读性；文章以叙述为主，却“于序事中寓论断”，通过精心选材，恰当裁切，表达出对苏武的敬佩与赞美，以及对卫律的不齿和对李陵的同情，彰显出班固撰《汉书》所坚持的儒家正统的思想观念。</p>
<h2 id="参考资料">参考资料</h2>
<h3 id="参考译文">参考译文</h3>
<div class="classcial-chinese-literature-and-poetry-translation"><div class="paragraph"><p class="original-text">武，字子卿，少以父任，兄弟并为郎。稍迁至<ruby><rb>栘</rb><rt>yí</rt></ruby>中厩监。时汉连伐胡，数通使相窥观。匈奴留汉使郭吉、路充国等，前后十余辈。匈奴使来，汉亦留之以相当。天汉元年，<ruby><rb>且</rb><rt>jū</rt></ruby><ruby><rb>鞮</rb><rt>dī</rt></ruby>侯<ruby><rb>单</rb><rt>chán</rt></ruby>于初立，恐汉袭之，乃曰：“汉天子我丈人<ruby><rb>行</rb><rt>háng</rt></ruby>也。”尽归汉使路充国等。武帝嘉其义，乃遣武以中郎将使持节送匈奴使留在汉者，因厚赂单于，答其善意。武与副中郎将张胜及假吏常惠等募士斥候百余人俱，既至匈奴，置币<ruby><rb>遗</rb><rt>wèi</rt></ruby>单于；单于益骄，非汉所望也。</p><p class="translation">苏武，字子卿。年轻时凭借父亲职位的关系而被任用，兄弟三人都做了皇帝的侍从官。渐渐升到移中厩监。当时汉朝接连讨伐匈奴，屡次互派使者窥探观察对方的情况。匈奴扣留了汉使郭吉、路充国等，先后十几批人。匈奴使者来汉朝，汉朝也同样扣留他们以相抵。天汉元年，且鞮单于刚刚被立为单于，害怕汉朝攻击，就说：“汉天子是我的长辈。”把路充国等人都放回汉朝。汉武帝赞许他这种合乎情理的做法，就派苏武以中郎将的身份持节出使匈奴，护送留在汉朝的匈奴使者，并赠送单于丰厚的礼物，回报他的好意。苏武与副中郎将张胜以及临时委任的使臣属官常惠等招募士卒和侦察兵一百多人一同前往。到了匈奴后，置办了一些财物送给单于；单于渐渐倨傲起来，并不是汉朝所期望的。</p></div><div class="paragraph"><p class="original-text">方欲发使送武等，会<ruby><rb>缑</rb><rt>gōu</rt></ruby>王与长水虞常等谋反匈奴中。缑王者，<ruby><rb>昆</rb><rt>hún</rt></ruby><ruby><rb>邪</rb><rt>yé</rt></ruby>王姊子也，与昆邪王俱降汉，后随<ruby><rb>浞</rb><rt>zhuó</rt></ruby>野侯没胡中，及卫律所将降者，阴相与谋劫单于母<ruby><rb>阏</rb><rt>yān</rt></ruby><ruby><rb>氏</rb><rt>zhī</rt></ruby>归汉。会武等至匈奴，虞常在汉时，素与副张胜相知，私候胜曰：“闻汉天子甚怨卫律，常能为汉伏弩射杀之，吾母与弟在汉，幸蒙其赏赐。”张胜许之，以货物与常。</p><p class="translation">匈奴正要派遣使者送苏武等人返回汉朝，适逢匈奴国内的缑王与原长水校尉虞常等人密谋反叛。王是昆邪王姐姐的儿子，与昆邪王一起投降汉朝，后来又随浞野侯陷没在匈奴中。连同卫律所率领的那些被迫投降匈奴的人，暗地里一起密谋劫持单于的母亲阏氏归附汉朝。正赶上苏武等来到匈奴，虞常在汉朝的时候，平时与副使张胜相熟识，私下拜访张胜，说：“听说汉朝皇帝非常怨恨卫律，我虞常能为汉朝暗中用弩弓射死他，我母亲和弟弟都在汉，希望能得到朝廷的赏赐。”张胜答应了，送了一些财物给虞常。</p></div><div class="paragraph"><p class="original-text">后月余，单于出猎，独阏氏子弟在。虞常等七十余人欲发，其一人夜亡，告之。单于子弟发兵与战，缑王等皆死，虞常生得。单于使卫律治其事，张胜闻之，恐前语发，以状语武。武曰：“事如此，此必及我，见犯乃死，<ruby><rb>重</rb><rt>zhòng</rt></ruby>负国。”欲自杀，胜、惠共止之。虞常果引张胜。单于怒，召诸贵人议，欲杀汉使者。左伊秩<ruby><rb>訾</rb><rt>zī</rt></ruby>曰：“即谋单于，何以复加？宜皆降之。”</p><p class="translation">一个多月后，单于出去打猎，只有阏氏和王室的子弟在家。虞常等七十多人想要动手，其中一个人趁夜逃跑，告发了这件事。单于子弟发兵与他们战斗。缑王等人都死了，虞常被活捉。单于让卫律审理这个案件，张胜听说后，担心以前与虞常的谈话泄露，把情况告诉了苏武。苏武说：“事情到了这个地步，一定会牵连到我，等到被匈奴侮辱以后才死，更加对不起国家。苏武想自杀，张胜、常惠一起制止了他。虞常果然牵扯出了张胜。单于大怒，召集贵族大臣们商议，想要把汉朝的使者都杀了。左伊秩訾说：“假使谋杀单于，又该用什么更重的处罚呢？应该让他们都投降。”</p></div><div class="paragraph"><p class="original-text">单于使卫律召武受辞。武谓惠等：“屈节辱命，虽生，何面目以归汉！”引佩刀自刺。卫律惊，自抱持武，驰召医。凿地为坎，置<ruby><rb>煴</rb><rt>yūn</rt></ruby>火，覆武其上，<ruby><rb>蹈</rb><rt>tāo</rt></ruby>其背以出血。武气绝，半日复息。惠等哭，舆归营。单于壮其节，朝夕遣人候问武，而收系张胜。</p><p class="translation">单于派卫律召苏武去听取供词。苏武对常惠等人说：“污损了节操，辜负了使命，即使活着，又有什么面目回到汉朝！”苏武拔出佩刀来自杀。卫律大惊，自己抱着苏武，骑马去找医生。医生在地上挖了个坑，放进没有火焰的微火，把苏武放在火坑上，叩击他的背使其出血。苏武已经气绝了，半天才又能呼吸。常惠等人哭了，用车载送苏武回营帐。单于认为苏武的气节很豪壮，早晚都派人问候苏武，而将张胜逮捕监禁起来。</p></div><div class="paragraph"><p class="original-text">武益愈，单于使使晓武，会论虞常，欲因此时降武。剑斩虞常已，律曰：“汉使张胜谋杀单于近臣，当死。单于募降者赦罪。”举剑欲击之，胜请降。律谓武曰：“副有罪，当相坐。”武曰：“本无谋，又非亲属，何谓相坐？”复举剑拟之，武不动。律曰：“苏君，律前负汉归匈奴，幸蒙大恩，赐号称王，拥众数万，马畜弥山，富贵如此！苏君今日降，明日复然。空以身膏gào草野，谁复知之！”武不应。律曰：“君因我降，与君为兄弟；今不听吾计，后虽复欲见我，尚可得乎？”武骂律曰：“汝为人臣子，不顾恩义，畔主背亲，为降虏于蛮夷，何以汝为见！且单于信汝，使决人死生；不平心持正，反欲斗两主，观祸败！若知我不降明，欲令两国相攻。匈奴之祸，从我始矣。”</p><p class="translation">苏武渐渐痊愈，单于派使者通知苏武，会同判定虞常的罪，想趁这个时候让苏武投降。用剑斩杀虞常后，卫律说：“汉朝使者张胜谋杀单于的亲近之臣，判处死罪。单于招募投降的人免罪。”举起剑要杀张胜，张胜请求投降。卫律对苏武说：“副使有罪，判处有关的人相连坐治罪。”苏武说：“我本来没有参与谋划，又不是他们的亲属，说什么连坐治罪？”卫律又举剑比画着要杀苏武，苏武不动。卫律说：“苏先生，我先前背叛汉朝归附匈奴，幸而受到单于的大恩，赐我爵号称王。有几万手下，牛马满山，富贵到这种地步！苏先生今天投降了，明天也会这样。白白拿身体给荒野做肥料，谁又能知道呢！”苏武不理他。卫律又说：“你通过我投降，我就和你结为兄弟；假如不听我的话，以后即使想再见我，还能得到这个机会吗？苏武骂卫律说：“你本是汉朝臣子，不顾恩德道义，背叛主上，背弃双亲，在异族那里做俘虏，要见你干什么？况且单于信任你，让你来判定人的生死，你不平心处理，持守公正，反而想借此使汉天子和单于相斗，从旁观看祸败。你明明知道我不会投降，想要两国互相攻打。匈奴的灾难，就要从杀死我苏武开始了。”</p></div><div class="paragraph"><p class="original-text">律知武终不可胁，白单于。单于愈益欲降之。乃幽武置大窖中，绝不饮食。天<ruby><rb>雨</rb><rt>yù</rt></ruby>雪。武卧啮雪，与<ruby><rb>旃</rb><rt>zhān</rt></ruby>毛并咽之，数日不死。匈奴以为神。乃徙武北海上无人处，使牧<ruby><rb>羝</rb><rt>dī</rt></ruby>，羝乳乃得归。别其官属常惠等各置他所。武既至海上，廪食不至，掘野鼠<ruby><rb>去</rb><rt>jǔ</rt></ruby>草实而食之。杖汉节牧羊，卧起操持，节旄尽落。积五六年，单于弟<ruby><rb>於</rb><rt>wū</rt></ruby><ruby><rb>靬](jiān)王[弋</rb><rt>yì</rt></ruby>射海上。武能网纺<ruby><rb>缴</rb><rt>zhuó</rt></ruby>，<ruby><rb>檠</rb><rt>qíng</rt></ruby>弓弩，於靬王爱之，给其衣食。三岁余，王病，赐武马畜、服匿、穹庐。王死后，人众徙去。其冬，丁<ruby><rb>令</rb><rt>líng</rt></ruby>盗武牛羊，武复穷厄。</p><p class="translation">卫律知道苏武终究不可威逼而致屈服，报告了单于。单于更想让他投降了。于是把苏武禁在一个大地窖中，断绝供应，不给他喝的、吃的。天降大雪，苏武躺着嚼雪，同毡毛一起吞下去，几天都没有死。匈奴人视之为神。于是把他转移到北海边上荒无人烟的区域，让他放公羊，公羊生了小羊才放他回来。分开他的随从官吏常惠等人，分别禁到其他地方。苏武到北海后，匈奴断绝了他的粮食供应，他就挖野鼠穴中藏的草实充饥。他拄着汉朝的旄节牧羊，寝卧和起身都拿着，旄节上的牦尾全部脱落了。过了五六年，单于的弟弟於靬王到北海打猎。苏武能结网纺制系在箭尾的丝绳，用檠矫正弓弩，於靬王很喜欢他，供给他衣食。这样过了三年多，於靬王病重，赐给苏武牛马、盛酒酪的器皿、帐篷。於王死后，他的手下迁走了。这年冬天，丁令人偷走了苏武的牛羊，苏武又陷入了困顿。</p></div><div class="paragraph"><p class="original-text">初，武与李陵俱为侍中。武使匈奴，明年，陵降，不敢求武。久之，单于使陵至海上，为武置酒设乐。因谓武曰：“单于闻陵与子卿素厚，故使陵来说足下，虚心欲相待。终不得归汉，空自苦亡人之地，信义安所见乎？前长君为奉车，从至雍<ruby><rb>棫</rb><rt>yù</rt></ruby>阳宫，扶<ruby><rb>辇</rb><rt>niǎn</rt></ruby>下除，触柱折辕，劾hé大不敬，伏剑自刎，赐钱二百万以葬。孺卿从祠河东后土，宦骑与黄门驸马争船，推堕驸马河中溺死，宦骑亡，诏使孺卿逐捕，不得，惶恐饮药而死。来时太夫人已不幸，陵送葬至阳陵。子卿妇年少，闻已更嫁矣。独有女弟二人，两女一男，今复十余年，存亡不可知。人生如朝露，何久自苦如此！陵始降时，忽忽如狂，自痛负汉，加以老母系保宫。子卿不欲降，何以过陵？且陛下春秋高，法令亡常，大臣亡罪夷灭者数十家，安危不可知，子卿尚复谁为乎？愿听陵计，勿复有云。”武曰：“武父子亡功德，皆为陛下所成就，位列将，爵通侯，兄弟亲近，常愿肝脑涂地。今得杀身自效，虽蒙斧钺汤镬，诚甘乐之。臣事君，犹子事父也。子为父死，亡所恨，愿无复再言！”</p><p class="translation">当初，苏武与李陵都做皇帝的侍从。苏武出使匈奴的第二年，李陵投降了，不敢访求苏武。过了很久，单于派李陵到北海，李陵为苏武置办酒席，安排歌舞。李陵趁机对苏武说：“单于听说我和您一向关系很好，所以派我来劝说您，单于对您一心向往，想以礼相待。您终究不能回国，白白地在这荒无人烟的地方受苦，有谁知道您对汉朝的信义呢？前些时候您的大哥做奉车都尉，跟随皇帝到雍城的棫阳宫去，扶着皇帝的车子下殿阶，撞在柱子上把车辕折断了，被判决为‘大不敬’，用剑自杀了，皇上赐给二百万钱安葬他。您的弟弟苏贤跟随皇帝去祭祀河东后土，一个骑马的宦官和黄门驸马抢着上船，把驸马推入河中淹死，宦官骑马逃跑了，皇帝下诏派苏贤去追捕，没有抓到，他因害怕而喝毒药自杀了。我临来时，您的母亲已去世，我送葬到阳陵。您的妻子还很年轻，听说已改嫁了。只剩下两个妹妹和你的两个女儿、一个儿子，现在又过去了十多年，是生是死都不知道。人生如朝露般短暂，为什么要这样久久地折磨自己！我刚投降时，精神恍惚，好像发狂一样，痛心自己对不起汉朝，加上老母被关押在宫。您不肯投降的心情，怎能超过当时的我？再说皇上现在年纪老，法令没有定规，大臣无罪而全家被杀的就有几十家，（即便回国也是）安危无法预知，您还为谁守节呢？希望您听我的话，不要再说什么了。”苏武说：“我们父子没有什么功业德行，全靠皇帝的栽培，官职升到列将，爵位封为通侯，兄弟三人都是皇上的亲近之臣，常常希望以身许国。现在能有机会献出自己的生命，即使被杀，也确实心甘情愿。臣子侍奉君主，就像孩子侍奉父亲一样，孩子为父亲而死，没有什么怨恨的，希望您你不要再说了！</p></div><div class="paragraph"><p class="original-text">陵与武饮数日，复曰：“子卿壹听陵言！”武曰：“自<ruby><rb>分</rb><rt>fēn</rt></ruby>已死久矣！王必欲降武，请毕今日之欢，效死于前！”陵见其至诚，喟然叹曰：“嗟呼，义士！陵与卫律之罪上通于天！”因泣下霑衿，与武决去。……</p><p class="translation">李陵与苏武喝了几天酒，又说：“请您一定听我的话！”苏武说：“我料想自己早已是该死的人了！您如果一定要逼我投降，那就请结束今天的欢聚，我就在面前死去！”李陵见他极其真挚诚恳，感叹道：“唉，义士！我李陵和卫律的罪行严重无以复加！”于是泪水浸湿了衣襟，与苏武告别离开。……</p></div><div class="paragraph"><p class="original-text">昭帝即位，数年，匈奴与汉和亲。汉求武等，匈奴诡言武死。后汉使复至匈奴，常惠请其守者与俱，得夜见汉使，具自陈道。教使者谓单于，言天子射上林中，得雁足有系帛书，言武等在荒泽中。使者大喜，如惠语以让单于。单于视左右而惊，谢汉使曰：“武等实在。”……</p><p class="translation">汉昭帝即位，过了几年，匈奴与汉朝和亲。汉朝要求放回苏武等人，匈奴则谎称苏武已经死了。后来汉朝使者又到匈奴，常惠请求看守他的人同他一起去拜见，得以夜里见到汉朝使者，自己详细地陈说这几年的情况。他让使者对单于说汉天子在上林苑射猎时，射下一只雁，脚上系着一封用缣帛写的信，说苏武等人在某大泽中。使者大喜，按常惠的话去责备单于单于环顾左右，大惊，对汉朝使者道歉说：“苏武等人确实还活着。”……</p></div><div class="paragraph"><p class="original-text">单于召会武官属，前以降及物故，凡随武还者九人。武以始元六年春至京师。……武留匈奴凡十九岁，始以强壮出，及还，须发尽白。</p><p class="translation">单于召集会见苏武的随行人员，除去以前已投降的和已死去的，跟随苏武回国的共有九人。苏武在始元六年春回到都城长安。……苏武被扣留在匈奴共十九年，当初以壮年出使，等回国时，胡须和头发都已变白了。</p></div></div>
<h3 id="作者介绍">作者介绍</h3>
<p>​
班固（32—92），东汉辞赋家、史学家。字孟坚，扶风安陵（今陕西咸阳）人。年少时，就能属文，16岁入洛阳太学。性情宽和谦让，深为当时儒者所钦重。其父班彪是当时著名学者，曾作《史记后传》65篇，补写《史记》以后西汉的历史。班彪死后，他想要补完全书，后有人告发他私改国史，捕入京兆狱。其弟班超上书辩解，获释，汉明帝很赞赏班固的才能，召为兰台令史，转迁为郎，典校秘书。自明帝永平中奉诏修史，经过多年努力，于章帝建初七年（82），基本完成《汉书》的写作。章帝时，班固任玄武司马。建初四年（79）帝诏诸王、诸儒集合于白虎观讲论五经异同，令班固撰集其事，纂成《白虎通义》。和帝永元元年（89），随大将军窦宪征匈奴，为中护军。宪骄横获罪，班固被牵连入狱，死于狱中。</p>
<p>​
班固是东汉前期最著名的辞赋家，著有《两都赋》《答宾戏》《幽通赋》等。东汉建都洛阳，“西土耆老，咸怀怨思”（《两都赋序》），仍希望复都长安，而班固持异议，因此作《两都赋》。赋中以主客问答方式，假托西都宾向东都主人夸说西都长安的关山之险、宫苑之大、物产之盛。东都之人则责备他但知“矜夸馆室，保界河山”，而不知大汉开国奠基的根本，更不知光武迁都洛邑、中兴汉室的功绩，于是宣扬光武帝修文德、来远人的教化之盛，最后归于节俭，“以折西宾淫侈之论”。《两都赋》体制宏大，写法上铺张扬厉，完全模仿司马相如、扬雄之作，是西汉大赋的继续。但在宫室游猎之外，又开拓了写京都的题材，后来张衡写《二京赋》、左思写《三都赋》，都受他的影响。《两都赋》虽也铺采摛文，但未过分堆砌辞藻，风格比较疏宕。《幽通赋》为述志之作，表示他守身弘道的志向。写法仿《楚辞》，先述自己家世，后写遇神人预卜吉凶，再写他誓从圣贤的决心。所谓幽通，即因卜筮谋鬼神以通古今之幽微的意思。另有《答宾戏》、仿东方朔《答客难》、扬雄《解嘲》，表现自己“笃志于儒学，以著述为业”的志趣。此外，他为窦宪出征匈奴纪功而作的《封燕然山铭》，典重华美，历来传诵，并成为常用的典故。</p>
<p>​
班固在《汉书》和《两都赋序》中表达了自己对辞赋的看法。他认为汉赋源于古诗，是“雅颂之亚”，“炳焉与三代同风”。他不仅肯定汉赋“抒下情而通讽谕”的一面，而且肯定它“宣上德而尽忠孝”的一面，实际上也肯定了汉赋的歌功颂德的内容。在《离骚序》中，班固对屈原作了不正确的评价，他认为屈原“露才扬己”，虽有“妙才”，“非明智之器”。都表现了他囿于儒家正统思想的局限性。班固另有《咏史诗》，咏缇萦故事，为完整五言体，虽质木无文，却是最早文人五言诗之一。</p>
<p>（选自《中国大百科全书·中国文学》，中国大百科全书出版社2002年版）</p>
<h3 id="关于汉书">关于《汉书》</h3>
<p>​
班固编撰的《汉书》是我国第一部纪传体断代史，在叙事写人方面取得很大成就，它是继《史记》以后出现的又一部史传文学典范之作，因此，历史上经常把司马迁和班固并列、《史记》和《汉书》对举。</p>
<p>​
《史记》最精彩的篇章是楚汉相争和西汉初期的人物传记，《汉书》的精华则在于对西汉盛世各类人物的生动记叙。《汉书·公孙弘卜式兒宽传》对于武帝和宣帝朝涌现的各类人才作了概述，其中提到的绝大多数人物都在《汉书》中有一席之地，分别为他们立传。通过叙述这些历史人物的事迹，全面地展现了西汉盛世的繁荣景象和那个时代的精神风貌。《史记》所写的秦汉之际的杰出人物是在天下未定的形势下云蒸龙变，建功立业，此时涌现出一批草莽英雄，其中最引人注目的是战将和谋士。《汉书》所写的西汉盛世人物则不同，他们是在四海已定、天下一统的环境中成长起来的，其中固然不乏武将和谋士，但更多的是法律之士和经师儒生。和秦汉之际的战将谋士相比，西汉盛世的法律经术文学之士的阅历虽然缺少传奇色彩，但许多人的遭遇却是富有戏剧性的。他们有的起于刍牧，有的擢于奴仆，但通过贤良文学对策等途径平步青云，扶摇直上，其中有许多轶闻逸事。公孙弘年六十余才以贤良征为博士，奉命出使匈奴，因奏事不合天子之意，不得不移书言病，免职归乡。后再次征选贤良文学，菑川国又推荐他应召。鉴于以往的教训，公孙弘根本没有信心，百般推托。出人意外的是，对策之后公孙弘名列榜首，“召入见，容貌甚丽，拜为博士，待诏金马门”。（《汉书·公孙弘传》）后来又屡屡升迁，数年后便拜相封侯。公孙弘后期的人生奇迹，和他先前的仕途受挫形成巨大的反差，对比非常鲜明。朱买臣拜会稽太守一事也富有情趣：</p>
<blockquote>
<p>​
初，买臣免，待诏，常从会稽守邸者寄居饭食。拜为大守，买臣衣故衣，怀其印绶，步归郡邸。直上计时，会稽吏方相与群饮，不视买臣。买臣入室中，守邸与共食。食且饱，少见其绶。守邸怪之，前引其绶，视其印，会稽太守章也。守邸惊，出语上计掾吏。皆醉，大呼曰：“妄诞耳！”守邸曰：“试来视之。”其故人素轻买臣者入内视之，还走，疾呼曰：“实然！”坐中惊骇，白守丞，相推排陈列中庭拜谒。买臣徐出户。（《汉书·朱买臣传》）</p>
</blockquote>
<p>​
朱买臣是会稽（今浙江绍兴）人，他在免官之后曾到会稽驻京机构所在地寄住，穷愁潦倒，来京办事的会稽老乡也看不起他。朱买臣拜为会稽太守之后，他隐瞒真相，故作矜持，而会稽同乡则前倨后恭，丑态百出，演出了一场滑稽剧。《汉书》展示了官场上形形色色的世态人情，生动地再现了西汉盛世各类士人宦海浮沉的情境，他们的成功和失败构成一幅幅惟妙惟肖的画面。</p>
<p>​
除《世家》外，《史记》的人物传记基本都是以写单个人为主，很少全面叙述家族的兴衰史。在汉初的功臣传记中，只有《绛侯周勃世家》写了周勃、周亚夫父子的事迹，其他人的传记基本是止于其身。西汉盛世培育了一大批官僚世家，他们不是一代为官，而是几代人相承，常盛不衰。《汉书》记叙了许多世袭官僚家族的历史，如《霍光金日禅传》《张汤传》《杜周传》《韦贤传》《萧望之传》《冯奉世传》《翟方进传》等，都不是记叙单独一个人，而是记叙几代人的事迹。通过描述这些家族的兴衰史，对西汉社会的变迁作了多方面的展示。《史记》对酷吏的揭露极为深刻，张汤、杜周是酷吏的典型代表，在他们身上充分体现了西汉社会刑法的严酷，吏士的残暴。班固也批判酷吏，《汉书》亦设《酷吏列传》。可是，《汉书》的《张汤传》《杜周传》在揭露张汤、杜周文法刻深、寡恩少义的同时，对他们的子孙张贺、张安世、张延寿、张千秋，杜延年、杜缓、杜钦等人的美德懿行多有称扬，从而在一定程度上缓解了人们对张汤、杜周这两位酷吏的反感，使他们的形象更接近于生活实际。</p>
<p>​
《史记》具有浓郁的悲剧色彩，有大量悲剧人物的传记。《汉书》中悲剧人物的数量不如《史记》那样众多，但《李广苏建传》中李陵和苏武的传记，却和《史记》的许多名篇一样，写得酣畅淋漓，悲剧气氛很重。李陵是位悲剧人物，传记有条不紊地叙述了外界条件的不利把他一步步推向绝境的过程：先是路博德拒绝派兵接应陷入重围的李陵孤军，使李陵兵败，不得已投降；接着是西汉朝廷轻信传言，误认为李陵训练匈奴兵以拒汉军，一气之下将李陵的家口全部处死，从而使李陵断绝了返汉的念头。班固对李陵饱含同情，不吝笔墨详写李陵孤军深入、浴血奋战的场面，并对李陵派人刺杀充当匈奴兵教练的李绪一事予以肯定。《汉书》交代了造成李陵悲剧结局的客观条件，同时又深入地刻画出这位悲剧人物的矛盾心理和行动上的摇摆犹豫。兵败被困时，他先是决心以死报国，口称：“兵败，死矣。”“吾不死，非壮士也。”可是，在生死抉择的关键时刻，他却投降了匈奴。他在匈奴地域会见汉朝使者时有心归汉，却又害怕再遭困辱，下不了决心。他受匈奴单于的指派去劝降苏武，遭到苏武拒绝后又自责自省，认为自己罪孽深重。他先后两次为苏武置酒，一次是劝降，一次是饯行，李陵或是“泣下沾衿”，或是“泣下数行”，每次都悲痛欲绝。李陵有着太多的恩怨和遗憾，他的悲剧结局既是客观形势所迫，又是性格因素所造成。苏武的形象近乎完美无缺，然而，他却要遭受种种苦难和折磨，是另一种类型的悲剧人物。和李陵相比，苏武性格刚强，意志坚定，几次面对生与死的考验，他都临危不惧，大义凛然。他不肯屈节辱命，引佩刀自决；他怒视义律的剑锋，面不改色；他能忍受寒冷和饥饿的严峻考验，“杖汉节牧羊，卧起操持，节旄尽落”。苏武对西汉朝廷只有感恩之心，没有相怨之意。李陵告诉苏武，他的两个弟弟苏嘉、苏贤因侍奉天子有失而相继自杀，苏武妻改嫁、儿女生死不明。听到这些不幸的消息后，苏武回答说：“武父子亡功德，皆为陛下所成就，位列将，爵通侯，兄弟亲近，常愿肝脑涂地。今得杀身自效，虽蒙斧钺汤镬，诚甘乐之。臣事君，犹子事父也，子为父死，亡所恨。”苏武的这番话表明他对封建伦理道德的恪守，但从中也折射出他在家破人亡之际所保持的平静心态。班固正是通过多方面描写苏武在艰难困苦绝境中所表现出的镇定自持，塑造出一个光彩照人的英雄形象。</p>
<p>​
和《史记》疏荡往复的笔法不同，《汉书》重视规矩绳墨，行文谨严有法。</p>
<p>​
首先，《汉书》笔法精密，在平铺直叙过程中寓含褒贬、预示吉凶，分寸掌握得非常准确。霍光和金日禅是西汉中期的两位重臣，他们对西汉王朝的稳定和发展起过举足轻重的作用。《汉书·霍光金日碑传》以精细的笔法刻画出二人的庄重谨慎。“光为人沈静详审，·每出入下殿门，止进有常处。郎仆射窃识视之，不失尺寸，其资性端正如此。”连脚步的尺寸都掌握得很准确，霍光为人处事的小心谨慎由此可见一斑。班固对于金日禅亦有类似叙述：“日禅自在左右，目不忤视者数十年。赐出宫女，不敢近。上欲纳其女后宫，不肯。其笃慎如此，上尤奇异之。”通过目不忤视数十年、不敢近所赐宫女、不肯送女进宫三件事情，把金日禅的笃慎表现得很充分。霍光、金日禅都以谨慎著称，然而，两人的谨慎程度又存在差异。霍光的谨慎止于自身而已，对于其家属则缺少必要的约束。金日禅则不同，他不但自己尽量杜绝细小的过失，而且对于后代严格管教，把任何可能引起麻烦的事端消灭在萌芽状态，书中有如下记载：</p>
<blockquote>
<p>​
日殚子二人皆爱，为帝弄儿，常在旁侧。弄儿或自后拥上项，日殚在前，见而目之。弄儿走且啼曰：“翁怒。”上谓日禅：“何怒吾儿为？”其后弄儿壮大，不谨，自殿下与宫人戏。日殚适见之，恶其淫乱，遂杀弄儿。弄儿即日禅长子也。上闻之大怒，日禅顿首谢，具言所以杀弄儿状。上甚哀，为之泣，已而心敬日禅。</p>
</blockquote>
<p>​
汉武帝视金日禅之子如己子，然而，金日禅并不因为弄儿受到天子的宠爱而放任自流，相反，倒是管教得更加严厉，甚至不惜把和宫女相戏的亲生骨肉杀死，以绝后患。霍光死后才三年，霍氏便遭灭族之罪。金日碑本是匈奴休屠王太子，作为俘虏留在汉地，最终成为股肱之臣。其子孙历经武、宣盛世，一直到哀、平之际，七世为内侍，在历史上传为美谈。对于霍、金两个家族的不同结局，班固运用精细的笔法准确地揭示了事情的前因后果。当然，霍氏的覆亡也是强臣震主所致，对此，书中另有明确的交代。</p>
<p>​
其次，《汉书》不但对于事情的来龙去脉能够清晰地加以叙述，而且对于那些带有起始性质的事件，都要特别加以强调，以引起读者的注意。比如，西汉旧例通常是以列侯为相，先封侯，后拜相。公孙弘却属例外，他是无爵位而拜相，于是，武帝封他为平津侯。《汉书·公孙弘传》在叙述此事后写道：“其后以为故事，至丞相封，自弘始也。”这是明确告诉人们，先拜相后封侯的做法是从公孙弘开始的，在此以前绝无仅有。类似的提示语在《汉书》中还有多处，显得非常醒目。它有助于读者准确把握汉代各种制度的演变，强化了叙事的力度。</p>
<p>​
再次，《汉书》的谨严有法，还在于它对某些材料的位置安排有自己的特殊规定，并且在全书一以贯之。《汉书》和《史记》一样，也写了许多人物的轶闻逸事，有的甚至是生活琐事。对于这类事情，司马迁或把它放在传记的前面，或者穿插在中间，也有的放在末尾，没有固定的位置。《汉书》则不同，凡属传闻类的生活小故事几乎全部置于篇末，很少有例外者。于定国曾任丞相，封西平侯，其子于永官至御史大夫。《汉书·于定国传》的末尾是这样一段文字：</p>
<blockquote>
<p>​
始，定国父于公，其闾门坏，父老方共治之。于公谓曰：“少高大闾门，令容驷马高盖车。我治狱多阴德，未尝有所冤，子孙必有兴者。”至定国为丞相，永为御史大夫，封侯传世云。</p>
</blockquote>
<p>​
于定国传记的前面有关于其父治狱的记载，上面所引文字完全可以放在于公治狱一段中，但班固却偏偏置于篇末，显然是精心安排，有意为之。这种篇末讲述传主早年生活故事的写法在《汉书》其他传记中经常可以看到，这与其说是追述往事，不如说是为所写的人物作一生的总结。这种追叙、补叙的手法，使作品避免了平铺直叙，增加了波澜起伏。</p>
<p>​
总之，《汉书》有精细的笔法，有自己固定的叙事规则，以谨严取胜，从而形成和《史记》迥然有别的风格。</p>
<p>（选自袁行霈主编《中国文学史》第1卷，高等教育出版社2003年版）</p>
<h3 id="参考文献">参考文献</h3>
<h4 id="苏武传的写人艺术-suwu_biography_arts_of_description">《苏武传》的写人艺术
<span class="citation" data-cites="Suwu_biography_arts_of_description">[@Suwu_biography_arts_of_description]</span></h4>
<p>​
司马迁的《史记》开创了以写人物为中心的纪传体的先例；班固的《汉书》继承了这种传统，其成就虽然比不上《史记》，但仍不失为千古名著。《苏武传》就是其中脍炙人口的一篇。它是爱国主义的传统教材。</p>
<h5 id="一">（一）</h5>
<p>​
《苏武传》作为一篇人物传记，自然应该忠实于历史，按照历史原来的样子，不能随意地涂抹和虚构，这是毫无疑义的；但是，这绝不等于说它的作者因此就只能处于完全被动的地位，只是毫无遗漏地、不分主次地把有关的史料如数地、纯客观地罗列出来。恰恰相反，对于写什么和怎么写，作者还是可以充分发挥自己的主观能动作用的。班固在这方面充分地显示出自己驾驭史料的能力。他按照自己的美学观点和是非标准，对苏武的有关史料进行了认真的审核和取舍。</p>
<p>​
这首先表现在他善于截取最能体现苏武传本质特征的在匈奴的十九年经历，作为文章的中心。在匈奴的十九年，对于苏武的整个一生来说，虽然只是一段，但是这段不平凡的经历却完全可以反映出苏武最基本的性格特征，概括出他整个一生。这就好比截取一棵大树的横断面，只从这个横断面上就可以知道这棵大树的年龄和生长情况一样。</p>
<p>​
其次，对于苏武在匈奴十九年的生活经历，作者也不是事无巨细，面面俱到，而是选取几个最有代表性的片段，收到以点概全的效果。这些片段是：为了不“屈节辱命”，他连续两次自杀，一次未成，一次未果；继而卫律逼降于前，李陵劝降于后，软硬兼施，但他宁死不屈，忠贞不二；匈奴贵族想方设法从肉体上折磨他，断绝他的粮食供应，不得已，他“啮雪，与旃毛并咽之”，“掘野鼠去草实而食之”，但始终毫不动摇；后来闻汉武帝“崩”，他“号哭、欧血”，一连好几个月。可以想象得出，苏武在匈奴长达十九年的漫长岁月中，接触过的人当然绝不止于卫律、李陵那么几个人，经历过的事情更不止于文中所写的那么几件；但是作者完全没有必要全部地罗列出来。</p>
<p>​
那么，这样会不会有损于苏武的形象而削弱其感染力呢？当然不会。而且正好相反。这里选取的虽然只是几个生活片段，但是却非常集中地展示出苏武那宁死不屈、忠贞不贰的性格特征，而且这种性格特征又明显地是以他对自己祖国和民族的深沉热爱和忠诚为基础的。人们透过这几个生活片段，完全可以清楚地看出苏武的全貌。所以，比起不分主次轻重的事实的罗列，苏武的形象不是单薄了、模糊了，而是更丰满、更鲜明了。这大概就是《苏武传》感人至深的重要原因之一。</p>
<p>​
无可讳言，和封建社会许多英雄人物一样，苏武的这种爱国思想和民族气节也是与“忠君”思想紧紧联系在一起的。我们自然不能以今天的想法苛求古人，求全责备，但也应该看到他的局限性。这种局限性，既有苏武本人的原因，也有作者班固的原因。汉武帝“罢黜百家，独尊儒术”以后，儒家思想逐渐成为封建正统思想，苏武和班固都深受这种思想的影响。苏武身上本来就有浓厚的“忠君”思想，班固之所以对他如此感兴趣，恐怕也正是基于这个原因。在班固写苏武这个人物时，又由于本身的原因，把“忠君”思想渗透到对苏武的记述和描写中，这就使苏武的“忠君”思想变得更加鲜明、突出了。但是这些，丝毫也不能削弱苏武感人的力量。一千多年来，苏武的形象一直激励着无数爱国志士就是明证。</p>
<h5 id="二">（二）</h5>
<p>​
为了更好地突出苏武这个形象，选材自然重要，可是选材之后的剪裁、安排，同样必不可少。而在这方面，《苏武传》的作者又显示出自己组织结构的能力和独具的匠心。</p>
<p>​
《苏武传》除了开头简要地介绍苏武出使匈奴的原因，以及结尾扼要地交代匈汉和亲、苏武归汉等情况之外，其余都紧紧围绕着一个“逼”字，使矛盾冲突越来越尖锐，波澜起伏；而苏武始终处于矛盾冲突的中心，通过他对待矛盾冲突的态度，展示出他的性格特征。尽管这些都是人物事件的本身所决定的，但是如果没有很高的驾驭结构的能力，则断然不可能像现在这样变化多端、跌宕多姿。这里，我们且不说由于张胜参与缑王和长水虞常等的谋反，苏武怕牵连自己而“重负国”，一次自杀未成，一次自杀未果；也不说他如何经受肉体上的折磨，照样持汉节牧羊对汉王朝一如既往，忠贞不贰；这里只讲讲他和卫律、李陵所进行的那两场面对面的斗争。</p>
<p>​
副使张胜参与缑王和长水虞常等的谋反，按理张胜应处在矛盾冲突的中心；但由于作者巧妙安排，对张胜的受处只是三言两语交代一下，然后笔锋一转，一下子就把苏武推到矛盾冲突的中心。作者的匠心，由此可见一斑。“卫律逼降”一段，是苏武与以卫律为代表的匈奴贵族之间所进行的一场针锋相对的斗争。阴险、狠毒的卫律精心地策划了这一场逼降。在这之前，他和苏武已较量过了，他当然知道要使苏武投降，那是谈何容易！他深知张胜不堪一击，杀鸡焉用牛刀？根本不需要如此大动干戈。他之所以这样做，完全是为了达到另外一种目的：借以胁迫苏武投降。果然，卫律凭借刀剑不费吹灰之力就降服了张胜之后，他又用同样的方法妄图慑服苏武—“复举剑拟之”，这时摆在苏武面前很可能只有两条路：或者像张胜那样屈膝投降，成为可耻的叛徒；或者忠贞不屈，以死报国。苏武毫不犹豫地选择了后一条路。狡猾的卫律见“硬”的不行，又来“软”的，诱以高官厚禄，并进一步抛出“与君为兄弟”企图以情缘挑之。但是得到的却是苏武先对他嗤之以鼻的回答：“汝为人臣子，不顾恩义，畔主背亲，为降虏于蛮夷，何以汝为见？”既是斥责，又是嘲讽。接着又列举历史上的大量史实，严正警告卫律之流：杀害汉朝使者的绝没有好下场！义正词严，气贯长虹。这哪里像是卫律在审判苏武，分明是苏武代表汉王朝宣判卫律的罪行。卫律的反应，作者一句也没有写，但其张口结舌、无地自容的狼狈相，以及最后不得不灰溜溜地逃走的丑态，读者是完全能够想象得出来的。类似这些地方，可以看出作者剪裁之精当。总之，在这一场斗争中，苏武不畏刀剑、不受利诱，进一步突现了他那宁死不屈、疾恶如仇的品格。读之，如见其人，如闻其声。</p>
<p>​
如果说卫律逼降，对苏武来说，算得上一场小小的考验的话；那么，李陵劝降则是一场更严峻的考验。这里虽然没有刀剑的声音，但是糖衣裹着的炮弹却更容易致人于死命。因为李陵和苏武一向交情甚厚，劝说的言辞更娓娓动听，更何况他所采用的还是“挖心战术”呢？他先像朋友之间叙家常似地向苏武讲述了苏武离汉以后，苏氏一家的悲惨遭遇：长兄苏嘉被“劾大不敬，伏剑自刎”；弟弟苏贤奉命追捕“宦骑”而“不得”，“惶恐饮药而死”；母死；妻“更嫁”。在封建社会里，像苏武一家这样的悲惨遭遇，本没有什么值得大惊小怪的。但是此时此刻，从李陵口里说出来，其险恶用心是显而易见的：挑拨苏武对汉王朝的不满，最后达到劝降的目的。如果说上面那些话还有些羞羞答答、“犹抱琵琶半遮面”，那么下面的话就更赤裸裸了：“且陛下春秋高，法令亡常，大臣亡罪夷灭者数十家，安危不可知，子卿尚复谁为乎？”在李陵想来，讲得够委婉动听的了，不容苏武对朝廷不生二心；但是他万万没有想到，苏武的回答却是：“臣事君，犹子事父也，子为父死，亡所恨。”“自分已死久矣！王必欲降武，请毕今日之欢，效死于前！”字字玑珠，掷地有声，道出了苏武不计较个人恩怨得失、一心报效国家民族的一片赤胆忠心！</p>
<p>​
总之，作者把苏武放在矛盾冲突的尖端，通过他的语言行动展示其性格特征。尽管总的都是为了“拒降”，但说话的对象不同，说话的具体内容和口气也就有所不同：对于卫律，他重在斥责，语气急切而严峻；对于李陵，语气委婉而肯定，同时暗含着讽刺。一切都像在生活中一样，人物形象活灵活现。</p>
<h5 id="三">（三）</h5>
<p>​
《苏武传》除了把苏武放在矛盾冲突的中心，通过他的语言、行动对他进行正面描写外，还借助于人物之间的关系，通过强烈的对比和反衬，达到侧面烘托的目的。作者写卫律、李陵和张胜，毫无疑问，都是为了突出苏武“有代表性的性格”（恩格斯语）。张胜的贪生怕死与苏武的宁死不屈所构成的对比，那是显而易见的，无须细说。卫律和李陵自己投降匈奴不算，反过来又软硬兼施，逼迫和引诱苏武投降，他们对苏武所起到的对比、反衬的作用，自然更进了一层。且听卫律的“劝降”词：“苏君，律前负汉归匈奴，幸蒙大恩，赐号称王。拥众数万，马畜弥山，富贵如此！苏君今日降，明日复然。空以身膏草野，谁复知之！”不打自招，卫律看重的是利禄，毫无节操。这和苏武的“富贵不能淫”正好形成了鲜明的对比。李陵劝降的目的非但没有达到，反而使自己感到自惭形秽：“嗟乎，义士！陵与卫律之罪上通于天！”李陵的自惭形秽，毫无疑问，更反衬了苏武的高尚气节。如果把卫律、李陵之流比作伏地而行的侏仔，那么苏武堪称是顶天立地的男子汉。由于作者的巧妙安排，在同一个场面里，既有正而描写，又有侧面烘托，一箭双雕，相得益彰，笔墨更是相当经济。</p>
<p>​
孟子曾用“富贵不能淫，贫贱不能移，威武不能屈”来称赞古代那些仁人志士。对于这个赞语，苏武无疑是当之无愧的。今天，我们读《苏武传》，还仍然觉得好像有一股浩然正气迎面吹来，我们还不能不为他那强烈的爱国主义精神和崇高的民族气节所感动。</p>
<p>（选自《阜阳师院学报（社科版）》1987年第4期）</p>]]></content>
      <categories>
        <category>High School</category>
        <category>Chinese</category>
        <category>Classical Chinese Literature and Poetry</category>
      </categories>
      <tags>
        <tag>School Notes</tag>
        <tag>High School</tag>
        <tag>Chinese</tag>
      </tags>
  </entry>
  <entry>
    <title>过秦论（上）-贾谊</title>
    <url>/2022/03/14/chinese/High%20School/Classical%20Chinese%20Literature%20and%20Poetry/%E9%80%89%E6%8B%A9%E6%80%A7%E5%BF%85%E4%BF%AE/%E8%BF%87%E7%A7%A6%E8%AE%BA%EF%BC%88%E4%B8%8A%EF%BC%89-%E8%B4%BE%E8%B0%8A/</url>
    <content><![CDATA[<h2 id="课文解读">课文解读</h2>
<p>​
贾谊是西汉著名文学家，少有才名，以政论文和辞赋见长，前者以《过秦论》《论积贮疏》《陈政事疏》为代表，鲁迅评价其为“西汉鸿文，沾溉后人，其泽甚远”；后者以《吊屈原赋》《服鸟赋》为代表，抒发自己因怀才不遇而忧愤难平的情感。其所著《过秦论》分上、中、下三篇，论述秦之过失，以为汉王朝统治之借鉴。课文是上篇通过对秦经过数代之经营，终于横扫六国，统一四海，却因“一夫作难而七庙隳huī”的历史事实，阐发“仁义不施而攻守之势异也”的观点。中篇承上篇，指出“取与守不同术”，秦王一统后仍以兼并之术（先诈力而后仁义）治理天下，“其道不易，其政不改”，“故其亡可立而待”；而二世“因而不改”，不顺乎民情士愿，不知“安民”之术，“而重以无道”，是以“陈涉……奋臂于大泽，而天下响应”。下篇论子婴之过，指出其既不知“救败”之策，失祖宗基业，又因“秦俗多忌讳之禁”，天下士人“拑qián口而不言”，而致“忠臣不谏，智士不谋”，“雍蔽之伤国”。统观三篇，上篇以叙为论，通篇铺叙史实，形成对比，结末才点明主意，文章雄骏宏肆，气势充沛，但观点孱弱，说理不足；中、下两篇虽相对质朴，但说理细密，论述周详，观点颇能引人思考。但最著名者反而是上篇，历来传诵不已，可见该篇是“以文而取之”，并非因其史论的价值。当然，从三篇是一个整体的角度看，也许上篇仅是发凡起例，交代应注意之史实，总提施行仁义应对攻守转换的话题，且以雄骏恣肆之文气吸引君王，中、下篇才具体展开论述，呈现其反思秦亡的成果，为现实政治提供借鉴。</p>
<p>​
文章先铺叙秦一步步强盛并最终取得天下的史实，包含前三段文字，占文章绝大篇幅；后以一小段文字，叙陈涉揭竿而起，山东豪俊“并起而亡秦族”；最后以陈涉与九国、秦作对比，渲染九国、秦朝之强大，陈涉之小弱，在此基础上提出疑问，最后以“仁义不施而攻守之势异也”的观点作结。</p>
<p>​
文章起笔直入，不作套语。因秦孝公在位时奠定秦国富强的基础，故从此开始，并作浓墨重描绘。秦国虽偏处西部，但地势险要，有崤山、函谷关作为屏障，又有华夏九州之一的雍州为广阔腹地，易守难攻。从孝公开始，秦国有并吞天下之意，并为之作好战略准备。于是以商鞅为相，施行变法，“内立法度”，奖励耕战，修缮甲兵，向外施行“连衡”之策离散诸侯，直接的结果就是不费吹灰之力取得魏西河之地。这里需要注意，此时秦并未“外连衡而斗诸侯”，张仪献连横之策，是秦惠文王在位时，非秦孝公时，贾谊作《过秦论》，为表达需要，往往对历史事实加以改造，并不追求细节的真实无误。一是化繁为简，省去枝节。如全篇叙述几无细节，多以概括性叙述为主，且将许多不同时代人物、事件综合在一起，以一句或数句出之，也可见作者史料加工能力之强。二是化难为易。旨在渲染突出，如“秦人拱手而取西河之外”，实际并未如此轻描淡写，秦与魏交战十余年，方才获取此地。三是张冠李戴。即将彼时、彼人之事安在此时此人身上，如“连衡”处即是。这应是作者有意为之，未见得是作者不熟悉相关史实。</p>
<p>​
第2段将惠、武王、昭襄王的功业合在一起，详加叙述，而将孝文王、庄襄王合在一起，一笔带过，可见其笔法之摇电多姿。三位君主在位，“蒙故业，因遗策”，继承前代制定的“窥周室”战略，开始四面出击，战果丰硕，因而引起“诸侯恐惧”，以合纵之策对付秦国，谋求削弱其实力。他们不惜钱财、土地招募人才，一间谋士云集，良将荟萃，于是以百万之众“叩关而攻秦”。此处用概述之法，将近百年史实熔于一炉，汇集不同时代、不同事件中的人一起写，给人感觉好像所有人都参与其中，实际并非如此。如乐毅，主要是合纵攻齐，振兴燕国；孙膑、田忌，主要是助齐伐魏，奠定齐国霸权地位。再如，诸侯合纵攻秦，并无九国联合一事，几次攻秦参与国数量不一，结果也并非全是失败，这只是概而言之，“舍形存神”。文章如此写，旨在营造九国盛大的气势，为下文作铺垫。结果秦人利用地形优势，“开关延敌”，九国之师“逡巡而不敢进”，秦又不费吹灰之力便离散了合纵之盟。前后形成极强反差，而前文对九国气势渲染越足，则其失败愈显沉重，而秦国的力量愈显强大。其后，秦乘胜追击，“有余力而制其弊”，“宰割天下，分裂山河”，取得煌煌战果，而诸侯“争割地而赂秦”，“强国请服，弱国人朝”。文中“伏尸百万，流血漂橹”写出九国惨败之状，衬托秦国兵力之强大。渲染九国声势之大，是为写秦国之强张本；而此处凸显秦国攻天下势如破竹，又是为下文陈涉首义后秦朝之速败张本：内容一环套一环，层层铺垫，文笔之绵密可见一斑。</p>
<p>​
第3段写始皇帝的功业，暗寓由盛转败的因素。文章先说始皇“奋六世之余烈”，言外之意，六世已打下坚实基础，统一天下指日可待，水到渠成；继之以一组整齐的骈句概述其统一过程，不作浓墨重彩描绘，以“振长策”“吞二周”“亡诸侯”“执敲扑”“鞭笞天下”等语，状其声威；最后以“威振四海”写其声威之强作结。“执敲扑而鞭笞天下”一句，已暗含“过”意。接下来，文章重点写其统一天下后在军事、政治、文化、防卫等方面的一系列举措，突出其暴虐的特点。先是军事出击，南征百越，北击匈奴，使得“百越之君，俯首系颈，委命下吏”，“胡人不敢南下而牧马，士不敢弯弓而报怨”。以“百越之君”“胡人”“士”的表现，衬托始皇帝的声威，寓含对攻守形势变化，秦仍以攻取姿态统治天下的批评。《过秦论》中篇所云“先诈力而后仁义，以暴虐为天下始”，可为这两句的注脚。其次写其政治、文化举措，包括废弃先王的王道政治（即以仁政治天下），“隳名城，杀豪杰”，实行暴政；焚烧百家之书，以愚化百姓；销毁天下兵器，以弱化百姓。再写其防卫策略，固守天险，简选良将精卒守卫要害之处，盘诘查问往来的百姓，凸显其仍以武力统治天下的思维。《过秦论》中篇所云“秦王怀贪鄙之心，行自奋之智，不信功臣，不亲士民，废王道而立私爱，焚文书而酷刑法”，可以与这段相发明。最后是总结，关中险固，“金城千里”，一切都想到并安排好了，始皇帝以为已经高枕无忧，可以建立万世之基业了。</p>
<p>​
接下来写陈涉，实际是写秦之败亡。文章先加叙一句“始皇既没，余威震于殊俗”，形成过渡，不至行文突兀。写陈涉，笔法又变为叙评结合，凸显其弱小，如陈涉出身低微，是“瓮牖绳枢之子，氓隶之人，而迁徙之徒”，“蹑足行伍之间，而倔起阡陌之中”；才能不足，连“中人”都比不上，更别提“仲尼、墨翟之贤，陶朱、猗顿之富”了；士卒弱少，是“疲弊之卒”，仅“数百之众”；所执兵器低劣粗糙，“斩木为兵，揭竿为旗”。但就是这样的人“转而攻秦”，却使得“天下云集响应，赢粮而景从”，于是“山东豪俊遂并起而亡秦族矣”。</p>
<p>​
叙述已经完结，材料呈现眼前，相信读者也开始有了疑问：强秦攻山东之国势如破竹，声威何其盛也；可仅维持统治十余年，就被弱小的陈涉引领的山东豪俊所亡，到底是为何呢？作者的目的已经达到，接下来就是如何进一步揭示宗旨了。作者于最后一段开始分析，并阐述原因。先让一步，说明“天下非小弱也”，秦之形势险要“自若也”，并未变化，即秦的优势还在。这是为了说理的缜密，避免旁逸斜出。接着，文章先将陈涉和山东之国两方面力量以对比的方式绾结起来，指出无论是领导者地位、武器装备、部队素质，还是将领的水平，陈涉都比不上山东之国。然而二者“成败异变，功业相反”，到底是为什么呢？作者却不急于回答，主要是因为这重对比并未将第三方力量即秦纳入进来，无法水到渠成揭示自己“过秦”的论断。于是下句再次将二者放在一起“比权量力”，指出他们差距巨大，“不可同年而语”。紧接着将九国与秦对比——饶是力量如此强大的诸国，秦却以“区区之地”，百余年间，“致万乘之势，序八州而朝同列”，最后一统天下，“以六合为家，崤函为宫”；又将秦与陈涉作比——饶是如此强大之秦，却因“一夫作难”而宗庙毁弃，“身死人手，为天下笑”。如此一来，终将前面四段叙述中所涉及的三方面力量绾结起来，并落脚到秦之败亡上，顺势提出疑问——“何也？”并作出顺理成章的回答：“仁义不施而攻守之势异也。”作者认为，秦之亡在于“仁义不施”，因为取天下与守天下的形势不同了，应该采取不同的策略，取天下可行武力，守天下则必须施行仁义。正如《过秦论》中篇所分析的那样：“夫并兼者高诈力，安定者贵顺权，此言取与守不同术也。秦离战国而王天下，其道不易，其政不改，是其所以取之守之者无异也。孤独而有之，故其亡可立而待。”</p>
<p>​
文章全篇不见观点，只是一味铺叙、铺叙、再铺叙，最后才揭示观点，这样的写法足够吸引人。但客观来看，从前文的叙述、比较和分析中，并不能必然地得出这个结论，也可以得出“不与民休息而攻守之势异也”“秦法不变而攻守之势异也”等结论。但因为这种新颖的写法，以及作者的文采、文气，和前面的许多暗示，读到结尾，读者往往为文章的观点所折服，不会提出质疑，或许文采也是一种增强说服力的手段。</p>
<p>​
文章主要的论述手段是对比，以对比凸显差异，以对比引发疑问。为凸显九国、秦与陈涉力量之悬殊，文章刻意强化九国与统一后秦朝之强，陈涉之，而忽视其他因素。如渲染九国贵族之明智（“齐有孟尝，赵有平原，楚有春申，魏有信陵”“皆明智而忠信，宽厚而爱人，尊贤而重士”）、谋臣良将之众多（“有甯越、徐尚、苏秦、杜赫之属为之谋……”）、土地之广大（“十倍之地”）、兵员之充足（“百万之众”）；渲染秦朝地域之广（“南取百越之地，以为桂林、象郡”“使蒙恬北筑长城而守藩篱，却匈奴七百余里”）、威风之盛（“威振四海”“百越之君，俯首系颈，委命下吏”“胡人不敢南下而牧马，士不敢弯弓而报怨”“始皇既没，余威震于殊俗”）、地势之险（“践华为城，因河为池，据亿丈之城，临不测之渊”“关中之固，金城千里”）、守卫之强（“良将劲弩守要害之处，信臣精卒陈利兵而谁何”）；如渲染陈涉“才能不及中人”，将其与仲尼、墨翟这样的圣人，陶朱、猗顿这样的富商对比。在行文上，则以多半篇幅叙述秦取得天下的历史，以极小篇幅叙失去天下的过程，营造出数代经营之辉煌与一旦基业之崩塌的巨大落差，有力地引发“然而成败异变，功业相反，何也”的疑问，从而水到渠成提出自己的观点。</p>
<p>​
本文是一篇史论，却带有赋的特色。一方面辞采华丽，多用对偶和排比，铺陈渲染。如开头写秦孝公之雄心，连用“席卷天下”“包举宇内”“囊括四海”“并吞八荒”四个词语，读来朗朗上口上口；且整齐中富于变化，如前例后两个短语分别加“之意”“之心”，句式上就与前两个形成变化，不显板滞。文章善于错综使用同义词，如表示天下，就有“宇内”“四海”“八荒”“六合”等词语；表达统治，则用“席卷”“包举”“囊括”“并吞”“御”“吞”“制”等。一个意思可以连用多个不同词语或多种表达，令人眼花缭乱，目不暇接。可见其词汇之丰富，运用之精工。另一方面，文章一气呵成，文脉如行云流水一般，汩汩而出，滔滔不绝，衔接自然流畅，富于气势。这自然得益于对偶、排比等修辞的运用和作品汪洋恣肆的语言表达，但从上文的分析也可看出，内在的理路、纯熟的构思、充沛的情感，才是构成文气的内核。</p>
<h2 id="参考资料">参考资料</h2>
<h3 id="参考译文">参考译文</h3>
<div class="classcial-chinese-literature-and-poetry-translation"><div class="paragraph"><p class="original-text">秦孝公据<ruby><rb>崤</rb><rt>xiáo</rt></ruby>函之固，拥雍州之地，君臣固守以窥周室，</p><p class="translation">秦孝公占据着崤山和函谷关的险固地势，拥有雍州的土地，君臣牢固地守卫着以窥视周王室的权力，</p><p class="original-text">有席卷天下，包举宇内，囊括四海之意，并吞八荒之心。</p><p class="translation">有席卷天下，征服九州，控制四海的意图，并吞八方荒远之地的雄心。</p><p class="original-text">当是时也，商君佐之，</p><p class="translation">在那时候，商鞅辅佐他，</p><p class="original-text">内立法度，务耕织，修守战之具，外连衡而斗诸侯。</p><p class="translation">对内订立法规制度，从事耕作纺织，修治防守和进攻的器械，对外实行连衡策略，使山东诸侯相互争斗。</p><p class="original-text">于是秦人拱手而取西河之外。</p><p class="translation">于是秦人毫不费力地夺取了西河之外的土地。</p></div><div class="paragraph"><p class="original-text">孝公既没，惠文、武、昭襄蒙故业，因遗策，</p><p class="translation">孝公死后，惠文王、武王、昭襄王先后继承已有的基业，沿袭前代的政策，</p><p class="original-text">南取汉中，西举巴、蜀，东割膏腴之地，北收要害之郡。</p><p class="translation">向南攻取汉中，向西吞并巴、蜀，向东割取肥沃的土地，向北占领政治、经济、军事上都非常重要的地区。</p><p class="original-text">诸侯恐惧，会盟而谋弱秦，</p><p class="translation">诸侯恐慌害怕，会聚结盟，谋求削弱秦国，</p><p class="original-text">不爱珍器重宝肥饶之地，以致天下之士，合<ruby><rb>从</rb><rt>zòng</rt></ruby>缔交，相与为一。</p><p class="translation">不吝惜奇珍贵重的器物和肥沃富饶的土地，用来招引天下的优秀人才，采用合纵的策略缔结盟约，互相援助，成为一体。</p><p class="original-text">当此之时，齐有孟尝，赵有平原，楚有春申，魏有信陵。</p><p class="translation">在这个时候，齐国有孟尝君，赵国有平原君，楚国有春申君，魏国有信陵君。</p><p class="original-text">此四君者，皆明智而忠信，宽厚而爱人，尊贤而重士，</p><p class="translation">这四位封君，都明理多智，忠诚守信，待人宽厚，爱护百姓，尊重贤能，敬重义士。</p><p class="original-text">约从离衡，兼韩、魏、燕、楚、齐、赵、宋、卫、中山之众。</p><p class="translation">他们相约为合纵，击破秦国的连衡策略，将韩、魏、燕、楚、齐、赵、宋、卫、中山各国联合起来。</p><p class="original-text">于是六国之士，有<ruby><rb>甯</rb><rt>nìng</rt></ruby>越、徐尚、苏秦、杜赫之属为之谋，齐明、周最、陈<ruby><rb>轸</rb><rt>zhěn</rt></ruby>、<ruby><rb>召</rb><rt>shào</rt></ruby>滑、楼缓、<ruby><rb>翟</rb><rt>zhái</rt></ruby>景、苏厉、乐毅之徒通其意，吴起、孙膑、带佗、倪良、王廖、田忌、廉颇、赵奢之伦制其兵。</p><p class="translation">于是六国的士人，有甯越、徐尚、苏秦、杜赫这些人为他们谋划，齐明、周最、陈轸、召滑、楼缓、翟景、苏厉、乐毅这些人沟通他们的意图，吴起、孙膑、带佗、倪良、王廖、田忌、廉颇、赵奢这些人统率他们的军队。</p><p class="original-text">尝以十倍之地，百万之众，叩关而攻秦。</p><p class="translation">他们曾经以十倍于秦的土地，上百万的军队，攻打函谷关以进攻秦国。</p><p class="original-text">秦人开关延敌，九国之师，<ruby><rb>逡</rb><rt>qūn</rt></ruby>巡而不敢进。</p><p class="translation">秦国人打开关门迎击敌人，九国的军队却有所顾虑而徘徊不敢前进。</p><p class="original-text">秦无亡矢遗镞之费，而天下诸侯已困矣。</p><p class="translation">秦国人没有一兵一卒的消耗，天下的诸侯便已窘迫不堪了。</p><p class="original-text">于是从散约败，争割地而赂秦。</p><p class="translation">于是纵约解散了，各诸侯国争着割地来贿赂秦国。</p><p class="original-text">秦有余力而制其弊，追亡逐北，伏尸百万，流血漂橹；</p><p class="translation">秦国有余力利用他们的弱点制服他们，追逐败逃的军队，杀死百万人，流血多得甚至能漂起大盾牌；</p><p class="original-text">因利乘便，宰割天下，分裂山河。</p><p class="translation">秦国人凭借有利的形势，割取天下的土地，划分山河的区域。</p><p class="original-text">强国请服，弱国入朝。</p><p class="translation">强国表示臣服，弱国入秦朝拜。</p><p class="original-text">延及孝文王、庄襄王，享国之日浅，国家无事。</p><p class="translation">待到孝文王、庄襄王依次继位，他们在位的时间不长，秦国没有什么大事。</p></div><div class="paragraph"><p class="original-text">及至始皇，奋六世之余烈，</p><p class="translation">到秦始皇的时候，他奋力发展六世遗留下来的功业，</p><p class="original-text">振长策而御宇内，吞二周而亡诸侯，履至尊而制六合，</p><p class="translation">用武力来统治各国，吞并东西二周，消灭各诸侯国，</p><p class="original-text">执敲扑而鞭笞天下，威振四海。</p><p class="translation">登上皇帝的宝座控制天下，用严酷的刑罚奴役天下的百姓，威风震慑四海。</p><p class="original-text">南取百越之地，以为桂林、象郡；</p><p class="translation">向南取百越的土地，设置了桂林郡、象郡；</p><p class="original-text">百越之君，俯首系颈，委命下吏。</p><p class="translation">百越的君主低着头，颈上捆着绳子，把自己的性命交给狱官。</p><p class="original-text">乃使蒙恬北筑长城而守藩篱，却匈奴七百余里；</p><p class="translation">又派蒙恬到北方去修筑长城，守卫边疆，使匈奴退却七百多里；</p><p class="original-text">胡人不敢南下而牧马，士不敢弯弓而报怨。</p><p class="translation">匈奴人再不敢到南边来放牧，勇士不敢拉弓射箭来报仇。</p><p class="original-text">于是废先王之道，焚百家之言，以愚黔首；</p><p class="translation">于是废除先王的治国之道，焚烧各学派的著作，以便愚化百姓；</p><p class="original-text"><ruby><rb>隳</rb><rt>huī</rt></ruby>名城，杀豪杰；收天下之兵，聚之咸阳，销锋<ruby><rb>镝</rb><rt>dí</rt></ruby>，铸以为金人十二，以弱天下之民。</p><p class="translation">毁坏著名的城池，杀掉英雄豪杰；收缴天下的兵器，集中在咸阳，销毁兵器，铸成十二个金人，以便削弱天下的百姓。</p><p class="original-text">然后践华为城，因河为池，据亿丈之城，临不测之渊，以为固。</p><p class="translation">然后据守华山作为帝都城墙，凭黄河作为帝都的护城河，上据亿丈高的城墙（华山），下临不可测的深渊（黄河），以为非常坚固。</p><p class="original-text">良将劲弩守要害之处，信臣精卒陈利兵而谁何。</p><p class="translation">良将手执强弩守卫着要害的地方，可靠的大臣、精锐的士卒摆开锋利的兵器盘诘查问。</p><p class="original-text">天下已定，始皇之心，自以为关中之固，金城千里，子孙帝王万世之业也。</p><p class="translation">天下已经平定，始皇的内心，以为关中的险固地势，方圆千里的坚固城池，正是子孙万代的帝王基业。</p></div><div class="paragraph"><p class="original-text">始皇既没，余威震于殊俗。</p><p class="translation">始皇去世之后，他的余威依然震慑着边远的地方。</p><p class="original-text">然陈涉瓮<ruby><rb>牖</rb><rt>yǒu</rt></ruby>绳枢之子，<ruby><rb>氓</rb><rt>méng</rt></ruby>隶之人，而迁徙之徒也；</p><p class="translation">可是陈涉不过是个用瓮做窗户、用草绳系门扇的穷人，是地位低贱的百姓，而且是被征发去守边的戍卒；</p><p class="original-text">才能不及中人，非有仲尼、墨<ruby><rb>翟</rb><rt>dí</rt></ruby>之贤，陶朱、猗yī顿之富；</p><p class="translation">他的才能不如平常人，没有孔丘、墨翟那样的贤德，没有陶朱、猗顿那样的财富；</p><p class="original-text">蹑足行伍之间，而倔起阡陌之中，率疲弊之卒，将数百之众，转而攻秦；</p><p class="translation">他置身于戍卒的队伍中，兴起在田野间，率领着疲惫无力的士卒，带领着数百人的队伍，掉转头来进攻秦朝；</p><p class="original-text">斩木为兵，揭竿为旗，天下云集响应，赢粮而景从。</p><p class="translation">砍下树木做武器，举起竹竿做旗帜，天下的人如同云一样聚集起来，如同回声似的应和他，担着粮食如影随形地跟着他。</p><p class="original-text">山东豪俊遂并起而亡秦族矣。</p><p class="translation">东方诸国的英雄豪杰就一齐起事，灭亡了秦朝。</p></div><div class="paragraph"><p class="original-text">且夫天下非小弱也，雍州之地，崤函之固，自若也。</p><p class="translation">况且一统天下的秦朝并不弱小，雍州的地势，崤山和函谷关的险固，还是像原来的样子。</p><p class="original-text">陈涉之位，非尊于齐、楚、燕、赵、韩、魏、宋、卫、中山之君也；</p><p class="translation">陈涉的地位，并不比齐、楚、燕、赵、韩、魏宋、卫、中山的国君更尊贵；</p><p class="original-text">锄<ruby><rb>櫌</rb><rt>yōu</rt></ruby>棘<ruby><rb>矜</rb><rt>qín</rt></ruby>，非<ruby><rb>铦</rb><rt>xiān</rt></ruby>于钩戟长<ruby><rb>铩</rb><rt>shā</rt></ruby>也；</p><p class="translation">农具木棍，并不比钩戟长矛更锋利；</p><p class="original-text">谪戍之众，非抗于九国之师也；</p><p class="translation">因有罪而被征调去守边的士卒，并不能匹敌九国的军队；</p><p class="original-text">深谋远虑，行军用兵之道，非及向时之士也。</p><p class="translation">深谋远虑，行军用兵的策略，也比不上先前九国的武将谋臣。</p><p class="original-text">然而成败异变，功业相反，何也？</p><p class="translation">然而条件好的失败了而条件差的却能成功，功业完全相反，为什么呢？</p><p class="original-text">试使山东之国与陈涉<ruby><rb>度</rb><rt>duó</rt></ruby>长<ruby><rb>絜</rb><rt>xié</rt></ruby>大，比权量力，则不可同年而语矣。</p><p class="translation">假使拿东方诸国跟陈涉量量长短，比比大小，比较权势，衡量实力，则不可同日而语了。</p><p class="original-text">然秦以区区之地，致万乘之势，序八州而朝同列，百有余年矣；</p><p class="translation">但是秦国凭借着它小小的地盘，发展到兵车万辆的国力，统理八州，使六国诸侯都来朝见，已有一百多年了；</p><p class="original-text">然后以六合为家，崤函为宫；</p><p class="translation">然后将天下作为自家产业，用崤山和函谷关作为宫殿；</p><p class="original-text">一夫作<ruby><rb>难</rb><rt>nàn</rt></ruby>而七庙隳，身死人手，为天下笑者，何也？</p><p class="translation">一个戍卒起事而宗庙毁灭，自己也死在人家手里，被天下人耻笑，是什么原因呢？</p><p class="original-text">仁义不施而攻守之势异也。</p><p class="translation">就因为不施行仁义而攻和守的形势不同了啊。</p></div></div>
<h3 id="作者介绍">作者介绍</h3>
<p>​
贾谊（前200—前168），西汉政治家、文学家。洛阳（今属河南省）人。18岁时，就以博学能文而闻名于郡中，得到郡守吴公的赏识，收为弟子。文帝即位后，因吴公的推荐，任为博士，掌文献典籍。其时，贾谊不过20多岁，在博士中最为年轻，但以见识和议论，赢得博士中年长者的尊敬，受到文帝的重视，不到一年，被擢升为太中大夫。朝廷上许多法令、规章的制定，都由他主持进行。贾谊的才华和文帝对他的信任，引起了一部分朝臣的不满。他们以“洛阳之人，年少初学，专欲擅权，纷乱诸事”（《史记·屈原贾生列传》）的流言，动摇了文帝对贾谊的信任，结果文帝让贾谊离开长安，去做长沙王的太傅。后人称贾谊为贾长沙、贾太傅。在长沙任职的三年中，贾谊的心情一直抑郁不欢。文帝七年（前175），贾谊被召回长安，任梁怀王的太傅。此时文帝虽仍赞赏贾谊的博学。而对于他多次上疏陈述的政治主张并不采纳。后来梁怀王骑马时摔死，贾谊认为自己没有尽到太傅的责任，经常悲泣自责，不久死去。</p>
<p>​
贾谊的思想以儒家为主，也杂有法家、黄老的成分。刘向指出“贾谊言三代与秦治乱之意，其论甚美，通达国体。虽古之伊（尹）管（仲）未能远过也”（《汉书·贾谊传赞》引）。</p>
<p>​
贾谊的作品，《汉书·艺文志》著录有文58篇，赋7篇，其文即现存的《新书》，亦名《贾子》，曾经西汉末年刘向校定，虽然在流传过程中有所错乱和散失，但基本可信。首篇《过秦论》，是贾谊政论文中的名篇。另一篇著名政论文《陈政事疏》，又称《治安策》，载于《汉书·贾谊传》。据班固称，是他从《新书》58篇中选择“切于世事者”（《汉书·贾谊传赞》），经过合并删削而成，题目是后人安上的。贾谊的辞赋大多已亡佚。除《吊屈原赋》《服鸟赋》外，刘向所编《楚辞》中收入《惜誓》一篇，作者题贾谊，但东汉王逸为《楚辞》作注时，则表示对作者“疑不能明”。</p>
<p>​
贾谊的散文有战国纵横家的风格，善于运用不同历史事实的对比来分析利害，在铺张渲染的描写中，造成文章的充沛气势，富于说服力和感染力。如《过秦论》，开始为了说明秦国统一中国过程中的强大，极力描写六国诸侯合纵抗秦的盛况，而在后面写秦朝的败亡时，又极力写陈涉的平凡以见亡秦的轻易，从而引出秦朝短期覆亡的教训，极其有力。作者抱有改革政治的热情，又受到压抑，因而笔端常带感情，议论说理毫无顾忌，行文畅达而不浮浅，语言犀利激切，富于文采。如《陈政事疏》的开头：“臣窃惟事势，可为痛哭者一，可为流涕者二，可为长太息者六，若其它背理而伤道者，难编以疏举。进言者皆曰天下已安已治矣，臣独以为未也。曰安且治者，非愚则谀，皆非事实知治乱之体者也。夫抱火厝之积薪之下而寝其上，火未及燃，因谓之安，方今之势，何以异此！”忧时济世的感情溢于言表，富于鼓动性。贾谊的散文对唐宋古文的写作有一定影响。鲁迅说：贾谊、晁错的奏疏“皆为西汉鸿文，沾溉后人，其泽甚远”。（《汉文学史纲要》）</p>
<p>​
贾谊的辞赋，也饱含着作者济世的热情，抒发愤懑不平，具有感人的力量。当时汉代的新体赋—汉赋还没有形成，贾谊主要是采用骚体来写作，但在标题上已出现“赋”的字样。他的《服鸟赋》采用主客问答的方式，抒写自己怀才不遇的愤懑情绪，同时也流露出齐生死、等祸福的消极思想。语言上虽多用四言句，句法比较整齐，但已趋向散文化，显示出从骚体赋过渡到汉赋的端倪。《吊屈原赋》是他赴长沙途中经湘水时所作，在抒发对屈原不幸遭遇的同情中，寄托了自己的身世之感，被刘勰称为“辞清而理哀”（《文心雕龙·哀吊》）。由于贾谊在此赋中引屈原为同调，而《史记》的作者司马迁又对屈、贾都寄予同情，为两人写了一篇合传，后世即往往以贾谊与屈原并列，称为“屈贾”。</p>
<p>（选自《中国大百科全书·中国文学》，中国大百科全书出版社2002年版）</p>
<h3 id="相关史料">相关史料</h3>
<h4 id="于是秦人拱手而取西河之外">（1）于是秦人拱手而取西河之外</h4>
<p>​
秦孝公二十二年（前340年），商鞅伐魏，魏使公子卬为将而击之。商鞅遗书公子卬，愿与为好会而罢兵。会盟既已，商鞅虏公子卬而袭夺其军。其后又经十余年，魏国方才将西河之地献与秦国。</p>
<h4 id="合从缔交相与为一">（2）合从缔交，相与为一</h4>
<p>​
首次合纵在前334年至前332年之间，苏秦说六国合纵，任纵约长，佩六国相印，“秦兵不敢窥函谷关十五年”。前318年，苏秦再次约六国攻秦，楚怀王任纵约长，至函谷关，秦出兵击六国，六国皆引兵而归。此外，前298年，魏、齐、韩三国曾联合攻秦。前247年，信陵君率五国兵败秦于河外。</p>
<h4 id="伏尸百万">（3）伏尸百万</h4>
<p>​
这说的不是一次战役的死亡人数。秦击六国杀伤人数《史记·秦本纪》皆有记载，如前293年击韩伊阙，斩首24万；前273年击魏华阳军，斩首13万（《史记·六国年表》作15万）；前60年，破赵长平军，杀卒45万（10万以下不计）。</p>
<h4 id="成败异变功业相反">（4）成败异变，功业相反</h4>
<p>​
这句话是对陈涉起义的肯定。陈涉于起义后半年即被叛徒杀死，但作者认为他是成功的，功业极大。司马迁也表示过同样的意见，《史记·陈涉世家》云：“陈胜虽已死，其所遣侯王将相竟亡秦，由涉首事也。”</p>
<h3 id="参考文献">参考文献</h3>
<h4 id="雄辩艺术的不朽经典谈过秦论上a_classical_piece_of_art_reading_comments_on_qins_faults">雄辩艺术的不朽经典——谈《过秦论》（上）<span class="citation" data-cites="A_classical_piece_of_art_reading_Comments_on_Qins_faults">[@A_classical_piece_of_art_reading_Comments_on_Qins_faults]</span></h4>
<p>​
《过秦论》（上）是一篇奇文。奇，体现在文章的论点有失公允，文章的论述逻辑亦存在明显的漏洞；但是，作为文论却具有超越历史的价值，至今仍然是文学史上不朽的经典。</p>
<p>​
所谓论点有失公允，指的是把秦灭亡的原因仅仅归结为“仁义不施”。实际上，论定秦是亡于法家的严刑峻法，属于汉初儒生，不仅在后世，而且在当代也颇有争议。有学者指出秦之国祚短促，许多政策恰恰是法家所否定的，如《韩非子》中的《亡征》有一百多种，秦始皇就占好多条。如秦始皇过于勤政，过于集权，正是法家所反对的。秦究竟是亡于法家，还是没有彻底遵循法家，至今在学术上还存在争辩。比较折中的看法是，秦亡是内外多种原因造成的，不能简单认定为违反儒家的仁政原则。《过秦论》的论点，无疑有片面性。</p>
<p>​
再来看其论述逻辑存在的明显漏洞。文章题旨是总结秦从崛起到灭亡的原因，结论是秦亡于“仁义不施”，亡在为政之暴。从逻辑上讲，其兴起乃至统一全国，应该是实施仁政。但是，整篇文章论述秦之兴，连仁政的边都不沾。</p>
<p>​
题目是“过秦”，可文章主要部分却并未从秦之“过”着眼，而是称秦之兴为脉，系统分析秦自孝公至始皇逐渐强大的原因：“据崤函之固”，地形易守而难攻；“窥周室”，有政治上统一全国的雄心；内政上“内立法度，务耕织，修守战之具”；外交上实行连横政策，对诸侯分化瓦解，各个击破，轻而易举地取得了“西河之外”的土地。从这里可以看出，根本没有仁政。相反，商鞅变法，所用的恰恰是严刑峻法。而文中所提及的六国著名的四公子，却不乏儒家仁政色彩：“明智而忠信，宽厚而爱人。”文章还正面写到秦国和六国的战争：“追亡逐北，伏尸百万，流血漂橹。”这哪里有什么仁政的影子？</p>
<p>​
虽然如此，文章仍然是经典，读者很少感到疏漏，无不享受着作者高瞻远瞩气势如虹的雄辩艺术。下文对其雄辩艺术展开具体分析。</p>
<h5 id="一">（一）</h5>
<p>​
《过秦论》（上）的雄辩艺术首先得力于语言的概括和渲染。这里的概括和渲染，不是直接归纳式的，那样容易片面化，而是和矛盾的揭示结合在一起，在对立面的分析中，揭示其转化的条件，这就不但看起来全面，而且给人以深邃之感。</p>
<p>​
文章一开头写道：“秦孝公据崤函之固，拥雍州之地，君臣固守以窥周室，有席卷天下，包举宇内，囊括四海之意，并吞八荒之心。”这几句就透露出矛盾：一方面，是说地形有利，但地盘很小；另一方面，则是说政治上野心很大。中国诗话讲究诗眼，要读出文章的好处，也要讲究字眼。像“窥”这样精粹的字眼，用暗喻构成了以小窥大的形象，无疑精练之至。“窥”的内涵，对秦之崛起有重大意义，因而接下来用了三重对仗性排比句，“席卷天下，包举宇内，囊括四海”，这就不是以精练为特点，而是以渲染为务了。这种渲染显然带着汉朝正统赋体的风貌，但还是与其有一定差异。第一，不像汉赋（尤其是官方大赋）那样一味作景观的平面、静态的铺排，那样有碍于思想的发展，这里是用来发表议论，不是一般的议论，而是大发富丽堂皇的宏论；第二，汉赋铺排繁复，叠床架屋，不知节制，且流于空疏，贾谊则对赋体句式节制使用，间之以散句。这里就三个四言短句来说，极其精练。但是，从句子间的关系说，一个意思，三重反复，不但不嫌重复，反而显得很有情采和文采。这种情采和文采，没有流于空疏，原因是思想有力度，故亦不乏智采。作者在宏大的视野中概括了矛盾的各个方面。首先是空间从有限（崤函、雍州之地）到无限（天下、宇内、四海）；其次在语言上对无限的空间以三个同义所指（席卷、包举、囊括）统一起来；接着从时间上概括，惠文、武、昭襄，是三代君王的业绩，从公元前337年到公元前251年，八十多年，仅以一言以概之。至于“南取汉中，西举巴、蜀，东割膏腴之地，北收要害之郡”，从空间上说东南西北地盘全面扩张，可只用了四个动词（取、举、割、收），同义所指，对称句法，使得结构有机紧密。</p>
<p>​
接下来意脉就深化了。邦国的崛起，光有三代君王的雄心，还只是主观愿望。客观的根源，还在于内政上的改革和外交上的策略：</p>
<blockquote>
<p>​
当是时也，商君佐之，内立法度，务耕织，修守战之具，外连衡而斗诸侯。于是秦人拱手而取西河之外。</p>
</blockquote>
<p>​
内政的改革，本来是很复杂的历史，是悲壮的过程（商鞅自己就作法自毙），文章只用了十一个字“立法度，务耕织，修守战之具”。外交上连衡（横）路线也经历长期曲折斗争，也只用了“连衡而斗诸侯”六个字。特别是“秦人拱手而取西河之外”，把外交上的纵横捭阖，纵则帝秦、横则王楚的搏斗，上百年的血腥战争，地居僻远的秦国扩张到黄河以西，用“拱手”两个字总结，似乎没有动手、没有流血就扩张了土地。话说得这样轻松，自然是语言的高度概括力，但更是夸张了胜利的唾手可得。其实，贾谊的说法并不符合史实。六国合纵，与秦作战有五次。第一次，公元前318年，魏、赵、韩、燕、楚五国合纵攻秦，秦军取胜。第二次，公元前298年，楚、齐、韩、魏联合攻秦，苦战三年，击败秦军，攻入函谷关，迫使秦归还韩之武遂及魏之封陵等地。第三次，公元前287年，齐、赵、魏、韩、燕五国联军攻秦。五国各怀鬼胎，进至荥阳、成皋即互相观望，不肯首攻。秦为破坏五国联盟，主动取消帝号，将前占之温、轵、高平归还魏国，将王公、符逾归还赵国。联军遂撤走。第四次，公元前247年，魏、赵、韩、楚、燕五国组成联军攻秦，大败秦军，尾追至函谷关后撤军。合纵攻秦获胜。第五次，公元前241年，赵、魏、韩、燕、楚五国联军，秦集中兵力进行反击，联军不支败退。由此可知，先后合纵与秦五战，秦两胜两败，其中一次还是在外交上重大退让，才使对方撤军。可是，贾谊却将之说成不战而胜的压倒性的胜利，对方“以十倍之地，百万之众，叩关而攻秦。秦人开关延敌，九国之师，逡巡而不敢进。秦无亡矢遗镞之费，而天下诸侯已困矣。于是从散约败，争割地而赂秦”。这只能说明贾谊把五次互有胜负的战争概括为一举成功，目的就是构成一种戏剧性气势。</p>
<p>​
雄视时间之长，俯视空间之广，动词之精，排句之华，散体与赋体开合自如，这就构成了文章气势宏大、词茂而思精的风格。</p>
<h5 id="二">（二）</h5>
<p>​ 对于全文来说，这还只是个序曲，当然是个很有气势的序曲。</p>
<p>​
文章至此，虽然驾驭矛盾，气魄宏大，但是，所述矛盾，只限于从秦国方面，就当时五霸七雄的局面而言，也还只是局部，虽然能自圆其说，然而，忽略了与秦相对的六国（实际上是九国），则不可能不是片面的。要全面，作为论述深化的方法乃是从反面揭示矛盾。对于不利于自己论点的因素不但不回避，而且加以强调，再使之转化为有利于自己的论点。这就是说，高水平的议论文，不但要自圆其说，而且要它圆其说。在辩证术中，叫作主动树立对立面。</p>
<p>​
接下去是文章的第三个层次，所树对立面，不是一般的，而且是突出强大的对立面。讲敌方诸侯会盟而谋弱秦）的状况，夸张其优势。第一，论土地“十倍于秦”；第二，论军队“百万之众”；第三，实行了针锋相对的“合从缔交”联合抵抗的政策；第四，不惜重金，罗致贤才，最著名的是孟尝、平原、春申、信陵“四君”；第五，以乐毅为代表的政治家“通其意”，以孙膑为代表的军事家“制其兵”，联盟攻秦。大笔浓墨，显示不论是人才还是军事，九国的优势和秦人的劣势对比十分明显，似乎战端一开，则秦国必败无疑。</p>
<p>​
从议论文的写作来说，对立面树立得越强大，化解的难度就越大，但是，化解如能成功，就越是雄辩。</p>
<p>​
在九国来犯的严重威胁下，秦人却并不抵抗，相反“开关延敌”。是不是设有埋伏，诱敌深，人呢？并不是。战争却没有打起来，“九国之师，浚巡而不敢进。秦无亡矢遗铁之费”，不费一枪一弹，对方就失败了。不战而屈人之兵，九国“争割地而赂秦”。不但如此，而且是势如破竹，“追亡逐北，伏尸百万，流血漂槽”，强国请服，弱国人朝。文章采用的不是一般的对比模式（一国与九国），而是采用把矛盾推向极端的对比（军事上、国土上、人才上）强化模式。强化矛盾双方力量对比强弱悬殊，但斗争的结果却是力量对比的倒转。悬殊对比走向反面的结果乃是另一极端，极强转化为极弱。</p>
<p>​
这种强大的对立面的转化，不是一般的转化，用西方人常用的话语来说，乃是戏剧性（dramatic
）的转化。贾谊的气魄就在树立强大的对立面，展示戏剧性的转化，使得文章本来宏大，的视野又带上了雄辩的风格。</p>
<p>​
细心的读者不难发现，强弱转化的原因乃是九国表面上组成了统一战线，但是，并不团结，各怀鬼胎，不能统一进攻，不敢与秦国为敌。秦国在外交上实行连衡政策，各个击破，于是力量，悬殊的对比发生了转化，强者崩溃，弱者凯旋。文章为什么省略了“九国之师，浚巡而不敢进”的原因呢？就是为了直截了当地把强弱胜败结果摆在读者面前，突出转化的戏剧性，增加文章的雄辩气势。</p>
<p>​
文章做到这里，蓄势已成，意脉面临转折。这里需要一个总结，精彩的是文章只用了一个句子“奋六世之余烈”，仅六个字，非常简洁，干净利落。不过，贾谊为之加上了强化的赋体色彩：“振长策而御宇内，吞二周而亡诸侯，履至尊而制六合，执敲扑而鞭答天下，威振四海。”用了四个赋体的排比句，不但有文采、情采，而且有智采。赋体语句，在贾谊笔下是有节制的，适可而止。及至说到边疆的开拓，则以散体为主：“南取百越之地，以为桂林、象郡；百越之君，俯首系颈，委命下吏。乃使蒙恬北筑长城而守藩篱，却匈奴七百余里。”最后又以赋体作结：
“胡人不敢南下而牧马，士不敢弯弓而报怨。”“牧马”“弯弓”从行文上说，两个意象显得精练而生动，作者的笔锋游刃有余，开合自如。</p>
<p>​ 对立面如此戏剧性转化，使文章的意脉高昂起来，达到高潮。</p>
<h5 id="三">（三）</h5>
<p>​
接下去，乃是意脉面临真正的转化。这个层次，和前面略有不同，有点史家笔法，寓褒贬于叙述之中。第一是“于是废先王之道，焚百家之言，以愚黔首”；第二是“收天下之兵，聚之咸阳，销锋镝，铸以为金人十二，以弱天下之民”；第三是“良将劲弩守要害之处，信臣精卒陈利兵而谁何”。从思想统一到强将利兵，层层强化，霸主自恋，累进式递增，基业本该万无一失。但是，所有这一切都暗含着反讽，所用之语言，从明显的“废先王之道”到含蓄的“以愚黔首”“弱天下之民”，甚至还有形褒实贬的“良将劲弩守要害之处，信臣精卒陈利兵而谁何”（这种反讽到了最后“为天下笑者”，就直接表露出来了），为接踵而来的戏剧性最大的转化蓄势。最后这么强大的，远比前朝五代强大的秦国竟然灭亡了，而且是灭亡于草根百姓甚至罪犯之手：</p>
<blockquote>
<p>​ 陈涉瓮牖绳枢之子，氓隶之人，而迁徙之徒也；……</p>
</blockquote>
<p>​
这是文章意脉转折的关键，戏剧性转化是文章结构的核心。强者，灭于弱者；贵者，亡于贱者。而这些人：</p>
<blockquote>
<p>​
才能不及中人，非有仲尼、墨翟之贤，陶朱、猗顿之富；蹑足行伍之间，而倔起阡陌之中，率疲弊之卒，将数百之众，转而攻秦；斩木为兵，揭竿为旗，天下云集响应，赢粮而景从。山东豪俊遂并起而亡秦族矣。</p>
</blockquote>
<p>​
这样的戏剧性转化相当惊人，才者弱于不才者，智者亚于不智者，富者困于贫者，良将败于疲卒。对于这样的戏剧性转化，作者又一次用了赋体来对比渲染。结果已经有了，但是，转化的条件是什么呢？作者在这里暂且不表，而是笔锋一转又进行戏剧性对比：人才不及九国之君，武器都是些农具（锄耰棘矜），不及正规军队的“钩戟长铩”，行军用兵之道不及此前败于秦的军事家。这还不算，又对秦国从兴（以区区之地，致万乘之势）到灭（七庙隳，身死人手）的历史予以对比式的总结，为最后得出结论准备更雄辩的基础。</p>
<blockquote>
<p>​
……然而成败异变，功业相反，何也？试使山东之国与陈涉度长絜大，比权量力，则不可同年而语矣。然秦以区区之地，致万乘之势，序八州而朝同列，百有余年矣；然后以六合为家，崤函为宫；一夫作难而七庙隳，身死人手，为天下笑者，何也？仁义不施而攻守之势异也。</p>
</blockquote>
<p>​
为了得出这个“仁义不施，攻守异势”的结论，戏剧性的大转折，显然是为了从形式上取得更雄辩的效果。为了这种戏剧性，作者对历史作了省略。对于不可一世的秦国灭亡之原因，仅仅归结为陈涉一人之力，“一夫作难而七庙隳”，显然并不全面。与陈涉同年起义的至少还有刘邦、项羽，在陈涉称王同年，武信君称赵王，田儋称齐王，韩广称燕王，群雄并起，其中有贵族，并非仅仅是草民。陈涉后来屡屡被秦将章邯所败，最后被他自己的驭手杀害。真正把秦都攻克的是项羽，统一全国的是刘邦。为突出极弱战胜极强的戏剧性，展示出雄辩的气势，作者很有气魄地把所有这一切都省略了。</p>
<p>​
从文章内容上来看，作者的结论“仁政不施，攻守异势”，并不全面。似乎，仁政施，则攻成，不施，则守败。但是，作者所概括秦国攻成与仁政无关，而守败，则与暴政有关。在这一点上，《过秦论》（中）倒是有比较中肯的观点：“秦离战国而王天下，其道不易，其政不改，是其所以取之守之者无异也。”意思是，夺取天下和治理天下，规律是不一样的。可惜的是，《过秦论》（中）也没有作充分的矛盾的分析，没有作雄辩的展开，只是单方面宣称如果施仁政，则不至于灭亡。文章在内涵上，也许对《过秦论》（上）有所补充，但是，在概括力上，在雄辩性艺术上，则大为逊色。故历史古文选本皆其上篇，而忽略其中篇和下篇。</p>
<p>​
《过秦论》（上）思想上的局限，无疑不是贾谊个人的，而是追求仁政理想的汉初儒生群体。从文章写作的立意以及雄辩的风格来说，则无疑是贾谊不朽的创造。</p>
<p>（选自《语文建设》2013年第10期，有改动）</p>]]></content>
      <categories>
        <category>High School</category>
        <category>Chinese</category>
        <category>Classical Chinese Literature and Poetry</category>
      </categories>
      <tags>
        <tag>School Notes</tag>
        <tag>High School</tag>
        <tag>Chinese</tag>
      </tags>
  </entry>
  <entry>
    <title>屈原列传-司马迁</title>
    <url>/2022/03/14/chinese/High%20School/Classical%20Chinese%20Literature%20and%20Poetry/%E9%80%89%E6%8B%A9%E6%80%A7%E5%BF%85%E4%BF%AE/%E5%B1%88%E5%8E%9F%E5%88%97%E4%BC%A0-%E5%8F%B8%E9%A9%AC%E8%BF%81/</url>
    <content><![CDATA[<h2 id="课文解读">课文解读</h2>
<p>​
本文是《史记·屈原贾生列传》中关于屈原的部分，入教材时略作删节。屈原其人其事，先秦史籍均未载；贾谊的《吊屈原赋》大概是目前所见第一篇与屈原有关的文章。至司马迁撰《史记》方为屈原专门作传，概述其生平事迹。我们现在了解屈原的生平事迹，除了从其作品中管窥蠡测，基本是靠这篇传记。大概是因为贾谊与屈原皆怀才不遇，命运相似，贾谊又作过凭吊屈原的文章，所以司马迁将二人合在一起作传。</p>
<p>​
司马迁因李陵一案被汉武帝处以腐刑，慷慨激愤，无以言表，但为创作《史记》只好忍辱含垢，苟且偷生。其人生命运与屈原类似，于是将其引为知音。他在《报任安书》中列举众多贤圣事例，其中也提到屈原，说：“屈原放逐，乃赋《离骚》；……此人皆意有所郁结，不得通其道，故述往事，思来者。”（《史记·太史公自序》中的说法与此大同小异。）以屈原著《离骚》自况《史记》的撰写，因二者皆“意有所郁结”而成正因为有这种惺惺相惜的情感，司马迁为屈原所作的这篇传记，别具一格，字里行间洋溢着浓厚的赞颂、同情、悲叹之情，与一般传记的客观实录、隐藏观点颇为不同，更像一篇怀人的散文；而且文章夹叙夹议，叙评结合，有些段落议论甚至超过叙事，更像一篇人物评传。</p>
<p>​
先看叙事方面。叙事是这篇文章的骨架，这是作为传记的内在规定性。文章按照事件顺序，叙述了屈原一生的主要事迹，凸显其以爱国、志洁为核心的思想品质，抒发了作者对屈原热烈的赞颂之情。文章以概括性叙述为主，除倒数第3段外，较少对人物的细致描写，也没有生动曲折的故事情节；中间又大段叙述楚国日渐衰弱的历史事实，从侧面表现屈原的高瞻远瞩，凸显其与国家命运之息息相关。</p>
<p>​ 屈原的一生，可概括为四个阶段：</p>
<p>​
一是“王甚任之”阶段。主要在第1段。屈原出身贵族，担任楚怀王左徒，因“博闻强志，明于治乱，娴于辞令”，在内图议国事，发布政令，在外接待宾客，外交诸侯，都能应付裕如，展现出超强的才干，因而深受楚王信任。这里既凸显其才华，也为下文张本。正因“博闻强志”，熟悉古史，故能撰述《离骚》，“上称帝喾，下道齐桓，中述汤、武，以刺世事”。正因为“明于治乱”，故《离骚》中“明道德之广崇，治乱之条贯，靡不毕见”；明了国家治乱规律，知忠奸之分，故能严明法度，举贤授能，且论断得当（文中叙述他的两次劝谏，均为的论）；而一旦他被贬黜在外，无从“竭忠尽智以事其君”，则朝中奸邪群集，惑主乱政，终致国家倾亡。正因为“娴于辞令”，所以屈原两次被委派“使于齐”（据《新序·节士》“屈原为楚东使于齐，以结强党，第3段所云“齐与楚从亲”，或许是屈原第一次“使于齐”；后来，楚国绝齐，为秦国所败，屈原“使于齐”，可能是楚王重新起用他）；而一旦他被流放在外，联齐抗秦主张被废弃，则楚国陷入外交困局，举措失当。</p>
<p>​
二是“王怒而疏”阶段。主要是文章第27段。所谓“木秀于林，风必摧之”，屈原怀瑾握瑜，锋芒毕露，终遭嫉恨，他在《离骚》中形象地说：“众女疾余之蛾眉兮，谣诼谓余以善淫。”文章第2段所举上官大夫也许只是“众女”之一，其人欲夺草稿而屈原不与，也仅是正直与奸佞斗争的一个事例，但群小的无中生有、无事生非，终于蛊惑了楚王，使得楚王“怒而疏屈平”，此后又被黜，罢免了左徒一职，远离了政治权力的中心。屈原“正道直行，竭忠尽智以事其君”却因“谗人间之”，“信而见疑，忠而被谤”，因而“疾王听之不聪也，谗谄之蔽明也，邪曲之害公也，方正之不容也”，内心“忧愁幽思”，于是创作了《离骚》，表白自己高洁的志向，发泄内心的郁结与苦闷。文章第4—7段，叙述了楚国在屈原被之后，为秦国和其他诸侯国侵凌，日削月割，内外交困的情形。先是怀王惑于群小，为张仪利诱，背信弃义，与齐国绝交，导致外无强援。接着，怀王盛怒，“大兴师伐秦”，兵败，失去汉中之地；又“悉发国中兵，以深入击秦”为魏偷袭，陷于“大困”；“其后诸侯共击楚，大破之”。这中间，又内惑于宠臣靳尚、宠姬郑袖放走张仪。最终，怀王听信子兰，入武关与秦昭王会，却被扣留在秦，三年后客死异国。</p>
<p>​
这大段叙述中，涉及屈原的只有两处，一是劝怀王杀张仪，未果；二是劝止怀王赴秦王会，不听。堂堂一国之君被张仪玩弄于股掌之中，足见楚国上下之昏聩。屈原虽被疏远，却直言劝谏，显示出其精忠尽职，且思虑周详；“秦，虎狼之国不可信”，这一基本判断，与《廉颇蔺相如列传》中蔺相如所云“秦自缪公以来二十余君，未尝有坚明约束者也”类似，显示出屈原对秦国的清醒认知和远见卓识。粗看起来，这些叙述似与屈原无关，有跑题之嫌，细究起来，却是很高明的写法：其一，作者将屈原的命运置于社会历史的大背景中表现，通过叙述一系列重大历史事件，展现出人物的个人遭际与国家命运的息息相关，表现出屈原这样的优秀人物在历史滚滚车轮中的无力感，寄寓着浓重的悲剧意味。其二，楚国的内外交困是怀王的昏聩贪婪以及靳尚、郑袖、子兰等人的谄媚奸邪造成的，他们构成了屈原的对立面，从反面烘托了屈原的才能、智慧与爱国精神。其三，张仪受秦王重用，凭借三寸不烂之舌，胜过百万雄兵，这也凸显出屈原这样的忠臣贤者对国家的重要价值，也为下文的议论张本。</p>
<p>​
三是“放流”阶段。主要在第8段。怀王为秦所困，楚人立太子为王，是为顷襄王，以子兰为令尹。这个谗邪的小人当政，屈原自然不容于朝，不久就被“放流”在外。具体放流的原因和时间、地点，文中没有交代，从上下文看很突兀；按上下文语义，“既嫉之”的“之”指代的应是子兰“劝怀王人秦而不反”一事，又与下文“系心怀王”“卒以此见怀王之终不悟也”矛盾：这是本文的一大悬案。所以有学者认为此处存在错简或脱漏，应将第9段整体移到“屈原既嫉之”与“虽放流”之间，但并无其他佐证；也有学者以为“放流”应理解为“放浪”，即放浪形骸，四处游历：均可备一说。从现有文本看，也许这次“放流”是在顷襄王初立时，放逐地在汉北（屈原在《九章·抽思》中写道“有鸟自南兮，来集汉北”，或可为证）。彼时怀王尚未死于秦，所以屈原在放逐之中，仍旧“眷怀楚国，系心怀王，不忘欲反”，并且希望怀王能够醒悟，发愤图强，改变上下昏聩的情形。这些思想和愿望，表现在他的一些篇章中，如《九章·抽思》云：“惟郢路之辽远兮，魂一夕而九逝。曾不知路之曲直兮，南指月与列星。”如《九章·哀郢》云：“楫齐扬以容与兮，哀见君而不再得。……过夏首而西浮兮，顾龙门而不见。……羌灵魂之欲归兮，何须臾而忘反？背夏浦而西思兮，哀故都之日远。……惟郢路之辽远兮，江与夏之不可涉。忽若去不信兮，至今九年而不复。……乱曰：曼余目以流观兮，冀一反之何时。鸟飞反故乡兮，狐死必首丘。信非吾罪而弃逐兮，何日夜而忘之！”文中所说“其存君兴国而欲反覆之兮，一篇之中三致志焉”，指的就是这些缠绵留恋、深沉痛切的篇章。所谓“一篇”只是泛指，并非确指某一篇。但怀王始终并未醒悟，屈原也未被召回。</p>
<p>​
四是“王怒而迁”阶段。主要是第9、10两段。屈原“放流”后，也许曾被顷襄王召回，但很快再次被迁逐（也许并未被召回，而是从江北迁逐至江南）。据游国恩先生考证，此事在顷襄王十三年。至于原因，显然是屈原再次触怒了子兰，于是子兰指使上官大夫在顷襄王面前诋毁屈原，于是“王怒而迁之”。第9段中，“令尹子兰闻之”的“之”指代并不明确，与上文不连属，也许流传中有讹脱。</p>
<p>​
经历两次放逐的屈原，此时已是心灰意冷，开始放浪形骸，原先高冠博带、风姿瑰玮的三闾大夫，披头散发，“颜色憔悴，形容枯槁”。江边的一位渔父（可能是位隐士，也可能是屈原作品中虚拟的人物，类似于《赤壁赋》主客问答的形式）与其有一番对话。第一轮对话，交代了屈原被放逐的原因——“举世混浊”“众人皆醉，而“我独清”“独醒”。这是时代的悲剧，有时也是人性的悲剧。第二轮对话，以两种人生态度的对比，指出屈原正道直行的人生选择，凸显其高洁的品质和高贵的理想。面对“举世混浊”“众人皆醉”的现实，要么放弃理想，随波逐流，与众人同流合污，失去的是理想，收获的却是实利；而坚守理想，保持自身高洁品性，不受尘世“温蠖”的玷辱，怀瑾握瑜，清洁其身，失去的是利益甚至生命，收获的则是可“与日月争光”的崇高。屈原选择了后者，表达“宁赴常流而葬乎江鱼腹中”也不会与众人同流合污的决绝态度。随之写下生命的绝唱《九章·怀沙》，再次表露心迹，希望以自己之死警醒世人，“于是怀石，遂自投汨罗以死”。这一段取材于屈原的《渔父》，几乎照搬，既是屈原自述其志，又是太史公借转述以表达赞美和礼敬，可以说是寓评于叙。</p>
<p>​
第11段叙述屈原对后世的影响，包括文学和政治两方面。屈原自沉之后，“宋玉、唐勒、景差之徒”继承了他的文学主张，创作辞赋，祖述其“从容辞令”；但遗憾的是，无人继承他的高洁志向、他的政治主张，无人敢于直言劝谏，自然也无人能挽狂澜于既倒。因而，楚国日益没落，日削月割，数十年后，终于为秦所灭。屈原的自沉，竟唱出了强楚的挽歌，预示着楚国大幕的即将落下。文章将屈原的生死与楚国的存亡对照来写，凸显出屈原之于楚国的价值和意义，也是寓评于叙的写法。</p>
<p>​
再看议论方面。文章“传”“评”结合，或寓评于叙，或夹叙夹评，或篇末总评。寓评于叙例，见上文对第10段和第11段的评述；夹叙夹评主要是第3段和第7段；篇末总评则是第12段的论赞语。</p>
<p>​
第3段，评屈原《离骚》，包含三个层次。先是创作论。司马迁认为屈原“忧愁幽思而作《离骚》”，“盖自怨生也”。屈原虽正道直行、竭忠尽智，却因楚王不聪、谗谄蔽明、邪曲害公而被疏远，甚至不容于世，陷入穷困境地。“意有所郁结，不得通其道，……终不可用”，故“退而论书策，以舒其愤，思垂空文以自见”。这是司马迁在《报任安书》中主张的“发愤著书”说，这既是对屈原创作理念的认识，又何尝不是对自己作《史记》或者写作此传意图的一个自我表白？后人评价说：“史公与屈子，实有同心。”于此可见。</p>
<p>​
次为作品论。先谈风格。司马迁认为，《离骚》虽“自怨生”，但兼有“《国风》好色而不淫，《小雅》怨诽而不乱”的特点。“好色而不淫”，是说《离骚》善用香草美人为喻，隐喻政治理想，“寓情草木，托意男女”却不失分寸；“怨诽而不乱”是说《离骚》虽怨气郁结，好发牢骚，却始终眷恋祖国，心系怀王，不忘欲返，“冀幸君之一悟，俗之一改也”，因而并不暴乱无度。次谈内容宗旨。诗中“上称帝喾，下道齐桓，中述汤、武”，一方面是赞美古圣先王，讽谏国君要做有为君主，如“彼尧舜之耿介兮，既遵道而得路”“汤禹俨而祗敬兮，周论道而莫差”；一方面称引他们举贤任能的佳话，讽谏国君远小人亲贤臣，如“吕望之鼓刀兮，遭周文而得举。宁戚之讴歌兮，齐桓闻以该辅”。诗中还张扬广大崇高的道德，陈述国家治理的条理，而这样的内容，宗旨就是为了修明政治，即“以刺世事”。再谈特点。总括起来即“其文约，其辞微，其志洁，其行廉”。文约辞微是行文特点，也即“其称文小而其指极大，举类迩而见义远”；志洁行廉是内容特点，也即“称物芳”“死而不容”。“称物芳”指的是《离骚》中多以善鸟香草“配忠贞”，以宓妃佚女“譬贤臣”，以虬龙鸾凤“托君子”；“死而不容”指的是《离骚》中反复陈说的自己为群小所嫉、不容于世的处境。</p>
<p>​
最后是作家论。读《离骚》，能想见屈原其人。“其志洁，其行廉”，始终不与奸邪小人同流合污，保持高洁品质。文中连用五句意思相同的话语以强调的方式表现屈原心怀家国、至死不渝的心志和节操，并评价说：“推此志也，虽与日月争光可也。”这可以说是极高的评价。</p>
<p>​
第7段，先引述屈原作品，凸显其“眷恋祖国，系心怀王”的家国情怀；再评楚国没落的根本原因。文章指出，作为君主，没有不希望国家富强的，因而也都希望得到忠臣贤良辅佐自己；但历史的吊诡之处就在于，亡国破家的事代有发生，而“圣君治国累世而不见”。究其原因，司马迁认为“其所谓忠者不忠，而所谓贤者不贤也”，即不辨忠奸，将奸邪视为贤才，将贼子视为忠臣，而将真正的贤才忠臣屏退在外。楚怀王的错误就在于此他“内惑于郑袖，外欺于张仪”，将上官大夫、令尹子兰视为忠贤，而将正道直行的屈原罢黜在外。最终，既无忠臣以“自为”，又无贤者以“自佐”，“兵挫地削，亡其六郡，身客死于秦，为天下笑”，且至死不悟。这段评论，也从一个侧面凸显了屈原在楚国国运兴衰中的重要价值。</p>
<p>​
第12段为篇末总评，蕴含浓厚情感。从前两句可见这篇传记的资料来源，一是屈原的作品，二是实地探访。太史公自述读其文，则“悲其志”；观其“所自沉渊”，则“未尝不垂涕，想见其为人”。悲悯、哀叹、仰慕、赞颂，各种崇高情感一时涌上心头。但与一般读者不同，太史公“悲其志”，既是“哀其不遇，而愍其志”，又有自伤其身，跨越时空与屈原遥相接应，共振共鸣的复杂情感掺杂其中。“及见贾生吊之，又怪屈原以彼其材。游诸侯，何国不容，而自令若是！”贾谊在《吊屈原赋》中认为屈原“逢时不祥”，对屈原寄予深切同情，同时指出池小容不下大鱼，完全可以“历九州而相其君”，“何必怀此都也？太史公引述此语，看上去似乎同意贾谊看法，对屈原执着于楚国而自沉的人生选择有所不解，试图为他寻找另一条路途。这里的“怪”，非“责怪”之义，而是“讶异、不解”之义。这可以理解为一句愤激之词，其中寓含着对屈原的深深同情。刘永济先生从前后文意角度看待此句，认为：“太史公此语，故为跌宕之词。”（《屈赋通笺》）即司马迁暂时认同这一观点，落脚点却在下句：“读《服鸟赋》，同死生，轻去就，又爽然自失矣。”《服鸟赋》是贾谊的著名辞赋，借与服鸟的问答抒发忧愤抑郁之情，并以老庄的齐生死、等祸福的思想自我解脱。“爽然自失”，形容茫然若有所失。“《服》赋多道家言，于同生死、轻去就之理，反复陈说，以自广其沉郁之情。屈子非不知此，特以宗臣之义，与国同休戚，且其所学与其所处，亦异贾生，故不为耳。子长读《服》赋而自失以此。”（刘永济《屈原赋通》）屈原《离骚》中自称“帝高阳之苗裔兮”，是“楚之同姓，与楚国血脉相连，“以彼其材，游诸侯”，虽能“容于世”，但以其身份必不为；同死生、轻去就，即《渔父》所云“圣人不凝滞于物，而能与世推移”，也即随波逐流，屈原已明己志，以其志向也必不为。所以，司马迁茫然自失。</p>
<p>​
综上，这篇传记通过对屈原生平的简略叙述和评论，揭示了屈原个人的身世浮沉与国家生死存亡的内在联系，充分彰显了他的爱国精神和正道直行、无所阿容的品德。在艺术手法上，夹叙夹议，寓评于叙，叙中寄情，议中寓情，处处流露出作者的郁郁不平之气和对屈原命运的叹惋，体现出二人跨越时空的精神联通。</p>
<h2 id="参考资料">参考资料</h2>
<h3 id="参考译文">参考译文</h3>
<div class="classcial-chinese-literature-and-poetry-translation"><div class="paragraph"><p class="original-text">屈原者，名平，楚之同姓也。</p><p class="translation">屈原，名平，是楚王的同族。他担任楚怀王的左徒。</p><p class="original-text">为楚怀王左徒。博闻强志，明于治乱，娴于辞令。</p><p class="translation">知识广博，长于记忆，明晓国家治乱（的道理），擅长外交辞令。</p><p class="original-text">入则与王图议国事，以出号令；出则接遇宾客，应对诸侯。王甚任之。</p><p class="translation">对内与怀王谋划计议国家大事，以发号施令；出外接待宾客，应酬诸侯。怀王很信任他。</p></div><div class="paragraph"><p class="original-text">上官大夫与之同列，争宠而心害其能。</p><p class="translation">上官大夫和屈原地位相同，想争得怀王的宠爱，嫉妒屈原的才能。</p><p class="original-text">怀王使屈原造为宪令，屈平属草稿未定。</p><p class="translation">怀王让屈原制定国家法令，屈原撰写草稿尚未定稿，</p><p class="original-text">上官大夫见而欲夺之，屈平不与，因谗之曰：</p><p class="translation">上官大夫见了想强取为己有，屈原不同意。于是上官大夫就向怀王谗毁屈原说：</p><p class="original-text">“王使屈平为令，众莫不知。每一令出，平伐其功，曰以为‘非我莫能为也。’”王怒而疏屈平。</p><p class="translation">“大王让屈原制定法令，大家没有不知道的。每一项法令发出，屈原就夸耀自己的功劳，说‘除了我，没有谁能做’。”怀王很生气，就疏远了屈原。</p></div><div class="paragraph"><p class="original-text">屈平疾王听之不聪也，谗谄之蔽明也，邪曲之害公也，方正之不容也，故忧愁幽思而作《离骚》。</p><p class="translation">屈原痛心于楚怀王惑于小人之言，不能明辨是非，说人坏话、奉承谄媚的小人混淆黑白，蒙蔽怀王，品行不正的小人损害国家，端方正直的人不为（昏君谗臣）所容，所以忧愁苦闷郁结于心，写下了《离骚》。</p><p class="original-text">“离骚”者，犹离忧也。</p><p class="translation">“离骚”，相当于“遭遇忧患”的意思。</p><p class="original-text">夫天者，人之始也；父母者，人之本也。</p><p class="translation">天，是人类的本源；父母，是人的根本。</p><p class="original-text">人穷则反本，故劳苦倦极，未尝不呼天也；疾痛惨怛dá，未尝不呼父母也。</p><p class="translation">人困窘没有出路，就会追念根本，所以疲倦困苦的时候，没有不向天呐喊求助的；遇到病痛或内心忧伤悲痛的时候，没有不呼唤父母的。</p><p class="original-text">屈平正道直行，竭忠尽智以事其君，谗人间之，可谓穷矣。</p><p class="translation">屈原坚持正道，遵照道义行事，竭尽自己的忠诚和智慧来侍奉君主，谗邪的小人离间他，可以说处于困境中了。</p><p class="original-text">信而见疑，忠而被谤，能无怨乎？</p><p class="translation">诚实不欺却被怀疑，忠贞不贰却被毁谤，能没有怨恨吗？</p><p class="original-text">屈平之作《离骚》，盖自怨生也。</p><p class="translation">屈原写《离骚》，大概是由怨愤引起的。</p><p class="original-text">《国风》好色而不淫，《小雅》怨诽而不乱。若《离骚》者，可谓兼之矣。</p><p class="translation">《国风》好描写男女恋情但不失分寸，《小雅》怨愤发牢骚但不坏乱礼法。像《离骚》，可以说是兼有二者的特点了。</p><p class="original-text">上称帝<ruby><rb>喾</rb><rt>kù</rt></ruby>，下道齐桓，中述汤、武，以刺世事。</p><p class="translation">往远处说提到帝喾，往近处说提到齐桓公，中间称述商汤、周武王，以此讥刺当世的事。</p><p class="original-text">明道德之广崇，治乱之条贯，靡不毕见。</p><p class="translation">阐明道德的广大崇高、国家治乱兴亡的条理，无不透彻明白。</p><p class="original-text">其文约，其辞微，其志洁，其行廉。</p><p class="translation">他的文笔简约，文辞含蓄隐晦，志趣高洁，行为端正。</p><p class="original-text">其称文小而其指极大，举类迩而见义远。</p><p class="translation">其文辞描写的是寻常事物，但是它的意旨却极为博大（因为关系到国家的治乱），列举的事例浅近，而表达的意思很深远。</p><p class="original-text">其志洁，故其称物芳；其行廉，故死而不容。</p><p class="translation">由于志趣高洁，所以作品中称述的事物也是芬芳的（《离骚》里面多用美人香草来比喻）；由于行为端正，所以至死不容于世。</p><p class="original-text">自疏濯<ruby><rb>淖</rb><rt>nào</rt></ruby>污泥之中，蝉蜕于浊秽，以浮游尘埃之外，不获世之滋垢，<ruby><rb>皭</rb><rt>jiào</rt></ruby>然<ruby><rb>泥</rb><rt>niè</rt></ruby>而不<ruby><rb>滓</rb><rt>zǐ</rt></ruby>者也。</p><p class="translation">他自动地远离污浊，像蝉脱壳那样摆脱污秽的境地，以浮游于尘世之外，不为尘世的污垢所辱，出淤泥而不染，保持高洁的品德。</p><p class="original-text">推此志也，虽与日月争光可也。</p><p class="translation">推赞他的这种志向，即使与日月争辉也是可以的。</p></div><div class="paragraph"><p class="original-text">屈原既绌，其后秦欲伐齐，齐与楚<ruby><rb>从</rb><rt>zòng</rt></ruby>亲，惠王患之。</p><p class="translation">屈原已被罢免，此后秦国准备攻打齐国，齐国和楚国合纵相亲。秦惠王很担忧，</p><p class="original-text">乃令张仪佯yáng去秦，厚币委质事楚，曰：</p><p class="translation">就令张仪假装离开秦国，拿着丰厚的礼物进献给楚国，表示愿意侍奉楚王，说：</p><p class="original-text">“秦甚憎齐，齐与楚从亲，楚诚能绝齐，秦愿献商於之地六百里。”</p><p class="translation">“秦国非常憎恨齐国，齐国与楚国合纵相亲，如果楚国确实能与齐国断绝外交关系，秦国愿意献上商於六百里的土地。”</p><p class="original-text">楚怀王贪而信张仪，遂绝齐，使使如秦受地。</p><p class="translation">楚怀王贪心而听信张仪，于是与齐国绝交派使者到秦国接受秦国答应割让的土地。</p><p class="original-text">张仪诈之曰：“仪与王约六里，不闻六百里。”</p><p class="translation">张仪欺骗他说：“我和大王您约定的只是六里的地方，没有听说过六百里。”</p><p class="original-text">楚使怒去，归告怀王。怀王怒，大兴师伐秦。</p><p class="translation">楚国使者愤怒地离开秦国，回去报告怀王。怀王大怒，大规模出动军队讨伐秦国。</p><p class="original-text">秦发兵击之，大破楚师于丹、淅，斩首八万，虏楚将屈<ruby><rb>匄</rb><rt>gài</rt></ruby>，遂取楚之汉中地。</p><p class="translation">秦国发兵反击，在丹水、淅水一带大破楚军杀了八万人，俘虏了楚国大将屈匄，于是夺取了楚国的汉中一带。</p><p class="original-text">怀王乃悉发国中兵，以深入击秦，战于蓝田。</p><p class="translation">怀王于是尽发全国之兵，深入秦国境内攻打秦国，在蓝田交战。</p><p class="original-text">魏闻之，袭楚至邓。楚兵惧，自秦归。而齐竟怒不救楚，楚大困。</p><p class="translation">魏国知道这一情况，趁机袭击楚国，一直打到邓地。楚军恐惧，从秦国撤退。而齐国终究因为气愤而不来援救楚国，楚国处境极为艰难。</p></div><div class="paragraph"><p class="original-text">明年，秦割汉中地与楚以和。</p><p class="translation">第二年，秦国割让汉中之地给楚国以求讲和。</p><p class="original-text">楚王曰：“不愿得地，愿得张仪而甘心焉。”</p><p class="translation">楚王说：“我不愿得到土地，只希望得到张仪就甘心了。”</p><p class="original-text">张仪闻，乃曰：“以一仪而当汉中地，臣请往如楚。”</p><p class="translation">张仪知道后，就说：“用一个张仪来抵当汉中之地，我请求前往楚国。”</p><p class="original-text">如楚，又因厚币用事者臣靳尚，而设诡辩于怀王之宠姬郑袖。</p><p class="translation">到了楚国，他又趁机送厚礼给楚国当权的臣子靳尚，让他在怀王宠姬郑袖面前说假话。</p><p class="original-text">怀王竟听郑袖，复释去张仪。</p><p class="translation">怀王最终听信了郑袖的话，又放走了张仪。</p><p class="original-text">是时屈原既疏，不复在位，使于齐，顾反，谏怀王曰：</p><p class="translation">这时屈原已被疏远，不再在原来的职位上，出使到齐国，回来后，劝谏怀王说：</p><p class="original-text">“何不杀张仪？”怀王悔，追张仪，不及。</p><p class="translation">“为什么不杀张仪？”怀王很后悔，派人追张仪，没追上。</p></div><div class="paragraph"><p class="original-text">其后，诸侯共击楚，大破之，杀其将唐<ruby><rb>眜</rb><rt>mò</rt></ruby>。</p><p class="translation">此后各国诸侯联合攻打楚国，大败楚军，杀了楚国将领唐眜。</p></div><div class="paragraph"><p class="original-text">时秦昭王与楚婚，欲与怀王会。</p><p class="translation">这时秦昭王与楚国通婚，想要与怀王会晤。</p><p class="original-text">怀王欲行，屈平曰：“秦，虎狼之国，不可信，不如毋行。”</p><p class="translation">怀王想要去，屈原说：“秦国是虎狼一样的国家，不可信任。不如不去。”</p><p class="original-text">怀王稚子子兰劝王行：“奈何绝秦欢！”</p><p class="translation">怀王的小儿子子兰劝怀王前去，说：“为什么要断绝与秦国的友好关系呢？”</p><p class="original-text">怀王卒行。入武关，秦伏兵绝其后，因留怀王，以求割地。</p><p class="translation">怀王终于前往。进入武关，秦国埋伏军队断了他的后路，于是扣留怀王来强求楚国割让土地。</p><p class="original-text">怀王怒，不听。亡走赵，赵不内。</p><p class="translation">怀王很愤怒，不答应。他逃往赵国，赵国不肯接纳。</p><p class="original-text">复之秦，竟死于秦而归葬。</p><p class="translation">又到秦国，最后死在秦国才回国安葬。</p></div><div class="paragraph"><p class="original-text">长子顷襄王立，以其弟子兰为令尹。</p><p class="translation">怀王的长子顷襄王即位，任用他的弟弟子兰为令尹。</p><p class="original-text">楚人既咎子兰以劝怀王入秦而不反也。</p><p class="translation">楚国人都怪罪子兰劝怀王入秦而致其未能回来。</p><p class="original-text">屈平既嫉之，虽放流，眷顾楚国，系心怀王，不忘欲反。</p><p class="translation">屈原痛恨子兰，虽然被流放，仍然眷恋楚国，挂念怀王，念念不忘想要返回朝廷，</p><p class="original-text">冀幸君之一悟，俗之一改也。其存君兴国而欲反复之，一篇之中三致志焉。</p><p class="translation">盼望国君能彻底悔悟，风俗能完全改变。屈原思念君王、振兴国家而想要使楚国回归富强局面的意愿，在一篇作品中再三表达出来。</p><p class="original-text">然终无可奈何，故不可以反。卒以此见怀王之终不悟也。</p><p class="translation">然而终于无可奈何，所以不能够返回朝廷。终于由此看出怀王终究没有醒悟。</p><p class="original-text">人君无愚、智、贤、不肖，莫不欲求忠以自<ruby><rb>为</rb><rt>wèi</rt></ruby>，举贤以自佐。</p><p class="translation">国君无论愚笨或明智、贤明或昏庸，没有不想求得忠臣来帮助自己，选拔贤才来辅佐自己的。</p><p class="original-text">然亡国破家相随<ruby><rb>属</rb><rt>zhǔ</rt></ruby>，而圣君治国累世而不见者，</p><p class="translation">然而国破家亡的事接连出现，而圣明的君主、安定太平的国家却多少世代也难以见到，</p><p class="original-text">其所谓忠者不忠，而所谓贤者不贤也。</p><p class="translation">这是因为他认为是忠臣的人并不忠诚，认为是贤臣的人并不贤明。</p><p class="original-text">怀王以不知忠臣之分，故内惑于郑袖，外欺于张仪，</p><p class="translation">怀王因为不明白忠臣的职分，所以在内被郑袖所迷惑，在外被张仪所欺骗，</p><p class="original-text">疏屈平而信上官大夫、令尹子兰，兵挫地削，亡其六郡，身客死于秦，为天下笑，此不知人之祸也。……</p><p class="translation">疏远屈原而信任上官大夫、令尹子兰，军队遭到挫败，土地被削割，失去了汉中一带的六个郡，自己客死于秦国，被天下人所耻笑。这是不能知人善任所招致的祸患啊。……</p></div><div class="paragraph"><p class="original-text">令尹子兰闻之，大怒。卒使上官大夫短屈原于顷襄王。顷襄王怒而迁之。</p><p class="translation">令尹子兰得知屈原怨恨他，非常愤怒，终于指使上官大夫在顷襄王面前诋毁屈原，顷襄王发怒，就放逐了屈原。</p></div><div class="paragraph"><p class="original-text">屈原至于江滨，<ruby><rb>被</rb><rt>pī</rt></ruby>发行吟泽畔，颜色憔悴，形容枯槁。</p><p class="translation">屈原到了江边，披散头发，在水边一面走一面吟咏着，脸色憔悴，外貌像干枯的树木一样。</p><p class="original-text">渔父见而问之曰：“子非三闾大夫欤？何故而至此？”</p><p class="translation">有个渔翁看见他，问他说：“您不是三闾大夫吗？为什么来到这儿？”</p><p class="original-text">屈原曰：“举世混浊而我独清，众人皆醉而我独醒，是以见放。”</p><p class="translation">屈原说：“整个世界都是污浊的，只有我一人清白，众人都昏醉了，只有我一人清醒，因此被放逐。”</p><p class="original-text">渔父曰：“夫圣人者，不凝滞于物，而能与世推移。</p><p class="translation">渔翁说：“聪明通达的人，不被外物所拘束，而能够随世道变化而变化。</p><p class="original-text">举世皆浊，何不随其流而扬其波？</p><p class="translation">整个世界都是污浊的，为什么不随从世俗，与之同流？</p><p class="original-text">众人皆醉，何不餔（饣甫）其糟而啜其醨？何故怀瑾握瑜，而自令见放为？”</p><p class="translation">众人都昏醉了，为什么不吃众人的酒，众人的薄酒（与众人同醉）？为什么要怀抱美玉一般高洁美好的志向节操，而使自己被放逐呢？”</p><p class="original-text">屈原曰：“吾闻之，新沐者必弹冠，新浴者必振衣。</p><p class="translation">屈原说：“我听说，刚洗过头的人一定要弹去帽子上的灰尘，刚洗过澡的人一定要抖掉衣服上的尘土。</p><p class="original-text">人又谁能以身之察察，受物之汶汶者乎？</p><p class="translation">作为一个人又有谁愿意让自己的清白，蒙受外物的污呢？</p><p class="original-text">宁赴常流而葬乎江鱼腹中耳，又安能以晧hào晧之白，而蒙世之温<ruby><rb>蠖</rb><rt>huò</rt></ruby>乎？”</p><p class="translation">我宁可投入江水，葬身于鱼腹中，又哪能拿自己高洁的品质，去蒙受世俗的尘垢呢？”</p><p class="original-text">乃作《怀沙》之赋。……于是怀石，遂自投汨罗以死。</p><p class="translation">他就写了《怀沙》赋。……于是抱着石头，自投罗江而死。</p></div><div class="paragraph"><p class="original-text">屈原既死之后，楚有宋玉、唐勒、景差之徒者，皆好辞而以赋见称。</p><p class="translation">屈原死后，楚国有宋玉、唐勒、景差这一班人，都爱好文学，而以善于作赋被称赞；</p><p class="original-text">然皆祖屈原之从容辞令，终莫敢直谏。</p><p class="translation">但他们都继承屈原文辞委婉得体的一面，始终不敢像屈原那样直言进谏。</p><p class="original-text">其后楚日以削，数十年竟为秦所灭。……</p><p class="translation">此后楚国领土一天天缩小，终于被秦国灭掉。……</p></div><div class="paragraph"><p class="original-text">太史公曰：“余读《离骚》、《天问》、《招魂》、《哀<ruby><rb>郢</rb><rt>yǐng</rt></ruby>》，悲其志。</p><p class="translation">太史公说：“我读《离骚》《天问》《招魂》《哀郢》，为他的志向不能实现而哀怜。</p><p class="original-text">”适长沙，观屈原所自沉渊，未尝不垂涕，想见其为人。</p><p class="translation">“到长沙十年后，看到屈原自沉的地方、未尝不流下眼泪，推想他的为人。</p><p class="original-text">“及见贾生吊之，又怪屈原以彼其材，游诸侯，何国不容，而自令若是！</p><p class="translation">”等看到贾谊写文章凭吊他，又奇怪屈原如果凭他那样的才能去游说诸侯，哪个国家不会容纳，却自己选择了这样的道路！</p><p class="original-text">“读《鵩鸟赋》，同死生，轻去就，又爽然自失矣。”</p><p class="translation">”读了《服鸟赋》，看到他将生死等同看待，把离官去职或在朝任职看得很轻，又茫然若有所失了”</p></div></div>
<h3 id="参考文献">参考文献</h3>
<h4 id="关于史记屈原列传about_shiji_quyuanliezhuan">关于《史记·屈原列传》<span class="citation" data-cites="About_Shiji_Quyuanliezhuan">[@About_Shiji_Quyuanliezhuan]</span></h4>
<h5 id="一">（一）</h5>
<p>​
屈原不但是伟大的爱国主义诗人，而且也是有影响的政治家；官至楚国左徒，地位华贵，仅次于令尹（楚国官制，令尹相当于后世的宰相）。令人感到奇怪的是，先秦书籍中竟没有提到他。屈原是坚定的合纵者，主张联齐抗秦；不但有议论，而且有实际行动。《战国策》记了屈原前后以及和屈原同时的许多纵横家，其中有一些人比屈原的作用小得多；但《战国策》没有记屈原。《战国策》录了荀子《赋篇》中的一首短赋，（见《楚四》“客说春申君曰”章），那篇赋无论从内容或是从艺术价值说，远比不上《离骚》；然而《战国策》偏不提到《离骚》。和屈原同时的学者如孟子、庄子等，著作中涉及不少的人，但都没有提到屈原。以后的战国诸子，著书立说，也未谈到屈原。</p>
<p>​
屈原死于公元前278年。一百年多一点之后，西汉著名青年学者、文学家贾谊于前176至前174年被派到长沙做长沙王吴差的太傅，在湖南作了一首《吊屈原赋》。这是一篇最早说起屈原的作品。《史记·屈原贾生列传》说：汉文帝曾采用贾谊的建议，作了一些改革，而且将重用贾谊。而绛侯周勃、滕侯灌婴、东阳侯张相如、御史大夫冯敬忌恨贾谊，向汉文帝诽谤贾谊，使汉文帝疏远了这位才华丰富的青年学者，派他做长沙王的太傅。《汉书·贾谊传》也这样说。《风俗通·正失篇》不尽相同，“孝文帝”一条中则说贾谊当众指责汉文帝嬖爱的邓通，因而被派到长沙。贾谊感到委屈，渡湘水，作《吊屈原赋》，借屈原的遭遇倾吐自己被谗谮的愤慨，指责“闒茸尊显兮，谗谀得志”。这篇赋叙述屈原的部分不多，只说屈原“自沉汨罗”和“逢时不祥”。</p>
<p>​
以后，汉武帝初年（前140—前135），淮南王刘安朝见汉武帝，武帝“使为《离骚传》。旦受诏，日食时上”（见《汉书·淮南王传》。汉武帝命刘安作《离骚传》，早上刘安接受命令，下午就作成交上去）。这是第二篇说到屈原的著作。刘安的《离骚传》已经失传，司马迁《史记·屈原贾生列传》中只保留了它的零碎片段。</p>
<p>​
第三篇说到屈原的著作是司马迁作的《史记，屈原贾生列传》（课文采用的是屈原部分，题为《屈原列传》）。从内容看，这是司马迁在公元前99年受宫刑（又叫“腐刑”，阉割；当时残酷的肉刑之一）之后而作，在屈原死后约两百年。</p>
<p>​
西汉后期大学者刘向（前74一前3）的《新序·节士》中有一条四百多字论述屈原。《新序》是刘向分门别类地钞辑各书而成书的。这一段文章的来源不可考。但它是我们现存的第四篇说到屈原的文章。它和司马迁的记载有同也有异。</p>
<h5 id="二">（二）</h5>
<p>​
如上所述，贾谊《吊屈原赋》中寄托了贾谊个人“逢时不祥”的怨怒。同样，司马迁在《屈原列传》中倾注了司马迁自己“信而见疑，忠而被谤”的愤慨。</p>
<p>​
《史记》中有许多篇列传具有明显的议论和抒情的成分；特别是《伯夷列传》（卷六十一）和这篇《屈原列传》（卷八十四），它们中的抒情和议论的成分，远超过记事和叙述，而成为全篇的主要内容。</p>
<p>​
为了说明《屈原列传》的议论和抒情，先交代一下“李陵事件”。汉武帝天汉二年（公元前99年），汉武帝派李陵带一支五千步兵的军队深入匈奴。行军顺利，汉武帝很喜悦。后来碰上单于（匈奴最高君主，相当汉的皇帝）大军，单于召多于李陵十六倍的骑兵攻陵，李陵一边向南撒退，一边反攻，斩杀上万的匈奴兵。但由于孤军深入，没有接济，没有援兵；加上有个叛徒名叫管敢的，把李陵军队情况告诉匈奴，匈奴知道李陵虚实，围攻加急，李陵在距国境百多里处被困投降。汉武帝知道以后，很愤怒。这是西汉时著名的李陵事件（见《汉书》卷五十四《李陵传》）。</p>
<p>​
李陵行军顺利时，汉的大臣们向汉武帝敬酒庆贺。李陵败降之后，那些原来敬酒庆贺的王公大臣归罪于李陵。汉武帝问司马迁。司马迁据李陵平日的表现，为李陵辩解，说李陵将要在匈奴中为汉立功；而且李陵虽损失了四千多人（五千人出塞，只有四百多人逃回），而斩杀的匈奴兵是汉损失的人数的一倍多，功大于罪。汉武帝以为司马迁替李陵“游说”，欺骗皇帝，加司马迁以腐刑。其实，司马迁和李陵没有私交，并没有欺骗汉武帝而为李陵游说的想法；只是汉武帝问他，他诚实地说了他的意见。司马迁说了诚实话而受刑，是很大的冤屈。因此，在写《屈原列传》时，为屈原忠君爱国而被楚国奸臣毁谤，被楚王流放，发了很多议论，寄托了自己“信而见疑，忠而被谤”的悲愤。《屈原列传》说到君主不分辨谁是忠臣、谁是奸邪，这样的君主将会“亡国破家”，十分慷慨激越。</p>
<h5 id="三">（三）</h5>
<p>​
《史记·屈原列传》主要的内容是抒情和议论。但全篇仍以叙事为线索。抒情和议论是由叙事引导出来，而且附着在所叙的事上的。再者，说抒情和议论的篇幅比叙事浓厚、强烈，不是说抒情和议论的篇幅比叙事长。从篇幅说，
《屈原列传》叙事的篇幅比抒情和议论多些；但是读过《屈原列传》以后，所留下的印象，最深刻的是它的抒情和议论部分。先让我们摸清本篇的脉络：</p>
<p>​ A.
从篇首“屈原者，名平”至““离骚”者，犹“离忧＇也”，这一段是叙述。楚怀王由“甚任之”，一变而“怒而疏屈平”，于是屈原“忧愁幽思而作《离骚》”。但司马迁说得很清楚，屈原作《离骚》不是计较个人受宠后失宠，而是“疾王听之不聪，谗谄之蔽明，邪曲之害公，方正之不容”而悲伤愤激的。</p>
<p>​ B.
从“夫天者，人之始也”到“推此志也，虽与日月争光可也”，这一段是议论。它承A段屈原作《离骚》，先说《离骚》产生于“怨”，“怨”产生于“穷”；这段先说“穷”，再说“屈平之作《离骚》，盖自怨生也”。“《国风》好色而不淫”到“靡不毕见”五十四个字，概括《离骚》的内容。“其文约，其辞微”到“虽与日月争光可也”，是由对《离骚》的评价，发挥到对屈原的评价。这一段，是司马迁借屈原发抒自己“穷”和“怨”的情感，只是把“我司马迁”改为“屈平”了。附带说一句：“穷”是无路可走，是“劳苦倦极”“疾痛惨怛”之类，而不是“贫”。</p>
<p>​ 据班固《离骚序》：</p>
<blockquote>
<p>​
昔在孝武（汉武帝），博览古文，淮南王安叙《离骚传》，以“《国风》好色而不淫，《小雅》怨诽而不乱，若《离骚》者，可谓兼之。蝉蜕浊秽之中，浮游尘埃之外，皭然泥而不滓。推此志，虽与日月争光可也”。</p>
</blockquote>
<p>​
南朝刘勰《文心雕龙·辨骚》也这样说。则司马迁这一段文章用了一部分刘安的《离骚传》。</p>
<p>​ C.
从“屈平既绌”至“其后诸侯共击楚，大破之，杀其将唐眛”一段，是A段的继续叙事，记贪婪愚蠢的楚怀王，背弃屈原推行的卓著成效的合纵政策，在列国中孤立无援，以至屡次打败仗。</p>
<p>​ D.
从“时秦昭王与楚婚”到“楚人既咎子兰以劝怀王入秦而不反也”一段，接C段，是叙事，记楚怀王不接受屈原的谏阻，而听信子兰的话，到秦国去，被秦王拘留而死在秦国。末“屈平既嫉之”一句，又是下面E段的开头。</p>
<p>​ E.
从“屈平既嫉之，虽放流”到“王之不明，岂足福哉”一段，又是议论，根据C、D两段，说楚怀王听信奸臣邪人的话，以至兵败国危（如C段），被拘留而在外国（如D段）；这样看来，昏君乱主的“亡国破家”，是咎由自取。这一段开头有些问题，下文再谈。</p>
<p>​ F.
从“令尹子兰闻之大怒”到“于是怀石自投汨罗而死”一段，接D段而叙事，记屈原被楚顷襄王流放，最后作《怀沙》而死。本段开头“令尹子兰闻之大怒”的“之”，是代词，指D段末句（也是E段首句）“屈平既嫉之”这件事；F段紧接D段，中间被E段隔开了。</p>
<p>​ G.
从“屈原既死之后”到结束。说楚国有些辞赋作家；但那些辞赋作家远不如屈原，因为他们“莫敢直谏”，只是以辞赋为君主取乐。后来，楚灭亡了。</p>
<h5 id="四">（四）</h5>
<p>​
司马迁借《屈原列传》抒发了自己的悲愤，也借古讽今，指出了君主“不知人之祸”，抒情和议论的成分很浓烈。但这仍是一篇史传，写了屈原，介绍了屈原的重要经历，表现了屈原的形象。</p>
<p>​
A段的“博闻强志，明于治乱，娴于辞令”是虚写，而下文有所照应。B段说屈原作《离骚》“上称帝喾，下道齐桓，中述汤、武，以刺世事。明道德之广崇，治乱之条贯，靡不毕见”，照应“博闻强志”，也照应“明于治乱”。C段说“屈原既绌”之后，楚国外交上陷于孤立，战争则屡遭惨败，以至“大困”；这说明屈原当权（“王甚任之”）时，“与王图议国事，以出号令”，“接遇宾客，应对诸侯”的工作干得出色，如果屈原不“绌”，就不会这样挫败，照应“明于治乱”。《屈原列传》记屈原的话很少，看不出他“接遇宾客，应对诸侯”的辞令，但评论了《离骚》“称文小而其指极大，举类迩而见义远”的语言之美，又录了他的《怀沙》，显示了屈原书面语言高水平的艺术成就，这是“娴于辞令”之一端。</p>
<p>​
除虚写外，《屈原列传》更实写了屈原的斗争。A段“造为宪令”时和上官大夫斗争；C段屈原谏怀王“何不杀张仪”，这是为维护联齐的合纵政策向张仪斗争，向被秦国收买的楚国内奸靳尚、郑袖等斗争。D段屈原反对楚怀王入秦，是对王子子兰斗争。这些斗争，屈原都失败了。然而屈原认为自己是正确的，失败使他精神和肉体受到摧残，但他始终坚持真理，不向邪恶的势力屈服。《屈原列传》记屈原和渔父一段对话（全文见《楚辞》的《渔父》篇），表示宁可死，也不“以皓皓之白，而蒙世之温蠖”，保持了他的“独清”“独醒”。他写下他的遗言《怀沙》，“于是怀石，遂自投汨罗以死”，用此作为斗争，向世界宣告：“我始终坚持真理，没有投降！”</p>
<p>​
但司马迁写这篇列传，太过于着重抒情和发议论，屈原的形象不够丰满。B段虽有屈原“竭忠尽智”，F段虽有屈原“眷顾楚国，系心怀王”的话，而没有足够地突出屈原的爱国主义思想。正如1981年3月19日《人民日报》社论《爱国主义是建设社会主义的巨大精神力量》一文中指出的：“爱国主义在中华民族历史上从来就是巨大的精神力量。”屈原敢于斗争，敢于孤立，失败之后不动摇，不屈服，不妥协，是有一股巨大的精神力量支持他，鼓舞他。这股巨大的精神力量，来自屈原的爱国主义思想。伟大、崇高的爱国主义思想，使中国人作出豪迈的爱国事业，使诗人创作出最瑰丽灿烂的诗篇。如果抽掉爱国主义思想，屈原还剩下多少？和宋玉、唐勒等俳优文人有什么分别？司马迁虽把屈原作为正面人物而写，却没有明显地突出屈原这一最本质的精神，不免抑损了这篇《列传》的教育意义。</p>
<p>​
《史记·屈原列传》没有录《离骚》。是由于《离骚》篇幅太长吗？不是。《史记·司马相如列传》全文录了《子虚》《上林》那样长篇的赋，应该有理由录《离骚》。看来，这也是《屈原列传》的不足之处。介绍屈原，最好录《离骚》，让屈原自己说话。司马迁用一段文字概括《离骚》：“屈平之作《离骚》，盖自怨生也。”而“自怨生”，只是和“劳苦倦极”“疾痛惨怛”一样，是个人的遭遇。试想，《离骚》中表现屈原对楚国那样无限深情的恋慕，甚至“临睨乎旧乡”以后，天国都不愿游了，千秋万岁以后还激动着读者，这仅仅是个人的“穷”和“怨”吗？</p>
<p>​
这篇《列传》确是情感充沛，在于司马迁在全文发抒了因李陵事件受刑的怨。但这篇《列传》的不足之处，也在于司马迁借屈原的遭遇发泄自己的怨，因此在取材方面，只偏重屈原“信而见疑，忠而被谤”，遗漏了屈原更重要的方面；叙述是如此，只录《怀沙》而不录《离骚》也是如此。</p>
<h5 id="五">（五）</h5>
<p>​
司马迁这篇《屈原列传》供给我们以研究屈原的重要资料。但可能由于司马迁所据的史料不完整，《屈原列传》的叙述有不明白之处。</p>
<p>​
E段说屈原“虽放流，……不忘欲反”，是屈原已被流放在外，但念念不忘，想回到楚都（“反”，同“返”，指回到郢都）。但这句很突然。前面A段“王怒而疏屈平”，C段“屈平既疏，不复在位，使于齐”，只说屈原被“疏”，不是被“放流”。“疏”是疏远，不被亲信，而且能充当到齐的使者，出使回楚以后能向楚王说话，也不会是“放流”。这里说“虽放流”，为什么“放流”，什么时候“放流”的，《列传》中都没有交代。F段“顷襄王怒而迁之”，在“虽放流”之下，是以后的事，不指这时“放流”。“虽放流”没有说清，应是一个疏漏。</p>
<p>​
楚怀王动身赴秦之前，屈原还谏阻他，说“不如无行”（D段），可见屈原当时没有被流放。以后，楚怀王没有回楚国，屈原没有被楚怀王放流。E段说“顷襄王怒而迁之。屈原至于江滨”，到自沉汨罗而死；顷襄王放逐屈原于江南，是无疑的。问题在于D段楚怀王入秦以后，E段顷襄王迁屈原至江南以前，屈原被流放过没有。</p>
<p>​
据屈原的作品，屈原放流到江南之前，曾被放流到汉北。《九章·抽思》“倡曰”下：“有鸟自南兮，来集汉北。”又说怀念郢都，“魂一夕而九逝”地苦闷（这和《屈原列传》说的“不忘欲反”相合）。地点是汉北。又据《招魂》，楚怀王死在秦国，屈原作《招魂》招楚怀王的魂和他一同回到楚，“汩吾南征”，“路贯庐江”，“与王趋梦”从汉北到郢都，要“南征”，要“路贯庐江”（古代中庐县在今湖北省南漳、宜城一带。当是以庐江得名。庐江可能是蛮河，或是业已干涸的古代河流），然后“趋梦”（驰向云梦。今江汉平原是古代云梦沼泽地带），大队车马（“结驷千乘”）沿途驰骋围猎。楚怀王于公元前296年死于秦，屈原当时已在汉北，这年是顷襄王代楚怀王行政的第三年。屈原被放逐到汉北，当在怀王入秦以后，怀王死之前，这一事故，是据屈原作品推算的（参考郭沫若《屈原研究》和《今昔蒲剑》），大约史书没有记载，司马迁缺漏了，使我们读《屈原列传》到“虽放流”，感到上下文不相衔接。</p>
<p>​
据A段，屈原作《离骚》的时候，是“造为宪令”时和上官大夫斗争失败之后，而在C段张仪到楚收买楚国内奸之前。但刘向《新序·节士》没有“造为宪令”的事，而是张仪到楚收买了楚国内奸靳尚、令尹子兰、司马子椒（《屈原列传》中没有此人），夫人郑袖之后，这些内奸进谗言排斥屈原，“屈原遂放于外，乃作《离骚》”，和《史记》不同。到底《史记》对呢，还是《新序》对呢？我们根据《离骚》看：《离骚》是有司马迁说的“竭忠尽智以事其君，谗人间之”这个内容，可以解释为屈原起草宪令，拒绝上官大夫“欲夺之”以后，被上官大夫谣言中伤的事。而《离骚》中指责向楚王进谗的是“党人”，是“众”，那就不仅是上官大夫一人。《新序》说向楚王谗毁屈原的是一个内奸集团，《新序》似乎比较合理。而且，《新序》说的内奸之中，有令尹子兰和司马子椒；而《离骚》说巫咸降神后，屈原想到“余以兰为可恃”，而兰“委厥美以从俗”，“椒专佞以慢慆”，指责兰和椒，“览椒、兰其若兹”，和《新序》提的名单相合。《新序》可信的成分较多。至于《新序》说到张仪贿买，《离骚》没有（《离骚》说的“众皆竞进以贪婪兮，凭不厌乎求索”，不是指受张仪贿买），可能那些见不得天日的事，不为屈原所知。只是《新序》说“屈原遂放于外”，如果有这回放逐的事（被楚怀王所放），那决不是放于汉北（被顷襄王所放）。</p>
<p>（选自《语文教学与研究》1983年第3期）</p>]]></content>
      <categories>
        <category>High School</category>
        <category>Chinese</category>
        <category>Classical Chinese Literature and Poetry</category>
      </categories>
      <tags>
        <tag>School Notes</tag>
        <tag>High School</tag>
        <tag>Chinese</tag>
      </tags>
  </entry>
  <entry>
    <title>高中文言文：选择性必修上册</title>
    <url>/2022/03/14/chinese/High%20School/Classical%20Chinese%20Literature%20and%20Poetry/%E9%80%89%E6%8B%A9%E6%80%A7%E5%BF%85%E4%BF%AE/%E9%80%89%E6%8B%A9%E6%80%A7%E5%BF%85%E4%BF%AE%E4%B8%8A%E5%86%8C/</url>
    <content><![CDATA[<h2 id="教材内容">教材内容</h2>
<h3 id="课文目录">课文目录</h3>
<pre class="template:contents"><code>[[High School, Chinese, Classical Chinese Literature and Poetry, 子路、曾晳、冉有、公西华侍坐-《论语》], 子路、曾晳、冉有、公西华侍坐-《论语》]
[[High School, Chinese, Classical Chinese Literature and Poetry, 齐桓晋文之事-《孟子》], 齐桓晋文之事-《孟子》]
[[High School, Chinese, Classical Chinese Literature and Poetry, 庖丁解牛-《庄子》], 庖丁解牛-《庄子》]
[[High School, Chinese, Classical Chinese Literature and Poetry, 烛之武退秦师-《左传》], 烛之武退秦师-《左传》]
[[High School, Chinese, Classical Chinese Literature and Poetry, 鸿门宴-司马迁], 鸿门宴-司马迁]</code></pre>]]></content>
      <categories>
        <category>High School</category>
        <category>Chinese</category>
        <category>Classical Chinese Literature and Poetry</category>
      </categories>
      <tags>
        <tag>School Notes</tag>
        <tag>High School</tag>
        <tag>Chinese</tag>
      </tags>
  </entry>
  <entry>
    <title>高中文言文：选择性必修中册</title>
    <url>/2022/03/14/chinese/High%20School/Classical%20Chinese%20Literature%20and%20Poetry/%E9%80%89%E6%8B%A9%E6%80%A7%E5%BF%85%E4%BF%AE/%E9%80%89%E6%8B%A9%E6%80%A7%E5%BF%85%E4%BF%AE%E4%B8%AD%E5%86%8C/</url>
    <content><![CDATA[<h2 id="教材内容">教材内容</h2>
<h3 id="课文目录">课文目录</h3>
<pre class="template:contents"><code>[[High School, Chinese, Classical Chinese Literature and Poetry, 屈原列传-司马迁], 屈原列传-司马迁]
[[High School, Chinese, Classical Chinese Literature and Poetry, 苏武传-班固], 苏武传-班固]
[[High School, Chinese, Classical Chinese Literature and Poetry, 过秦论（上）-贾谊], 过秦论（上）-贾谊]
[[High School, Chinese, Classical Chinese Literature and Poetry, 五代史伶官传序-欧阳修], 五代史伶官传序-欧阳修]</code></pre>]]></content>
      <categories>
        <category>High School</category>
        <category>Chinese</category>
        <category>Classical Chinese Literature and Poetry</category>
      </categories>
      <tags>
        <tag>School Notes</tag>
        <tag>High School</tag>
        <tag>Chinese</tag>
      </tags>
  </entry>
  <entry>
    <title>《老子》四章</title>
    <url>/2022/03/14/chinese/High%20School/Classical%20Chinese%20Literature%20and%20Poetry/%E9%80%89%E6%8B%A9%E6%80%A7%E5%BF%85%E4%BF%AE/%E3%80%8A%E8%80%81%E5%AD%90%E3%80%8B%E5%9B%9B%E7%AB%A0/</url>
    <content><![CDATA[<h2 id="课文解读">课文解读</h2>
<p>​
《老子》阅读难度很大，语言极简，又缺少语境，且学生相对熟悉儒家思想，对道家观念比较陌生。因此有必要在教学课文之前，简要介绍老子其人、其书以及道家推崇的世界观、人生观和价值观。在讲授课文时，又要时时注意与儒家思想相比较，与学生能够感知和理解的现实生活相印证。《老子》八十一章，计五千言，成书于战国后期，晚于《孟子》，早于《庄子》。当时，诸侯争霸，社会动荡不安，民不聊生，一些有识之士洞察祸福之机，深明成败之理，认为只有避世韬晦、才能保全个体的人格尊严和生命价值。同时，他们也出于忧患意识，为社会开出了一剂与儒家截然相反的“药方”，主张以宇宙本体、万物之源的“道”作为法则，以“天道”驾驭“人道”、用“无为”实现“有为”。老子就是秉持这一思想的大哲学家，在道家学术中占有承前启后的重要地位。《老子》一书把道家思想渗透到修身、养生、治国、用兵等各个方面，行文冷静深刻，极富辩证色彩。</p>
<p>​
课文选取的第一章（《老子》第十一章）重在“论道”，通过对车轮、陶器、房舍的观察和思考，强调了“无”的用处。</p>
<p>​
这一章中所举三个事例之中，“无”都是“空无”的意思，也就是留有空间。车轮毂的圆孔、陶器中空的部分、房舍的门窗，正是因为有缝隙、有空间，才使本体可以使用。作者因此总结说：“有之以为利，无之以为用。”迁移到学生的日常生活，可以让学生围绕读书、学习、交友等具体事件，谈谈最终要达到的“用”是什么，是否保留了适当的“空间”，原因何在，怎样改进等问题。</p>
<p>​
课文选取的第二章（《老子》第二十四章）重在“修身”。“企者不立，跨者不行”，是对日常生活现象的观察，其中蕴含着自然之理。</p>
<p>​
为了显得高就踮起脚尖，这样立不久；为了走得快就跨步（迈大步）前进，这样走不远。这与“飘风不终朝”“骤雨不终日”的意思相似——急于表现、贪功冒进是没有好结果的。由此，作者指出了四种相似行为的不良后果：“自见者不明，自是者不彰，自伐者无功，自矜者不长。”认为这些做法像剩饭和赘瘤一样令人讨厌，有道之士不会这样。另外，在引导学生类比、联想的过程中，可结合历史故事来阐释这些“余食赘行”的危害，也可以引导学生探讨今天老师和家长鼓励孩子自我表现、自我展示的利与弊。</p>
<p>​
课文选取的第三章（《老子》第三十三章）同样重在“修身”。这一章共四个分句，每个分句字面意思都不难理解，但它们之间存在怎样的逻辑关系，历来说法不一。</p>
<p>​
一种观点认为，“知人者智，自知者明。胜人者有力，自胜者强”为一组，强调人欲知人，必先自知，人欲胜人，必先自胜，故以“自知”“自胜”为立身之本。如果对已经达到的境界（自知、自胜的程度）感到知足，可称得上富有，但精益求精、强劲奋进才称得上有（求道的）意志。那些知足者“不失其所”，可以立身长久；但强行者求道不息，身死道存，与道同在，才称得上“寿”，即不朽。（参见饶尚宽译注《老子》、中华书局2006年版；朱谦之撰《老子校释》，中华书局1984年版。）</p>
<p>​
另一种观点认为，破解这段话的关键在于“知足者富，强行者有志”中的“知足”和“强行”。“知”是名词，与“自知者明”呼应，“知足者富”意为能充分自知的人称得上富有；“强行”与“自胜者强”呼应、“强行者有志”意为不断战胜自我的人有坚忍不拔的意志。按照这样理解，知足者不失其所，强行者死而不亡，后文亦可通。当然，这两种说法也有不尽合理之处，但都基本符合道家观念。有人把“知足者富”解释为知足常乐，对物质生活不做过多要求就是富有了；把“强行者有志”简单理解成发愤图强，克服困难，才算有志气；把“死而不亡者寿”比附为“有的人死了，但还活在人民心中”。这些理解要么脱离语境，要么与老子的主张相悖，教学中要注意辨识。</p>
<p>​
课文选取的第四章（《老子》第六十四章）重在“治国”。第一层共两句，从“其安易持”到“治之于未乱”，讲治事者要善于把握先兆、抓住苗头，因为凡事在初始阶段都便于控制、利手解决。第二层从“合抱之木”到“始于足下”，举了三个现象，说明“大”是由“小”发展起来的、，“高”是从“低”积累起来的，“长”是从“短”变化而来的，因此要实现远大、宏伟的目标，必须重视细微和小节处。第三层从“为者败之”到“故无失”，对比来谈，说明肆意妄为会导致失败，抓住权柄不放会有所失。因此，圣人主张无为而治，对权柄没有执念。第四层从“民之从事”到“则无败事”，重在阐释百姓做事经常功败垂成的原因，强调必须从始至终保持谨慎，越到收官结尾处越要小心。第五层从“是以圣人欲不欲”到“以辅万物之自然而不敢为”，强调圣人不以常人之欲为欲，不以那些难得之物为贵；学习常人所不学的道理，来补救众人的过失。以此辅助万物的自然之理，而不敢妄动、妄为。</p>
<p>​
这五层之间是什么关系？历来有不同解释，教学中可以请学生查阅文献材料，发表自己的看法。这里提供一种观点以供参考，或作为教学辅助材料。据饶尚宽译注的《老子》，第三层和第五层这几句话属于“错简重出”。第三层的两句话见于《老子》二十九章；第五层这句话与前文无关联，且主旨散见于第三十七章、四十八章、五十七章和六十三章，都应删去。删改后的文字如下（“/”为分层标志符）：</p>
<blockquote>
<p>​
其安易持，其未兆易谋，其脆易泮，其微易散。为之于未有，治之于未乱。/合抱之木，生于毫末；九层之台，起于累土；千里之行，始于足下。/民之从事，常于几成而败之。慎终如始，则无败事。</p>
</blockquote>
<p>​
这样一来，整段语录连起来看有三层意思。第一层，对待不利之事，要洞察先机，及早扑灭。第二层，对待大事、要事，则要慎始慎终，始终抓好细节。第一层和第二层是并列关系。第三层是对前两层意思的总结。作者提醒治事者，要根据不同性质、不同情况认真对待和妥善处理先兆和细节，以避免坏事做大、好事难成——这在今天仍有重要的启迪意义。</p>
<h2 id="参考资料">参考资料</h2>
<h3 id="参考译文">参考译文</h3>
<div class="classcial-chinese-literature-and-poetry-translation"><div class="paragraph"><p class="original-text">三十辐共一毂，当其无，有车之用。</p><p class="translation">三十根辐条汇集到一个毂当中，车的功用正是产生于车毂中空地方的“无”。</p><p class="original-text">埏埴以为器，当其无，有器之用。</p><p class="translation">和泥制作陶器，陶器的功用正是产生于陶器中空地方的“无”。</p><p class="original-text">凿户牖以为室，当其无，有室之用。</p><p class="translation">开凿门窗建造房屋，房屋的功用正是产生于房屋四壁中空地方的“无”。</p><p class="original-text">故有之以为利，无之以为用。（第十一章）</p><p class="translation">所以“有”（车子、器皿、屋室）供人方便利用，正是“无”起了作用。</p></div><div class="paragraph"><p class="original-text">企者不立，跨者不行，</p><p class="translation">踮起脚的人不能久立，跨大步的人行走不稳，</p><p class="original-text">自见者不明，自是者不彰，自伐者无功，自矜者不长。</p><p class="translation">自我显露的人不能显明，自以为是的人不能彰显，自我夸耀的人不能建功，自我夸耀的人不能长久。</p><p class="original-text">其在道也，曰余食赘行，物或恶之。故有道者不处。（第二十四章）</p><p class="translation">（这些行为）用道的观点来看，就叫作剩饭、赘瘤，人们常常厌恶它们，所以有道的人不这样做。</p></div><div class="paragraph"><p class="original-text">知人者智，自知者明。胜人者有力，自胜者强。</p><p class="translation">认识别人的人有智慧，了解自己的人才算聪明。战胜别人的人有力量，战胜自己的人才算坚强。</p><p class="original-text">知足者富。强行者有志。不失其所者久。死而不亡者寿。（第三十三章）</p><p class="translation">知道满足的人能够富有，勤勉而行的人有意志。不丧失立身之基的人能够长久，死而不朽的人就是长寿。</p></div><div class="paragraph"><p class="original-text">其安易持，其未兆易谋。</p><p class="translation">事物安然未生变的时候容易持守，问题还没有显露迹象的时候容易解决。</p><p class="original-text">其脆易泮，其微易散。</p><p class="translation">事物脆弱的时候容易分离，事物细微的时候容易散失。</p><p class="original-text">为之于未有，治之于未乱。</p><p class="translation">要在事情未发生时就做，要在祸乱没有产生以前就处理妥当。</p><p class="original-text">合抱之木，生于毫末；</p><p class="translation">合抱的大木，是从细小的萌芽生长起来的；</p><p class="original-text">九层之台，起于累土；</p><p class="translation">九层的高台，是从一筐筐泥土建筑起来的；</p><p class="original-text">千里之行，始于足下。</p><p class="translation">千里的远行，是从脚下举步走出来的。</p><p class="original-text">为者败之，执者失之。</p><p class="translation">动手去做的就会坏事，有所把持的就会失去。</p><p class="original-text">是以圣人无为，故无败，无执，故无失。</p><p class="translation">所以圣人不求有所作为，因此不会败事，不执意把持，因此不会丧失。</p><p class="original-text">民之从事，常于几成而败之。</p><p class="translation">一般人做事，常在接近成功时遭致失败。</p><p class="original-text">慎终如始，则无败事。</p><p class="translation">审慎面对事情的终结，一如开始时那样，就不会失败。</p><p class="original-text">是以圣人欲不欲，不贵难得之货；学不学，复众人之所过。</p><p class="translation">所以圣人想要常人所不想要的，不珍贵难得的货品，学习常人所不学习的，</p><p class="original-text">以辅万物之自然，而不敢为。（第六十四章）</p><p class="translation">补救众人所犯的过错，以辅助万物的自然变化而不加以干预。</p></div></div>
<h3 id="参考文献">参考文献</h3>
<h4 id="中国哲学史的里程碑老子的无-milestone_in_chinese_philosophy_laozi_none">中国哲学史的里程碑——老子的“无”
<span class="citation" data-cites="Milestone_in_Chinese_philosophy_Laozi_None">[@Milestone_in_Chinese_philosophy_Laozi_None]</span></h4>
<p>​
中国哲学史是中华民族的认识史。多年来一直沿着这条思路考察中国哲学的发展、变化，踪迹昭然、历然。老子首先提出了“无”作为最根本的范畴，是中国哲学史第一座里程碑。</p>
<p>​
人类认识外界，总是经历由外到内、由具体到抽象的过程。近半个世纪以来，儿童心理学发展较快，研究儿童认识外界的过程及其发展轨迹，经过观察、实测、比较，得出大体可信、比较接近儿童思维成长的实际状况。一个民族思维成长的过程与儿童心理的发展过程大体相似，至少从中可得相关的昭示。</p>
<p>​
儿童认识外界先从身边周围的事物开始。由近及远，先认识母亲，后及家人，扩大到身外的食物、玩具，再扩大到鸟兽草木虫鱼等目力所及更大的范围。如高山、大河、天空、气象、风雷等外界虽在视听范围之内，并不能引起足够的认识。日月星辰先被认识，日月依附着的更大的“太空”则较后才会引起注意。朱熹儿时，其父向他指示天空曰“天”，朱熹问其父：“天之上何物？”这被看作特异儿童的表现，所以古人特别记上一笔。古今中外千千万万儿童，是很少关心“天之上有何物”的。</p>
<p>​
儿童教育家还发现，小学生春游，虽然喜欢爬山、涉水，但不懂得欣赏山水风景、朝辉落霞之美。认识过程总是由具体事物开始，由微细到宏大。儿童学习数字计算，也是先学计算一个两个实物，然后形成“1”“2”……的数的概念。先有自然数的实数，“0”的概念形成较后。因为“0”没有形象，也找不到与0相当的对象（实体）可供抽象。</p>
<p>​ 我们回顾中华民族的认识史，竟与儿童成长过程有惊人相似之处。</p>
<p>​
人类认识从有形开始，逐渐由分到合，由具体到抽象，形成了“有”（存在）的概念。“有”有形象（大小、形色等），“有”有性质（坚软、轻重、香臭等），“有”有结果（得到或未得到），各种“有”都可见闻，可感知，可推得结果。这些都属于人类认识的幼年期。</p>
<p>​
随着生活实践、社会实践、科学实践的深化，从“有”进而认识到“有”的对立面——“没有”。</p>
<p>​
“没有”是生活中经常遇到的现实。打猎、捕鱼，可能“有”，也可能“没有”，而且出现的频率很高。把“没有”抽象到概念的高度，也作为认识的“客体”对待，达到这个认识水平，只在具有先进文化的民族才有这种可能。“没有”在未上升到概念时，只是一次性的客观描述。提出了“无”，是认识的一次大飞跃。</p>
<p>​
由于“无”具有“有”所不具备的“实际存在”，号称“无”，并非空无一物，而有总括万有的特点。老子称之为“无状之状，无物之象”。它不同于“有”，所以“视之不可见，听之不可闻，搏之不可得”，“此三者不可致诘，故混而为一”。对这一最高的负概念给以特殊名称，有时叫作“无”；因为它具有规律性，也称为“道”。在一定情况下，“无”与“道”同义，有时“无”也是“道”，“道”也是“无”。</p>
<p>​
老子的“无”不是停留在描述性的“没有”的认识阶段。“无”并不是消极的存在，而是有它实际多样肯定性的含义，有现实作用，有可以预测的后果，也经常用作对待日常生活、政治生活的一个原则。“无”的发现，为人类认识史开了新生面，的确非同寻常。</p>
<p>​
《老子》书经历史上老学传人的补充、完善，现存的定本共五千七百字左右。这部书从各个方面提醒人们重视“无”的地位和作用。不但认识“无”，而且用“无”的原则来指导日常生活、社会生活以及政治生活。</p>
<p>​ 日常生活中认识“无”的功用：</p>
<blockquote>
<p>​
“三十辐共一毂，当其无，有车之用。埏埴以为器，当其无，有器之用。凿户牖以为室，当其无，有室之用。故有之以为利，无之以为用。”（十一章）</p>
</blockquote>
<p>​ 把“无”的原则运用到政治生活：</p>
<blockquote>
<p>​
“取天下常以无事。”（四十八章）“以无事取天下。”（五十七章）“我无欲而民自朴。”（五十七章）</p>
</blockquote>
<blockquote>
<p>​ “为无为，事无事，味无味。”（六十三章）</p>
</blockquote>
<blockquote>
<p>​ “是谓行无行，攘无臂，扔无敌，执无兵。”（六十九章）</p>
</blockquote>
<blockquote>
<p>“是以圣人处无为之事，行不言之教。”（二章）</p>
</blockquote>
<blockquote>
<p>​ “为无为。”（三章）</p>
</blockquote>
<blockquote>
<p>​ “爱民治国，能无为乎。”（十章）</p>
</blockquote>
<blockquote>
<p>​ “道常无为。”（三十七章）</p>
</blockquote>
<blockquote>
<p>​ “吾是以知无为之有益。”（四十三章）</p>
</blockquote>
<blockquote>
<p>​ “不言之教，无为之益，天下希及之。”（四十三章）</p>
</blockquote>
<p>日常行为准则也离不开“无”的原则指导：</p>
<blockquote>
<p>​
“善行，无辙迹；善言，无瑕谪；善数，不用筹策；善闭，无关楗而不可开；善结，无绳约而不可解。”（二十七章）</p>
</blockquote>
<p>“无”也是政治生活的指导原则：</p>
<blockquote>
<p>​ “生而不有，为而不恃，长而不宰。”（十章）</p>
</blockquote>
<blockquote>
<p>​ “爱民治国，能无为乎？……明白四达，能无知乎？”（十章）</p>
</blockquote>
<p>老子由“无”衍生出一系列否定概念的积极含义：</p>
<blockquote>
<p>​
“绝圣弃智，民利百倍；绝仁弃义，民复孝慈；绝巧弃利，盗贼无有；……见素抱朴，少私寡欲。”（十九章）</p>
</blockquote>
<p>​ 处理人际关系，要遵循“无”的原则，以退让、收敛为原则：</p>
<blockquote>
<p>​
“不自见，故明；不自是，故彰；不自伐，故有功；不自矜，故长；夫唯不争，故天下莫能与之争。”（二十二章）</p>
</blockquote>
<p>​
老子思想的深刻性在于，善于从纷乱多样的现象中，概括出“无”这一负概念。其可贵处在于把负概念给予积极肯定的内容。老子的“无为”不是一无所为，而是用“无”的原则去“为”。所以能做到有若无，实若虚，以退为进，以守为攻，以屈为伸，以弱为强，以不争为争，从而丰富了中国古代辩证法思想，建立了中国古代辩证法贵柔的体系，与儒家《易传》尚刚健体系并峙。两大流派优势互补，共同丰富了中华民族的文化宝库。</p>
<p>​
人类认识总是在旧的认识基础上提出新见解。新见解对旧知识来说，是一次进步。同时，这新见解往往成为后来更新见的障碍。《荀子·天论》篇中曾指出，“老子有见于诎，无见于信”。老子发现了“无”的价值，把它提高到应有的位置，是老子的贡献。如果把“无”的地位、作用过分夸大，反倒背离了真理。比如，老子指出建房屋供人使用的地方是墙壁中间的空间部分。但也应看到供使用的空间部分是在墙壁、梁柱等实体支持下才能供居住。没有墙壁、梁柱、砖木的“有”，也就没有供起居的空间，只是一片空旷的开阔地，虽有空间（“无”），却不能居住。有与无互相依存，相得益彰。</p>
<p>​
总之，老子发现，提出了“无”这个范畴，是一大贡献，并赋予以肯定、积极意义，功不可没。老子的无为，不是什么也不干，而是变换一种方法去干。</p>
<p>​
老子的辩证法贵无、尚柔，肯定生活，而不消极玩世。老子贵“无”而务“实”，不具有怀疑论色彩。战国末期出现黄老之学，讲治道，重形名，在战争后经济残破时期，用来恢复生产，收到了治国安民的实效。黄老不同于原来的老子，司马迁把老子与韩非子同篇立传，事出有因。韩非子也有《解老》《喻老》的著作，足见二者有内在的联系。老子、庄子，古来并提，老子多讲治国用兵，庄子更偏重于养生、适性，也采取了老子思想的一部分，但历史上还没有发现庄子治国安民的思想。</p>
<p>​
庄学作为老学的补充，自有其重要地位。庄学的高明、豁达，不谴是非，是庇荫在老子构建的大厦下设立的一个摊位，离了老子，庄子的光彩就无从显露。这一点，正如王守仁之所以能自张一军，耸动天下，是在朱熹的基础上开创起来的。必先有朱熹，王守仁反对朱熹的格物的新见解才有新意。没有朱学，就没有王学。</p>
<p>​
“无”被提示出来，纳入认识最高范畴，涵盖范围广大无限，给后来道教神学提供了广阔驰骋的领域。这是另外的问题，本文从略。</p>
<p>（选自《竹影集——任继愈自选集》，新世界出版社2002年版）</p>]]></content>
      <categories>
        <category>High School</category>
        <category>Chinese</category>
        <category>Classical Chinese Literature and Poetry</category>
      </categories>
      <tags>
        <tag>School Notes</tag>
        <tag>High School</tag>
        <tag>Chinese</tag>
      </tags>
  </entry>
  <entry>
    <title>《论语》十二章</title>
    <url>/2022/03/14/chinese/High%20School/Classical%20Chinese%20Literature%20and%20Poetry/%E9%80%89%E6%8B%A9%E6%80%A7%E5%BF%85%E4%BF%AE/%E3%80%8A%E8%AE%BA%E8%AF%AD%E3%80%8B%E5%8D%81%E4%BA%8C%E7%AB%A0/</url>
    <content><![CDATA[<h2 id="课文解读">课文解读</h2>
<p>​
《论语》是记录孔子及其弟子言行的书，也是研究儒家思想的重要典籍。对高中生而言，《论语》的阅读并非易事，主要表现在三方面。</p>
<p>​
第一、语言障碍多。《论语》关于礼乐制度和春秋士人生活的专有词汇多，学生不熟悉，需要一字一旬解释。如“八佾舞于庭”“射不主皮”“子贡欲去告朔之饩羊”“立不中门，行不履间”等，其中加点词即属此类。《论语》中很多常用字词的语义复杂，学生知道字面意思，但放到章句中就很难把握。杨伯峻在《论语译注》中举了不少例子。譬如“天”字，在“天何言哉”“获罪于天，无所祷也”“天丧予，天丧予”三句话中含义显然不同。诸如“命”“仁”“君子”“小人”等几十个常用字词，都存在类似情况。《论语》虚词多，譬如“以吾一日长乎尔，毋吾以也”、虚词占大半。这些虚词有语法功能，对表情达意有影响，用法又与学生熟悉的唐宋古文不尽相同、也需专门讲解。</p>
<p>​
第二、《论语》章句虽短，但“微言大义”，加之年代久远，本意已经不甚了然，解读起来容易产生分歧。虽然历代学者作了各种解读，但至今仍有很多章句没能形成统一看法，如“无友不如己者”“有所不行，知和而和”“父母唯其疾之忧”等。至于根据有限的篇幅还原当时的语境，了解独白、对话、动作、神态描写的本意，更需要下大功夫。比如必修选篇《侍坐》，“夫子喟然叹曰：“吾与点也！””曾皙究竟为何打动孔子，众说纷纭。更重要的是，《论语》往往只说结论，不作解释。譬如“巧言令色，鲜矣仁”，这是从现象到本质的判断，为什么作这种判断，需要读者揣摩其中的因果关系。再如“学而时习之，不亦说乎？有朋自远方来，不亦乐乎？人不知而不愠，不亦君子乎？”，三个分句都不难，但合在一起究竟是何关系，也只能靠读者分析和推理。</p>
<p>​
第三，《论语》二十篇，各篇之间、各章之间联系不明显。杨伯峻说，这些篇章的排列不一有什么道理，就是前后两章也不一定有什么关联。而且这些片段的篇章不是一个人的手笔。这编纂方法带来两个结果：从不利的一面来说，是难背、难记－按原书顺序背诵起来非常困；从有利的一面说，弱规律性组合丰富了言语的潜在意蕴，给每个读者以重构的可能。我们可把不同篇章重新组合，获得新的发现。然而如何重组，重组之后怎样探究，才能形成有价值的论，需要读者静心思考，反复推究。</p>
<p>​ 这一章是孔子对“什么是好学”这一问题的回答。</p>
<ol type="1">
<li>子曰：“君子食无求饱，居无求安，敏于事而慎于言，就有道而正焉，可谓好学也已。”（《学而》）</li>
</ol>
<p>​
本文所谓“君子”，可以理解为有德之人，也可以理解为在位之人，两者都需要“好学”。有德之人好学以修身，在位之人好学不仅修身，更能推己及人。“好学”的具体表现有三条，第一是物质条件上不追求安逸与享受，即“食无求饱”“居无求安”；第二是在言行做事上敏捷、说话谨慎；第三是不断向有道德的榜样人物学习，及时匡正自身行为。</p>
<p>​
第一条重在排除干扰，第二条重在实践锻炼，第三条重在虚心请教。对于“君子”而言，这都是为学必须的功课。从中我们可以看出，儒家的学习内容不仅是科学文化知识，更重要的是在日常生活工作中培养德行。</p>
<ol start="2" type="1">
<li>子曰：“人而不仁，如礼何？人而不仁，如乐何？”（《八佾》）</li>
</ol>
<p>​
《八佾》共226则章句，在整本《论语》中，是主题相对集中的一篇，主要谈儒家的礼乐思想。其中，近半数表达了孔子对当时礼崩乐坏现实情况的不满，批评对象涉及季氏、三桓、鲁君、孔门弟子以及已故的管仲等历史人物。另一大半则记录了孔子作为践行者、阐释者、研究者和推广者对于传承发展礼乐思想所作出的贡献。在孔子心目中，制作礼乐的周公是万代敬仰的圣贤人物，恢复“郁郁乎周礼”则是解决社会问题的良药。</p>
<p>​
正如《礼记》所言“乐也者，情之不可变者也，礼也者，理之不可易者也。”礼“辨异”，即区分等级，使各阶层有序，有序则不乱；乐“统同”，既抒发感情，使情绪得以纾解，促进社会和谐。而“仁”又是礼乐制度的基础，一个人如果内心不仁爱、善良，他会怎样对待礼仪制度，怎样对待音乐呢？这就是本章句所要表达的中心意思。</p>
<p>​
《八佾》第一章提到孔子对季氏的看法，连“八佾舞于庭”这种严重越礼的事情都能够做出来，他还有什么事不能狠心去做下去呢？《八佾》第二十五章提到，孔子对韶乐和武乐的看法。他认为大舜时的《韶乐》尽善尽美，而武王伐纣尽管是正义之战，但是《武乐》仍然有”未尽善也“的地方。由此可见，仁是礼乐的基础，礼乐是仁的表现，两者互为表里，不可分割。</p>
<ol start="3" type="1">
<li>子曰：“朝闻道，夕死可矣。”（《里仁》）</li>
</ol>
<p>​
这是成语“朝闻夕死”的出处，意思很好理解，孔子用略显夸张的语气，表达了对“道”的渴慕之情，也凸显了作为志士仁人对于生命意义的定位。关键是，孔子追求的“道”究竟该作何解释？据杨伯峻先生的统计，“道”字在《论语》中出现了60次，作名词有四种解释，其一是笼统的术语，指道德（本立而道生）、学术（吾道一以贯之）或方法（不以其道得之）；其二，合理的行为（三年无改于父之道）；其三，道路路途（中道而废）；其四，技艺（虽小道必有可观者焉）。按照这种分类，“朝闻道”更接近于第一种，笼统的术语，但解释为道德、学术、方法都欠通，所以杨伯峻在《论语译注》中又将其随机译为“真理”。虽说真理是一个外来词，西方的哲学概念，但是就“闻道”二字，似乎近于道德经中的“上士闻道，勤而行之；中士闻道，若存若亡；下士闻道，大笑之”。虽然道家所说的“道”背后的本体论认识论和方法论与儒家有显著区别，但在这里从形而上的层面理解起来，两家是相通的。</p>
<ol start="4" type="1">
<li>子曰：“君子喻于义，小人喻于利。”（《里仁》）</li>
</ol>
<p>​
本章语句简单，但理解起来有分歧，关键在于对君子小人的解释。解释君子小人为有道德无道德之人，那么就是君子懂得“义”（即道义），小人懂得“利”（即利益）。这句话就成了判断君子和小人的标准：义是公心，利是私欲，懂公心者为君子，行私欲者为小人。</p>
<p>​
如果将君子小人理解为在位者和平民，在孔子观念下，在位君子应该有理想人格，而平民小人只认识到利害计较，因此统治者要对症下药，满足百姓的利益。这样解释下来，这句话就成了基于人性假设的治国建议了。宋儒朱熹、程颐、陆九渊等多作第一种解，民国以来新儒家又多作第二种解，教学中不必强求一致。《里仁》篇中有“君子怀德，小人怀土；君子怀刑，小人怀惠”一章与本章类似。</p>
<ol start="5" type="1">
<li>子曰：“见贤思齐焉，见不贤而内自省也。”（《里仁》）</li>
</ol>
<p>​
见贤思齐意思近于前文提及的“就有道而正焉”，区别在于“就有道而正”是一种更为主动的行为，而“见”则具有随机性，但总的来说，都是遇到更有修养、有学问的人，不要去嫉妒他、排挤他，而要虚心主动地向对方看齐、向对方学习，这是君子的美德。孔子更高明的是后半句，他并没有讲“见不贤”就要去教导人家，那是好为人师的做法，更应该做的是反躬自省，看看自己有没有相似的不贤之心、不贤之举，然后去改正——可见儒家强调的学习无处不在，而学习又是以提高自身修养为要义的。</p>
<ol start="6" type="1">
<li>子曰：“质胜文则野，文胜质则史。文质彬彬，然后君子。”（《雍也》）</li>
</ol>
<p>​
这句话是讲君子的气质。质是先天的、朴实无华的，是质朴本性；文是后天的，经过修饰获得的，如衣着装饰、谈吐文采之类。“质胜文”，就是缺少后天的修饰、装点，就会显得粗野鄙俗。这也是儒家和道家不一样的地方，道家特别强调天真、自然。“文胜质”，则是一种矫枉过正，装点太多就显得浮华、虚伪。所以君子就要处理好质、文的关系，协调发展：内心真实朴素，待人接物有礼有节，说话办事有礼貌修养，这也正是儒家中庸之道在君子气质上的体现。</p>
<ol start="7" type="1">
<li>曾子曰：“士不可以不弘毅，任重而道远。仁以为己任，不亦重乎？死而后已，不亦远乎？”（《泰伯》）</li>
</ol>
<p>​
曾子的这句话非常有名气，被历代很多仁人志士引为座右铭。此句包含三个因果关系。首先，“士不可以不弘毅”是因为“任重而道远”。弘，一说为广大，一说为刚强，有人认为后种更合语境，因为“任重”对应刚强，“道远”对应毅力，更加贴切。接下来解释为什么“任重”，因为以“仁”为已任。“仁”是孔子学术中最重要的概念，即“忠恕之道”，这是第二层因果关系。最后解释为什么“道远”，因为贯彻“仁”的精神需要终生不倦、死而后已，这是第三层因果关系。后面两层因果关系合起来是对“任重道远”的解说，而“任重道远”又是对“土不可不弘毅”这一中心句的解说，这种抽丝剥茧的论说方式强调和凸显了首句中的“弘毅”，反问语气又增强了感情色彩，使论断既有说服力，又有感染力。</p>
<ol start="8" type="1">
<li>子曰：“譬如为山，未成一篑，止，吾止也。譬如平地，虽覆一篑，进，吾往也。”（《子罕》）</li>
</ol>
<p>​
这句话孔子用了两个比喻，来说明做人、做学问、做事情要靠自己坚持，不能半途而废。第一个比喻是堆土成山，只差一筐土就完成了，如果这时候停了下来，是我自己停下来的（其咎在已）；第二个比喻是平整土地，即使只是刚刚倒了一筐士，可以前进一步了，也是我自己前进的（进益在己）。“未成一篑”“虽覆一篑”是两种极端情况，一是垂成，一是初始，垂成之际容易懈息，初始之时容易畏难，故孔子特别加以强调。之所以说“吾止”“吾往”，是强调“为仁由己”。需要说明的是，由于本句省略了太多信息，另一种解释也可通，即当止则止，即便只差筐土，也要停下来；当进则进，只倒了一筐土，也要坚持往前走。至于用什么来衡量当止还是当进，自然是儒家强调的道义准则了。</p>
<ol start="9" type="1">
<li>子曰：“知者不惑，仁者不忧，勇者不惧。”（《子罕》）</li>
</ol>
<p>​
本章表面意思不难理解，但是《论语》中越简单的章句越难解释。不同解读者对这三个分句有不同理解。要而言之，有智慧的人不会疑惑，因为知道大小、轻重、缓急、本末，判断力自然就强大；仁德的人行忽道（己所不欲，勿施于人）则不会招人怨恨，行忠道（立人，达人）则会招人感激，人我关系处理得完善了，就不会忧虑：真正的明者不是行为壮烈，而在于内心强大不存在惧怕之心，横逆忧患之来，淡然处之，这才是大勇，故言“勇者不惧“。</p>
<ol start="10" type="1">
<li>颜渊问仁。子曰：“克己复礼为仁。一日克己复礼，天下归仁焉。为仁由己，而由人乎哉？”颜渊曰：“请问其目？”子曰：“非礼勿视，非礼勿听，非礼勿言，非礼勿动。”颜渊曰：“回虽不敏，请事斯语矣。”（《颜渊》）</li>
</ol>
<p>​
这是《论语》中影响力非常大的一则章句，历代大儒如朱熹、王守仁等都基于自己的学说作过专门的解释。究其原因，一是讨论的话题很重要，即“问仁”，涉及儒家的核心概念和基本主张。二是提问者是颜回。事实上，子贡、子路、樊迟、仲弓等都问过同样的问题，孔子的回答却各不相同，这是孔子因材施教的体现。具体到颜回，他是孔子心目中最优秀的学生，他的日常行为表现最接近“仁”的境界（颜回三月不违仁），因此孔子的回答最有可能是他内心真实的想法，或者体现了他内心最高的标准。总的来说，仁就是克己复礼，克己对内（内圣），复礼对外（外王），这是儒家的最高理想，也是孔子的毕生追求。一旦做到这一点，天下都会称赞他具有了仁的品格。达成仁的境界要靠自身的努力，具体的操作方法有：不合礼的不看，不合礼的话不听不合礼的话不说，不合礼的事不做。不看、不听，就是要克制自己，不被礼崩乐坏的现实同化。不说、不做，就是要用礼的准绳严格要求自己，起到榜样示范作用——在内涵上与克己复礼对应，二者具有一致性。</p>
<ol start="11" type="1">
<li>子贡问曰：“有一言而可以终身行之者乎？”子曰：“其‘恕’乎！己所不欲，勿施于人。”（《卫灵公》）</li>
</ol>
<p>​
本章在《论语》中比较特殊。我们都知道孔子讲究“中道”“中庸”，他的很多观点都是辩证的，甚至是变化的，要具体问题具体分析。但当子贡问有没有一句话可以终身践行时，孔子却给出了明确答案：“其“恕’乎！已所不欲，勿施于人。”“恕”是推己及人的意思，即《礼记》所谓“絜矩之道”：“所恶于上，毋以使下。所恶于下，毋以事上。所恶于前，毋以先后。所恶于后，毋以从前。所恶于右，毋以交于左。所恶于左，毋以交于右。”恕和忠是孔子仁爱思想的体两面。《里仁》篇载孔子与曾参对话：</p>
<blockquote>
<p>​
子曰：“参乎！吾道一以贯之。”曾子曰：“唯。”子出，门人问曰：“何谓也?”曾子曰：“夫子之道，忠怒而已矣。”</p>
</blockquote>
<p>​ 何谓“忠”?《雍也》篇载孔子和子贡的另一次对话：</p>
<blockquote>
<p>​
子贡曰：“如有博施于民而能济众，何如？可谓仁乎？”子曰：“何事于仁，必也圣乎！尧舜其犹病诸！夫仁者，己欲立而立人，己欲达而达人。能近取譬，可谓仁之方也已。”</p>
</blockquote>
<p>​
可见，“忠”是“己欲立而立人，己欲达面达人”，这是积极进取的道德，不是谁都能做到的，故本章言“恕”不言“忠。</p>
<ol start="12" type="1">
<li>子曰：“小子何莫学夫《诗》？《诗》可以兴，可以观，可以群，可以怨。迩之事父，远之事君。多识于鸟兽草木之名。”（《阳货》）</li>
</ol>
<p>​
这是孔子对弟子们的教诲，指出了学《诗》的益处。兴、观、群、怨讲的是文学作品的社会功能。兴，孔安国注为“引臂连类”，朱熹注为“感发志意”，是说诗歌能够激发人们的广泛联想，调动内在情感。观，郑玄注为“观风俗之盛衰”，朱熹注为“考见得失”，是说诗歌可以帮助读者认识风俗盛衰和政治得失。群，孔安国注为“群居相切磋”，朱熹注为“和而不流”，是说诗可以帮助人们沟通感情，切磋砥砺，提高修养。怨，孔安国注为“怨刺上政”，是说诗可以批评指责为政之失，抒发对苛政的怨愤和讥刺之情。兴、观、群、怨，以兴为首，互相结合，关系到社会生活的方方面面，正所谓“迩之事父，远之事君”。教学中可以联系《论语》和《诗经》的有关篇目加以印证。</p>
<h2 id="参考资料">参考资料</h2>
<h3 id="参考译文">参考译文</h3>
<div class="classcial-chinese-literature-and-poetry-translation"><div class="paragraph"><p class="original-text">子曰：“君子食无求饱，居无求安，</p><p class="translation">孔子说：“君子饮食不要求饱足，居住不要求安适，</p><p class="original-text">敏于事而慎于言，就有道而正焉，可谓好学也已。”（《学而》）</p><p class="translation">行事勤勉，言语谨慎，到有道的人那里去匡正自己，这可以说是好学了。”</p></div><div class="paragraph"><p class="original-text">子曰：“人而不仁，如礼何？人而不仁，如乐何？”（《八佾》）</p><p class="translation">孔子说：“一个人如果没有仁德，怎样对待礼呢？一个人如果没有仁德，怎样对待音乐呢？”</p></div><div class="paragraph"><p class="original-text">子曰：“朝闻道，夕死可矣。”（《里仁》）</p><p class="translation">孔子说：“早晨得知真理，当晚死去都可以啊。”</p></div><div class="paragraph"><p class="original-text">子曰：“君子喻于义，小人喻于利。”（《里仁》）</p><p class="translation">孔子说：“君子知晓的是义，小人知晓的是利。”</p></div><div class="paragraph"><p class="original-text">子曰：“见贤思齐焉，见不贤而内自省也。”（《里仁》）</p><p class="translation">孔子说：“看见贤者，便应该想着向他看齐；看见不贤的人，便应该反省自己（有没有同他类似的毛病）。”</p></div><div class="paragraph"><p class="original-text">子曰：“质胜文则野，文胜质则史。文质彬彬，然后君子。”（《雍也》）</p><p class="translation">孔子说：“质朴超过文采就会粗野鄙俗，文采超过质朴就会虚饰浮夸。文质兼备，配合适当，这才是君子。”</p></div><div class="paragraph"><p class="original-text">曾子曰：“士不可以不弘毅，任重而道远。</p><p class="translation">曾子说：“士不可以不志向远大，意志坚强，因为他们责任重大，路途遥远。</p><p class="original-text">“仁以为己任，不亦重乎？死而后已，不亦远乎？”（《泰伯》）</p><p class="translation">“把实现仁道作为自己的责任，这不是很重大吗？一直到死方才停止，这不是很遥远吗？”</p></div><div class="paragraph"><p class="original-text">子曰：“譬如为山，未成一篑，止，吾止也。</p><p class="translation">孔子说：“好比积土堆山，只差一筐土没有成功，停下来，是我自己停下来的。</p><p class="original-text">“譬如平地，虽覆一篑，进，吾往也。”（《子罕》）</p><p class="translation">“好比填平地，虽然才倒了一筐土，但继续堆下去，那是我自己在往前努力。“</p></div><div class="paragraph"><p class="original-text">子曰：“知者不惑，仁者不忧，勇者不惧。”（《子罕》）</p><p class="translation">孔子说：“聪明的人不迷惑，仁德的人不忧愁，勇敢的人不畏惧。”</p></div><div class="paragraph"><p class="original-text">颜渊问仁。子曰：“克己复礼为仁。一日克己复礼，天下归仁焉。</p><p class="translation">颜渊问仁德。孔子说：“约束自我，使言行归复于先王之礼，这就是仁。一旦做到这样了，天下人就会称赞你是个仁人了。</p><p class="original-text">“为仁由己，而由人乎哉？”颜渊曰：“请问其目？”</p><p class="translation">“实践仁德在于自己，哪里在于别人呢？”颜渊说：“请问行仁德的具体条目。”</p><p class="original-text">子曰：“非礼勿视，非礼勿听，非礼勿言，非礼勿动。”</p><p class="translation">孔子说：“不合礼的事不看，不合礼的话不听，不合礼的话不说，不合礼的事不做。”</p><p class="original-text">颜渊曰：“回虽不敏，请事斯语矣。”（《颜渊》）</p><p class="translation">颜渊说：“我虽然不聪敏，让我实践您这话吧。”</p></div><div class="paragraph"><p class="original-text">子贡问曰：“有一言而可以终身行之者乎？”</p><p class="translation">子贡问道：“有一个字而可以去终身实践它吗？”</p><p class="original-text">子曰：“其‘恕’乎！己所不欲，勿施于人。”（《卫灵公》）</p><p class="translation">孔子说：“大概是‘恕’吧！自己所不想要的任何事物，就不要强加给别人。</p></div><div class="paragraph"><p class="original-text">子曰：“小子何莫学夫《诗》？</p><p class="translation">孔子说：“学生们为什么没有人学习《诗》呢？</p><p class="original-text">“《诗》可以兴，可以观，可以群，可以怨。</p><p class="translation">“读《诗》，可以激发人的感情，可以观察政治的得失、风俗的盛衰，可以提高人际交往能力，可以讽刺时政。</p><p class="original-text">“迩之事父，远之事君。多识于鸟兽草木之名。”（《阳货》）</p><p class="translation">“近可用于侍奉父母，远可用于侍奉君主。而且多多认识鸟兽草木的名称。”</p></div></div>
<h3 id="参考文献">参考文献</h3>
<h4 id="仁和仁义-benevolence_and_morality_zhangdainian">仁和仁义 <span class="citation" data-cites="Benevolence_and_morality_Zhangdainian">[@Benevolence_and_morality_Zhangdainian]</span></h4>
<p>​
仁是孔子所宣扬的最高道德原则。《吕氏春秋·不二》云：“孔子贵仁。”这是符合事实的。但在春秋时代，孔子以前，仁已经是一个公认的道德原则了。《左传》僖公三十三年记载，晋大夫臼季云：“臣闻之，出门如宾，承事如祭，仁之则也。”又定公四年记载，楚郧辛曰：“《诗》曰：柔亦不茹，刚亦不吐，不侮矜寡，不畏强御，唯仁者能之。”又昭公十二年记孔子对于楚灵王的评论说：“仲尼曰：‘古也有志：克己复礼，仁也。信善哉’”孔子以“克己复礼”为仁，乃是引述“古志”之言。</p>
<p>​
《大学》引晋文公的亲属舅犯曰：“亡人无以为宝，仁亲以为宝。”以仁亲二字并提，仁亲即亲密团结之意。《国语·晋语》记载：“优施教骊姬夜半而泣，谓公（晋献公）曰：“……吾闻之外人之言曰：为仁与为国不同，为仁者爱亲之谓仁，为国者利国之谓仁。”爱亲即爱敬父母，利国即为国谋利。这表明当时人已区别了“仁”的两层含义。</p>
<p>​
孔子与当时一般人不同之处在于将“仁”确立为道德的最高原则。据《论语》所记，孔子对于弟子问仁的答复，因人而异。这是孔子因材施教的表现。过去多数学者认为，孔子并没有给出“仁”的完整界说。我不同意此种观点，我认为孔子确实曾经给出关于“仁”的明确界说。《论语》记载：“子贡曰：’如有博施于民而能济众，何如？可谓仁乎？”子曰：“何事于仁，必也圣乎！尧舜其犹病诸！夫仁者，已欲立而立人，已欲达而达人。能近取譬，可谓仁之方也已。’”（《雍也》）这里，孔子区别了“圣”与“仁”的不同层次。子贡误以“圣”为“仁”，混淆了“圣”与“仁”的不同层次。孔子区别“圣”与“仁”，因而必须讲明“仁”的完整含义，必须如此才能揭示圣与仁的不同意指。而且这里“夫仁者”三字也正是确立界说的格式。所以我认为，“夫仁者，已欲立而立人，已欲达而达人”乃是孔子所讲关于仁的界说。</p>
<p>​
应先诠释所谓“立”“达”的含义。据《论语》记载，孔子多次谈到立。他自称“三十而立”（《为政》，何晏《集解》：“有所成也。”）又说：“立于礼，成于乐。”（《泰伯》）又说：“不知礼，无以立也。”（《尧曰》）立是有所成就，可以自立。孔子又说：“可与共学，未可与适道；可与适道，未可与立；可与立，未可与权。”（《子罕》）这里将“可与立”列于“可与共学”“可与适道”之后，足证“立”属于较高的层次。孔子又说：“臧文仲其窃位者与！知柳下惠之贤而不与立也。”（《卫灵公》，邢昺《疏》：“不称举与立于朝廷也。”）总之，所谓立指有所成就而在社会上有一定的地位。</p>
<p>​
《论语》载：“子张问：‘士何如斯可谓之达矣？’子曰：“何哉尔所谓达者？”子张对曰：在邦必闻，在家必闻。”子曰：‘是闻也，非达也。夫达也者，质直而好义，察言而观色，虑以下人，在邦必达，在家必达。夫闻也者，色取仁而行违，居之不疑。在邦必闻，在家必闻。’”（《颜渊》）这里区别了“闻”与“达”。闻是有一定的名誉而无真实的德行。“达”是具有真实的德行而为人们所承认。</p>
<p>​
“已欲立而立人，己欲达而达人”，包含关于人己关系的一种重要观点，即确认自己是人，亦确认别人也是人；肯定自己有立、达的愿望，也承认别人有立、达的愿望。应该承认，这是道德的一项最根本的原则，可以称为古代的人道主义观点。这是孔子所谓仁的中心含义。</p>
<p>​
《论语》关于孔子论仁的记载，比较重要的还有：“颜渊问仁。子曰：‘克己复礼为仁。一日克己复礼，天下归仁焉。为仁由己，而由人乎哉？’颜渊曰：‘请问其目。’子曰：‘非礼勿视，非礼勿听，非礼勿言，非礼勿动。’”（《颜渊》）又：“仲弓问仁。子曰：‘出门如见大宾，使民如承大祭。已所不欲，勿施于人。在邦无怨，在家无怨。’仲弓曰：‘雍虽不敏，请事斯语矣。’”（同上）又：“樊迟问仁。子曰：‘爱人。’”（同上）按照《左传》的记载，“克己复礼”一语本于“古志”，“出门如见大宾，使民如承大祭”亦与晋文公时臼季所谓“出门如宾，承事如祭”意义相同。这些都不是孔子的创辟之言。唯“爱人”是孔子的创见。“爱人”即“己欲立而立人，已欲达而达人”的简明概括。</p>
<p>​
对于所谓“克己复礼”应有正确的理解。《集解》引孔曰：“复，反也，身能反礼，则为仁矣。”刘宝楠《正义》：“反犹归也，吾将有所视听言动，而先反乎礼，谓之复礼，非谓已先有私，己先无礼，至此乃复也。”复礼即遵循礼的约束之意。这是一项道德修养的方法，并非“政治纲领”。</p>
<p>​
“己所不欲，勿施于人”亦称为恕。《论语》载：“子贡问曰：‘有一言而可以终身行之者乎？’子曰：‘其恕乎！己所不欲，勿施于人。’”（《卫灵公》）据孔子与仲弓的问答，“仁”包括“恕”的意义。也可以说，“己所不欲，勿施于人”是“已欲立而立人，己欲达而达人”的从消极方面的陈述。</p>
<p>​
孔子“贵仁”，同时也宣扬“义”。据《论语》所记，孔子尝说：“君子义以为上。”（《阳货》）“君子义以为质，礼以行之。”（《卫灵公》）“见义不为，无勇也。”（《为政》）“务民之义，敬鬼神而远之，可谓知矣。”（《雍也》）“见得思义。”（《季氏》）孔子所谓“义”即道德原则之义。仁是最高的道德原则，义则泛指道德的原则。</p>
<p>​
值得注意的是，孔子讲仁，又讲义，但据《论语》所载，孔子未尝以仁义相连并举。《左传》记载春秋时各国卿大夫的言论，既谈到仁，也谈到义。如僖公二十七年，记赵衰曰：“《诗》《书》，义之府也。”文公十八年，记季文子之言云：“举八元使布五教于四方，父义，母慈，兄友，弟共（恭），子孝。”宣公十五年，记解扬云：“君能制命为义。”哀公五年，记王生曰：“私仇不及公，好不废过，恶不去善，义之经也。”《左传》亦无以仁义相连并举之例。20世纪20年代，梁任公曾谓仁义对举始于孟子（《古书真伪及其年代》），事实上，《墨子》书记述墨子的言论，已将仁义相连并举了。如《尚同下》云：“子墨子曰：“今天下王公大人士君子，中情将欲为仁义，求为上士，上欲中圣王之道，下欲中国家百姓之利，故当尚同之说而不可不察。”又《非攻下》云：“子墨子曰：‘今且天下之王公大人士君子，中情将欲求兴天下之利，除天下之害，当若繁为攻伐，此实天下之巨害也。今欲为仁义，求为上士，尚欲中圣王之道，下欲中国家百姓之利，故当若非攻之为说而将不可不察者此也。’”是墨子已以仁义并举。考察《墨子》书这类文句的语气，似乎所谓“仁义”是当时人们常用的词语，并非墨家所独创。我推测，以仁义并举，可能始于孔门再传弟子，在战国初期即已流行起来了。《孟子》引述告子“仁内义外”之说，亦以仁义并举。《墨子·公孟》记“子墨子曰：‘……今告子言谈甚辩，言仁义而不吾毁。’”可证告子的年辈在墨子与孟子之间。（赵岐《孟子注》谓告子“尝学于孟子”，实误。）告子以仁义并举，亦先于孟子。</p>
<p>​
仁义相连并举，始于何人，由于书缺有间，已难考定。《周易·说卦传》云：“昔者圣人之作《易》也，将以顺性命之理，是以立天之道曰阴与阳，立地之道曰柔与刚，立人之道曰仁与义。”这叫确以仁与义对举，但《说卦传》此章的年代又难考定。《中庸》云：“仁者人也，亲亲为大；义者宜也，尊贤为大；亲亲之杀，尊贤之等，礼所生也。”《史记》云：“子思作《中庸》。”如《中庸》此章系子思原作，可能是以仁义并举的开始。总之，在子思以后不久，“仁义”一词就流行起来了。</p>
<p>​
“仁者人也”“义者宜也”二句亦影响深远。郑玄注云：“人也读如相人偶之人，以人意相存问之言。”孔颖达疏：“’仁者人也亲亲为大’者，仁谓仁爱相亲偶也，言行仁之法在于亲偶，欲亲偶疏人，先亲己亲，然后比亲及疏，故云亲亲为大。”“相人偶”即把别人看作与自己同类的人。“义者宜也”，宜即当然之意。</p>
<p>​
孟子多次以仁义并举，如说：“王何必曰利，亦有仁义而已矣。”（《梁惠王上》）“仁，人之安宅也；义，人之正路也。”（《离娄上》）“仁，人心也；义，人路也。”（《告子上》）“居仁由义，大人之事备矣。”（《尽心上》）“人皆有所不忍，达之于其所忍，仁也；人皆有所不为，达之于其所为，义也。”（《尽心下》）孟子道德学说的核心是仁义。</p>
<p>​
孟子论仁，强调仁的内心基础，他认为仁是人的“不忍人之心”的发展。他说：“人皆有不忍人之心。……所以谓人皆有不忍人之心者：今人乍见孺子将入于井，皆有怵惕恻隐之心；非所以内交于孺子之父母也，非所以要誉于乡党朋友也，非恶其声而然也。……恻隐之心，仁之端也……”（《孟子·公孙丑上》）不忍人之心即同情心，孟子认为这是仁的内在的根据。孟子又讲论仁与亲亲的关系，他说：“仁之实，事亲是也。”（同书《离娄上》）又说：“亲亲仁也，敬长义也。无他，达之天下也。”（同书《尽心上》）又说：“君子之于物也，爱之而弗仁；于民也，仁之而弗亲。亲亲而仁民，仁民而爱物。”（同上）这里一方面肯定亲亲是仁，一方面又区别了仁与亲与爱的层次。所谓仁有广义、狭义。亲亲、爱物都可谓仁，这是广义。从狭义来讲，仁与亲亲有别。总之，孟子认为，亲亲是仁的出发点，但必须“达之天下”，普遍推行于广大的人民，才可称为仁。</p>
<p>（节选自《中国古典哲学概念范畴要论》，《张岱年全集》第四卷，河北人民出版社1996年版，有删改）</p>
<hr>
<h4 id="仁孔子思想的核心-benevolence_core_of_confucius_thought">“仁”——孔子思想的核心
<span class="citation" data-cites="Benevolence_core_of_Confucius_thought">[@Benevolence_core_of_Confucius_thought]</span></h4>
<p>​
孔子提出的“仁”是他全部思想的核心。它是“礼”的根本内容，是道德伦理观念的基础，是在当时的历史条件下，重视人的世界观的出发点。</p>
<p>​
在孔子以前没有人把“仁”作为一个最重要的哲学概念提出过。孔于提出“仁”的哲学概念并不是偶然的，它在一定程度上反映了春秋时代的社会政治经济状况。春秋时代，铁器开始使用于农业生产，生产力的发展，私田不断扩大，因此就产生了一个新问题：如何能使对生产完全没有兴趣的奴隶劳动者对生产发生兴趣，不再逃亡，使他们能“近者悦，远者来”（《论语·子路》），以适应生产发展的要求呢？也就是说，解决劳动者在生产中的地位，成为当时社会发展的一个重要问题。另外，为适应上述变革要求，剥削阶级之间的斗争较之以往自然也更尖锐，不是旧贵族势力把新兴的封建势力消灭，就是新兴封建势力把保守的旧贵族势力推翻，或者是两者之间的互相调和，妥协。对于现实生活有着深刻了解的孔子，是不会不注意到这样的情况的。代表由奴隶主贵族向封建主阶级转化的思想家孔子，希望能在不打乱上下尊卑的等级关系的条件下来适应社会的变化，因此他在新旧势力之间，就采取调和改良的态度。而对于劳动者，主张改善他们过去在生产中的奴隶地位，对人民行以“德政”，承认某些已经改变了的现实。当时持这种态度的，并不是孔子一个人，稍早于孔子的郑国子产就有过这样的思想。</p>
<p>​
孔子讲到“仁”的地方很多，意思很广泛，从《论语》看几乎是包括了做人的全部规范。它包括忠、恕、孝、悌、智、勇、恭、宽、信、敏、惠等等。孔子的“仁”是他的最高的政治原则和道德准则，他以为离开了“仁”，忠孝信勇等都无意义。那么“仁”的最根本的含义是什么呢？这就是孔子所说的“仁者爱人”。</p>
<p>​
孔子提出“仁者爱人”，当然不是从劳动人民的利益出发的，而是适应封建主阶级的要求，但它却具有广泛的含义：一方面是如何处理剥削阶级和劳动者之间关系的问题；另一方面是如何处理剥削阶级自身之间关系的问题。照孔子看，有了“爱人”的主观意愿，才能处理好人与人之间的关系，才能自觉地按照上下尊卑的等级制度的要求“忠”于君主，孝顺父母；作为统治者来说，对劳动者才能给以恩惠，从而“得众”。但是“爱人”并不是什么人都做得到的，他认为只有“君子”才可能有爱人的品德；至于劳动者根本说不上有这种品德，他说：“君子而不仁者有矣夫，未有小人而仁者也。”（《论语·宪问》）这反映了“仁”的思想的阶级性。</p>
<p>​
子贡问孔子：“如有博施于民，而能济众，如何？可谓仁乎？”孔子回答说：“何事于仁，必也圣乎！”他还说：“弟子，入则孝，出则弟，谨而信，泛爱众，而亲仁。”很明显，这些话的意思都是从统治者的主观要求出发，表示对劳动者应有所恩赐，以便达到“民易使”的目的。孔子所说的“宽则得众”，“惠则足以使人”，其中“众”和“人”虽不一定都是指劳动者，但包括了劳动者应是无疑的。孔子所说的“君子之道”，有所谓“养民也惠”“使民也义”等等，“宽”“惠”“义”虽是统治者的品德，但“宽”“惠”“义”的对象主要是指劳动者也是很清楚的。孔子为什么要把“爱人”也推广到劳动者身上呢？这一点孔子自己就交代得很明白，他说：“仁者先难而后获。”（《论语·雍也》）这显然是从统治阶级的利益出发的，认为统治者行“仁政”虽然不容易，但收获是会很大的。本来孔子就没有隐藏其“仁者爱人”的阶级性。孔子认为，对老百姓“宽”“惠”一些，得到利益的仍然是他那个统治阶级。可见对自己阶级的“爱”和对其他阶级的所谓“爱”，是有不同的目的。</p>
<p>​
孔子强调的“仁者爱人”更为重要的一方面是处理统治阶级内部关系的原则。春秋末期，正是我国奴隶制崩溃、封建制兴起的时期，这时旧的奴隶主贵族和新兴的封建主阶级的矛盾自然是十分尖锐的。孔子在这种形势下采取什么态度呢？针对这种情况他提出了行“仁”的方法，他说：“夫仁者已欲立而立人，已欲达而达人，能近取譬，可谓仁之方也已。”（《论语·雍也》）这就是他的弟子曾参说的：“夫子之道，忠恕而已矣。”其意思是主张在统治阶级之间，要推己及人，如果说奴隶主贵族想要站得住，同时也应该让封建主阶级站得住；如果奴隶主贵族希望自己通达，也应该让封建主阶级通达，用这样的方法才可以实现“仁者爱人”的原则。因为照孔子看来，社会不是一成不变的，总是有“因”有“革”。他说：“殷因于夏礼，所损益，可知也；周因于殷礼，所损益，可知也；其或继周者，虽百世可知也。”（《论语·为政》）所以面对变革着的现实，从中调和，他认为这是“吾从众”的态度，可以适应现实社会的变化。从另一方面说，新兴封建主阶级也应该这样，“忠”则不应“犯上作乱”，“恕”则应“己所不欲，勿施于人”。变革虽然可以，制度虽也可有所损益，但上下尊卑的原则必须保持，你如果不希望自己被别人从尊贵的地位拉下来，你也就不要去把别人从尊贵的地位拉下来。孔子的这套“为仁之方”看来颇有些矛盾之处，而这种矛盾正是当时现实社会矛盾的反映。</p>
<p>​
孔子的“仁”还有一个比较重要的含义，这就是“尚贤”的意思。“尚贤”就是要注重个人的道德、学问和才能，而不必管其出身的高低。这个主张在实际上破坏着奴隶主贵族的世官世禄制度。关于“尚贤”，孔子也讲过许多话，例如他说“学也禄在其中矣”“学而优则仕”等等。在孔子看来，要做官就应该有学问，这个看法对于中国两千多年的封建社会有很大的影响，一方面它打破了世官世禄的贵族政治；另一方面它又能吸收有才能有知识的人为封建统治者服务，但最终又能使知识分子不脱离政治的轨道。</p>
<p>​
《论语》中有这样一段记载：子路让孔子的另一个学生子羔做费这个地方的县长，孔子说：“你这是害了别人的孩子！”子路说：“那个地方有老百姓，有土地和五谷，何必一定要读书才叫做学问呢？”孔子批评子路说：“我就讨厌像你这样强嘴利舌的人。”孔子认为，没有学问没有才能的统治者，那只能是害人的统治者，不能只靠世袭土地和劳动者就可以进行统治，这样的统治是不可靠的。所以当他的学生冉雍问他政治，他说：“先有司（工作带头），赦小过（原谅别人的小过错），举贤才（提拔有道德修养和才能的人）。”（《论语·子路》）有了好的统治者，才能把国家治理好，人民统治好，国家才能安定。</p>
<p>​
孔子认为个人努力很重要，他说：“人能弘道，非道弘人。”（《论语·卫灵公》）他所说的“道”就是“仁”。靠个人的努力可以使“仁”发扬光大；并非靠了“仁”，而自己不努力，他就可以光大了。这就是说，人是主动的，而“仁”是要靠人的主观努力才可以得到的。孔子很看不惯那些不努力求上进的人，认为这样的人没有出息，他说：“后生可畏，焉知来者之不如今也？四十五十而无闻焉，斯亦不足畏也矣。”（《论语·子罕》）由于孔子重视了个人的努力，相对地说降低了“天”的作用，这也可以说是对西周以来“天命”观的一种否定。因此，他的“仁”不仅是一个政治的道德的范畴，而且是他的哲学范畴，它标志着对人自身的重视和对超自然力量的“天”的作用的限制。从这一点说，它一方面在一定程度上起着压低“天”的绝对性和神秘性的作用；另一方面也影响着孟子，孟子在这基础上特别强调人的主体性，从而夸大了人的主观作用。</p>
<p>（选自《孔子研究论文集》，教育科学出版社1987年版）</p>]]></content>
      <categories>
        <category>High School</category>
        <category>Chinese</category>
        <category>Classical Chinese Literature and Poetry</category>
      </categories>
      <tags>
        <tag>School Notes</tag>
        <tag>High School</tag>
        <tag>Chinese</tag>
      </tags>
  </entry>
  <entry>
    <title>五石之瓠-《庄子》</title>
    <url>/2022/03/14/chinese/High%20School/Classical%20Chinese%20Literature%20and%20Poetry/%E9%80%89%E6%8B%A9%E6%80%A7%E5%BF%85%E4%BF%AE/%E4%BA%94%E7%9F%B3%E4%B9%8B%E7%93%A0-%E3%80%8A%E5%BA%84%E5%AD%90%E3%80%8B/</url>
    <content><![CDATA[<h2 id="课文解读">课文解读</h2>
<p>​
《五石之瓠》节选自《庄子·逍遥游》，充分体现了《庄子》善于以寓言说理，且文风汪洋恣肆的特点。选文以主客问答的形式，讲了一大一小两个故事。“大故事”是惠子告诉庄子，他是如何处理一个容得下五石之物的大葫芦的。因为这个葫芦太大了，做不了盛水的容器，剖开做水瓢，又没有地方放，索性就把它打破了。庄子认为，惠子不善于使用大的东西，无法发挥“大”的作用。于是给他讲了一个“小故事”，也就是著名的“不龟手之药”的故事。说宋国有一户人家世代以漂洗丝绵为业，这项工作经常要沾水，为了防止皮肤冻裂，他家有一种特效药，即“不龟手之药”。有人以百金购买这个药方，并把它献给了吴王。吴越两国冬天水战，吴国凭借这种药，取得了胜利，献药者也因此获得了封赏。庄子总结说，同样一种药，有人凭它获得封赏，有人用它世世代代漂洗丝绵，这是用法不同造成的啊！你有这么大的葫芦，为什么不把它系在身上遨游江湖呢？你的见识真是像蓬草一样弯曲不通啊。</p>
<p>​
和《庄子》其他寓言一样，选文也有很多生僻字词，需要依靠课下注释和工具书来解决。但此文的重点、难点不在疏通文字，而在通达其意。</p>
<p>​
首先，要指导学生体会“大故事”和“小故事”的相通之处。前者是围绕如何使用“五石之瓠”展开的，后者是围绕如何使用“不龟手之药”展开的。惠子用“五石之瓠”盛水、做瓢，结果都失败了，最后只能把葫芦打破。这种做法与“世世以拼避为事”、最后以百金售药的宋人极为相似，他们只能看见世俗的小利，看不到背后的“大用”。惠子即惠施，是和庄子同时代的哲学家，也是《庄子》这本书里的“常客”。巧合的是，惠子也是宋国人，当着惠子讲宋人的“蠢事”，带有明显的讥讽意味。综上是“小故事”对“大故事”的第一个作用：批评惠子的固陋。吴王之客凭借此药裂地受封，眼光和做法超过宋人太多，而庄子以超凡的智慧说出大葫芦的“妙用”，在境界上与吴王之客是相似的。这是“小故事”对“大故事”的第二个作用：凸显庄子的超拔。需要说明的是，吴王之客眼光再高，也仅仅是功利的心机，而庄子“浮乎江湖”的想象，则隐含精神的自由，二者不是具体做法和价值取向上相似，只能说在“宋人与客”和“惠子和庄子”这两组对比关系中体现出的境界高下相似。</p>
<p>​
其次，我们既要明晰寓言本身的意义，也要放在《逍遥游》的整体语境中来把握，以获得多向度的理解。单看这则寓言，“小故事”的寓意可以理解为：同一种事物，用法不同，价值就不同。因此要善于转换视角，发现和发挥事物的最大价值。在“大故事”中，庄子运用了“小故事”中蕴含的方法论，借如何处置“五石之瓠”，说明了“无用之用”才是“大用”的道家哲学。这种交叠相生的叙事方法和意义蕴含，类似《庖丁解牛》。庖丁“依乎天理”“因其固然的解牛之道，使梁惠王领悟了养生之法。教学中不妨请学生对读、比较。</p>
<p>​
放在《逍遥游》的整体语境中，不难发现《五石之瓠》与《逍遥游》全篇保持了高度一：其一，《逍遥游》开篇借鲲鹏与“蜩和学鸠”的认知差异，提出“小知不及大知”：又用不知朔的朝菌、不知春秋的蟪蛄与冥灵、大椿作对比，论证了“小年不及大年”，进而抽象出“小大之辩”的概念。小和大都是哲学概念，二者是有区别的：小比不上大。何也？一方面，小对空间和时间的感知太狭隘了，通俗地讲就是没见过世面，不知天地之辽阔，时间之恒久。另一方面，小自以为是，还要嘲笑、讥刺大。《五石之瓠》中的惠子就是小的代表，他不是来向庄子“求教”的，而是暗藏机锋。世上哪有“五石之瓠”？惠子无非借此批评庄子主张的“瓠落无所容”罢了。他的态度也很明朗，“吾为其无用而掊之”，弦外之音是你这种大而不当的思想早就该被打破了。这种认知水平和情感态度，不正和蜩、学鸠、斥鹦等辈不相上下吗？明白了这一点，我们也就能够理解庄子“则夫子犹有蓬之心也夫”这样的嘲讽和批评并不是人身攻击，而是代表“大”对“小”所作的“反击”。其二，《逍遥游》的前文在明确了“小大之辩”后，把批评的矛头指向了儒家：“故夫知效一官，行比一乡，德合一君，而征一国者，其自视也，亦若此矣。”儒家推崇的道德楷模、行为模范，在庄子看来无非和蜩、学鸠、斥鹦等辈是一种境界。儒家是显学，不破不立，这是庄子批判儒家的大背景。儒家之弊在于执着现世，太讲究“有用之用”，缺少对终极价值的追问。庄子则超功利，超道德，直追天地境界，这是他批判儒家的内在动因。惠子是名家，名家近儒，他的话也充满了功利色彩：“以盛水浆，其坚不能自举也。剖之以为瓢，则瓠落无所容。”在他眼里，“五石之瓠”本身没有价值，它的价值需要借助对外物发挥的作用来体现，这与儒家齐家治国、建功立业、名垂青史的价值观何其相似。道家认为人生命存在的本身是有价值的，而且这是最大的价值，不能为外物做牺牲。宋荣子“举世誉之而不加劝，举世非之而不加沮”，得到了庄子的肯定，正因为他“定乎内外之分，辩乎荣辱之境”。可以说，《五石之瓠》这则寓言对惠子的批评，同样延续了前文对儒家的批评。其三，《五石之瓠》在反击惠子的问难、批判其狭隘功利主义的同时，也轻巧地点出了《逍遥游》的题旨。何谓“逍遥”？前文在连续否定或排除儒生、宋荣子、列子等人的生命状态之后，庄子给出结论：“若夫乘天地之正，而御六气之辩，以游无穷者，彼且恶乎待哉！”可见，彻头彻尾的逍遥就是无所依傍，无所事事，获得身心的绝对自由。《五石之瓠》里庄子给惠子开出的药方是“何不虑以为大樽而浮乎江湖”。在这个方案里，葫芦的使用者身心两闲，优游从容；大葫芦既没有被劈开，也没有被当成粗笨的器皿，它不仅保全了自己，还发挥了“大用”。这种主客体的自在亲和，不正是一幅逍遥的画面吗？</p>
<p>​
或曰，葫芦的使用者和大葫芦还要依靠江水、湖水的浮力，既有所“待”，怎算逍遥？这就有点儿胶柱鼓瑟了。《庄子》是哲学，不是教人修仙的，他哪有摆脱重力、浮力的神通？他只是用文学语言来表达哲学思想，需要读者边读边悟，触类旁通。这种随性所之、若即若离的文风与庄子哲学追求相匹配，需要教师在教学过程中通过诵读等方法予以指导。如能把《老子》选段与之比较，从思想认识和表达方式上观察二者的异同，则更有利于深入理解道家思想和两位代表人物的特点。</p>
<h2 id="参考资料">参考资料</h2>
<h3 id="参考译文">参考译文</h3>
<div class="classcial-chinese-literature-and-poetry-translation"><div class="paragraph"><p class="original-text">惠子谓庄子曰：“魏王贻我大瓠之种，我树之成而实五石。</p><p class="translation">惠子对庄子说：“魏王送我一颗大葫芦的种子，我种植它结出能容得下五石的东西（的果实）。</p><p class="original-text">以盛水浆，其坚不能自举也。剖之以为瓢，则瓠落无所容。</p><p class="translation">用来盛水，它的坚固程度却经不起自身所盛水的压力。把它剖开来做瓢，则瓢宽大而没有什么可盛受的东西。</p><p class="original-text">非不呺然大也，吾为其无用而掊之。”</p><p class="translation">不是不大，我认为它没有用处，就把它击破了。”</p><p class="original-text">庄子曰：“夫子固拙于用大矣！</p><p class="translation">庄子说：“你真是不善于使用大的东西啊！</p><p class="original-text">宋人有善为不龟手之药者，世世以洴澼絖为事。客闻之，请买其方百金。</p><p class="translation">有个宋国人善于制作防止手冻裂的药物，他家世世代代都以漂洗丝絮为业。有一个客人听说这种药品，愿意出百金收买他的药方。</p><p class="original-text">聚族而谋之曰：‘我世世为洴澼絖，不过数金。</p><p class="translation">于是聚合全家来商量说：‘我们家世世代代漂洗丝絮，只得到很少的钱，</p><p class="original-text">今一朝而鬻技百金，请与之。’</p><p class="translation">现在一旦卖出这个药方就可获得百金，就卖了吧！’</p><p class="original-text">客得之，以说吴王。</p><p class="translation">这个客人得到药方，便去取悦吴王。</p><p class="original-text">越有难，吴王使之将，</p><p class="translation">这时越国发兵侵犯吴国，吴王就派他领兵，</p><p class="original-text">冬，与越人水战，大败越人，裂地而封之。</p><p class="translation">冬天和越人水战，大败越人，于是割地封赏他。</p><p class="original-text">能不龟手一也，或以封，</p><p class="translation">同样一个防止手冻裂的药方，有人因此得到封赏，</p><p class="original-text">或不免于洴澼絖，则所用之异也。</p><p class="translation">有人却只是用来漂洗丝絮，这就是使用方法的不同。</p><p class="original-text">今子有五石之瓠，何不虑以为大樽而浮乎江湖，</p><p class="translation">现在你有五石容量的葫芦，为什么不把它用绳结缀当作大樽而浮游于江湖之上，</p><p class="original-text">而忧其瓠落无所容？则夫子犹有蓬之心也夫！”</p><p class="translation">反而愁它太大无处可容呢？可见你还是见识不通达啊！”</p></div></div>
<h3 id="参考文献">参考文献</h3>
<h4 id="庄子逍遥游的本意-the_original_meaning_of_zhuangzi_xiaoyaoyou">庄子“逍遥游”的本意
<span class="citation" data-cites="The_original_meaning_of_Zhuangzi_Xiaoyaoyou">[@The_original_meaning_of_Zhuangzi_Xiaoyaoyou]</span></h4>
<p>​
《逍遥游》是《庄子》三十三篇的第一篇，是理解庄子思想体系的关键。“开宗不了‘逍遥’字，空读南华三十篇。”但古来对“逍遥游”的理解分歧较大。举其要者，略说几家。</p>
<p>​
“任性”为逍遥说。“夫小大虽殊，而放于自得之场，则物任其性，事称其能，各当其分，逍遥一也，岂容胜负于其间哉！”“向子期、郭子玄《逍遥》义曰：‘夫大鹏之上九万，斥鹦之起榆枋，小大虽差，各任其性。苟当其分，逍遥一也。然物之芸芸，同资有待，得其所待，然后逍遥耳。唯圣人与物冥而循大变，为能无待而常通，岂独自通而已！又从有待者不失其所待，不失则同于大通矣。’”</p>
<p>​
“销尽有为累，远见无为理”为逍遥说。《庄子集释·庄子序》顾桐柏云：“逍者，销也；遥者，远也。销尽有为累，远见无为理。以斯而游，故曰逍遥。”</p>
<p>​
“无待”为逍遥说。晋人支遁《逍遥论》曰：“夫逍遥者，明至人之心也。……鹏以营生之路旷，故失适于体外；鹦以在近而笑远，有矜伐于心内。至人乘天正而高兴，游无穷于放浪；物物而不物于物，则遥然不我得（当为“待＇），玄感不为，不疾而速，则逍然靡不适。此所以为逍遥也。”“（列子）乘风轻举，虽免步行，非风不进，犹有须待。自宰官已下及宋荣御寇，历举智德优劣不同，既未洞忘，咸归有待。唯当顺万物之性，游变化之途，而能无所不成者，方尽逍遥之妙致者也。……言无待圣人，虚怀体道，故能乘两仪之正理，顺万物之自然，御六气以逍遥，混群灵以变化。苟无物而不顺，亦何往而不通哉！明彻于无穷，将于何而有待者也！”“无所待而游于无穷，方是《逍遥游》一篇纲要。”</p>
<p>​
“放狂自得”为逍遥说。“逍遥者，盖是放狂自得之名也。至德内充，无时不适；忘怀应物，何往不通！以斯而游天下，故曰逍遥游。”（穆夜说，引自唐成玄英《庄子疏·序》）</p>
<p>​
“大”为逍遥说。“‘北冥’，即北海，以旷远非世人所见之地，以喻玄冥大道。海中之鲲，以喻大道体中，养成大圣之胚胎。”“’大’字是一篇之纲。”</p>
<p>​
“逍遥游，是指的明道者——从必然王国进入自由王国以后所具有的最高精神境界。大鹏就是这种人的形象。”</p>
<p>​
“大知境界”为逍遥说。《逍遥游》可分六段，六段之间在逻辑结构上高度一致，其共同逻辑指向是“小知不及大知”。“小知”代表惠子的境界，以出仕为官作为自身价值的实现；“大知”代表庄子的境界，否定出仕为官作为自身价值的实现。“大知”境界即是“逍遥”。“逍遥”的本义是“无为”之乐。</p>
<p>​
并认为庄子“以‘大鹏’形象自比”。“无待”是“逍遥”，“有待”不是“逍遥”，是没有问题的。但不能将大鹏说成是“有待”、非“逍遥”的。恰如宣颖所指出的，“大鹏”与“无待”的“乘天御气之人”处于等价的地位，同属“逍遥”的境界。（檀作文）</p>
<p>​
“中段入手，撇却知效一官等人，不过如斥鹦而已。宋荣子、列子，固在斥鹦之上，若乘天御气之人，其大鹏乎！庄子胸眼之旷如是。”</p>
<p>​
浦江清批郭象：“郭象说：‘小大虽殊，逍遥一也’，则是庄子之旨，在齐大小。问题是庄子在别篇里有齐大小的意思，在这一篇里没有，不但没有，而且说小不如大。所以庄子的原意，与郭象的解说，恰恰立于相反的地位。大鹏之适南冥，水击三千里，抟扶摇而上者九万里，而蜩与学鸠笑之。郭象说：’苟足于其性，则虽大鹏无以自贵于小鸟，小鸟无羡于天池。’这完全以物任其性解释《逍遥》的意义……不过庄子原文并没有赞成蜩与学鸠的笑，反一再加以指斥，这又如何能说得通呢？’之二虫，又何知？’是第一指斥，’小知不及大知’是第二指斥，文章本来是很明白浅显的。”</p>
<p>​
“闲放不拘，怡适自得”为逍遥说。《逍遥游》者，篇名，义取闲放不拘，怡适自得。”“无己”为逍遥说。“《逍遥游》主意，只在“至人无己”。无己，所以为逍遥也。”</p>
<p>​
“高远”为逍遥说。“逍遥”就是高远的意思……本书（指《庄子》）中有几处用到“逍遥”，都是由“高远”引申而来的“超脱”、“自在”义，因志存高远而超脱自在。”</p>
<p>​
“飞”为逍遥说。“飞，以及飞所代表的上升，正是《逍遥游》的主题。”“逍遥游其实是一个从人间世开始的艰难旅程的终点。在这个旅程中，有德的内充，有道的显现，有知的遗忘，有行的戒慎……所有这一切，对于逍遥游来说都是必须要走的路。”“彭祖和大鹏等大物的出场，在某种意义上只是为了显示众人和小鸟等小物的无知和局限。……可是在以大鹏们破除了小鸟们的无知和局限之后呢，如果我们执着于大鹏和彭祖的世界，我们是不是仍然和小鸟们一样无知和局限着？因此在鲲鹏的寓言中，关键的问题不在于知识，而是眼界，或者人们习惯说的境界。……小大之辨，突出的是眼界的高低，数丈和九万里，显然不可同日而语。在如此不同的高度上来看世界，该是非常不同的吧。一个是历历在目，清晰可见，山是山，水是水，你是你，我是我。另一个呢，山水你我都消失在如野马尘埃般氤氲着的宇宙大化之中。各种各样的形体都不见了，融化在十日并出的光芒中，没有固定的东西，鲲可以化作鹏，庄周可以化作蝴蝶，这是一个流动的世界，还有什么东西可以执着吗？其实重要的不是执着于外物，而是自己。……自我的丧失使得人间世的引力失去了作用，功名利禄等失去了寄放之地，你就会像大鹏一样高举和上升，到达九万里的天际。当然，这样高举和上升的并不包括你的身体，而仅仅是你的心灵。”</p>
<p>​
探寻庄子“逍遥游”的本意，应当尊重庄子《逍遥游》中的表述。从《逍遥游》文本看，“无待”说似是庄子本意。“无待”就是无所凭借，绝对自由。</p>
<p>​ 《逍遥游》由反导正，先总后分。</p>
<p>​ 由反导正，是指由“有待”（反面）推导出“无待”之“逍遥游”（正面）。</p>
<p>​
先总后分，是指先总论，再分论。据此，本文的论证结构可分为总、分两部分。</p>
<p>​
第一部分（开头至“圣人无名”），总论：什么叫“逍遥游”？最终提出论点：“无待”为“逍遥”。这部分可分四层：</p>
<p>​ （1）从反面说起，现实自然中，无论大小皆“有待”，非“逍遥”。</p>
<p>​ （2）虽皆“有待”，但程度有别，“小知不及大知，小年不及大年”。</p>
<p>​ （3）现实社会中，无论修养高低皆“有待”，非“逍遥”。</p>
<p>​
（4）推导出正面论点：“无待”为“逍遥”，只有修养到“无己”“无功”“无名”，才能“无待”而“逍遥”。并由“无己”“无功”“无名”，自然过渡到分论。</p>
<p>​
第二部分（“尧让天下于许由”至结尾），分论：什么叫“无己”“无功”“无名”？或曰：怎样才能做到“逍遥游”。这部分可分三层：</p>
<p>​
（1）“尧让天下于许由”事，以许由为例，言“无名”“无功”（不越俎代庖）。</p>
<p>​
（2）“肩吾问于连叔”事，以藐姑射神人为例，言“无功”“无己”，“孰弊弊焉以天下为事”为“无功”，“大浸稽天而不溺，大旱金石流、土山焦而不热”为“无己”，修养到“天地与我并生，万物与我为一”之“无己”，才会“不溺”“不热”。</p>
<p>​
（3）“惠子谓庄子”事，言无用为大用，对社会无用，就“不夭斤斧，物无害者”，对自己“保身”“全生”“养亲”“尽年”则是大用。</p>
<p>​
“无己”“无功”“无名”，一切顺应自然，就不会有任何束缚；当然对社会也就“无用”，“无用”就不会受害，就不会有任何畏惧。内心无束缚，外物无加害，才可能“逍遥游”。“无己”“无功”“无名”，只是侧重不同，三者常交融一体，不可截然分开。从理论上说，只有认识论上修养到“无己”，人生观才可能修养到“无功”“无名”。“无功”“无名”是无法分开的，“无功”自然“无名”，“无名”自然“无功”。</p>
<p>（选自《先秦两汉文学研究》，商务印书馆2013年版）</p>]]></content>
      <categories>
        <category>High School</category>
        <category>Chinese</category>
        <category>Classical Chinese Literature and Poetry</category>
      </categories>
      <tags>
        <tag>School Notes</tag>
        <tag>High School</tag>
        <tag>Chinese</tag>
      </tags>
  </entry>
  <entry>
    <title>人皆有不忍人之心-《孟子》</title>
    <url>/2022/03/14/chinese/High%20School/Classical%20Chinese%20Literature%20and%20Poetry/%E9%80%89%E6%8B%A9%E6%80%A7%E5%BF%85%E4%BF%AE/%E4%BA%BA%E7%9A%86%E6%9C%89%E4%B8%8D%E5%BF%8D%E4%BA%BA%E4%B9%8B%E5%BF%83-%E3%80%8A%E5%AD%9F%E5%AD%90%E3%80%8B/</url>
    <content><![CDATA[<h2 id="课文解读">课文解读</h2>
<p>​
课文是《孟子·公孙丑上》篇第六章。“不忍人”是不狠心对待别人，“不忍人之心”也就是善良、慈爱的心。</p>
<p>​
首先，孟子先从性善论出发，提出“人皆有不忍人之心”的观点。先王有善良、仁慈之心，也就有了仁政。如果当下的治国者也能像先王一样把善心推广到政治上，同样能达到“治天下可运之掌上”的效果。接着，孟子举证“人皆有不忍人之心”的原因之所以说每个人都有怜爱别人的心，其道理就在于：（譬如）现在有人突然看到一个小孩子要跌到井里去了，都有惊骇、哀痛、怜悯（别人的不幸）的心情。。他选取一个极端情况，以探究本能反应背后的心理动机，并用排除法来证明自己的观点：当孺子将要掉进井中时，观者会情不自禁地产生惊骇、怜悯的感情。这不是因为要借此结交孩子的父母，也不是要在乡甲博取名誉，更不是讨厌孩子落井时发出的声音，是人的天性如此啊！至此，可以看作课文的第一层，指出人的天性善良。执政者也是人，如果他们推广善心，则天下大治。</p>
<p>​
从“由是观之”开始，孟子进一步推演他的思想。既然侧隐之心（即“不忍人之心”）是天生的，那么“羞恶之心”“辞让之心”“是非之心”这些美好的天性，也应该是与生俱来的，没有这些就不能称为人。这些天性和后天的道德品质之间又存在内在联系，它们分别是仁、义、礼智的萌芽（端），从而为儒家的道德准则提供了心理基础，这也是对孔子以来儒家思想的重要发展。为了坐实这一论点，孟子用了一个非常精彩的比喻：“人之有是四端也，犹其有四体也。”这比喻的妙处在于，用人的生理构造（有四体）比喻心理特点（有四端），便于读者理解后者同样是与生俱来的道理。更重要的是，以“四体”喻“四端”，也能为后文论述张本。这里的“贼”是“伤害”的意思，很容易让人联想到有四端而自弃，就像自残四肢一样愚蠢。“扩而充之”是扩大、充实的意思，与四肢不断生长发育相类似。通过一系列类比和比喻，孟子充分说明了“仁义礼智，非由外铄我也，我固有之也”（《孟子·告子上》）的观点，并且期望人们去扩允、发扬最终达成修、齐、治、平的理想。以不忍人之心，行不忍人之政，治天下可运之掌上。</p>
<p>​
《孟子》不同于《论语》，很多章节篇幅较长，具备了散文的典型特征；孟子又以雄辩著称，不仅逻辑严密，而且富有气势和感染力。因此，教学中不仅要把握课文的思想内容，还要关注孟子的论证方式和言语特点。</p>
<p>​
《〈论语〉十二章》《大学之道》《人皆有不忍人之心》三篇构成了第5课，这些内容都是儒家经典。教学过程中一方面要做好单篇精读、精讲，另一方面也要注意篇章之间在思想内涵上的继承和发展关系，以促进学生全面、深入地理解儒家思想。如“大学之道”所谈的理想、目标与《论语》相关章句，不忍人之心与《论语》中“仁”的概念等，都可作为比较研究的对象。</p>
<h2 id="参考资料">参考资料</h2>
<h3 id="参考译文">参考译文</h3>
<div class="classcial-chinese-literature-and-poetry-translation"><div class="paragraph"><p class="original-text">孟子曰：“人皆有不忍人之心。</p><p class="translation">孟子说：“每个人都有怜爱别人的心。</p><p class="original-text">先王有不忍人之心，斯有不忍人之政矣。</p><p class="translation">先王因为有怜爱别人的心，这就有怜爱别人的统治了。</p><p class="original-text">以不忍人之心，行不忍人之政，治天下可运之掌上。</p><p class="translation">凭着怜爱别人的心来实施怜爱别人的统治，治理天下可以像运转小物件于手掌上一样容易。</p><p class="original-text">所以谓人皆有不忍人之心者：今人乍见孺子将入于井，皆有怵惕恻隐之心。</p><p class="translation">之所以说每个人都有怜爱别人的心情，（是因为如果）今天有人突然看见一个小孩要掉进井里面去了，都会产生惊惧哀痛怜悯（别人不幸）的心理；</p><p class="original-text">非所以内交于孺子之父母也，非所以要誉于乡党朋友也，非恶其声而然也。</p><p class="translation">这种心情的产生，不是为着要来结交这小孩的爹娘，不是为着要在同乡朋友中间博取名誉，也并非因为厌恶孩子的哭声才这样。</p><p class="original-text">由是观之，无恻隐之心，非人也；</p><p class="translation">从这里看来，（一个人）如果没有同情之心，简直不是人；</p><p class="original-text">无羞恶之心，非人也；</p><p class="translation">如果没有对自身的不善感到羞耻，对他人的不善感到憎恶之心，简直不是人；</p><p class="original-text">无辞让之心，非人也；无是非之心，非人也。</p><p class="translation">如果没有谦逊推让之心，简直不是人；如果没有是非之心，简直不是人。</p><p class="original-text">恻隐之心，仁之端也；羞恶之心，义之端也；</p><p class="translation">哀痛之心是仁的萌芽，羞耻之心是义的萌芽，</p><p class="original-text">辞让之心，礼之端也；是非之心，智之端也。</p><p class="translation">推让之心是礼的萌芽，是非之心是智的萌芽。</p><p class="original-text">人之有是四端也，犹其有四体也。</p><p class="translation">人有这四种萌芽，就好比他有四肢一样（是自然而然的）。</p><p class="original-text">有是四端而自谓不能者，自贼者也；谓其君不能者，贼其君者也。</p><p class="translation">有这四种萌芽却自己认为不行的人，这是伤害自己的人；认为他的君主不行的人，就是伤害他的君主的人。</p><p class="original-text">凡有四端于我者，知皆扩而充之矣，若火之始然，泉之始达。</p><p class="translation">所有具有这四种萌芽的人，如果知道把它们扩充起来，便会像刚刚燃烧的火（终必不可扑灭）；刚刚流出的泉水（终必汇为江河）。</p><p class="original-text">苟能充之，足以保四海；苟不充之，不足以事父母。”</p><p class="translation">假若能够扩充，便足以安定天下；假若不扩充，（让它消灭，）便连侍奉父母都不行。”</p></div></div>
<h3 id="参考文献">参考文献</h3>
<h4 id="孟子论道德理性与道德情感-mengzi_morality_rationality_and_sensibility_guoqiyong">孟子论道德理性与道德情感
<span class="citation" data-cites="Mengzi_morality_rationality_and_sensibility_Guoqiyong">[@Mengzi_morality_rationality_and_sensibility_Guoqiyong]</span></h4>
<ol type="1">
<li>孟子的人性本善论</li>
</ol>
<p>​
在孟子生活的时代，人性问题成为中国思想界争鸣的一个焦点。《孟子·告子上》第六章记载了孟子的弟子公都子的提问。这一提问概括了当时有代表性的几种观点：一是告子主张的“性无善无不善”论，二是有人主张的“性可以为善，可以为不善”论，三是无名氏的“有性善，有性不善”论。</p>
<p>​
告子主张“生之谓性”。在那时，“生”字与“性”字互训。告子代表当时流行的看法，常识的看法。告子说，人性如湍流一样，引向东方则东流，引向西方则西流，都是由外在环境和条件决定的。孟子则提出了与当时流行看法迥然有别的有关人性的新看法。他指出，水可以向东向西，但水总是向下流，虽然人们可以把水引上山，但向上流却不是水的本性，而是外力使它这样的。人也是这样，人性本善，就像水向下流。而人的不善，不是由他的本性决定的。也就是说，人之为善，是他的本性的表现，人之不为善，是违背其本性的。例如牛山草木繁盛，但因人为的破坏变成了秃山，这不是说牛山的本性不能生长树木。同样，人在事实经验上的不善，并不能证明其本性不善。</p>
<p>​
孟子认为，犬之性与牛之性不同，牛之性与人之性不同。人有自然的食色之性，但人之所以为人，或者说人与禽兽的本质差异，在于人有内在的道德的知、情、意，这是人所固有的道德属性。他说：“恻隐之心，人皆有之；羞恶之心，人皆有之；恭敬之心，人皆有之；是非之心，人皆有之。侧隐之心，仁也；羞恶之心，义也；恭敬之心，礼也；是非之心，智也。仁义礼智，非由外铄我也，我固有之也，弗思耳矣。”故曰：“求则得之，舍则失之。”</p>
<p>​
按孟子的看法，侧隐、同情、内心不安、不忍之心，如不忍牛无辜被杀等，诸如此类道德的情感是善的开端、萌芽。人内在的具有侧隐、羞恶、恭敬、是非等道德的同情心、正义感、羞耻感、崇敬感和道德是非的鉴别、判断，这些东西就是道德理性“仁”“义”“礼”“智”的萌芽。这是人内在固有的，而不是外力强加的。把这些萌芽状态的东西扩充出去，就可以为善。</p>
<p>​ 孟子说：
“仁，人之安宅也；义，人之正路也。”人都有仁义之心，之所以丧失良心，是因为不善于保养。如果不加以保养，就会失掉。人们丢失了家中养的鸡犬，知道去寻找，然而丢失了良心，却不知道去找回来。因此孟子提出“求其放心”，即把那丧失的善良之心找回来的要求。人与非人的差别本来就小，君子保存了，一般老百姓却丢掉了。“人之所以异于禽兽者几希，庶民去之，君子存之。舜明于庶物，察于人伦，由仁义行，非行仁义也。”舜是由内心保存的仁义去行事，而不是在外力之下勉强地去行仁义。“由仁义行”，是由道德理性而行，是人按内在的道德命令而行，是人的道德自由；而“行仁义”，则是被动地按社会规范去做。</p>
<p>​
孟子与告子辩论，以类比法在杞柳之辩、湍水之辩上成功，又进一步运用反诘式、归谬法，在“生之谓性”之辩、“仁内义外”（告子一方）还是“仁义内在”（孟子一方）之辩上，最后归谬成功。按告子的思想逻辑，犬、牛之性与人之性没有根本的差异。孟子在中国哲学史上第一次明确揭示了关于人性的新的观念：人具有不同于动物或他物的特殊性，这就是道德性。孟子不否认人有自然欲望之性，但他的意思是，如将自然欲望作为人之本性，则无法讲清人之与动物或他物的区别，只有道德本性才是人最根本、最重要的特性，是人之所以为人的标尺。孟子说：“乃若其情,则可以为善矣,乃所谓善也。若夫为不善,非才之罪也。”“情”,在此作“实”讲;
“才”，在此与“情”一样，也即质性。这句话的意思是，若照着人天生的特殊资质、情状去做，自可以为善，这就是我所谓人性善，而有人在事实上为不善，不能归罪于所禀赋的质性上。</p>
<p>​
孟子把良心称为本心，本心是性善的基础或根据。良心本心是上天赋予的，“此天之所与我者”。“人之所不学而能者，其良能也；所不虑而知者，其良知也。孩提之童，无不知爱其亲者；及其长也，无不知敬其兄也。亲亲，仁也；敬长，义也。无他，达之天下也。”孩提之童都知道爱其亲，长大也都懂得敬其兄，亲情之爱，敬长之心，就包含有仁义。这都是不学而能，不虑而知的。仁义是禀赋，是内在的。</p>
<p>​ 孟子说： “君子所性，仁义礼智根于心。”又说：
“虽存乎人者，岂无仁义之心哉？”李明辉解释说，这表明孟子认识到“道德法则系出于道德主体”；
“所谓‘仁义之心”，即是能决定仁义礼智之心，亦即能为道德立法的本心。”也就是说，心为道德法则的制定者。</p>
<p>​ 孟子不仅发展了孔子的“为仁由己”
“仁远乎哉？我欲仁，斯仁至矣”的思想，而且发展了孔子的天道观。结合这两方面，他更强调了“诚”这个范畴，这与子思的影响有关。“诚”是真实无妄，是天道的运行规律，又是一种道德体验的状态，是对本心良知的最终根源—“天”的一种虔诚、敬畏之情。他说：“是故诚者，天之道也；思诚者，人之道也。”以诚敬的态度对天和天道的反思和追求，就是做人之道。他又说：
“尽其心者，知其性也。知其性，则知天矣。存其心，养其性，所以事天也。天寿不贰，修身以俟之，所以立命也。”仁义礼智是天赋予人的本性，充分扩张善心，就能体知这一本性，也就可以体验天道，懂得天命。保持本心，培养本性，才能侍奉上天。无论短命也好，长寿也好，我们都悉心修养身心，善待天命，这才是安身立命之道。孟子把心、性、天统一了起来。“天”是人的善性的终极根据。</p>
<ol start="2" type="1">
<li>孟子论道德理性与道德情感</li>
</ol>
<p>​
孟子关于人性的讨论，是从人的情感——不忍人之心、侧隐之心出发的。人的道德直觉，道德担当，当下直接的正义冲动，并没有任何其他的功利的目的。</p>
<p>​ 他说：
“所以谓人皆有不忍人之心者：今人乍见孺子将入于井，皆有怵惕侧隐之心；非所以内交于孺子之父母也，非所以要誉于乡党朋友也，非恶其声而然也。由是观之，无侧隐之心，非人也；无羞恶之心，非人也；无辞让之心，非人也；无是非之心，非人也。恻隐之心，仁之端也；羞恶之心，义之端也；辞让之心，礼之端也；是非之心，智之端也。人之有是四端也，犹其有四体也。……苟能充之，足以保四海；苟不充之，不足以事父母。”</p>
<p>​
在以上例子中，孟子指出，一个人要冲过去救一个即将落入水井的孩子，当下的刹那之间，并不是要结交孩子的父母或在乡党朋友面前显示自己，谋取虚荣。他内心有一个无条件的道德要求和绝对命令，使他不假思索地去做。人作为道德主体，自己为自己下命令，自己支配自己。这一主体既是意志主体，又是价值主体，更是实践的主体。仁、义、礼、智、信等，不完全是社会他在的道德规范，同时又是本心所制定的法则，即是道德理性。孟子强调道德生活的内在性。</p>
<p>​
同时，恻隐、羞恶、辞让、是非等心，是仁、义、礼、智的萌芽，既是理，又是情。这种“四端之心”本身既含有道德价值感，同时又是道德判断的能力和道德践履的驱动力，成为现实的道德主体自我实现的一种力量。没有四端之心，人就会成为非人。如果我们把这“四端之心”扩充出来，便会像刚刚烧燃的火，刚刚流出的泉水。扩充了它，就可以安定天下；而让它泯灭，便连爹娘都不能赡养。</p>
<p>​
按孟子的看法，善性良知是天赋予人的，是先于经验的，是人区别于他物的类特性、类本质，在人之类的范围内是具有普遍性的。他说：
“非天之降才尔殊也……故凡同类者，举相似也，何独至于人而疑之？圣人，与我同类者。……口之于味也，有同嗜焉；耳之于声也，有同听焉；目之于色也，有同美焉。至于心，独无所同然乎？心之所同然者何也？谓理也，义也。圣人先得我心之所同然耳。故理义之悦我心，犹刍拳之悦我口。”不同的人，有诸多的差异，但口对于味道，耳对于声音，目对于颜色，又有共同的好恶，都欣赏美味、美声、美色。同样的，人的心也有其同一性，都爱好仁义礼智。我心对于理、义的愉悦，就像我口对于牛羊肉的喜好一样。圣人之所以为圣人，就是比普通的人先觉悟到人的道德的要求，懂得人的这种普遍性（“心之所同然”）。理、义是道德理性，人喜好之，如同感官对于美味、美声、美色的喜好一样。这个比喻很危险，但在孟子看来却很正常，因为道德的认识与实践，是与人的整个生命，首先是与身体联系在一起的。</p>
<p>​
孟子指出，仁义礼智这些道德性，源于本心，只是人们常常不能自己体认良心本心，因此常常需要反躬自问，自省自己的良心本心。他说：
“万物皆备于我矣。反身而诚，乐莫大焉。强恕而行，求仁莫近焉。”这里所说的我所具备了一切，不是指外在的事物、功名，而是说道德的根据在自己，元无欠少，一切具备。在道德精神的层面上，探求的对象存在于我本身之内。道德的自由是最高的自由，不受外在力量的左右，因为道德的行为总是自我命令的结果。反躬自问，切己自反，自己觉识到自己的行为无愧于天人，就是最大的快乐。不懈地以推己及人的怨道去做，达到仁德的道路没有比这更直接的了。除了反求本心，还要推扩本心，即把人的这种道德心性实现出来。“君子所性，虽大行不加焉，虽穷居不损焉，分定故也。君子所性，仁义礼智根于心，其生色也辟然，见于面，盘于背，施于四体，四体不言而喻。”君子的这种本性，不因他的理想大行于天下而增加，也不因他穷困隐居而减损，因为本分已经固定了。君子的本性，仁义礼智之心可以反映到他的神色是纯和温润的，还表现在他身体的各方面，乃至于手足四肢的动作上。本心通过推扩，通过四体，实现出来。孟子的重要论断“仁义礼智根于心”，“是不能通过外在的归纳来证明的，只能通过内在的相应来体证。人之所以能向善，正是因为他在性分禀赋中有超越的根源，只有在这里才可以说性善。现实上的人欲横流、善恶混杂并不足以驳倒性善论的理据。由这一条线索看，儒家伦理的确与康德的实践理性有相通处……”由上可知孟子的仁义内在，性由心显，以心善言性善的特征。</p>
<p>​
许多学者已经讨论过孟子思想中的理性与情感。例如，牟宗三肯定孟子仁义内在的观点近于康德伦理学中的自律的观念，而两者的区别在于他们对理性与情感之间的关系的理解。这种讨论为刘述先和李明辉所继承和发展，上文已经引用了他们的观点。另一方面，如
David
Wong（王大卫）在他的论文《孟子思想中有理性与情感之分吗？》中指出，孟子实际上并没有这种区分，并且论证说孟子不作这种区分有他背后的观念作为理据，并且这一理据是可以成立的。尽管大家的诠释有很多不同之处，有一点是相同的，那就是，他们都曾经尝试把孟子思想放人西方哲学家所划出的基本区分中去讨论，然后发现分歧是难以避免的。这种分歧其实产生于东西方对道德意识与情感的基本理解。在西方思想中有一个很强势的区分，即理性（主动的，给予法则的）和情感或感性（被动的，为自然所决定的）之分。似乎情感仅仅是属于感性层面，而感性只是一种能力，它只是在受到刺激之后而根据人类自身的心理构造而作出自然的反应。马克斯·舍勒在他的《伦理学中的形式主义与质料的价值伦理学》一书中已经批评过这一区分。他试图揭示一个新的领域：“一种纯粹的直观、感受，一种纯粹的爱和恨，一种纯粹的追求和意愿，它们与纯粹思维一样，都不依赖于我们人种的心理物理组织，同时它们具有一种原初的合规律性，这种合规律性根本无法被回溯到经验的心灵生活的规则上去。”舍勒对传统的理性、情感的二分的挑战是一种洞见。然而他的工作尚是初步的。在这种“纯粹直观和感受”的领域，仍然有许多理论空间可以发掘。孟子以及许多支持其观点的宋明儒者，都将我们的视角引向仁义礼智等先天的价值，孟子深信，心自身具有对这些先天价值的天生的倾向。这些价值本身具有内在的条理，它并非从理论理性的原则推导而出，却同时是合理的。这令人联想起舍勒经常引用的帕斯卡的名言：心灵自有其理。</p>
<ol start="3" type="1">
<li>孟子的道德人格论</li>
</ol>
<p>​
孟子十分重视人格独立和节操。每每向诸侯进言，他从不把诸侯高高在上的地位放在眼里，决不被那些“大人”的权势所吓倒。他有“说大人则藐之，勿视其巍巍然”的气概。他引用、重申曾子的话：“彼以其富，我以吾仁；彼以其爵，我以吾义；吾何慊乎哉？”他有他的财富、爵位，我有我的仁义道德，我并不觉得比他少了什么。继承子思的孟子有着自由知识分子的骨气和傲气，有着“舍我其谁”的气魄、胆识。他发展了孔子关于“德”与“位”的矛盾学说，举起了“以德抗位”的旗帜，对后世知识分子有极大的影响。</p>
<p>​
他有“天爵”“人爵”的区分：“有天爵者，有人爵者。仁义忠信，乐善不倦，此天爵也。公卿大夫，此人爵也。”天爵是在价值世界里才能达到的境界，而人爵只是世俗的功名利禄。天爵作为精神世界里的高尚道德、人格的尊严，操之在己，求则得之，不可剥夺。因此，君子所追求的是天爵而不是人爵。孟子认为，道德原则或精神理想是人自身所具有的，而不是依赖他人赐予的最为宝贵的东西，这就是“良贵”。别人给你的贵位不是“良贵”，“良贵”是自身具有的。</p>
<p>​
在子思子的德气论的“五行”学说基础上，孟子还创造了“浩然之气”的名词。他说：“我善养吾浩然之气”；“其为气也，至大至刚，以直养而无害，则塞于天地之间。其为气也，配义与道；无是，馁也。”这种盛大流行之气，充塞于宇宙之中。他又说：“夫志，气之帅也；气，体之充也”；“持其志，无暴其气”；“志壹则动气，气壹则动志。”志是心之所指，是导向。志可以调动气，这是正向；反过来，气也可以影响志，这是逆向。孟子主张二者互动，持志与养气相配合。他指出要善于保养盛大流行的充满体内的气。保养浩然之气的根本在于养心，即恢复、保任四端之心。孟子主张调动气来配合道义，不仅使理义集之于心，而且使理义之心有力量，可以担当，可以实践，可以使理想变成现实。这样，面对任何安危荣辱、突然事变，就无所惧，无所疑，能担当大任而不动心。浩然之气是天地之气，也是我们生而有的气，只要不人为地伤害它，而善于保养它，就能合乎道义，辅助道义。养气在于养心，而言为心声；不正当的言论反过来会诱惑、伤害其心，故需要知言。对各种言论有独立思考，分析评判，不盲目信从，谓之知言。知言是为了辨志，知言也是养心的工夫。故以道德心为枢纽，孟子把持志、养气、知言统合了起来。《孟子·公孙丑上》篇的“知言养气”章号称难读，见仁见智，其实把握了以上所说，即把握住了它的中心思想。</p>
<p>​
孟子善于把四端之心即道德情感调动出来辅佐道德理性，成为道德实践的动力。这是他的一大贡献。与康德相比，李明辉认为：“当康德将作为动机的道德情感排除于道德主体之外时，道德主体本身应有的自我实现的力量即被架空……这使得其道德主体虚歉无力。”在孟子思想中，此类问题是不存在的。因为孟子以道德情感作为伦理学思考的出发点，并且阐发了心、言与气的内在联系。</p>
<p>​
孟子之性善论肯定内在于人的生命中的超越的禀赋，是人行善的根据。但人是否真正发挥其禀赋，就在乎每个个体是否有修养的工夫。所以，他提出了一系列“存心”“养气”“存夜气”“求放心”的存养方法。</p>
<p>​
孟子提倡宏大刚毅、坚定不移的气节和情操，崇尚死而后已、无所畏惧的任道精神。在生死与道德发生冲突时，“生亦我所欲也，义亦我所欲也；二者不可得兼，舍生而取义者也。”这种冲突，实质上是人的自然生命与人的德性尊严之间的冲突。孟子所倡导的道德选择表现了超乎自然生命之上的善的价值之极致，表现了人为人格尊严而牺牲的殉道精神。孟子笔下“立天下之正位”“行天下之大道”的“大丈夫”的行为标准是：“得志，与民由之；不得志，独行其道。富贵不能淫，贫贱不能移，威武不能屈。”这种任道精神和崇高人格曾激励了我国历史上无数的志士仁人。</p>
<p>​
在利益和仁义发生冲突时，孟子主张把“仁义”放在首位，提倡先义后利。孟子认为一个人选择独善其身或兼济天下的统一标准是“道”。“古之人未尝不欲仕也，又恶不由其道。不由其道而往者，与钻穴隙之类也。”“吾未闻枉己而正人者也，况辱已以正天下者乎？圣人之行不同也，或远，或近，或去，或不去；归洁其身而已矣。”在自己遭受侮辱时，怎么能匡正别人、匡正天下呢？圣人的行为，各有不同，有的疏远当时的君主，有的靠拢当时的君主，有的离开朝廷，有的身居巍阙，归根到底，都得使自己廉洁正直，不沾染污泥。“得志，泽加于民；不得志，修身见于世。穷则独善其身，达则兼善天下。”这即是说，人不论处在什么样的境遇、场合中，选择道德还是非道德，如何选择人生道路，怎样保持独立的人格和气节，终究是自我做主的事。</p>
<p>（选自《国际儒学研究》第二十一辑，九州出版社2013年版，有删节）</p>
<hr>
<h4 id="孟子四端说评议-comments_on_mengzi_siduanshuo">孟子“四端说”评议
<span class="citation" data-cites="Comments_on_Mengzi_Siduanshuo">[@Comments_on_Mengzi_Siduanshuo]</span></h4>
<p>​
“四端说”是孟子“性善论”的基础。“四端”即“四心”，它是“四德”（仁、义、礼、智）的萌芽状态，使四心发展并扩充起来就形成了四德。四端也就是四种“善端”，它是人先天带来的。因此，人生而具有四种善心与“人性本善”两种说法是“合二为一”的。如果说性善论构成了孟轲“尊王贱霸”“王道政治”等仁政学说的理论依据，那么，“四端说”就是仁政学说的基石。为此，本文拟就孟子“四端说”的具体内容、特征及对它的论证作一初步探索。</p>
<ol type="1">
<li>“四端说”的具体内容</li>
</ol>
<blockquote>
<p>​
《公孙丑上》说：“恻隐之心，仁之端也；羞恶之心，义之端也；辞让之心，礼之端也；是非之心，智之端也。”</p>
</blockquote>
<p>​
“恻隐之心，仁之端也”，所谓“恻隐之心”又作“不忍人之心”，意指人类的同情心。仁就根于这种恻隐之心，以此为萌芽、端始。正是人有了“不忍人之心”，即对同类的同情和怜悯之心，才有可能去使人去爱人。西方伦理思想史上，休谟开了“同情说”的先河，亚当·斯密和卢梭则继承并发展了他的“同情说”。休谟说：“同情是人性中一个很强有力的原则。”（《人性论》）卢梭则干脆宣称：“怜悯心是一种自然情感，由于它调节着每一个人自爱心的活动，所以对于人类全体的相互保存起着协助作用。”（《论人类不平等的起源和基础》）大量的道德事例也证实，人的同情和怜悯之心是驱使人去爱人的动力，由此产生出利他的行为。用孟子的话来说，就是“人皆有所不忍，达之于其所忍，仁也”（《尽心下》）。当孟子把“不忍人之心”当作“仁之端”时，他并没有错，错就错在他把这种同情心看成是天赋的了。</p>
<p>​
“羞恶之心，义之端也”，“羞恶之心”是指羞耻心和憎人为恶之心。义，古作谊，《礼记·中庸》说：“义者宜也。”孟子的“义”承袭了孔子“义”的基本含义，它一般指服从等级秩序的言行。不过，孟子的义的主要内容更多的是指敬人，如他说“敬长，义也”“君臣有义”；且不囿于下级对上级的尊奉，也包括上对下的尊重和爱护；更重要的是，孟子还把义和仁联结起来，提出了“仁义”这样一个合成概念。孟子又指出：“人皆有所不为，达之于其所为，义也。”（《尽心下》）这即是说，依照羞恶之心，不去做不当做的事，就是义。“义”大致是社会以道德要求的形式向特定个人提出来的“应当”完成的职责、使命和任务，因此，孟子大致上揭示了义的基本含义。</p>
<p>​
“辞让之心，礼之端也”，“辞让之心”即“恭敬之心”。“礼”在孔子那里，有时指礼节仪式，有时指周制，有时又指谦虚、恭敬、有礼貌。而孟子的“礼”主要指谦让，有礼貌和礼节仪式，它根源于人的恭敬之心，表示人与人之间彬彬有礼。“礼之实，节文斯二者是也。”（《离娄上》）礼的实质就在于节制和文饰仁义。礼较之于仁义具体和外在，它使仁义具体地体现出来。“是非之心，智之端也”，“是非之心”是指明辨善恶曲直之心。“智之实，知斯二者弗去是也。”（《离娄上》）是非之心作为一种判别善恶的道德能力，可以帮助人们选择是“做”还是“不做”，进行恰当的价值目标定向。</p>
<p>​
孟子所谓的“心”，实际上是一种不同于感觉的意识—理性意识。如他说：“耳目之官不思而蔽于物，……心之官则思……”（《告子上》）孟子赋予“心”以特定的道德意义，他的恻隐、羞恶、辞让、是非不过是心的四种状态和特性，由此构成四种形式的善心。孟子从心理出发，以发展的角度，揭示了四德产生、存在和发展的基础，较孔子只是颁布一些戒令、规范，缺乏某种具体论证来说，有了一点儿现实的基础。</p>
<ol start="2" type="1">
<li>“四端说”的特征</li>
</ol>
<p>​
先天性。“仁、义、礼、智根于心”，“非由外铄我也，我固有之也”。人之有四德，不是由外部环境所使然，而是生来所固有的。四德“我固有之”，四端又何尝不是如此呢。“人之有是四端也，犹其有四体也。”（《公孙丑上》）此即说，四端之于人一如四肢（四体）之于人一样，是人生来就具有的。</p>
<p>​
超功利性。孟子举例说：“今人乍见孺子将入于井，皆有怵惕恻隐之心；非所以内交于孺子之父母也，非所以要誉于乡党朋友也，非恶其声而然也。”（《公孙丑上》）由此可知，“不忍人之心”，是对别人痛苦、危难的同情心，是一种发自内心深处的真情实感，它摒弃了任何个人的私心杂念，似乎只要一见到小孩子将入水井，无论是谁都会很自然地想去营救。在此，孟子张扬了道德的纯洁性，但他有将之夸大的倾向。</p>
<p>​
可变性。孟子虽然很强调在人的本性中就有四种善端，但是在他看来这并不说明人生来即有完美的德性。这就为他解释人心的“不善”留下了后路。</p>
<p>​
孟子认为，人之不善是其“不能尽其才”。他说：“若夫为不善，非其才之罪也……或相倍蓰而无算者，不能尽其才者也。”（《告子上》）人之所以有善恶之别，并不是各自赋有的四心有何不同，乃是有的能尽其才，有的不能尽其才。本质上人人都有四心，而且又是相同的，如果开发之，利用之，人就会具有德性；反之，人就可能作恶，这就是“苟得其养，无物不长，苟失其养，无物不消”（《告子上》）。那么，人何以会作恶呢？究其原因，有客观的，亦有主观的。“富岁，子弟多赖；凶岁，子弟多暴。非天之降才尔殊也，其所以陷溺其心者然也。”（《告子上》）人能否发展其善端，除了取决于年岁的富凶外，还取决于人是否具有向善的愿望。如果“自暴自弃”“言非礼义”，不能“居仁由义”，那就无法保其“善性”。人心是善性的土壤，孟子比喻说：心灵（含四心）产生善性（含四德）就像大山生长树木一样，长树是山的本性，但假如每天去砍伐，牧羊毁林，山也会变成光秃秃的。人心日日夜夜在产生善的东西，但由于某些人肆意践踏它，因而人心也就无法保全，善端也随之失去了赖以生长的土壤，人们摧残了自己的心灵，这就需要“存夜气”，以求得“良心发现”。</p>
<ol start="3" type="1">
<li>对“四端说”的补充</li>
</ol>
<p>​
为了补充“四端说”，孟子提出了“良知”“良能”的观念。他说：“人之所不学而能者，其良能也。所不虑而知者，其良知也。孩提之童，无不知爱其亲者。及其长也，无不知敬其兄也。”（《尽心上》）“良能”即不经学习而生来具有的能力；“良知”即不经考虑而生来具有的知识。借用现代哲学术语来说，良知大概相当于道德直觉，良能即是道德本能。《告子上》又称良知良能为“良心”。“良”大约有三种解释：一曰善，即善良之良；一曰良，即良久之良；一曰清白、纯洁。朱熹综合上述三种含义，训“良”为“本然之善”。按此，“良”就具有先天的善性。于是“良心”即“善心”。孟子的良知说是对其四端说的深化、拓展和新论证。相对而言，前者更具先验性和直觉主义色彩。（以上均参阅朱伯崑《先秦伦理学概论》）</p>
<p>​
孟子还提出了“故凡同类者，举相似也”的命题，从逻辑上论证人们都有普遍的善性。</p>
<p>​
他说：“口之于味也，有同嗜焉。耳之于声也，有同听焉。目之于色也，有同美焉。至于心，独无所同然乎？心之所同然者，何也？谓理也，义也。圣人先得我心之所同然耳。故理义之悦我心，犹刍豢之悦我口。”（《告子上》）这即是说，人心具有理义，就像人的口、耳、目都具有“嗜”“听”“美”一样，圣人和普通人均不例外，只不过圣人先知理义，普通人后知理义罢了。而且，只有人同此心，才能将心比心，“强恕而行，求仁莫近焉”，根据“强恕而行”的原则，推己及人，“老吾老以及人之老，幼吾幼以及人之幼”。孟子继承并发展了孔子“己所不欲，勿施于人”和“己欲立而立人，已欲达而达人”的伦理思想，他看到了道德的必要性和可行性，在一定程度上认识到了人和道德的社会性。</p>
<p>​
“四端说”在孟子思想体系中所占的地位，按照历史的和逻辑的相统一的方法可以表示为：四端说→四德说→性善说→仁政论。“四端说”客观上成了孟子思想体系的起点。</p>
<p>（选自《孟子思想研究》，山东大学出版社1986年版，有删节）</p>]]></content>
      <categories>
        <category>High School</category>
        <category>Chinese</category>
        <category>Classical Chinese Literature and Poetry</category>
      </categories>
      <tags>
        <tag>School Notes</tag>
        <tag>High School</tag>
        <tag>Chinese</tag>
      </tags>
  </entry>
  <entry>
    <title>兼爱-《墨子》</title>
    <url>/2022/03/14/chinese/High%20School/Classical%20Chinese%20Literature%20and%20Poetry/%E9%80%89%E6%8B%A9%E6%80%A7%E5%BF%85%E4%BF%AE/%E5%85%BC%E7%88%B1-%E3%80%8A%E5%A2%A8%E5%AD%90%E3%80%8B/</url>
    <content><![CDATA[<h2 id="课文解读">课文解读</h2>
<p>​ 《兼爱》有上、中、下三篇，课文选取的是上篇，共有4段。</p>
<p>​
和儒、道两家的散文相比，尤其和孟子、庄子的文章相比，《墨子》直言不讳，通俗易懂，有一说一。作者总是把一种观念、一种逻辑贯穿到底，绝不旁生枝节。不但用语特别浅显，还唯恐说不清，往往正面说一遍，反面又说一遍；一个观点总结过了，下一段落还要再总结。这种文风与墨家的思想主张和受众群体有关。墨家主张人人平等的相爱，反对侵略战争；强调节俭，反对铺张浪费；注重道德实践，反对纸上谈兵。从这些思想倾向和历史记载的“巨子”事迹来看，墨家代表的是社会中下层人民的政治诉求，他们“传道”的对象文化程度普遍不高。这种文风既契合他们的功利实用主义思想，也利于作者期待的读者群体接受。</p>
<p>​
在《兼爱》篇的教学中，要注意引导学生概括作者的观点，并把“兼爱”与儒家“有差等”之爱相比较，与道家“慈”“简”“善”等概念相比较，以理解三者在出发点、落脚点和救世方法上的异同。教师也要注意引导学生客观评价《墨子》的文风，既要看到其存在的合理性和必要性，也要引导学生在写作中追求丰富多样的美学风格。</p>
<p>​
第1段，作者明确提出，圣人以治天下为己任，就要知道天下动乱的根源，否则就无法达成目的。</p>
<p>​
第2段，批判战国时代伦理崩坏、诸侯攻伐的社会现实，指出天下动乱不休的起因就在于人人只知“自爱”而“不相爱”。君臣、父子、兄弟之间互相损害，盗贼侵夺财物杀伤性命，乃至大夫、诸侯之间的争斗攻伐，皆出于此。</p>
<p>​
第3段，正面立意、指出如果反其道而行之，大家将心比心、以己度人，做到互相爱护，就能消除乱象，使天下大治。</p>
<p>​
第4段，概括得出《兼爱》一文的总论点：“天下兼相爱则治，交相恶则乱。”最后，鼓励人们奉行兼爱思想。</p>
<h2 id="参考资料">参考资料</h2>
<h3 id="参考译文">参考译文</h3>
<div class="classcial-chinese-literature-and-poetry-translation"><div class="paragraph"><p class="original-text">圣人以治天下为事者也，必知乱之所自起，焉能治之；</p><p class="translation">圣人是把治理天下作为（自己的）事务的人，一定要知道祸乱兴起的原因，于是才能去治理；</p><p class="original-text">不知乱之所自起，则不能治。</p><p class="translation">不知道祸乱兴起的原因，就不能治理。</p><p class="original-text">譬之如医之攻人之疾者然，必知疾之所自起，焉能攻之；</p><p class="translation">这就像医生治疗人的疾病一样，一定要知道疾病产生的原因，才能进行治疗；</p><p class="original-text">不知疾之所自起，则弗能攻。</p><p class="translation">不知道疾病产生的原因，就不能治疗。</p><p class="original-text">治乱者何独不然，必知乱之所自起，焉能治之；</p><p class="translation">治理祸乱又何尝不是这样？一定要知道祸乱兴起的原因，于是才能去治理；</p><p class="original-text">不知乱之所自起，则弗能治。</p><p class="translation">不知道祸乱兴起的原因，就不能治理。</p><p class="original-text">圣人以治天下为事者也，不可不察乱之所自起，</p><p class="translation">圣人是把治理天下作为（自己的）事务的人，不能不明察祸乱兴起的原因。</p><p class="original-text">当察乱何自起？起不相爱。</p><p class="translation">尝试考察祸乱因何而起。（祸乱）起于人们不互相亲爱。</p><p class="original-text">臣子之不孝君父，所谓乱也。</p><p class="translation">臣和子不孝敬君和父，就是所谓的祸乱。</p><p class="original-text">子自爱不爱父，故亏父而自利；</p><p class="translation">儿子爱自己而不爱父亲，因此使父亲受损失而自己得利；</p><p class="original-text">弟自爱不爱兄，故亏兄而自利；</p><p class="translation">弟弟爱自己而不爱兄长，因此使兄长受损失而自己得利；</p><p class="original-text">臣自爱不爱君，故亏君而自利，此所谓乱也。</p><p class="translation">臣子爱自己而不爱君主，因此使君主受损失而自己得利：这就是所谓的祸乱。</p><p class="original-text">虽父之不慈子，兄之不慈弟，君之不慈臣，此亦天下之所谓乱也。</p><p class="translation">即使是父亲爱子女，兄长不爱弟弟，君主不爱臣下，这也是天下所谓的祸乱。</p><p class="original-text">父自爱也不爱子，故亏子而自利；</p><p class="translation">父亲爱自己不爱子女、因此使子女受损失而自己得利；</p><p class="original-text">兄自爱也不爱弟，故亏弟而自利；</p><p class="translation">兄长爱自己而不爱弟弟，因此使弟弟受损失而自己得利；</p><p class="original-text">君自爱也不爱臣，故亏臣而自利。</p><p class="translation">君主爱自己面不爱臣下，因此使臣下受损失而自己得利。</p><p class="original-text">是何也？皆起不相爱。</p><p class="translation">这是因为什么呢？都起于不互相亲爱。</p><p class="original-text">虽至天下之为盗贼者亦然，盗爱其室不爱其异室，故窃异室以利其室；</p><p class="translation">即使是天下窃和劫夺财物的人，也是这样。偷窃者只爱自己的家，而不爱别人的家，因此偷盗别人家以利自己的家；</p><p class="original-text">贼爱其身不爱人，故贼人以利其身。</p><p class="translation">劫夺财物者只爱自身，而不爱别人，因此伤害别人以利自身。</p><p class="original-text">此何也？皆起不相爱。虽至大夫之相乱家，诸侯之相攻国者亦然。</p><p class="translation">这是因为什么呢？都是起因于不相爱。即使卿大夫互相侵扰封地，诸侯互相攻伐封国，也是这样。</p><p class="original-text">大夫各爱其家，不爱异家，故乱异家以利其家；</p><p class="translation">大夫各自爱自己的封地，不爱别人的封地，因此侵扰别人的封地以利自己的封地。</p><p class="original-text">诸侯各爱其国，不爱异国，故攻异国以利其国，天下之乱物具此而已矣。</p><p class="translation">诸侯各自爱自己的封国，不爱别人的封国，因此攻伐别人的封国以利自己的封国。天下的纷乱之事，全都在这里了。</p><p class="original-text">察此何自起？皆起不相爱。</p><p class="translation">考察这是因何而起的呢？都是起于不相爱。</p><p class="original-text">若使天下兼相爱，爱人若爱其身，犹有不孝者乎？</p><p class="translation">假使天下的人都相亲相爱，爱别人就像爱自己、还会有不孝的人吗？</p><p class="original-text">视父兄与君若其身，恶施不孝？犹有不慈者乎？</p><p class="translation">看待父亲、兄长与君主就像看待自身，怎么会做出不孝（的事）？还会有不慈爱的人吗？</p><p class="original-text">视弟子与臣若其身，恶施不慈？</p><p class="translation">看待子女、弟弟、臣下就像看待自身，怎么会做出不慈爱（的事）？</p><p class="original-text">故不孝不慈亡有，犹有盗贼乎？</p><p class="translation">所以不孝不慈爱的现象都没有了。还会有偷窃和劫夺财物的人吗？</p><p class="original-text">故视人之室若其室，谁窃？</p><p class="translation">看待别人家如同自己的家一样，谁还会偷窃？</p><p class="original-text">视人身若其身，谁贼？</p><p class="translation">看待别人如同自己一样，谁还会劫夺财物？</p><p class="original-text">故盗贼亡有。犹有大夫之相乱家、诸侯之相攻国者乎？</p><p class="translation">所以偷窃和劫夺财物的人没有了。还会有大夫互相侵扰封地，诸侯互相攻伐封国的吗？</p><p class="original-text">视人家若其家，谁乱？视人国若其国，谁攻？</p><p class="translation">看待别人的封地如同自己的封地一样，谁还会发动祸乱？看待别人的封国如同自己的封国一样，谁还会发动攻伐？</p><p class="original-text">故大夫之相乱家、诸侯之相攻国者亡有。</p><p class="translation">因此大夫互相侵扰封地，诸侯互相攻伐封国的现象就没有了。</p><p class="original-text">若使天下兼相爱，国与国不相攻，家与家不相乱，盗贼无有，君臣父子皆能孝慈，若此则天下治。</p><p class="translation">假使天下之人相亲相爱，封国与封国之间不互相攻伐，封地与封地之间不互相侵扰，偷盗抢劫没有了，君臣父子都能孝敬慈爱，像这样天下就安定了。</p><p class="original-text">故圣人以治天下为事者，恶得不禁恶而劝爱？故天下兼相爱则治，交相恶则乱。故子墨子曰：“不可以不劝爱人者，此也。”</p><p class="translation">所以圣人是以治理天下作为（自己的）事务的人，怎么能不禁绝仇恨而鼓励亲爱呢？所以天下之人互相亲爱天下就会安定，互相仇恨就会发生祸乱。所以子墨子说不可以不鼓励爱别人，就是这个道理。</p></div></div>
<h3 id="参考文献">参考文献</h3>
<h4 id="兼爱鉴赏-appreciation_of_jianai">《兼爱》鉴赏 <span class="citation" data-cites="Appreciation_of_Jianai">[@Appreciation_of_Jianai]</span></h4>
<p>​
兼爱是墨子人文学说的纲领和精髓。兼爱，就是全人类不分血缘关系的亲疏，身份等级的贵贱，普遍平等地相爱互助。《孟子·膝文公上》理解墨子兼爱，是爱无差等。</p>
<p>​
墨子“兼爱”的原则，是为别人就像为自己。墨子引《诗·大雅·抑》说“无言而不仇，无德而不报”
“投我以桃，报之以李”。“兼爱”是墨子仁义学说的主要内容。墨子后学发挥说：“仁，爱也。义，利也。”“仁”的实质是“爱”，
“义”的实质是“利”。“仁爱”和“义利”紧密相连，可以互相解释，互相定义。</p>
<p>​
墨子的“兼相爱”和“交相利”密切结合。“爱人”就要“利人”。“兼爱”是墨子心目中“贤人”的高尚品德。做贤人的标准是，有力量的就赶快帮助别人，有财的就尽量分给别人，有道的就积极教诲别人。墨子的兼爱思想，是手工业行会成员间互助互利原则的理想化，是农工商人朴素平等愿望的理论升华，体现了中华民族的传统美德。</p>
<p>​
兼爱是墨子希望实现的一种道德理想、要求和愿望。墨子认为，现实生活中存在“不相爱”的弊端，祸篡怨恨都由不相爱产生：强必执弱，富必侮贫，贵必傲贱，诈必欺愚，从而造成社会混乱。针对不合理的现实，墨子主张天下“必知乱之所自起”，也就是找到社会混乱的原因，就像治病要知道病因才能治好一样。</p>
<p>​
墨子把“兼爱”思想，看成治理社会混乱的药方，孜孜不倦地劝人兼爱，积极地运用教育游说手段，宣传兼爱，希望当权者和王公大人以及士君子接受和实现兼爱的思想。墨子借天下士君子之口说：
“您的兼爱学说，好是好，可是有什么用呢？”</p>
<p>​
墨子说：“如果真的没用，那么连我也要反对。再说，世界上哪里有好的，却没有用的东西呢？”墨子像编剧本一样，假设了两个角色，一个叫“兼士”，是赞成兼爱学说的知识分子；个叫“别士”，是反对兼爱学说的知识分子。</p>
<p>​ 别士说：
“我怎么可能对待朋友，像对待我自己，对待朋友的父母，像对待自己的父母一样呢？”于是他看见朋友缺衣少食也不予帮助，朋友生病了也不帮着延医治疗，朋友去世了也不帮着治丧。</p>
<p>​ 兼士说：
“我对待朋友，像对待自己。对待朋友的父母，像对待自己的父母。”看见朋友缺衣少食就接济资助，朋友生病了就为他延医治疗，朋友去世了就为他尽心治丧。墨子又假定第三位角色，披着铠甲，戴着头盔，就要出发参加野战，还不知道未来的死活。假定第四位角色，受命出使巴越齐楚，能否活着回来也不知道。这时要把父母妻子托付给朋友照管，是托付给兼士，还是托付给别士呢？无论是谁，哪怕他不赞成兼爱学说，但一定会把父母妻子托付给兼士。这种人在言论上反对兼爱，在行动上却选取兼爱，是言行不一。</p>
<p>​ 听了墨子虚拟的这个故事，天下之士君子说：
“这是选择士，那国君也能够选择吗？”墨子接着又假定一位兼君和一位别君。别君说：
“我怎么能对待老百姓，就像对待我自己？这太不合乎人情了。人的一生没有多少年，就像白驹过隙，候忽而过，我应该先把自己照顾好。”于是置老百姓的饥寒病死于不顾。兼君说：
“我先考虑老百姓，然后再考虑我自己。”于是处处先替老百姓着想。再假定遇到灾年，有一批在死亡线上挣扎的老百姓，即使他们不赞成兼爱学说，也一定会选择兼君。这也是言行不一的表现。</p>
<p>​ 墨子借天下士君子的口说：
“兼爱算是够仁义了，可是办得到吗？要实现兼爱，就像挈泰山以超江河，是办不到的。”墨子说：
“这个譬喻不恰当。挈泰山以超江河，自古到今没有人能办到。可是从古籍上看，古代圣王禹、汤、文王、武王亲自实行了兼相爱，交相利。”</p>
<p>​ 墨子借天下士君子的口说： “即使办得到，恐怕也是很难的。”墨子说：
“上行下效。”只要国君实行，下级就会照办。晋文公喜欢下级穿粗布衣服，于是下级竞相实行。楚灵王喜欢下级腰细，身材苗条，于是下级都拼命节食，屏住气息把腰带束紧，挂着拐棍，才能站起来，扶着墙头，才能走路。越王勾践喜欢战士勇敢，教练了三年还不放心，于是故意焚烧宫船，诈称越国的宝贝都在这里，越王亲自擂鼓叫战士救火。战士听到鼓声，争先跳水救火，死者不可胜数。</p>
<p>​
穿粗衣节食，舍命救火，都是够难的，但只要国君喜欢，不用几十年老百姓都会跟着干。兼相爱，交相利是好事，并且比这些更容易办到。兼爱之所以难以实行，是由于国君不喜欢的缘故。如果国君喜欢，劝之以赏誉，威之以刑罚，那么人们实行兼相爱，交相利，就会像火焰向上，水流向下一样不可阻挡。”</p>
<p>​
墨子把实行社会改良方案的希望，寄托于当权的国君和士阶层的支持。所以他花很大力气去说服他们采纳自己的学说。但由于墨子的想法和当权者距离太远，他的努力不可能取得预期的效果。</p>
<p>​
墨者的“兼爱”思想，在当时是不能实现的空想。墨者认为，在现实社会，有很多不能，也不应该爱诸如“强盗”和“攻国者”这样的人。在社会现实面前，墨家不得不在事实上承认兼爱学说行不通。他们承认对有的人，如“强盗”和“攻国者”应该恨，而不应该爱。</p>
<p>​
墨家的兼爱平等观，是墨家的理想和奋斗目标，并不是说当时已经做到了。墨家知道，理想不等于现实。现实有强盗，有强大国家攻伐、掠夺弱小国家，那些掠夺者和强盗是不能爱的。墨家的理想是兼相爱，交相利。现实事实和理想并不矛盾，这是两回事，是两个领域的问题。兼爱是道义的最高理想，恨“强盗”和“攻国者”，是目前的现实问题，这是两个不同的问题，分属两个不同的道义范围。</p>
<p>​
墨家的兼爱平等观，强调爱的整体性、普遍性、交互性和平等性，是墨家的理想与奋斗目
标。墨家的兼爱平等观，是道义逻辑与道德伦理逻辑。其中的高级模态词“必须”“应该”，是
道德、义务和理想。</p>
<p>​
墨子的兼爱思想，相当于模态词“必须”构造的“必须肯定命题”：“所有人应该爱所有
人。”意即必须这样做，才合乎道德、义务和理想。“必须”“应该”是道义概念。</p>
<p>​
“所有人应该爱所有人。”即在“所有人爱所有人”中，关系词“爱”的前面，再加上一个模
态词“应该”，与模态词“必须”等值。模态词“应该”“必须”，表达了道义逻辑中的道德、义
务和理想等规范。</p>
<p>​
“所有人应该爱所有人”的命题，不是事实、真值命题，是模态、道义命题，是墨家的道德、
义务和理想，墨家的奋斗目标。《说文》解释“兼”的含义是“一手持二禾”：一只手握住两根
稻谷。“兼爱”，即尽爱、俱爱、周爱，不分民族、阶级、阶层、等级、亲疏、住地、人己、主
仆等差别，包括过去、现在和未来的一切人，是最为普遍深刻的人文精神与人道主义。</p>
<p>​
儒家强调爱的差等性。《墨子·非儒》批判儒家“亲亲有术，尊贤有等，言亲疏尊卑之异”，
批判儒家强调爱有血缘亲疏、宗法等级的差异。《荀子·天论》说：“墨子有见于齐，无见于畸。”
齐指平等，畸指不平等。说墨子只看到平等的一面，没有看到不平等的一面。儒家坚持不平等的
一面，是儒家的立场。墨家强调平等的一面，是墨家的立场。</p>
<p>​
儒家讲爱的差等观，是封建宗法等级制度的上层建筑，意识形态，是中国封建社会延续两千
年的指导思想。兼爱平等观，是墨家的理想和奋斗目标。孙中山《三民主义》说：“古时最讲爱
字的莫过于墨子。”</p>
<p>​
梁启超《墨子学案》说：“墨子所标纲领，其实只从一个根本观念出来，就是兼爱。”墨子的
兼爱学说，包含对现代和未来极其有用的人文精神与人道主义思想，亟须批判地继承弘扬，把先
贤的美好理想，化为当前的生动现实。</p>
<p>（选自《墨子鉴赏辞典》，上海辞书出版社2012年版）</p>]]></content>
      <categories>
        <category>High School</category>
        <category>Chinese</category>
        <category>Classical Chinese Literature and Poetry</category>
      </categories>
      <tags>
        <tag>School Notes</tag>
        <tag>High School</tag>
        <tag>Chinese</tag>
      </tags>
  </entry>
  <entry>
    <title>大学之道-《礼记》</title>
    <url>/2022/03/14/chinese/High%20School/Classical%20Chinese%20Literature%20and%20Poetry/%E9%80%89%E6%8B%A9%E6%80%A7%E5%BF%85%E4%BF%AE/%E5%A4%A7%E5%AD%A6%E4%B9%8B%E9%81%93-%E3%80%8A%E7%A4%BC%E8%AE%B0%E3%80%8B/</url>
    <content><![CDATA[<h2 id="课文解读">课文解读</h2>
<p>​
《大学》本出《礼记》。《礼记》是中国古代重要的典章制度选集，共二十卷四十九篇，相传为孔门弟子及其再传弟子所作，经两汉戴圣汇编成书。在流传过程中，经董仲舒、郑玄、孔颖达和宋代理学家如程颢、程顾等大儒的推崇，《礼记》在儒家政教系统中的地位日益提升。朱熹把《大学》《中唐》两篇从《礼记》中抽离出来并作章句，为《论语》《孟子》作集注，合成《四书章句集注》。宋元以降，《大学》《中庸》《论语》《孟子》成为封建科举考试的钦定书，而《大学》则是四书之首。</p>
<p>​
“大学”二字在古代指“大人之学”，即伦理、政治、哲学等方面的学问，与“教之以洒扫、应对、进退之节，礼、乐、射、御、书、数之文”的“小学”相对。大学之道，讲的就是大人学、成人之学的基本原理。《大学》只有两千一百多字，课文节选的两段是开篇部分，只占全文篇幅的十分之一左右，但作为总纲，意义重大。</p>
<p>​
第一段开宗明义，提出“三纲领”，即“明明德”“亲民”“止于至善”，作为引领学习的终极目标。只有坚定这样的目标，才能“定”“静”“安”“虑”，最终学有所得。“物有本末，事有终始，知所先后，则近道矣”，从方法论层面再次强调“三纲领”的重要引领作用，同时提醒读者在具体操作层面也要注意先后顺序，引出下文，即“八条目”。</p>
<p>​
在提出“八条目”时，作者运用了正反相成的推演逻辑。先以学习者为主语，明确各条目的先后次序。从“欲明明德于天下”的远大目标写起，通过“欲……先……“的句式，把“八条目”由远及近、由外而内地“倒叙”出来，强调过程的循序渐进。再以学习对象为主语，通过“……而后……”的句式，由近及远、从内到外地“正叙”一遍，突出结果的水到渠成。后人总结“八条目”，通常采取学习者的立场，将其梳理成“格物”“致知”“诚意”“正心”“修身”“齐家”“治国“。
前四条专注心性修养，属于“内圣之学”；后四条侧重外显行为，属于“外王之学”，二者结合就是儒家最高理想，亦即达成“三纲领”的不二法门。</p>
<p>​
在这“八条目”之中，修身是从“内圣”到“外王”的过渡，既要内化于心，也要外显于行，因此作者强调从天子到庶人都应该以修身为本。天子不能依仗权位置身于事外，庶民也不能因为地位低微而放松要求——这是有进步意义的。</p>
<p>​
在教学中，要明确“三纲领”的内在联系。“明明德”侧重“内圣”，“亲民”侧重“外王“止于至善”则是最高境界和最终追求。同时还要注意，“八条目”是逻辑推演，现实生活中很多事情可以并行不悖、运用时不能胶柱鼓瑟。为了加深学生的理解，教师可以要求学生反复诵读也可以援引史料或中国古典小说中的事例加以说明，还可以指导学生阅读《大学》全篇，整体了解其思想内容</p>
<h2 id="参考资料">参考资料</h2>
<h3 id="参考译文">参考译文</h3>
<div class="classcial-chinese-literature-and-poetry-translation"><div class="paragraph"><p class="original-text">大学之道，在明明德，在亲民，在止于至善。</p><p class="translation">大学的宗旨在于彰明美德，在于亲近爱抚民众，在于达到道德修养的最高境界。</p><p class="original-text">知止而后有定，定而后能静，静而后能安，安而后能虑，虑而后能得。</p><p class="translation">知道要达到的“至善”境界，则志向坚定不移，志向坚定才能心不妄动，心不妄动才能性情安和，性情安和才能思虑精详，思虑精详才能处事合宜。</p><p class="original-text">物有本末，事有终始，知所先后，则近道矣。</p><p class="translation">万物都有本有末，凡事都有始有终，知道事物的先后次序，那就接近大学的宗旨了。</p></div><div class="paragraph"><p class="original-text">古之欲明明德于天下者，先治其国。欲治其国者，先齐其家。</p><p class="translation">古代想要彰明美德于天下的人，首先要治理好自己的国家。要治理好自己的国家，就要使家族中的各种关系整齐有序。</p><p class="original-text">欲齐其家者，先修其身。欲修其身者，先正其心。</p><p class="translation">要使家族中的各种关系整齐有序，就要先修养自身的品德。要修养自身的品德，就要先端正自己的内心。</p><p class="original-text">欲正其心者，先诚其意。欲诚其意者，先致其知；</p><p class="translation">要端正自己的内心，就要先使意念真诚。要使意念真诚，就要先获得知识。</p><p class="original-text">致知在格物。物格而后知至，知至而后意诚，意诚而后心正，</p><p class="translation">获得知识在于推究事物的原理。推究了事物的原理而后才能对外物之理认识充分，对外物之理认识充分而后才能使意念真诚，意念真诚而后才能使内心端正，</p><p class="original-text">心正而后身修，身修而后家齐，家齐而后国治，国治而后天下平。</p><p class="translation">内心端正而后才能修养品德，修养品德而后才能使家族中的各种关系整齐有序，家族中的各种关系整齐有序后才能把国家治理好，国家治理好而后才能天下太平。</p><p class="original-text">自天子以至于庶人，壹是皆以修身为本。</p><p class="translation">从天子直到平民，一概都以修养自身作为根本。</p></div></div>
<h3 id="参考文献">参考文献</h3>
<h4 id="大学之道构建以三纲八目为核心的道德修养体系-daxues_principle_constructing_a_morality_system_with_the_core_of_sangangbamu">大学之道：构建以“三纲八目”为核心的道德修养体系
<span class="citation" data-cites="Daxues_principle_constructing_a_morality_system_with_the_core_of_sangangbamu">[@Daxues_principle_constructing_a_morality_system_with_the_core_of_sangangbamu]</span></h4>
<p>​
《大学》在早期儒家典籍中称得上是一篇结构严谨、体系完整的作品，尽管历代学者对《大学》的作者及成书年代有不同看法，但有一点是大家认可的，那就是，此书是儒家嫡传所著，是正宗的儒学作品，最能体现儒家的精神价值。《大学》作为儒家思想的经典作品，在借鉴和吸收孔、孟、荀思想的基础上，有目的有意识地建构了一套以“三纲八目”为核心的道德修养体系，这套道德修养体系对中国思想文化的发展起到了举足轻重的作用和影响。</p>
<h5 id="三纲领对主体道德实践的指导">三纲领：对主体道德实践的指导</h5>
<p>​
《大学》对儒家理想人格的修为之道进行了从内到外的总结，《大学》通篇所阐释的是一种修己治人之道，亦即儒家思想一以贯之的内圣外王之道。《大学》一开始便讲“自天子以至于庶人，壹是皆以修身为本”，把“修身”作为其整个道德修养体系的价值目标和根本目的，并且成为其治国平天下的逻辑出发点。具体说就是，《大学》明确提出了两条最基本的儒家道德修养思想原则，即“三纲领”说和“八条目”说，而“修身”正是《大学》“三纲八目”说的核心。</p>
<p>​ 三纲领之一：明明德</p>
<p>​
《大学》一开篇就提出了“大学之道，在明明德，在新民，在止于至善。”朱熹在注释中把这三者称为“大学之纲领也”。所谓“三纲领”就是“明明德”“新民”“止于至善”。很显然，后人认为这三点是理想人格实践的“纲领”，是与朱熹对《大学》的重视与推崇相关联的，如果没有朱熹对《大学》的竭力推崇以及他在宋明理学中的权威性地位，“三纲领”学说就不会受到后人如此的重视。“三纲领”学说所要阐述的精神实质是和春秋战国时期儒家的人学思想一脉相承的，“明明德”重在“明德”，而“德”的思想在周初时便出现了，周人“明德慎罚”“敬德保民”的观念深刻影响了后来儒学思想对“德”观念的认识，此时“德”是指先王圣哲的政治行为或高尚的个性品德。孔子和孟子也讲“德”，但“德”的内涵已经发生了变化。其政治意义上的特征逐渐弱化而道德伦理意义上的比重则逐步加强。朱熹认为：“大学者，大人之学也。明，明之也。明德者，人之所得乎天，而虚灵不昧，以具众理而应万事者也。但为气禀所拘，人欲所蔽，则有时而昏，然其本体之明，则有未尝息者。故学者当因其所发而遂明之，以复其初也。”从朱熹对“明德”的解释来看，有两点值得注意：一是“明德”的内涵是人本来所具有的，是一种先验的理解万事万物的内在的心理状态；二是由于“明德”被个人气质或人的欲望所迷惑，这样一来，“明明德”便成为道德主体通过学习、修为努力来恢复本性的过程，个体后天的活动都是为了能找回自我、寻求本来善良的内在特性，从这里我们看到的是孟子先验的“性善论”的影子。在《大学章句》里还有一段关于“明德”的解释。“康浩曰：“克明德。”大甲曰：“顾堤天之明命。”帝典曰：“克明峻德。＇皆自明也。”康浩、大甲、帝典分别是从周书、商书、虞书等上古先王圣哲的典籍中概括出来的，显示出《大学》对早期儒家思想继承性的一面。这一段文字中我们要注意的是“自明”，这是理解《大学》“明明德”的关键，实际上也是朱熹所持的观点：人固有之善性被欲望所迷惑，所以要自己来解放自己，这一过程就是所谓“自明”。“自明”就是要发挥个体主观能动性，通过积极的学习，最终达到恢复自我本性的目的，别人是无法代替自己的，一切要靠自己。做到“自明”的主导因素还是主体自身。这里强调了“德”这种伦理意义上的自我对道德修养的重要意义。它由周初之“德”到孔子之“德”，再到《大学》之“明明德”，经历了一个漫长的转变历程。在这一漫长的转变历程中，始终有一条以“政治一伦理”为思想的主线贯穿其中。“三纲领”以简明扼要的语言表明了“明明德”的先验性，给试图接受儒学思想的人以正确而深刻的价值引导，甚至可以说给群体或个体一个内心的道德规定。《大学》所要做的也是给人一种“明明德”的道德设定，要恢复人之本性，就要从儒学经典中、从儒家思想中去寻找，这就是《大学》的“明明德”所昭示的基本思想倾向。</p>
<p>​ 三纲领之二：新民</p>
<p>​
“三纲领”中的“新民”之“新”，旧版本作“亲民”，“亲”字有两解：一释为“爱”，“亲民”即为“爱民”；另一解为“新”，程子认为“亲，当作新”。那么，《大学》中的“新民”究为何意？为什么能够列入“三纲领”中？《大学》中有这样一段话：“汤之《盘铭》曰：＇苟日新，日日新，又日新。＇康浩曰：“作新民。”诗曰：“周虽旧邦，其命维新。”是故君子无所不用其极。”《大学》在这里所表述的“新”代表的是一种“革新”的政治作为，也就是朱熹所说的“新者，革其旧之谓也”。朱熹在解释“作新民”时说：“鼓之舞之之谓作，言振起其自新之民也。”鼓舞民众的志气，振奋民众的精神，称为“作新民”。在这里，《大学》所说的“作新民”是从政治角度来讲的。朱熹还说：“言周国虽旧，至于文王，能新其德以及于民，而始受天命也。”这是对“周虽旧邦，其命维新”的解释。如果说“明明德”所注重的是对个体主观精神状态的一种规定或启发，那么，“在新民”则涉及个体道德完善之后如何运用到群体的外用之道。由个体之善扩充至天下万民，这正是孟子由“修心”“养性”到“仁政”思路的总结，《大学》在这里以一种更精练的表达来说明这个原则的重要性。自春秋以来，“民本”思想成为社会发展的一股思潮，一直受到社会的广泛关注。无论是《管子》中提出的“以人为本”，还是《孟子》中提出的“民贵君轻”思想，都是对民众力量的一种肯定，都是呼唤对人的尊严和价值的尊重。《大学》充分借鉴吸收了早期儒家这一优秀的思想成果，把“新民”作为其“三纲领”之一，使之成为是否达到理想人格境界的评判准则和道德修养纲领。可以这样认为，正是由于有“新民”这一纲领性的规定，才有“八条目”中“治国、平天下”的出现，二者之间有着极其密切的内在联系。</p>
<p>​ 三纲领之三：止于至善</p>
<p>​
《大学》的第三条纲领是“止于至善”。“止”在这里有追求真善美的理想境界，遵循某种道德准则的含义，它始终应保持或致力于“至善”方面的道德追求和修为。“至善”显然是指一种最高的道德目标和道德境界而言，万事万物运动变化发展的最根本规律就体现为一种“至善”。实际上此处“至善”既有社会伦理意义上的道德含义，又有政治生活方面具体的行为规定，它所针对的对象既可以是一般道德个体或大多数“士”阶层，也可以是上层贵族或封建统治者。所以朱熹注解说：“止者，必至于是而不迁之意。至善，则事理当然之极也。”“至善”的道德境界和准则当然是最高的，是“明明德”和“亲民”二纲领的最终发展归宿，也是对二者发展的目标要求，要求在实践中把“明明德”的内在修为和“新民”的外在事功这两方面的个体主动性行为都发挥到最高点。所以朱熹又说：“盖必其有以尽夫天理之极，而无一毫人欲之私也。”“尽天理”“绝私欲”正是朱熹理、欲之辩的核心。在中国漫长的封建社会中，由于政治势力的干预以及对“人欲”的压制，人学的发展没有走上一条真正关心人、尊重人的道路，理论上的提倡与社会的现实有极大的反差。《大学》所标榜的“至善”完全从政治统治的角度出发，从思想上、行为上对封建知识分子进行全面控制。他们可以在“至善”道德的遮掩下，堂而皇之地要求社会各阶层人士服从于宗法统治的各种规范，谁要是脱离了“三纲领”的规定，就是“离经叛道”，这实在就是儒家思想能够成为中国两千年官方统治意识形态的根本原因所在。</p>
<p>​
通过对《大学》中“三纲领”的分析，我们可以看到它们之间存在的一种递进的逻辑关系。这一关系表明了道德主体“从明明德”出发，经过“新民”的发展，最终达到“止于至善”的理想境界，这种对主体修为实践活动的规定直接引发出“内”“外”两种相联系的具体修为方式，儒家同样以逻辑发展的合理结果提出了“八条目”的具体实践之道。</p>
<h5 id="八条目主体道德修为的具体步骤">八条目：主体道德修为的具体步骤</h5>
<p>​
《大学》在提出了“大学之道”即“三纲领”说之后，接着又提出了“八条目”之说。一般来说，把格物、致知、诚意、正心作为道德的内在修为，而把修身、齐家、治国、平天下作为道德的外在修为。</p>
<p>​ 修身的步骤：正心诚意和致知格物</p>
<p>​
《大学》提出的“修身”途径主要是指“八条目”中的格物、致知、诚意、正心，实际上可以概括为两个步骤：正心诚意和致知格物。《大学》认为，修身的起点是致知格物，《大学》对致知格物没有作过多的解释。通过历代一些学者的注疏，可以看出，所谓“格物”就是指“对自然外界进行研究”的意思。“格物”“致知”是联系紧密、层层递进的两个步骤。“格物”的逻辑结果是获得了对万事万物运行发展规律的理性认识，而这正是“致知”的内在含义，而“致知”的来源首先是主体对客观外界事物的认知，所以《大学》说：“物格而后知至。”朱熹解释说：“物格者，物理之极处无不到也。知至者，吾心之所知无不尽也。”“致，推极也。知，犹识也。推极吾之知识，欲其所知无不尽也。格，至也。物，犹事也。穷至事物之理，欲其极处无不到也。”刻苦地研究探讨事物的道理达到穷尽的地步，从而使自己的认识也达到一个较高的层次，这是“致知”“格物”所要达到的高度。朱熹在对“致知”“格物”进行阐释时强调的是理想人格在“修己”时应时刻注重尽自己最大努力去学习、研究，以丰富自身的知识，以便为“诚意”“正心”作准备，从这一点上看，朱熹的观点是符合人的一般认识规律的。没有对外界事物的研究考察就不可能获取丰富的知识，外界的万事万物是人认识的唯一源泉，只有通过主、客观的互动才能达到真正“修己”的目的。朱熹强调主体的主观能动性，他注意引导人们勇于探索、善于学习的兴趣，抓住人们为修身而努力提高自身道德水平的特点，促使人们对自身及外界事物进行必要的研究。但是，从总体上来说，《大学》与早期儒家思想一样，所提倡的“格物”“致知”主要还是侧重于社会伦理道德方面，他们的致思取向主要是放在社会生活中关于人与人、人与社会、人与自我的关系上，而不是放在人与自然的关系上；对于自然界万物的探究只是其中的一小部分，目的还是为现实政治服务，这充分反映了儒家人学思想的政治性、伦理性特点。</p>
<p>​
“格物”“致知”是修身的重要方式，它从社会伦理的层面丰富和限定了人们的认识范围。在修身的第一步完成之后，《大学》又逻辑地提出了“诚意”“正心”的行为步骤。关于“正心”“诚意”，《大学》作了详细的解释：“所谓修身在正其心者，身有所忿懥，则不得其正；有所恐惧，则不得其正；有所好乐，则不得其正；有所忧患，则不得其正。心不在焉，视而不见，听而不闻，食而不知其味；此谓修身在正其心。”在《大学》看来，恐惧、忧患等不良情绪深深影响着“心”发挥其正常的认识功能，因此，所谓“正心”就是摈弃外界干扰和不良情绪的影响，使“心”能正常发挥其辨知事物的功能。一句话，就是要做到专心致志、精力集中。儒家所强调的“正心”主要是指伦理道德所规定的各项行为规范，知识分子只有按儒家或正统社会所提倡的要求来做才是正当的，否则便是不正当的。这种引导人们克服私欲，消除不合理、不健康的欲望和情绪才能修身的提法，表明道德主体主观努力的极端重要性，只有主观内心自觉自愿地接受道德修养的熏陶才能产生具体的行为动力。对于“诚意”，《大学》说：“所谓诚其意者：毋自欺也，如恶恶臭，如好好色，此之谓自谦。故君子必慎其独也。”“欲诚其意，先致其知。”先有对社会伦理的深刻认识，才能在主体内心树立真正“修己”的诚意。“……富润屋，德润身，心广体胖，故君子必诚其意。”“诚意”就是不自欺欺人，就是独善其身，就是表里如一，在精神上感到极大的满足。在通过“格物”“致知”的步骤后，主体已经认识到事物发展的高深道理，认识到自我在社会中应注重和施行的内容，如果自己下决心追求理想人格境界，就得在心里首先设定追求目标的美好愿望，在日常行为中自觉地以理想人格的标准要求自己。这种完全个性化的行为是萌发于主体内心，然后表现于外在具体实践中的。这里最重要的是“慎独”。何谓“慎独”？《大学》解释说：“小人闲居为不善，无所不至，见君子而后厌然，揜其不善，而著其善。人之视己，如见其肺肝然，则何益矣。此谓诚于中，形于外，故君子必慎其独也。”“慎独”所要表明的是在闲居独处、没有别人监督的情况下，更要谨慎地反省自我，进行实践性道德修为，因为诚与不诚、欺与不欺，虽发于内心，但必然会表现出来。朱熹对此解释说：“独者，人所不知而已所独知之地也。言欲自修者知为善以去其恶，则当实用其力，而禁止其自欺……不可徒苟且以殉外而为人也。然其实与不实，盖有他人所不及知而己独知之者，故必谨之于此以审其几焉。”这实际上是提倡一种道德自律，把修已作为自我主观意识较强的一种修养行为，不完全依赖于外界条件的约束，也不自欺欺人地借修为的幌子而专做给别人看，沽名钓誉，这些都是主体道德修为中的大忌。这一点完全体现了《大学》的理论特点，重视内心道德的严格自律，调节自我情感，坚持所选择的修养之道。后世大儒对“慎独”都是非常看重的，明代王阳明、清代曾国藩等都对此有过精辟的见解。在现代竞争日益激烈的社会关系中，“慎独”仍是一条非常重要的道德要求和人生修养原则。</p>
<p>​
由“格物、致知”到“诚意、正心”体现的正是主体道德修养的层次，然后经由主体来加强这种内在的向最高道德境界的追求，最后落实到外在的治国平天下的层面，这种由内到外的递进式的修为之路是主体道德修养不断加强的过程，也是由观念到行动的具体实践过程，很显然这里更侧重于内心情感的实践体验。对于外在的具体实践之路，“修身、齐家、治国、平天下”同样是递进式的渐进过程，这一切都经由“修身”而引发。“修身”是指在心中保持一贯的良好作风，时刻注重把自我调适到社会伦理所要求的规范中来。这样一来实际上就把主观的意志力强制性地移向了能否遵循宗法礼教的规定上来，从这里也可以看出《大学》与孟子提倡的“内圣”之道的继承关系。内心道德体验的程度直接导致了“修身”效果的好坏，故而朱熹论曰：“心有不存，则无以检其身，是以君子必察乎此而敬以直之，然后此心常存而身无不修也。”心里要“常存”什么呢？常存的是通过“格物”“致知”所得到的关于社会伦理方面的道德规范，这是“修身”的关键点。由以上分析可以看出，“修身”直接来自于道德主体的“格物”“致知”“诚意”“正心”，把这四项内心的道德修为做好了，“修身”的目的也就可以达到了。</p>
<h5 id="修身的价值目标治国平天下">修身的价值目标：治国平天下</h5>
<p>​
“修身”既是《大学》思想的根本目的，同时又是《大学》“治国、平天下”的出发点。由内到外、由小到大、由家到国乃至天下的实践之路是有先后顺序的。《大学》又提出了“齐家”之论：“所谓齐其家在修其身者：人之其所亲爱而辟焉，之其所贱恶而辟焉，之其所畏敬而辟焉，之其所哀矜而辟焉，之其所敖惰而辟焉。故好而知其恶，恶而知其美者，天下鲜矣！”人之感情易被一时之好恶、贵贱之情所蒙蔽而不能以正当全面的眼光来看待事物，这样很容易造成对事物的片面理解。这一段话旨在说明“齐家”与“修身”之间的关联。从现代社会学的角度看，家庭是社会最基本的细胞，而人又是组成家庭的最基本元素，只有社会中每一个独立个体在自身的整体素质方面有了全面的提高，才可能维系家庭的内部稳定，最终也才能保持社会的稳定，保持社会道德水平的进一步提高。从这一层面讲，《大学》所谓“身修而后家齐，家齐而后国治”的理论是有一定的科学道理的。“齐家”的重要作用要依“修身”的情况而定，“治国”必须以“齐家”为基础，为此《大学》又说：“所谓治国必先齐其家者，其家不可教，而能教人者无之。……一家仁，一国兴仁；一家让，一国兴让；一人贪决，一国作乱。其机如此。……是故君子有诸己，而后求诸人，无诸己，而后非诸人。所藏乎身不恕，而能喻诸人者，未之有也。故治国在齐其家。”一家作风之好坏影响一国兴亡之大事，这种论调充分说明了“齐家”对于“治国”的重要性，因为在中国传统社会结构中，“家”“国”具有同质同构的特点，“家”是“国”的缩小，“国”是“家”的放大，因此，“家”“国”的关系是极为密切的，“家”之不齐，“国”必将不治。实际上一人、一家的状况反映的是道德主体在日常事务中的所作所为，出发点的好坏当然会引起相关联的反映。若以良好的出发点去行事，引发的好的结果就可能多些；若以邪恶的心态去行事，那就必定引起坏的结果。《大学》强调“齐家”对“治国”的重要性，目的就是要引发人们对“修身”“齐家”的重视，以便更好地做到政治伦理化与伦理政治化的结合和统一。那么，“齐家”如此重要，应该如何“齐家”呢？在这一问题上，《大学》提出了“齐家”的行为准则：“孝者，所以事君也；弟者，所以事长也；慈者，所以使众也。”孝、悌、慈这些概念都是孔、孟、荀在他们的理论中反复提到的，孔子的“忠恕”之道以“孝悌”为中心；孟子的“仁义”学说也以“孝悌之道”为根基。至于说“慈”也是“人性善”思想的题中应有之义。实际上孝、悌、慈作为德育教化的手段在“齐家”和“治国”中都可以运用。用在“小家”之中可以取得家庭和睦、井然有序的效果；扩而充之，在治理国家中运用起来可以使君王的形象更加完美、统治更易进行。实际上，《大学》的这一思想在中国漫长的封建社会中时时刻刻都在发挥着其不可替代的影响和作用，这种以内制外、以德教化的做法一直是历代统治者治国之准则，这一思想的运用造成了中国社会结构中“国”“家”不分的特有的政治现象。这种传统的社会结构和价值观念对于中国正在实行的社会主义市场经济建设来说，其负面影响不可低估。</p>
<p>​
“治国平天下”是儒家外用之道的最高目标，同时也是道德主体修为的最高境界，历代一些有作为的知识分子无不以“穷则独善其身，达则兼济天下”的宽大胸怀激励自我。追根溯源，这句至理名言正是从《大学》的“八条目”中引申而来。《大学》有言：“所谓平天下在治其国者，上老老而民兴孝，上长长而民兴弟，上恤孤而民不倍。是以君子有絜矩之道也。”从《大学》的这一段话可以看出，“上”指的是君王、统治者。这样看来，儒家所提倡的理想人格修为之路并非轻而易举就能实现。一国之君主或一国之统治者要治理好国家，在提高自身道德修养的同时，还要对广大民众予以教诲，把“老老”“长长”“恤孤”作为“治国”的前提条件，只有做到了这一点，“治国平天下”就有了坚实可靠的社会基础和保障，“治国平天下”的宏伟理想也才有了实现的可能。《大学》这段“治国平天下”的思想与孟子所说的“老吾老以及人之老，幼吾幼以及人之幼，天下可运之掌上”的思想有着明显的继承关系。</p>
<p>​
综上所述，《大学》一书以简练而内涵丰富的语言涵盖了早期儒家人学思想的精神内涵，揭示了儒家理想人格修为的一般过程。“三纲领”引导人们注重修为目标，“八条目”指示人们修为应该怎样做。“八条目”的内容是一个由内到外、相互关联、不能任意颠倒的统一的整体，是一个穷尽内圣外王之道的思想理论体系。它以“格物”为起点，以“平天下”作为其奋斗目标。尽管《大学》中使用的这些范畴都带有浓厚的伦理色彩，但在具体的道德修养和社会道德实践中却发挥了积极有效的作用，对调适人们的心态、稳定社会关系、保持思想上的连贯性都起到了重要的影响作用。朱熹如此推崇《大学》，正是看到了它对稳定社会、重塑道德人格所具有的重要价值潜力。从当代社会的角度来看，《大学》一书中所阐述的某些思想观点，仍有重新认识、重新评价的必要，对于中国文化的未来发展来说，挖掘《大学》中有价值的思想内涵同样有着十分积极的意义。</p>
<p>（选自《中国文化研究》，2001年总第33期）</p>]]></content>
      <categories>
        <category>High School</category>
        <category>Chinese</category>
        <category>Classical Chinese Literature and Poetry</category>
      </categories>
      <tags>
        <tag>School Notes</tag>
        <tag>High School</tag>
        <tag>Chinese</tag>
      </tags>
  </entry>
  <entry>
    <title>高中文言文：选择性必修下 第三单元</title>
    <url>/2022/03/14/chinese/High%20School/Classical%20Chinese%20Literature%20and%20Poetry/%E9%80%89%E6%8B%A9%E6%80%A7%E5%BF%85%E4%BF%AE/%E9%80%89%E6%8B%A9%E6%80%A7%E5%BF%85%E4%BF%AE%E4%B8%8B%E5%86%8C%20%E7%AC%AC%E4%B8%89%E5%8D%95%E5%85%83/</url>
    <content><![CDATA[<h2 id="单元内容">单元内容</h2>
<h3 id="课文目录">课文目录</h3>
<pre class="template:contents"><code>[[High School, Chinese, Classical Chinese Literature and Poetry, 陈情表-李密], 陈情表-李密]
[[High School, Chinese, Classical Chinese Literature and Poetry, 项脊轩志-归有光], 项脊轩志-归有光]
[[High School, Chinese, Classical Chinese Literature and Poetry, 兰亭集序-王羲之], 兰亭集序-王羲之]
[[High School, Chinese, Classical Chinese Literature and Poetry, 归去来兮辞并序-陶渊明], 归去来兮辞并序-陶渊明]
[[High School, Chinese, Classical Chinese Literature and Poetry, 种树郭橐驼传-柳宗元], 种树郭橐驼传-柳宗元]
[[High School, Chinese, Classical Chinese Literature and Poetry, 石钟山记-苏轼], 石钟山记-苏轼]</code></pre>
<h3 id="单元目标">单元目标</h3>
<ol type="1">
<li><p>阅读古代散文佳作，体会古人的情感、思想和人生感悟，把握文章承载的文化观念，从中受到陶治，汲取智慧，感受民族文化的无穷魅力，增进对中华优秀传统文化的理解和认同。</p></li>
<li><p>深入研读单元选文，在反复诵读涵泳的基础上，领会不同作者在审美上的独特追求；理解作者抒发情怀、表达思想的个性化手法，赏析文章的章法和细节；学习自主选择角度欣赏古代散文作品。</p></li>
<li><p>结合体验与思考，进行对比与联系，集中研习古代散文；全面、深人地认识古代散文的体裁特点、艺术手法和多样风格，并尝试接触、运用相关的研究方法。</p></li>
<li><p>在研习单元选文的过程中，理解古人是怎样“修辞立其诚”的；结合生活实际，写一封书信，做到说真话，述真知，抒真情。</p></li>
</ol>
<h2 id="编写意图">编写意图</h2>
<h3 id="编写意图-1">编写意图</h3>
<p>​
本单元属于“中华传统文化经典研习”学习任务群，意在让学生集中阅读经典作品，积累文言阅读经验，培养民族审美趣味，增进对中华优秀传统文化的理解和认同。这一理念为统编高中语文教材中所有以文言诗文为主体的单元所共有，是“文化传承与理解”这一学科核心素养在统编高中语文教材中的具体落实。</p>
<p>​
选择性必修教材中共有四个文言诗文单元，与必修教材一样覆盖了经史子集四部：选择性必修上册教材第二单元以先秦诸子的作品为主（《礼记》虽为西汉人所编纂，但反映的主要还是先秦礼制），可以视为必修下册教材第1课的拓展与深化；选择性必修中册教材第三单元是史传和史论，可以视为必修下册教材第2、第3两课和第16课的整合与延伸；本册教材第一单元所选诗词从《诗经》直至两宋，与必修上册教材第三单元同样具有反映“古代诗歌史”的意味，但时间跨度更大；本单元则综合选择了从西晋到明中期的六篇古代散文名作，体式变化多样，也略有“古代散文史”的模样。由此可见，在课程标准的框架下，选择性必修教材的文言诗文单元都带有加深拓宽、比对归结的多重意图。值得一提的是，非议论类的文言散文是学生文言文学习中的大宗，但在前四册统编教材中并未设置专门的单元，相关选文也较少，作为统编高中语文教材的第一个文言散文单元，也是统编初高中语文教材的最后一个文言诗文单元，本单元应引起教师的高度关注。</p>
<p>​
按照课程标准的要求，教材选择了“不同时期、不同类型的一些代表性作品”来组织本单元，所选古代散文作品都是“事”“情”“理”融为一体的佳作，在课程标准特别强调的“精神内涵、审美追求和文化价值”方面都有着突出的表现。作为一个归结性的单元，古代散文的诸体皆是题中应有之意。本单元的选文分属“表”“志”“序”“辞”“传”“记”六种，基本涵盖了中学生常见的古代散文（议论类散文除外）体式。除了《陈情表》《兰亭集序》带有实用文的特点，其他几篇都是以抒发情感、表达思想为主的作品。即使是《兰亭集序》，也并非以“序所以为作者之意”（孔安国《古文尚书序》）为主，而是以序文抒发作序者自己的感思，属于“疏通圆美，而随所序之事变化”（陈绎曾《文说·明体法》）的作品，与纯实用性的序文有所区别。</p>
<p>​
从风格来看，这六篇文章大致可以分为两个类型。《陈情表》《兰亭集序》《归去来兮辞并序》都是晋代作品，其中《陈情表》《归去来兮辞并序》都曾被选入《文选》，虽然带有重视“辞采”“文华”的特点，却并不堆砌、浮华，属于能得文辞之助而不为辞所累的佳作。《种树郭橐驼传》《石钟山记》是唐宋八大家的古文，柳文清朗有力、不乏文采，苏文晓畅平易、不事雕琢，可谓各臻其妙。《项脊轩志》是归有光的名作，即事抒情，真切动人。八大家的古文一般而言被认为是魏晋以来文风的对立面，而归有光是明代“唐宋派”代表，继承了唐宋古文运动的传统，因此，在这个单元中学生可以在一定程度上感受到古代散文发展史上的重大转折，即由骈而散，由华而实，由踵事增华而不尚雕彩。当然，由于三篇晋文本是佳作，不属于古文运动要抨击、批判的浮摩已极的骈文，所以学生只能约略感觉到这一转折，但作为一个归结性的单元，这样的内在理路是具备的。</p>
<p>​
教材在选文和安排时除考虑文学史的脉络外，也兼顾了主题、风格等方面的特点。</p>
<p>​
《陈情表》是西晋李密写给晋武帝的奏疏，开篇陈述祖母抚养自已、自己奉养祖母的情况；接下来备述守臣推举、天子征辟与祖孙两人相依为命、不可分离的矛盾，表示自己并非不知满足、别有所图；最后再次强调祖母朝不保夕、自己不能远离的事实，祈请皇帝以孝道为重，容许自己先孝后忠。从实用文的角度来看，本文的主要目的是推辞征辟、保全自己，但文章写得恳切真挚，感人至深。千载而下，读之仍令人动容。</p>
<p>​
《项脊轩志》借记物以叙事、抒情，在描述项脊轩景物变迁的同时，以简洁的笔法记述自己在其中的生活以及与亲人朝夕相处“多可喜，亦多可悲”的往事，表达了自已对祖母、母亲、妻子的深深怀念，把一段悲喜交加、令人感喟不尽的人生呈现在这个“室仅方丈”的微缩舞台上。全文以平淡的词句、平静的笔调描述平凡的往事，令读者感怀想象，偶尔一两句抒情点染，就会打开他们的情感闸门，使其受到深深的感动，正所谓“不俟修饰，而情辞并得，使览者恻然有隐”（方苞《书归震川文集后》）是也。</p>
<p>​
就本单元来说，这两篇文章的写作时代分居首尾，但合为一课，除了其中包含着孝老爱亲的传统价值观这一重要原因之外，也因为两篇文章存在着其他一些相似点或可对照点。例如，两篇文章都写得情真事实，凄切动人，事为情之始，情为事之华。又如，两篇文章在语言方面都较少华丽的雕饰，以传情达意为主，相较而言，《陈情表》较为整饬修洁，《项脊轩志》则将典雅的叙述与口语化的描写融为一体，等等。</p>
<p>​
《兰亭集序》是序文，记时地、述人物、叙事由都很简略明快，在简洁清丽的景物描写之后是对人生苦短、欢愉难期的感叹，是对人生苦短、欢愉难期的感叹，是对死生至大、不可轻忽的觉悟，最后再回到对诗集内容的简要介绍，仍不离“其致一也”。文中那宇宙自然与诗意生命的交响，乘时作乐与人生苦短的变奏，引发了不同时代读者的共鸣与沉思。与这篇流传千载的序文相比，作为诗集主体的众多名士的诗作反倒流传不广了。</p>
<p>​
《归去来兮辞并序》是作者辞官归里，复返自然后的作品，充满对污浊官场的厌恶和对田园生活的热爱。作者投身自然山水，将自身的生命融人林泉之中，在对登皋吟啸、临流赋诗的吟咏中平静地看待时光流逝、岁月渐老。在与世俗生活决绝之后，陶渊明用欣赏的眼光看待田园生活的一切，用敏锐的心灵体验万物的律动，他的快乐来自很多地方。但最根本的则在于他那向往自由、品味孤独的内心终于能摆脱桎梏，有所寄托，获得安顿。</p>
<p>​
将这两篇文章合为一课，并不仅因时代的相近，而是因为它们都有着对生命的深刻认识，有着对人与自然关系的深切体悟，能给予今天的人们很多启发。同时，这两篇文章能够将语言锤炼得不失素朴淡雅之美，打磨得颇具自然生动之致，清雅精致，节奏感强，收放自如。这是后世那些浮华作品所难以比拟的。从文章写法来看《兰亭集序》一气而下，是比较标准的散文笔法，《归去来兮辞并序》则“自首至尾，凡五易韵，为《骚》之变体”（林云铭《古文析义》卷九），两篇文章放在一起，方便师生进行比较阅读。</p>
<p>​
《种树郭囊驼传》是一篇设事明理的散文，虽然文体是“传”，但用意并不全在记述人物的言行，而在于因事明理、针砭时弊。文章从郭橐驼擅长种树写起，很快过渡到他的种树之道——“顺木之天，以致其性”，这与其他植树人过分干预树木生长。“虽曰爱之，其实害之”形成了鲜明对比。作者接着又借郭橐驼之口，以种树类比养民、批评了当时官吏繁政扰民的现象。委婉而又明确地提出了为政者应宽政解缚、与民休养生息的观点。这种传记文中的说理只作类比而不作逻辑推论，但由于种树之术与养民之术确有很多相似之处，所以作者要讲的道理仍然令人信服。</p>
<p>​
《石钟山记》是一篇记游说理的散文，虽然文体是“记”，却“以辩体为记体”（浦起龙《古文眉诠》卷六十九）把论断、说理与叙事、写景融为一体。文章围绕着“石钟山因何得名”的问题。从对前人说法的怀疑写起，进而写自己和苏迈同游石钟山，探究其得命名原因的经过和自己的结论，最后得出“事不目见耳闻，而臆断其有无，可乎？”的感想，并推测石钟山得名向题长期没有“正解”的原因。其中父子深夜乘舟“至绝壁下”一段，不仅是绝妙的“绘声”文字。也是详尽的探究记录，近人说“东坡此文，直以记为考”（林纾批《古文辞类篡》卷九），是很有见地的。</p>
<p>​
这两篇散文并未合为一课，但教师在教学时除落实各课的教学目标外，也不妨做些跨课的比较阅读，引导学生适当地做些研究。例如两篇文章都有比较多的说理成分，但所说之理不同文章写法也各有差别。《种树郭素驼传》所说的是养民之术，所论在政事，切中时弊，针对性强文章写得委婉深隽，耐人寻味。《石钟山记》所说的是名实之理，所论在事理及明理之道，由事入，由理出，文章写得潇洒自如，虽无大起大落却自有内在起伏。</p>
<p>​
本单元的单元学习任务有四项均紧扣“中华传统文化经典研习”学习任务群的学习目标与内容展开。其中，任务一指向课程标准要求的对作品“精神内涵”“文化价值”的体会与理解；任务二紧扣课程标准“学习传统文化经典作品的表达艺术”的任务，兼有读与写，有关阅读的任务，抓住古代散文语言、结构上的特点进行研习，有关评点的任务其实仍然是对经典文本的鉴赏，是以写促读、以评助赏；任务三是文言语法现象的梳理总结（词类活用），也是课程标准反复强调的内容；任务四是单元写作跳脱开对技法、套路的过度关注，返璞归真，强调“说真话、抒真情”，与前一单元的写作任务语言的锤炼”形成呼应，带有总括高中阶段写作学习任务的意图。</p>
<h3 id="教学指导">教学指导</h3>
<p>​
本单元学习的主要内容是古代散文作品的研习。所谓“研习”，既包括了一般意义上的学习，又增加了研究的意味和任务，这是本单元教学时应当首先加以关注的。这一学习方式性质的转变究竞意味着教学方式需要进行哪些具体转变，课程标准没有进行集中解说，但是在相关学习任务群的描述中都有比较明确的提示。总的来说，无论具体做法如何，都要注意结合教学内容的特点，体现课程标准的精神，做到扎实、深入、有价值。</p>
<p>​
从教学的角度来看，本单元的选文都是经典名篇，长期以来都是语文教材的常选篇目，文言词句的把握、基本内容的理解都有基础可依托，教师在指导学生阅读文本方面有较多可借鉴的资源。但是，这并不意味着教师可以“新瓶装旧酒”，其实，教师仍然面临着教学方式转变的任务，包括教法的转变和新的教学点的开发。</p>
<p>​
在本单元的教学中，要高度重视单篇文章的阅读，应结合丰富的情境，设置具有研究性的学习任务。在统编必修教材的教师教学用书中，对大情境、大任务设置的关注往往超过对单篇文章阅读的关注，编写者常常用“既要……又要……”一类的句式，表达“二者不可偏废”的意思。随着课程结构板块的变化，在选择性必修部分，课程标准开始更多地强调对具体作品要“精读”“考察”“研读”，将学生的梳理、讨论、研究建立在对作品的深入阅读的基础上。这是一个非常切实的转变，它意味着必修阶段的学习需要在大情境、大任务的背景下对教学内容丰富的经典文本进行取舍、选取，而选择性必修阶段的学习就要特别重视阅读的精细度和深刻度，不然就谈不上研究。本单元是纯文言文单元，所选文章大都有相当的理解难度，在教学中不仅要就作品的思想、感情、脉络、笔法等作细致的解读与全面的把握，还要适当旁及作品的文学史、文化史地位，还有相关的社会，历史、文化背景等，为展开较有学科特点的研究做好准备。</p>
<p>​
在学习情境设置方面，选择性必修阶段的教学也与必修阶段有所不同。从课程标准的表述来看，“中华传统文化经典研习”学习任务群比较看重“特定的社会文化场景”、文化史地位、以今视古的探究视角等，遵循这些思路设置的学习情境，可以更多地体现人文学科本身的特点，体现学科研究的概括、推理、价值判断等，而逐步远离具体的生活。甚至有些研究问题就带有一定的情境，如“柳宗元平民传记有怎样的思想价值与艺术特点”。既是具体的问题，又可以从属于“中国文学史上的平民主题散文”或“中国古代散文中的讽喻性表达”等比较宏大的语境。其实这体现的是一种学习规律。学习者的学习逐渐偏重学科内部的理解和有学科特点的探讨，是其走向选修阶段的专题研讨乃至未来的专业学习的重要准备。在基础教育阶段，其意图并不在培养专门的文史工作者，而在于使学生感受人文学科的基本特点、一般方法、价值追求等。</p>
<p>​
同时，教师仍然要注意处理好文言文内容理解和语言现象梳理之间的关系。这是一个老问题，课程标准的表述可能会为我们重新审视这一问题提供帮助。这些文章的内容理解，首先应该依靠反复诵读而不是让学生背诵译文。课程标准在“教学提示”中首先指出“重视诵读在培养学生语感、增进文本理解中的作用”，这是非常重要的。通过反复诵读，借助教材中的注释、学习提示。学生一般能对文章内容有基本的理解。教师需要做的，是帮助学生进一步具体、准确、深人地理解文本内容，这并不等于要对文中的文言语法现象进行穷尽式的搜罗与归结，也不等于要对大量词语深挖死抠，个个都要明确词性、界定用法甚至搞清源流。课程标准提到的“梳理常用文言实词、虚词和特殊句式”，前提是“联系学过的古代作品”。目的是“提高阅读古代作品的能力”。也就是说。梳理总结要建立在足够量的阅读基础上，目的是培养一定的词汇基础和语言敏感度，帮助阅读文言文。这并不等于说在教学中一定要先把实词、虚词、句式梳理总结好了，才能进行内容理解；更不等于说教学每篇文言课文时都要先将“通假字、词类活用、一词多义、特殊句式、重点实词、重点虚词”这“六大件”先梳理记诵一遍。在文言语法现象的学习方面，应该坚持“随文把握”“精选重点”“课后总结”“有意识运用”相结合的思路，不能占用大量时间和精力搞“地毯式轰炸”。研习比起一般的学习更强调研究，思考的过程，教师也更需要对教学内容和方式进行选择。</p>
<p>​
比起上面所说的教学方式的转变，对于研习来说，新教学点（尤其是带有研究性的教学点）的开发可能更为重要。所谓的新教学点不见得都是前所未见，人所未发的，而常常是被过度的文言语法现象教学和一般性的串讲翻译“挤”得难以展开的。这些教学点都具有一定的研究属性，在具体教学中，是融入日常的课堂教学来处理，还是布置专门的研充任务，需要教师根据学情自主决定。这里举一些例子供老师们参考。</p>
<p>​
有些研究性的教学点比较具体，或偏于赏析评价，或偏于考证理解。例如，《陈情表》的语言究竟是如古人所说的“不事雕饰”，还是“雕而不饰”？《项脊轩志》以“项脊”为名是什么意思？“亭亭如盖”的枇杷树是何人所植？解决这两个问题对我们理解文章有什么价值？《兰亭集序》中的生命反思究竞深刻在哪里？郭橐驼种树重视培元固本，与所谓的“养人之术”有何关系？从中能读出哪些其他道理？等等。对这些问题进行研究，能够帮助学生更准确地把握文章的思想内容与语言特点，特别是突破一股性的大致理解，发现经典名篇的独到之处和多重意蕴。</p>
<p>​
有些研究性的教学点涉及教材选文之间的比较，或是写法、语言，或是思想、感情。例如，《陈情表》与《项脊轩志》都以情真见长，但一篇有明确对象和实际目的，一篇以自我表现、自我抒发为主，在情感表达方面有何不同之处？《兰亭集序》《归去来兮辞并序》都体现了对人生有限的思考，其思考的方式和得到的感悟有什么不同之处？等等。通过比较，既可以明确、深化对每篇文章的认识，也有助于得出带有一定规律性的认识。</p>
<p>​
有些研究性的教学点则不局限于文本本身，常常与文章的历史背景、思想背景，作者的具体情况等相关。例如，《陈情表》能够打动（至少是说服）晋武帝。究竟主要是因为文中的一片真情，还是因为内容合情合理，切合晋武帝的政策主张？《兰亭集序》表达的对生命的思考，与当时（甚至魏晋时期）关于生死的常见观点有何异同？陶渊明写《归去来兮辞并序》时尚在壮年（距他去世还有十多年），为什么会有那么强烈的人生“行休”之感？等等。这些问题遵循“知人论世”的文学研究传统，既可以进行独立的研究，也可以作为更具综合性的研究的基础。</p>
<p>​
有些研究性的教学点涉及贯通性的观照、文学史问题、文化史论题等，往往要进行拓展，可以作为独立的研究性学习任务。例如，从《陈情表》出发，联系初高中教材中的“表”“疏”“书”等带有书函性质的文章（甚至还可以包括赠序、史传中的“讽”“说”），适当拓展，探讨其如何围绕实际目的去布局谋篇、组织语言；综合初高中语文教材中的陶渊明诗文，适当拓展，探究陶渊明诗文独特的审美特质及其思想特征；初高中语文教材中有不少“记”，类型写法有所不同，其中的游记，从南北朝时期吴均等人的写景短章到带有浓重说理成分的《石钟山记》，似乎也颇有可梳理总结之处。又如，关于《兰亭集序》为何没有人选《文选》这个文学史上的传统问题，前人的论述有多个思路，可以做些综述归纳。也可以尝试得出自己的结论；柳宗元（包括韩愈）以普通劳动者为主人公的传记在古代传记发展史上有较重要的意义，可以与学生熟悉的史传做些比较，研究其选材、立意、语言等方面的差异。再如，孝长思亲和生命沉思都是中国文学史上的重要主题，这两个主题的表现角度和表达特点，可以由《陈情表》《项脊轩志》和《兰亭集序》《归去来兮辞并序》这两组文章出发，回忆、拓展，梳理、总结，做些研究，得出自已的结论。以上所举的这些教学点都有比较强的综合性，难度较大，比较适合学生小组合作进行研究。</p>
<p>​
值得一提的是，研究有两个基本要素，即占有资料和分析判断，没有资料只谈个人感觉，或者罗列材料不去分析判断，都不是研究。在信息时代，学生自主搜集资料的能力已经有了很大提高，教师可以鼓励他们利用不同渠道自主搜集资料。当然，教师要注意提供支持，向学生指示搜集资料的途径，示范如何辨别资料的价值、评判资料的作用，提供一些难以获取的资料，等等，而不是完全由学生自行搜集资料。更重要的是，教师要在学生的研究过程中进行过程指导，帮助他们分析资料与问题之间、资料与作品之间、资料与资料之间的关系，通过合理的逻辑推理、辨析、归纳等得出自己的结论。在资料搜集方面，要注意不必求新、求奇、求多，要让学生尝试以文本内证为主，以外部资料为辅，学习从利用常见资料发现问题。在研究结论方面，也不必过分追求其独创性、深刻性，只要有道理、合逻辑、不违背常识就可以了。</p>
<p>​
课程标准重视让学生搜集评点类的资料，并要求学生“学习运用评点方法，记录自己的感受和见解，不断提高独立阅读能力”，这是非常重要的提示，它提示我们要充分重视古人积累下来的文本解读成果（其中不乏带有比较意识、历史眼光的解读）。这些评点包含着多元的视角、开阔的视野、独特的方法和敏锐的感受，恰当使用，将前贤引入语文学习的多元对话中，不仅能帮助学生理解、赏析文本，还能帮助学生获得研究的线索和灵感，一些优秀的评点本身也是宝贵的语言学习对象。另一方面，现当代的研究成果也不可忽视，比起古人的研究，它们的长处在于使用新的研究范式、体现新的思考方法。比起重视主观感受，集中关注某一局部或某篇文章的评点，现当代的研究可能更多客观性、历史性的分析。同时，这些研究的呈现方式也是学生需要学习的。</p>
<p>​
最后需要提示的一点是：“研习”与选修课程的“专题研讨”和专业性的研究有所不同。虽然都要进行研究，但“研习”仍然属于“学习”范畴，它在资料占有和理性分析的水平要求上都要低于后两者，且研究的方式更加灵活。从一些非常具体的质疑反思，到程度较深、涉及面较大的综合性研究都可以纳入“研习”之中。因此，教师应充分考虑学情来确定指导学生进行研习的“量”与“度”，突出文本阅读的基础地位。同时，教师也不必把一般性的学习与研究性的学习割裂开来：一些点状的、具体的研究任务，完全可以融人对文本的细读、精读中；一些综合性较强的任务，也可以在理解、赏析文本时开其端绪、略见端倪，引发学生的研究兴趣，并给出适当的提示。</p>]]></content>
      <categories>
        <category>High School</category>
        <category>Chinese</category>
        <category>Classical Chinese Literature and Poetry</category>
      </categories>
      <tags>
        <tag>School Notes</tag>
        <tag>High School</tag>
        <tag>Chinese</tag>
      </tags>
  </entry>
  <entry>
    <title>高中文言文：选择性必修下 第一单元</title>
    <url>/2022/03/14/chinese/High%20School/Classical%20Chinese%20Literature%20and%20Poetry/%E9%80%89%E6%8B%A9%E6%80%A7%E5%BF%85%E4%BF%AE/%E9%80%89%E6%8B%A9%E6%80%A7%E5%BF%85%E4%BF%AE%E4%B8%8B%E5%86%8C%20%E7%AC%AC%E4%B8%80%E5%8D%95%E5%85%83/</url>
    <content><![CDATA[<h2 id="单元内容">单元内容</h2>
<h3 id="课文目录">课文目录</h3>
<pre class="template:contents"><code>[[High School, Chinese, Classical Chinese Literature and Poetry, 氓-《诗经·卫风》], 氓-《诗经·卫风》]
[[High School, Chinese, Classical Chinese Literature and Poetry, 离骚（节选）-屈原], 离骚（节选）-屈原]
[[High School, Chinese, Classical Chinese Literature and Poetry, 孔雀东南飞并序], 孔雀东南飞并序]
[[High School, Chinese, Classical Chinese Literature and Poetry, 蜀道难-李白], 蜀道难-李白]
[[High School, Chinese, Classical Chinese Literature and Poetry, 蜀相-杜甫], 蜀相-杜甫]
[[High School, Chinese, Classical Chinese Literature and Poetry, 望海潮·东南形胜-柳永], 望海潮·东南形胜-柳永]
[[High School, Chinese, Classical Chinese Literature and Poetry, 扬州慢·淮左名都-姜夔], 扬州慢·淮左名都-姜夔]</code></pre>
<h3 id="单元目标">单元目标</h3>
<ol type="1">
<li><p>深入研读本单元选编的古典诗歌作品，探寻诗歌之美，品评诗歌之味，感受古人通过诗歌表达的哀乐悲欢等种种情感。</p></li>
<li><p>从传统文化经典的角度来理解古典诗歌，把握其中蕴含的文化精神，探讨古典诗歌在当下社会生活中的重要意义，认识古典诗歌的思想意义和审美价值。</p></li>
<li><p>结合以前所学，梳理中国古典诗歌的发展脉络，尝试探讨评述不同体裁的诗歌在声韵格律、表现手法、审美风格等方面的异同，总结学习古典诗歌的经验并得到一定的理性认识。</p></li>
</ol>
<h2 id="编写意图">编写意图</h2>
<h3 id="编写意图-1">编写意图</h3>
<p>​
本单元属于选择性必修课程“中华传统文化经典研习”学习任务群，主要学习内容为中国古典诗歌。古典诗歌是中华传统文化的重要组成部分，诗歌的创作与欣赏在我国有着悠久的历史和深厚的传统，数千年来，伟大的诗人灿若繁星，名篇佳作层出不穷。本单元的主题是“诗意的探寻”，这一主题有两方面的含义。首先，本单元选编的诗歌，都有着丰厚的意蕴，需要细细品味咀嚼，多方面探求作品的“诗意”；其次，还要学会让自己的阅读体验与生活经验相印证，由此感受诗人创作时心灵与世界之间的相互碰撞、激荡，学会从千变万化的社会生活中发现诗意，体认诗歌的意义和价值。</p>
<p>​ 本单元选编了7首诗，按照文学史发展次序编排，分为4课。</p>
<p>​
第1课是《氓》和屈原的《离骚》（节选）。《氓》是《诗经》中叙事性较强的作品，在以第一人称的角度自述经历的同时，也带有强烈的抒情性。《离骚》是一首长篇抒情诗，同时也有自述身世经历的部分，诗人将个人遭际与国家命运联系起来，抒写人生理想和家国情怀，可以结合此前学过的《屈原列传》加以体会。《诗经》和《楚辞》是我国古典诗歌的源头，对于后世的文学创作（不限于诗歌）有着深远的影响，过去的教材中往往安排在比较靠前的位置，但考虑到难度（特别是《楚辞》）的因素，此次特意将其后移至选择性必修阶段，并编为一课，便于学生比较其不同的艺术风格，认识中国诗歌的抒情传统。</p>
<p>​
第2课是《孔雀东南飞》。《孔雀东南飞》是乐府诗的代表作品。乐府诗继承了《诗经》的传统，“感于哀乐，缘事而发”（《汉书·艺文志》），《孔雀东南飞》就是基于民间流传的焦仲卿、刘兰芝的故事，“时人伤之，为诗云尔”而来的。相比同样写爱情婚姻悲剧的《氓》，《孔雀东南飞》是一首更为纯粹的叙事诗，通篇采用第三人称叙事，结构巧妙，情节曲折，人物形象丰满，语言流畅而生动，取得了非常高的艺术成就。可以联系此前学过的古代民歌作品如《木兰诗）来体会其语言风格和写作特点，还可以与《氓》对比阅读，比较二者主题思想和艺术风格方面的异同。</p>
<p>​
第3课选了李白的《蜀道难》和杜甫的《蜀相》。李白和杜甫身处唐王朝繁华似锦的极盛时代，又目睹了安史之乱的惊天巨变，各自以不朽的诗篇抒写了时代精神和人们的心灵。李白天才不羁，诗风豪迈飘逸，想象奇特，笔意纵横，无拘无束；杜甫老成浑厚，诗风沉郁顿挫，笔力千钧，法度森然，体式谨严。两人的诗风既截然有别，又共同表现出盛唐诗歌特有的气象。可以通过《蜀道难》和《蜀相》这两首作品，结合此前所学，对唐代诗歌进行一些探讨。</p>
<p>​
第4课是柳永的《望海潮》和姜夔的《扬州慢》。两首词均以城市为表现对象。词这一文体的繁盛与城市经济文化的发展有着密不可分的关系，而柳永的《望海潮》虽为投赠、干谒之作，但同时也在相当程度上反映了北宋中期世道太平、市井繁荣、人民安居乐业的社会现实。然而盛衰无常，人类发展史上，许多繁华一时的大都市都曾遭遇严重的破坏乃至毁灭。姜夔的《扬州慢》就将一座同样“自古繁华”的城市屡遭兵燹后的惨状呈现出来，并通过今昔对比、表达了自己的“黍离之悲”。这是关于城市的不同书写和记忆，相互映照，可以给我们带来更多的思考。</p>
<p>​
本单元的四个研习任务，都与“诗意的探寻”这一人文主题有紧密的联系，形成有机关联的整体。任务一聚焦古典的当代价值，要求学生在诵读、欣赏本单元诗作的同时，结合过去所学、联系当下生活，思考古诗词在当下的意义。任务二聚焦本单元两首侧重叙事的诗作，要求学生梳理诗中的故事，比较异同，体会其艺术特点，意在让学生由此对中国古典诗歌的叙事风格（这一点在过去的诗歌学习中涉及较少）有一个适当的把握。任务三聚焦诗歌的鉴赏方法，提示学生从意象的选择、意境的营造等角度入手，探究诗歌艺术手法的运用，进而欣赏其艺术魅力。任务四带有一定的拓展性和综合性，要求学生就课内或课外的一首作品写鉴赏文章，并全班合作，编辑成集，作为古典诗歌学习的阶段性成果。</p>
<h3 id="教学指导">教学指导</h3>
<p>​
教学本单元，应当聚焦核心素养，明确单元教学目标。通过专题阅读、比较阅读等方式，经由真实情境中展开的学习活动，让学生在自主阅读鉴赏、梳理探究、写作表达、展示交流的过程中，丰富审美体验，不断深化对古典诗歌的认识。在教学实施中，还要注意以下几个问题。首先，要从“中华传统文化经典”的维度去观照本单元的诗歌作品。在反复诵读、斟酌字句、推敲手法，理解诗作细节的基础上，结合知人论世，体会这些作品所表现的中国人的精神世界，领悟其中丰厚的文化内涵。</p>
<p>​
其次，要体现“研习”的特点。相对于必修阶段，选择性必修阶段提出了更高的学习要求。要“学习多角度、多层次地阅读，对优秀作品能够常读常新，获得新的体验和发现。借助工具书、图书馆和网络查找有关资料，加深对作品的理解”；还要“学会尊重、理解作品所体现的不同时代、不同民族、不同流派风格的文化，尝试对感兴趣的古今中外文学作品进行比较研究或专题研究，理解作品所表现出来的价值判断和审美取向，作出恰当的评价”。教师应当引导、鼓励学生选择一些有深度的问题进行深人的研究性学习，初步练习小论文的写作，为更高层次的学习奠定基础。</p>
<p>​
最后，本单元对中国古典诗歌的学习带有一定的总结性。学生在基础教育阶段已经学习、接触了许多古诗词，具有较充分的感性认识和初步的理性认识，应该引导学生从发展源流、体式、题材、艺术风格、艺术手法等多个维度对自己关于古诗词的认识进行梳理，努力将已有的相对零散的知识系统化、结构化，对于自己学习、欣赏古诗词的方法，也应该通过本单元学习作一个较好的总结。</p>
<p>​
具体的教学实施方案，后面的“单元教学设计举例”给出了较详细的示例，可以参考。这里提出几个基本原则。一是要多方面激发学生对古诗词的兴趣。古诗词包含着丰厚的意蕴，可以进行多方面的探讨，如古诗词安排声韵、营造音乐美的手法，诗词的体式流变，作品中展现的古代社会生活，作品承载的古人的精神追求，等等。要善于从作品中找到能引发学生心灵“共振”的切入点，从而引起学生探究的兴趣。二是要引导学生多作自主梳理，如诗词体式的基本知识，与作品有关的文学史常识，作品中出现的特殊语言现象，古诗词独特的表现手法，等等。教师应鼓励学生通过编制图表等多种形式进行学习与积累，适时点拨方法，解答疑难问题，还应提倡学生之间的讨论交流和资源共享，形成团队学习、集体探究的良好氛围。三是要充分运用诵读这一手段，可以借助朗诵评价表，从情感、创意、表现等维度给学生提供学习与评价的标准，让学生在展示与评价中增进对诗歌情感的理解，增强对诗歌艺术魅力的体验。四是要引导学生自觉将已有的认识与经验进行拓展运用，如延伸阅读其他古诗词作品，自主进行赏析、评价等。</p>]]></content>
      <categories>
        <category>High School</category>
        <category>Chinese</category>
        <category>Classical Chinese Literature and Poetry</category>
      </categories>
      <tags>
        <tag>School Notes</tag>
        <tag>High School</tag>
        <tag>Chinese</tag>
      </tags>
  </entry>
  <entry>
    <title>高中文言文：选择性必修中 第三单元</title>
    <url>/2022/03/14/chinese/High%20School/Classical%20Chinese%20Literature%20and%20Poetry/%E9%80%89%E6%8B%A9%E6%80%A7%E5%BF%85%E4%BF%AE/%E9%80%89%E6%8B%A9%E6%80%A7%E5%BF%85%E4%BF%AE%E4%B8%AD%E5%86%8C%20%E7%AC%AC%E4%B8%89%E5%8D%95%E5%85%83/</url>
    <content><![CDATA[<h2 id="单元内容">单元内容</h2>
<h3 id="课文目录">课文目录</h3>
<pre class="template:contents"><code>[[High School, Chinese, Classical Chinese Literature and Poetry, 屈原列传-司马迁], 屈原列传-司马迁]
[[High School, Chinese, Classical Chinese Literature and Poetry, 苏武传-班固], 苏武传-班固]
[[High School, Chinese, Classical Chinese Literature and Poetry, 过秦论（上）-贾谊], 过秦论（上）-贾谊]
[[High School, Chinese, Classical Chinese Literature and Poetry, 五代史伶官传序-欧阳修], 五代史伶官传序-欧阳修]</code></pre>
<h3 id="单元目标">单元目标</h3>
<ol type="1">
<li><p>了解历史，尊重历史，以史为鉴，继承和弘扬中华秀传统文化，提升对中华文化的认同感、自豪感，增强文化自信。</p></li>
<li><p>研习史传作品，领略人物风采，理解史家对笔下人物的认识和评价，理解古代史家的历史观念，鉴赏作品的叙事艺术</p></li>
<li><p>研习史论作品，把握论者的观点和论述方式，学习作者思考社会现实问题的态度和方法，鉴赏作品的说理艺术。</p></li>
<li><p>丰富文言文的语言积累，学会在具体语境中分辨词语的意义和用法，把握古今汉语的差异与联系。</p></li>
</ol>
<h2 id="编写意图">编写意图</h2>
<h3 id="编写意图-1">编写意图</h3>
<p>​
本单元属于“中华传统文化经典研习”学习任务群的第二个专题，设计宗旨是围绕历史类散文作品的研读，引导学生了解中国悠久的修史传统，考察这类作品在中国文化史上的贡献，把握中国人善于以史为鉴的思维方式；学习史传文学的叙事艺术，理解作品中融入的史家观念和个人情志；把握史论作品的说理艺术，理解作者观察历史的角度分析作品的表达特点，辩证思考论述的合理性与不足；同时，通过阅读作品，丰富文言文的语言积累。</p>
<p>​
单元主题界定为“回到历史现场”，既是对相应学习情境的界定，又指明学习的策略。意在引导学生在阅读历史类散文作品时，要联系历史背景，回到特定的历史文化现场，结合时代因素、作者的思想经历，客观、辩证地认识作品中的人物理解史家观念、史评立场。学习策略具体说来包含两个方面：</p>
<ol type="1">
<li><p>品评历史人物。既要将传记人物放回历史现场，体会他们的现实处境，理解其人生选择和道德坚守，认识其历史地位和对后世的影响；又要超越历史，立足当下，客观评价历史人物，认识他们的局限性和不足，从中汲取经验教训；同时，要跨越时代，领略优秀历史人物的精神品质，感受他们精神世界的坚韧、美好、高洁、无私、勇敢，丰富我们的心灵世界。</p></li>
<li><p>品评历史类作品。既要将史传作品和史论文章放回历史现场，把握其中蕴含的史家观念，分析作者看待历史的角度，认识作品在当时的意义及其对后世的影响，比如司马迁纪传体史传作品的开创意义，《过秦论》的观点在西汉初年的合理性等；也要超越时代，审视作者的立场，辩证分析作品的不足，认识史家修史观念的局限性、评论者看待历史或论述方式的偏颇和缺陷。</p></li>
</ol>
<p>​
为此，教材精选四篇经典作品，编为三课，从历史撰述和历史评论两个角度切入，引导学生分别研习史传文学和史论散文；并设计四个单元研习任务，分项落实以上学习目标和学习策略。</p>
<p>​
中国历来重视历史书写，历史著作在中国古代文化典籍中占有重要的位置，有着优良的传统，最为突出的就是忠于历史、秉笔直书的实录精神和通过史书“善善而恶恶，褒正而嫉邪”（章学诚《文史通义·史德》）的叙述传统。从《左传》《国语》记事记言，到《史记》开创纪传体例，再到《汉书》《后汉书》《三国志》等赓续其精神，唐宋以来杂传繁荣，中国的史传文学不断发展，积累了大量优秀作品，对后世文学的发展影响深远。前两课选取的即是《史记》《汉书》这两部史学著作中的经典篇章《屈原列传》和《武传》。这些文章，以历史人物为中心，选取恰切的历史事实，精心剪裁，展现人物生平和时代风貌，表现出史家的历史观念和对人物的评价。</p>
<p>​
《史记》开创以记人为中心的纪传体例，深刻影响着后世史学的发展和文学创作，被誉为“史家之绝唱，无韵之《离骚》”（鲁迅《汉文学史纲要》），有着崇高的文学地位。《史记》中的优秀传记很多，《屈原列传》是其中较为独特的一篇。文章将屈原的生平事迹放在楚国日趋衰亡的大背景下展现，既有对史实的粗笔勾勒，又有对细节的工笔描绘；既揭示了屈原个人的身世浮沉与国家生死存亡的内在联系，展示出天下归于统一的背景下其性格和命运的悲剧性，又充分彰显了屈原睿智深刻的政治远见、坚贞不屈的高洁志向、九死未悔的爱国情怀以及可与日月争光的人格魅力。与其他许多传记不同，文章在叙事中融入大段的议论，叙评结合，论中有情，辞多寄托。吴楚材、吴调侯《古文观止》评论说：“史公与屈子，实有同心。”教学中，不妨联系《报任安书》中司马迁对自己“发愤著书”心迹与志向的表露，引导学生体会司马迁寄托在屈原身上的情感，思考二者跨越时空的精神联通。</p>
<p>​
《汉书》是一部“包举一代”的纪传体断代史，展现了西汉广阔的社会生活和各种人物的精神风貌。班固秉持封建正统的史学观念，其史识不及司马迁，但也有一些篇章颇为精彩，《苏武传》即是其中的名篇。文章以时间顺序记叙了苏武出使匈奴、因变被扣、力拒威逼利诱、苦守北海、持汉节不失的事迹，通过灵活选取人物的典型语言，凸显人物性格特征，生动刻画了苏武这一个性坚强、内心坚定、忠贞自守的爱国者形象。文章以叙事为主，不发议论，却通过精妙的选材、合理的裁剪、鲜明的对比，“于序事中寓论断”（顾炎武《日知录》卷二十六），表达了对苏武的敬佩、赞美与高度的评价。</p>
<p>​
教学这两课，要注意引导学生在精读两篇课文的基础上，结合以往所学的史传文学作品（如初中教材中的《周亚夫军细柳》《陈涉世家》，高中必修上册教材中的《鸿门宴》），并拓展阅读《史记》中的其他经典篇章，如《信陵君窃符救赵》《廉颇蔺相如列传》等，深人探究中国古代史传文学的叙事艺术。</p>
<p>​
中国人重视历史撰述，其中一个很重要的原因就是重视历史的借鉴作用。宋神宗评价司马光主持编写的《资治通鉴》，认为其“鉴于往事，有资于治道”，就是对这一功能的精当描述。中国历史撰述绵延不绝，史论文章也非常发达。古人写史论，用贾谊的说法，就是“观之上古，验之当世，参以人事，察盛衰之理，审权势之宜”，即秉持以史为鉴的态度，旨在总结历史经验教训，为现实政治服务，并非空发学术讨论；写政论文章，阐发意见和建议，也往往从三皇五帝、从文武周公谈起，在历史中寻找立论的合理性。有时候政论、史论并不能截然分开。第三课就选取了两篇史论文章。</p>
<p>​
历史上有一些朝代，“其兴也勃焉，其亡也忽焉”（《左传》），如秦朝，如五代之后唐，其勃兴而速亡的历史教训令后人十分关注，分析其兴亡的文章层出不穷。论秦亡，以《过秦论》最为著名；论后唐，则以《五代史伶官传序》为佼佼者。</p>
<p>​
汉初，民生凋敝，百姓急需休养生息，贾谊创作《过秦论》上中下三篇，总结秦的过失，以为汉王朝巩固统治的借鉴。教材选取最为知名、也是中学语文教材传统篇目的上篇。文章铺排叙述，利用六国与秦国的对比、陈涉与六国的对比，分析秦横扫而得天下与迅疾而失天下的原因，指出“仁义不施而攻守之势异也”的道理，意在劝诫汉朝统治者应该汲取前朝教训，与民休息，安民养民。贾谊以赋体写史论，多用夸张、对比，通篇一气贯注，气势充沛，铺张扬厉。</p>
<p>​
《五代史伶官传序》是一篇典型的史论，叙述后唐庄宗前期横扫诸国、意气扬扬，很快却众叛亲离、死于乱箭之下的史实，借助前后对比，指出其灭国亡身实出于人事，印证“忧劳可以兴国，逸豫可以亡身”的道理，对北宋王朝的统治有一定的借鉴意义。文章纵说盛衰之理，从一个细微的角度切入，以散体写史论，文字平易晓畅，简洁生动，感慨遥深。</p>
<p>​
教学这一课，要注意引导学生拓展阅读相关史料或其他史评文章，了解文章评论的历史事实，在此基础上开展思辨性阅读，既要体会文章论述的合理性，理解中国人传统的思维方式和说理方式，也要注意发现文本论述中的局限和不足。</p>
<p>​
把围绕任务群的学习要求和单元的学习目标，教材设计了四项循序渐进、逐层深入的单元研习任务。</p>
<p>​
研习任务一，可概括为“史实与人物”，旨在引导学生以“历史人物纵横谈”专题讨论会形式，把握课文中的叙事内容，梳理其中涉及的人物的生平，分析其成败得失，学习从历史角度客观评价历史人物；同时落实人文主题的学习，把握人物的精神品质，获取精神力量，或从人物经历中汲取经验教训，获得启示和借鉴。</p>
<p>​
研习任务二，可概括为“史述与史裁”，旨在引导学生探究史传文学的叙事艺术。子任务1，重在引导学生梳理课文内容，把握传主的生平经历，或作者史评中引述的历史事件；这一任务的设计，同时具有从作品中概括和提取有效信息的训练价值。子任务2，旨在引导学生联系以往所学，拓展相关资料，探究以《史记》《汉书》等为代表的中国史传文学的叙事艺术，就其中一点，深入研习，撰写短论或以幻灯片形式，在班级分享。</p>
<p>​
研习任务三，可概括为“史识与史评”，旨在引导学生理解史家对笔下人物的认识和评价，把握论者的观点和论述方式，对文本进行思辨性阅读。子任务1，旨在引导学生从文本中体会班固对苏武的认识和评价，尝试借鉴司马迁“太史公曰”的表达方式，以短评的方式阐发自己对历史人物的看法。子任务2，引导学生聚焦两篇史论文，在理解文章观点，把握其立论基础和论述方式的基础上，辩证思考其论证中的瑕疵或漏洞，以议论文的形式，展开质疑和辩驳。</p>
<p>​
研习任务四，可概括为“积累与建构”，旨在通过归纳文言文中三种常见的特殊句式，落实文言文学习中的语言积累与建构要求，引导学生及时总结积累，学会借助古今汉语的贯通性理解文言语句，把握古今汉语的差异和联系。</p>
<p>​
需要说明的是，必修教材也有一些史传作品和史论文章，前者如必修下册第一单元《烛之武退秦师》《鸿门宴》，后者如必修下册第八单元《阿房宫赋》《六国论》，本单元的学习与必修教材有何区别呢？</p>
<p>​
同类文体的学习，自然有共通的地方，比如史传作品的研读，都要关注文本对历史事件的叙述、对历史人物的描绘，发现史家的历史观念等；而史论文章的研读，也要关注文本借助怎样的历史事实，表达了怎样的见解，对社会现实有怎样的针对性等。但本单元的学习与之前相比更为专题化。必修教材同类文章的学习散见在不同单元中，旨在落实思辨性阅读的学习要求，突出其作为思辨性文本和思辨性阅读例子的特质；而本单元是一个完整的历史类散文专题研习单元，要引导学生了解中国古代重视历史书写的传统，把握历史叙事和历史评论的表达特点，考察这两类作品在中国文化史上的贡献。从单元研习任务的设计来看，要求学生研习的内容，涉及史实、人物、史述、史评、史识等方面，内容更广泛，目标也更为集中和深入。除了教材中涉及的两类文，教师若有余力，还可以引导学生拓展阅读古代史学类论文，如刘知几《史通》中的《直本外书》《曲笔》，章学诚《文史通义》中的《史德》，或者现代人撰写的关于古代史学的文章，如翦伯赞《怎样研究中国历史》等，更有助于学习目标的完成，也会使单元的论题更为丰富。</p>
<h3 id="教学指导">教学指导</h3>
<p>​
本单元的四篇课文均为传统篇目，也是经典的文言语篇，有的课文篇幅较长，对于高二学生来说，需要掌握和梳理总结的文言文知识较多，相关文化背景的障碍也比较大，需要学习的“精神内涵、审美追求和文化价值”也较为复杂。因此，教学要特别注意学习的有效性，关注学科核心素养，注意落实语言的建构与运用。建议依托教材的课后“学习提示”，首先注意落实单篇学习的基础性要求和相关语文活动；在此基础上，依托单元学习要求，分层实施，完成贯通性的学习任务。在完成这两级任务的过程中，落实本单元的人文主题要求和课程标准的学习任务群要求。</p>
<p>​
从“中华传统文化经典研习”任务群要求的角度，根据教材单元目标、课后“学习提示”及“单元研习任务”，将各单篇学习要求分别梳理如下：</p>
<p>​
《屈原列传》：（1）领略《史记》所展现的屈原的人物风采（包括屈原的政治远见、高洁志向、爱国情怀以及人格魅力等），体会司马迁寄托在屈原这一形象中的情感，进而了解司马迁通过《史记》表现出来的抗争精神和进步观点。（2）理解作者在叙事中融入大段议论的用意，鉴赏作者将屈原的生平事迹放在楚国日趋衰亡的大背景下来展现的叙事艺术，进而体会司马迁所创造的以记人为中心的纪传体史书特点，了解《史记》的实录精神。</p>
<p>​
《苏武传》：（1）了解苏武出使匈奴、因变被扣、力拒威逼利诱、苦守北海、持汉节不失的事迹，理解个性坚强、内心坚定、忠贞自守的爱国者形象，体会苏武毫无私念、一心报国的胸怀，领略人物风采，感悟民族气节，弘扬民族文化。（2）鉴赏人物的典型语言，鉴赏作品精妙选材、合理裁剪、善用对比、“于序事中寓论断”的叙事艺术。</p>
<p>​
《过秦论》：（1）把握作者观点“仁义不施而攻守之势异也”：反对暴政、提倡仁政。理解写作目的：针对西汉初年的社会实际，劝诫汉朝统治者应该汲取前朝教训，与民休息，安民养民。（2）学习说理方法：铺排陈述，利用六国与秦国的对比、陈涉与六国的对比，分析秦得天下与失天下的原因，进而提出观点。鉴赏说理艺术：以赋体写史论，多用夸张、对比，通篇一气贯注，气势充沛，铺张扬厉。</p>
<p>​
《五代史伶官传序》：（1）把握作者观点：“忧劳可以兴国，逸豫可以亡身”。理解写作目的：为北宋王朝的统治提供借鉴。（2）学习说理方法：对比后唐庄宗前期横扫诸国意气扬扬，很快众叛亲离、死于乱箭之下的史实，指出其过错，进而印证观点。鉴赏说理艺术：纵说天下大事却从一个极细微的角度切入，以散体写史论，文字平易晓畅，简洁生动，感慨遥深。</p>
<p>​
从落实中华优秀传统文化传承发展的角度，学习史传作品《屈原列传》《苏武传》，还要注意培养天下兴亡、匹夫有责的担当意识，精忠报国、振兴中华的爱国情怀，崇德向善、见贤思齐的社会风尚，孝悌忠信、礼义廉耻的荣辱观念；学习史论作品《过秦论》《伶官传序》，还要注意学习其中革故鼎新、与时俱进的思想，惠民利民、安民富民的思想。这些，都属于重要的中华传统美德和传统文化核心思想理念。</p>
<p>​
此外，继续丰富文言文的语言积累，重点学习和总结词类活用现象，在具体语境中分辨词语的意义和用法，把握古今汉语的差异与联系</p>
<p>​ 以下谈谈本单元的教学建议。</p>
<p>​
在文言文教学中，课堂上讲授式教学的比例大一些是正常的，但也要注意通过创设情境，把课内外阅读资源整合起来，设计好自主合作探究式学习活动，让学生更好地发挥学习的自主性，开展积极的语言实践活动，丰富阅读体验，实现真实学习和有效学习，从而提升学生的核心素养</p>
<p>​
要处理好上述关系，首先，要以真实学习和有效学习为抓手，避免烦琐讲解，保证学生丰富的语言实践活动。</p>
<p>​
语言方面，教学中要注意针对学生的理解难点，通过布置预习作业、线上研讨、圈点批注、填写任务单等形式，了解学生弄不太懂的词语和句子，布置学生讨论解决，对于其中共性的语言难点或文化背景难点，教师作有针对性的讲解分析。“学习提示”里不容易落实的地方，如《过秦论》要求全文背诵，可以与课文理解同步进行，借助表格任务单支架，边理解边背诵；也可边诵读边记忆，在体会文辞之妙的同时，逐步落实背诵要求。研究经典文本中不同版本的注解，了解不同之处，让学生说更认同哪一种并谈自己的理由，通过交流讨论，再去查阅更多的工具书或资料，寻找答案。这样的探究性、开放性活动，直接面向有效理解的问题，也有助于让学生学会在具体语境中分辨词语的意义和用法，把握古今汉语的差异与联系。</p>
<p>​
阅读、写作方面，要让学生在真实学习情境中，开展积极的语言实践活动，有自己的思考。不能仅满足于简单的字句翻译和知识讲解，要启发学生体会历史人物的“现场”处境，理解其人生选择，认识其历史地位和对后世的影响。以《苏武传》为例，不能简单贴个“爱国”标签了事，也不能简单地照应初中学过的“富贵不能淫，贫贱不能移，威武不能屈”理念，把苏武当成这句话的又一个例子而已，而是要通过有效的语文活动，让学生的生命在场，独立研读文本产生切己体察和积极思考。史论类作品，要重视落实本单元的研习任务：“你是否认同作者的观点？他们的论证是否有可商榷之处？”有思辨含量的讨论其意义不仅在于思维发展与提升，更大的价值在于能够引发学生的学习热情，产生积极的语言实践活动，从而实现学科核心素养的整体提升。</p>
<p>​
其次，注意“多角度、多层面地组织主题学习单元”，如有条件，可以借助多样的读写主题多作联系性、拓展性阅读，体现本单元文化传承方面的较高要求。可以联系学习过的古代作品，引导学生积累古代作品的阅读经验，可以多勾连具有相同背景、历史因素相关的课文。如学习《屈原列传》，相关复习篇目有《周亚夫军细柳》《鸿门宴》，拓展篇目有《报任安书》《孔子世家》《廉颇蔺相如列传》《信陵君窃符救赵》等。特别是《报任安书》，仔细体味感悟司马迁的情感思想历程，学生可以发现，司马迁笔下的人物或与司马迁本人之间有着众多的相似之处，或是司马迁心目中理想人格的代表，从中可以体现出“言为心声，文如其人”的逻辑联系。再如，学习《过秦论》上篇，通过阅读拓展篇目《过秦论》中、下篇，可以更好地理解作品时代背景实际观点和写作意图；通过回顾复习篇目《阿房宫赋》《六国论》，可以更深入地体会本文的写作特点。但也要注意，教学要紧紧围绕单元目标来开展，注重落实语文素养，不要把语文课上成历史课。</p>
<p>​
第三，关于情境和活动，本单元的单元导语“回到历史现场”，照应了任务群“在特定的社会文化场景中考察传统文化经典作品”的要求。“单元研习任务”一的“历史人物纵横谈”活动，就是基于这样的具体情境的活动。这是语文活动中典型而常见的一类活动，通过贯通式的活动，学生综合本单元所学，经交流、研讨、修改、提高，最终形成发言稿。所学知识、所经历的学习过程、所积累的学习经验，就是一种有效的学习成果，能够迁移到学生的其他学习活动中。教师如自行设计情境和活动（如教学设计示例中的“端午文化建言”），一方面，应该注意从“我”出发，关注学生兴趣，关注学生的个体体验和真实思考，把活动设计得鲜活而有吸引力；另一方面，也要注意任务群要求中的“以客观、科学、礼敬的态度，认识作品对中国文化发展的贡献”，保持对作品的敬畏之心，避免在生活化、趣味化的同时，把语文学习变得浅易化，偏离历史文化场景，偏离学科核心素养要求。</p>
<p>​
第四，关于阅读与写作任务的融合。本单元读写结合的活动较多，包括查资料，做笔记，运用评点方法记录自己的感受和见解，写每课的读书笔记和读后感，为“历史的评说”活动准备研究报告和发言提纲，等等。设计举例中提供多个写作题目，因课而设，不要求全部完成，供教师根据实际情况选择使用，但要注意检查落实。</p>]]></content>
      <categories>
        <category>High School</category>
        <category>Chinese</category>
        <category>Classical Chinese Literature and Poetry</category>
      </categories>
      <tags>
        <tag>School Notes</tag>
        <tag>High School</tag>
        <tag>Chinese</tag>
      </tags>
  </entry>
  <entry>
    <title>高中文言文：选择性必修上 第二单元</title>
    <url>/2022/03/14/chinese/High%20School/Classical%20Chinese%20Literature%20and%20Poetry/%E9%80%89%E6%8B%A9%E6%80%A7%E5%BF%85%E4%BF%AE/%E9%80%89%E6%8B%A9%E6%80%A7%E5%BF%85%E4%BF%AE%E4%B8%8A%E5%86%8C%20%E7%AC%AC%E4%BA%8C%E5%8D%95%E5%85%83/</url>
    <content><![CDATA[<h2 id="单元内容">单元内容</h2>
<h3 id="课文目录">课文目录</h3>
<pre class="template:contents"><code>[[High School, Chinese, Classical Chinese Literature and Poetry, 《论语》十二章], 《论语》十二章]
[[High School, Chinese, Classical Chinese Literature and Poetry, 大学之道-《礼记》], 大学之道-《礼记》]
[[High School, Chinese, Classical Chinese Literature and Poetry, 人皆有不忍人之心-《孟子》], 人皆有不忍人之心-《孟子》]
[[High School, Chinese, Classical Chinese Literature and Poetry, 《老子》四章], 《老子》四章]
[[High School, Chinese, Classical Chinese Literature and Poetry, 五石之瓠-《庄子》], 五石之瓠-《庄子》]
[[High School, Chinese, Classical Chinese Literature and Poetry, 兼爱-《墨子》], 兼爱-《墨子》]</code></pre>
<h3 id="单元目标">单元目标</h3>
<ol type="1">
<li><p>通过学习本单元课文，深入了解先秦诸子百家产生的时代背景，理解先秦诸子原典的思想价值和人文内涵，进一步认识中华文明，自觉传承中华民族的文化传统，落实立德树人的根本目标。</p></li>
<li><p>读懂六篇经典文本的基本内涵，把握儒家、道家和墨家的思想特点，学习儒家或雍容或峻急、道家或简约或恣肆、墨家朴拙繁复的言说方式，结合现实生活，学习古人智慧，培养理性思辨精神。</p></li>
<li><p>在熟读成诵的基础上，利用工具书查阅资料，适当扩大阅读面，准确理解重点词句的含义，掌握重点句法、词法现象，培养文言语感探索文言文学习规律，提高语文读写水平。</p></li>
<li><p>既要认识中华民族先秦原典的文化价值，从中汲取营养，涵泳心灵，养育人格，又要将其转化成为人做事的准则，如培养善良的人格，学习知其不可为而为之的精神等。</p></li>
</ol>
<h2 id="编写意图">编写意图</h2>
<h3 id="编写意图-1">编写意图</h3>
<p>​
任何一种文化，要想认识清楚，都必须回到它的源头。在1949年，德国哲学家雅斯贝尔斯在其所著的《历史的起源与目标》一书中，就明确提出“轴心时代”这个概念。他指出，人类历史上古希腊、古印度和古中国，几乎都在公元前800年到公元前200年之间，诞生了奠定各自文明基础的伟大思想家，他们又奠定了人类文明的基础。古希腊有苏格拉底、柏拉图，古印度有释迦牟尼，古中国有孔子、老子等。雅斯贝尔斯认为：“人类一直靠轴心时代所产生的思考和创造的一切而生存，每一次新的飞跃都回顾这一时期，并被它重新燃起火焰。”他还说：“人类的精神基础同时或独立地在中国、印度、波斯、巴勒斯坦和古希腊开始奠定，而且直到今天，人类仍然附着在这种基础之上。”这就是伟大思想家的价值与影响。这些思想家不仅原创了许多思想、价值和概念，而且他们的思想一直影响着今天的文化和生活。</p>
<p>​
孔子开启了诸子时代，将中国带入一个百家争鸣的文化创新时代。不同学派的思想家们著书立说，奠基了中国传统文化的基本内涵，并对东亚文明乃至世界文化都产生了深远的影响。</p>
<p>​
学生进入到高二时，已经广泛接触过先秦诸子，如初中阶段，七年级上册有《论语十二
章》八年级上册有《〈孟子〉三章》，八年级下册有《〈庄子〉二则》《〈礼记〉二则》。但这些课文的重点、或放在文言文阅读上，或放在对思想家的了解上，课文内容较为浅易，是一个积累的阶段，对先秦诸子的思想和言说方式，并没有提出深入学习的要求。高一必修下册第一单元较集中地编排了三篇先秦诸子文章，但选文主要考虑的是单元主题，先秦诸子地位不突出因此，我们在高二选择性必修里、安排一个单元专门研读先秦诸子，使学生对中国优秀传统文化的根基有一定的了解。</p>
<p>​
诸子作品以思想阐发为主，包含了现在的文史哲各学科。所以，阅读先秦诸子作品，不能仅仅把它们当作文言文来学习，还必须当作哲学经典、史学经典来读，当作文化精品来学习。本单元共安排了三课，第5课选编了儒家三篇论说，第6课选编了道家两篇短文，第7课是从《墨子》中选编的。三课分别体现了儒家、道家和墨家对时代的洞察，对社会人生的思考，在先秦诸子中有一定的代表性。</p>
<p>​
孔子关心社会、关注人生，并对此有深刻的思考。孔子的思想是一种社会伦理哲学，目标是修身养性、达成君子人格，齐家治国平天下。《〈论语〉十二章》集中围绕君子、仁、礼、道、诗等核心概念，讨论了君子人格和修身养性的问题。《大学之道》也就是为人处世之道，就是做人的根本、基本可概括为“三纲”“八目”。“三纲”是“明明德”“亲民”“止于至善”，“八目”是“格物”“致知”“诚意”“正心”“修身”“齐家”“治国”“平天下”。这就是儒家立身行事的总纲领。《人皆有不忍人之心》选自《孟子》，表达了孟子人性本的思想“不忍人之心”，就是不能狠心对待别人，“人皆有不忍人之心”，就是人人都有一颗善良的心，即人性本善。为此，孟子又推导出“四端”，即人人皆有“恻隐之心”“羞恶之心”“辞让之心”“是非之心”，进而论述“四端”对为人处世、治国理政的重要性。以上这些重要概念，对我们系统地理解儒家思想和中国优秀传统文化有着重要的意义。</p>
<p>​
以老子、庄子为代表的道家主张顺应自然，认为人生应该安时处顺，清静无为，通过摆脱社会性而保全生命，获得精神自由，这是一种独特的人生智慧，具有浓郁的浪漫气质。《老子》四章讨论了“有”与“无”、“知人”与“自知”、“胜人”与“自胜”、“成”与“败”四对矛盾统一的概念，语言精简，逻辑严密，思辨性强，表达了老子对社会动荡和安定的辩证思考。庄子的《五石之瓠》同样体现了一种辩证思考，同是巨大的葫芦，在惠子眼里一无用处，而且还占地方，碍手碍脚；可是在庄子眼里，可以用来泛舟江湖，诗意人生。很显然，惠子是实用主义的，而庄子是审美主义的，后者超越了某些世俗观念，达到了一种“诗意地栖居”的境界。</p>
<p>​
墨家是一个与儒家几乎针锋相对的思想流派。儒家讲“仁爱”，讲有等差的爱，墨子讲“兼爱”，主张爱无差别、无等级；儒家主张“君君臣臣父父子子，主张“亲亲”“尊尊”，讲究尊卑秩序，讲究推己及人，而墨子主张天下大同，主张不分彼此、不分厚薄亲疏。在课文里，墨子认为治理天下与治病一个道理，要找准根源，这根源就在于人“不相爱”。如果人人做到“兼相爱”，父亲就会慈爱儿子，儿子就会孝敬父亲，臣子就会尽职尽责，君王就会礼待天下，疾病就会消除，天下必然大治。因此“兼相爱”是为人处世、治理天下的根本。这些观点很有思辨性，有一定的思想光芒。</p>
<p>​
先秦诸子的语言及表现方法对后代有着很大的影响。《论语》里有许多名言警句，像“三人行必有我师”“学而时习之，不亦说乎”“温故而知新，可以为师矣”等，还有200多个成语，如“因材施教”“温故知新”“三思而行”“不耻下问”等，这些名言警句和成语至今都活跃在我们的语言和生活里。所以，不了解先秦诸子，不熟悉一些诸子典故，读古代诗文就会有困难，也影响我们对现当代文学的理解。像陶渊明的《归去来兮辞》有这样两句，“悟已往之不谏，知来者之可追”，其实就来自《论语·微子》中的“往者不可谏，来者犹可追。像李白在《上李邕》里写道，“大鹏一日同风起，扶摇直上九万里”，其实就是化用了庄子的《逍遥游》。这样的例子不胜枚举。这就提醒我们，要想学好古代诗文必须读懂、读透先秦诸子。</p>
<p>​
本单元在内容编排上，综合考虑了中华优秀传统文化和思辨性阅读两个任务群，一方面体现了传统文化、思辨性阅读的重要性，落实高中语文课程标准的教学要求，另一方面也体现了对弘扬中华文明的自觉追求。教师应指导学生认识中华文明、学习传统文化，训练和提升理性思辨素质，引导学生认识自己，规划自己的人生。同时这几篇课文的言说方式各有千秋，个性鲜明，有的轻松对话，雍容大度；有的对比说理，言简意赅；有的用寓言故事阐明道理，想象浪漫；有的引类取譬，趣味横生。这些内容的学习，对培养学生的读写素养和写作能力，无疑会起到积极的促进作用。</p>
<h3 id="教学指导">教学指导</h3>
<p>​ 教学这个单元，有一定的难度。原因有三：</p>
<p>​
第一，篇目和内容都比较陌生。到了选择性必修阶段，学习要求提高了，应该指导学生阅读一些较陌生的篇目，让学习有一点儿挑战性。选编一些生疏的内容，能够丰富和补充学生阅读的“过于熟悉”。阅读“过于熟悉”的内容，固然可以温而知新，但也容易养成惰性思维。</p>
<p>​
第二，思想有些艰深，不易理解。像《〈论语〉十二章》，尽管是对话体，语句比较通俗，但十二个章句之间缺乏有机的联系，这对把握孔子的政治思想和治国理想构成一定阻碍。再比如庄子的《五石之瓠》，看故事似乎也知道大意，但细究起来又不甚了了。为什么惠子认为葫芦太大，在生活中一无用处就不对，而庄子认为用葫芦漂流四海、泛舟江湖就对了呢？庄子到底在借这个故事说明什么？体现了庄子怎样的哲学思考？庄子的观点就一定是对的吗？这些问题，思考起来都颇费周折，不容易透彻理解。</p>
<p>​
第三，思维方式和言说方式不容易把握。像《〈论语〉十二章》，简短对话，微言大义，缺前因后果，缺背景交代，要想理解，需要熟读经典，前后勾连，触类旁通。这样的阅读具有相当难度，没有一定的阅读积累，很难做到。孟子和墨子，都是以类比为导引，引类取譬，而其意又不在譬喻上，言在此而意在彼，没有较高的思维能力，没有良好的思维习惯，要透彻理解也不容易。鉴于此，建议教师教学时着重考虑以下三个教学原则。</p>
<h4 id="一通盘考虑">一、通盘考虑</h4>
<p>​
这个单元，要完成以下几个任务：1.落实传统文化的学习，了解和理解孔孟、老庄和墨子的思想，理解六个文本的基本内涵，理解中华文明的价值和意义；2.落实文言文的学习，做到大致读懂，理解重点语句的含义，掌握一些常见的、经典的文言语法现象；3.在初步理解孔孟、老庄和墨子的基本思想的基础上，联系现实生活，能解释某些生活现象，思考自己的人生，涵养和锻造人格，磨砺自己的心性；4.落实思辨性阅读和表达，完成一篇或几篇思辨性议论文的写作并学会议论文的审题立意，辩证思考，科学分析问题，学会理性对待生活。</p>
<p>​
当然，这里面有些问题和任务，并不是一堂课、一次教学任务，甚至一个阶段的学习就能完成的，可能需要长时间的积累，明确方向，坚持不懈，才能做好。但这些学习任务，要尽可能渗透在本单元的日常学习过程中。所以，建议教师在本单元备课之始，就要通盘考虑，而不是把它们简单分成三课进行教学，更不能当作六篇文言文进行割裂式教学。</p>
<p>​
建议统一设计教学目标（当然也要分开设计课文教学目标），统一安排课时，在“先秦诸子”这个大专题的基础上，开发若干小专题，如孔子孟子、老子、庄子、墨子之思想特点，孔子、孟子、老子、庄子、墨子言说方式之比较，思辨性阅读与老子、孟子墨子的论述策略，等等。要统一设计作业，包括课文理解、语句分析、文言现象梳理、写作训练（大小作文）等。讲读课文时，要注意联系课文后面的学习提示与单元研习任务，联系单元写作训练，做到将涵泳思想、砥砺人格、读懂内涵、分析语句、掌握知识、学习言说和落实读写能力等融为一体。这样做，比较符合这个单元的学习内容，既融会贯通站位高，不割裂，又能各个击破，有的放矢学有所获</p>
<p>​
“通盘考虑”还包括与初中、高一的必修学习一并考虑。初中七、八年级教材都选有先秦诸子的小短文，故事性强，道理通俗易懂，大部分都要求背诵；高一必修两册教材选有诸子散文基本上都要求背诵，还有唐宋古文等。这些文章都是传统篇目，又是必修任务，学生已经学得很熟了，因此备课时要善于从这些篇目的学习中，借鉴文言学习经验，迁移经典学习方法，来帮助本单元的学习。</p>
<h4 id="二恰如其分">二、恰如其分</h4>
<p>​
所谓“恰如其分”就是在确定教学内容、安排教学时间和设计教学过程时，要合情合理，科学规划，做到重点突出，落实基本学习任务，还要照顾到方方面面的学习，不挂一漏万，也不偏废某一方面。大致上，要注意处理好这样几对关系：</p>
<ol type="1">
<li><p>专题学习与单篇学习的关系。毫无疑问，先秦诸子可以理解为一个单元的学习，也可以设计为“传统文化”或“思辨性阅读”任务群学习，还可以按照一个专题来进行教学。但单元也是由具体篇目组建起来的，也需要通过落实单篇教学来完成单元教学任务，所以单篇教学不可偏废。正因为是站在单元教学这个角度来考虑单篇教学，因此，单篇教学不必讲解得那么细致，不必每一篇都要精讲、精析，甚至一字一句抠着过关，这样一是教学时间不允许，二是不符合专题学习的要求，三是不符合高二学生独立学习文言经典的要求。比较妥当的办法是，适当讲解，举例说明，引导自主学习，加强读写训练。</p></li>
<li><p>思想涵泳与言语学习的关系。考虑到六篇短文既有哲学思想高度，又在言说方式、叙事策略和道理阐述等方面可供借鉴，因此建议教学中将思想涵泳和言语学习结合进行。具体做法是，首先把它们当作文言文来学习，做到基本读懂句意、文意，但不纠缠句意、文意，个别重点词句，鼓励学生通过做知识卡片梳理整合；在此基础上追问文章的思想意义和价值，然后再总结言说方式和思维特点，这样就能做到言文兼顾。特别是孟、庄子和墨子三家各自讲故事和阐述道理的方式，同中有异，各呈异彩，很值得学习建议教师可以将其当作一个重点来教学，这对于学生学习记叙、描写和说理，都有启发。</p></li>
<li><p>阅读与写作的关系。先秦诸子这个单元，阅读应该是基础，是重点，也可以说是关键。要想落实好这个重点，做好这个工作，建议用读写结合的方式滚动推进。比如设计阅读任务时可以考虑用圈点、批注或写作小片段、小感悟来辅助完成，这样能使阅读学习比较容易“看得见”，也能加强师生互动。再比如可以直接设计一个写作任务来推进阅读，微写作或是大作文都可以，写一个片段也可以，这是以写促读的方式。在考虑读写结合时，还可以考虑与课文后面的学习提示、单元研习任务和单元写作训练结合进行，让阅读滋养写作，让写作转化为阅读的收获。这样做，既可以提高学生读写的积极性，又可以提高读写质量。</p></li>
<li><p>课文学习与作业训练的关系。课文学习当然是我们教学的重点，但课文后面的学习提示和单元研习任务，以及单元写作训练，应该是一个有机的统一体，设计教学时不可偏废。一个高明的教学者，恰恰有可能从这些学习提示或单元研习任务中，找到教学的突破口来完成自己的教学。比如第5课课后的学习提示中提到对比和比喻说诸子的文章中，都较多地运用了对比和比喻讲道理，这就是一个研读方向。事实上，在孔子、孟子、老子和庄子的文章中，都用到了这两种写作手法，这就适合开发成一个小专题，引导学生阅读和感悟。</p></li>
<li><p>语文学习与思维训练的关系。本单元的六篇短文，思维训练容量都不小，而且各自的思维方式也不尽相同，这就提供了极好的思维训练素材。语文学习不可偏废思维训练，但这一点在我们实际的语文教学中，并没有得到落实和加强。本单元则提供了契机。如《〈论语〉十二章》的思维训练，一方面可以突出对比训练，一方面还应该学习孔子雍容大度的生活态度。孟子善于运用类比，引类取譬，讲故事浅显易懂；而同样是引类取譬，墨子又不一样，他在基本讲清楚了道理之后，又不厌其烦地反复阐述，形成一种朴拙繁复的审美效果。庄子善于联想和想象，在思维方式上又呈现出不一样的美，这种美汪洋恣肆，瑰丽无边，很有文学意味，可以说庄子是先秦诸子中最有审美趣味的哲学家。落实这一点，建议教师结合“思辨性阅读与表达”这个任务群来进行教学设计。水幸美因中费</p></li>
</ol>
<h4 id="三适当拓展">三、适当拓展</h4>
<p>​
有难度的学习内容，有时候孤立地研读其本身，可能会出现难以克服的困难，可是如果此时适当拓展开，再读一读相关的内容，如同一性质的故事，或同一主题的描述，互文对照，困难或许不攻自破。因此建议教师在教学本单元时，可以适当提供一些拓展阅读篇目。当然应选取一些平易的内容，以降低学习难度，帮助学生理解这些深奥的思想家。这种阅读可称之为“互文性拓展阅读”。另外，阅读只在文章内部打转，可能效果不明显，可是如果跳出来，读一读作者的生平，或者读一读相关研究文章，以意逆志，知人论世，可能会豁然开朗。这种阅读可称之为“联系性拓展阅读”。</p>
<p>​
“适当拓展”的意思就是，教学一个单元，尤其是像先秦诸子这样难度较大的兼具思想性、艺术性的古代经典，可以建立一个基本原则，就是不要故步自封，不要局限在单元或篇目里，甚至在词句里打转，而应该适当打开阅读视野，开拓写作空间，做到既突出语文性，加强言语训练，又不囿于教学成见，左右勾连，前后打通，“顾左右而言中”，教学或许就能打开新的局面。</p>]]></content>
      <categories>
        <category>High School</category>
        <category>Chinese</category>
        <category>Classical Chinese Literature and Poetry</category>
      </categories>
      <tags>
        <tag>School Notes</tag>
        <tag>High School</tag>
        <tag>Chinese</tag>
      </tags>
  </entry>
  <entry>
    <title>鸿门宴-司马迁</title>
    <url>/2022/03/13/chinese/High%20School/Classical%20Chinese%20Literature%20and%20Poetry/%E5%BF%85%E4%BF%AE/%E9%B8%BF%E9%97%A8%E5%AE%B4-%E5%8F%B8%E9%A9%AC%E8%BF%81/</url>
    <content><![CDATA[<h2 id="课文解读">课文解读</h2>
<p>​
“鸿门宴”的故事发生于公元前26年（即陈涉起义后的第四年），地点在现在陕西临潼新丰镇附近的“项王营”，当时叫“鸿门”。陈涉起义失败后，项梁（项羽的叔叔）等拥立楚怀王之孙熊心，仍号楚怀王，项梁叔侄、刘邦同为怀王的主力军。公元前207年，项羽在钜鹿（今河北巨鹿）之战中大破秦军主力，并在新安（今属河南）坑杀了秦朝降军二十万。项羽继续进军，行至函谷关发现已有人守卫，又听说刘邦已经率先进入咸阳，大怒，派英布（黥布）等攻破函谷关。项羽于是也进入了函谷关，兵至戏西（今陕西西安临潼区东北戏水西岸）。这就是鸿门宴发生的大背景。</p>
<p>​ 本文内容按情节的发展过程可分为三部分。</p>
<p>​ 第一部分（第1一2段）写鸿门宴的缘起。</p>
<p>​
这部分交代刘项双方驻地、力量对比、事件的起因及双方的幕后活动。第1段主要写曹无伤告密和范增劝战。因刘邦先入咸阳且派兵守关，项羽已经大怒，曹无伤报告刘邦“欲王关中”的意图，进一步激怒了项羽。而范增又为项羽分析了刘邦的状况：一是一反常态，可见志不在小；二是望之有天子之气。各方面因素叠加，项羽对击溃刘邦的渴望溢于言表。一方面，项羽自己苦战秦军主力，自以为功劳最著，却让刘邦钻了空子，先人咸阳，感情上难以接受；另一方面，项羽一直有称霸天下的志向，而刘邦正是一个强有力的竞争对手，击溃刘邦，就等于扫除了一个重要障碍。这样一来，大战似乎在所难免，一触即发。</p>
<p>​ 第2段主要写项伯报信和刘邦方面的应对。</p>
<p>​
项伯因私交向张良通风报信，这就使得事件有了转机。张良不忍独去，故告知刘邦，为刘邦谋划，并拉拢项伯。刘邦对项伯礼敬有加，“奉卮酒为寿，约为婚姻”，还拿出一大套说辞为自己之前的行为辩解。项伯则嘱咐刘邦“旦日不可不蚤自来谢项王”，并回报项羽，替刘邦说话。这就直接引出了“鸿门宴”事件。此时项伯的立场已悄然转至刘邦一方，这就为下文鸿门宴中他保护刘邦埋下了伏笔。</p>
<p>​ 第二部分（第3一4段）写鸿门宴上的斗争。</p>
<p>​
这部分是全文重心。名为宴会，实则是一场变幻莫测的心智和勇气的较量。宴会上的情节大起大落，扣人心弦。有项伯垫话在前，加之刘邦极力卑辞谢罪，项羽怒气全消，甚至还说出了告密人，可见已无意为难刘邦，且设宴招待刘邦一行，危机似乎已然化解。但范增执意杀死刘邦，“数目项王，举所佩玉玦以示之者三”，暗示项羽下决心除掉刘邦，于是气氛陡然紧张。范增见项羽“默然不应”，怕失去时机，于是命项庄以舞剑为由，伺机刺杀刘邦，宴席间顿时充满杀机，紧张气氛达到顶点。在这种极其严峻的形势下，樊哙持剑盾闯帐，怒视项羽，并当面斥责。项羽面对樊哙的闯帐，不仅不怒，反而称其为“壮士”，赐酒，赐生彘肩，被樊哙斥责一番后还赐座。气氛渐趋缓和。这一系列的事件既反映了刘、项双方的矛盾，又反映了刘邦集团能上下一心，共同应对危机。矛盾错综交织，叙事有张有弛，波澜起伏，惊心动魄，扣人心弦。</p>
<p>​ 第三部分（第5一7段）写宴后余事。</p>
<p>​
刘邦在樊哙等人的保护下脱身逃走，张良则以白璧、玉斗入谢。项羽收下礼物，范增则愤恨不已，这与两人在鸿门宴开始时的态度恰好相应。刘邦回营后则立即诛杀了曹无伤。故事以曹无伤告密、项羽决定进攻始，以项羽受璧、曹无伤被诛终，首尾呼应，结构相当严整。</p>
<p>​
本文情节围绕项羽是否发动进攻、刘邦能否安然逃脱两个疑问逐层展开，跌宕起伏，曲折有致；刘邦、项羽、张良、樊哙、范增等人的形象栩栩如生，生动传神，令人过目难忘。而关于“项羽是否应该在鸿门宴上杀死刘邦”这一话题也一直是众说纷纭，迄无定论。作为《史记》中最为精彩的片段之一，它的魅力是无穷无尽的。</p>
<h2 id="参考资料">参考资料</h2>
<h3 id="参考译文">参考译文</h3>
<div class="classcial-chinese-literature-and-poetry-translation"><div class="paragraph"><p class="original-text">沛公军霸上，未得与项羽相见。沛公左司马曹无伤使人言于项羽曰：“沛公欲王关中，使子婴为相，珍宝尽有之。”项羽大怒曰：“旦日飨士卒，为击破沛公军！”当是时，项羽兵四十万，在新丰鸿门；沛公兵十万，在霸上。范增说项羽曰：“沛公居山东时，贪于财货，好美姬。今入关，财物无所取，妇女无所幸，此其志不在小。吾令人望其气，皆为龙虎，成五采，此天子气也。急击勿失！”</p><p class="translation">刘邦驻军霸上，还没有能和项羽相见。刘邦的左司马曹无伤派人对项羽说：“刘邦想要在关中称王，让子婴做丞相，珍宝全都占有了。”项羽大怒，说：“明天犒劳士兵，给我打败刘邦的军队！”这时候，项羽的军队四十万，驻扎在新丰鸿门；刘邦的军队十万，驻扎在霸上。范增劝告项羽说：“沛公在崤山以东的时候，贪恋财物，喜欢美女。现在进了函谷关，不掠取财物，不迷恋女色，这说明他的志向不在小处。我叫人观望他的云气，都是龙虎的形状，呈现五彩的颜色，这是天子的云气啊。赶快攻打，不要失去时机！”</p></div><div class="paragraph"><p class="original-text">楚左尹项伯者，项羽季父也，素善留侯张良。张良是时从沛公，项伯乃夜驰之沛公军，私见张良，具告以事，欲呼张良与俱去，曰：“毋从俱死也。”张良曰：“臣为韩王送沛公，沛公今事有急，亡去不义，不可不语。”良乃入，具告沛公。沛公大惊，曰：“为之奈何？”张良曰：“谁为大王为此计者？”曰：“鲰生说我曰：‘距关，毋内诸侯，秦地可尽王也。’故听之。”良曰：“料大王士卒足以当项王乎？”沛公默然，曰：“固不如也。且为之奈何？”张良曰：“请往谓项伯，言沛公不敢背项王也。”沛公曰：“君安与项伯有故？”张良曰：“秦时与臣游，项伯杀人，臣活之。今事有急，故幸来告良。”沛公曰：“孰与君少长？”良曰：“长于臣。”沛公曰：“君为我呼入，吾得兄事之。”张良出，要项伯。项伯即入见沛公。沛公奉卮酒为寿，约为婚姻，曰：“吾入关，秋毫不敢有所近，籍吏民，封府库，而待将军。所以遣将守关者，备他盗之出入与非常也。日夜望将军至，岂敢反乎！愿伯具言臣之不敢倍德也。”项伯许诺，谓沛公曰：“旦日不可不蚤自来谢项王。”沛公曰：“诺。”于是项伯复夜去，至军中，具以沛公言报项王，因言曰：“沛公不先破关中，公岂敢入乎？今人有大功而击之，不义也。不如因善遇之。”项王许诺。</p><p class="translation">楚国的左尹项伯，是项羽的叔父，一向同留侯张良交好。张良这时正跟随着刘邦，项伯就连夜骑马跑到刘邦的军营，私下会见张良，把事情详细地告诉了他，想叫张良和他一起离开，说：“不要和（刘邦）一起死了。”张良说：“我替韩王扈从沛公，现在沛公遇到危急的事，逃走是不守信义的，不能不告诉他。”于是张良进去，（把情况）详细地告诉了刘邦。刘邦大惊，说：“这件事怎么办？”张良说：“是谁给大王出的这条计策？”刘邦说：“浅陋无知的小人劝我说：‘把守住函谷关，不要放诸侯进来，秦国的土地可以全部占领而（以此）称王。’所以就听了他的话。”张良说：“估计大王的军队足以抵挡项王吗？”刘邦沉默了一会儿，说：“当然不如啊。要怎么办呢？”张良说：“请您亲自去告诉项伯，说您不敢背叛项王。”刘邦说：“你怎么和项伯有交情？”张良说：“秦朝时，他和我交往，他杀了人，我救了他；现在事情危急，幸亏他来告诉我。”刘邦说：“他和你年龄谁大谁小？”张良说：“他比我大。”刘邦说：“你替我请他进来，我要用侍奉兄长的礼节对待他。”张良出去，邀请项伯。项伯就进去见刘邦。刘邦奉上一杯酒，祝项伯健康，和项伯约定结为儿女亲家，说：“我进入关中，财物丝毫不敢据为己有，造册登记官吏、百姓，封闭了贮藏财物、兵甲的处所，等待将军到来。之所以派遣将领把守函谷关，是为了防备其他盗贼进来和意外的变故。我日夜盼望将军到来，怎么敢反叛呢！希望您详细地告诉项王我不敢背叛（项王的）恩德。”项伯答应了，告诉刘邦说：“明天早晨不能不早些亲自来向项王道歉。”刘邦说：“好。”于是项伯又连夜离去，回到军营里，详细地把刘邦的话告诉了项羽。趁机说：“沛公不先攻破关中，您怎么敢进关来呢？现在人家有了大功，却要攻打他，这是不讲信义。不如趁机好好对待他。”项王答应了。</p></div><div class="paragraph"><p class="original-text">沛公旦日从百余骑来见项王，至鸿门，谢曰：“臣与将军戮力而攻秦，将军战河北，臣战河南，然不自意能先入关破秦，得复见将军于此。今者有小人之言，令将军与臣有郤。”项王曰：“此沛公左司马曹无伤言之。不然，籍何以至此？”项王即日因留沛公与饮。项王、项伯东向坐，亚父南向坐，——亚父者，范增也；沛公北向坐；张良西向侍。范增数目项王，举所佩玉玦以示之者三，项王默然不应。范增起，出，召项庄，谓曰：“君王为人不忍。若入前为寿，寿毕，请以剑舞，因击沛公于坐，杀之。不者，若属皆且为所虏。”庄则入为寿。寿毕，曰：“君王与沛公饮，军中无以为乐，请以剑舞。”项王曰：“诺。”项庄拔剑起舞，项伯亦拔剑起舞，常以身翼蔽沛公，庄不得击。</p><p class="translation">刘邦第二天早晨带着一百多人马来见项王，到了鸿门，向项王道歉说：“我和将军合力攻打秦国，将军在黄河以北作战，我在黄河以南作战，但是我自己没有料想到能先进人关中，灭掉秦朝，能够在这里又见到将军。现在有小人的谣言，使将军和我有了隔阂。”项王说：“这是沛公的左司马曹无伤说的。如果不是这样，我怎么会这么生气？”项王当天就留下刘邦，和他饮酒。项王、项伯朝东坐；亚父朝南坐一亚父就是范增；刘邦朝北坐；张良朝西陪侍。范增多次向项王递眼色，多次举起他佩戴的玉玦暗示项王，项王沉默着没有反应。范增起身，出去召来项庄，说：“大王为人心地不狠。你进去上前为他敬酒，敬酒完毕，请求舞剑，趁机把沛公杀死在座位上。否则，你们这些人都将被他俘虏！”项庄就进去敬酒。敬完酒，说：“大王与沛公饮酒，军营里没有什么可以拿来作为娱乐的，请让我舞剑吧。”项王说：“好。”项庄拔剑起舞。项伯也拔剑起舞，时时用身体遮护刘邦，项庄无法刺杀。</p></div><div class="paragraph"><p class="original-text">于是张良至军门见樊哙。樊哙曰：“今日之事何如？”良曰：“甚急！今者项庄拔剑舞，其意常在沛公也。”哙曰：“此迫矣！臣请入，与之同命。”哙即带剑拥盾入军门。交戟之卫士欲止不内，樊哙侧其盾以撞，卫士仆地，哙遂入，披帷西向立，瞋目视项王，头发上指，目眦尽裂。项王按剑而跽曰：“客何为者？”张良曰：“沛公之参乘樊哙者也。”项王曰：“壮士！赐之卮酒。”则与斗卮酒。哙拜谢，起，立而饮之。项王曰：“赐之彘肩。”则与一生彘肩。樊哙覆其盾于地，加彘肩上，拔剑切而啖之。项王曰：“壮士！能复饮乎？”樊哙曰：“臣死且不避，卮酒安足辞！夫秦王有虎狼之心，杀人如不能举，刑人如恐不胜，天下皆叛之。怀王与诸将约曰：‘先破秦入咸阳者王之。’今沛公先破秦入咸阳，毫毛不敢有所近，封闭宫室，还军霸上，以待大王来。故遣将守关者，备他盗出入与非常也。劳苦而功高如此，未有封侯之赏，而听细说，欲诛有功之人，此亡秦之续耳。窃为大王不取也！”项王未有以应，曰：“坐。”樊哙从良坐。坐须臾，沛公起如厕，因招樊哙出。</p><p class="translation">这时张良到军营门口找樊哙。樊哙问：“今天的事情怎么样？”张良说：“很危急！现在项庄拔剑起舞，他的意图总在沛公身上啊。”樊哙说：“这太危急了，请让我进去，跟他同生死。”于是樊哙就拿着剑持着盾牌冲入军门。用戟交叉着守卫军门的兵士想阻止他不放他进去，樊哙侧过盾牌撞去，卫士跌倒在地上。樊哙就进去了，掀开帷幕朝西站着，瞪着眼睛看着项王，头发直竖起来，眼眶都裂开了。项王按着剑，跪直身子问：“来客是干什么的？”张良说：“是沛公的参乘樊哙。”项王说：“壮士！赏他一杯酒。”左右就递给他一大杯酒，樊哙拜谢后，起身，站着把酒喝了。项王又说：“赏他一条猪前腿。”左右就给了他一条生的猪前腿。樊哙把他的盾牌扣在地上，把猪腿放（在盾）上，拔出剑来切着吃。项王说：“壮士！还能喝酒吗？”樊哙说：“我死尚且不怕，一杯酒有什么可推辞的！秦王有虎狼一样的心肠，杀人像是怕不能杀尽，给人用刑像是怕不能用尽，天下人都背叛他。怀王与诸将约定：‘先打败秦军进人咸阳的人在关中为王。’现在沛公先打败秦军进了咸阳，一点儿财物都不敢据为己有，封闭了宫室，军队退回到霸上，等待大王到来。特意派遣将领把守函谷关的原因，是为了防备其他盗贼的进人和意外的变故。这样劳苦功高，没有得到封侯的赏赐，反而听信小人的谗言，想杀有功的人，这只是已亡的秦朝的后继者罢了。私意认为大王不采取这种做法（为好）。”项王没有话回答，说：“坐。”樊哙挨着张良坐下。坐了一会儿，刘邦起身上厕所，趁机把樊哙叫了出来。</p></div><div class="paragraph"><p class="original-text">沛公已出，项王使都尉陈平召沛公。沛公曰：“今者出，未辞也，为之奈何？”樊哙曰：“大行不顾细谨，大礼不辞小让。如今人方为刀俎，我为鱼肉，何辞为？”于是遂去。乃令张良留谢。良问曰：“大王来何操？”曰：“我持白璧一双，欲献项王，玉斗一双，欲与亚父。会其怒，不敢献。公为我献之。”张良曰：“谨诺。”当是时，项王军在鸿门下，沛公军在霸上，相去四十里。沛公则置车骑，脱身独骑，与樊哙、夏侯婴、靳强、纪信等四人持剑盾步走，从郦山下，道芷阳间行。沛公谓张良曰：“从此道至吾军，不过二十里耳。度我至军中，公乃入。”</p><p class="translation">刘邦出去后，项王派都尉陈平去叫刘邦。刘邦说：“现在出来，还没有告辞，怎么办？”樊哙说：“做大事不必注意细枝末节，行大礼不必讲究小的辞让。现在人家正好比是刀和砧板，我们则好比是鱼和肉，何必告辞呢？”于是就决定离开。（刘邦离开前）就让张良留下来道歉。张良问：“大王来时带了什么东西？”刘邦说：“我带了一对玉璧，想献给项王；一双玉斗，想送给亚父。正碰上他们发怒，不敢献。您替我把它们献上吧。”张良说：“遵命。”这时候，项王的军队驻扎在鸿门，刘邦的军队驻扎在霸上，相距四十里。刘邦就留下车辆和随从人马，独自骑马脱身，让樊哙、夏侯婴、靳强、纪信四人拿着剑和盾牌徒步跟随，从郦山脚下，取道芷阳，从小路走。刘邦对张良说：“从这条路到我们军营，不过二十里罢了，估计我回到军营里，您再进去。”</p></div><div class="paragraph"><p class="original-text">沛公已去，间至军中。张良入谢，曰：“沛公不胜杯杓，不能辞。谨使臣良奉白璧一双，再拜献大王足下，玉斗一双，再拜奉大将军足下。”项王曰：“沛公安在？”良曰：“闻大王有意督过之，脱身独去，已至军矣。”项王则受璧，置之坐上。亚父受玉斗，置之地，拔剑撞而破之，曰：“唉！竖子不足与谋。夺项王天下者必沛公也。吾属今为之虏矣！”</p><p class="translation">刘邦离开后，从小路回到军营里。张良进去道歉，说：“沛公不胜酒力，不能当面告辞。让我奉上白璧一双，拜两拜敬献给大王；玉斗一双，拜两拜进献给大将军。”项王说：“沛公在哪里？”张良说：“听说大王有意要责备他，脱身独自离开，已经回到军营了。”项王就接受了玉璧，把它放在座位上。亚父接过玉斗，放在地上，拔出剑来敲碎了它，说：“唉！这小子不值得和他共谋大事！（将来）夺取项王天下的人一定是刘邦。我们都要被他俘虏了！”</p></div><div class="paragraph"><p class="original-text">沛公至军，立诛杀曹无伤。</p><p class="translation">刘邦回到军中，立刻杀掉了曹无伤。</p></div></div>
<h3 id="参考文献">参考文献</h3>
<h4 id="鸿门宴赏论-appreciation_of_hongmenyan">《鸿门宴》赏论 <span class="citation" data-cites="Appreciation_of_Hongmenyan">[@Appreciation_of_Hongmenyan]</span></h4>
<p>​
“鸿门宴”是《史记·项羽本纪》中记述项羽、刘邦之间面对面斗争的一个片段。评赏这段文章，得先了解其时代背景。战国末期，楚怀王被秦昭王诓骗赴秦索地，客死于秦，秦楚之怨极深。秦二世元年，陈涉在大泽乡起兵反秦，被秦国灭亡的六国后裔，纷纷叛秦自立。楚人项梁偕其侄项羽在吴地举兵，听谋士范增之言，从民间觅得牧羊儿—一楚怀王之孙心，立为怀王，以“后楚”相号召。项梁战死，羽继起领楚军与秦战。刘邦也是楚地人，他的义军也以复楚相号召，邦与羽名义上同受楚怀王节制，两人结为兄弟，互相声援。怀王曾与两人约，先人函谷关破秦者为关中之王。关中地处天下上游，是秦国经营多年的基地，物产丰足，人民富强，地势险要；谁旦为关中王，就有了统一天下的坚实基业。项羽的祖父项燕被秦将王翦所杀，叔父项梁又在定陶之战中死于秦将章邯之手，因此他领楚兵渡河击秦救赵，既为了灭秦复楚，也为了给祖父、叔父报仇。正当项羽与秦主力军在河北决战，刘邦却以偏师乘秦之虚，从南面迂回进击，破秦都咸阳，秦王子婴出降，秦朝彻底灭亡。显然，击溃秦军主力的是项羽，坐收渔人之利的是刘邦，刘邦从此获得“王关中”的资格。这样就构成了刘、项之间的尖锐矛盾。鸿门宴的故事正发生在这焦点时刻。</p>
<p>​
“鸿门宴”标志反秦义军中两个首领刘邦、项羽由联合破秦到互争天下的转挨点。在千五百来字中，司马迁生动地记述了两家的明争暗斗。宴会之上，觥筹交错，刀光剑影；出场人物，个个形象鲜明，既保持了历史的真实，又“诙诡几类平话”（吕思勉《秦汉史》），是两千多年来脍炙人口的散文名篇。</p>
<p>​
这段文字之所以脍炙人口，成功的艺术经验非只一端。要而言之，情节跌宕、波澜起伏和形象生动、个性鲜明两个方面是主要特色。</p>
<p>​
试看文章人手，先用百十来字，写了三件事：一写项羽领诸侯军人秦，函谷闭关。这位曾在钜鹿之战中击破秦军主力章邯而成为诸侯反秦军统帅的霸王遭此冷遇，已自怒火填膺。次写刘邦部下曹无伤的反间之言，越发火上加油。三写范增一番议论，项羽更深刻认识了刘邦是自己的隐患，油火添上一股阴风。文章层层作势，紧张的空气仿佛划一根火柴就可以点燃，旦日灭刘，箭在弦上。不料陡然接上项伯夜访故人张良，沛公约为婚姻一节，一场风火顿然化作满天凉雨，情节忽趋平缓。接下去刘邦鸿门谢罪，一席话赚得项羽推心留饮，前嫌顿释，文势再作一跌。又不意酒宴之上，范增“数目”于前，项庄舞剑于后，平地再起波澜。幸而有项伯拔剑翼蔽沛公，暂趋缓解；但范增杀刘之心未死，危机依然四伏。在这紧急关头，樊哙闯帐，使斗争变得更加复杂。项羽之为人，屠阮残灭；钜鹿之战中诸侯见了他“无不膝行而前，莫敢仰视”，现在樊哙居然“瞋目视项王，头发上指，目眦尽裂”，岂不是披其逆鳞，存心挑起刚刚平息的怒火吗？情势至此，又趋紧张，流血五步，事迫眉睫。谁料这位“喑呜叱咤，千人皆废”的项王，竟然被樊哙粗犷忠勇的气质所动，呼为“壮士”，赐之卮酒，益以彘肩，任其慷慨陈词，被他数落得“未有以应”。这段文字，如鹰扬鹘下，直起直落，尽翻腾跌宕之能事。</p>
<p>​
项王赐“樊哙从良坐”，形势似乎愈趋平缓。但沛公、张良、樊哙三人都像坐在火药桶上；风定云凝，酝酿着一场更大的暴风雨。文字至此再作一转：“沛公起如厕”，间道逃归。但问题仍未解决，还剩下张良。他如何向项王交代，项王将如何处理，仍是悬念。于是，又有献璧、受璧、碎斗一节，去后余波，荡漾无际。纵观全文情节，凡五起五落，一千五百多字，几乎全是惊涛骇浪，又都化为涟漪层层，令我们读之魂悸魄动，目眩神摇，时笑时颦，不能自己。</p>
<p>​
但是，任何文学作品，如果一味追求情节惊险离奇，都必坠入魔道。情节必须为展开人物性格服务，让人物性格发展推动情节的起伏波澜；只有进入这种境界，才能使作品具有艺术魅力。《鸿门宴》正是在情节发展中展开人物性格的。在这个片段中，司马迁写了四对人物—雄主项羽、刘邦，谋臣范增、张良，武士项庄、樊哙，内奸项伯、曹无伤（曹虽未出场，影子同在）。这些人物互相映衬，个性各有不同。这里重点分析项羽和樊哙。</p>
<p>​
鸿门宴是项羽人格展开的重要场合，在宴会中，其个性品质得到一次充分展示。项羽的个性是丰富复杂的，主要特点是以勇自恃，以义自许，憨厚暴烈，自信自负。其自信自负既体现为豪爽直率，胸无城府；又发展为近乎愚昧的个人英雄主义。他少时便想学“万人敌”，以为可以力征天下；直到垓下被围，山穷水尽，还以为失败是“天之亡我，非战之罪也”。这种贯串人物始终的鲜明个性，在“鸿门宴”这个片段中，司马迁作了深刻的、多侧面的展示。</p>
<p>​
项羽挟胜利之余威，领诸侯兵进至函谷关，紧闭的关门严重地损伤了他的自尊心，因而他遣将击关。曹无伤说：“沛公欲王关中，使子婴为相，珍宝尽有之。”范增说：“沛公……今入关，财物无所取，妇女无所幸，此其志不在小。”一个说“珍宝尽有之”，一个说“财物无所取”，两人的话显然矛盾，本不难觉察曹无伤送来的是假情报。但项羽听进去的只是“欲王关中”“此其志不在小”十个字。正是这十个字，损伤了他的权力欲望，刺痛了他唯我能霸王关中的自负自尊之心，于是悍然下令“旦日飨士卒，为击破沛公军”（明天一早打牙祭，给我消灭沛公的部队）。在他看来，以他的楚军和诸侯军四十万去对付沛公的十万部队，可以在一个早晨结束战争。这正是他盲目自负、自尊性格的充分展示。</p>
<p>​
项伯在项羽面前为沛公说情，打动项王的是一句话—“今人有大功而击之，不义也”。这里提出了一个普遍的道德标准—义。义和勇一样，都是项羽精神领域中的最高追求。他不是临死还要把自己的头颅赠给追杀他的“故人”吕马童吗？那是为了显示他重义气。鸿门宴上，他不理范增“举所佩玉玦以示之者三”的示意，不肯下令杀刘邦，也因为，他与刘邦奉怀王令破秦，现在刘邦先入，他若杀了刘邦，是大不义。而且，他认为，杀刘邦无此必要。区区沛公，安足为我敌！更何况，人家赤手空拳来我军帐谢罪，毫无抵抗力量，杀之不武，徒损我一世英名。</p>
<p>​
沛公前一天晚上对项伯说的话，和鸿门宴上沛公、樊哙对项羽说的话，三者如出一辙，显然都是张良事先替他们准备好的台词。项羽为什么听不出，反而为这些言语所动？原因就在于这些话迎合了他自信自负的心态。沛公说：“秋毫不敢有所近。”用“不敢”而不用“不曾”，多么恭顺！“籍吏民，封府库，而待将军”，“待”得多么虔诚！“日夜望将军至”，“望”得多么迫切！</p>
<p>​
对樊哙一席话，项羽“未有以应”，理屈乃至词穷。他这个禀性直率重义的人，编不出为自已护短的词儿来。当刘邦向他说：“今者有小人之言，令将军与臣有郤”，他张口就说：“此沛公左司马曹无伤言之。”自作聪明者以为项羽此言最愚蠢，怎能把自己埋伏在敌营的暗线暴露给敌人呢？殊不知，这正是司马迁刻画项羽性格的神来之笔！襟怀磊落，直来直去，这种个性，对于争天下，也许是缺点；对于为人，却是最高贵的品质。司马迁有意将项羽与刘邦对比，在本文结尾处又补了一笔：“沛公至军，立诛杀曹无伤”，褒贬立见，文外无穷。</p>
<p>​
樊哙这个人物也写得极为成功。他在最紧急的关头挺身而出，开口就说“臣请入，与之同命”，誓与刘邦共生死。作者先写他进入项羽军门，“侧其盾以撞，卫士仆地，哙遂入”表现出他的一腔义愤和英武。进入军门，“披帷西向立，瞋目视项王，头发上指，目眦尽裂”，仿佛是一尊愤怒的天神，一团熊熊燃烧着的烈火，照亮了这阴谋四伏的军帐。司马迁在这里更以其绵针密线，写出了宴会上一场暗地里进行的斗争，大大丰富了樊哙的英雄形象。项羽以英雄爱英雄之心，吩咐左右“赐之卮酒”，捧上来的却是“斗卮酒”；吩咐左右“赐之彘肩”，捧上来的却是“生彘肩”。一字之增，风云暗起。“斗”是大杯。这一大杯烈酒，看你如何对付？“生彘肩”即生猪腿。这一条生猪腿，看你如何下咽？不饮不吃，岂非不礼貌，厚负项王，而且露了胆怯？如果喝下去，吃下去，说不定当场醉倒，呕吐狼藉，那场面多么狼狈！这分明是项王左右在范增导演下存心作弄樊哙的恶作剧。不料樊哙一一挫败了对手的阴谋。那大杯烈酒，他“拜谢，起，立而饮之”。那条生猪腿，他“覆其盾于地，加彘肩上，拔剑切而啖之”。“拜、起、立、饮”四个动词，斩截有声，显示出他对项王多么有礼，对捉弄他的群小多么无畏！那“覆、加、拔、切、啖”五字，写得意气飞动，形象鲜明，仿佛他切的、吃的不是生猪腿，而是敌人的肉！他咬碎钢牙，把生肉和仇恨一起吞下。这一场暗斗妙在当着项王的面，捉弄项王赏识的客人，项王却被蒙在鼓里。司马迁仅仅增加了“斗、生”二字，细处传神，把紧张的暗斗、项羽的直率、范增的阴险、樊哙的无畏，全部表现出来了。两字增华，一篇生色，写活了一个场面，展示了几个人的性格，司马迁手中真有一支生花妙笔！</p>
<p>​
读这段文章的人，往往责备项羽不杀刘邦是极大的失策，是“妇人女子之仁”。这说法未免厚诬英雄。这里要辨明两个问题：项羽为什么不杀刘邦？他应不应该杀刘邦？</p>
<p>​
细味“鸿门宴”这段文字，事前项羽、范增一定密商过在酒宴上加害刘邦这个问题。不然如此大事，范增怎能擅作主张召项庄舞剑，“因击沛公于坐，杀之”？要是事先与项羽没有约定，范增“举所佩玉玦以示之者三”，示意项羽下决心（玦、决同音），又怎能期望项羽理解他的暗示？范增对项庄说过“君王为人不忍”的话，“不忍”，分明说事先虽约定杀刘，临事又不忍下手。凡此种种，都说明项羽原有杀刘之心，只是临事又犹豫不决，改变了初衷。究竟是什么原因使他改变初衷的呢？这得从当时的形势和项羽的个性两方面寻找答案。</p>
<p>​
刘邦先入咸阳破秦，项羽旋至，他带来四十万大军，不可能都是楚军，一定有六国诸侯的军将。诸侯军将随行，必然怀有两种心情：一方面，共庆灭秦大业的最后胜利；二方面，要看看刘邦、项羽这两位盟主如何分配胜利的果实，以确定自己今后的去就打算。项羽鸿门设宴，他们不可能预知有什么密谋，但刘、项已因谁主关中而产生矛盾，他们绝不可能毫无所知；项羽遣当阳君等击关的军事行动，他们目睹耳闻，更是清清楚楚。刘、项之中必有一人主天下。诸侯军将对于刘邦，并无恶感；对于项羽，他们是十分畏惧的。在钜鹿之战胜利后，他们谒见项羽，“无不膝行而前，莫敢仰视”，便是明证。现在刘、项既有矛盾，这件事情的结局，诸侯必然十分关心。因为，将来二人谁主天下，直接关系到他们的利益。偏偏刘邦一到鸿门，对项羽那样谦虚有礼，如果项羽贸然诛杀这位既有破秦大功，又谦虚到“籍吏民，封府库，而待将军”的刘邦，刘邦十万大军殊死击楚不用说，六国诸侯也将会责备项羽不顾信义，反复无常，眼看刘邦的今天，不能不想到自己的明天。在这种形势下，势必纷纷叛项羽，使他陷入最大的孤立，对他的霸王之业有极大的负面影响，对此他不能不充分考虑，因考虑而游移，因游移而改变初衷。特别是樊哙几句话，对项羽的决策有重大影响。他说：“……欲诛有功之人，此亡秦之续耳。”“亡秦之续”即继续走亡秦的道路，其结果是“天下皆叛之”。项羽必自忖：他能建立一个超过强秦的霸业吗？强秦尚有今日之败亡，自己又何能幸免？想到这一点，他越发不能轻杀刘邦了。</p>
<p>​
当然，项羽不杀刘邦，也还有性格上、感情上的因素。项羽是个重义气，富感情，吃硬不欺软，虽粗犷暴烈而不失憨厚的人。他和刘邦在楚军中共同作战多年，刘邦先入秦，也是百战余生，现在又如此恭顺老实，杀了他，不但大义上不当如此，感情上也不忍如此。</p>
<p>​
项羽该不该在鸿门宴上诛杀刘邦，后人有许多评说。丘濬《拟古乐府》说：</p>
<blockquote>
<p>​ 霸王百行扫地空，不杀一端差可取。</p>
<p>​ 天命由来归有德，不在沛公生与死。他认为项羽不杀刘邦是可取的。</p>
</blockquote>
<p>​ 清汪绍焻说：</p>
<blockquote>
<p>​ 乌江耻学鸿门遁，亭长无劳劝渡河。（《项王》）</p>
</blockquote>
<p>​
诗意说：后来项羽兵败，在乌江宁死不肯渡河，是知耻近乎勇；反之，刘邦在鸿门宴上逃席保命，便是不知羞耻了。杜牧却说：</p>
<blockquote>
<p>​
胜败兵家事不期（不期，不可逆料），包羞忍耻是男儿。（《题乌江亭》）</p>
</blockquote>
<p>​
他对项羽宁死不渡江深表遗憾，认为项羽应该“包羞忍耻”以期卷土重来。其实，事势不同，二者原不可比较。至于那位“好奇计”的范增，在项羽放走刘邦后大骂“竖子不足与谋”（这小子不值得与之共谋大事），其实他自己谋大事往往出馊主意。王安石《范增二首》之二说：</p>
<blockquote>
<p>​ 鄛人（范为鄛人）七十谩多奇，为汉驱民了不知。</p>
<p>​ 谁合军中称亚父？直须推让外黄儿！</p>
</blockquote>
<p>​
指责范增身为项羽的谋士，被羽尊之为“亚父”，对项羽“为汉驱民”（把民心驱赶到刘邦那边去）的许多举措，不加劝阻，他的识见还不如外黄地方那个十三岁的小孩。项羽攻外黄，先遭顽强抵抗，后来外黄投降，项羽准备把城内十五岁以上的男子全部坑杀（活埋）。有个十三岁的小孩向羽进言：如果您坑杀已降，百姓必不会归心，梁地十余城必然死战不肯投降。项羽接受了他的意见，果然获得不战而下多城的胜利。范增自以为“多奇计”，亲见项羽所过坑杀残灭而不加谏阻，以致人心向刘不向项，亚父之名岂不应该让给十三岁的外黄小儿吗？王安石是政治家，他认为得天下必先得民心，项羽之败在于失民心，作为谋臣的范增对此有不可推卸的责任。如果让王安石来评判项羽在鸿门宴上应不应用范增之谋诛杀刘邦，他肯定会投一张反对票。</p>
<p>（选自《知了斋诗文赏论辑存》，中国文联出版社2003年版）</p>
<hr>
<h4 id="鸿门宴上的座次张必锟">鸿门宴上的座次（张必锟）</h4>
<p>​
《史记·项羽本纪》记刘邦往见项羽于鸿门，有许多生动的史实细节十分引人入胜，但也有一处常为读者所忽视，这就是宴会上的座次安排。原文如下：</p>
<blockquote>
<p>​
项王、项伯东向坐；亚父南向坐，—亚父者，范增也；沛公北向坐；张良西向待。</p>
</blockquote>
<p>​
为什么作者要不厌其详地一一写出与宴人的坐向？在讨论这个问题之前，我们不妨先看看刘向《新序》里的一段故事：</p>
<blockquote>
<p>​
秦欲伐楚，因楚有卞和之璧和隋侯之珠这两件宝物，便以“观宝”为名派使者去楚国探听虚实。楚国的昭奚恤识破了秦的真正意图，在都城西门内筑了六个坛：北面四个，东、西各一。秦使者一到，就请他坐在西边，又让令尹子西、太宗子敖、叶公子高和司马子反四人并排坐在北面，他本人则坐在东边。坐定后他对秦使说：“贵客想看楚的宝器，楚的宝器就是贤臣。”接着就一一介绍子西等四人和他本人的才干。秦使无言以对，回国后向秦王作了汇报，秦王不得不放弃进攻楚国的计划。</p>
</blockquote>
<p>​
从这件事可以看出昭奚恤对敌斗争的技巧很高明，办事又很得体。按当时礼节，宴会上的座次以西方为上座，其次北，其次南，东为末座。秦使尽管是不怀好意而来，但名义上是“观宝”，昭奚恤仍把他当作贵宾对待，请他坐了上座。昭奚恤本人因为是宴会的主人，所以自居末座。至于子西等四位贤臣，则全被安排在仅次于贵宾的尊贵座位上，用以显示他们在楚国政局中的重要作用。这样安排座次既合乎礼数，又表明了楚的大臣们同心同德、勠力王室的意愿，所以后来秦不敢犯。</p>
<p>​
再回到鸿门宴的座次安排上来。拿上面说的例子来对照，就可以看出它明显地有悖于礼。刘邦和项羽俱受命于楚怀王攻秦，刘邦封沛公，项羽封鲁公，两人在政治地位上是完全平等的；项羽有击破秦军主力的大功，刘邦首先破关入咸阳，降秦王子婴，功亦不小。在这种情况下，刘邦来鸿门做客，理当坐在西边（即“东向坐”）；范增亦受命于楚怀王为末将，年又最长，可以留在原位；张良其时辅佐刘邦，但就其名分来说为韩王申徒，也应作为客人对待，以坐在南边（即“北向坐”）为宜；至于项羽、项伯作为宴会的主人，理当效法昭奚恤，居于末座。然而实际情况却是颠倒错乱纷出，真可以说是“宴无好宴”了。</p>
<p>​
史家写人物是不用“闲笔”的。宴会上的座次看起来似属小事，然而一旦出现颠倒错乱的情况，那就是大问题了。司马迁抓住项羽以主人身份而自居上座这一点，从侧面表现了他自矜功伐的性格—这种性格不仅对他眼前的事业起着很坏的影响，而且最终导致了他的失败。这是英雄的悲剧。附带说说，西方宾位、东为主位还表现在入席方式上。《史记·魏公子列传》记信陵君破秦存赵后，赵王设宴欢迎他，拟献五城，信陵君却自己“降等”入席，不走西阶而坚持自东阶上，以示无功于赵，使赵王直到宴会末了“口不忍献五城”。诸如此类的地方，也可以算作史文中的“微言大义”吧！</p>
<p>（选自《中学生阅读》）</p>]]></content>
      <categories>
        <category>High School</category>
        <category>Chinese</category>
        <category>Classical Chinese Literature and Poetry</category>
      </categories>
      <tags>
        <tag>School Notes</tag>
        <tag>High School</tag>
        <tag>Chinese</tag>
      </tags>
  </entry>
  <entry>
    <title>庖丁解牛-《庄子》</title>
    <url>/2022/03/13/chinese/High%20School/Classical%20Chinese%20Literature%20and%20Poetry/%E5%BF%85%E4%BF%AE/%E5%BA%96%E4%B8%81%E8%A7%A3%E7%89%9B-%E3%80%8A%E5%BA%84%E5%AD%90%E3%80%8B/</url>
    <content><![CDATA[<h2 id="课文解读">课文解读</h2>
<p>​
本文节选自《庄子·养生主》，所谓“养生主”，意思是保养生命、保存天性的根本原则。在该篇的开头，有一段话可视为全文的总纲：“吾生也有涯，而知也无涯。以有涯随无涯，殆已！已而为知者，殆而已矣！为善无近名，为恶无近刑，缘督以为经，可以保身，可以全生，可以养亲，可以尽年。”接下来就用几则寓言加以阐释，《庖丁解牛》就是其中的第一则。</p>
<p>​
寓言的开头，先写庖丁为文惠君解牛的熟练动作和美妙音响：手按，肩靠，脚踩，膝抵，动作何其自如；皮肉筋骨，轻快分离，节奏何其美妙。整个解牛的过程如同一场充满美感的乐舞表演。“解牛”在庖丁那里，可以说不仅仅是技术，更是一项艺术。</p>
<p>​
接着写文惠君的赞叹（同时也是询问），从侧面烘托庖丁技艺的精湛，同时也引出庖丁对“所以然”的解释。庖丁首先说明自己追求的是“道”，已经超越了技术的层面。接着依次讲了自己达于“道”境的三个阶段：第一阶段是“所见无非牛者”，即仅能看见牛的外部形态，与一般人无二；第二阶段是“未尝见全牛”，即认识到牛的内部结构并能将其视为可以拆解的东西；第三阶段则是“以神遇而不以目视，官知止而神欲行”，“依乎天理”，“因其固然”，下刀、运刀都可以避实就虚，得心应手。达于“道”境的外在表现就是一把用了十九年、解了数千头牛的刀，“刀刃若新发于硎”，特别是与良庖、族庖的用刀情况一比，高下立判；其本质原因则是“以无厚入有间，恢恢乎其于游刃必有余地矣”。尽管已经达于“道”境，但每次遇到筋骨错杂之处，依然会谨慎从事，心存戒惧，动作亦为之轻微迟缓；成功解牛之后，在满足的同时也还是要小心地把刀擦拭干净，妥善保藏。</p>
<p>​
末段以文惠君的话点题。“庖丁解牛”和“养生”到底是什么关系呢？庄子认为，人世间充满错综复杂的矛盾，应该像庖丁解牛一样，“依乎天理”，“因其固然”，“以无厚入有间”，像躲避牛身上可能使刀口钝折之处一样，躲避那些可能伤害白己的矛盾，顺着“天然”的缝隙，游刃有余地处世，这样才能达到“保身”“全生”“养亲”“尽年”的目的。这是与孔孟的“知其不可而为之”完全不同的一种人生哲学。它固然有回避矛盾的一面，但也提醒我们不要强行、妄为，仍不失为一种有益的启示，不可一味以“消极哲学”看待。</p>
<p>​
和其他许多寓言一样，“庖丁解牛”给我们的启示已经超出了寓言讲述者最初的命意范畴：一切事物都有其客观规律，我们应该在实践中不断积累经验，善于总结，按照规律办事；把握规律之后，面对具体问题，仍然要敬慎戒惧，才能把事情做好。</p>
<p>​
以上三篇均为先秦诸子著作中的经典段落，其中既有儒家的积极进取、舍我其谁，也有道家的循乎天性、养生全身，两家观点虽截然不同，但并无优劣高下之分，甚至可以说，无论孔子及其弟子、孟子还是庄子，最终的目标都是落实到追求人的幸福，只是实现的路径有所不同罢了。可以结合时代背景，并拓展阅读其他相关篇目，思考他们的观念在当时具有怎样的合理性和局限性，在今天又能给我们怎样的启示。</p>
<h2 id="参考资料">参考资料</h2>
<h3 id="参考译文">参考译文</h3>
<div class="classcial-chinese-literature-and-poetry-translation"><div class="paragraph"><p class="original-text">庖丁为文惠君解牛，手之所触，肩之所倚，足之所履，膝之所踦，砉然向然，</p><p class="translation">庖丁给梁惠王宰牛。手接触的地方，肩膀倚靠的地方，脚踩的地方，膝盖抵住的地方，砉砉作响，</p><p class="original-text">奏刀（马砉)然，莫不中音。合于《桑林》之舞，乃中《经首》之会。</p><p class="translation">进刀时发出“”的声音，没有不合乎音律的。（既）合乎《桑林》舞乐的节拍，又合乎《经首》乐曲的节奏。</p></div><div class="paragraph"><p class="original-text">文惠君曰：“嘻，善哉！技盖至此乎？”</p><p class="translation">梁惠王说：“嘻，好啊！（你解牛的）技术怎么竟会高超到这种程度啊？”</p></div><div class="paragraph"><p class="original-text">庖丁释刀对曰：“臣之所好者，道也，进乎技矣。始臣之解牛之时，所见无非牛者。三年之后，未尝见全牛也。方今之时，臣以神遇而不以目视，官知止而神欲行。</p><p class="translation">庖丁放下刀回答说：“我追求的是天道，超过技术了。起初我宰牛的时候，眼里看到没有不是（完整的）牛的；三年以后，未曾看到完整的牛了。现在，我只用精神去和牛接触，而不用眼睛去看，视觉停止了，而精神在活动。</p><p class="original-text">依乎天理，批大郤，导大窾，因其固然，技经肯綮之未尝，而况大軱乎！</p><p class="translation">依照牛体的自然结构，击入大的缝隙，顺着（骨节之间的）空处进刀，依照牛体本来的结构，脉络相连和筋骨相结合的地方，不曾拿刀去尝试，更何况大骨呢！</p><p class="original-text">良庖岁更刀，割也；族庖月更刀，折也。</p><p class="translation">技术好的厨师每年更换一把刀，是因为用刀割断筋肉；技术一般的厨师每月就得更换一把刀，是因为用刀砍断骨头。</p><p class="original-text">今臣之刀十九年矣，所解数千牛矣，而刀刃若新发于硎。</p><p class="translation">如今我的刀用了十九年，所宰的牛有几千头了，但刀刃就像刚从磨刀石上磨出来。</p><p class="original-text">彼节者有间，而刀刃者无厚；</p><p class="translation">那牛的骨节有空隙，而刀刃很薄；</p><p class="original-text">以无厚入有间，恢恢乎其于游刃必有余地矣，是以十九年而刀刃若新发于硎。</p><p class="translation">用很薄的刀刃插入有空隙的骨节，十分宽绰，那么刀刃的运转必然是有余地的啊！因此十九年了刀刃还像刚从磨刀石上磨出来。</p><p class="original-text">虽然，每至于族，吾见其难为，怵然为戒，视为止，行为迟。动刀甚微，謋然已解，如土委地。</p><p class="translation">虽然是这样，每当碰到筋骨交错聚结的地方，我看到那里很难下刀，就戒惧地提高警惕，眼睛因为筋骨交错聚结之处而凝视不动，动作也因此缓慢下来，动起刀来非常轻，傑的一声，牛的骨和肉一下子就解开了，就像泥土堆积在地上一样。</p><p class="original-text">提刀而立，为之四顾，为之踌躇满志，善刀而藏之。”</p><p class="translation">我提着刀站立起来，为此四处张望，为此悠然自得，心满意足，然后把刀揩拭干净，收藏起来。”</p></div><div class="paragraph"><p class="original-text">文惠君曰：“善哉！吾闻庖丁之言，得养生焉。”</p><p class="translation">梁惠王说：“好啊！我听了庖丁的话，懂得了养生的道理了。”</p></div></div>
<h3 id="参考文献">参考文献</h3>
<h4 id="从宰牛之举重若轻到养生之顺道无为读庖丁解牛-from_the_weight_of_slaughtering_cattle_to_the_smooth_path_of_nourishing_health_reading_paodingjieniu">从宰牛之举重若轻到养生之顺道无为——读《庖丁解牛》
<span class="citation" data-cites="From_the_weight_of_slaughtering_cattle_to_the_smooth_path_of_nourishing_health_Reading_Paodingjieniu">[@From_the_weight_of_slaughtering_cattle_to_the_smooth_path_of_nourishing_health_Reading_Paodingjieniu]</span></h4>
<h5 id="section">1</h5>
<p>​
在春秋时代，《老子》《孙子》那样全靠抽象概念的系统推演，连例子也不举的著作，是带着奇迹的性质的。即使在古希腊，晚于孔子一百年的柏拉图也只有对话录，其师苏格拉底的思想，只存在于他的对话录中。在古希腊以抽象逻辑归纳和演绎为文，要积累一个世纪，到亚里士多德才有长篇巨著。在中国春秋时代，一般人大都还没有作文章的意图，故流传至今的经典，包括《诗经》，连标题都没有。最为典型的是《论语》，就是师生现场自由对话，当时并不在意，多年之后，后学者觉得非同小可，乃作追记。故此时的文章皆为结论，很少有推理的过程，所讲道理往往借助感性事例。事例之功能为类比，以感性具体说明抽象，但其局限在单难成论证。与亚里士多德差不多同时期，墨子、商鞅的系统论述文章开始流行，稍后的苟子、韩非子的文章在抽象演绎上有了长足进展，推理成为主要手段，长篇大论甚至系统的著作多了起来。</p>
<p>​
孟子游说国君，与国君辩论（对话），着重于推理的一贯性，自诩为浩然之气。晚年和其弟子万章之徒编辑了《孟子》，其对话逻辑相对严密。现场对话，说服人君，光讲抽象逻辑效果不彰，故孟子多讲故事，以增感性，如摄苗助长、齐人乞播之类。此后其他诸子著作乃至西汉的论文、著作，主要靠逻辑推理，仍然常用具体故事说明抽象道理。《韩非子》有守株待兔，《战国策》有鹤蚌相争、三人成虎,《吕氏春秋》有刻舟求剑,《淮南子》有塞翁失马,《庄子》有邯郸
学步、朝三暮四。故事本为具体论点的附庸，但是日后成为成语，便具有了相对独立性，故事加结论就有了寓言的性质。</p>
<p>​
战国时期的《庄子·养生主》中之《庖丁解牛》，与一般寓言不同，不像诸子那样，一味在形而下的现实中说明道理，而是在形而上的境界中作形象的展示。</p>
<p>​
《养生主》本来是讲养生之道的，这种“道”不是一般的避免疾疫、保全躯体之道，而是生命与外部世界的关系之“道”（本文所论述的“道”，仅仅限于本篇之寓意，并不全面涉及庄子思想体系中的“道”。那个“道”是形而上的，超越时间空间的，绝对的，又是超验的）：对于外部世界不能有太强的主观性（有为），一味将人为的手段强加于对象，就不可能得心应手。生命之正道乃是“因其固然”
“依乎天理”，进人无心作为的境界，才能“游刃有余”，获得绝对的自由。</p>
<p>​
这个“道”与墨子、孟子、苟子、韩非子等所讲的现实性很强的“道”（道德、为政之道）相比，是有点玄妙的，抽象度很高，“无为无形”“可得而不可见”，带着某种程度的“超验性”。</p>
<p>​
以无为达到无所不为的“道”，这个形而上的命题是从老子那里继承来的，老子并没有在逻辑上作充足理由的论证。庄子把这个道理用到具体的人生哲学上来，作为养生之道，说的是不费心力比费尽心力更有利，过分着意尽力可能是枉费心力。庄子不是墨子，他一般不作逻辑论证（除了偶尔与惠施辩论），他的天才乃是运用超现实的寓言作形象的感性极强的展示。</p>
<p>​ 庖丁解牛的故事，并非始自庄子，大概民间早有传说。《淮南鸿烈》中有：
“非巧冶不能以治金，屠牛吐（按：人名，齐国之著名屠户，一作“坦”）一朝解九牛，而刀以剃毛。庖丁用刀十九年，而刀如新剖酬，何则？游乎众虚之间。”《吕氏春秋》中有：“宋之庖丁好解牛。所见无非死牛者。三年而不见生牛，用刀十九年，刃若新磨研。”《管子》中有：“屠牛坦，朝解九牛而刀可以莫铁，则刃游间也。”诸子用之作为长篇大论中许多例证中的一个，阐明自己的道理。《淮南鸿烈》用来说明“非巧冶不能以治金”，《吕氏春秋》用来说明“顺其理，诚乎牛也”，管子用来说明用兵之道。虽然各有千秋，但是情节和语言都比较简陋。而庄子用来阐释其养生之道，在想象力和语言上都大大地艺术化了。</p>
<p>​
庄子的创造给名为丁的厨师（庖）设置了难题：以一人之力，解剖一牛，这本来是很难做到的，因为牛是活的，是要反抗的，就是杀牛、放血、剔骨、取肉、剥皮，也往往非一人所能胜任，何况是要将牛的皮、骨、肉、腱、肌理作系统的、干净利落的解剖。</p>
<p>​
文章的第一层次就在艰巨的劳作和神奇的效果之间展开：“手之所触，肩之所倚，足之所履，膝之所踦···…”任务之艰在于：用手控，用肩托，用脚踩，用膝盖撑，四肢躯体各个部位协同，使尽全力。庖丁却如探囊取物：“砉然向然，奏刀砉然，莫不中音。合于《桑林》之舞，乃中《经首》之会。”与任务之艰巨相反，效果举重若轻，轻松愉快：第一，解其骨肉、皮筋，干脆利落，毫不拖泥带水；第二，除一把刀外，别无他物；第三，游刃有余，毫无殚神劳形之态。这显然很精彩，完成得很圆满、很艺术：刀子进入牛身，对于人和牛来说，是生死的搏斗，本该是十分凶险的，但在庄子笔下，有音乐的节奏，有舞蹈的形态，有经典乐曲的神韵。牛在骨肉分离的时候，没有喊叫，连血都没有流出来，一点血腥气都没有，一点痛苦都没有。</p>
<p>​
庄子寓言的神秘就体现在这里了，人兽搏斗，变成了双方心照不宣的合作表演，这是玄虚的、魔幻的，以墨子、韩非子的标准来看，完全是不可思议的。</p>
<p>​
这就怪不得文惠君要提出问题：“技盖至此乎？”文惠君提出的问题是“技”—在技术上怎么可能达到这样的效果呢？庄子用庖丁的话回答：“庖丁释刀对曰：＇臣之所好者道也，进乎技矣。＇”文惠君所问是个伪问题，这不是形而下的技术问题，而是属于形而上的“道”的范畴。</p>
<p>​
“道”，蕴含着庄子的核心思想。“道”，是超越“技”的。那么“道”和“技”是一种什么关系呢？“臣以神遇而不以目视”，“技”是可以目视的，是感官所感的，而“道”则不能目视，只能神遇。目视，是感官的，现实的；神遇，是超越五官感知的。怎么超越呢？主要是在功能上：“官知止而神欲行。”在四肢躯体所掌握的“技”不能不停止的地方，而“神”却径自运行。这就是说，不可感知的“神”，其能量大大超越了感官。也许按今天的理解，可能是某种潜意识在驱动，当然这种观念是庄子没有想到的，但是这不妨碍他感觉到有一种潜在的能量（“神”），大大超过了意识层次的“技”，迫使意识层次的“技”服从于“神”。这种“神”的力量从何而来呢？“依乎天理”：“天理”的“天”就是自然，“理”就是对象的奥秘。这种奥秘在意识层次不可感知，而凭着潜意识是可以悟之于心的。这就是“神遇”。</p>
<p>​
不可见的，比可见的更强大、更精妙。正因为这样，庖丁的刀才能“批大郤，导大窾”，在筋与骨、骨与骼细微的空隙中运行。这两处（筋骨相连处，骨骼间的空隙）不可目击，却可“神遇”。为什么呢？“因其固然”。因为“神”领悟了这种客观的“天理”，所以“技经肯綮之未尝”，连那些盘根错节的经络、复杂的筋肉聚结点都不曾触及。这就是目不击而神遇的效果，也就是庄子理想达到的自由境界。</p>
<p>​
寓言的结构是故事加结论，故事讲完了，最后的结论由文惠君讲了出来：“善哉，吾闻庖丁之言，得养生焉。”解牛的特点是：第一，目不击，用今天的话来说，就好像是闭着眼睛；第二，神视，用今天的话来说，就是心里有数。为什么会心里有数呢？因为心能“因其固然”“依乎天理”。从目不击来说，好像是无所作为，亦即无为，但是，“依乎天理”，“因其固然”，心（“神”）就有所为了，就能驾驭刀的动作了。无为转化为有为。</p>
<p>​
庄子告诉我们，这种无为的境界并非原生的、天然的，而是经历了三年的提升（实践）的过程。</p>
<p>​
庖丁的第一阶段是，“始臣之解牛之时，所见无非牛者”。这是目击的特点：表面上一览无遗，对事物获得了全面的信息，可这种目击有表面性和遮蔽性的缺陷。从外部信息来看，似乎看到了全部，但并不是内外一体的全牛。</p>
<p>​
庖丁的第二阶段是，三年之后“未尝见全牛也”。目不能击了，外部的全牛消失了，遮蔽的也消失了。内在的“神”就能“遇”（洞察）到对象的“天理”，亦即结构的稳定性（固然）。目击之物似全，似有利于有为（有利于以刀解牛），却遮蔽了内在的神明，使得心灵的神不能与天理合一。而看不见全牛，似不利于有为，却不能遮蔽内在的神明。目不能击，神却把握了全牛的内在天理（机理），目（外部感官）之无为，有助于内在的神“依乎天理”，达到有为。这就是庄子从无为到有为的境界。有学者论断，老子讲无为无不为，而庄子则退步为无为。由此文来看似乎不完全符合。</p>
<p>​
《庄子·天道》中说：“无为也，则用天下而有余；有为也，则为天下而不足。”郭象在注《庄子·在宥》时说：“无为者，非拱默之谓也，直各任其自为，则性命安矣。”道家的无为，并不是一些西方翻译家所译的“没有行动”，而是“避免反自然的行为，即避免拂逆事物之天性”。</p>
<p>​
光看这则寓言，一般读者很难感到这与题目中的“养生”有什么关系，把这则寓言前后文联系起来就比较容易理解了。前面的是：“吾生也有涯，而知也无涯。以有涯随无涯，殆已。”意为追求知识也要适可而止，以有限求无限是艰险的。知道了这样的限制，就可以“缘督以为经，可以保身，可以全生，可以养亲，可以尽年”。所谓督脉即身背之中脉，具有总督诸阳经之作用；缘督就是顺从自然之中道的含意。无涯是知识的无限性，有涯是生命的有限性，人生不应该违反客观的限制，而应该顺从它，这样才可以“保身”“全生”“尽年”。这在“依乎天理”“因其固然”这一原则上与庖丁解牛是一样的。但是，这里的意思似乎是绝对的无为，与庖丁解牛有所不同。庖丁解牛之得心应手，是经历了三年的实践提升才获得了自由。看来庄子思想的矛盾不可回避。学者论断其绝对无为，虽不全面，却也不无根据。接下去的故事就明显了。</p>
<blockquote>
<p>​
公文轩见右师而惊曰：“是何人也？恶乎介也？天与，其人与？”曰：“天也，非人也。天之生是使独也，人之貌有与也。以是知其天也，非人也。”</p>
<p>​ 泽雉十步一啄，百步一饮，不蕲畜乎樊中。神虽王，不善也。</p>
</blockquote>
<p>​
人残废了，跛脚了，也是老天决定的，不是人为的，应该心安理得，野鸡走上十步才能啄到一口食物，走上百步才能喝到一口水，可是丝毫也不向往笼子里那样安逸的生活。老天注定它这样，它就心安理得，自由自在。接下去就更极端了，老子死了，朋友秦失吊丧，哭几声就足够了，太悲伤都没有必要。人受命于天，应时而生，顺依而死。安于天理和常分，生死之大限是必然，死亡有如解除倒悬之苦。这种逆来顺受是不是太消极了？庄子的妻子死了，他鼓盆而歌，为什么呢？因为顺其自然：“察其始而本无生，非徒无生也，而本无形，非徒无形也，而本无气。杂乎芒芴之间，变而有气，气变而有形，形变而有生，今又变而之死，是相与为春秋冬夏四时行也。”（《至乐》）如果“噭噭然随而哭之”，就是“不通乎命”。在遵循自然之道这一点上，庄子是不无道理的，但不能不说又是很极端的。如果与传说中的“大禹治水”，与差不多同时的《列子》中的“愚公移山”相比，庄子的无为是不是太消极了？这种消极，可能就是道家演化为道教的思想根源。</p>
<h5 id="section-1">3</h5>
<p>​
庄子的寓言故事的因果关系是神秘的，玄虚的，超越逻辑的，但是作为论述的辅助手段，也并不排除逻辑的运用。具体到刀的动作：</p>
<blockquote>
<p>​
彼节者有间，而刀刃者无厚；以无厚入有间，恢恢乎其于游刃必有余地矣！</p>
</blockquote>
<p>​
一方面是关节间有空隙，另一方面则是刀刃没有厚度（因为刀刃有“神”的抽象属性），因而不管那空隙多么微细，刀刃也是可以通过的。这是货真价实的逻辑证明。</p>
<p>​
说到这里，从方法来看，只是正面说明，如果在孔子时代，这样就相当可以了，但是庄子时代对论述要求全面得多。不但要从正面说明，还要从反面排除：</p>
<blockquote>
<p>​
良庖岁更刀，割也；族庖月更刀，折也。今臣之刀十九年矣，所解数千牛矣，而刀刃若新发于硎。</p>
</blockquote>
<p>​
这可以说是一个补笔。技术好的厨师，每年更换一把刀，而自己的刀十九年来还像是新磨的一样。从方法上来说仍然是从效果上反衬。</p>
<p>​
在庄子时代，理论的推演已经成为论者常用的手段，长篇大论的文章和著作比比皆是。庄子本人的著作，就是以论述为主的。当时运用寓言以明理，是共同的取向。然而，与《墨子》《韩非子》《荀子》等以现实的逻辑进行推演不同，《庄子》的寓言常常是在幻想的、神秘的、超现实的境界中进行，其想象汪洋恣肆、天马行空，大而至于北冥鲲鹏，翼若垂天之云，水击三千里（《逍遥游》），小而至于蜗角两国争地而战，伏尸数万（《则阳》），这样的想象，不但在中国，就连在世界文学史上，都是有开辟鸿蒙之功的。诸子笔下的寓言情节以朴素的叙述为主，庄子对于超现实境界的寓言在语言上却极尽渲染之能事：“手之所触，肩之所倚，足之所履，膝之所踦”，一连四句形成排比；“砉然向然，奏刀砉然”，“合于《桑林》之舞，乃中《经首》之会”，句式齐整。庄子好像是信笔写来，汪洋恣肆的语言和神秘玄妙的想象展示了超越现实的境界，读者明知玄虚，仍然陶醉，进入了一种叔本华所说的“自失”境界，获得想象上的审美享受。这种写法在当时是很少见的。不论是孟子还是韩非子的寓言，都是写实性的叙述动作，不事描写。</p>
<p>​ 庄子的描写又并不完全是排比，有时取参差句法，显得很丰富：</p>
<blockquote>
<p>​
虽然，每至于族，吾见其难为，怵然为戒，视为止，行为迟，动刀甚微。谋然已解，如土委地。提刀而立，为之四顾，为之踌躇满志，善刀而藏之。</p>
</blockquote>
<p>​
句法上皆为短句，参差错落，与开头之排比形成张力，句法的变换和意脉的起伏相得益彰。</p>
<p>（选自《语文建设》2019年第7期，有删改）</p>]]></content>
      <categories>
        <category>High School</category>
        <category>Chinese</category>
        <category>Classical Chinese Literature and Poetry</category>
      </categories>
      <tags>
        <tag>School Notes</tag>
        <tag>High School</tag>
        <tag>Chinese</tag>
      </tags>
  </entry>
  <entry>
    <title>子路、曾晳、冉有、公西华侍坐-《论语》</title>
    <url>/2022/03/13/chinese/High%20School/Classical%20Chinese%20Literature%20and%20Poetry/%E5%BF%85%E4%BF%AE/%E5%AD%90%E8%B7%AF%E3%80%81%E6%9B%BE%E6%99%B3%E3%80%81%E5%86%89%E6%9C%89%E3%80%81%E5%85%AC%E8%A5%BF%E5%8D%8E%E4%BE%8D%E5%9D%90-%E3%80%8A%E8%AE%BA%E8%AF%AD%E3%80%8B/</url>
    <content><![CDATA[<h2 id="课文解读">课文解读</h2>
<p>​
本文是《论语》中篇幅最长的一章，也是最具文学色彩的一章。文章以“言志”为线索，记述了孔子和他的四个弟子的一次谈话，反映了儒家的政治理想和治国理念；同时通过富有个性的语言和生动简洁的动作、神态描写，表现出各个人物的精神风貌和思想态度。</p>
<p>​ 全文可分为三部分。</p>
<p>​ 第一部分：孔子问志。</p>
<p>​
孔子并未直接向弟子发问，而是先从自已谈起，并自然过渡到弟子的治国志向上来。“以吾一日长乎尔，毋吾以也”素来有不同的解释，但无论哪一种，都能看出“夫子循循然善诱人”（《论语·子罕》）的意味。</p>
<p>​ 第二部分：弟子述志。</p>
<p>​
子路第一个发言。“率尔而对”，旁若无人，脱口而出，而且是未经孔子点名就自告奋勇地回答，由此可以看出他不甚谦逊的态度和直接坦率的性格。他的发言内容也不谦逊，前半部分极言国家处境之艰难，后半部分则说交给自己治理，短短三年即可扭转局面。两相比照，可见其志不在小。但孔子只是报以微微一笑，含蓄地表达了自己的态度，随即转而问冉有。</p>
<p>​
冉有第二个发言，就要谦逊许多：时间同样是三年，国家由中等国家变为小国，成就也仅仅是“足民”，还特意强调“如其礼乐，以俟君子”，更是主动表达了谦逊的态度。</p>
<p>​
公西华第三个发言，态度更加谦逊：一上来就表示自己能力可能不够但是愿意学习，而且只愿意做一个主持礼仪的小相。</p>
<p>​
曾皙最后一个发言。曾皙本来在鼓瑟，听到老师的点名，“鼓瑟希，铿尔，舍瑟而作”，而且并不直接答话，而是先铺垫了一句“异乎三子者之撰”。孔子则继续以循循善诱的态度鼓励他说出来。这一连串的铺垫都让人感到曾皙的话可能是最为独特的。果然，不同于三人对为政方式的具体陈说，曾皙描述出了一幅春日畅游的欢愉图景，似乎是答非所问。但这竟然是孔子唯一赞许的回答。孔子为何独独赞许曾皙？这个问题历来有争论。有人认为，曾皙的话描绘了一幅“太平盛世图”。民德归厚，天下归仁，这才是曾皙的社会理想，只不过他是用暗示的方式表达出来罢了。这与孔子仁政、礼乐治国思想完全契合，加之曾皙把话说得雍容委婉，所以才会得到孔子的赞赏。也有人认为，这是由于曾皙的主张有不求仕进之意，这与孔子当时的处境心境相契。一般认为，这段对话发生在孔子自卫返鲁之后的四年里（前484一前481）。此时孔子已年近七十，刚刚结束周游列国，除了短暂服务于卫、陈二国，没能得到任何统治者的垂青，回到鲁国，主政者也只是想用他的学生而不想用他。他的救世之心始终得不到实现，因此他也产生过“道不行，乘桴浮于海”（《论语·公冶长》）的念头。还有人将两种观点综合起来，认为曾皙的话既切中夫子对理想生活的向往和追求，又暗合他理想难以实现的悲哀和感伤。</p>
<p>​ 第三部分：孔子评志。</p>
<p>​
子路等人谈话之后离去，只有曾皙留下与孔子单独交流，从他的提问来看，可能是不理解孔子对子路等人的态度。在曾皙的追问下（也有人认为曾皙只问了前两句，后面是孔子设问自答），孔子给出了解释。对子路，孔子认为他的态度不够谦逊。因为孔子强调“为国以礼”，而“礼”和“让”又是紧密联系在一起的。孔子说过：“能以礼让为国乎，何有（意即不难）？不能以礼让为国，如礼何？”（《论语·里仁》）所以他会批评子路“其言不让”。而对冉有和公西华的谦虚（甚至过分谦虚），孔子也是有所保留的。</p>
<p>​
值得注意的是，孔子赞赏曾皙之志，并不意味着否定子路等人的说法。事实上就治理国家而言，子路讲的是“不挨打”，亦即“强兵”；冉有讲的是“不挨饿”，亦即“富国”；公西华讲的是“知礼节”，亦即“文明”，所谓“仓廪实而知礼节”。而曾皙讲的是“幸福”，是终极目标，富强、文明的终极目标是人民的幸福。目标重要，过程同样重要；既应敢于承担，又要谦逊礼让一这就是孔子的态度。</p>
<h2 id="参考资料">参考资料</h2>
<h3 id="参考译文">参考译文</h3>
<div class="classcial-chinese-literature-and-poetry-translation"><div class="paragraph"><p class="original-text">子路、曾<ruby><rb>皙</rb><rt>xī</rt></ruby>、冉有、公西华侍坐。</p><p class="translation">子路、曾皙、冉有、公西华坐在孔子近旁侍奉。</p></div><div class="paragraph"><p class="original-text">子曰：“以吾一日<ruby><rb>长</rb><rt>zhǎng</rt></ruby>乎尔，毋吾以也。居则曰：‘不吾知也。’如或知尔，则何以哉？”</p><p class="translation">孔子说：“因为我年纪比你们大些，人家不用我了。（你们）平日说：‘没有人了解我啊！’假如有人了解你们，那么（你们）打算怎么做呢？”</p></div><div class="paragraph"><p class="original-text">子路率尔而对曰：“千<ruby><rb>乘</rb><rt>shèng</rt></ruby>之国，摄乎大国之间，加之以师旅，因之以饥馑；由也为之，比及三年，可使有勇，且知方也。”</p><p class="translation">子路不假思索地回答说：“一个拥有千辆兵车的（中等）诸侯国，夹在（几个）大国的中间，有（别国）军队来攻打它，接下来（国内）又有饥荒；如果让我治理这个国家，等到三年，就可以使人人都有勇气，而且知道义理。”</p></div><div class="paragraph"><p class="original-text">夫子<ruby><rb>哂</rb><rt>shěn</rt></ruby>之。</p><p class="translation">孔子对他示以微笑。</p></div><div class="paragraph"><p class="original-text">“求，尔何如？”</p><p class="translation">“冉有，你怎么样？”</p></div><div class="paragraph"><p class="original-text">对曰：“方六七十，如五六十，求也为之，比及三年，可使足民。如其礼乐，以俟君子。”</p><p class="translation">（冉有）回答说：“一个纵横六七十里或者五六十里（的小国），如果让我去治理，等到三年，可以使人民富足。至于礼乐教化，（白己的能力是不够的，）要等待君子（来推行了）。”</p></div><div class="paragraph"><p class="original-text">“赤，尔何如？”</p><p class="translation">“公西华，你怎么样？”</p></div><div class="paragraph"><p class="original-text">对曰：“非曰能之，愿学焉。宗庙之事，如会同，端章甫，愿为小相焉。”</p><p class="translation">（公西华）回答说：“不敢说我能胜任，但是愿意在这方面学习。祭祀祖先的事，或者诸侯朝见天子，我愿意穿着礼服，戴着礼帽，做一个小司仪。”</p></div><div class="paragraph"><p class="original-text">“点，尔何如？”</p><p class="translation">“曾皙，你怎么样？”</p></div><div class="paragraph"><p class="original-text">鼓瑟希，[铿](kēng)尔，舍瑟而作，对曰：“异乎三子者之撰。”</p><p class="translation">（曾皙）弹奏瑟的声音渐渐稀疏，铿的一声，把瑟放下，站起来，回答说：“我和他们三人为政的才能不一样。”</p></div><div class="paragraph"><p class="original-text">子曰：“何伤乎？亦各言其志也！”</p><p class="translation">孔子说：“那有什么关系呢？不过是各自谈谈白己的志向。”</p></div><div class="paragraph"><p class="original-text">曰：“<ruby><rb>莫</rb><rt>mù</rt></ruby>春者，春服既成，冠者五六人，童子六七人，浴乎<ruby><rb>沂</rb><rt>yí</rt></ruby>，风乎舞<ruby><rb>雩</rb><rt>yú</rt></ruby>，咏而归。”</p><p class="translation">（曾皙）说：“暮春时节，春天的衣服已经穿好了。成年人五六个，少年六七个，到沂水去洗洗澡，在舞零台上吹吹风，唱着歌回家。”</p></div><div class="paragraph"><p class="original-text">夫子<ruby><rb>喟</rb><rt>kuì</rt></ruby>然叹曰：“吾与点也。”</p><p class="translation">孔子长叹一声说：“我赞成曾皙啊！”</p></div><div class="paragraph"><p class="original-text">三子者出，曾皙后。曾皙曰：“夫三子者之言何如？”</p><p class="translation">子路、冉有、公西华都出去了，曾皙最后走。曾皙问（孔子）：“他们三位的话怎么样？”</p></div><div class="paragraph"><p class="original-text">子曰：“亦各言其志也已矣！”</p><p class="translation">孔子说：“也不过是各自谈谈白己的志向罢了！”</p></div><div class="paragraph"><p class="original-text">曰：“夫子何哂由也？”</p><p class="translation">（曾皙）说：“您为什么笑仲由呢？”</p></div><div class="paragraph"><p class="original-text">曰：“为国以礼，其言不让，是故哂之。”</p><p class="translation">（孔子）说：“治国要用礼，（可是）他（子路）的话毫不谦让，所以笑笑他。”</p></div><div class="paragraph"><p class="original-text">“唯求则非邦也与？”</p><p class="translation">“难道冉有讲的不是国家的事吗？”</p></div><div class="paragraph"><p class="original-text">“安见方六七十，如五六十而非邦也者？”</p><p class="translation">“怎么见得纵横六七十里或五六十里就不是国家呢？”</p></div><div class="paragraph"><p class="original-text">“唯赤则非邦也与？”</p><p class="translation">“难道公西华讲的不是国家的事吗？”</p></div><div class="paragraph"><p class="original-text">“宗庙会同，非诸侯而何？赤也为之小，孰能为之大？”</p><p class="translation">“宗庙祭祀、朝见天子，不是诸侯国（的事）又是什么呢？如果公西华只能（替诸侯）做一个小司仪，那么谁能做大司仪呢？”</p></div></div>
<h3 id="参考文献">参考文献</h3>
<h4 id="子路曾皙冉有公西华侍坐赏析-appreciation_of_ziluzengxiranyougongxihuashizuo">《子路、曾皙、冉有、公西华侍坐》赏析
<span class="citation" data-cites="Appreciation_of_Ziluzengxiranyougongxihuashizuo">[@Appreciation_of_Ziluzengxiranyougongxihuashizuo]</span></h4>
<p>​
孔子是我国春秋时期最伟大的思想家和教育家。他首开私家讲学之风，学而不厌，诲人不倦，造就了一大批有为有守的人才。他们的言行主要记载于《论语》一书中。班固《汉书·艺文志》说：“《论语》者，孔子应答弟子时人及弟子相与言而接闻于夫子之语也。当时弟子各有所记，夫子既卒，门人相与辑而论纂，故谓之《论语》。”这部书以记言为主，为后来宋、明理学家“语录”体之祖，历来被奉为儒家的经典。</p>
<p>​
今传《论语》共二十篇，每篇又分为若干章。前十篇为上《论》，后十篇为下《论》，两者间的差别相当大。上《论》言简意赅，极为精练；下《论》每章较长，却显得有些驳杂。但从文学角度来看，则下《论》的叙述较为具体生动，有些章节对人物的神情语气还有所渲染，结构层次也井然有序，如《子路、曾皙、冉有、公西华侍坐》就是如此。</p>
<p>​
这章写孔子和四个学生的问答，启发他们各言己志。据清人林春溥考证，认为此事当在鲁哀公十一年孔子返鲁之后。孔子返鲁时年七十岁，子路（姓仲名由）六十岁，冉有（名求）四十岁，公西华（名赤）二十七岁，曾皙（名点）年无考，似与孔子相近。（一般则以为此章按年龄排列顺序，曾皙小于子路。）“古者大夫七十而致仕，是时鲁不能用孔子，孔子亦不求仕，而汲汲济时之心，不能不望于吾党。”（《开卷偶得》卷六）这是四子言志的时间及背景。这虽只是推测，但颇合乎当日情事，足供参考。</p>
<p>​ 这章因句读、解释不同，历来颇多歧解，如开头几句：</p>
<blockquote>
<p>​
子曰：“以吾一日长乎尔，毋吾以也。居则曰：“不吾知也！如或知尔，则何以哉？”</p>
</blockquote>
<p>​
这是以“乎尔”连读，意思是：“我虽年少长于汝，然汝勿以我长而难言。”（朱熹《论语集注》）</p>
<p>​
另一种读法是在“乎”字处断句，武亿《经读考异》说：“考此“乎”字宜断为句，“尔”字属下连读。当时师弟情事，皆以“吾”与“尔”为词；又“乎”字为句，此正诱之尽言，神理如见。何氏《集解》，孔曰：“言我问汝，汝毋以我长故难对。”玩注“汝毋以我长＇句，明是“尔”字属下读。”近人黄侃手批白文《十三经》即如此断句。这种读法是根据注疏来的。</p>
<p>​
以上两种读法，看来差别不大，只是“尔”字属上句或下句的问题。但“尔毋吾以也”，由于有“尔”作主语，这句话不可能作别的解释，只能认为是孔子的谦辞，意为“汝毋以我长故难对（或“而难言”）；而“乎尔”连读，则“毋吾以也”却可以理解为另外一种意思。东汉王符说：““以吾一日长乎尔”，长，老也。毋吾以也，以，用也。孔子言老矣不能用也，而付用于四子也。”（杨慎《丹铅录》引）清人刘宝楠也说：““毋吾以”者，＇毋”与“无＇同，皇本作“无＇。以，用也。言此身既差长，已衰老，无人用我也。”（《论语正义》）他们都是把“以”解为“用”，“毋吾以”就是“无人用我”。这种讲法和“勿以我长而难言”就完全两样了。</p>
<p>​
以上两种讲法都讲得通，但把“毋吾以也”讲成“汝勿以我长而难言”有添字解经之嫌，因为“而难言”的意思是注者凭自己的体会而加进去的。而把“以”解为“用”则较为直截了当，并且有孔子的话“虽不吾以”（《论语·子路》）可以作为旁证。因此我们觉得这样解释更恰当些，也更切合孔子当时自觉衰老，不见用于世的心情。</p>
<p>​
但由此又引出一个新的问题，即下句“居则曰：“不吾知也＇”的主语是谁。旧注一直认为是指子路、曾皙等人，没有分歧的意见。但如武亿所说，这章写“当时师弟情事，皆以“吾”与“尔＇为词”，“吾”指孔子，“尔”指弟子，则此“不吾知也”亦当系孔子自谓，而非孔子假托弟子等自谓。再则从《论语》全书来看，没有记载过弟子们有“不吾知”的牢骚，而只有孔子发过“莫我知也夫”的慨叹，以及在击磬时流露过“莫己知也”的心声（均见《宪问》）。而且就当时在座的四个学生来看：子路光明磊落，不忮不求；曾皙怡然自得，无意于为邦；冉求方为季氏宰（亦据林春溥说）；公西华较为年轻，都不应有怀才不遇、急于求知的念头和表现。孔子如果说他们“汝等常居之日，则皆自云无知吾者”，岂非无的放矢？因此我们认为这里的“居则曰：“不吾知也””与上句的“毋吾以也”紧连，都是孔子表示自己年老，“明王不兴，终不见用，已无当世之志”（王闿运《论语训》）的意思。把这段话译为现代汉语，不必再添出主语（汝等），更显得文从字顺：</p>
<blockquote>
<p>​
孔子说：“因为我年纪比你们大了一些，没有人用我了，所以我平时就说过：“人家是不了解我的。”如果有人了解你们，那你们将怎么办呢？”</p>
</blockquote>
<p>​
以上是孔子发问。当时是老师和学生五个人坐在一起，好像开一个小型的座谈会。按照当时的礼貌，“侍于君子，不顾望而对，非礼也”（《礼记·曲礼》）。但是子路心直口快，一见孔子发问，便不假思索，抢先回答道：“一个具有一千辆兵车的国家，夹处于大国之间，外有敌军来犯，内有灾荒待救，如果由我来治理，等到三年光景，可使人人勇敢，而且懂得道理。”</p>
<p>​
孔子听了，微微一笑，没说什么。然后又问冉求。冉求性格谦逊，见子路被哂笑，便更加小心地答道：“一个周围六七十里或五六十里的小国，由我去治理，等到三年光景，可使人民富足；至于修明礼乐，那就只有等待贤人君子去做了。”</p>
<p>​
孔子接着又问公西华。公西华在四人中最年轻，他本有志于礼乐，但因冉有刚说过“如其礼乐，以俟君子”的话，他如果径直说出自己的抱负，便有以君子自居之嫌，于是便委婉地答道：“并不是说我有那样的才能，我只是想学着去做。比如宗庙祭祀之事，或者盟会之际，我愿意穿着礼服，戴着礼帽，去做一个司仪的小傧相。”</p>
<p>​
最后，孔子问到曾皙。这时曾皙弹瑟正近尾声，他铿然一声把瑟放下，站起来答道：“我的志向和他们三位所讲的不同。”</p>
<p>​
孔子见他有些为难的样子，便鼓励他说：“那有什么妨碍呢？正是要各人谈谈自己的志向啊！”于是曾皙便道：“暮春三月，春天的衣服都已穿好了。我偕同五六个成年人，六七个小孩子，在沂水旁边洗洗澡，在舞雩台上吹吹风，然后大家一起唱着歌儿，一路走回来。”</p>
<p>​ 孔子听了，长叹一声道：“我同意曾点的志趣呀！”</p>
<p>​
大家都谈过自己的志愿以后，子路、冉有、公西华都退出了，曾皙故意留在后面。他不大理解孔子的意思，特别是对孔子赞许自己，哂笑子路，对其他二人不置可否，觉得跟孔子平时教人行道救世的积极态度大不相同，心下纳闷，于是便问：“夫三子者之言何如？”又问：“夫子何哂由也？”</p>
<p>​ 最后孔子答道：</p>
<blockquote>
<p>​
为国以礼，其言不让，是故哂之。唯求则非邦也与？安见方六七十如五六十而非邦也者？唯赤则非邦也与？宗庙会同，非诸侯而何？赤也为之小，孰能为之大？</p>
</blockquote>
<p>​
孔子讲这段话，是说明他之所以笑子路只是由于“其言不让”，而不是笑其“为国”之志。接下去又自问自答，指出冉有、公西华也是志在“为邦”，不过他们的态度非常谦逊，自己也就没有笑他们。这也就是向曾皙表明，子路和其他两人一样，他们的志向都值得肯定，并无轩轾之意。</p>
<p>​
对于这一段话，也有不同的标点和理解。以上是根据皇侃《论语疏》的说法；朱熹《集注》则认为“唯求则非邦也与”和“唯赤则非邦也与”都是曾皙问，下面的话则是孔子答。其说虽也可通，但似乎不很合理。因为曾皙如果一听到孔子赞许自己便得意起来，看到哂笑子路便认为孔子鄙薄事功，对由、求、赤三人“为邦”之志都不赞成，而且一问再问，还不明白孔子的意思，那不是“举一隅而不以三隅反”，过于愚了吗？因此我们不从朱注之说。</p>
<p>​
细读此章，我们可以看到孔子这位大教育家的风度。他对待学生如朋友，又如家人子弟，非常亲切。他教育学生，不说汝等立志当如何如何，讲一些空洞的道理，而是置身于他们之中，启发他们各言己志。在这一章里，他假设“如或知尔”，使子路等四人各自谈谈“则何以哉”，以探询他们的抱负。在另一章里，他也曾让颜渊、子路“曷各言尔志”，都是为着了解他们，从而因材施教，把他们培养成人才。</p>
<p>​
孔子对子路等三人言“志”都予以肯定，这也是由于对他们的才能知之有素。他曾对别人谈过三人的特长是：“由也，千乘之国，可使治其赋（兵役等军政工作）也”；“求也，千室之邑，百乘之家，可使为之宰（县长或总管）也”；“赤也，束带立于朝，可使与宾客言（外交辞令）也”。（《论语·公冶长》）孔子对子路、冉有、公西华的评论，和这里三人所谈自己的抱负完全符合，可见孔子对每个学生的才能都是了如指掌的。</p>
<p>​
四子言志，孔子哂由与点，哂由之故，因曾皙一问，孔子已作了解答，而“吾与点也”却没说出原因，这是此章最令人费解的地方。后来学者纷纷探索，各有所见，我们联系当时情事和孔子的心境，认为李惇的说法最为合理，他说：“三子承“知尔”之问，兵、农、礼乐，言志之正也。点之志却是别调，夫子独许之者，亦以见眼前真乐，在己者可凭；事业功名，在人者难必；喟然一叹，正不胜身世之感也。”（《群经识小》）</p>
<p>​
那么，什么是孔子的“身世之感”呢？林春溥说得更为具体，他以为：“子路、冉有、公西华之言志，用之则行也，其言在夫子之意中；曾皙之言志，舍之则藏也，其言出夫子之意外。汲汲济时之心，转而增蹙蹙靡骋之感，喟然一叹，与在陈“归欤＇之叹同。＇吾与点也”，殆亦“惟我与尔有是夫＇之意。”（《开卷偶得》）</p>
<p>​
孔子身处春秋变乱纷争之世，极想拨乱反正，行道救民，但周游列国，终不得志，而他又不肯放弃自己的理想和主张，以求取功名利禄，所谓“不义而富且贵，于我如浮云”（《论语·述而》）。他立身行事是有原则的。他曾对他最得意的学生颜渊说过：“用之则行，舍之则藏，惟我与尔有是夫！”（《论语·述而》）也就是说，只有颜渊在用舍行藏各方面都能合乎原则，和他自己一致。曾皙在孔门没有什么突出的表现，德才都远不及颜渊。但他能够“即其所居之位，乐其日用之常”；又恰值孔子感慨身世、自伤不遇之际，忽然听到他说出沂水春风、眼前乐事，正与自己“舍之则藏”的志趣相合，而且比颜渊那样陋巷箪瓢、安贫乐道，更为动人，所以不觉喟然兴叹，引为同调了。</p>
<p>​
这章不过二百多字，描写了五个人物，各人有各人的性格和修养，通过生动的描述展现出来。开头老师提出问题，态度从容而亲切。接着子路“率尔而对”，不但他那“兼人”“好勇”的性格跃然纸上，同时也使场面顿然活跃起来。接下去便是冉有、公西华依次回答，语气一个比一个谦逊，也各具特色。但最为出色的是写曾皙答话的情景，先是“鼓瑟希”，渲染出一种音乐艺术气氛；接着是“铿尔”一声，推瑟而起，尤为传神；再往后是“异乎三子者之撰”，这句话在这个时候才说出，和子路的“率尔而对”形成鲜明的对照，只这么一句，曾皙当时踌躇不安的神态便充分表露出来了。然而“山重水复疑无路，柳暗花明又一村”，接着展现的却是一幅春风和煦，阳光融融，一群活泼的青少年散步河边，载歌载舞的游春图，使人恍如置身其间，也跟着他们心旷神怡起来。无怪乎当日孔子对曾点特别赞叹，就连我们今天读到这里也还是为之神往的。以文而论，南北朝时丘迟《与陈伯之书》有“暮春三月，江南草长，杂花生树，群莺乱飞”数句，千古传诵，与此章“莫春者”一段有异曲同工之妙。那篇文章本是军中檄文一类，在摆事实讲道理之际，忽然插写江南春景，由景生情，以感染增强说服的效果。清人宋湘有诗赞之云：“文章绝妙有丘迟，一纸书中百首诗。正在将军旗鼓处，忽然花杂草长时。”（《红杏山房诗钞》）而《论语》这章，则是在子路诸人讲论兵农礼乐、治国安邦的抱负时，忽然有“曾点旷达之言，冷然人耳”（袁枚语），别开生面，令人情移神往。但丘迟还是有意为文，而此章则是随手记录，自然成文。因此对于它的剪裁布置之妙，更应细心体会。</p>
<p>（选自《历代名篇赏析集成·先秦两汉卷》，高等教育出版社2009年版）</p>]]></content>
      <categories>
        <category>High School</category>
        <category>Chinese</category>
        <category>Classical Chinese Literature and Poetry</category>
      </categories>
      <tags>
        <tag>School Notes</tag>
        <tag>High School</tag>
        <tag>Chinese</tag>
      </tags>
  </entry>
  <entry>
    <title>高中文言文：必修下 第一单元</title>
    <url>/2022/03/13/chinese/High%20School/Classical%20Chinese%20Literature%20and%20Poetry/%E5%BF%85%E4%BF%AE/%E5%BF%85%E4%BF%AE%E4%B8%8B%E5%86%8C%20%E7%AC%AC%E4%B8%80%E5%8D%95%E5%85%83/</url>
    <content><![CDATA[<h2 id="单元内容">单元内容</h2>
<h3 id="课文目录">课文目录</h3>
<pre class="template:contents"><code>[[High School, Chinese, Classical Chinese Literature and Poetry, 子路、曾晳、冉有、公西华侍坐-《论语》], 子路、曾晳、冉有、公西华侍坐-《论语》]
[[High School, Chinese, Classical Chinese Literature and Poetry, 齐桓晋文之事-《孟子》], 齐桓晋文之事-《孟子》]
[[High School, Chinese, Classical Chinese Literature and Poetry, 庖丁解牛-《庄子》], 庖丁解牛-《庄子》]
[[High School, Chinese, Classical Chinese Literature and Poetry, 烛之武退秦师-《左传》], 烛之武退秦师-《左传》]
[[High School, Chinese, Classical Chinese Literature and Poetry, 鸿门宴-司马迁], 鸿门宴-司马迁]</code></pre>
<h3 id="单元目标">单元目标</h3>
<ol type="1">
<li><p>通过本单元内容的学习，理解中国传统文化的一些重要理念，认识其深层内涵与文化价值。形成对传统文化的理性热爱，自觉维护和发扬“中华文明之光”。</p></li>
<li><p>体会儒、道思想的不同特点，把握先贤对社会和人生的不同看法，从不同角度思考其深层意蕴，并结合当下的社会文化生活，思考其现代意义。理解史传中体现出来的智慧、观念，学习对历史叙事进行思辨性阅读，提高认识历史的能力。</p></li>
<li><p>反复诵读，整体把握文意，借助注释和工具书深化理解，进一步提高独立阅读文言文的能力。分析对比，领会诸子散文在论事说理方面的不同特点和史传散文在叙事写人方面的艺术手法。</p></li>
<li><p>在学习文化经典的过程中吸取思想养分，滋养理性精神，发展思辨能力，学习论说方法。围绕比较重要的社会、文化话题，鉴古而观今，写一篇议论文，阐述自己的观点。</p></li>
</ol>
<h2 id="编写意图">编写意图</h2>
<h3 id="编写意图-1">编写意图</h3>
<p>​
本单元的人文主题是“中华文明之光”，意在通过单元内容的学习，深化学生对传统文化的认识，强化传承中华优秀传统文化的意识，增强文化自信。这一理念已经体现在必修上册第三单元，也为统编高中语文教材中所有以文言诗文为主体的单元所共有，是“文化传承与理解”这一学科核心素养在教材中的具体落实。</p>
<p>​
相比而言，必修上册第三单元所选课文均为古诗词，主要体现诗人对人生的追求、感慨、思考、体悟；本单元所选课文则为篇幅较长的诸子文和史传文，涵盖中国古代思想史中影响最大的儒、道两家和古代史书的经典，涉及中国传统文化中众多重要的价值观念、社会理想、思维方式和行为模式。就传统的四部分类而言，不同于必修上册第三单元聚焦于集部，本单元的选文涵盖经、子、史三部，在体现中国传统文化的特质方面更具深度和广度，切入传统文化的思想根基和精神内核。这种从枝叶花果到主干根柢的编排顺序，体现了循序渐进的原则，也体现了教材编者对“继承和弘扬中华优秀传统文化”“热爱中华文化”的认识——只有深入理解传统文化的核心理念，才能对其有发自内心的热爱，也才能更好地继承和弘扬。</p>
<p>​
从课程内容的角度来看，本单元属于必修课程“思辨性阅读与表达”任务群。与同属这一任务群的必修上册第六单元相比，在选文上都兼顾了课程标准所说的“论说名篇”与“各类文本”（主要是叙事类文本），避免将思辨性阅读简单等同于议论文阅读，注意引导学生在阅读不同类型的文章时都能把握本质，有所质疑，多元思考。所选的三篇诸子文虽然以说理为主，但也有不少叙事、描写的成分，有的篇目还具有较强的文学色彩，凸显了中国古人的思维特点和说理方式。这样的选文方式将“提高理性思维水平”与“理解、传承优秀传统文化”两项任务结合起来，丰富了思辨性阅读的文化内涵，也能增进学生对传统文化的理解。</p>
<p>​
本单元与本册教材的第八单元均以文言文为学习内容，两个单元之间有一定的关联。《子路、曾皙、冉有、公西华侍坐》《齐桓晋文之事》展现了儒家的社会理想和政治主张，《谏太宗十思疏》《答司马谏议书》具体讨论现实中的“治道”（属于“政论”）；《烛之武退秦师》《鸿门宴》主要记述“史事”，《阿房宫赋》《六国论》则重视总结历史教训（属于“史论”）。这两个单元在教材中一先一后，同属思辨性阅读与表达任务群，选文的“议论”属性越发突出，思辨性的阅读活动也从理解、思考转向推理、判断、质疑，体现了逐步推进，螺旋上升的教材编写原则，也与学生的学习规律相适应。</p>
<p>​
具体到教学内容，本单元共选文五篇，分为三课。《子路、曾皙、冉有、公西华侍坐》《齐桓晋文之事》《庖丁解牛》为一课，是“诸子”部分；《烛之武退秦师》《鸿门宴》各为一课，是“史传”部分。</p>
<p>​
《子路、曾皙、冉有、公西华侍坐》是《论语》中白成段落的一篇长文，以“言志”为主线，体现了孔子及四位弟子的人生志向。《论语》中师生“言志”“论志”的记录非止一章，但本文的“言志”涵盖了社会理想、自我判断、为政之道等多方面内容，内容丰富，给人以极大的思考空间，故长期以来为人所重。同时，文章对人物的语气、表情、动作的描写简洁传神，也颇具文学价值。《齐桓晋文之事》在《孟子》中也是一篇长文，以对话的形式表现了孟子的政治主张和社会理想，全文以“保民而王”为核心逐层展开，既一气贯注，又收纵自如：先从正面入手，论述“保民”的根源是“不忍之心”，进而指出“不忍之心”之所以重要就在于“推恩”保民；接下来从反面辨析“王”“霸”之别，指出“发政施仁”才能“王天下”；最后，点明“发政施仁”的关键举措是“制民之产”，又回到“保民”的主题。这两篇文章的思想有相通之处，如都重视安养民众；也有因论说重点不同而形成的差异，如孔子重视“为国以礼”，孟子强调“发政施仁”。就整体而言，两篇文章爱“民”望“治”，重“王”轻“霸”，推“仁”讲“礼”，比较系统地体现了儒家的社会理想和政治主张，其中的许多论断至今仍为人们认可、重视。《庖丁解牛》是《庄子》中的著名寓言，体现了《庄子》好以寓言说理的特点。所谓“寓言十九，借外论之。亲父不为其子媒。亲父誉之，不若非其父者也”（《庄子·寓言》），利用寓言来说理，形象生动，耐人寻味，有时比直接说理、自陈所见更容易为人接受，所以才有“以寓言为广”（《庄子·天下》）的说法。本文寓意丰富，但其寓意的“基本点”和“出发点”都在因应自然、顺势而为，就思考问题的路径和应对外部世界的姿态来说，与儒家形成了鲜明的对比，文中所说的“依乎天理”“游刃有余”，至今也颇具启发性。</p>
<p>​
综上所述，本单元的三篇诸子文，无论就单篇的内容来说，还是就各篇之间的关联来说，都可以作有相当深度的解读、剖析、比较。就阅读的角度来说，无论是“为何论理”“所论何理”“如何论理”，还是“理的内涵”“理的层次”“理的价值”，这三篇文章都有很大的思辨性阅读的空间。</p>
<p>​
《烛之武退秦师》《鸿门宴》都是史传文，但并没有合为一课，一方面是因为《鸿门宴》篇幅较长，宜乎单列，另一方面是因为这两篇课文的教学要求和重点有所不同。</p>
<p>​
《烛之武退秦师》是《左传》中的名篇，记述郑国大夫烛之武在国家面临危难之时勇担重任，游说秦穆公，拆散秦、晋两国的联合，使郑国转危为安的故事。就记事而言，以时为经，一波三折，就写人而言，对话精彩，形象鲜明，这些都是在教学中要注意的。不过，教材将本文列为思辨性阅读与表达任务群的学习内容，且单独编为一课，更多的是看重本文在历史叙事中体现出来的思想观念。春秋时期王纲解纽，礼崩乐坏，《左传》在记述史实时特别重视“礼”，常以“礼也”“非礼也”评述所记的历史事件，也常以历史人物的话来自我诠释“礼”的重要性。本文中的“无礼于晋”“贰于楚”“尝为晋君赐”“不仁”“不知”“不武”等，均与“礼”有关。透过历史事件，发掘隐藏其下的价值观，这正是《烛之武退秦师》思辨性阅读的重点。</p>
<p>​
《鸿门宴》记述了楚汉争霸过程中的一次重要会面，叙事详备而扣人心弦，不仅备述这次宴会的前因，更精细描写宴会上各人的表现，使其跃然纸上，很好地体现了《史记》“无韵之《离骚》”的特点。相比于叙事简洁的《左传》，《史记》（特别是其中的本纪、世家、列传）内容更为丰富，细节更多，且司马迁的意图是“究天人之际，通古今之变，成一家之言”（《报任安书》），并不像《左传》作者那样围绕着某一固定的价值观展开历史叙事。就史传阅读而言，历史记述越详尽，越全面客观地反映纷繁复杂的历史事件，其中可供细细玩味的“妙处”就越多，可供评析人物的“素材”就越多，可以悬想假设的“断点”就越多，可以反思质疑的“疑点”也就越多。因此，除一般意义上的理解、赏析外，对《鸿门宴》的思辨性阅读不妨从上述四个角度入手。</p>
<p>​
根据综合活动任务群的要求和单元选文的特点，教材设计了四个单元学习任务。除任务四偏重语言学习外，其他均与思辨性阅读与表达任务群所重视的“提高理性思维水平”有关，分别要求把握三篇诸子文的主要观点和思路，对史传文中的史实作深入思考甚至质疑，联系现实或多元化地理解古代文化经典。这些学习任务包含口头与笔头的学习活动，既涉及对立场、观点、方法的理解与把握，也与课程标准强调的分析质疑、多元解读、培养思辨能力息息相关。</p>
<h3 id="教学指导">教学指导</h3>
<p>​
本单元的人文主题是“中华文明之光”，单元核心任务为：在理解文意的基础上，整体把握经典选篇的思想内涵，认识其文化价值，思考其现代意义。与同属“思辨性阅读与表达”任务群的必修上册第六单元相比，本单元的人文主题不像“学习之道”那样具体，也不易直接作为单元的学习情境。因此，教学中要抓住核心任务，考虑选文的情况，据此设计学习情境。如前所述，本单元包括“诸子”和“史传”两部分，前者以说理为宗，后者以记事为本，在设计学习情境时，不妨分而治之，适度具体化，以免过大过空的情境将学生的学习引向笼统与浮泛。</p>
<p>​
以第1课为例，其中的三篇文章主要涉及“理想的社会是什么样的？人应该以怎样的姿态生存于世？”这两个问题，因此不妨围绕着“社会理想与生存姿态”来设置学习情境，通过阅读与研讨来理解古人对这一永恒话题的思考。在教学过程中，既要重视理解具体的观点，也要注意把握观点之间的关系和文章的思路；既要注意理解各篇文章的观点，也要作横向对比，注意不同学派观点之间的大差异与同一学派观点之间的小区别；既要强调忠实、扎实地理解文本，也要注意站在当代立场反思古人的思想，并与现实相联系，以提高学生对社会理想与生存姿态的认识水平。</p>
<p>​
教师也可以从木单元所属任务群的角度，围绕“阅读诸子的多种方式”来设置学习情境，既关注上文所说的理解、对比和反思，也可围绕儒道诸子思想的不同特征、《论语》《孟子》《庄子》的不同说理风格等，展开更具整体性的对比。师生还可以借鉴前人阅读诸子著作的方法，尝试典籍内部的互相参证，利用前人的注释作多元化、发散性的思考，或对前人的解读进行辨析。</p>
<p>​
此外，教师还可以从现实语境出发，围绕“古典的回声”设置学习情境，和学生探寻梳理儒、道思想在当代社会思想、语言体系中的影响，由当代人的认识出发，回溯经典的本意，发掘先秦诸子思想的深刻性，体会其充沛的生命力和无穷的魅力。</p>
<p>​
教学《烛之武退秦师》和《鸿门宴》这两篇史传，教师可以围绕“历史的‘长短’与‘表里’”设置整体性的学习情境。引导学生立足较长的时段理解“退秦师”这一具体的历史事件，寻找历史的真相，从楚汉相争全过程的角度思考鸿门宴对历史发展有何作用，思索历史事件发展的内在动因。教师还可以与学生一起开掘烛之武精彩辞令背后的精细谋划，思考刘邦、张良应对项羽的策略为何能获得成功，寻绎历史人物行为的内在逻辑。这种具有较强思辨性的学习，可以让学生接触到大处着眼、小处入手的读史方法，初步养成透过现象寻求本质的阅读习惯。</p>
<p>​
当然，教师也可以将两篇史传文“分而治之”，分别设置情境，设计学习任务。教学《烛之武退秦师》，在把握历史事件、欣赏人物形象的基础上，可以适当选取相关资料，或围绕“历史叙事中的观念”，探究“礼”的观念及其实质，或从烛之武这个人出发，思考“士人的精神”，感受春秋时期“士”的风范和历史作用。教学《鸿门宴》，除了寻找戏剧化的历史事件背后的本质外，还可以聚焦“合逻辑地‘新’读历史”，如利用《史记》的互见法和《史记》《汉书》记鸿门宴的异同来反观《项羽本纪》的记载，对项伯等基本被定性的人物作新的思考，合理推测史书内容背后的“可能事实”，质疑史书记载中的一些不合常理甚至矛盾的地方，等等。这样的学习方式能让学生从了解历史事件和历史人物出发，感受阅读史书的深层次乐趣。</p>
<p>​
上面所说的一些学习情境和学习任务，有的比较开放、丰富，有的比较集中、扎实，本身并没有高下之别，教师可根据具体情况灵活选用，自主完善。这些学习任务基本上涵盖了一般性理解、对比式理解、深入思考、多元思考、批判性思考等思辨性阅读常用的思维方式，有助于提高语文学习的思维含量，提升学生的思维品质。</p>
<p>​
在设置学习情境，分解落实核心任务展开教学的过程中，建议教师关注和思考以下一些问题。</p>
<ol type="1">
<li><p>处理好单篇文章教学与整合式的大情境、大任务教学之间的关系。本单元既是思辨性阅读与表达单元，又是纯文言文单元，所选文章均为经典作品，有相当的理解难度。这种双重属性提示我们，“单篇”与“整合”在本单元的教学中不可偏废。一方面，不解决好单篇文章的理解问题，大情境、大任务就容易沦为空情境、虚任务；另一方面，如果只进行割裂的单篇教学，就文章教文章，就很难完成领会人文精神、深化对传统文化的认识的单元任务，也会丢失很多进行思辨读写的资源或机会。同时，由于选文本身的经典性，即使进行单篇教学，也完全可以设置较上位的真实情境，设计较多样的任务，调用较丰富的资源，进行思辨读写。设置学习情境、设计教学任务，重要的在于基于课程标准的要求，结合教学内容与学生学习的情况，选择适当的方式完成思辨性阅读与表达任务群所承担的任务。</p></li>
<li><p>处理好文言文教学中学语言与思义理之间的关系。这是一个老生常谈式的问题，但仍然值得引起教师的注意。课程标准要求学生在修习必修课程时“能借助注释和工具书，阅读中国古代作品，读懂文章内容”，并不要求字字落实，句句精讲，更不提倡让学生背注释、背译文。就学语言来说，让学生体会古今汉语的差异，适当梳理文言词语在不同上下文中的词义和用法，了解部分常见的文言语法现象等都是必要的，但这些学习任务要适度、精当，与理解文意结合，为读懂文章、思考问题服务。而要读懂文言文并思考一些深层次的问题，更重要的还是诵读与讨论。当然，有些文言字词的多元训释或句子的不同理解，本身就宜乎拿来比对辨析，以开阔眼界、训练思维，这就要另当别论了。</p></li>
<li><p>处理好“传统任务”与“新任务”之间的关系。本单元的五篇选文都是传统篇目，在长期的教学中积累了一些常见的教学任务，如《孟子》文章的语言特点、史传文中人物形象的赏析等，这些相沿已久的教学任务，在本单元的教学中当然还可以继续使用，但与此同时，教师也应该注意活动任务群和文本的不同组合方式赋予课文的新任务，根据课程标准要求和学情对教学任务进行选择和组合，在选择、组合的过程中落实新的教学目标，避免“拿新书上老课”。学生在初中阶段对本单元涉及的几部经典著作都有不同程度的了解，因此，建议适当削减与初中阶段重合较多的任务，突出高中阶段语文学习的特点。</p></li>
<li><p>充分借鉴古人对经典作思辨阅读的经验。课程标准对思辨性阅读与表达任务群的具体学习方法作了一些描述，如：要求学生通过阅读与鉴赏、表达与交流、梳理与探究等语文学习活动，阅读古今中外典型的思辨性文本，学习并梳理论证方法，学习用口头与书面语言阐述和论证自己的观点，驳斥错误的观点。</p></li>
</ol>
<p>​
这些说法当然值得重视，但它们主要是原则性、一般性的要求，还需要结合学习内容的特点，探索相应的具体方法。就本单元来说，古人的“注经评史”为我们提供了丰富的思辨阅读经验。无论是“注”“疏”“考”“证”，还是“述”“诠”“评”“疑”，都包含着复杂的思维过程，积累了多元的视角、深刻的反思、独特的方法和丰富的智慧，可以帮助师生一起摸索富有传统特色的思辨性阅读与表达任务群学法。在教学中恰当使用古人的解读，将前贤之思引入语文学习的多元对话中，能够拓宽学生的视野，深化学生的认识，而古人对经典的注解、评述，本身也是重要的文化遗产，既能助力解读经典，也是很好的学习资料。</p>
<ol start="5" type="1">
<li>选好、用好引入资料。如上所述，本单元的教学势必要引入一些资料。在选取资料时，要尽量兼顾不同时期、不同角度、不同观点，在资料与问题之间、资料与课文之间、资料与资料之间形成良好的支撑关系，使其相互解读、诠释、辩驳，深化学生的学习。还要注意按照教学任务和具体的教学设计来选取资料，注意其数量和深度，尽量把资料融在教学设计中，而不是简单地“掉书袋”。在必修阶段，对学生学习的深度和广度不必提过高要求，资料的选用也要适度。需要补充强调的是，古代文化经典有很高的思想文化价值，同时也不可避免地存在一定的局限性。如孟子说“无恒产而有恒心者，惟士为能。若民，则无恒产，因无恒心”，在重视“保民”的同时，又对平民百姓有一定程度的歧视。在孟子生活的年代，这样重“士”轻“民”的态度并不罕见，但在今天的教学中，对其局限性就要有明确的认识，进行批判性阅读，而批判性阅读本身就是思辨性阅读的重要形式。</li>
</ol>]]></content>
      <categories>
        <category>High School</category>
        <category>Chinese</category>
        <category>Classical Chinese Literature and Poetry</category>
      </categories>
      <tags>
        <tag>School Notes</tag>
        <tag>High School</tag>
        <tag>Chinese</tag>
      </tags>
  </entry>
  <entry>
    <title>烛之武退秦师-《左传》</title>
    <url>/2022/03/13/chinese/High%20School/Classical%20Chinese%20Literature%20and%20Poetry/%E5%BF%85%E4%BF%AE/%E7%83%9B%E4%B9%8B%E6%AD%A6%E9%80%80%E7%A7%A6%E5%B8%88-%E3%80%8A%E5%B7%A6%E4%BC%A0%E3%80%8B/</url>
    <content><![CDATA[<h2 id="课文解读">课文解读</h2>
<p>​
本文节选自《左传·僖公三十年》，是《左传》中的名篇之一。它记述的是该年（前630）九月秦、晋联合攻打郑国时发生的一场外交斗争，表现了烛之武以国家利益为重，不计个人恩怨的心胸和爱国精神，以及他机智善辩，善于利用矛盾分化瓦解敌人的外交才能。</p>
<p>​ 全文共4段。</p>
<p>​
第1段写晋、秦围郑，有其背景。文中说是“以其无礼于晋，且贰于楚也”。“无礼于晋”指的是鲁僖公二十三年（前637），晋公子重耳（后为晋文公）出亡至郑国，郑文公未以礼相待。“贰于楚”的情况则要复杂一些。鲁僖公二十八年（前632），晋国在城濮之战中大败楚国，成为中原霸主，而郑国在这场战争中出兵帮助楚国，因此与晋国结怨。城濮之战后，晋文公在践土（在今河南原阳西南，当时属郑地）大会诸侯，郑国也参加了。次年夏，晋文公派大夫狐偃（即子犯）在翟泉会盟鲁、秦、齐、陈等诸侯，重温践土之盟，但郑国这次没有前来，因此诸侯共同谋划讨伐郑国。鲁僖公三十年春，晋国已向郑国出兵，但仅仅是试探性的（根据《左传·僖公三十年》的说法，是“观其可攻与否”）。是年九月甲午，晋国联合秦国对郑国形成合围，郑国这样一个“千乘之国”陷入了“摄乎大国之间”的境地，而且已是兵临城下，危在旦夕。值得注意的是，虽然是晋、秦围郑，但主要是由于晋国想要报复郑国，与秦国自身关系不大，秦国出兵，只是由于与晋国的良好关系以及自身扩张的需要，这就为下文烛之武劝退秦军创造了可能；同时，晋、秦两国军队并未合兵一处，也为烛之武分化对手提供了有利条件。</p>
<p>​ 第2段写烛之武临危受命。</p>
<p>​
郑国军事实力远逊晋、秦，只能通过外交途径来解除危机。佚之狐向郑文公推荐了烛之武，并且认为“若使烛之武见秦君，师必退”，可见佚之狐对烛之武的了解和信任。但烛之武并未直接应允担此重任，而是先表示“臣之壮也，犹不如人；今老矣，无能为也已”，暗示自己年轻时未受重用，并流露出些许委屈、牢骚和怨愤。郑文公用人心切，立即表达了两个意思：第一，当年不用你现在来求你，确实是我不对；第二，郑国灭亡，对你也没有好处。在这种情况下，烛之武答应去见秦穆公以解郑国之围。</p>
<p>​ 第3段写烛之武劝退秦师。</p>
<p>​
烛之武见秦穆公，不在白天，不走城门，而是“夜缒而出”，进一步说明了情势之危急。而他说服秦穆公的话并不长，仅百余字，却思路清晰，有理有据。首先指出当前形势——“秦、晋围郑，郑既知亡矣”，率先示弱，表示郑国在秦、晋合围之下不堪一击，亡国在所难免，也为接下来的形势分析假设了前提一郑国灭亡后会怎样？接下来分别阐述亡郑与存郑的利弊：亡郑只是有利于晋国，秦国不但无利可图，而且只能眼看着晋国强大而自己相对被削弱；而存郑则相当于为秦国在东边设置了一个接应点和补给站，对秦国只有好处。亡郑有害无益，存郑有益无害，两相比较，利害关系已经很明朗了。在此基础上，烛之武又将矛头转向了晋国，指明晋国在历史上就曾对秦国背信弃义、两面三刀，现在也是贪得无厌，亡郑并不会是它扩张的终点，迟早也要把秦国作为吞并的目标。最后的结论是，“亡郑”是“阙秦以利晋”的行为，希望秦穆公好好考虑。在这样的说辞之下，秦穆公便转而“与郑人盟”，并派出杞子、逢孙、杨孙帮助郑国守卫，自己则返回秦国。</p>
<p>​ 第4段写晋军撤离郑国。</p>
<p>​
秦国立场的突然转变使晋国猝不及防，但晋文公没有贸然发动进攻，而是从“不仁”“不智”“不武”三个角度阐明了自己的理由，表现出清醒的头脑和理智的判断。晋军的撤退，其实也是从维护自己利益的角度出发的。“没有永恒的盟友，只有永恒的利益”，在这个故事中得到了充分的体现。</p>
<h2 id="参考资料">参考资料</h2>
<h3 id="参考译文">参考译文</h3>
<div class="classcial-chinese-literature-and-poetry-translation"><div class="paragraph"><p class="original-text">晋侯、秦伯围郑，以其无礼于晋，且贰于楚也。</p><p class="translation">晋文公和秦穆公围攻郑国，因为郑国曾对晋文公无礼，而且依附于晋的同时又亲附于楚。</p><p class="original-text">晋军函陵，秦军氾南。</p><p class="translation">晋军驻扎在函陵，秦军驻扎在氾水的南面。</p></div><div class="paragraph"><p class="original-text">佚之狐言于郑伯曰：“国危矣，若使烛之武见秦君，师必退。”</p><p class="translation">佚之狐对郑文公说：“国家危险了，如果派烛之武去见秦穆公，秦国的军队一定会撤退。”郑文公同意了。</p><p class="original-text">公从之。辞曰：“臣之壮也，犹不如人；今老矣，无能为也已。”</p><p class="translation">烛之武推辞说：“我年轻的时候，尚且不如别人；现在老了，不能干什么了。”</p><p class="original-text">公曰：“吾不能早用子，今急而求子，是寡人之过也。</p><p class="translation">郑文公说：“我没能及早重用您，现在由于情况危急因而求您，这是我的过错。</p><p class="original-text">然郑亡，子亦有不利焉！”许之。</p><p class="translation">然而郑国灭亡了，对您也不利啊！”烛之武就答应了这件事。</p></div><div class="paragraph"><p class="original-text">夜缒而出，见秦伯，曰：</p><p class="translation">在夜晚（有人）用绳子拴着烛之武从城楼上放下去，见到秦穆公，烛之武说：</p><p class="original-text">“秦、晋围郑，郑既知亡矣。</p><p class="translation">“秦、晋两国围攻郑国，郑国已经知道要灭亡了。</p><p class="original-text">若亡郑而有益于君，敢以烦执事。</p><p class="translation">如果灭掉郑国对您有好处，那就冒味地用这件事情来麻烦您。</p><p class="original-text">越国以鄙远，君知其难也，焉用亡郑以陪邻？</p><p class="translation">然而越过别国把远方的郑国作为秦国的东部边邑，您知道这是困难的，哪里用得着灭掉郑国而给邻国增加土地呢？</p><p class="original-text">邻之厚，君之薄也。</p><p class="translation">邻国的势力雄厚了，您秦国的势力就相对削弱了。</p><p class="original-text">若舍郑以为东道主，行李之往来，</p><p class="translation">如果您放弃围攻郑国而把它作为东方道路上（招待过客）的主人，外交使者来来往往，</p><p class="original-text">共其乏困，君亦无所害。</p><p class="translation">郑国可以随时供给他们缺少的资粮，对您也没有什么害处。</p><p class="original-text">且君尝为晋君赐矣，许君焦、瑕，</p><p class="translation">而且您曾经给予晋惠公恩惠，他答应给您焦、瑕这两个地方。</p><p class="original-text">朝济而夕设版焉，君之所知也。</p><p class="translation">然而他早上渡过黄河回国，晚上就修筑防御工事，这是您所知道的。</p><p class="original-text">夫晋，何厌之有？</p><p class="translation">晋国，怎么会有满足的时候呢？</p><p class="original-text">既东封郑，又欲肆其西封，若不阙秦，将焉取之？</p><p class="translation">在东边使郑国成为它的边境之后，又想扩大西边的疆界，如果不使秦国土地减少，将从哪里取得它所贪求的土地呢？</p><p class="original-text">阙秦以利晋，唯君图之。”</p><p class="translation">削弱秦国来使晋国得利，希望您考虑这件事。”</p><p class="original-text">秦伯说，与郑人盟。使杞子、逢孙、杨孙戍之，乃还。</p><p class="translation">秦伯很高兴，与郑国签订了盟约。派遣杞子、逢孙、杨孙成守郑国，就回国了。</p></div><div class="paragraph"><p class="original-text">子犯请击之。公曰：“不可。微夫人之力不及此。</p><p class="translation">晋国大夫子犯请求出兵攻击秦军。晋文公说：“不行。假如没有那个人的力量，就没有我的今天。</p><p class="original-text">因人之力而敝之，不仁；失其所与，不知；</p><p class="translation">依靠别人的力量，又反过来损害他，这是不仁义的；失掉自己的同盟者，这是不明智的；</p><p class="original-text">以乱易整，不武。吾其还也。”亦去之。</p><p class="translation">用混乱相攻取代和谐一致，是不符合武德的。我们还是回去吧。”晋军也就离开了郑国。</p></div></div>
<h3 id="参考文献">参考文献</h3>
<h4 id="烛之武退秦师赏析">《烛之武退秦师》赏析</h4>
<p>​ 这篇是春秋时代的说辞，属于刘勰《文心雕龙·论说》篇的“说”。</p>
<p>​
刘勰在文章中即以本篇为例，认为好的说辞或纵或擒，要看情势的需要。他还说，“凡说之枢要，必使时利而义贞”，“披肝胆以献主，飞文敏以济辞”，即认为说辞的关键，要对当时有利，意义正确，忠于为君，敏于成事。这些话，对烛之武的劝秦穆公退兵，完全是切合的。</p>
<p>​
先看这篇的叙事。“晋侯、秦伯围郑，以其无礼于晋，且贰于楚也。”这就指出，出兵围郑，是以晋文公为主。围郑的原因：一是郑文公得罪了晋文公；二是晋文公打败楚国称霸主，郑文公还是暗通楚国。这两个原因，都是跟晋文公有关，跟秦穆公无关。这样的叙述，就同烛之武的劝秦穆公的退兵有关。这个叙述有这样的含意。接着点明：“晋军函陵，秦军氾南。”这是说明秦晋两军分驻两地，所以烛之武去说秦穆公，晋军不会知道，无从拦阻。</p>
<p>​
接下来写郑文公派烛之武去见秦穆公，烛之武推辞，郑文公说：“然郑亡，子亦有不利焉。”这里说明，烛之武去说秦穆公，不仅是忠于君，更是忠于国，是正义的，是符合刘勰讲说辞的要求的。记下“夜缒而出”，暗示在秦军的包围下，形势紧急，不敢开城门出去。</p>
<p>​
再看烛之武的说秦穆公。先退一步，说：“秦、晋围郑，郑既知亡矣。”肯定秦晋围城的一定胜利。然后反过来说，用了四层转折：一层是郑亡以后，秦国得不到郑国，对秦国无利，所谓“越国以鄙远，君知其难也。”二层是灭亡了郑国有利于晋国，即“亡郑以陪邻”。三层是加强了晋国就削弱了秦国，即“邻之厚，君之薄也”。这三转就说明了灭亡郑国对秦国的不利。四层是放过郑国，对秦国有利，即“若舍郑以为东道主，行李之往来，共其乏困”，这是就当前的情势说的，用的是一纵一擒，一放一收。一放是肯定秦晋围城一定成功；一收是收到灭亡郑国对秦国无利，不仅无利而且有害，再收到放开郑国的好处。说到这里好像话已说完了。但烛之武还要进一步说。因为以上讲的灭亡郑国以后，对秦国无利而有害，都是推测，推测的话还没有得到证明，所以还得举出事实来做证，证明这种推测是正确的。</p>
<p>​
烛之武再引过去的事实做证。说秦穆公曾经帮助晋惠公，送他回国即位。晋惠公愿把焦、瑕两邑送给秦穆公作酬报，可是他早上渡过黄河，晚上就筑防御工事拒绝秦国，说明晋君是背恩的。从而证明秦军帮晋军灭亡郑国以后，晋国也会背恩抛弃秦国，使秦国不利。因此再作进一步推论，晋国占领了郑国，又会向西侵占秦国。说到此，才算把秦穆公说服了。这就是刘勰说的“言资悦怿”，“动言中务，顺情入机”。</p>
<p>​
这篇说辞的技巧，就在于处处装出替对方着想，分清利害，怎样跟对方不利，怎样跟对方有利。在替对方考虑时，分别轻重缓急，重的急的就在替对方考虑当前不利的方面，有什么不利，再归结到怎样才有利，再举事实来做证。烛之武还善于推进一步说，如从对秦国不利，推到有害，如说晋的背恩，从背恩推到损害秦国，一层紧一层。前面讲“亡郑以陪邻”，后面讲“阙秦以利晋”，两两相对，从无利转到有害，使论证极为有力，不容秦穆公不信。</p>
<p>​
这篇里也写出三个人物来，写郑文公，肯听佚之狐的话，相信烛之武能退秦军，是有见识的。他向烛之武道歉，提出“郑亡，子亦有不利”，激发烛之武的爱国心，见得郑文公还是有见识的。写烛之武虽不满于郑文公不看重他，但为了救国，还是用尽他的智慧去说服秦穆公，说明他是忠于国而富有智慧，善于说辞的。对秦穆公，写他背弃晋国，贪图小利，终于遭致失败，也写了晋文公不忘秦穆公对他的好处，不肯攻击盟国，是有霸主的风度的。</p>
<p>（选自《中国散文鉴赏文库·古代卷》，百花文艺出版社2001年版）</p>]]></content>
      <categories>
        <category>High School</category>
        <category>Chinese</category>
        <category>Classical Chinese Literature and Poetry</category>
      </categories>
      <tags>
        <tag>School Notes</tag>
        <tag>High School</tag>
        <tag>Chinese</tag>
      </tags>
  </entry>
  <entry>
    <title>齐桓晋文之事-《孟子》</title>
    <url>/2022/03/13/chinese/High%20School/Classical%20Chinese%20Literature%20and%20Poetry/%E5%BF%85%E4%BF%AE/%E9%BD%90%E6%A1%93%E6%99%8B%E6%96%87%E4%B9%8B%E4%BA%8B-%E3%80%8A%E5%AD%9F%E5%AD%90%E3%80%8B/</url>
    <content><![CDATA[<h2 id="课文解读">课文解读</h2>
<p>​
孟子生活的战国中期，是诸侯之间争斗不息、兼并不断的时代，“争地以战，杀人盈野；争城以战，杀人盈城”（《孟子·离娄上》）。“当是之时，秦用商君，富国强兵；楚、魏用吴起，战胜弱敌；齐威王、宣王用孙子、田忌之徒，而诸侯东面朝齐。天下方务于合纵连衡，以攻伐为贤。”（《史记·孟子荀卿列传》）孟子正是在这样的情势下见齐宣王的。齐宣王有效仿齐桓公、晋文公称霸的大欲，却没有行王政的志向和信心。要在思想上破其所有，立其所无，本来不是一件容易的事。但孟子通过亲切生动的举例，浅显恰切的设喻，明确犀利的语言，最终说动了齐宣王，并从正面提出了自己“保民而王”的政治主张。本文就是孟子与齐宣王这次谈话的记录，可分为四部分。</p>
<p>​
第一部分（开头至“是以君子远庖厨也”），指出齐桓、晋文之事不足道，提出“保民而王”的主张。齐宣王首先提出想听听齐桓、晋文之事，孟子则用“仲尼之徒无道桓文之事者”，将齐宣王的问题拨开，并提出“无以，则王乎”的话题。这是由于双方的立场、主张不一致的缘故。在齐宣王看来，齐桓、晋文是春秋时代的霸主，自己也渴望像他们那样称霸诸侯；而孟子则从儒家主张仁政的观点出发，认为武力征服的方式是野蛮的，不足取的。所以孟子提出“保民而王”的主张。齐宣王对此表示怀疑，孟子就以发生在齐宣王身上的一件事为例：某次衅钟时，齐宣王不忍看到牛的恐惧战栗之态，而提出“以羊易牛”。接着指出这个“不忍”就是“仁术”的表现，就是行王政的基础。这样既分析了齐宣王有“保民而王”的可能，打消其疑虑，也为宣扬自己的政治主张作了铺垫。</p>
<p>​
第二部分（“王说，曰……”至“王请度之”），论述齐宣王之“不王”是不为而非不能。齐宣王觉得孟子说到白己的心里了，同时提出：“此心之所以合于王者，何也？”孟子举有人能“举百钧”而不能“举一羽”，能“察秋毫”而不能“见舆薪”为例，说明“不为也，非不能也”的道理。齐宣王还不能理解，于是孟子又举“挟太山以超北海”与“为长者折枝”为例进一步说明。两问两答，两次取譬，同时进行反诘，词锋犀利，使对方明确“不王”的症结所在。</p>
<p>​
第三部分（“抑王兴甲兵……”至“其若是，孰能御之”），揭出齐宣王之大欲，论证其不可能实现，指出应当反本而行王道。孟子提出：“抑王兴甲兵，危士臣，构怨于诸侯，然后快于心与？”齐宣王说：“否，吾何快于是，将以求吾所大欲也。”孟子抓住齐王的“大欲”，连连反问，最终揭示其“欲辟土地，朝秦楚，莅中国而抚四夷”的图霸夙愿，并一针见血地指出：“以若所为，求若所欲，犹缘木而求鱼也。”又以邹人与楚人战为例，详细剖析，晓之以利害，指出只有放弃称霸的企图，反本而行王道，才能一统天下。这样，齐宣王的图霸大欲便失去了成立的基础，不得不重视孟子“保民而王”的观点了。</p>
<p>​
第四部分（“王曰：‘吾悟，不能进于是矣。……’”至结尾），归结到“保民而王”的主张，并举出实现这一主张的根本措施。经过上面的层层剖析，反复交锋，齐宣王愿意放弃图霸的主张，诚恳地接受孟子的意见。于是孟子才正面论述白己“保民而王”主张的具体内容。孟子认为老百姓“无恒心，放辟邪侈”，是因为“无恒产”；只有拥有了“恒产”，解决了生活问题，才谈得上讲礼义。其具体措施就是“五亩之宅，树之以桑”，“鸡、豚、狗、彘之畜，无失其时”，“百亩之田，勿夺其时”，在此基础上“谨庠序之教，申之以孝悌之义”，“然而不王者，未之有也”。总之，孟子反对武力征服，主张推行王道，而王道的关键在于先解决人民的生计问题，然后进行教化。这种主张渊源有自，《子路、曾皙、冉有、公西华侍坐》中即有先“足民”后“礼乐”的提法，但孟子将这种思想阐述得更为细致、具体，勾画出了一幅美好的政治蓝图一衣食无忧，守礼知义，天下归心，远人来附。然而，当时的诸侯醉心于征战杀伐、武力兼并，尽管如齐宣王、梁惠王等愿意让孟子陈述自己的主张，却没有一个统治者真正愿意践行；更何况从社会发展的角度来看，孟子的主张在当时也是难以实现的。但不得不说的是，现实中的不得施行，并不妨碍孟子的思想光耀后世，成为一代代仁人志士奋力追求的目标，成为传统文化中重要的精神资源。</p>
<h2 id="参考资料">参考资料</h2>
<h3 id="参考译文">参考译文</h3>
<div class="classcial-chinese-literature-and-poetry-translation"><div class="paragraph"><p class="original-text">齐宣王问曰：“齐桓、晋文之事，可得闻乎？”</p><p class="translation">齐宣王问（孟子）说：“齐桓公、晋文公称霸的事，您可以讲给我听吗？”</p></div><div class="paragraph"><p class="original-text">孟子对曰：“仲尼之徒，无道桓、文之事者，是以后世无传焉，臣未之闻也。无以，则王乎？”</p><p class="translation">孟子回答说：“孔子这些人中没有讲述齐桓公、晋文公的事的人，因此后世没有流传，我没有听说过这些事。如果一定要说一说，那么还是说说行王道的事吧！”</p></div><div class="paragraph"><p class="original-text">曰：“德何如则可以王矣？”</p><p class="translation">（齐宣王）说：“要有什么样的德行，才可以称王于天下呢？”</p></div><div class="paragraph"><p class="original-text">曰：“保民而王，莫之能御也。”</p><p class="translation">（孟子）说：“安养民众才能称王于天下，没有人可以抵御他。”</p></div><div class="paragraph"><p class="original-text">曰：“若寡人者，可以保民乎哉？”</p><p class="translation">（齐宣王）说：“像我这样的人，可以安养百姓吗？”</p></div><div class="paragraph"><p class="original-text">曰：“可。”</p><p class="translation">（孟子）说：“可以。”</p></div><div class="paragraph"><p class="original-text">曰：“何由知吾可也？”</p><p class="translation">（齐宣王）说：“从哪儿知道我可以呢？”</p></div><div class="paragraph"><p class="original-text">曰：“臣闻之胡龁曰：‘王坐于堂上，有牵牛而过堂下者，王见之，曰：“牛何之？”对曰：“将以衅钟。”（孟子）说：“我听胡龁说：您坐在大殿上，有个牵牛从殿下走过的人，您看见他，问道：‘牛牵到哪里去？’那人回答说：‘准备用它的血涂钟行祭。’</p><p class="translation">undefined</p></div><div class="paragraph"><p class="original-text">王曰：“舍之！吾不忍其觳觫，若无罪而就死地。”对曰：“然则废衅钟与？”曰：“何可废也，以羊易之。”’不识有诸？”</p><p class="translation">您说：‘放了它！我不忍心看到它恐惧战栗的样子，没有罪过却走向死地。’（那人问）道：‘既然这样，那么需要废弃涂钟行祭的仪式吗？’您说：‘怎么可以废除呢？用羊来换它吧。’不知道有没有这件事？”</p></div><div class="paragraph"><p class="original-text">曰：“有之。”</p><p class="translation">（齐宣王）说：“有这件事。”</p></div><div class="paragraph"><p class="original-text">曰：“是心足以王矣。百姓皆以王为爱也，臣固知王之不忍也。”</p><p class="translation">（孟子）说：“这样的心就足以称王于天下了。百姓都认为大王吝惜（一头牛），而我确实知道您是（出于）于心不忍。”</p></div><div class="paragraph"><p class="original-text">王曰：“然，诚有百姓者。齐国虽褊小，吾何爱一牛？即不忍其觳觫，若无罪而就死地，故以羊易之也。”</p><p class="translation">齐宣王说：“是的。的确有这样（对我有误解）的百姓。齐国虽然土地狭小，我又何至于齐惜一头牛？就是因为不忍看它那恐惧战栗的样子，没有罪过却要走向死地，因此用羊去换它。”</p></div><div class="paragraph"><p class="original-text">曰：“王无异于百姓之以王为爱也。以小易大，彼恶知之？王若隐其无罪而就死地，则牛羊何择焉？”</p><p class="translation">（孟子）说：“您不要对百姓认为您吝啬感到奇怪。以小的动物换下大的动物，（您的用心）他们怎么知道呢？您如果哀怜它没有罪过却要走向死地，那么牛和羊有什么区别呢？”</p></div><div class="paragraph"><p class="original-text">王笑曰：“是诚何心哉！我非爱其财而易之以羊也，宜乎百姓之谓我爱也。”</p><p class="translation">齐宣王笑着说：“这究竟是一种什么想法呢？我不是因为吝惜钱财才用羊换掉牛的，（您这么一说）老百姓说我吝啬是理所应当的啊。”</p></div><div class="paragraph"><p class="original-text">曰：“无伤也，是乃仁术也！见牛未见羊也。君子之于禽兽也：见其生，不忍见其死；闻其声，不忍食其肉。是以君子远庖厨也。”</p><p class="translation">（孟子）说：“没有关系，这就是仁道！（原因在于您）看到了牛而没看到羊。君子对于飞禽走兽，看见它活着，便不忍心看它死；听到它的声音，便不忍心吃它的肉。因此君子把厨房设在远离自己的地方。”</p></div><div class="paragraph"><p class="original-text">王说曰：“《诗》云：‘他人有心，予忖度之。’夫子之谓也。</p><p class="translation">齐宣王高兴了，说：“《诗》说：‘别人有什么心思，我能够揣测到。’（这话）说的就是先生（您这样的人）啊。</p><p class="original-text">夫我乃行之，反而求之，不得吾心；夫子言之，于我心有戚戚焉。此心之所以合于王者何也？”</p><p class="translation">我这样做了，回头再去想它，想不出是为什么。先生您说这些，对于我的心真是有所触动啊！这种心思之所以符合王道的原因，是什么呢？”</p></div><div class="paragraph"><p class="original-text">曰：“有复于王者曰：‘吾力足以举百钧，而不足以举一羽；</p><p class="translation">（孟子）说：“（假如）有人向大王报告说：‘我的力气足以举起三千斤，却不能够举起一根羽毛；</p><p class="original-text">明足以察秋毫之末，而不见舆薪。’则王许之乎？”</p><p class="translation">眼力足以看清鸟兽秋天生的纤细羽毛的尖端，却看不到整车的柴草。’那么，大王您认可这个观点吗？”</p></div><div class="paragraph"><p class="original-text">曰：“否！”</p><p class="translation">（齐宣王）说：“不。”</p></div><div class="paragraph"><p class="original-text">“今恩足以及禽兽，而功不至于百姓者，独何与？</p><p class="translation">（孟子说）“如今您的恩德足以推及禽兽，而功效达不到百姓身上，却是为什么呢？</p></div><div class="paragraph"><p class="original-text">然则一羽之不举，为不用力焉；舆薪之不见，为不用明焉；百姓之不见保，为不用恩焉。故王之不王，不为也，非不能也。”</p><p class="translation">这样看来，举不起一根羽毛，是不用力气的缘故；看不见整车的柴草，是不用目力的缘故；老百姓没有受到爱护，是不肯布施恩德的缘故。所以，大王您不能以王道统一天下，是不肯做，而不是做不到。”</p></div><div class="paragraph"><p class="original-text">曰：“不为者与不能者之形，何以异？”</p><p class="translation">（齐宣王）说：“不肯做与做不到的表现有什么区别？”</p></div><div class="paragraph"><p class="original-text">曰：“挟太山以超北海，语人曰：‘我不能。’是诚不能也。</p><p class="translation">（孟子）说：“挟着泰山越过北海，告诉别人说：‘我做不到。’这确实做不到。</p><p class="original-text">为长者折枝，语人曰：‘我不能。’是不为也，非不能也。</p><p class="translation">为长者按摩肢体，告诉别人说：‘我做不到。’这是不肯做，而不是做不到。</p><p class="original-text">故王之不王，非挟太山以超北海之类也；王之不王，是折枝之类也。”</p><p class="translation">所以说大王不能以王道统一天下，不属于挟泰山越过北海这一类的事；大王不能以王道统一天下，属于为长者按摩肢体一类的事。"</p><p class="original-text">“老吾老，以及人之老；幼吾幼，以及人之幼；天下可运于掌。</p><p class="translation">“敬爱自家的老人，从而推广到（敬爱）别人家的老人；爱护白家的小孩，从而推广到（爱护）别人家的小孩：（照这样去做）天下可以在手掌上转动。</p><p class="original-text">诗云：‘刑于寡妻，至于兄弟，以御于家邦。’言举斯心加诸彼而已。</p><p class="translation">《诗》说：‘给自已的妻子做榜样，推广到兄弟，进而治理好一家一国。’这是说拿这样的心加到别人身上罢了。</p><p class="original-text">故推恩足以保四海，不推恩无以保妻子。</p><p class="translation">所以，推广恩德足以安定天下，不推广恩德连妻子儿女都安抚不了；</p><p class="original-text">古之人所以大过人者，无他焉，善推其所为而已矣！</p><p class="translation">古代圣人大大超过别人的原因，没有别的，善于推广他们的好行为罢了。</p><p class="original-text">今恩足以及禽兽，而功不至于百姓者，独何与？权，然后知轻重；度，然后知长短。</p><p class="translation">如今（您的）恩德足以推及禽兽，而功效达不到百姓身上，却是为什么呢？称了，才能知道轻重；量了，才能知道长短。</p><p class="original-text">物皆然，心为甚。王请度之。抑王兴甲兵，危士臣，构怨于诸侯，然后快于心与？”</p><p class="translation">任何事物都是如此，人心更是这样。请您考虑一下吧！“还是说（大王）您发动战争，使军士臣下受到危害，与各诸侯国结怨，然后才心里痛快吗？”</p></div><div class="paragraph"><p class="original-text">王曰：“否，吾何快于是！将以求吾所大欲也。”</p><p class="translation">齐宣王说：“不是的，我怎么会这样做才痛快呢？我是打算用这样的方式求得我最想要的东西。”</p></div><div class="paragraph"><p class="original-text">曰：“王之所大欲，可得闻与？”</p><p class="translation">（孟子）说：“您最想要的东西是什么，（我）可以听听吗？”</p></div><div class="paragraph"><p class="original-text">王笑而不言。</p><p class="translation">齐宣王只是笑却不说话。</p></div><div class="paragraph"><p class="original-text">曰：“为肥甘不足于口与？轻暖不足于体与？抑为采色不足视于目与？</p><p class="translation">（孟子）说：“是因为美味的食物不够吃？又轻又暖的衣服不够穿？还是因为绚丽的颜色不够看？</p><p class="original-text">声音不足听于耳与？便嬖不足使令于前与？王之诸臣，皆足以供之，而王岂为是哉！”</p><p class="translation">美妙的音乐不够听？左右受宠爱的人不够使唤？（这些）您的大臣们都能充分地提供给您，难道您是为了这些吗？”</p></div><div class="paragraph"><p class="original-text">曰：“否，吾不为是也。”</p><p class="translation">（齐宣王）说：“不是的，我不是为了这些。”</p></div><div class="paragraph"><p class="original-text">曰：“然则王之所大欲可知已：欲辟土地，朝秦、楚，莅中国，而抚四夷也。以若所为，求若所欲，犹缘木而求鱼也。”</p><p class="translation">（孟子）说：“那么，大王所最想要的东西就可知道了：是想开拓疆土，使秦、楚来朝拜，统治中原地区，安抚四方的少数民族。（但是）以这样的做法，去谋求这些想要的东西，就像爬到树上去找鱼。”</p></div><div class="paragraph"><p class="original-text">王曰：“若是其甚与？”</p><p class="translation">齐宣王说：“真的像（您说的）这么严重吗？”</p></div><div class="paragraph"><p class="original-text">曰：“殆有甚焉。缘木求鱼，虽不得鱼，无后灾；</p><p class="translation">（孟子）说：“恐怕比这还严重。爬到树上去找鱼，虽然找不到鱼，却没有什么后祸；</p><p class="original-text">以若所为，求若所欲，尽心力而为之，后必有灾。”</p><p class="translation">假使以这样的做法，去谋求这些想要的东西，又尽心尽力地去做，此后必然有灾祸。”</p></div><div class="paragraph"><p class="original-text">曰：“可得闻与？”</p><p class="translation">（齐宣王）说：“可以让我听听吗？”</p></div><div class="paragraph"><p class="original-text">曰：“邹人与楚人战，则王以为孰胜？”</p><p class="translation">（孟子）说：“（如果）邹国人和楚国人打仗，那大王认为谁会胜呢？”</p></div><div class="paragraph"><p class="original-text">曰：“楚人胜。”</p><p class="translation">（齐宣王）说：“楚国人会胜。”</p></div><div class="paragraph"><p class="original-text">曰：“然则小固不可以敌大，寡固不可以敌众，弱固不可以敌强。</p><p class="translation">（孟子）说：“那么（可见）小国本来不可以与大国为敌，人少的国家本来不可以与人多的国家为敌，弱国本来不可以与强国为敌。</p><p class="original-text">海内之地，方千里者九，齐集有其一；以一服八，何以异于邹敌楚哉！</p><p class="translation">天下的土地，纵横各一千多里的国家有九个，齐国的土地总算起来也只有其中的一份；以一份力量去降服八份，这与邹国和楚国打仗有什么不同呢？</p><p class="original-text">盖亦反其本矣！今王发政施仁，使天下仕者皆欲立于王之朝，耕者皆欲耕于王之野，</p><p class="translation">为什么不回到根本上来呢？（如果）您现在发布政令施行仁政，使得天下当官的都想到您的朝廷来做官，种田的都想到您的田野来耕作，</p><p class="original-text">商贾皆欲藏于王之市，行旅皆欲出于王之途，天下之欲疾其君者，皆欲赴诉于王：其若是，孰能御之？”</p><p class="translation">做生意的都想（把货物）储存在您的市场上，旅行的人都想在大王的道路上行走，各国那些憎恨他们君主的人都想跑来向您诉说。如果像这样，谁还能抵挡呢？”</p></div><div class="paragraph"><p class="original-text">王曰：“吾惛，不能进于是矣！愿夫子辅吾志，明以教我。我虽不敏，请尝试之！”</p><p class="translation">齐宣王说：“我糊涂，不能达到这一步。希望先生您帮助（实现）我的志愿，明白地指教我。我虽然愚钝，请让我试一试。”</p></div><div class="paragraph"><p class="original-text">曰：“无恒产而有恒心者，惟士为能。</p><p class="translation">（孟子）说：“没有可以长久维持生活的固定财产却有长久不变的善心，只有有道德操守的读书人才能做到，</p><p class="original-text">若民，则无恒产，因无恒心。苟无恒心，放辟邪侈，无不为已。</p><p class="translation">至于普通百姓，没有固定的产业，因而就没有长久不变的心。如果没有长久不变的心，就会不遵守礼义法度，无所不为。</p><p class="original-text">及陷于罪，然后从而刑之，是罔民也。焉有仁人在位，罔民而可为也！</p><p class="translation">等到犯了罪，然后接着就加以处罚，这样做是陷害百姓。哪有仁爱的人在位，却可以做这种陷害百姓的事呢？</p><p class="original-text">是故明君制民之产，必使仰足以事父母，俯足以畜妻子，乐岁终身饱，凶年免于死亡；然后驱而之善，故民之从之也轻。</p><p class="translation">所以英明的君主规定百姓的产业，一定使他们上能赡养父母，下能养活妻子儿女；丰年能够温饱，荒年也不至于饿死。然后驱使他们向善，所以老百姓很容易地跟着国君走。</p><p class="original-text">今也制民之产，仰不足以事父母，俯不足以畜妻子，乐岁终身苦，凶年不免于死亡；此惟救死而恐不赡，奚暇治礼义哉！</p><p class="translation">如今，规定人民的产业，上不足以赡养父母，下不能养活妻子儿女，丰年也总是生活在困苦之中，荒年免不了要饿死。这样，只是使自己摆脱死亡还不足以做到，哪里还顾得上讲求礼义呢？</p><p class="original-text">王欲行之，则盍反其本矣！五亩之宅，树之以桑，五十者可以衣帛矣；</p><p class="translation">大王真想施行仁政，为什么不回到根本上来呢：（给每家）五亩地的住宅，种上桑树，五十岁的人就可以穿丝织的衣服了；</p><p class="original-text">鸡豚狗彘之畜，无失其时，七十者可以食肉矣；</p><p class="translation">鸡、小猪、狗、大猪这些家备，不错过（喂养繁殖的）时节，七十岁的人就可以吃上肉了；</p><p class="original-text">百亩之田，勿夺其时，八口之家，可以无饥矣；</p><p class="translation">一百亩的田地，不耽误农时，八口人的家庭就可以不挨饿了；</p><p class="original-text">谨庠序之教，申之以孝悌之义，颁白者不负戴于道路矣。</p><p class="translation">重视学校教育，反复地用孝顺父母、尊重兄长的道理开导他们，头发斑白的老人便不会再背着、顶着东西在路上走了。</p><p class="original-text">七十者衣帛食肉，黎民不饥不寒，然而不王者，未之有也。”</p><p class="translation">老年人能穿丝帛、吃上肉，老百姓不挨饿受冻，如果这样还不能以王道统一天下，是没有的事情。”</p></div></div>
<h3 id="参考文献">参考文献</h3>
<h4 id="齐桓晋文之事赏析-appreciation_of_qihuanjinwenzhishi">《齐桓晋文之事》赏析
<span class="citation" data-cites="Appreciation_of_Qihuanjinwenzhishi">[@Appreciation_of_Qihuanjinwenzhishi]</span></h4>
<p>​
这是《孟子》七篇中少数千字以上的长文之一。虽然形式上全属对话，实际上却是一篇论点鲜明、论据充分、论证严密的政论文。它全面、集中地反映了孟子的王道思想，即行仁政、“保民而王”的政治主张，也充分体现了孟子善辩、善譬的语言艺术和纵横捭阖的文章气势，是《孟子》的代表作品之一。兹举其要者予以鉴赏。</p>
<h5 id="高屋建瓴片言居要">1. 高屋建瓴，片言居要。</h5>
<p>​
战国时代，列强纷争，以征伐为能事，都想以武力兼并别国，于是就出现“争地以战，杀人盈野，争城以战，杀人盈城”（《孟子·离娄上》）的惨烈局面，给人民带来严重的灾难。而齐国在东方诸侯中又号称强国，齐宣王之父威王曾两次大败魏军（一为前353，于桂陵；一为前341，于马陵），并以善于纳谏著称，有“战胜于朝廷”之誉（《邹忌讽齐王纳谏》）。宣王本人也曾攻破燕国都城（前314），威震诸侯；并且继承其父威王遗业，在稷下（齐都城临淄稷门附近地区）扩置学宫，招揽文学、游说之士数千人，任其讲学议论。孟子这时也正以客卿身份在齐宣王身边供职。宣王野心勃勃，很想凭武力称霸中原，所以劈头就问孟子“齐桓晋文”之事，其用心至为明显。但是孟子是极端鄙视霸道的，曾说“五霸者，三王之罪人也”（《孟子·告子下》）。他从维护统治阶级的根本利益和长远利益出发，高瞻远瞩，独倡王道，意在反对暴政，反对战争，提倡仁爱，提倡礼义，借以缓和矛盾，发展生产，从而达到天下统一、长治久安的目的。这是符合当时人民的愿望的，也表现出孟子对在死亡线上挣扎的人民的深切同情。现在面对宣王的问题，该如何回答呢？桓文之事，孟子并非真的不知（在《论语》和《孟子》两书的其他篇章中都有所评价），而是不愿讲，不屑讲；可是如果直接这样回答，那么谈话就无法再进行下去，而孟子要想说服宣王行王道的意图更是无法实现。于是孟子一方面保持他的“说大人则藐之，勿视其巍巍然”（《孟子·尽心下》）的豪迈气概，另一方面又巧妙地采用“求同”的战术，设法把对方引入自己所要劝说的范围之内。他用“仲尼之徒无道桓文之事者，是以后世无传焉，臣未之闻也”的话，就轻轻把宣王的问题推掉；接着又用“无以，则王乎”一语，把问题拉到自己铺设的轨道上来：真有一种高屋建瓴之势。尽管宣王对王道并不热心，可是他有“辟土地，朝秦楚，莅中国而抚四夷”的大欲，也就是说，希图能够统一天下，而行王道可以不战而统一天下，这“统一天下”，正是孟子所要“求”的“同”；宣王也想听听，于是又有“德何如则可以王矣”的再问。孟子及时抓住这个机会，用极其明确、斩钉截铁的语言提出自己的政治观点—“保民而王，莫之能御也”，并以此作为全篇立论的总纲，真乃“立片言而居要，乃一篇之警策”（陆机《文赋》）。孟子的这一观点，正是他的“民贵君轻”“得民心斯得天下”的民本思想的体现，是具有一定的进步意义的。</p>
<h5 id="因势利导层层紧逼">2. 因势利导，层层紧逼。</h5>
<p>​
孟子是很善于根据对方心理，因势利导地进行说理的。孟子深知宣王虽然颇有兴趣地问“若寡人者，可以保民乎哉”，可是实际上宣王非但没有“保民”的行动，甚至连“保民”的念头过去也根本没有动过。因此，如果在这时就直接向宣王宣传“保民”的做法，是根本没有基础的。在论辩上就不能求速胜（欲速则不达），而应采用因势利导、由近及远、由小及大，欲擒故纵、步步紧逼、穷追不舍的方法，以求全胜。请看文中四大论辩回合的表现。</p>
<p>​
首先，帮助宣王树立起“保民而王”的信心。谁都知道，善于发掘对方的长处，也就容易讨得对方的欢心。在这一回合中，孟子抓住“以羊易牛”这件小事，抓住宣王说过“吾不忍其觳觫”这句话，大做其文章，先肯定宣王有不忍之心，而此心正是能“保民而王”的基础。但孟子并不满足于自己来下结论，于是又借“百姓皆以王为爱（吝惜）”这一误解，并特意强调“以小易大”，让宣王陷入窘境。这时“王笑曰”的“笑”，乃是一种无可奈何、自我解嘲的笑。接着孟子代为辩解，帮他摆脱困境，肯定“是乃仁术”，并且说不光你宣王是这样，君子也都是这样。这就使得宣王十分高兴，把孟子看成是“深知我心”的人。经过这样一擒一纵，孟子不仅向宣王宣传了有了“不忍之心”就可以“保民而王”的道理，而且博得了宣王的欢心，大大缩短了彼此的思想距离，取得了第一回合的胜利。</p>
<p>​
其次，解决宣王主观上“为”与“不为”的思想矛盾。宣王被孟子说动了，但还是不明白为什么不忍之心“合于王”的道理，说明他的思想基础仍很薄弱，他的思想矛盾还是没有解决。如果这时就直接告以“老吾老”“幼吾幼”的推恩方法，那只能是一种生硬的灌输，效果肯定不佳。必须首先解决他思想上的矛盾，使他明确意识到自己完全能够做到“保民而王”，目前之所以未能做到，“是不为也，非不能也”。于是孟子连续用了三个贴切生动的比喻，由小及大，由此及彼，让宣王自己开动脑筋，既作出了否定判断，又提出了问题；然后亮出主旨：“百姓之不见保，为不用恩”，即不能“推恩”。因为按照儒家说法，仁爱是有等级的，先“亲亲”，后“仁民”，最后才是“爱物”。现在宣王既能“爱物”，那理应能够“仁民”了。这样，就打消了宣王的畏难情绪，调动了他行王道的勇气。在这基础上再正面说理，应该如何推恩，推恩的好处，不推恩的害处，并以古人为榜样，鼓励宣王效法古人，语重心长地请宣王深思猛省。至此，宣王除了默认之外，已无话可说，孟子又取得第二回合的胜利。</p>
<p>​
再次，排除宣王“保民而王”的巨大障碍。孟子深知此时的宣王，虽然理性上已不得不承认王道学说是有道理的。但是他的灵魂深处还存在以战图霸、凭武力统一天下的幻想，而这是行王道的巨大障碍。“不破不立，不塞不流”，因此，孟子主动挑起第三回合的论辩，以便把问题讲深讲透，将障碍排除。这里，孟子又采用了欲擒故纵的迂回战术，避免一上来就正面强攻，直接点穿。他故作不知，反复设问，旁敲侧击，先逼出宣王自己说“将以求吾所大欲”，再逼出宣王自己说“吾不为是也”，在这基础上，才以排山倒海、不容申辩的气势，连用“辟土地，朝秦楚”等四个排比短语，揭示了宣王“大欲”的实质；紧跟着，用“缘木求鱼”作喻，点出图霸根本不可能实现，让宣王死了这条心。但宣王还是不死心，认为孟子言过其实。孟子干脆乘胜追击，强调指出“缘木求鱼”，只是徒劳无功，而以武力图霸，将招惹灾祸。为使宣王心服，再用“邹与楚战”作喻，点明胜负、强弱之理。至此，宣王也不得不承认孟子所说是完全正确的。破了以后就得立，最后孟子又用一连串排比句从正面为宣王描绘了一幅“发政施仁”以后的美好图景，与上文形成鲜明对比。这正打中了宣王好大喜功之心，宣王不得不为之心折，说了一番诚恳请教的话，表示愿意试行“王道”。通过第三回合的论辩，孟子才完全取得胜利。</p>
<p>​
最后，向宣王阐述“保民而王”的施政纲领。在宣王虚心求教、愿意试行的基础上，孟子这才拿出他的一整套施政纲领来。这个纲领的要点有二：一是“制（规定）民之产”（富民），二是“谨庠序之教”（教民）。先使民“仰事俯畜”无虞（即达到温饱水平），这是“王道之始”；再使民懂得礼义，这是“王道之成”。在孟子看来，除士之外，一般百姓没有“恒产”就没有“恒心”，也就没法讲求仁义（与管子《牧民》所说“仓廪实则知礼节，衣食足则知荣辱”之意有相近之处）。这里虽然存在着封建士大夫鄙视劳动人民的不正确成分，但是这一看法，已初步接触到社会存在与社会意识的关系问题，具有朴素的唯物主义成分，在当时应该说是一种进步的观点。</p>
<p>​
当然，孟子的“王道”主张，最终还是寄托在封建统治者肯发善心并懂得推恩的基础上，在战国列强纷争的情况下，这只能是一种不切实际的幻想。正因为如此，所以孟子虽能言善辩，说得齐宣王口服心服，但事后宣王并没有真正采纳孟子的主张并付诸实施。孟子在齐国待了几年，也曾多次企图说服宣王行王道，但始终不得志，结果只能悻悻离去。</p>
<p>​
但从论辩的角度说，孟子确实不愧为大手笔。本文先后有序，环环相扣：王天下的关键在乎保民；保民的前提是要有不忍之心；不忍之心要不断发扬推广，即善于推恩；推恩的具体表现是摈弃武力征战，重视富民、教民。真好比一路斩关夺隘，最终直捣黄龙，值得认真体会学习。</p>
<h5 id="比喻精当气势磅礴">3. 比喻精当，气势磅礴。</h5>
<p>​
在先秦诸子的著作中，多数善于运用寓言、比喻来阐明抽象、深奥的道理，而孟子的文章尤为突出。汉代赵岐在《孟子题辞》中说孟子的文章“长于比喻，辞不迫切，而意以独至”，是颇有道理的。</p>
<p>​
本文多处运用比喻来说理，在第2部分的论述中已有涉及，现再举几例。如“不为者与不能者之形何以异”，这个问题要想正面回答是很困难的，但孟子用“挟太山以超北海”“为长者折枝”这两个夸张性比喻，就把“不为”与“不能”的区别一下子端在对方面前。又如用“天下可运于掌”比喻懂得推恩，天下就很容易治理，真是简练鲜明之至！再如，用武力争霸天下的困难与危害，是个很复杂的问题，但孟子用了“缘木求鱼”“邹与楚战”两喻，就把道理说得十分清楚；更妙的是“邹与楚战”一喻，让宣王自己先得出“楚人胜”的结论，这样，宣王企图“以一服八”的谬误也就不言自明了。</p>
<p>​
全文采用层层推进的方法来论辩、说理，就如长江大河，一泻千里，浩浩荡荡，势不可当。特别是文中多次使用了排比句，极尽铺排之能事，读来气势磅礴，音调铿锵，具有很强的说服力与感染力。此外，如“今恩足以及禽兽，而功不至于百姓者，独何与”的反复逼问（前一问偏于疑，偏于责，后一问则偏于启发与期望），“盖亦反其本矣”“则盍反其本矣”的两次呼告，都如见其色，如闻其声，语意关切，令人心动。唐代古文运动倡导者韩愈曾说：“气盛则言之短长与声之高下者皆宜。”（《答李翊书》）欣赏孟子的文章，对韩愈这句话，就会体会得具体而深刻了。</p>
<p>（选自《古文鉴赏辞典》上册，上海辞书出版社2014年版）</p>]]></content>
      <categories>
        <category>High School</category>
        <category>Chinese</category>
        <category>Classical Chinese Literature and Poetry</category>
      </categories>
      <tags>
        <tag>School Notes</tag>
        <tag>High School</tag>
        <tag>Chinese</tag>
      </tags>
  </entry>
  <entry>
    <title>劝学-荀子</title>
    <url>/2022/03/13/chinese/High%20School/Classical%20Chinese%20Literature%20and%20Poetry/%E5%BF%85%E4%BF%AE/%E5%8A%9D%E5%AD%A6-%E8%8D%80%E5%AD%90/</url>
    <content><![CDATA[<h2 id="课文解读">课文解读</h2>
<p>​
《劝学》是《荀子》中的第一篇，原文较长。课文节选的这四段是长期以来中学语文教材中的经典选段，虽然在原文中并不前后相连，但是语意连贯，说理透彻，可以看作是独立的篇章。</p>
<p>​
荀子在自己的著作中首倡“劝学”，而且在开篇第一句就提出“学不可以已”，这与他的哲学思想是密切相关的。与孟子的“性善论”相对，荀子提出“性恶论”，认为人的本性是“恶”，故强调道德教育的必要性，强调后天学习的重要性，因而重视“求贤师”“择良友”以使人改“恶”为“善”。这大概是荀子开篇即鼓励学习的主要原因。</p>
<p>​
课文首先提出“学不可以已”这个观点，足见学习的意义重大。以下则从学习的意义、作用、方法和态度等方面，有条理、有层次地加以阐述。</p>
<p>​
对于“学不可以已”这个中心论点，教师可以在学生通读全文后让他们思考：为什么荀子强调学习不可以停止？这是否相当于今天我们说的终身学习（就是任何时间、任何地点都要学习，不能停下来）？学生应该能够理解到，荀子所以这样讲，大概就是下面说的，一是因为学习有重要的意义和作用，能够提高自己、改变自己；二是因为从方法和态度上来说，都要有恒心，“锲而不舍”。</p>
<p>​ 作者在第 2
段连用五个比喻论述学习的重大意义。“青”胜于“蓝”，“冰”寒于“水”，说明客观事物经过一定的变化过程，可以有所改变、有所提高，比喻任何人通过发愤学习，都能进步，甚至超越自我。“木”为“轮”，强调后天的影响能够改变事物的本性，即从某种意义上说，学习对于后天成长起着决定性的作用，这就进一步深化了思考。再用“木受绳则直，金就砺则利”引出结论，说明“君子博学而日参省乎己”的重要性，特别是“日”字的使用，有力地回应了开篇的观点：学不可以已。学习时，不仅要让学生理解这些比喻，同时还要能分析这些比喻是如何层层推进论证的，从而体会课文论证的严密性，提高学生的思维品质。</p>
<p>​ 第 3
段，进而论述学习的作用。先用一个小句说明“终日思”与“须臾学”的关系，强调空想不如学习。这里的“学”应该是指利用外界事物，从生活实践中学习，从而改变人性“恶”的本质。接着，文章连用五个生活中的例子展开论证：“登高之博见”，“登高而招”，“顺风而呼”，“假舆马者”，“假舟楫者”，这些都没有体质的改变，却取得了好的效果，原因是登高、顺风、假舆马、假舟楫，也就是善于利用外界条件。随着不断设喻，道理越来越清晰，于是水到渠成地得出结论：“君子生非异也，善假于物也。”根据这个道理可以推论，君子的本性与一般人本没有差别，而君子之所以能成为君子，就是由于他们善于利用外物，这个外物其实就是“学习”这件事本身，也就是通过学习来弥补自己的不足。</p>
<p>​ 第 4
段，论述学习的方法和态度，强调要逐步积累，坚持不懈，专心致志。先通过正面设喻，积土成山可以兴风雨，积水成渊可以生蛟龙，由此推论，君子积善成德就可以具备圣人的智慧和思想。强调“积”，这也和“学不可以已”的观点是一脉相承的。接着从反面设喻，说明“不积”，就不能“至千里”“成江海”，就没有功效。正反对照，“积”与“不积”，效果完全不同，从而证明，人们掌握智慧、培养品德的过程，是一个逐步极积累、逐步发展、积少成多、由量变到质变的过程。和“积”与“不积”对应，还有一个“舍”与“不舍”的问题。所以，作者继续设喻阐述自己的观点，说明不仅要积累，还要坚持不懈。骐骥与驽马，朽木与金石，“舍”则“不能十步”“朽木不折”，“不舍”则“驽马十驾”“金石可镂”，所以成功与否的关键在于“舍”与“不舍”。在苟子看来，人们学习，如果一曝十寒，时学时辍，再简单的知识也学不会；如果能持之以恒，即使再艰深的知识也可以获得。所以，他再次以蚯蚓的“用心一”和螃蟹的“用心躁”进行对比，说明学习必须专心致志，才能获得成功。从积累到坚持不懈，再到用心专一，既是学习的方法，又是学习应该持有的态度，层层深入，进一步深化了对“学不可以已”这一观点的认识。</p>
<p>​
文章条理清晰，论述严密。全文围绕“学不可以已”展开论述，指出学习的意义在于改变自己、发展自己、提高自己，阐述学习的作用在于弥补不足、助力自己做到更好，而要做到这些，就要有贵在积累、重在坚持、用心专一等好的学习方法和态度。文章基本上每段阐述一个问题，一般都是先提出观点，然后从不同角度使用比喻进行论述，最后再照应白己的观点。阅读时，可以引导学生关注这一特点，学习这样的论述方法，并有意识地运用于自己的表达实践。</p>
<p>​
本文在写作上的最主要特色是，善用比喻阐述道理。全文除少数地方直接说明道理外，几乎都是比喻。有时用同类事物设喻，从相同的角度反复说明问题，强调观点，如登高而招、顺风而呼，假舆马、假舟楫，积土成山、积水成渊。有时将两种相反的情况组织在一起，形成鲜明的对照，让读者从中明白道理，如骐骥与驽马，朽木与金石，蚯蚓与螃蟹。有的比喻，单说比喻而将道理隐含其中，让读者思考，如“青出于蓝”“冰寒于水”。有的先设比喻，再引出道理，如“登高而招，臂非加长也，而见者远”，“假舟楫者，非能水也，而绝江河”。有的先设比喻，引出道理后，再用另外的比喻进一步论述。如先用“积土成山”“积水成渊”设喻，引出“积善成德，而神明自得，圣心备焉”的道理，再用“不积跬步”“不积小流”作进一步论述。总之，设喻贴近生活，形式灵活多样，内容各有侧重，句式也富于变化，明白易懂，毫无板滞之感。</p>
<h2 id="参考资料">参考资料</h2>
<h3 id="参考译文">参考译文</h3>
<div class="classcial-chinese-literature-and-poetry-translation"><div class="paragraph"><p class="original-text">君子曰：学不可以已。</p><p class="translation">君子说：学习不可以停止。</p></div><div class="paragraph"><p class="original-text">青，取之于蓝，而青于蓝；冰，水为之，而寒于水。</p><p class="translation">靛青从蓝草中取得，但比蓝草颜色深；冰由水凝冻而成，但比水冷。</p><p class="original-text">木直中绳，（车柔）以为轮，其曲中规。</p><p class="translation">木材直得合乎木匠用来取直的墨线，如果用火烘烤使它弯曲做成车轮，它的弯度就可以合乎圆规。</p><p class="original-text">虽有槁暴，不复挺者，（车柔）使之然也。</p><p class="translation">即使又晒干了，也不会再变直，这是因为火的烘烤使它弯曲成这样。</p><p class="original-text">故木受绳则直，金就砺则利，君子博学而日参省乎己，则知明而行无过矣。</p><p class="translation">所以木材经过墨线比量就直了，金属刀具在磨刀石上磨过就锋利了，君子广泛地学习而且每天对自己检查、省察，就能见识明达，行动不犯错误了。</p></div><div class="paragraph"><p class="original-text">吾尝终日而思矣，不如须臾之所学也；</p><p class="translation">我曾经整日思索，却不如学习片刻收获大；</p><p class="original-text">吾尝跂而望矣，不如登高之博见也。</p><p class="translation">我曾经踮起脚后跟眺望，却不如登上高处看得广阔。</p><p class="original-text">登高而招，臂非加长也，而见者远；顺风而呼，声非加疾也，而闻者彰。</p><p class="translation">登高招手，手臂并没有加长，但远处的人也能看见；顺着风呼喊，声音并没有更加疾劲，但听的人会听得清楚。</p><p class="original-text">假舆马者，非利足也，而致千里；假舟楫者，非能水也，而绝江河。</p><p class="translation">借助车马的人，并非善于奔走，却能远达千里；借助船只的人，并非善于游泳，却能横渡江河。</p><p class="original-text">君子生非异也，善假于物也。</p><p class="translation">君子的天性同一般人没有差别，只是善于借助外物罢了。</p></div><div class="paragraph"><p class="original-text">积土成山，风雨兴焉；积水成渊，蛟龙生焉；</p><p class="translation">堆土成山，风雨就在这里兴起；水流汇成深渊，蛟龙就在这里生长；</p><p class="original-text">积善成德，而神明自得，圣心备焉。</p><p class="translation">积累善行，形成良好的品德，就会得到非凡的智慧，具备圣人的心怀。</p><p class="original-text">故不积跬步，无以至千里；不积小流，无以成江海。</p><p class="translation">所以，不积累小步，就不能远达千里；不汇集细流，就不能形成江海。</p><p class="original-text">骐骥一跃，不能十步；驽马十驾，功在不舍。</p><p class="translation">骏马跳跃一次，还没有十步远；劣马拉车走十天（也能走得很远），功效来源于走个不停。</p><p class="original-text">锲而舍之，朽木不折；锲而不舍，金石可镂。</p><p class="translation">拿刀刻东西，中途放弃，腐朽的木头也不能刻断；不停地刻下去，金石也能雕刻成功。</p><p class="original-text">蚓无爪牙之利，筋骨之强，上食埃土，下饮黄泉，用心一也。</p><p class="translation">蚯蚓没有锋利的爪牙，强健的筋骨，却能上吃泥土，下饮泉水，是因为它用心专一；</p><p class="original-text">蟹六跪而二螯，非蛇鳝之穴无可寄托者，用心躁也。</p><p class="translation">螃蟹有六条腿，两只钳，然而没有蛇鳝的洞穴就无处容身，是它用心浮躁的缘故。</p></div></div>
<h3 id="课文删节部分">课文删节部分</h3>
<p>​ （君子曰：学不可以已。……行无过矣。）</p>
<p>​
故不登高山，不知天之高也；不临深溪，不知地之厚也；不闻先王之遗言，不知学问之大也。干、越、夷、貉之子，生而同声，长而异俗，教使之然也。《诗》曰：“嗟尔君子，无恒安息。靖共尔位，好是正直。神之听之，介尔景福。”神莫大于化道，福莫长于无祸。</p>
<p>​ （吾尝终日而思矣……善假于物也。）</p>
<p>​
南方有鸟焉，名曰蒙鸠。以羽为巢，而编之以发，系之苇苕，风至苕折，卵破子死。巢非不完也，所系者然也。西方有木焉，名曰射干，茎长四寸，生于高山之上，而临百仞之渊。木茎非能长也，所立者然也。蓬生麻中，不扶而直。白沙在涅，与之俱黑。兰槐之根是为芷，其渐之滫，君子不近，庶人不服。其质非不美也，所渐者然也。故君子居必择乡，游必就士，所以防邪僻而近中正也。</p>
<p>​
物类之起，必有所始。荣辱之来，必象其德。肉腐出虫，鱼枯生蠹。怠慢忘身，祸灾乃作。强白取柱，柔自取束。邪秽在身，怨之所构。施薪若一，火就燥也。平地若一，水就湿也。草木畴生，禽兽群焉，物各从其类也。是故质的张而弓矢至焉，林木茂而斧斤至焉，树成荫而众鸟息焉，醯酸而蚋聚焉。故言有召祸也，行有招辱也，君子慎其所立乎？</p>
<p>​
（积土成山，风雨兴焉……用心躁也。）是故无冥冥之志者，无昭昭之明；无昏昏之事者，无赫赫之功。行衢道者不至，事两君者不容。目不能两视而明，耳不能两听而聪。螣蛇无足而飞，梧鼠五技而穷。《诗》曰：“尸鸠在桑，其子七分，淑人君子，其仪一兮。其仪一兮，心如结兮。”故君子结于一也。</p>
<h3 id="参考文献">参考文献</h3>
<h4 id="作者作品简介">作者作品简介</h4>
<p>​ 荀子（约前 313 - 前
238），名况，字卿，赵国人，战国末期思想家、教育家。汉时避宣帝刘询讳，称孙卿。两度游学于齐，《史记》说他“最为老师”，“三为祭酒”。继赴楚国，任兰陵
（今属山东）令，后著书终老其地。韩非、李斯皆其学生。</p>
<p>​
荀子是先秦儒家的最后代表人物，同早于他的孟子成为儒家中对立的两派。荀子认为，自然界的存在，不以人的主观意志为转移，但人类可以用主观努力去认识它，顺应它，运用它，以趋吉避凶。他提出“制天命而用之”的思想。在认识论方面，他认为人对客观事物的认识，首先要通过感觉器官和外界事物接触，强调“行”对于“知”的必要性和后天学习的重要性，有朴素的唯物思想。在政治上，他针对孔子、孟子效法先王的思想，提出“法后王”，主张应该适应当时的社会情况去施政，要选贤能，明赏罚，兼用“礼”“法”“术”实行统治。他的许多思想为法家所汲取。在人性问题上，他不同意孟子的性善论，认为人的本性是恶的，后天环境可以改善人的恶的本性，所以他主张“明礼义而化之”。他很重视教育的作用，强调教育功能的重要性。</p>
<p>​
荀子的散文说理透彻，气势浑厚，语言质朴，句法简练绵密，多作排比，又善于用喻。他一生“序列著数万言”，后人编为《荀子》，共
32 篇。《荀子》中绝大部分是荀子的作品，《大略《到《尧问《6
篇，或系其弟子所记。全书内容涉及哲学思想、政治问题、治学方法、立身处世之道、学术论辩等方面，《劝学》是其中的第一篇。</p>
<hr>
<h4 id="从劝学看荀子的写作特色-observing_writing_characteristics_of_xunzi_from_the_perspectiveof_quanxue">从《劝学》看《荀子》的写作特色
<span class="citation" data-cites="Observing_Writing_Characteristics_of_Xunzi_from_the_Perspectiveof_Quanxue">[@Observing_Writing_Characteristics_of_Xunzi_from_the_Perspectiveof_Quanxue]</span></h4>
<p>​
荀子的文章，和其他先秦诸子的哲理散文一样，也是独具风格的。它既不像《老子》那样，
用正反相成、矛盾统一的辩证法思想贯穿终始，也不像《墨子》那样，用严密、周详的形式逻辑进行推理；既不像《庄子》那样，海阔天空，神思飞越，富有浪漫主义色彩，也不像《孟子》那样，语言犀利，气势磅礴，具有雄辩家的特点。他是在老老实实地讲述道理。他的文章朴实浑厚、详尽严谨，句式比较整齐，而且擅长用多样化的比喻阐明深刻道理。这一切构成了荀子文章的特色。有人曾将《荀子》一书概括为“学者之文”，这是十分恰当的评论。</p>
<p>​
《劝学》是荀子的代表作品，也是《荀子》一书开宗明义的第一篇。全文共由两大部分组成：前一部分，论述学习的重要性；后一部分，论述学习的步骤、内容、途径等有关问题；而以“学不可以已”作为贯穿全文的中心思想。从《劝学》前面部分节选的几个片段，解放后一直被选为中学语文教材，是经得起时间考验的传统名篇之一。</p>
<p>​
《劝学》各段的条理十分清楚，基本上是每段阐述一个具体问题，而且总在文章的开头、结尾部分作出明确的交代。例如，文章的第一句写道：“君子曰：学不可以已。”这既是全文的一个中心论题，也是接下来所要开始阐述的内容。而在第
2
段的结尾部分则归结道：“君子博学而日参省乎己，则知明而行无过矣。”这就明确而有力地照应首句，收束了上文，并且清楚地点明了该段的中心思想。又如第
3
段，先用“吾尝终日而思矣，不如须臾之所学也”，来说明个人独自冥思苦想远不如学习有益。而又列举了“登高而招”“顺风而呼”“假舆马”“假舟楫”等几个生活中十分常见而又极有说服力的比喻后，有力地小结道：“君子生非异也，善假于物也。”在这里，荀子从他的“性恶论”观点出发，指出君子的天性也是恶的，其所以不同于众人，就在于他善于向良师益友学习嘉言懿行，以改变自己的不良天性。这个“物”字就从“舟楫”“舆马”之类，变成了学习的内容，论述也就逐渐深化了。这里举的两个例子，都是首尾相互照应的，也有一些段落，只在段首揭示该段中心，或者只在段末予以适当概括。总之，目的相同而方式却并不死板。先秦诸子的哲理散文，一般都比较难读，荀子这种谨严、朴实的写作方法，对帮助读者掌握各段文章的基本内容，是十分有效的。</p>
<p>​
在说理文中，巧妙地运用大量比喻进行论述，这是《劝学》另一个十分突出的特点。有时作品集中了好些并列的比喻，从同一角度反复地说明问题。这种手法，在修辞上叫作“博喻”，不过一般大都是用来辅助景物描写；而荀子作品中的博喻都是用来说明事理。</p>
<p>​
有时作者又采用对比的方法，将两种相反的情况组织在一起，形成鲜明对照，以增强文字的说服力。例如，在强调学习必须持之以恒、用心专一时，他不但用了一些并列的比喻，也用了好些相反相成的比喻，他列举了“骐骥一跃，不能十步”和“驽马十驾，功在不舍”，“锲而舍之，
朽木不折”和“锲而不舍，金石可镂”，以及“无爪牙之利，筋骨之强”的蚯蚓，竟能在地下来去自如，而“六跪而二螯”的螃蟹，却连一个容身的小洞也掘不好。这就表明，“积”与“不积“所产生的效果是截然相反的。在荀子哲学思想中，“积”字是一个重要观点。荀子认为，要学有所成，必须坚持不懈地进行积累。一个人长期耕田（“积耨耕”），就会成为农夫；长期砍砍削削
（“积削”），就会成为工匠；长期贩卖货物（“积反货”），就会成为商贾；长期学习礼义（“积礼义”），就会成为君子；圣人也只不过是“人之所积”。这就好像越人安越、夏（中原）人安夏那样，习惯成自然而已。了解了荀子这一思想观点的重要意义，我们就不难懂得，他为什么要费那么大的力气，选择那么多比喻，不惮烦地对读者进行谆谆教导。</p>
<p>​
最值得注意的是，作者还善于通过比喻，将议论逐步引向深入。忽视了这一特点，我们就会被众多的比喻弄得眼花缭乱，而理不清文字的脉络。</p>
<p>​ 试以第 2
段为例。全段除段尾有一句论断性的话外，其余全部由比喻组成。作者先用“青出于蓝”和“冰寒于水”这两个比喻，说明后天的影响可改变事物本性，并能使之有所发展。接下来又提出另一个比喻：中绳的直木，经改造后，变成了“其曲中规”的车轮；以后即使晒干，也不可能再回复到直的状态。这就说明，后天的影响，对改变事物本性来说，是起着决定性作用的。这样就把道理的阐述向前推进了一步。然后再用“木受绳则直”“金就砺则利”两个比喻，
引出结论“博学而日参省乎己”的重要性。这一段以比喻为主的文字，从提出问题到进行小结，
逻辑性是很强的。</p>
<p>​
再以前面提到过的“积”字一段为例。“积土成山，风雨兴焉”和“积水成渊，蛟龙生焉“是比喻，“积善成德，而神明自得，圣心备焉”才是正意。对一个人来说，“积善”要达到了“成德”的境界，才能改变气质，具备圣人的思想感情。紧承这一论断，展现在我们眼前的是四组比喻，它们阐述了前后相承的两层意思。前面三组论述了“积”字的重要性：“不积跬步，无以至千里；不积小流，无以成江海。”从正面说明，不“积”就将一事无成。“骐骥”与“驽马”“朽木”与“金石”这两组对比的比喻，则着重表明，“积”与“不积”必将产生两种不同的结果。前一组对比，偏重主观条件的分析；后一组对比，偏重客观情况的分析。三组比喻的结合使用，
把道理讲得十分清楚。后面部分的另一组，以“蚯蚓”和“螃蟹”的对比为喻，指出“用心专一”是“积”的关键，将论述进一步引向深入。至此，有关“积”字的基本内容已经谈清，于是作者紧扣“用心专一”进行小结。</p>
<p>​
荀子这种用比喻说理的写法，在其他先秦诸子散文中也是罕见的，应当说这是他的一种独创。</p>
<p>​
《劝学》的第三个重要特点，是句式整齐，读时朗朗上口。但作者又注意在排偶中适当夹进散句，使文气流畅而不呆滞。</p>
<p>​
由于具备以上一些风格特点，荀子的哲理散文，有它好读的一面；但是，这并不是问题的全部情况。就以这篇《劝学》为例，通假字就用了十几个之多，而且其中有些是不很常见的。有了这么一大批拦路虎，《荀子》当然又有它并不易读的一面了。</p>
<p>（选自《语文学习《1981 年第 2 期）</p>]]></content>
      <categories>
        <category>High School</category>
        <category>Chinese</category>
        <category>Classical Chinese Literature and Poetry</category>
      </categories>
      <tags>
        <tag>School Notes</tag>
        <tag>High School</tag>
        <tag>Chinese</tag>
      </tags>
  </entry>
  <entry>
    <title>师说-韩愈</title>
    <url>/2022/03/13/chinese/High%20School/Classical%20Chinese%20Literature%20and%20Poetry/%E5%BF%85%E4%BF%AE/%E5%B8%88%E8%AF%B4-%E9%9F%A9%E6%84%88/</url>
    <content><![CDATA[<h2 id="课文解读">课文解读</h2>
<p>​
读懂《师说》的基本内容并不难，但要真正理解这篇文章的深刻意义，就必须要了解其特定的写作背景。</p>
<p>​
从最后一段看，这篇文章是作者写给自己的学生李蟠的，是为了赞许他能践行古人的从师之道。但是事实上，这只是个由头，更重要的背景是文章第
2
段批评的门第观念影响下的“耻学于师”的社会风气。为什么会有这样的风气？</p>
<p>​
门第观念古已有之，到魏晋南北朝时期的九品中正制达到顶峰，此后形成了以士族为核心的门阀制度。门阀制度重门第之分，严士庶之别，士族子弟凭高贵门第就可以做官，他们不需要学习，也看不起老师，他们尊“家法”而鄙从师。到唐代，九品中正制废除了，改以官爵的高下为区分门第的标准。这对择师也有很大的影响，在当时士大夫阶层中，就普遍存在着从师“位卑则足羞，官盛则近谀”的心理。韩愈写作此文时
35
岁，正在国子监任教，对这种风气深恶痛绝，他一方面“收召后学”，一方面借为文赠李蟠来倡导“师道”，对此风气予以抨击，表现出非凡的勇气。</p>
<p>​
柳宗元在《答韦中立论师道书》中这样说：“今之世不闻有师，有辄哗笑之，以为狂人。独韩愈奋不顾流俗，犯笑侮，收召后学，作《师说》，因抗颜而为师。世果群怪聚骂，指目牵引，而增与为言辞。愈以是得狂名，居长安，炊不暇熟，又挈挈而东，如是者数矣。”这段话可以看作《师说》的写作背景，从中也能感受到韩愈的斗争精神，而这种精神在那种背景下是难能可贵的。</p>
<p>​
文章共四段，开篇即提出“古之学者必有师”的观点，托古言事，突元而来，与当时“耻学于师”的风气形成对照，令人警醒。“必有”二字，语气极为肯定。顺势而来，以下定义的方法阐述“师”的职责：“师者，所以传道受业解惑者也。”这个概括，我们可以一般地理解为“老师，是用来传授道、教授学业、解释疑难问题的人”，但在教学时，也可以引导学生结合韩愈有关“古文运动”的主张，理解其中丰富而深刻的内涵。在这三项职责中，“传道”是核心。所谓“道”，就是儒家思想。在佛、老盛行的唐代，韩愈推崇儒道，倡导“古文运动”，主张“修其辞以明其道”，表现出继承儒学的积极进取精神。如果说“传道”是目的，那么“受业”就是手段，这里的“业”就是指儒家经典，是“道”的载体，通过教授儒家经典传授儒家思想。在“受业”过程中，学生不可避免地会产生疑问，有不理解的地方，所以老师最具体的任务就是“解惑”。在阐明“师”的职责后，文章接下来先是反问，增强语势，然后从反面论述“惑而不从师，其为惑也，终不解矣”，说明“从师”的必要性是不容置疑的。由此，将讨论的焦点进一步引导到择师的态度和标准上来，推出“无贵无贱，无长无少，道之所存，师之所存”的结论。这一观点以“道”为标准，否定贵贱长少之分，直指士大夫阶层的门第观念，为下文针砭时弊张本。</p>
<p>​ 第 2
段，批判社会上“耻学于师”的不良风气。这一段以“嗟乎”发端，两个感叹紧随其后，作者的叹息之声、不平之气似穿空而来，令读者震动。接着文章用三组对比分层论述，将重点转到批判现实上来。第一层，把“古之圣人”从师而问和“今之众人”耻学于师相对比，得出“圣益圣、愚益思”的结论，可见是否尊师重道，是圣愚分野之关键。第二层，以择师教子与白己“耻师焉”作对比，前者只是“习其句读”而并非“传其道解其惑”，从而得出“小学而大遗”的结论，谬误不言自明。第三层，以巫医乐师百工之人与士大夫之族作对比，揭示出尊卑贵贱与智力高下成反比的奇怪现象，极具讽刺地批判了当时社会上轻视师道的风气。这一段对比论证，通过“嗟乎”“呜呼”的点染，再加之感叹、反问的语气，作者批判之意直接而鲜明，发人深思。</p>
<p>​ 第 3
段，援引圣人从师的态度，进一步阐明从师的必要性和以能者为师的道理。开头先提出“圣人无常师”的论断，与开头“古之学者必有师”的观点形成呼应，且由“学者”推进到“圣人”，由“必有师”推进到“无常师”，语气归于和缓、理性。下边举孔子为例，孔子在人们心目中是至圣先师，这样的人还不断向人求教，以人为师，还有“三人行”的言论，由此得出“弟子不必不如师，师不必贤于弟子”的结论，显然具有强大的说服力。这一段举事实，引言论，文字虽少，却令人信服。教师可借此段引导学生认识典型事例以及引述经典言论在论证中的重要作用，并将这一方法应用于自己的写作实践。</p>
<p>​ 第 4
段，赞扬李蟠“不拘于时”“能行古道”，说明本文写作的缘由。其实，这不过是表面的理由，是触动作者写作的一个契机而已，实际上，作者针对的是那种“耻学于师”的社会风气，倡导的是从师问道的良好学风。所以，这里“不拘于时”的“时”应该指的是“耻学于师”“惑而不从师”的社会风气，“古道”指的是“从师而问”的师道传统。</p>
<p>​
本文整句与散句结合，又兼以多种不同句式，使得语言错落有致，错综变化，又富有气势，教学时可以引导学生通过反复诵读认识这样的特点。如第
1
段先用四个散句立论、解释、反问、说明，然后用两个小句对举，阐述自己从师的态度，再用一个反问表明自己的观点，最后用一个整句得出结论，整句散句交替变化，富有节奏感。又如
2
第段是三组对比，对比之后的结论意思是相同的，使用的句式却有变化，语气也越来越强烈：“其皆出于此乎”是质疑语气，“吾未见其明也”是肯定且略带责备的语气，“其可怪也欤”是带有讽刺的感叹语气。</p>
<p>​
《劝学》和《师说》都是我国古代探讨学习问题的名篇，教学时应引导学生注意二者的异同。前者讲学习的重要性，讲学习的态度和方法，强调要“善假于物”，要积累、要坚持、要专一等，核心就是“学不可以已”，随时随地学习知识，增长才干。后者围绕师道展开，反对“耻学于师”，强调要重视传统的师道，尊重老师，学习儒家之道。两篇文章论述的重点虽然不同，但都强调学习的重要性，而这与我们现在所说的“终身学习”“合作学习”“创造性学习”“学会学习”等有很多相通之处。教学时，要注意引导学生结合当下的学习生活，思考古人的观点、态度在今天的现实意义，为我所用，助力自己的成长。</p>
<p>​
这两篇文章都是论述性文字，但采用的方法不同，结构也不相同。《劝学》主要是比喻论证，逐项阐述自己的主张；《师说》除直接阐述外，主要采用对比论证、举例论证，逐层深人地论述自己的观点。教学时，可以引导学生思考不同论证方法所产生的不同的逻辑力量，要让他们关注在使用举例等论证方法时还要不断进行分析阐释（这一点在《师说》中特别突出），避免在写论述性文章时陷入“观点加例子”的模式。</p>
<p>​
这两篇文章中有不少名言警句流传至今，要能够背诵、积累下来，思考其意义，增长自己的学识。</p>
<p>​
学习这两篇课文，还要引导学生梳理、积累一些常用文言词语，如“而、于、之、假、孰、益、焉”等。</p>
<h2 id="参考资料">参考资料</h2>
<h3 id="参考译文">参考译文</h3>
<div class="classcial-chinese-literature-and-poetry-translation"><div class="paragraph"><p class="original-text">古之学者必有师。师者，所以传道受业解惑也。</p><p class="translation">古代求学的人一定要有老师。老师，是用来传授道、教授学业、解释疑难问题的人。</p><p class="original-text">人非生而知之者，孰能无惑？</p><p class="translation">人不是生下来就懂得道理的，谁能没有疑惑？</p><p class="original-text">惑而不从师，其为惑也，终不解矣。</p><p class="translation">有了疑惑，如果不跟从老师学习，那些成为困惑的问题，就最终不能理解了。</p><p class="original-text">生乎吾前，其闻道也固先乎吾，吾从而师之；</p><p class="translation">生在我前面，他领会道理本来就早于我，我跟随他学习；</p><p class="original-text">生乎吾后，其闻道也亦先乎吾，吾从而师之。</p><p class="translation">生在我后面，如果他领会道理也早于我，我也跟随他学习。</p><p class="original-text">吾师道也，夫庸知其年之先后生于吾乎？</p><p class="translation">我学习的是道，哪管他是生在我之前还是生在我之后呢？</p><p class="original-text">是故无贵无贱，无长无少，道之所存，师之所存也。</p><p class="translation">因此，无论地位贵贱，无论年纪大小，道存在的地方，就是老师在的地方。</p></div><div class="paragraph"><p class="original-text">嗟乎！师道之不传也久矣！欲人之无惑也难矣！</p><p class="translation">唉！尊师学习的风尚不流传已经很久了！想要人没有疑惑也很难了！</p><p class="original-text">古之圣人，其出人也远矣，犹且从师而问焉；</p><p class="translation">古代的圣人，他们超出一般人很远，尚且跟从老师并向他请教；</p><p class="original-text">今之众人，其下圣人也亦远矣，而耻学于师。</p><p class="translation">现在的一般人，他们的才智比圣人差得很远，却以向老师学习为耻。</p><p class="original-text">是故圣益圣，愚益愚。</p><p class="translation">因此圣人更加圣明，愚人更加愚昧。</p><p class="original-text">圣人之所以为圣，愚人之所以为愚，其皆出于此乎？</p><p class="translation">圣人之所以成为圣人，愚人之所以成为愚人，大概都出于这个原因吧？</p><p class="original-text">爱其子，择师而教之；于其身也，则耻师焉，惑矣。</p><p class="translation">人们爱自己的孩子，选择老师来教他们；对于他自己呢，却以跟从老师学习为耻，真是糊涂啊！</p><p class="original-text">彼童子之师，授之书而习其句读者，非吾所谓传其道解其惑者也。</p><p class="translation">那些孩子的老师，是教孩子书本的文字，学习断句，不是我所说的传授道、解答疑难问题。</p><p class="original-text">句读之不知，惑之不解，</p><p class="translation">不通晓句读，不能解决疑惑，</p><p class="original-text">或师焉，或不焉，小学而大遗，吾未见其明也。</p><p class="translation">有的（指“句读之不知”）向老师学习，有的（指“惑之不解”）却不向老师学习，小的方面要学习，大的方面却放弃了，我没看出那种人的明智之处。</p><p class="original-text">巫医乐师百工之人，不耻相师。士大夫之族，曰师曰弟子云者，则群聚而笑之。</p><p class="translation">巫医乐师和各种工匠，不以拜别人为师为耻。士大夫这类人，说谁是谁的老师、谁是谁的学生之类的话，就成群地聚在一起讥笑人家。</p><p class="original-text">问之，则曰：“彼与彼年相若也，道相似也，位卑则足羞，官盛则近谀。”</p><p class="translation">问他们为什么，就说：“他和他年龄差不多，道德学问也差不多，以地位低的人为师就感到十分羞耻，以官职高的人为师就觉得近乎谄媚。”</p><p class="original-text">呜呼！师道之不复，可知矣。</p><p class="translation">唉！尊师学习的风尚不能恢复，（从这里）就可以明白了。</p><p class="original-text">巫医乐师百工之人，君子不齿，今其智乃反不能及，其可怪也欤！</p><p class="translation">巫医乐师和各种工匠，士大夫们瞧不起，现在他们的见识竞反而赶不上这些人，真是令人奇怪啊！</p></div><div class="paragraph"><p class="original-text">圣人无常师。孔子师郯子、苌弘、师襄、老聃。</p><p class="translation">圣人没有固定的老师。孔子曾以郯子、苌弘、师襄、老聃为师。</p><p class="original-text">郯子之徒，其贤不及孔子。</p><p class="translation">郯子这些人，他们的才德比不上孔子。</p><p class="original-text">孔子曰：三人行，则必有我师。</p><p class="translation">孔子说：“三个人一起走，其中一定有可以当我的老师的人。”</p><p class="original-text">是故弟子不必不如师，师不必贤于弟子，闻道有先后，术业有专攻，如是而已。</p><p class="translation">因此学生不一定不如老师，老师不一定超过学生，领会道理有早有晚，学术技艺各有专长，如此罢了。</p></div><div class="paragraph"><p class="original-text">李氏子蟠，年十七，好古文，六艺经传皆通习之，</p><p class="translation">李家的孩子叫蟠的，年龄十七，喜欢古文，六经的经文和传文都全面地学习了，</p><p class="original-text">不拘于时，学于余。余嘉其能行古道，作《师说》以贻之。</p><p class="translation">不受时俗的限制，向我学习。我赞许他能够遵行古人从师之道，写了这篇《师说》赠送给他。</p></div></div>
<h3 id="参考文献">参考文献</h3>
<h4 id="作者作品简介">作者作品简介</h4>
<p>​ 韩愈（768 —
824），字退之，唐代河阳（今河南孟州，一说今河南南阳）人，唐代文学家、
思想家。每自称“郡望昌黎（今辽宁义县）”，故世称韩昌黎；因最后官至吏部侍郎，故又称韩吏部；卒谥“文”，故后世又称韩文公。他出身于小官吏家庭（祖父、父亲只做过长史、县令），
加上“三岁而孤”，随兄嫂颠沛流离，到 25
岁才登进士第，又经过许多挫折，才得到试校书郎这样的小官。其后又屡遭排挤贬斥，直到晚年才做到吏部侍郎。因此，他和庶族地主阶层又有思想上的联系，为他们“鸣不平”，尖锐地揭露世族地主阶层的丑恶腐朽，有“操行坚贞，鲠言无所忌”（见《新唐书·韩愈传》）之称。唐德宗贞元十九年（803），关中天旱人饥，他上书请求宽民徭役，免民租税，被贬为阳山（今属广东）令。元和十四年（819），唐宪宗遣人自凤翔迎佛骨入宫，他又上书极谏，几乎被处死，后贬为潮州（今广东潮安）刺史。这两件事说明他颇能关心民间疾苦，并能犯颜直谏。</p>
<p>​
韩愈是唐代“古文运动”的倡导者。在文学史上，“古文”的概念是由韩愈提出来的。他所谓的“古文”，是和当时流行的重辞藻、轻内容的骈文相对立的，即奇句单行，以儒家思想为基本内容，取法先秦两汉文体的散文。唐初，承六朝之弊，文风浮靡，言之无物，虽有陈子昂、李华、独孤及、萧颖士、梁肃等人反对，但效果不大。直到韩愈、柳宗元，由于在创作实践和理论上均有巨大成就，才掀起声势浩大的“古文运动”，把文章从形式主义的桎梏中解放出来。这种“古文运动”，实际上是以复古为解放，目的在继承古人用通俗平易的语言抒情达意的优良传统。只要看韩愈主张写文章要“唯陈言之务去”，学习古人文章要“师其意，不师其辞”，强调“文从字顺”“词必已出”，就可见这实际上是一种文风和文学语言的革新运动。至于以儒家思想为基本内容，近代学者多有诟病，但在当时却有着“攘斥佛老”、反对藩镇割据、维护全国统一的作用，是有积极意义的。韩愈在文学上的主张和创作实践，对后世有深远影响，后世称韩、柳和宋代的欧阳修、苏洵、苏轼、苏辙、曾巩、王安石为唐宋八大家。他的著作收在《昌黎先生文集》里。</p>
<hr>
<h4 id="师说鉴赏-appreciation_of_shishuo">《师说》鉴赏 <span class="citation" data-cites="Appreciation_of_Shishuo">[@Appreciation_of_Shishuo]</span></h4>
<p>​
韩愈作《师说》的时候，有人以为是在唐德宗贞元十八年（802），这大致是可信的。这年韩愈
35
岁，刚由洛阳闲居进入国子监，为四门学博士，这是一个从七品的学官。但他早已有名。他所提倡和不断实践的古文运动，在那一两年内，正走出少数爱好者的范围，形成一个广泛性的运动，他俨然成为这个运动的年轻的领袖。他用古文来宣传他的主张，维护先秦儒家的思想，反对当代特别盛行的佛老思想；提倡先秦两汉的古文，反对“俗下文字”，即魏晋以来“饰其辞而遗其意”的骈文：这就是古文运动的内容。这个运动所以逐渐形成于唐德宗统治的后期，是有现实的社会条件的。它是为维护唐王朝的统一、反对藩镇割据的政治目的服务的，而这除军阀、大地主外，正是当时广大社会阶层的现实利益的要求。韩愈的积极努力，对这个运动的开展与形成，起了不断促进的作用。就古文来说，他不仅自己刻苦努力，从理论到实践，作出了优秀的成绩；更重要的是他不顾流俗的非笑，努力提倡，特别表现在给青年们热情的鼓励和指示上。《师说》正是这种努力所引起的一篇具有进步意义和解放精神的文章。</p>
<p>​
韩愈由于幼年的家庭教养和天宝以来复古主义思潮的影响，从青年时代起，就以一个传道的古文家自命。这也是他在科举和仕宦的阶梯上十年不能得意的一个重要原因。但是他并不悔，还愈来愈有自信。最初他到汴州参加宣武节度使董晋幕府的时候（796
— 798），先教李翱学古文；
由于孟郊的介绍，不久又教张籍学古文。后来逃难到徐州（799），徐泗濠节度使张建封安置他在符离，又教一个青年人张彻读古书，学古文。张建封死后，仕途不通，到洛阳闲居（800
—
801）。向他请教的青年愈来愈多，他对青年们非常热情，奖励有加。他在《重答李翊书》中说：“言辞之不酬，礼貌之不答，虽孔子不得行于互乡，宜乎余之不为也。苟来者，吾斯进之而已矣，
乌待其礼逾而情过乎？”为了“广圣人之道”，他以热情的、有礼貌的态度对待一切向他请教的青年，他认为这并不是什么“礼逾”和“情过”的问题。他回答许多青年的信，指示怎样做人，
怎样作文。在韩愈看来，文章是作者的人格修养的表现，做人与作文应该是一致的。他进了国子监后，对待青年依然非常热情。</p>
<p>​
韩愈这样不断地同青年后学交往，给他们奖励和指示，这是魏晋以后所没有的现象，当然要引起人们的奇怪，以至纷纷议论和责难。一切向韩愈投书请益的青年便自然地被目为韩门弟子，
因而韩愈“好为人师”的古怪面貌也就非常突出了。但韩愈是早有自信的，他不管人们怎样诽谤，依然大胆地回答青年们的来信。他在《答胡生书》中说：“夫别是非，分贤与不肖，公卿贵位者之任也，愈不敢有意于是。如生之徒，于我厚者，知其贤，时或道之，于生未有益也。不知者乃用是为谤！不敢自爱，惧生之无益而有伤也，如之何？”他对那些恶意中伤的诽谤，表示愤慨，也为向他请教的青年担忧。《师说》的最后一段，声明写作的由来，说这是为了一个“好古文”“能行古道”，跟他学习的青年李蟠而作的。实际上他是借此对那些诽谤者来一个公开的答复和严正的驳斥。他是有的放矢的。</p>
<p>​ 在这篇文章里，他首先（第 1
段）肯定从古以来师对于任何人总是不可少的，因为人不能“生而知之”，谁也不能没有“惑”—茫然不解的东西。因此，他认为师并不是什么特殊人物，
而是一种“传道受业解惑”的人。他还认为人人都可以为师，没有社会地位（贵贱）或年龄（长少）的限制，只问他有没有“道”，有就可以为师，所谓“道之所存，师之所存也”。接着（第
2
段），他慨叹古来的“师道”久已失传。现在一般人，既不能“无惑”，又“耻学于师”，所以越来越愚蠢。然后列举事例，论证这种“耻学于师”的风气实在是愚蠢而奇怪的。他说有一种人，
即士大夫，对于儿子，则“择师而教之”；但对于自己，“则耻师焉”：这就是他们的不明。又有一种现象，广大的各行各业的人，即“巫医乐师百工之人”不以彼此相师为耻；而“士大夫之族”，如果有人谈到谁是师，谁是弟子，则大家共同非笑，问其理由，无非是年龄、地位云云，
这又证明了他们的智慧反而在他们所瞧不起的巫医等等之下，这不是很奇怪吗？再看（第
3
段），“士大夫之族”所崇拜的“圣人”没有一定的师，孔子的师有郯子、苌弘等，这些人都“不及孔子”。而且孔子还说过，三个人里面，一定有一个人是他的师。因此，作者得到另一个重要的论点，师和弟子的关系是相对的，“弟子不必不如师，师不必贤于弟子”。这就是说，弟子可以为师，师也可以为弟子。所以师和弟子的关系的存在，最后结论很简单，不过是因为“闻道有先后，术业有专攻”的缘故。这也还是前文所提出的论点，即能者为师。</p>
<p>​
由此可见，《师说》不仅严正地驳斥了那些愚蠢的诽谤者，更可贵的是提出了三点崭新的、
进步的“师道”思想：师是“传道受业解惑”的人；人人都可以为师，只要具有那样的能力；师和弟子的关系是相对的，某一方面比我好，在这一方面他就是我的师。这些思想把师的神秘性、
权威性、封建性大大地减轻了，把师和弟子的关系合理化了，平等化了，把师法或家法的保守的壁垒打破了。这些思想是和他后来发展的“道统”思想矛盾的。这些思想是具有解放精神、具有深刻的人民性的思想。这是唐德宗时代在相对的稳定局面之下，城市繁荣、商业经济发展的反映。</p>
<p>​
因此，可以想象，这篇《师说》的流布，鼓舞和吸引了更多的青年后学，也因而招致了更多的顽固的“士大夫之族”的反对。实际上，韩愈也确乎因此官更难做，不断地遭到当权者的排挤。柳宗元在《答韦中立论师道书》中说：“今之世不闻有师，有，辄哗笑之，以为狂人。独韩愈奋不顾流俗，犯笑侮，收召后学，作《师说》，因抗颜而为师。世果群怪聚骂，指目牵引，
而增与为言辞。愈以是得狂名。居长安，炊不暇熟，又挈挈而东，如是者数矣。”贞元十九年
（803），韩愈在监察御史的职位，第一次被当权的官僚集团赶出了长安，贬到阳山（今属广东），
就是在作《师说》一年后。他这次被贬，原因可能很复杂，但照柳宗元所说，这篇《师说》至少是重要的原因之一，因为他由此“狂名”更大，为更多的顽固派所疾恶，更容易遭到莫名的排挤。然而韩愈在奖励后学这一点上，态度始终不变，只是到了元和以后，声势没有在贞元末年那么大就是了。到了宋代，有人为韩愈辩解，说他“非好为人师者也”（《五百家注音辨昌黎先生文集》卷十二引“洪曰”），这是说，由于学者归附，韩愈是不得已而“作之师”的。又有人以为韩愈“作《师说》，盖以师道自任”，但充其量不过“以传道受业解惑为事，则世俗训导之师，口耳之学耳”（俞文豹《吹剑三录》），这是指韩愈把师的封建作用大大地降低了。可见这篇《师说《的解放精神是不容易为一般封建士大夫所接受的。因此，它在当时的重大意义也就不难理解了。</p>
<p>（选自《历代名篇赏析集成》，中国文联出版公司 1988 年版）</p>
<hr>
<h4 id="师说三辨与古文解读-interpretation_aspects_of_shishuo">《师说》三辨与古文解读
<span class="citation" data-cites="Interpretation_Aspects_of_Shishuo">[@Interpretation_Aspects_of_Shishuo]</span></h4>
<p>​
在韩愈的诸多论说文中，与《原道》《原性》《原毁》《原人》《原鬼》等哲理性较强的文章相比，《师说》一文的主旨并不深奥，却在当下的语文教学界引发了纷纭辩说。例如关于此文的主旨，此文的文体类型及“说”的文体特征，此文是否宣扬儒家之道，文中“道”和“师”的含义，此文在表述上是否有自相矛盾之处，文中“巫医乐师百工之人”一段是否为“糟粕”，还有视“师者，所以传道受业解惑也”为“灌输式教学”的过时之论而加以否定，等等。这与韩愈的思想观念及其在思想史、儒学发展史、散文史上的地位有关，与他的行文风格、表述方式有关，
与作者所处的历史语境有关，更何况《师说》一文中反复出现那个含义特殊的“道”。因此，解读的过程中会伴随着解读者的心理期待和观念预设，可能造成复杂化或概念化，自古及今莫不如此。而古文解读、韩文解读的方法是形成争议的根本原因。</p>
<h5 id="思想观念">1. 思想观念</h5>
<p>​
解读韩文，首先须了解韩愈的思想观念。与《师说》一文相关的思想观念概括而言有三个要点：（1）韩愈是正统儒家“仁义道德”观念的继承者—这是一致的公论；（2）其儒家“仁义道德”观念与先秦两汉的儒家观念有所不同，具有唐代的、个体的特点—这需要思想史的相关知识为依据；（3）因此其所传之“道”以及由此决定的为师之“师道”也具有鲜明的个人化因素—这是此文的主旨：“道”与“师”的关系。</p>
<p>​
纵观韩愈的全部生活经历，与其“继圣”之志密切相关，传道和为传道而为“师”成为他毕生的信念。</p>
<p>​
“道”和“师”是韩愈文集中反复涉及的概念，可以视为韩愈知行观的集中体现。《原道》《答李翊书》《重答翊书》《进学解》《进士策问（其十二）》《答刘正夫书》等多篇韩文中都从不同角度论及了求“道”与为“师”的问题。</p>
<p>​ 首先辨析韩愈对于“道”和“师”的观念定位。</p>
<p>​
韩愈主张“文以载道”，“道”是儒家的仁义之道，而非道家的自然之道。儒家自始至终都是主张“文以载道”的，从孔孟、两汉儒学到后世的道德教化之论皆如此。《荀子》的《解蔽》《儒效》《正名》等篇中已明确提出“文以明道”。韩愈可以说是唐代的第一大儒，也是孟子之后儒家“道统”的实际建立者。韩愈在《原道》中明确提出“尧、舜、禹、汤、文、武、周公、
孔、孟”的儒道谱系，并以传承者自任。其《原道》曰：“博爱之谓仁，行而宜之之谓义；由是而之焉之谓道，足乎己无待于外之谓德。”在后文中又重复此论。《原道》曰：“凡吾所谓道德云者，合仁与义言之也，天下之公言也。”韩愈在观念上尤为强调儒家仁义之道的纯粹、正统：“周道衰，孔子没，火于秦，黄老于汉，佛于晋、魏、梁、隋之间，其言道德仁义者，不入于杨，则入于墨；不入于老，则入于佛。……噫！后之人其欲闻仁义道德之说，孰从而听之？”韩愈之“道”为儒家仁义之道无疑。对于“师道”而言，仁义道德之“道”是最高宗旨（指导为师）和最终目标（“闻道”）。</p>
<p>​
然而需要注意的是：以韩愈为重要代表的唐代儒家与汉儒已不尽相同。虽然唐代的儒学缺乏发展创新，但毕竟处于儒学被突破的魏晋南北朝之后。唐代又是中国思想史上一个极为开放的时期，作为时代思潮的主流，道家、道教、佛家的地位远在儒家之上。同为“仁义道德”之“道”，唐代的意识相对宽泛。即使是以儒家道统为己任的韩愈，在儒家学说的接受和应用上也有不同于汉代经学礼义教化的内涵，而是更多地强调道统延续中的夷夏之辨和个人修养。如其《进学解》力主“抵排异端，攘斥佛老”，其《原道》中推崇“古之欲明明德于天下者，先治其国；欲治其国者，先齐其家；欲齐其家者，先修其身；欲修其身者，先正其心；欲正其心者，先诚其意”，反对“举夷狄之法，而加之先王之教上”。对于每一个个体而言，他更为重视学识积累和心胸的修养，“道”的实现是“德”，故《原道》中称：“足乎己无待于外之谓德。”</p>
<p>​
韩愈弟子李汉在《昌黎先生集序》中精辟地概括了韩愈的思想：“文者贯道之器也。……经书通念晓析，酷排释氏，诸史百子皆搜抉无隐。……卒泽于道德仁义，炳如也。洞视万古，愍恻当世，遂大拯颓风，教人自为。”其中“经书通念晓析”继承传统儒家经学，但“晓析”说明并非简单盲从；“酷排释氏”则为唐代儒家的一大特点（《进学解》：“攘斥佛老”）；“诸史百子皆搜抉无隐”与“罢黜百家，独尊儒术”的汉儒正统有别，呈现了有唐一代和韩愈“转益多师”的兼容并蓄的文化观念。“教人自为”，就是“足乎己无待于外”的意思。除了“酷排释氏”，道德仁义来源于“经书”，也包括“诸史百子”。这样的“自为”自足会具有更为开阔的文化视野以及对于独立个性的包容。个体化、个性化的追求也使得韩愈的思想观念有前后不同、违背旧说的现象，这与其说是自相矛盾，不如说是思想的开放和发展。例如在《读墨子》中，他不顾“罢黜百家，独尊儒术”的汉儒经学规范，批评狭隘的“末学”之论，也超越了自己将墨家视为异端的旧说，将孔、墨二家并称共融：“儒讥墨以上同、兼爱、上贤、明鬼。而孔子畏大人，居是邦不非其大夫，《春秋》讥专臣，不上同哉？孔子泛爱亲仁，以博施济众为圣，不兼爱哉？孔子贤贤，
以四科进褒弟子，疾殁世而名不称，不上贤哉？孔子祭如在，讥祭如不祭者，曰：＇我祭则受福。＇不明鬼哉？儒墨同是尧、舜，同非桀、纣，同修身正心以治天下国家，奚不相悦如是哉？“甚至提出了“孔子必用墨子，墨子必用孔子，不相用不足为孔、墨”的惊世骇俗之论。</p>
<p>​
韩愈的儒家之“道”并不“纯粹”，或曰并不保守僵化，早已引起了关注。例如苏轼《韩愈论》曰：“韩愈之于圣人之道……其待孔子、孟轲甚尊，而拒杨、墨、佛、老甚严……然其论至于理而不精，支离荡佚，往往自叛其说而不知。”朱熹在《答宋深之》中也指出：“韩子于道见其大体规模极分明，但未能究其所从来，而体察操履处皆不细密。其排佛老，亦据其所见而言之耳。”“至于理而不精”“皆不细密”的评价也许有些过甚其辞，但前后不一、不够精确的现象实存在于韩愈的论说文中，这与他“据其所见而言之”的自信和个性有关。</p>
<p>​
同为以“文”传“道”的唐代古文家，韩愈的观念也不尽同于先于他的古文运动先驱者的宗经明道之论。萧颖士、李华、元结、独孤及、梁肃、柳冕等人先后提出以“道”为本、散体为文的主张，诸家虽然在思想上不尽相同（例如萧颖士的观念就较为开放），但都属于“宗经”“征圣”的汉儒一派。而年少时期的贫困经历、积极参与政治并屡遭挫折的艰难历程、夜以继日的苦读钻研，以及过人的才华和不屈的个性，使韩愈的“道”与“文”都增加了更为丰富的现实内涵、更为深刻的思想认识和更高的散文创作价值。韩愈在《答李翊书》中提出“气盛言宜”的写作之道，所谓“气”也主要指通过个体修养而形成的独特的文风。《旧唐书·韩愈传》称“愈发言真率，无所畏避”，不但表现在《论佛骨表》等政论文、《送孟东野序》《柳子厚墓志铭》等抒情文和《毛颖传》等游戏文字中，而且相当普遍地见于其不同时期的各种文章。</p>
<p>​
因此，韩愈的“传道受业解惑”之“师”也不再局限于“依托五经以立意”的“经师”，而是从熟读圣贤之书、写作“气盛言宜”之文到立身为仁义之人的同声相应、同气相求的师长。此类表述也见于其他韩文，例如《重答翊书》中有言：“君子之于人，无不欲其入于善，宁有不可告而告之，孰有可进而不进也？”“师”的性质是以已所知之“道”而相“告”相“进”的交流者。又如《进学解》中借“弟子”之口说明“道”：在“攘斥佛老”的前提下即可“旁搜而远绍”，“《春秋》谨严，《左氏》浮夸，《易》奇而法，《诗》正而葩；下逮《庄》《骚》，太史所录，
子云相如，同工异曲。”圣贤之书的范围已超出了正统的“五经”“六经”，各种学说甚至“异端”皆有可取之处。并且，韩愈说明了从师求学的超功利境界，即“闻道”之“道”，实质上是个体人格修养。</p>
<h5 id="表述逻辑">2. 表述逻辑</h5>
<p>​
我们可以根据思想观念的辨析进而辨析《师说》的表述逻辑。如前文所述，思想的开放和发展决定了韩愈之“道”（“儒道”）具有更为宽泛化、个体化的含义，这也决定了他在表述方式上的不同凡响。除此之外，还应“知人论世”地了解促成其文风的人生境况。</p>
<p>​
个性、思想、学识和不凡的人生经历都决定了韩愈独特的文风。韩诗曰：“少小尚奇伟，平生足悲吒。”（《县斋有怀》）“搜奇日有富，嗜善心无宁。”（《答张彻》）韩愈自幼便怀有远大的为人为学之志，焚膏继晷的博览精研成就了他过人的学识和思维能力。而现实为他提供的回报是：一次次学识的实际应用却换来一次次的挫折和失意。“一封朝奏九重天，夕贬潮州路八千”（《左迁至蓝关示侄孙湘》），困顿抑郁又矢志不渝的内心情愫无所宣泄，与他深厚的学养、丰富的语汇相结合，便发之为风格奇崛的诗文之作。《新唐书·韩愈传》称韩愈“性明锐，不诡随”，“卓然树立，成一家言。其《原道》《原性》《师说》等数十篇，皆奥衍闳深，……要为不袭蹈前人者”，揭示了其不顾世人非议、追求耿介拔俗的个性，并将《师说》列举为其独特文风的代表作。韩愈自诩每当写作完成之后，“其观于人，不知其非笑之为非笑也”（《答李翊书》），也印证了《韩愈传》中的描述。历代韩愈研究者都论证了其诗文中强烈的抒情色彩和个性诉求，包括刻意追求的奇险怪诞（限于篇幅，本文不作引证）。</p>
<p>​
在韩愈的心目中，他所处的是“道”和“师”都衰落不堪的时代，这也是他撰写《师说》的缘由。柳宗元《师友箴（并序）》曰：“今之世，为人师者众笑之，举世不师，故道益离。”“师“和“道”相互依存，无“师”则“道”丧。柳宗元《答韦中立论师道书》通过评说师道衰落的现实，表达了对韩愈“好为人师”的由衷敬佩和对其相关遭遇的深切同情：“仆自卜固无取；假令有取，亦不敢为人师。”“今之世不闻有师，有，辄哗笑之，以为狂人。独韩愈奋不顾流俗，犯笑侮，收召后学，作《师说》，因抗颜而为师。世果群怪聚骂，指目牵引，而增与为言辞。愈以是得狂名，居长安，炊不暇熟，又挈挈而东。如是者数矣。”真实地记录了韩愈撰写《师说》时的处境：由于为师，不但遭受骂名，甚至无法存身。韩愈以师道传授儒学承受着巨大的社会压力，
但他并未退缩。其弟子李汉《昌黎先生集序》说：“时人始而惊，中而笑且排，先生益坚，终而翕然随以定。”在《伯夷颂》中，韩愈借赞美伯夷表达了坚守道义的信念：“士之特立独行，适于义而已……信道笃而自知明者也。……至于一国一州非之，力行而不惑者，盖天下一人而已矣；
若至于举世非之，力行而不惑者，则千百年乃一人而已耳。”凭此信念，韩愈“特立独行”地为师传道，担任最高级的“师”—国子监祭酒，招收弟子，亲授学业，与求学问道者书信往还，“经愈指授，皆称“韩门弟子＇”（《新唐书·韩愈传》），在“一国一州非之”的压力下几乎做到了为师之道的一切。由此可见，“抗颜为师”四字中饱含着多少内心的痛苦和坚忍的意志。面对非议毁谤，韩愈专门撰写了《原毁》一文，文中曰：“呜呼！士之处此世，而望名誉之光、道德之行，难已！”这是他撰写《师说》的情感动因。</p>
<p>​
韩愈的内心情感十分充沛。从他的诗文中可见，在对于儒家之“道”保有古道热肠的同时，
对于亲人友人（如《太学生何蕃传》《送李愿归盘谷序》《送孟东野序》《送董邵南序》《祭十二郎文》《柳子厚墓志铭》），对于社稷民生（如《圬者王承福传》《祭鳄鱼文》），甚至对于山川草木
（如《早春呈水部张十八员外》诗），他不仅有理性的思考，更是满怀深情甚至激情。即使探讨理论性的问题，在很大程度上也体现着其情感的需求。情动于中而形于言，尤其是出于愤激抑郁的强烈情感而落笔，韩愈在行文中有时会忽视逻辑的一致性。苏轼指出韩文“至于理而不精，支离荡佚，往往自叛其说而不知”（《韩愈论》）的问题不仅是思想方面的，也程度不同地存在于表达方面。</p>
<p>​
《师说》中“师道”这一关键词语计有三处（斜体为笔者所加）：“吾<em>师道</em>也，夫庸知其年之先后生于吾乎？”“嗟乎！<em>师道</em>之不传也久矣，欲人之无惑也难矣。”“呜呼！<em>师道</em>之不复可知矣。”其中“吾师道也”可作三种解读：（1）吾之师道。即我认为的为师之道。（2）于“师”字后一顿：“吾师，道也。”即我从师的目的是道。（3）“师”读为动词（从师，学习），即我学习道。统观《师说》全文，应为第三种。如童第德先生《韩愈文选》注释“吾师道也”即为“我所要师从学习的是“道”。</p>
<p>​ 而“师道”一语则有如何“为师”的道理和如何“从师”的道理两重含义。</p>
<p>​
《师说》中关于“师”的含义有如下几处具体表述：（1）“传道受业解惑”；（2）“古之圣人，
其出人也远矣，犹且从师而问焉”；（3）“彼童子之师，授之书而习其句读者，非吾所谓传其道解其惑者也”；（4）“巫医乐师百工之人，不耻相师”；（5）“圣人无常师······是故弟子不必不如师，师不必贤于弟子”。这些表述中似乎存在着自相矛盾之处：先言“生乎吾前，其闻道也固先乎吾，吾从而师之；生乎吾后，其闻道也亦先乎吾，吾从而师之。吾师道也，夫庸知其年之先后生于吾乎？是故无贵无贱，无长无少，道之所存，师之所存也”，意为“闻道”者即可为师；而后文又说“授之书而习其句读”的“童子之师”，包括“巫医乐师百工之人”“非吾所谓传其道、
解其惑者也”。这与韩愈对于“师”的资格和层次的看法有关。</p>
<p>​
关于“师”的资格：有“道”可传，有“业”能授，有“惑”能解。三者皆备固然理想，但能够具备其中一种资格者亦可为师。当然，“传道”是最高级的资格，如同既有思想又有知识的大师和只能讲解具体知识的“教书匠”之间的差异。韩愈自己对于为师的态度是十分谨慎的，在《答窦秀才书》中他婉拒了窦存亮拜师的请求：“愈少驽怯，于他艺能，自度无可努力；又不通时事，而与世多龃龉。···学不得其术，凡所辛苦而仅有之者，皆符于空言而不适于实用，又重以自废。··遇足下之请恳恳，犹将倒廪倾囷，罗列而进也。若愈之愚不肖，又安敢有爱于左右哉！·是以临事愧耻而不敢答也。”字面的意思是自谦而不愿误人子弟，但不可轻易为师的意识也披露无遗。</p>
<p>​
关于“师”的层次。第一层次—闻道，传道。（“是故无贵无贱，无长无少，道之所存，
师之所存也。”）第二层次—授业。传授具体的知识、技能。包括“童子之师”和“巫医乐师百工之人”。“彼童子之师，授之书而习其句读者，非吾所谓传其道解其惑者也”中有“传道”“解惑”，唯独略去了“授业”，正说明了“授之书而习其句读”的“童子之师”（即塾师）
和“巫医乐师百工”之“师”（即“师傅”）的相对较低的层次定位。《进学解》说“业精于勤，
荒于嬉”，并以勤学苦读“六艺之文”“百家之编”为“先生之业”，也说明授业之“业”是因人而异的知识、技能。第三层次—解惑。这是最为泛指的“师”，不能说是最低层次。孔子曰：“敏而好学，不耻下问。”有惑则问，不以对方的身份“下”于己而为“耻”（即一字之师、一答之师或一“业”之师）。</p>
<p>​
关于“童子之师”“巫医乐师百工之人”一类传授具体的知识、技能的“授业”之“师”，
可以参见《原道》中关于“古之教者”的论述：“古之时，人之害多矣。有圣人者立，然后教之以相生养之道。为之君，为之师。驱其虫蛇禽兽而处之中土。寒，然后为之衣；饥，然后为之食。木处而颠，土处而病也，然后为之宫室。为之工，以赡其器用；为之贾，以通其有无；为之医药，以济其夭死；为之葬埋祭祀，以长其恩爱；为之礼，以次其先后；为之乐，以宣其湮郁，
为之政，以率其怠倦；为之刑，以锄其强梗。相欺也，为之符玺、斗斛、权衡以信之；相夺也，
为之城郭、甲兵以守之。害至而为之备，患生而为之防。”还可以参见韩愈《圬者王承福传》中的表述：“圬之为技，贱且劳者也。有业之其色若自得者。听其言，约而尽。……‘粟，稼而生者也；若市与帛，必蚕绩而后成者也。其他所以养生之具，皆待人力而后完也。吾皆赖之。然人不可遍为，宜乎各致其能以相生也。故君者，理我所以生者也；而百官者，承君之化者也。任有大小，惟其所能，若器皿焉。食焉而怠其事，必有天殃，故吾不敢一日舍镘以嬉。夫镘，易能可力焉，又诚有功；取其直，虽劳无愧，吾心安焉。夫力，易强而有功也；心，难强而有智也。用力者使于人，用心者使人，亦其宜也。吾特择其易为无愧者取焉。’……愈始闻而惑之，又从而思之，盖贤者也！盖所谓“独善其身”者也！然吾有讥焉，谓其自为也过多，其为人也过少，其学杨朱之道者邪？杨之道，不肯拔我一毛而利天下。而夫人以有家为劳心，不肯一动其心以蓄其妻子，其肯劳其心以为人乎哉？虽然，其贤于世之患不得之而患失之者，以济其生之欲，贪邪而亡道以丧其身者，其亦远矣！”这两段文字中与“师道”相关的意思是：远古圣人教导民众存活之术，“为之君，为之师”，是“师道”的发端状态；其中的“为之工”“为之医药”“为之乐”等就是今日的“巫医乐师百工之人”。作为“巫医乐师百工之人”，王承福以“圬”为业是“为技贱且劳者”，做到了“独善其身”（孔子也自称“吾少也贱，故多能鄙事”，见《论语·子罕》）；但“其自为也过多，其为人也过少”，没有达到仁义之道的高度。这两个例证也可以有助于了解《师说》中关于“师”的资格、层次的认识以及表述逻辑。</p>
<p>​
韩愈的“师道”更多的内涵是自我修养，而不仅仅是“教书育人”。从《师说》《答李翊书《等文中可见，韩愈在谈论学习问题时即多以自己的经历和人格塑造为例。而“师道”不存之弊，
在于“耻相师”。之所以为“耻”，在于自视“其出人也远”或对方“生乎吾后”，故“耻”于放下身份，而不以“闻道”为准则。在韩愈看来，这是有违仁义之道的错误观念。</p>
<h5 id="解读方法">3. 解读方法</h5>
<p>​
古代文论中有许多原文解读方法的论说，这里借用两个著名的例证为说明。孟子用“以意逆志”和“知人论世”概括“诗”的解读方法。其中“以意逆志”的说明是“故说诗者，不以文害辞，不以辞害志。以意逆志，是为得之”（《孟子·万章上》）。也就是说不要以单独的字词的字面意思妨害对于原文原意的整体理解，不要以僵化的文法语法去限定作者独特的表达。例如解读陶渊明《五柳先生传》中的“好读书，不求甚解；每有会意，便欣然忘食”，忽略了作者“不慕荣利”、返璞归真的思想主旨和有意发为极端之言的表达方式，同时又在陶渊明其他诗文中发现了读书追求“甚解”的例子，就会将原文解读为作者读书态度不正确或自相矛盾。孟子关于“知人论世”的说明是“颂其诗，读其书，不知其人，可乎？是以论其世也”（《孟子·万章下》）。即为了避免“以意逆志”而主观武断，就须充分地了解作者的时代历史语境和个体因素。前文论述韩愈的儒家思想和“传道”观念就采用了“知人论世”的方法。</p>
<p>​
清代桐城派的刘大櫆在《论文偶记》中提出了著名的“因声求气”解读法则：“行文之道，
神为主，气辅之。”“神气者，文之最精处也；音节者，文之稍粗处也；字句者，文之最粗处也。”“神气不可见，于音节见之；音节无可准，以字句准之。”“神气”是作家个性气质和思想情感在诗文中形成的神韵和气势；“音节”是多样的句式和声调等语言形态，是“神气”的载体。对“字句”中的“音节”细心诵读体验，方能获取诗文的“神气”，从而得到尽可能充分、恰当的解读。</p>
<p>​
概括而言，解读古文的方法，最重要的是“还原”：即在理解文字的基础上尽量准确地获得文意。既不要局限于字面的意思或已有的成论从而造成解读的泛化（比如既知韩愈属于儒家，看到其文中的“道”就不加分别地混同于先秦的孔孟之道），也应避免求之过深或过新的过度阐释
（比如把“传道受业解惑”理解为“灌输式教学”）。要做到最高程度的还原，须谨记两个原则。一为现实语境，主要包括三个方面：（1）即作者立义撰文的现实原因（针对性）；（2）某一表述与上下文的关系（互文性）；（3）作者所处历史时期的语言特点（例如春秋战国时期的语言和唐代的语言之间的差异）。二为个体特征，指作者独特的思想和个性，这决定了写作的主旨和文风。实际上，对于不同的古人之文所采用的解读方法有因人而异的区别。例如读《论语》《孟子《即与读《老子》《庄子》不同，同属道家的《老子》和《庄子》在解读方法上也有差异。梁启超《国学入门书要目及其读法》论及《老子》的解读方法时说：“注释书未有极当意者，专读白文寻索为妙。”这是由老子的自然之道思想和“道可道，非常道”“大音希声，大象无形”的言意观决定的。</p>
<p>​
个体特征原则在解读韩文的过程中尤为重要。解读韩文，除了理解其本于儒家学说的“传道”论、“气盛言宜”论和“古文”观念等，还应了解其注重抒发个性情感的“不平则鸣”和提倡创新的“陈言务去”的文学观念。其《送孟东野序》曰：“大凡物不得其平则鸣。……其歌也有思，其哭也有怀。凡出乎口而为声者，其皆有弗平者乎！”这种“有思”“有怀”之作的根源，
是来自“不平”现实的真情实感。《师说》本身就是一篇“不平”而“鸣”的妙文。其《答李翊书》曰：“惟陈言之务去。”其《南阳樊绍述墓志铭》曰：“必出于己，不蹈袭前人一言一句。”个性的自足，抒发的充分，不合流俗，不惧非议，使韩愈的散文作品突破了骈文窠臼而成为新的楷模。被清代的著名诗论家叶燮誉为“唐诗之一大变；其力大，其思雄”的韩诗亦如此。</p>
<h5 id="结语">4 ．结语</h5>
<p>​
《师说》言“传道受业解惑”，三者在为师者的职责性质上是并列的。但就由“道”决定的“师道”而言，实际上有层次上的高低之别和步骤上的递进关系：“道”为最高层次的人生哲理，“业”是具体的知识学业或技能，“惑”则始于包括“句读”之“小学”在内的字词句认知以及各种知识、技能。由“解惑”而“受业”（因此全文从“人非生而知之者，孰能无惑？惑而不从师，
其为惑也，终不解矣”开篇），进而达到“传道”，是为师之道的完整过程。</p>
<p>​
古文解读亦然：始于具体的字句和相关的知识，终于作者的情感个性和思想观念。而思想感情的全面了解，又是字句得以确然认识的保障。</p>
<p>（选自《中学语文教学《2017 年第 10 期）</p>
<hr>
<h4 id="师说诵读教学设想-teaching_ideas_for_reading_shishuo">《师说》诵读教学设想
<span class="citation" data-cites="Teaching_Ideas_for_Reading_Shishuo">[@Teaching_Ideas_for_Reading_Shishuo]</span></h4>
<h5 id="基本设想">1. 基本设想</h5>
<p>​
（1）教学重点和难点—本文有破有立，而侧重在破。开头论述从师的必要性和择师的标准，是谓之“立”；而立此标准，正是为了破。第二段即以“师道之不传”领出破的内容，广泛地论及当时社会上各种“耻于从师”的现象，占全文篇幅一半以上，可见这是文章的核心部分，
应视为教学重点。突出这个重点，才能看出韩愈反对流俗的巨大勇气和坚持真理的精神。以下，
先从“圣人无常师”推出“术业有专攻”这一新的命题（可视为补充论述），后以说明写作缘由作结（乃篇末点题之法），皆章法所需，学生能粗知大意即可，不必多讲。</p>
<p>​
第二段不仅是重点，也是难点。其一，它所说的“耻学于师”不是一般性问题，必须联系当时的特殊社会背景进行分析，才能使学生较好地理解作者提出这一问题的思想意义；其二，这段文字汪洋恣肆而又旗帜鲜明，表达了作者针砭时弊的强烈感情，但学生未必能体会出来，这就要求教师在朗读上给予具体指导，否则将不利于记诵。把这两个问题解决得好而又费时不多，便是困难之所在。</p>
<p>​
（2）教学方法一按照先易后难的原则，拟先着重诵读第一、三、四段，然后诵读第二段。之所以要采用这种非常规的诵读方式，是因为第二段的内容比较复杂，有些问题非经讨论不易了然于心，而讨论这些问题，非了解文章全局不可。第一段也要讨论，但不必费很大的气力，
关键是要弄清“道”的概念；第 3 、 4
段就内容和章法的问题予以点拨，不会费时很多。根据从前的教学实践经验，学生记诵这三个段都比较快。这样做，有利于提高学生诵读的兴趣。本文中的难句较多，虚词的用法也比较复杂，适当解释一下是必要的，但切忌烦琐，仍重在学生自行领悟。有些词句特别是虚词可以用比较的方式来启发学生，要把审辞气放在主要位置上，并跟诵读结合起来，一边读一边品味，从中体会作者的思想感情。</p>
<h5 id="诵读的准备">2. 诵读的准备</h5>
<p>​ 主要任务有两项，应在课前预习中完成。</p>
<p>​
（1）以阅读柳宗元《答韦中立论师道书》的一段文字促使学生注意韩愈作《师说》时的特殊，
背景。这段文字被引用在“诵读提示”中，但有省略，现补充抄写如下（文中加横线的是补充句，可加圆括号并注明顺序，抄在黑板上，供学生参考）：</p>
<blockquote>
<p>​
①<em>自魏晋氏以下，人益（更加）不事师（从师），</em>今之世（指唐代）不闻有师；②<em>有，
辄哗笑之，以为狂人。</em>独韩愈奋不顾流俗，犯笑侮，收召后学（学生），作《师说》，
因抗颜（态度严正不屈）而为师。③<em>世（当时人）果群怪聚骂，指目牵引，而增与为言辞。愈是以得狂名。</em></p>
</blockquote>
<p>​
这件事做起来并不费力，但好处甚大。第一，只要稍作解释（例如魏晋实行九品中正制，社会上“门第观念”很深；唐代以官爵的高下区分门第，有“高门”“寒门”之分），学生就可以了解韩愈作此文的特殊背景；第二，柳文中的某些话，如“有，辄哗之，以为狂人”“抗颜而为师”等，都可以从课文中找到证明，对照起来读，兴味一定很浓；第三，还可以激发学生朗读的兴趣（详见下）。</p>
<p>​ （2）要求读出一点语气。可以先做如下提示：</p>
<p>​
从柳文“群怪聚骂，指目牵引，而增与为言辞”这些话可以看出，韩愈此文在当时确实引起了强烈的反响，遭到了许多人的指责和谩骂。其所以如此，是因为作者旗帜鲜明，敢于坚持真理，敢于对抗流俗，这就不可避免地要刺痛一些人。了解这一点，并在试读一遍之后将课文中下面两类语句画出来，仔细加以品味，就可以读出语气了。一类是阐述正确主张的语句（如“道之所存，师之所存也”），另一类是批判恶劣时尚的语句（如“今其智乃反不能及，其可怪也软”）。每一类能画出
2~4
句即可，也不要求画得准确，因为目的在于为连贯记诵寻找支撑点和培养学生自读文言文的良好习惯。</p>
<h5 id="诵读指导">3. 诵读指导</h5>
<p>​
这篇课文的诵读指导包括疏通文意、弄清理路、品味语气三项内容，但各段的侧重点不同。第
1 段要点如下：</p>
<p>​
（1）画出长句中的停顿，如：<em>夫/庸知/其年之先后/生于吾乎？</em></p>
<p>​ （2）“道之所存，师之所存也”也是判断句的一种形式。</p>
<p>​
（3）全段用总提（前两句）分承方式：第三、四句承“解惑”；第五、六、七句承“传道”。据此可分三小层，即教师的任务、从师的必要性、择师的标准。</p>
<p>​ （4）用下面两句话跟原句相比，看看语气有什么不同：</p>
<blockquote>
<p>​
<em>人非生而知之者，岂能无惑？</em>（简单的反问句，不如原句用“孰”，有照应下文“古之圣人“的作用，强调无人例外）</p>
<p>​ <em>其为惑（ ）终不解矣</em> <em>其闻道（
）固先乎吾</em>（不如原句用“也”表示提顿，有惊醒读者的作用）</p>
</blockquote>
<p>​ 第 2 段共 240
字，内容又有一定的广度和深度。为克服记诵的困难，可分三层练习背诵，最后连贯背诵全段。</p>
<p>​ 第一层（开头至“其皆出于此乎”）指导要点如下：</p>
<p>​
（1）首句“师道之不传也久矣”有两种作用：一是过渡（上文说“古”，由此开始说“今”），二是提示本段内容（将论述“师道不传”的原因）。前人谓“似起似承”，即指此而言。</p>
<p>​
（2）用“古之圣人”和“今之众人”作对比论述，先对比学风（“从师而问”和“耻学于师”），后对比两种结果（“益圣”和“益愚”）—“众人”，指士大夫之族，不包括“巫医乐师百工之人”和“不拘于时”者（如李蟠）。文言文中常有这种以全代偏的辞格。</p>
<p>​ （3）下面几句话如删去加括号的虚词，意味有什么变化？</p>
<blockquote>
<p>​ <em>师道（之）不传（也）久矣</em>：慨叹之意不足。</p>
<p>​ <em>犹（且）从师而问焉</em>：强调之意不足。</p>
<p>​ <em>（其）皆出于此（乎）</em>：变问为陈述，平淡无奇。</p>
</blockquote>
<p>​ 第二层（“爱其子”至“吾未见其明也”）指导要点如下：</p>
<p>​
（1）将为子择师和其身耻师这两种现象作对比论述，要害是“惑矣”二字，为下文“小学而大遗”张本。</p>
<p>​
（2）用“不知句读而从师，不解惑而耻学于师”跟原来的表达方式作比较：原句用交错叙述法，又加上倒装句式，使长句化短，行文有波澜，读来铿锵有力。</p>
<p>​ （3）本层中的两个“也”都表示肯定语气。</p>
<p>​ 第三层（“巫医乐师”至段末）指导要点如下：</p>
<p>​
（1）将巫医乐师百工之人跟士大夫之族作对比论述，而侧重说士大夫之族“耻学于师”的表现，因为这正是作者批判的对象。这段话锋芒毕露，最易招致“群怪聚骂”。</p>
<p>​
（2）“位卑则足羞，官盛则近谀。”删去这两句，并不影响行文的连贯，但这恰恰是问题的要害—指出门第观念对择师的危害。作者针砭时弊，主要目标在此。</p>
<p>​
（3）“呜呼！师道之不复，可知矣”已将本段收住，再说“巫医乐师……其可怪也欤”，就大大加强了批判的力量。</p>
<p>​ （4）据下列提示品味虚词所表达的语气：</p>
<p>​
“呜呼”和“嗟乎”能否互换位置（有时区别不严格，但在本段中则显然有别，“呜呼”表示悲叹，“嗟乎”表示慨叹）。</p>
<p>​
“今其智（乃）反不能及”（去掉“乃”就成了客观叙述；加“乃”，有出人意外之意）。</p>
<p>​
“其可怪也欤（怪哉）”（“怪哉”有不可解之意，不好；“其可怪也”是极言这种现象反常，
再加“欤”，更有发人深思之意，讥讽之中兼含劝谕，这才合乎作者意图）。</p>
<p>​
以上分层是为了诵读的方便。如果时间充裕，在学生连贯背诵全段之后，可以再按理路分层：第一层（开头两句）提出师道长期失传的问题；第二层（“古之圣人……官盛则近谀”）分析问题产生的原因。先总提后分说，归结为门第观念作祟；第三层（“呜呼”到段末）归纳本段主旨。</p>
<p>​ 教读这一段，教师的领读是十分必要的。</p>
<p>​ 第 3 段指导要点如下：</p>
<p>​
（1）“圣人无常师”，是本段立论出发点。这是子贡赞孔子的话，所以下句引孔子师事苌弘等四人来证明。“郯子之徒，其贤不及孔子”是作者评论的话，其下省略“而孔子师之，其何故哉”之类的话，所以接着用孔子的话作答—此为前一层。再用“是故”引出作者的结论：“闻道”照应开头；“术业”是新的论点，这是从百工之人不耻相师和孔子师事郯子之徒的事实中推出来的，使作者全文立论更为完善—此为后一层。弄清这个理路，自然容易成诵。</p>
<p>​ （2）“术业”包括技术、专长、学问等，内涵较广。</p>
<p>​ （3）“如是而已”是用限制语气表示决断。</p>
<p>​ 第 4 段可以用问题来启发学生：</p>
<p>​
能不能将本段移至开头，再加“其文曰”三字引出下文？（“不拘于时”和“能行古道”二语是点睛之笔，放在开头，读者不明所指，不如卒章显志为好—借李蟠树立榜样）</p>
<h5 id="内容点拨">4. 内容点拨</h5>
<p>​
可以抓住两个问题来启发学生讨论，并将全文内容贯穿起来，然后让学生说说自己的感受。学生谈自己受到的启发应是开放性的，不拘一格。这两个问题是：</p>
<p>​ （1）对“道之所存，师之所存也”如何理解？</p>
<p>​
在韩愈看来，教师最重要的任务就是“传道”，他“收召后学”，“抗颜而为师”，主要目的就是要传道，即恢复儒家的道统（从“好古文，六艺经传皆通习之”和赞扬孔子好学可以看出这一点来），所以贯穿全文的主线是“师道”二字。“道”是知识的统帅，“师道”才能学到根本上。至于“受业”，这是其次的任务，所以首段不再提，到第二段才以“彼童子之师，授之书而习其句读者，非吾所谓传其道解其惑者也”相照应。“师道”，正是本文宏旨所在。</p>
<p>​ （2）对士大夫之族是怎样严厉批判的？</p>
<p>​
“位卑则足羞，官盛则近谀”是士大夫之族的特殊心态，也是门第观念很深的反映，而门第观念跟以道为师的正确主张是针锋相对的。韩愈无情地嘲笑了这类人在这种观念影响下变得更加愚蠢，说他们的智慧比不上百工之人，语气十分严厉。此外，有些话如“欲人之无惑也难矣”，
表面上是慨叹，其实也骂尽了这个阶层中的不学无术之辈；如“无贵无贱”，看起来是正面陈述主张，实际上是对这个阶层择师标准的彻底否定。</p>
<p>（选自《我教语文——张必锟语文教育论集》，人民教育出版社 2016
年版）</p>]]></content>
      <categories>
        <category>High School</category>
        <category>Chinese</category>
        <category>Classical Chinese Literature and Poetry</category>
      </categories>
      <tags>
        <tag>School Notes</tag>
        <tag>High School</tag>
        <tag>Chinese</tag>
      </tags>
  </entry>
  <entry>
    <title>声声慢·寻寻觅觅-李清照</title>
    <url>/2022/03/12/chinese/High%20School/Classical%20Chinese%20Literature%20and%20Poetry/%E5%BF%85%E4%BF%AE/%E5%A3%B0%E5%A3%B0%E6%85%A2%C2%B7%E5%AF%BB%E5%AF%BB%E8%A7%85%E8%A7%85-%E6%9D%8E%E6%B8%85%E7%85%A7/</url>
    <content><![CDATA[<h2 id="课文解读">课文解读</h2>
<p>​ 这首词是李清照南渡以后的名篇之一。</p>
<p>​
上片，起头三句，“寻寻觅觅，冷冷清清，凄凄惨惨戚戚”，用七组叠字构成，这是词人在艺术上的大胆开拓。词开篇就是“寻寻觅觅”四字，似乎让人一时不知所云，然仔细猜想体会，才知道这是用来反映词人心有所失的精神状态。外族人侵、政权崩溃、夫君病逝、流离失所使得词人异常空虚，无可寄托，心绪难宁。这种若有所失、想要抓住一点什么的心情，就不能不使人产生一种“寻寻觅觅”的心理来。结果是什么也找不到，有的，仍然只能是空虚和无助，词人这才如梦初醒，顿时感到“冷冷清清”。此时，长时间的寂寞、留在词人内心深处的悲哀与苦痛全部涌上心头，“凄凄惨惨戚戚”是最自然不过的内心表白。南宋文学批评家张端义在《贵耳集》中评价李清照的《声声慢》时，感慨全词起头的这十四个叠字用得好，说其“俱无斧凿痕”。这种“俱无斧凿痕”并不仅仅是对词人作词技巧的称颂，更多的是对其表达了难达之情的赞誉。“凄凄”叠字，是外在环境与人物心灵相接的关键，凄可以与冷、清相结合，也可以与惨、戚相结合，从而构成凄冷、凄清、凄惨、凄戚等，所以，由“冷冷清清”的环境到“惨惨戚戚”的心境，“凄凄”叠字用得最妙。从这个角度去看，这三句十四个叠字，实际上有三个层次，从“寻寻觅觅”到“冷冷清清”再到“凄凄惨惨戚戚”，逐层深入，文情并茂。</p>
<p>​
“乍暖还寒时候，最难将息”，这一句本应说由于心情不好，身体也不是太好，但词人却抛开境之冷清与心之惨戚不说，而把一切归于天气“乍暖还寒”。同样，“三杯”句也是如此，词人本应说自己借酒浇愁而愁难消除，但她偏偏不这样写，而只说淡酒不敌晚来急风。这种行文上的腾挪笔法很值得揣摩。就文意来说，这四句显然是上文十四个叠字语意的延伸。</p>
<p>​
“雁过也，正伤心，却是旧时相识”，雁是南飞的秋雁，正是从前在北方见到的，之所以说是“旧时相识”，是因为词人想借此表达自己浓重的思乡之情。在急风、淡酒、浓愁的情境中，一群大雁进入词人的视野，给冷清孤寂的词人带来的只能是更加黯然的心境，那“旧时相识”带给她的是旧时的信息，而岁月已然无情远去，抛下她一人在孤寂中打发冷清时日！因此，大雁让词人品到的是一种更加灰暗的心境。</p>
<p>​
总体来说，上片从一个人寻觅无着，写到借酒浇愁，又借南飞的雁阵，写更浓的包括思乡情怀在内的一种愁绪。</p>
<p>​
下片“满地黄花”三句，承接上片最后写到的秋日高空，转写自家庭院。黄花当初盛开时可以插在头上，而如今枯萎，满地堆积，再也无人摘取。这是明写花，而暗喻岁月流逝，人已衰老，憔悴。</p>
<p>​
“守着窗儿，独自怎生得黑”，写词人兀自坐着，无聊至极，天却有意不肯黑下来。这就把一个人百无聊赖、无所依傍的心情写得淋漓尽致。“梧桐”两句，承袭“守着窗儿”句，是说即使挨到黄昏又如何呢，秋雨梧桐只能更添愁绪。“细雨”的“点点滴滴”正是在只有极其寂静的环境中“守着窗儿”才能听到的声音，这种“细雨”的“点点滴滴”只能让词人更苦闷、更孤独、更凄凉。这些点滴不是滴在耳里，而是滴在了心里和孤寂的灵魂里。所以，词人才说：“这次第，怎一个愁字了得！”词人在这里化繁为简，化多为少，把所有的凄苦，所有的孤独，所有的无奈，所有纷繁的说不尽的思绪，用一句“怎一个愁字了得”代替。“愁”字之外到底还有怎样的心情呢？无法用言语说得清啊！这种戛然而止的写法，给读者留下阔大的想象空间，让人回味不已。</p>
<p>​
李清照的这首《声声慢》与她的早期词作相比，在情感内涵上发生了巨大的变化。失去了丈夫，词人深切地感受到人间的孤独和人生的乏味，往日的一切都失去了意义和亮色。这是词人情感历程的真实写照，也是时代苦难的象征。</p>
<p>​
李清照词的语言独具特色。第一，无论是口语，还是书面语，一经她提炼熔铸，就别开生面，精妙清丽，风韵天然。《声声慢》开头连用十四个叠字，从动作、环境到心理感受，多层次地表现出寡居妇人闷坐无聊、茫然若失而四顾寻觅的恍惚悲凉心态，而这种叠字的连用，更是千古创格。第二，李清照善于用最平常、最简练的生活化语言精确地表现复杂微妙的心理和情感活动。如“梧桐更兼细雨，到黄昏、点点滴滴”，这十三个字既写到了细雨的声响，又把词人独坐窗前，在黄昏点点滴滴的雨声中的孤独寂寞描画得入木三分，写出了灵魂的孤苦。</p>
<h2 id="参考资料">参考资料</h2>
<h3 id="参考译文">参考译文</h3>
<div class="classcial-chinese-literature-and-poetry-translation"><div class="paragraph"><p class="original-text">寻寻觅觅，冷冷清清，凄凄惨惨戚戚。</p><p class="translation">苦苦地寻寻觅觅，却只见冷冷清清，怎不让人凄惨悲戚。</p><p class="original-text">乍暖还寒时候，最难将息。</p><p class="translation">秋天总是忽然变暖，又转寒冷，最难保养休息。</p><p class="original-text">三杯两盏淡酒，怎敌他、晚来风急！</p><p class="translation">喝三杯两杯淡酒，怎么能抵得住傍晚的寒风紧吹？</p><p class="original-text">雁过也，正伤心，却是旧时相识。</p><p class="translation">一行大雁从头顶上飞过，更让人伤心，因为都是当年为我传递书信的旧日相识。</p></div><div class="paragraph"><p class="original-text">满地黄花堆积，憔悴损，如今有谁堪摘？</p><p class="translation">园中菊花堆积满地，都已经憔悴不堪，如今还有谁来采摘？</p><p class="original-text">守着窗儿，独自怎生得黑！</p><p class="translation">孤独地守着窗前，独自一个人怎么熬到天黑？</p><p class="original-text">梧桐更兼细雨，到黄昏、点点滴滴。</p><p class="translation">梧桐叶上细雨淋漓，到黄昏时分，那雨声还是点点滴滴。</p><p class="original-text">这次第，怎一个愁字了得！</p><p class="translation">这般光景，怎么能用一个“愁”字了结！</p></div></div>
<h3 id="参考文献">参考文献</h3>
<h4 id="声声慢集评">《声声慢》集评</h4>
<p>​
宋人中填词，李易安亦称冠绝。使在衣冠，当与秦七、黄九争雄，不独雄于闺阁也。其词名《漱玉集》，寻之未得。《声声慢》一词，最为婉妙。…………山谷所谓以故为新，以俗为雅者，易安先得之矣。（杨慎《词品》）</p>
<p>​
《声声慢》一阙，张正夫称为公孙大娘舞剑器手，以其连下十四叠字也。此却不是难处，因调名《声声慢》，而刻意播弄之耳。其佳处，后又下“点点滴滴”叠四字，与前照映有法，不是草草落句。玩其笔力，本自矫拔，词家少有，庶几苏、辛之亚。（陆昶《历朝名媛诗词》）</p>
<p>​ 此词最得咽字诀，清真不及也。（梁启超《饮冰室评词》）</p>
<p>​
此首纯用赋体，写竞日愁情，满纸鸣咽。起下十四叠字，总言心情之悲伤。中心无定，如有所失，故曰“寻寻觅觅”。房栊寂静，空床无人，故曰“冷冷清清”。“凄凄惨惨戚戚”六字，更深一层，写孤独之苦况，愈难为怀。以下分三层申言可伤之情景。“乍暖”两句，言气候寒暖不定之可伤。“三杯”两句，言晓风逼人之可伤。“雁过”两句，言雁声人耳之可伤。换头三句，仍是三层可伤之事。“满地”两句，言懒摘黄花之可伤。“守着”两句，言日长难黑之可伤。“梧桐“两句，言雨滴梧桐之可伤。末句，总束以上六层可伤之事。（唐圭璋《唐宋词简释》）</p>
<p>​
一个愁字不能了，故有十四叠字，十四个叠字不能了，故有全首。总由生活痛苦，不得不吐而出之，绝非无此生活而凭空想写作可比也。（刘永济《唐五代两宋词简析》）</p>
<hr>
<h4 id="物境与心境交互染色声声慢赏析-a_combination_of_env_and_mood_appreciation_of_shengshengman_xunxunmimi">物境与心境交互染色—《声声慢》赏析
<span class="citation" data-cites="A_Combination_Of_Env_and_Mood_Appreciation_of_Shengshengman_Xunxunmimi">[@A_Combination_Of_Env_and_Mood_Appreciation_of_Shengshengman_Xunxunmimi]</span></h4>
<p>​
这首词是李清照南渡后的名篇之一。它深情婉转，造语新奇，被后人誉为“绝唱”。</p>
<p>​
南渡后，李清照的生活发生了巨变。金人的笳鼓，击碎了北宋王朝的天堂迷梦，清照的美满家庭和她的“穷遐方绝域，尽天下古文奇字之志”（《金石录后序》）随之破灭了。更有甚者，颠沛流离的逃亡生活，还使她失去了感情笃厚、志同道合的丈夫赵明诚。国破、家亡、夫死的种种悲惨遭际，使她的孤寂凄清的心绪与日俱增。这首词就是在这样一个背景下写成的。</p>
<p>​
词一开头，就“创意出奇”（罗大经《鹤林玉露》）地运用七组叠字，描绘了一个若有所失、
心神不宁、郁郁寡欢的愁妇形象：</p>
<blockquote>
<p>寻寻觅觅，冷冷清清，凄凄惨惨戚戚。</p>
</blockquote>
<p>​
七组叠字，可谓起势峻耸，它层层加浓渲染了愁妇的三个心理发展过程：首先，“寻寻觅觅”，
是愁妇内心空虚试图寻觅精神慰藉的表现。周邦彦有“闲寻旧踪迹”（《兰陵王·柳》）之句，陆游也有“推愁不去还相觅”（《老学庵笔记》）的感受。李清照此时此地所产生的这种心绪，是极其自然而真实的。那早年的蹴荡秋千、烹茶猜书的欢乐，那秉烛对读、研摩古玩、鉴赏奇字的甜蜜夜晚，这一切的一切，都跑到哪里去了呢？重温旧梦、追寻往昔的希冀失望了，心中有一种说不出来的苦滋味。紧接着，过渡到第二层，寻觅无所得，她便环顾四周，只觉得残秋沉寂，一片冷清，连同她内心发出的阵阵寒冷，浑身顿增难以排遣的凄凉和痛楚。于是，主人公的心绪顺势推进到第三层：死生悬隔，一切都成泡影了，面对一逝而不复返的人生，剩下的只有孤寂哀愁、
自悲自恸了。因而她立即陷入了难以自拔的“凄凄惨惨戚戚”的痛苦之中。</p>
<p>​
冷清凄惨，不能给人霎时解脱，偏偏又遇上了“乍暖还寒时候”。天气的冷暖多变，正是万物萧疏的残秋季节，所谓“离人心上秋”，它最能勾起人们的愁思和烦恼。因此，原想把身体调养一下的女主人公，碰到这种境遇，也就无能为力了。所以，“乍暖还寒时候，最难将息”，乃是女主人公苦闷象征的最集中表现。</p>
<p>​
当一个人苦闷难熬的时候，往往要设法排遣。作为“女中之杰”的李清照，她常常要与不幸的命运抗争：“何以解忧？唯有杜康。”（曹操《短歌行》）古人借酒消愁的事例霎时涌来，清照喝了“三杯两盏淡酒”，但哪里能敌得过急促凛冽的秋风袭击呢？“晚来风急”的“晚”字，据《草堂诗余别集》及朱彝尊、汪森编《词综》及张惠言《词选》皆作“晓”字，是可从的。故词的上下文，显然是写一整天的愁绪和感受。譬如下文便有“守着窗儿，独自怎生得黑！”可见此时尚未到“晚”；再下句“梧桐更兼细雨，到黄昏、点点滴滴”，也证明雨是下了一整天的，直到黄昏，才越下越大。再者，“淡酒”，一般多指早酒而言，古人在卯时（晨五时至七时）饮酒，
称“卯酒”，也称“扶头酒”。如用“晓来风急”，则使词境更添一番情趣：即说女主人公昨夜是辗转反侧，刚刚度过了一个无人共语、独宿不眠的夜晚，因而她才起来喝“早酒”。也只有在这样的情况下，女主人公被一阵凛冽寒冷的晨风袭击，吹醒了酒意，才仰望天空，发现了使她更为难堪的景象：</p>
<blockquote>
<p>雁过也，正伤心，却是旧时相识。</p>
</blockquote>
<p>​
寄雁传书，是古人希图寄信给远方亲人的一种幻想。飞雁掠过，往往会联想到她是否带来了亲人的消息或者捎走自己欲寄的书信。而如今呢，丈夫已经死了，谁还能把信再寄到她所期望的人儿那里去呢？读了“雁过也”句，令人立即联想到李清照早年的名句“征鸿过尽，万千心事难寄”，那时，赵明诚还活着，她们还可以互寄情思，而现在呢，大雁空是“旧时相识”了，再也不能为她递信服务了。故大雁的飞过，反而激起女主人公的离群丧偶之感，增添了她的空寂和绝望。</p>
<p>​
词的上片，如果说是着重在主观感受的空间描述，而下片，则是把内心旋律与外部自然界的客观变化紧密联系起来，进行了心境与物境交互感应的“特写镜头”的描绘：</p>
<blockquote>
<p>满地黄花堆积，惟悴损，如今有谁堪摘？</p>
</blockquote>
<p>​
出现在读者面前的，是一片散乱倾倒的“惟悴”黄花。黄花，即菊花，在残秋季节，它开始凋零了，但是曾经傲对寒霜的菊花，它是不会落花瓣的，即使倒损了，它也连同枝叶倒在一起，故其“惟悴损”的形象，竞是满地“堆积”。这显示了作者观察生活的细致入微，也体现了李清照孤傲一世的个性气质。但是，如今的黄花，已经“惟悴损”了，不会有人再来采摘了。词人枉度一生,桑榆晚景,愈加孤寂凄凉,在物境的牵惹下,她内心的痛楚怎能禁受得了呢?于是:</p>
<blockquote>
<p>守着窗儿，独自怎生得黑！</p>
</blockquote>
<p>​
这个“守”字，写得十分准确。因为只有独自一人倚着窗口，才能使用“守”字。也只有心存愁绪的人，时间才是长的。所以李清照在万般难熬的愁戚中，感到度日如年，从而生发了无声的慨叹：怎样才能挨到黄昏天黑呀！</p>
<p>​
词的以下描写，进一步从“特写镜头”的物境，烘托女主人公深沉的心境，形成物境、心境，
交相染色，词情层层加浓的效果：</p>
<blockquote>
<p>梧桐更兼细雨，到黄昏、点点滴滴。</p>
</blockquote>
<p>​
风急、雁来、惟悴黄花，已经足够牵动女主人公的无限愁绪了，而出现在眼前的景色，竟又是连绵的蒙蒙细雨和不断敲打着梧桐树叶的恼人声响。古人有诗云：“如此无聊闲院落，是谁窗外种梧桐。”梧桐树本来就牵惹人们愁思，更何堪绵绵细雨的滴答敲击声呢！待到黑昏，雨滴越下越大了，它打落了桐叶，也滴穿了孤单无依的词人的心。</p>
<p>​
“梧桐雨”，本身又是一个典故，它的使用，还渲染了另一番情趣。在白居易的《长恨歌《中，有“秋雨梧桐叶落时”的名句，意在刻画唐明皇思念死去的宠妃杨贵妃而不可得，凝视秋雨敲打梧桐叶落而触景伤情，这是一种生离死别的情感。因而李清照运用此典，实是更充分地表达了她夫死神伤的感情。怪不得《三百词谱》便把这首词直名为《梧桐雨》了。</p>
<p>​
风急、雁过、黄花堆积、梧桐细雨、残秋黄昏，一系列特写镜头组成了一幅天然的悲凄画面。作者选取了这种种牵动人们愁思的景物，意在成百倍地加浓女主人公的内在愁绪。最后，在难以名状、无法解脱的苦闷中，顿时汇为结尾的一句：</p>
<blockquote>
<p>这次第，怎一个愁字了得！</p>
</blockquote>
<p>​
“愁”字实是全词的总旨，作者在最末画龙点睛地写出它，实起到了牵动全词各个部位的作用。回顾全篇，则无一字无一句、无一事无一物不是在抒发愁情，加以种种典型的动作、神情、环境气氛等多层次多侧面的渲染，积累了众多愁绪的种子，最后归拢到这个“愁”字时，就带动全篇，突现了女主人公复杂的内心世界，也把女主人公的愁情推向了最高峰。再者，“怎一个愁字了得”，又是一句反诘语，说明女主人公在这个“愁”字之外，尚有更广泛、更幽深的愁情未能概括进去，这就给读者留下了无限驰骋想象的余地，达到了钟嵘在《诗品》中所说的“味之者无极，闻之者动心”的强烈艺术效果。因此，这最末一个“愁”字，从表面看，似乎是一个“露“笔，而它的实体，却是一个“藏”笔，它包含着更为丰富、更为含蓄的内容，颇具言外之意、弦外之音的妙处。</p>
<p>​
通过以上分析，我们可以看到，这首词在艺术方法上的主要特点，是把握了女主人公内在心绪和外界事物之间的矛盾关系，进行了“滚雪球”般的推进描写。女主人公的主观情感和心理活动的每一个波澜起伏，全与客观景物的更迭发生密切的配合，一句扣紧一句，一事粘连一事，在心境与物境的相互作用和相互矛盾的不断扩大过程中，愁绪愈积愈浓、愈结愈大，最后达到难以遏制的地步，而使人有九曲回肠、愁肠百结之感。</p>
<p>​
李清照在词中写了这么多愁思、愁绪、愁情，是否像有些人所评价的那样，是低沉，是消极，或说她“只是抒写了她作为一个落难贵夫人的个人的哀愁”呢？不，不能这样看。“个别就是一般”，李清照处在国破家亡、夫死无依的离乱生活中，她的不幸遭际是与当时整个国耻民难紧密联系在一起的，李清照本人就是当时千千万万个受苦受难者中的一个，因而她个人的哀愁，
实际也反映了当时具有同样遭际者的普遍哀愁。从另一个角度说，李清照这些哀愁的产生，不正是偏安江左的南宋小朝廷的投降屈辱政策所酿成的吗？她的哀愁，难道不正能衬托出那无比黑暗、令人窒息和难以生存下去的险恶现实吗？因而我说《声声慢》的社会内容，还是颇为丰富而深刻的，它暗含着对国耻民难的愤懑和批判，具有积极的认识价值，是绝不能用一两个“消极”“低沉”或“个人哀愁”的词句，就能把它轻易抹杀掉了的。</p>
<p>​
从另一方面说，李清照作为一个流落他乡、孤独无依的弱女子，她对生活的抗争能力是有限的，她没有也不可能像辛弃疾那样去直接参加抗金斗争，从而写出慷慨杀敌的激昂词篇。对待李清照这样一个具体的作者，不能提出过苛的要求。她能够突破个人生活的艰难，独自迈往崎岖漫长的人生道路，能够抒写种种哀愁时显出某些与险恶命运抗争的意念，这就十分难能可贵了。因此，我们不能不看到，这首词在低沉情调中是仍蕴含着一定积极因素的。</p>
<p>​
再者，这首词在艺术形式上的美，也是难与伦比的。开头的七组叠字和下片的两组叠字，突显了这首词的语言特点。它们质朴清新、浅俗易懂，既无典故，又无辞藻，但却准确地表达了词人所处的特定环境及由此产生的特定情感，使读者恍如亲临其境，若闻其声，如见其面。说明作者炼字技能已达到“炉火纯青”的地步。顾炎武在其《日知录》中曾指出：“用叠字最难”，
做到“复而不厌”“赜而不乱”则更难。李清照在此词中连用叠字，不仅不显斧凿之痕，反而达到了自然流畅、声意皆出、形神俱肖的效果，实在是“超然笔墨蹊径之外”（见《花草新编》），“真如大珠小珠落玉盘也”（见徐轨《词苑丛谈》）。另，陆蓥《问花楼词话》还把此词誉为词家叠字之典范，说它“二阕共十余个叠字，而气机流动，前无古人，后无来者，可为词家叠字之法”。可见李清照在此词中运用了如此众多的叠字，实是她词作中的一大创造。</p>
<p>​
随着叠字的流畅运用，在韵律方面也显现了它独特的造诣。譬如大量双声叠韵字的出现。那冷与清、暖与寒、凄与惨、惨与戚、点与滴等的自然音响和鲜明节奏，读来朗朗上口、铿锵悦耳，而且抑扬顿挫、波澜起伏，似乎有一把小榔头阵阵敲打着你的心胸。加以全词又配以众多的齐齿音字和舌音字，更显得富有音乐美，也更能渲染出女主人公的如泣似诉的形神姿态。如寻、
觅、清、凄、将、息、急、积等这些齐齿音字，如点、滴、得、第等这些舌音字，它们的调子，
都是非常短促轻细的，读来像是停留在唇齿边上，发出低低的细声，仿佛女主人公在啮齿叮咛、
自泣自诉。还据夏承焘先生说：“尤其是末了几句，＇梧桐更兼细雨，到黄昏、点点滴滴。这次第，怎一个愁字了得！＇二十多个字里，舌音、齿音交相重叠，是有意以这种声调来表达她心中的忧郁和怅惘。”（见《唐宋词欣赏》）可见，李清照在语言上的运用，是极其娴熟而富有成果的。它们都明白如话，而又“本色当行”（刘体仁语）；既恪守词律而又挥洒自如。这种殊异的艺术效果，绝不是轻而易举的获得，正如周济《介存斋论词杂著》说李清照的语言“是锻炼出来，非偶然拈得也”。再者，李清照在其《词论》中，曾强调“歌词分音，又分五声，又分六律，又分清浊轻重”。可见李词重协音律而又讲求字词声响，这首词的创作，应是她《词论》的成功实践。</p>
<p>（选自《李清照词鉴赏》，齐鲁书社 1986 年版）</p>]]></content>
      <categories>
        <category>High School</category>
        <category>Chinese</category>
        <category>Classical Chinese Literature and Poetry</category>
      </categories>
      <tags>
        <tag>School Notes</tag>
        <tag>High School</tag>
        <tag>Chinese</tag>
      </tags>
  </entry>
  <entry>
    <title>归园田居五首其一-陶渊明</title>
    <url>/2022/03/12/chinese/High%20School/Classical%20Chinese%20Literature%20and%20Poetry/%E5%BF%85%E4%BF%AE/%E5%BD%92%E5%9B%AD%E7%94%B0%E5%B1%85%E4%BA%94%E9%A6%96%E5%85%B6%E4%B8%80-%E9%99%B6%E6%B8%8A%E6%98%8E/</url>
    <content><![CDATA[<h2 id="课文解读">课文解读</h2>
<p>​
《归园田居》是陶渊明的组诗作品，共五首，教材选的是第一首。在这首诗中，诗人通过叙述平生志趣和描写田园生活，表现了对仕途生涯的厌恶和摆脱尘网的快慰，抒发了对山林生活的热爱之情。</p>
<p>​
诗的前八句写诗人因鄙弃仕途而归田。开头四句写诗人误入官场，渴望归隐。“少无适俗韵，性本爱丘山”二句写自己年轻的时候就没有适应世俗的气质，本性是热爱山林田园的，意在说明诗人本性与官场行事作风之间的矛盾。陶渊明自幼受儒家思想熏陶，曾有过“大济苍生”的宏愿，并非天性就愿意隐居山林。只因现实政治黑暗，“有志不获骋”，才转而“爱丘山”。接下二句，以鸟、鱼作比，写自己思归之情。再二句写归田后守拙开荒，表示决心躬耕自食。“守拙”是对“适俗”而言的，从中反映了诗人对尔虞我诈的官场生活的厌恶。</p>
<p>​
后十二句写恬静、美好的田园生活以及诗人的愉快心情。其中前八句主要是写景，在景物描写中透露了诗人对田园生活的热爱。最后四句通过写“无尘杂”的“户庭”和“有余闲”的“虚室”来衬托诗人恬淡的心境，并直接抒发了自己回归田园的欣喜之情。这里要注意的是，诗人对田园生活的美好描写，并不是为了美化乡村，而是把它作为肮脏的世俗社会的对立面来写的。他是通过赞美乡村的隐居生活来肯定自己、否定官场的。</p>
<p>​ 此诗的艺术特点如下：</p>
<p>​
首先，层次清晰，结构谨严。诗人先写辞官归田，后写开荒南野，中间虽有回忆往事，但基本上依时写来，次第分明。并且，开头两句总领全诗，中间几处照应题旨，最后两句，以“久”扣“三十年”，以“樊笼”扣“尘网”，以“复得”应“误落”，以“自然”应“丘山”，互为映带，以结全篇。</p>
<p>​
其次，善于写景，情景交融。如“暖暖远人村，依依墟里烟。狗吠深巷中，鸡鸣桑树颠”一段，以动写静，绘声绘色，构成了一幅淳朴宁静而又充满情趣的村居图。同时，在这景物描写中还寄寓了诗人的美好情操和快慰心情。</p>
<p>​
再次，运用比喻和反衬手法，来表达自己的爱憎之情。诗人写田园景物，用实笔描绘，使之具体形象，生动美好；而写官场生活，则用比喻，如“尘网”“樊笼”等，使人望而生恶，并且以其反衬田园生活，就更加激起人们对污浊的仕宦生涯的厌恶和对淳真的田园生活的热爱。</p>
<p>​
最后，语言朴素自然。诗中既无华丽的辞藻，也无深奥的典故，而是用当时习用的语言，如“方宅”“草屋”“榆柳”“狗吠”“鸡鸣”等。这些词语经诗人组织入诗，真切地表现了田园风光。</p>
<p>​ 教学本篇时，学生认知上有两点需要教师加以引导。</p>
<p>​
一是陶渊明弃官归隐之事，经过后世各代的标举，甚至美化，让人以为是一件轻而易举的浪漫之事。教师可联系相关资料（如《五柳先生传》等），从物质条件、身体状况、耕作之苦等方面进行介绍，体会陶渊明毅然离开官场、回归田园的可贵。</p>
<p>​
二是高一学生对语言文字总体上处于唯美化追求的阶段，他们喜欢唐诗，喜欢宋词，而对陶渊明闲散冲淡的“田家语”，也许会视为平常语。教师要引导他们通过反复诵读，悉心玩味，体会苏东坡评价陶渊明诗说的“其诗质而实绮，癯而实腴”（《与苏辙书》）和“渊明诗初视若散缓，熟视有奇趣”（惠洪《冷斋夜话》中引东坡语）。</p>
<h2 id="参考资料">参考资料</h2>
<h3 id="参考译文">参考译文</h3>
<div class="classcial-chinese-literature-and-poetry-translation"><div class="paragraph"><p class="original-text">少无适俗韵，性本爱丘山。</p><p class="translation">年轻时就没有适应世俗的性格，生来就喜爱大自然的风物。</p><p class="original-text">误落尘网中，一去三十年。</p><p class="translation">错误地陷落到仕途罗网，转眼间远离田园已十余年。</p><p class="original-text">羁鸟恋旧林，池鱼思故渊。</p><p class="translation">笼子里的鸟儿怀念以前生活的森林，池子里的鱼儿思念原来嬉戏的深潭。</p><p class="original-text">开荒南野际，守拙归园田。</p><p class="translation">我愿到南边的原野里去开荒，依着愚拙的心性回家耕种田园。</p><p class="original-text">方宅十余亩，草屋八九间。</p><p class="translation">绕房宅方圆有十余亩地，还有那茅屋草舍八九间。</p><p class="original-text">榆柳荫后檐，桃李罗堂前。</p><p class="translation">榆树柳树成荫遮盖了后屋檐，桃树李树整齐的栽种在屋前。</p><p class="original-text">暧暧远人村，依依墟里烟。</p><p class="translation">远处的邻村屋舍依稀可见，村落上方飘荡着袅袅炊烟。</p><p class="original-text">狗吠深巷中，鸡鸣桑树颠。</p><p class="translation">深深的街巷中传来了几声狗吠，桑树顶有雄鸡不停啼唤。</p><p class="original-text">户庭无尘杂，虚室有余闲。</p><p class="translation">庭院内没有世俗琐杂的事情烦扰，静室里有的是安适悠闲。</p><p class="original-text">久在樊笼里，复得返自然。</p><p class="translation">久困于樊笼里毫无自由，我今日总算又归返林山。</p></div></div>
<h3 id="参考文献">参考文献</h3>
<h4 id="归园田居其一集评">《归园田居》（其一）集评</h4>
<p>​
园田诸首，最有次第。其一为初回，地几亩，屋几间，树几株，花几种，远村近烟何色，鸡鸣狗吠何处，琐屑详数，语俗而意愈雅，恰见去忙就闲，一一欣快，极平常之景，各生趣味。（黄文焕《陶诗析义》）</p>
<p>​
是《归园田居》总叙，下四首分赋其事。首四句赋起，一反以正。“羁鸟”二句，兴而比也，作上下文通脉。末二句锁尽通篇。（邱嘉穗《东山草堂陶诗笺》）</p>
<p>​
此诗纵横浩荡，汪茫溢满，而元气磅礴。大舍细入，精气入而粗秽除。奄有汉魏，包孕众胜。后来惟杜公有之。韩公校之，犹觉圭角镵露，其余不足论矣。“少无适俗韵”八句当一篇大序文，而气势浩迈，跌宕飞动，顿挫沉郁。“羁鸟”二句，于大气驰纵之中，回鞭亸鞚，顾盼回旋，所谓顿挫也。“方宅”十句不过写田园耳，而笔势骞举，情景即目，得一幅画意。而音节铿锵，措词秀韵，均非尘世吃烟火食人语。“久在”二句，接起处换笔另收。公以义熙冬归，此言桑麻长，种豆濯足，皆非冬景诗，不必定为是年作也。（方东树《昭昧詹言》）</p>
<p>​
此诗娓娓道来，率真之情贯穿全篇，其浑厚朴茂，少有及者。自“方宅十余亩”以下八句，画出一幅田园景色，仿佛带领读者参观，一一指点，一一说明，言谈指顾之间自有一种乍释重负之愉悦。结尾二句画龙点睛，饱含多少人生经验！（袁行霈《陶渊明集笺注》）</p>
<hr>
<h4 id="归园田居其一赏析-appreciation_of_guiyuantianju_1">《归园田居》（其一）赏析
<span class="citation" data-cites="Appreciation_of_Guiyuantianju_1">[@Appreciation_of_Guiyuantianju_1]</span></h4>
<p>​ 公元 405
年（东晋安帝义熙元年），陶渊明在江西彭泽做县令，不过八十多天，便声称“岂能为五斗米折腰向乡里小儿”，挂印回家。从此结束了时隐时仕、身不由己的生活，终老田园。归来后，作《归园田居》诗一组，共五首，描绘田园风光的美好与农村生活的淳朴，抒发归隐后愉悦的心情。这是第一首。</p>
<p>​
陶诗通常呈现素淡平易的面貌，不见组织雕镂之工。然而苏东坡说：“其诗质而实绮，癯而实腴。”（《与苏辙书》）又说：“渊明诗初视若散缓，熟视有奇趣。”（《冷斋夜话》引）东坡偏爱陶公之为人，尤推崇其诗，以为自古无人能及，反复吟咏，烂熟在胸，并一一唱和，著有《和陶集》，体验实较常人为深。我们便以这一首为例，主要谈其质朴中的深味，散缓中的精巧，其他问题，便不多作议论。</p>
<p>​
起首四句，先说个性与既往人生道路的冲突。韵、性，都是指为人品格与精神气质。所谓“适俗韵”又是什么呢？无非是逢迎世俗、周旋应酬、钻营取巧的那种情态、那种本领吧，这是诗人从来就未曾学会的东西。作为一个真诚率直的人，其本性与淳朴的乡村、宁静的自然，似乎有一种内在的共通之处，所以“爱丘山”。前二句表露了作者清高孤傲、与世不合的性格，为全诗定下一个基调，同时又是一个伏笔，它是诗人进入官场却终于辞官归田的根本原因。但是，人生常不得已。作为一个官宦人家的子弟，步入仕途乃是通常的选择；作为一个熟读儒家经书、欲在社会中寻求成功的知识分子，也必须进入社会的权力组织；便是为了供养家小、维持较舒适的日常生活，也需要做官。所以不能不违逆自己的“韵”和“性”，奔波于官场。回头想起来，那是误入歧途，误入了束缚人性而又肮脏无聊的世俗之网。“一去三十年”，当是“十三年”之误。从陶渊明开始做官到最终归隐，正好是十三年。这一句看来不过是平实的记述，但仔细体味，却有深意。诗人对田园，就像对一位情谊深厚的老朋友似的叹息道：“啊，这一别就是十三年了！”内中多少感慨，多少眷恋！但写来仍是隐藏不露。</p>
<p>​
下面四句是两种生活之间的过渡。虽是“误落尘网”，却是情性未移。“羁鸟恋旧林，池鱼思故渊”两句集中描写做官时的心情，从上文转接下来，语气顺畅，毫无阻隔。因为连用两个相似的比喻，又是对仗句式，便强化了厌倦旧生活、向往新生活的情绪；再从这里转接下文“开荒南野际，守拙归园田”，就显得自然妥帖，丝毫不着痕迹了。“守拙”回应“少无适俗韵”—因为不懂得钻营取巧，不如抱守自己的愚拙，无须勉强混迹于俗世；“归园田”回应“性本爱丘山”—既有此天性，便循此天性，使这人生自然舒展，得其所好。开始所写的冲突，在这里得到了解决。</p>
<p>​
从冲突中摆脱出来，心中欢喜，情绪开张，以下八句，便以欣欣之笔，咏唱居所一带的风光。这里描写的一切，是极为平常的。你看：土地，草房；榆柳，桃李；村庄，炊烟；狗吠，鸡鸣。但正是这些平平常常的事物，在诗人笔下，构成了一幅十分恬静幽美、清新喜人的图画。在这画面上，田园风光以其清淡平素的、毫无矫揉造作的天然之美，呈现在我们面前，使人悠然神往。这不是有点儿像世外桃源的光景吗？“土地平旷，屋舍俨然，有良田美池桑竹之属。阡陌交通，鸡犬相闻。其中往来种作，男女衣着，悉如外人。黄发垂髫，并怡然自乐。”（《桃花源记》）其实，幻想的桃源也好，现实的乡村也好，都是表现着陶渊明的一种理想：合理的社会，应当是没有竞争、没有虚伪、没有外加的礼仪束缚，人人自耕自食的社会。这种社会当然不可能实现；陶渊明笔下的乡村，也有意忽略了生活艰难和残酷的一面。但作为诗的构造，却给人以美的安慰。—文学常常起着这样的作用。</p>
<p>​
这一段初读起来，只觉得自然平淡，其实构思安排，颇有精妙。“方宅十余亩，草屋八九间”，是简笔的勾勒，以此显出主人生活的俭朴。但虽无雕梁画栋之堂皇宏丽，却有榆树柳树的绿荫笼罩于屋后，桃花李花竞艳于堂前，素淡与绚丽交掩成趣。前四句构成一个近景。但陶渊明要描写出和平安宁的意境，单这近景还不足显示。所以接着把笔移向远处的景象：“暖暖远人村，依依墟里烟。”暖暖，是模糊不清的样子，村落相隔很远，所以显得模糊，就像国画家画远景时，往往也是淡淡勾上几笔水墨一样。依依，形容炊烟轻柔而缓慢地向上飘升。这两句所描写的景致，给人以平静安详的感觉，好像这世界不受任何力量的干扰。从四句近景转到两句远景，犹如电影镜头慢慢拉开，将一座充满农家风味的茅舍融化到深远的背景之中。画面是很淡很淡，味道却是很浓很浓，令人胸襟开阔，心旷神怡。读到这里，人们或许会觉得还缺少点什么。是的，这景象太过清静，似乎少一点生气。但诗人并没有忘记这一点，请听，“狗吠深巷中，鸡鸣桑树颠”，一下子，这幅美好的田园画不是活起来了吗？这二句套用汉乐府《鸡鸣》“鸡鸣高树颠，狗吠深宫中”而稍加变化。但诗人绝无用典炫博的意思，不过是信手拈来。他不写虫吟鸟唱，却写了极为平常的鸡鸣狗吠，因为这鸡犬之声相闻，才最富有农村环境的特征，和整个画面也最为和谐统一。隐隐之中，是否也渗透了《老子》所谓“小国寡民”“鸡犬之声相闻，民老死不相往来”的理想社会观念？那也难说。单从诗境本身来看，这二笔是不可缺少的。它恰当地表现出农村的生活气息，又丝毫不破坏那一片和平的意境，不会让你感到喧嚣和烦躁。以此比较王籍的名句“蝉噪林逾静，鸟鸣山更幽”，那种为人传诵的所谓“以动写静”的笔法，未免太强调、太吃力。</p>
<p>​
从写景转下来，是这样两句：“户庭无尘杂，虚室有余闲。”“尘杂”是指尘俗杂事，“虚室”就是静室。既是做官，总不免有许多自己不愿干的蠢事，许多无聊应酬吧？如今可是全都摆脱了，在虚静的居所里生活得很悠闲。不过，最令人愉快的，倒不在这悠闲，而在于从此可以按照自己的意愿生活。全诗便以这样两句收结：“久在樊笼里，复得返自然。”自然，既是指自然的环境，又是指顺适本性、无所扭曲的生活。这两句再次同开头“少无适俗韵，性本爱丘山”相呼应，同时又是点题之笔，揭示出《归园田居》的主旨。但这一呼应与点题，丝毫不觉勉强。全诗从对官场生活的强烈厌倦，写到田园风光的美好动人，新生活的愉快，一种如释重负的心情自然而然地流露了出来。这样的结尾，既是用笔精细，又是顺理成章。</p>
<p>​
自来评陶诗者，多强调其自然简淡的风格，至有“陶渊明直是倾倒所有，借书于手，初不自知为语言文字”“渊明所谓不烦绳削而自合”之类的说法。其实，诗总是诗，“自然”的艺术仍然是艺术，甚至是一种不易求得的艺术。真正随意倾吐、毫不修磨，也许称得上“自然”，但绝非“自然”的艺术。从这诗来看，在谋篇布局、逐层推进，乃至每个细节的刻画方面，都非草率从事，实是精心构思、斟字酌句、反复锤炼的结晶。只是有一种真实的情感始终贯穿在诗歌中，并呈现为一个完整的意境，诗的语言完全为呈现这意境服务，不求表面的好看，于是诗便显得自然。总之，这是经过艺术追求、艺术努力而达到的自然。</p>
<p>（选自《汉魏六朝诗鉴赏辞典》，上海辞书出版社 1992 年版）</p>]]></content>
      <categories>
        <category>High School</category>
        <category>Chinese</category>
        <category>Classical Chinese Literature and Poetry</category>
      </categories>
      <tags>
        <tag>School Notes</tag>
        <tag>High School</tag>
        <tag>Chinese</tag>
      </tags>
  </entry>
  <entry>
    <title>梦游天姥吟留别-李白</title>
    <url>/2022/03/12/chinese/High%20School/Classical%20Chinese%20Literature%20and%20Poetry/%E5%BF%85%E4%BF%AE/%E6%A2%A6%E6%B8%B8%E5%A4%A9%E5%A7%A5%E5%90%9F%E7%95%99%E5%88%AB-%E6%9D%8E%E7%99%BD/</url>
    <content><![CDATA[<h2 id="课文解读">课文解读</h2>
<p>​
这是一首记梦诗，也是游仙诗。诗写梦游仙府名山，着意奇特，构思精密，意境雄伟，感慨深沉激烈，变化惝恍莫测，于虚无缥缈的描述中，寄寓着生活现实。</p>
<p>​
第一段写梦游的诱因。先以整齐的对句写出两个虚实相映的形象，以仙山的虚幻难觅反衬天姥山的实际存在，表现出诗人对名山胜境的向往。接着用夸张的手法，描绘天姥山拔地参天、横空出世的雄伟形势。“横”“拔”“掩”三个动词不仅写出了天姥山的外形，而且赋予强烈的气势和动态感，为第二段的梦游作了铺垫。</p>
<p>​
第二段写梦游，是全诗主体。“我欲因之梦吴越”承上启下，由醒境转入梦境。梦境有四个层次：第一层次至“渌水荡漾清猿啼”，写梦至剡溪的情景。着一“飞”字，形容历程之快，显示游山之心切。驾长风，披月光，越镜湖，抵剡溪，来到当年谢灵运留宿处，眼见荡漾渌水，耳闻清猿啼鸣。于是游兴更浓，连夜登山。第二层次至“空中闻天鸡”，写梦登天姥山的情景。“著”“登”动作的连写，可看出诗人迫不及待登山的轻捷情态。到达半山时，眼看海上日出，耳闻天鸡鸣叫，诗人心境是愉悦的。第三层次至“仙之人兮列如麻”，写幽深的峰峦中所见的惊险神奇的境界。这是梦游的重点。白天的游程，只用“千岩万转路不定，迷花倚石忽已暝”二句概括。正当游赏极乐时，夜幕突然降临，这时出现了可怕的景象：熊咆哮，龙吟啸，岩泉为之震荡，深林为之战栗，峰巅为之惊惧。浓云欲雨，流水腾烟。接着用四字句写闪电雷鸣，山崩石裂，洞府石门，轰然中开。于是，诗人把幻想推向高峰，用瑰丽的色彩描绘神仙世界：天空广阔，无边无际，日月高照，楼台辉煌，仙人们以霓霞为衣，以风为马，纷纷飞下。老虎弹瑟，鸾鸟驾车，神仙之多，犹如乱麻。这是梦游的高潮。第四层次即第二段最后四句，写梦醒情状。诗人惊醒回到现实，不禁长叹，觉得枕边缭绕仙气的烟霞顿然消失。这一段写得色彩缤纷却层次井然，迷离惝恍而跌宕多姿。</p>
<p>​
第三段写梦游后的感慨，点出全诗主旨。对名山仙境的向往，是对权贵的抗争。全诗不写惜别之情，却借“别”抒怀，另有寄托，写成惊心动魄的记梦游仙诗，在构思上匠心独运，在表现手法上别开生面。</p>
<p>​ 全诗的特点有二：</p>
<p>​
在构思和表现手法方面，富有浪漫主义色彩。它完全突破了一般送别、留别诗的惜别伤离的老套，而是借留别来表明自己不事权贵的政治态度。在叙述的时候，没有采取平铺直叙的办法，而是围绕着一场游仙的梦幻来构思，直到最后才落到不事权贵的主旨上。这样的构思，给诗人幻想的驰骋开拓了广阔的领域。跟这样的构思相适应的是，大胆运用夸张的手法来描述幻想中的世界，塑造幻想中的形象。在这方面，诗人显示了非凡的才能，他写熊咆龙吟，写雷电霹雳，写空中楼阁，写霓衣风马……把幻想的场面写得活灵活现，真是令人眼花缭乱，惊心动魄。</p>
<p>​
古体诗，可以兼用或长或短的句子；用韵，可以一韵到底，也可以中间换韵；句数不限，篇幅可长可短，是比较少受格律拘束的。李白很善于写七言古诗。这大概是由于这种诗体流畅自然的特点，更适合于表现他的豪迈奔放的思想感情。就这首诗来说，句法的变化极富于创造性。虽然以七言为基调，但是交错地运用了四言、五言、六言和九言的句子。这样灵活多样的句法用在一首诗里，却并不觉得生拼硬凑，而是浑然一体，非常协调。这是因为全诗为一条感情发展的脉络所贯串，随着感情的起落，诗句有长有短，节拍有急有缓。有人说李白的诗“虽千变万化，如珠之走盘，自不越乎法度之外”（李东阳《怀麓堂诗话》），这是十分恰当的。</p>
<p>​
《梦游天姥吟留别》是李白传诵千古的名篇之一，教师主要应引导学生体会此诗豪放飘逸的审美特点以及诗人对人生的深沉感慨。对诗中游历山景和幻入仙境的部分，要展开想象，进行还原式鉴赏。对诗中清幽、壮丽、惊怖、神奇的景色特点要有体悟，对诗中跌宕起伏的情感脉络要能梳理。对此诗的主题，历来有多种解释，有条件的话，教师可以引导学生展开多元解读。</p>
<h2 id="参考资料">参考资料</h2>
<h3 id="参考译文">参考译文</h3>
<div class="classcial-chinese-literature-and-poetry-translation"><div class="paragraph"><p class="original-text">海客谈瀛洲，烟涛微茫信难求；</p><p class="translation">听海外来客们谈起瀛洲，在烟波浩淼的遥远地方，实在难以找到。</p><p class="original-text">越人语天姥，云霞明灭或可睹。</p><p class="translation">越中来人说起天姥山，在云霞的明灭掩映之间有时候能看见。</p><p class="original-text">天姥连天向天横，势拔五岳掩赤城。</p><p class="translation">天姥山高耸入云，连着天际，横向天外；山势高峻超过五岳，遮掩过赤城山。</p><p class="original-text">天台四万八千丈，对此欲倒东南倾。</p><p class="translation">天姥山极为高峻，就连四万八千丈高的天台山，面对着它好像要向东南倾斜拜倒一样。</p></div><div class="paragraph"><p class="original-text">我欲因之梦吴越，一夜飞度镜湖月。</p><p class="translation">我想根据越人说的话梦游到吴越，一天夜晚飞渡过明月映照下的镜湖。</p><p class="original-text">湖月照我影，送我至剡溪。</p><p class="translation">镜湖上的月光照着我的身影，一直送我到剡溪。</p><p class="original-text">谢公宿处今尚在，渌水荡漾清猿啼。</p><p class="translation">谢灵运住的地方如今还在，清澈的湖水荡漾，猿猴凄清地在那啼叫。</p><p class="original-text">脚著谢公屐，身登青云梯。</p><p class="translation">我脚上穿着谢公当年特制的木鞋，攀登直上云霄的山路。</p><p class="original-text">半壁见海日，空中闻天鸡。</p><p class="translation">上到半山腰就看见了从海上升起的太阳，空中传来天鸡报晓的啼鸣之声。</p><p class="original-text">千岩万转路不定，迷花倚石忽已暝。</p><p class="translation">无数山岩重叠，山道曲折，盘旋变化不定。迷恋着花，依倚着石，不觉天色很快就暗了下来。</p><p class="original-text">熊咆龙吟殷岩泉，栗深林兮惊层巅。</p><p class="translation">熊在怒吼，龙在长鸣，岩中的泉水在震响，使深林战栗，使高耸而重叠的山峰震惊。</p><p class="original-text">云青青兮欲雨，水澹澹兮生烟。</p><p class="translation">云层黑沉沉的，像是要下雨，水波动荡生起了薄薄的烟雾。</p><p class="original-text">列缺霹雳，丘峦崩摧。洞天石扉，<ruby><rb>訇</rb><rt>hōng</rt></ruby>然中开。</p><p class="translation">电光闪闪，雷声轰鸣，山峰好像要被崩塌似的。仙府的石门，訇的一声从中间打开。</p><p class="original-text">青冥浩荡不见底，日月照耀金银台。</p><p class="translation">洞中蔚蓝的天空广阔无际，看不到尽头，日月照耀着金银做的宫阙。</p><p class="original-text">霓为衣兮风为马，云之君兮纷纷而来下。</p><p class="translation">用彩虹做衣裳，将风作为马来乘，云中的神仙们纷纷下来。</p><p class="original-text">虎鼓瑟兮鸾回车，仙之人兮列如麻。</p><p class="translation">老虎弹奏着琴瑟，鸾鸟拉着车。仙人们排成列，多如密麻。</p><p class="original-text">忽魂悸以魄动，恍惊起而长嗟。</p><p class="translation">忽然魂魄惊动，我猛然惊醒，不禁长声叹息。</p><p class="original-text">惟觉时之枕席，失向来之烟霞。</p><p class="translation">醒来时只有身边的枕席，刚才梦中所见的烟雾云霞全都消失了。</p></div><div class="paragraph"><p class="original-text">世间行乐亦如此，古来万事东流水。</p><p class="translation">人世间的欢乐也是像梦中的幻境这样，自古以来万事都像东流的水一样一去不复返。</p><p class="original-text">别君去兮何时还？且放白鹿青崖间，须行即骑访名山。</p><p class="translation">告别诸位朋友远去（东鲁）啊，什么时候才能回来？暂且把白鹿放牧在青崖间，等到要远行时就骑上它访名山。</p><p class="original-text">安能摧眉折腰事权贵，使我不得开心颜！</p><p class="translation">岂能卑躬屈膝去侍奉权贵，让自己不能有舒心畅意的笑颜！</p></div></div>
<h3 id="参考文献">参考文献</h3>
<h4 id="五梦游天姥吟留别集评">五、《梦游天姥吟留别》集评</h4>
<p>范云：“瀛州难求而不必求，天姥可睹而实未睹，故欲因梦而睹之耳。”范批云：““梦吴越＇
以下，梦之源也；次诸节，梦之波澜也。其间显而晦，晦而显，至“失向来之烟霞”极而与人。非太白之胸次笔力，亦不能发此。“枕席”“烟霞”二句最有力。结语平衍，亦文势之当如。”（高棅《唐诗品汇》）</p>
<p>周珽曰：“出以千丝铁网之思，运以百色流苏之局，忽而飞步凌顶，忽而烟云自舒。想其时，神魂毛发尽脱之毫楮而不自知，其神耶！”（周敬、周珽辑《唐诗选脉会通评林》）</p>
<p>托言梦游，穷形尽相，以极“洞天”之奇幻；至醒后，顿失烟霞矣。知世间行乐，亦同，安能于梦中屈身权贵乎？吾当别去，遍游名山，以终天年也。诗境虽奇，脉理极细。（沈《唐诗别裁》）</p>
<p>七言歌行，本出楚骚、乐府。至于太白，然后穷极笔力，优入圣域。昔人谓其“以气为主，
以自然为宗，以俊逸高畅为贵，咏之使人飘飘欲仙”，而尤推其《天姥吟》《远别离》等篇，虽子美不能道。盖其才横绝一世，故兴会标举，非学可及，正不必执此谓子美不能及也。此篇夭矫离奇，不可方物，然因语而梦，因梦而悟，因悟而别，节次相生，丝毫不乱；若中间梦境，不过词意伟怪耳。（《唐宋诗醇》）</p>
<p>《梦游天姥吟留别》诗，奇离惝恍，似无门径可寻。细玩之，起首入梦不突，后幅出梦不竭，
极恣肆幻化之中，又极经营惨淡之苦，若只貌其格句字面，则失之远矣。一起淡淡引入，至“因之梦吴越”句，乘势即入，使笔如风，所谓缓则按辔徐行，急则短兵相接也。“湖月照我影“八句，他人捉笔，可云已尽能事矣，岂料后边尚有许多奇奇怪怪。“千岩万转”二句，用仄韵。以下至“仙之人兮”句，转韵不转气，全以笔力驱驾，遂成鞭山倒海之能，读去似未曾转，有真气行乎其间也。此妙可心悟，不可言喻。出梦时，用“忽魂悸以魄动”四句，似亦可煞得住，试想若不再足“世间行乐”二句，非但喝题不醒，抑亦尚欠圆满。“且放白鹿”二句，
一纵一收，用笔灵妙不测。后来惟东坡解此法，他人多昧昧耳。（延君寿《老生常谈》）</p>
<hr>
<h4 id="梦游天姥吟留别赏析-appreciation_of_mengyoutianmuyinliubie">《梦游天姥吟留别》赏析
<span class="citation" data-cites="Appreciation_of_Mengyoutianmuyinliubie">[@Appreciation_of_Mengyoutianmuyinliubie]</span></h4>
<h5 id="section">1</h5>
<p>《梦游天姥吟留别》一本题作《别东鲁诸公》，另有一种唐人选本作《梦游天姥山别东鲁诸公》，是李白最有代表性的名篇之一。</p>
<p>公元 742 至 744
年（唐玄宗天宝元年至天宝三载），李白在长安为唐玄宗翰林供奉。由于上失意，李白终于离开了帝都。在漫游梁宋齐鲁之后，于公元
745 年（天宝四载）李白又离鲁南下吴越，这首诗当即此时所作。</p>
<p>这首诗的思想内容是相当复杂的。李白从离开长安后，政治上受到打击，其失意的情怀和的苦闷可想而知。在现实社会中既找不到出路，只有向虚幻的神仙世界和远离尘俗的山林中去寻求解脱。这种遁世思想看似消沉，却不能一笔抹杀。毋庸讳言，李白在离开长安后，对当时会现实确比未入长安时有了较清醒的认识，对唐王朝统治阶级腐朽的实质也有了更深刻的，因之他对建功立业的雄图壮志固然有无从实现的苦恼，而同时对富贵利达这一类世俗的追不再抱有过多的幻想，并对高高在上的贵族权豪表示了高度蔑视。从而他有所憬悟，在精神定程度摆脱了尘俗的桎梏，这才导致他产生“安能摧眉折腰事权贵，使我不得开心颜”的。这种坚决不妥协的精神和强烈的反抗情绪正是这首诗的基调，是必须充分肯定的。</p>
<p>然而，由于作者未能跻身于政治舞台，理想抱负在很大程度上遭到打击而破灭，他又感到如梦，人事无常，因此在这首诗中，也同时流露出饱含虚无主义的消极成分。诗人写梦中仙境，其神奇瑰丽的场面固然具有浓烈的浪漫主义色彩，但同时又使作者感到魂悸魄动，仿佛在这神奇瑰丽的背后还有着若隐若现的恐怖的阴影，这就是诗人在现实社会中因四处碰壁而使精神上受到压抑的一种反映。于是他慨叹“古来万事东流水”，即使及时行乐也排遣不了自己所负荷的沉重的思想包袱。这就是诗人消极情绪情不自禁的流露，也是这首诗思想性方面的主要局限。我个人认为，在李白全部的诗作中，这两者一直是相互依存，而又彼此矛盾着的。这正是李白世界观中不可分割的两个侧面。</p>
<h5 id="section-1">2</h5>
<p>值得注意的还是此诗的艺术特点。有些人有一种误解，以为杜甫写诗是讲求艺术技巧和表现手法的，而李白只是以磅礴气势和豪言壮语来抒发情志，不大注意字句的推敲和意境的缔造。其实不然，在神采飞扬和昂头天外的豪迈诗篇里，李白同样是注重修辞炼句和章法结构的。这首《梦游天姥吟留别》便足以说明这方面的特点。</p>
<p>这是一首乐府歌行体的杂言古诗。而古诗的传统特征，是以韵脚的转换来体现诗义的转折和诗境的转移的。因此，我们读这首诗就根据其韵脚的变换来划分它的层次和章节：</p>
<blockquote>
<p>海客谈瀛洲，烟涛微茫信难求； 越人语天姥，云霞明灭或可睹。</p>
<p>天姥连天向天横，势拔五岳掩赤城。</p>
<p>天台四万八千丈，对此欲倒东南倾。</p>
<p>我欲因之梦吴越，一夜飞度镜湖月。</p>
<p>湖月照我影，送我至剡溪。谢公宿处今尚在，渌水荡漾清猿啼。脚著谢公屐，身登青云梯。半壁见海日，空中闻天鸡。</p>
<p>千岩万转路不定，迷花倚石忽已暝。</p>
<p>熊咆龙吟殷岩泉，栗深林兮惊层巅。云青青兮欲雨，水澹澹兮生烟。</p>
<p>列缺霹雳，丘峦崩摧。洞天石扉，訇然中开。青冥浩荡不见底，日月照耀金银台。霓为衣兮风为马，云之君兮纷纷而来下。</p>
<p>虎鼓瑟兮鸾回车，仙之人兮列如麻。忽魂悸以魄动，恍惊起而长嗟。惟觉时之枕席，失向来之烟霞。</p>
<p>世间行乐亦如此，古来万事东流水。</p>
<p>别君去兮何时还？且放白鹿青崖间，须行即骑访名山。安能摧眉折腰事权贵，使我不得开心颜？</p>
</blockquote>
<p>全诗分为三个段落。开头是引子，末段是结语，中间是梦游正文。结构很完整，纯系散文格局。有人认为“以文为诗”是杜甫发其轫，韩愈扬其波，至宋代而大兴于世。其实“以文为诗”乃是诗歌发展到一定阶段的必然趋势，李白也有以文为诗的篇什，只不过不及杜、韩那样突出，那样有意为之罢了。</p>
<h5 id="section-2">3</h5>
<p>现在我们从第一段谈起。第一段凡三换韵脚，实即有三层转折。诗中明言行将离开东鲁，南下吴越，从旅程看，游天姥山不过是个因由；但全诗重点，却放在“梦游”上。至于梦游之境是否真的是天姥，那倒无关紧要。东鲁濒海，故以海上仙山起兴。第一、二两句与三、四两句看似对举平起，而一、二句实为陪笔。盖人在现实社会中遭际每坎坷不平，李白本人亦不例外，于是乃追求神仙世界。这虽属理想，却只是幻想。神仙世界在现实中并不存在，李白并非不了解；倒是名山大川风景胜地可供遁世隐居者游赏，这还是比较现实的。所以作者认为“海客”侈谈神山（蓬莱、方丈、瀛洲为海上“三神山”，见《史记·封禅书》），实际却未必能真莅其境；而越人所说的天姥山，尽管高入重霄，因云霞明灭而时隐时现，却是实有其地，只要到了那里，便能骑鹿遨游，也仿佛得成仙之趣了。进入第三层，便撇开瀛洲，专写天姥。评论者谓之“双提“而“单承”。但前四句作者所用技巧尚不止此。这四句是五、七言相间错的，平韵二句在前，仄韵二句在后，这自然是古诗作法。我所要提请读者注意的，乃是这四句已为有了近体诗以后的古诗，它已吸取了近体诗的特点。倘将“越人”二句提前，“海客”二句移后，读者试再读之，岂非一副上五下七的对仗工整的长联乎？此可悟古近体诗相互为用之法。杜甫早期有《望岳》一首，五言八句，中四句对仗工整，人皆以古诗目之，其实是一首仄韵五律。李白这一首的前四句亦属同工异曲，似有意似无意，仿佛也从近体变化而来。唯七言对称的两句平仄与近体格律不尽相合，故终是古诗而非近体，否则便近于白居易《长恨歌》的格调了。</p>
<p>第三层“天姥连天”四句，第一句不仅写其高，兼亦状其远阔雄峻。“向天横”三字真是奇崛之至。盖写山势之高易，状山形之伟难，作者乃以“向天横”三字形容之，仿佛连天姥山的恣睢狂肆的个性也写出来了，诚为神来之笔。但这还不够，为了使读者感受得更深切一些，于是又连写“五岳”“赤城”和天台山。“五岳”是海内名山，然距天姥较远，故云“势拔”。意思是说以五岳同天姥相比，天姥或将有超拔之势，此一层近虚；而赤城山本天台山门户，距天姥较近，
故用“掩”字，有压倒之意，此一层稍实。但作者认为写得还不够气派，更加上“天台”两句与天姥山相映衬。道教传说，天台山有一万八千丈（见陶弘景《真诰》），可谓高矣，但以之与天姥相比，仍将甘拜下风，比天姥还矮着一截，俨然要倾倒在它的东南脚下了。此推崇揄扬天姥山可谓不遗余力矣；可是天姥山究竟有何特色，诗人并未加以具体描写。此盖从越人口中听到，自己并不曾亲身经历，故只从虚处落笔，着意烘托而已。然从中亦可悟写诗三昧。夫虚活则易造声势，滞实反失之琐碎。两汉大赋之所以不及诗词有吸引力，非其体物之不工，而正由于体物太质实，反嫌空灵不足，无一气呵成之妙也。</p>
<h5 id="section-3">4</h5>
<p>第二段是全诗主干，以全力大写梦境。昔金圣叹评诗文，每好用“笔酣墨饱”和“笔歌墨舞”八字。此诗写梦境实兼而有之。“酣饱”极言其足与畅，“歌舞”极言其活与变。从诗的韵脚看，第二段凡七换韵，换韵多即转折变化多，此不待言矣；但还须注意这七次换韵中，短则两句一韵，长则六句或八句一韵。韵脚换得频，一是为了文字剪裁洗练，二是为了体现瞬息万变。如“我欲因之梦吴越”两句为一韵，写入梦只一笔带过，诗人从东鲁转眼即到了越中，不但文字简洁凝练，而且给人以一跃而行千里之感。而“千岩万转”二句为一韵，则状其倏忽间变化万千，
迅疾异常；稍费笔墨，便觉冗赘。而六句或八句始一换韵者，则诗人意在把楚骚、汉赋、骈四俪六融为一体，从较长的篇幅中来体现铺排之功力。这样错综组合，疾徐相间，使读者耳目俱不暇给，而诗境亦因之迷离惝恍，一似无端倪可寻，无踪迹可察。这正是李白戛戛独造之境，不唯盛唐独步，抑且千古绝唱，其所以被尊为“诗仙”者，正在此等处也。</p>
<p>韵七换而诗亦有七层转折。第一层写入梦即到剡中。第二层写夜行之景，宛然梦境。诗人循当年谢灵运的游踪所至而达于天姥山。这一层八句为一韵，目见湖中之月影，耳闻水畔之猿啼，
沿前人登山之径，直至半壁悬空之处，所见为海日（之光），所闻为天鸡（之鸣），似已见到光明而仍在梦中暖昧之境。这一节描写虽移步换形却并无转折，故一韵到底，长达八句之多。中间有两个七言句，使文势略有变化，不致平衍无丝毫起伏。这是梦境中最恬静安适的一段描写，再经过第三层的两句一韵以写其所见之变化迅疾，下面便转入千奇百怪的神仙境地了。</p>
<p>第四层用楚骚句法，只第一句写听到熊咆龙吟，使岩谷殷若雷鸣，从而感到身居高危之地，
不免惊栗。但这还是从远处传来的声音，而举目所见，依然一片宁静。紧接着第五层便写到震耳欲聋的霹雳声，山崩地裂声，然后仿佛《天方夜谭》中的石穴洞开一样，一幅奇异而璀璨的景象呈现在眼前，由晦暗突然转为光芒万丈，一方面是深不见底，一方面却又珍奇毕现。古人说山中别有洞天，李白在诗中有意识地把它形象化了。</p>
<p>第五层所写乃物象，毕竟是静态，故第六层写了两句仙人纷至沓来的动态，情景俱变。作者久久所憧憬的与神仙遨游的幻想居然在刹那间实现了，这该是一个多么使人欢畅而快慰的梦境啊！</p>
<p>然而好景无常。第七层随即写由梦境而惊醒，又回到了现实的人间。有人曾质问我：“你强调古风因诗意转换而换韵，这里“虎鼓瑟兮”两句本与上文为一气，从“忽魂悸以魄动＇以下才写诗人从梦中醒来。何以把这两层混为一韵？”我说，此诗好就好在这里。上一层写仙人纷纷到来，这一层前二句一面接着上文嬗联写下来，一面却与自己若离若即。尽管列仙如麻，自己却已魂悸魄动，在他们还未从眼前消逝时自己已惊醒了。一说，“虎鼓瑟”二句乃醒后眼前依稀恍惚之景象，而以倒装之笔出之。说亦可通。总之，这七层似乎飘忽无定，实则层次井然，有本有末，
耳闻目睹，历历如画。吟诵时如大气包裹，几无喘息余地；玩味时又结构谨严，一一严丝合缝。非李白之天才无以纷呈此奇幻之景，非李白之胆识无以控驭此神来之笔。此真李诗中上上乘之作也。</p>
<h5 id="section-4">5</h5>
<p>最后一段结语只有两层。第一层是诗人阅世既深总结出来的道理：“古来万事东流水。”你说这消极么，然此乃是现实给他的教训。第二层则为述志。正缘权贵在朝，才使得万事全非，自己又岂能依附豪门，摧眉折腰以辱身降志呢？“摧眉”与“扬眉”为对文，用字精当之至。而诗体又回到七古正格，与开头入梦前写法相一致（中有一单句“须行即骑访名山”，表示语气坚决；“安能”句为九言，更显得理直气壮）。这样，中间的梦境因用笔造语之不同而使读者感到诗境之奇幻夐绝亦有所不同，此即思想与艺术较大程度的统一也。</p>
<p>说此诗毕，仍拟再强调一下个人的不成熟的点滴体会。此诗从艺术上看，可谓极创新之能事。但如经过仔细分析，则其特色不过熔《诗》、《骚》、汉赋、骈文、古乐府及近体诗于一炉，
新则新矣，却无一笔无来历。所以我始终认为，只有对自己的民族文化遗产吸收得越多、寝馈得越久、钻研得越深、积累得越厚，才能越使自己作品的精神面貌给人以耳目一新、与众不同的感觉。锐意求新者必先“博观”“厚积”，并蓄兼收，有极高之修养才会出现惊人之奇迹。如果只靠“横向引进”，什么东西时髦就掠它一点皮毛作为点缀，虽取悦一时，终难持久而不朽。最终还不免贻旁观者或后世人以数典忘祖之讥。故有志于从事文化艺术事业者，不可不慎也。</p>
<p>（选自《古典诗词札丛》，天津古籍出版社 2002 年版）</p>]]></content>
      <categories>
        <category>High School</category>
        <category>Chinese</category>
        <category>Classical Chinese Literature and Poetry</category>
      </categories>
      <tags>
        <tag>School Notes</tag>
        <tag>High School</tag>
        <tag>Chinese</tag>
      </tags>
  </entry>
  <entry>
    <title>念奴娇·赤壁怀古-苏轼</title>
    <url>/2022/03/12/chinese/High%20School/Classical%20Chinese%20Literature%20and%20Poetry/%E5%BF%85%E4%BF%AE/%E5%BF%B5%E5%A5%B4%E5%A8%87%C2%B7%E8%B5%A4%E5%A3%81%E6%80%80%E5%8F%A4-%E8%8B%8F%E8%BD%BC/</url>
    <content><![CDATA[<h2 id="课文解读">课文解读</h2>
<p>​
本词写于宋神宗元丰五年（1082）七月，是苏轼游览黄冈城外赤鼻矶后所作。当时苏轼因诗文讽刺新法，被新派官员诬陷论罪，贬斥至黄州任团练副使。苏轼此时深感年岁渐老，事业功名未有所成，郁结于心。观景顿生种种联想，眼前浮现出赤壁古战场鏖战的场景和周瑜“雄姿英发”的形象，遂作词赞颂其功业，并借以抒发有志报国却壮怀难酬的感慨。</p>
<p>​
上片，从眼前赤壁雄奇的江景，联想起古代特别是三国时代的英雄豪杰，侧重写景。开头从滚滚东流的长江水入笔，用“浪淘尽”把永远奔流的江水与已经消逝了的“千古风流人物”联系起来，为全词设置一个极为广阔的空间和甚为悠远的时间背景，让读者体会出词人独立于江岸披襟临风，对景抒情的壮怀。“故垒”两句，从泛写怀古转入具体内容，初点题旨。“人道是”把赤壁具体所在的问题，轻轻宕开。长江一带，以“赤壁”命名的地方有好几处，周瑜打败曹操的赤壁何在，众说纷纭，现在一般认为，在今湖北武汉的赤矶山。但是，作者只是借景抒情，并不打算深究。“乱石穿空”三句，是现场写景，选取细部显示赤壁一带江景特点。写山石用“穿”，写浪涛用“惊”“拍”，用“雪”比喻波涛，“千堆”是数量上的夸张。几种物象作用于视觉、听觉，引发想象，呈现出一个有声有色富有动感的画面。“江山如画”两句，总结上片，带起下片。前句是对前面勾出的大白然雄奇画卷发出的由衷赞叹，后句是从江山引出来的，如此江山，必然会产生许多与之相称的豪杰。</p>
<p>​
下片，描写和赞美周瑜及其功业，并引出自己壮志难酬的感慨与思想解脱。“遥想公瑾当年”六句，描写周瑜风流儒雅从容破敌的英姿。穿插“小乔初嫁了”：一是衬出周瑜少年英俊，志得意满；二是隐写了这场战争的关系之大。杜牧诗云：“东风不与周郎便，铜雀春深锁二乔。”如果战败，东吴就国破家亡。“羽扇纶巾”是儒将装扮，用形写出人物的神。“樯橹灰飞烟灭”，表现出曹军惨败的情景。“故国神游”到结束，抒写词人的感受和人生理念。“多情应笑我”是倒装，意为应笑我多情，即多愁善感，无怪乎“早生华发”。转而一想，“人间如梦”，不如暂且酾酒临江，来个自我宽慰。</p>
<p>​ 全词的特点有三：</p>
<p>​
第一，整首词环环相扣，一气呵成。上片即景生情，由大江浪涛，引出“千古”，由“故垒”引出“三国周郎”，由“江山如画”引出一时的“豪杰”，为下片着重写周郎伏下一条线。</p>
<p>第二，全词气象磅礴，格调雄浑，高唱入云。如前面提到的全词的背景设置、孙刘与曹军赤壁鏖兵等，都是一挥而就，笔墨酣畅。</p>
<p>​
第三，注意运用衬托的手法。衬托，是利用事物之间的类似或相反，使本体仗着他体的陪衬而更加鲜明的一种修辞手法。衬托，可分为正衬和反衬两类。前者如词中用“千古风流人物”“一时多少豪杰”陪衬周郎；后者如以“雄姿英发”的周郎反衬“早生华发”的词人自我。教授本篇和下篇辛弃疾的《永遇乐·京口北固亭怀古》时，可用豪放的风格来概括这两篇作品，不宜用“豪放派”一词来简单概括苏轼和辛弃疾的词作。可参看吴世昌《宋词中的“豪放派”与“婉约派”》一文。</p>
<h2 id="参考资料">参考资料</h2>
<h3 id="参考译文">参考译文</h3>
<div class="classcial-chinese-literature-and-poetry-translation"><div class="paragraph"><p class="original-text">大江东去，浪淘尽，千古风流人物。</p><p class="translation">大江之水滚滚不断向东流去，滔滔巨浪淘尽千古英雄人物。</p><p class="original-text">故垒西边，人道是，三国周郎赤壁。</p><p class="translation">那旧营垒的西边，人们说那就是三国时周郎大破曹兵的赤壁。</p><p class="original-text">乱石穿空，惊涛拍岸，卷起千堆雪。</p><p class="translation">岸边乱石林立，像要刺破天空，惊人的巨浪拍击着江岸，激起的浪花好似千万堆白雪。</p><p class="original-text">江山如画，一时多少豪杰。</p><p class="translation">雄壮的江山奇丽如图画，一时间涌现出多少英雄豪杰。</p></div><div class="paragraph"><p class="original-text">遥想公瑾当年，小乔初嫁了，雄姿英发。</p><p class="translation">遥想当年的周瑜春风得意，小乔刚刚嫁给了他做妻子，英姿雄健风度翩翩神采照人。</p><p class="original-text">羽扇纶巾，谈笑间，樯橹灰飞烟灭。</p><p class="translation">手摇羽扇头戴纶巾，谈笑之间，就把强敌的战船烧得灰飞烟灭。</p><p class="original-text">故国神游，多情应笑我，早生华发。</p><p class="translation">如今我身临古战场神游往昔，可笑我有如此多的怀古柔情，竟如同未老先衰般鬓发斑白。</p><p class="original-text">人生如梦，一尊还<ruby><rb>酹</rb><rt>lèi</rt></ruby>江月。</p><p class="translation">人生犹如一场梦，且洒一杯酒祭奠江上的明月。</p></div></div>
<h3 id="参考文献">参考文献</h3>
<h4 id="念奴娇赤壁怀古集评">《念奴娇·赤壁怀古》集评</h4>
<p>​
长短句虽至本朝盛，而前人自立，与真情衰矣。东坡先生非心醉于音律者，偶尔作歌，指出向上一路，新天下耳目，弄笔者始知自振。（王灼《碧鸡漫志》）</p>
<p>​
东坡在玉堂，有幕土善讴，因问：“我词比柳词何如？”对曰：“柳郎中词，只好十七八女孩儿，执红牙板，歌“杨柳岸晓风残月＇。学士词，须关西大汉，执铁板，唱“大江东去”。”公为之绝倒。（俞文豹《吹剑续录》）</p>
<p>​
题是怀古，意谓自己消磨壮心殆尽也。开口“大江东去”二句，叹浪淘人物，是自己与周郎俱在内也。“故垒”句至次阕“灰飞烟灭”句，俱就赤壁写周郎之事。“故国”三句，是就周郎拍到自己。“人生如梦”二句，总结以应起二句。总而言之，题是赤壁，心实为己而发。周郎是宾，自己是主。借宾定主，寓主于宾。是主是宾，离奇变幻，细思方得其主意处。不可但诵其词，而不知其命意所在也。（黄苏《蓼园词选》）</p>
<p>​
江东战伐，惟孙曹事于往史最有声色，临风醉酒，俯仰兴亡，是何等气概！起笔人门下马，已气压江东。“乱石”三句壮健称题。“江山”二句尤深雄慨。题为《赤壁怀古》，故下阅追怀瑜亮英姿，笑谈摧敌。“华发”句抚今思昔，有少陵“看镜”“倚楼”之思。结句感前朝之如梦，洒杯酒而招魂，瑜亮有知，当凌云一笑也。（俞陛云《唐五代两宋词选释》）</p>
<p>​
此首，上片即景写实，下片因景生情，极豪放之致。起笔，点江流浩荡，高唱入云，无穷兴亡之感，已先揭出。“故垒”两句，点赤壁。“乱石”三句，写赤壁景色，令人惊心骇目。“江山”两句，折到人事，束上起下。换头逆人。“遥想”四句，记公瑾之雄姿。“故国”以下平出。述吊古之情，别出明月，与江波相映。此境此情，真不知人间何世矣。（唐圭璋《唐宋词简释》）</p>
<hr>
<h4 id="念奴娇赤壁怀古赏析-appreciation_of_niannujiao_chibihuaigu">《念奴娇·赤壁怀古》赏析
<span class="citation" data-cites="Appreciation_of_Niannujiao_Chibihuaigu">[@Appreciation_of_Niannujiao_Chibihuaigu]</span></h4>
<p>​
这首词是作者在神宗元丰五年（1082）写的。那时他已四十七岁，因反对新法被贬谪在黄州（今湖北黄风）已经两年多了。</p>
<p>​
古典诗歌中咏史、怀古一类的作品，一般都是古为今用，借对史事的评论、对古迹的观赏来抒发自己的怀抱。这首词也不例外。他想到古代“风流人物”的功业，引起了无限的向往，同时就引起了自己年将半百，“四十五十而无闻焉，斯亦不足畏也已”（《论语》）的感慨。</p>
<p>​
一起头二句，是词人登高跳远，面对长江的感受。江水不停地东流，波涛汹涌，气势奔放，自然使人不可能不想起过去那些历史上留下了丰功伟绩，因而与祖国的壮丽山河同样永远保留在后人记忆里的英雄们。当然，这些人是属于过去的了，就像沙砾被波浪所淘汰了一样。但是不是他们留下的历史遗产也被“淘尽”了呢？那可不是的。“风流人物”的肉体虽已属于过去，而他们的事功却是不会磨灭的，它属于现在，也属于将来。这两句，江山人物合写，不但风格雄浑、苍凉，而且中含暗转，似塞实通，有“山重水复疑无路，柳暗花明又一村”之妙。否则，我们一看，“风流人物”都被“浪淘尽”了，那就没有什么可说的了，还有什么下文呢？</p>
<p>​
正因为暗中有此一转，所以才可由泛泛的对于江山、人物的感想，归到赤壁之战的具体史迹上来。未写作战之人，先写作战之地，因为是游其地而思其人的。江、汉一带，地名赤壁的有好几处。发生在汉献帝建安十三年（208）那一场对鼎足三分的政治形势具有决定性作用的大战，应该发生在今湖北省赤壁市境内，而不在黄州。博学如苏轼，当然不会不知道。但既然已经产生了那次战争是在黄州赤壁进行的传说，而他又是游赏这一古迹而不是来考证其真伪的，那么，也就没有必要十分认真地对待这个在游赏中并非十分重要的问题了。其地虽非那一次大战的战场，但也发生过战争，尚有旧时营垒，所以用“人道是”三字，以表示认为这里是“三国周郎赤壁”者，不过是传闻而已。“赤壁”而冠以“三国周郎”，为的是突出其历史意义，并为下面写周瑜先伏一笔。</p>
<p>​
第五句以下，正面描摹赤壁风景。“乱石”一句，山之奇峭高峻；“惊涛”两句，水之汹涌澎湃。江、山合写，而以江为主，照应起结。“石”而曰“乱”，“空”而可“穿”，“涛”而曰“惊”，“岸”而可“拍”，“雪”而可“卷”，虚字都用得极其生动而又精确。（吴白匋先生云：“孟郊《有所思》诗中有“寒江浪起千堆雪”之语，是苏词“卷起”句所本。”）</p>
<p>​
眼前所见，美不胜收，难以尽述，故总赞之曰“江山如画”。人们凡是见到最美的风景（或人物），往往赞曰“如画”，而见到最美的绘画（或其他造型艺术），又往往赞曰“逼真”。如画之画，并非特指某一幅画；逼真之真，也非特指某地、某物。它们只是存在于欣赏者想象中的最真、最美、最善的典型事物或情景。所以逼真亦即如画，如画和逼真并不矛盾。如果我们问苏轼，你说“如画”，是像哪一幅画，他是无从回答的。因为，谁也答不上来。</p>
<p>​
歇拍由这千古常新的壮丽江山，想起九百年前在这个历史舞台上表演过非常威武雄壮的戏剧的许多豪杰来。说“多少豪杰”，是兼赅曹、孙、刘三方而言。在这场大战中，得胜者固然是豪杰，失败了的也不是窝囊废。“江山”两句，仍是江山、人物合写，与起头两句相同，但前者包括“千古风流人物”，后者则仅指“一时”“豪杰”。电影的镜头移近了，范围也就缩小了。</p>
<p>​
换头再把镜头拉得更近一些，就成了特写。作者选中了周瑜，把他摄入这首《念奴娇》的特写镜头。从“千古风流人物”到“一时”“豪杰”，再到“公瑾”，一层层缩小描写的范围，从远到近，从多到少，从概括到具体，从一般到个别，于是，周瑜作为一个典型的“风流人物”和“豪杰”而登场了。</p>
<p>​
周瑜在孙策手下担任将领时，才二十四岁。人们看他年轻，称为“周郎”。他性情温厚，善于和人交友。人们赞赏说：“与周公瑾交，如饮醇醪。”他精通音乐，如果演奏发生错误，他立刻就会察觉。人们说：“曲有误，周郎顾。”他的婚姻很美满，娶的是当时著名的美女，乔家的二姑娘—小乔。他在三十四岁的时候，与二十八岁的诸葛亮，统率孙、刘联军，在赤壁大战中，用火攻战术，将久历戎行、老谋深算、年已五十四岁的曹操打得一败涂地。这样的人物，在苏轼眼中，当然是值得向往的了。因此，面对如画江山，他活跃地开展了对于这位历史人物的想象。</p>
<p>​
换头“遥想”以下五句，从各个不同的方面刻画了周瑜。“小乔”两句，写其婚姻。由于美人的衬托，显得英雄格外出色，少年英俊，奋发有为。“英发”两字，本是孙权用来赞美周瑜的言谈议论的，见《吴志·吕蒙传》，词里则改为赞美他的“雄姿”，乃是活用。“羽扇”句，写其服饰。虽然身当大敌，依然风度闲雅，不着军装。“谈笑”句写其韬略。由于胸有成竹，指挥若定，从容不迫，谈笑之间，就把曹操的舰队一把火烧得精光。这里，不但写出了周瑜辉煌的战功，而且写出了他潇洒的风度、沉着的性格。在词人笔下，这一英雄形象是很饱满的。</p>
<p>​
宋人傅干注苏词，曾引《蜀志》，有诸葛亮“葛巾毛扇，指挥三军”之语。此文《太平御览》曾引用，但不见于今本《三国志》。而在后来的小说、戏剧中，“羽扇纶巾”乃是诸葛亮的形象的不可分割的一部分。因此，有人认为此词“羽扇纶巾”一话，也是指诸葛亮的。这是一个误会。这个误会是由于既不明史事，又不考文义而产生的。魏、晋以来，上层人物以风度潇洒、举止雍容为美，羽扇纶巾则代表着这样一种“名士”的派头。虽临战阵，也往往如此。如《晋书·谢万传》载万“著白纶巾、鹤氅裘”以见简文帝；《顾荣传》载荣与陈敏作战，“麾以羽扇，其众溃散”；《羊祜传》载祜“在军尝轻裘缓带，身不被甲”：皆是其例。诸葛亮固然曾经“羽扇纶巾”，苏轼在这里，根据当时的风气，不论周瑜是否曾经作此打扮，也无妨写他手持羽扇，头戴纶巾，以形容其作为一个统帅亲临前线时的从容镇静、风流儒雅。而此文从“遥想”以下，直到“烟灭”，乃是一幅完整的画面，其中心形象就是“当年”的“公瑾”，不容横生枝节，又岔出一个诸葛亮来，何况这几句还与上文“周郎赤壁”衔接。因此，这种说法是不可取的。（张孝祥《水调歌头·汪德邵无尽藏》下片有句云：“一吊周郎羽扇，尚想曹公横槊，兴废两悠悠。”吴白匋先生还举出王象之《舆地纪胜》卷四十九“黄州”条所引四六文亦有“横槊酾酒，悼孟德一世之雄；挥扇岸巾，想公瑾当年之锐”诸语，可见宋人也多以“羽扇”句是指周瑜。）</p>
<p>​
以上是写的作战之地、作战之人，是“怀古”的正文，“故国”以下，才转入自抒怀抱。“故国”，即赤壁古战场。作者临“故国”，思“豪杰”，精神进入了想象中的当时环境里面，想到周瑜在三十四岁的时候，便建立了那样惊天动地的功业，而自己呢，比他大十多岁，却贬谪在这里，没有为国为民做出什么有益的事来，头发也很早就花白了，相形之下，是多么不同啊！头发变白，是由于多情，即不能忘情于世事。然而这种自作多情，仔细想来，又多么可笑！所以说“多情应笑我”。“故国神游”，即神游故国；“多情应笑我”，即应笑我多情。它们都是倒装句法。</p>
<p>​
江山依旧，人事已非，沦落无聊，徒伤老大，于是引起“人生如梦”的感慨，认为既是如此，还不如借酒浇愁吧。“酹”本是将酒倒在地上，表示祭奠的意思，但末句却是指对月敬酒，即李白《月下独酌》中“举杯邀明月”之意。所邀乃江中月影，在地不在天，所以称为“酹”。</p>
<p>​
这首词在内容上，表现了作者用世与避世或入世与出世思想之间的矛盾，这是封建社会的知识分子具有的普遍性的矛盾，既然没有机会为国为民做出一番事业，就只有在无可奈何的心情之下，故作达观。所以它在赞赏江山、人物之余，最后仍然不免趋于消极。但总的说来，最后这一点消极情绪，却掩盖不了全词的豪迈精神，所以读者还是可以从其中吸收一些有益的成分。</p>
<p>​
在艺术上，这首词也有它的独特成就。其中最突出的一点就是它将不同的，乃至于对立的事物、思想、情调有机地融合在一个整体中，而毫无痕迹。这里面有当前的景物与古代人事的融合，有对生活的热爱、对建功立业的渴望与达观、消极的人生态度的融合，有豪迈的气概与超旷的情趣的融合。而描写手段则虚实互用，变幻莫测，如：“人道是，三国周郎赤壁”，是实的地方虚写；“遥想公瑾当年”，是虚的地方实写。有“人道是”三字，则其下化实为虚，对黄州赤壁并非当日战场作了暗示；有“遥想”二字，则其下虽所咏并非原来的战场，而且还掺入了虚构的细节，仍然使人读去有历史的真实感。</p>
<p>（选自《宋词赏析》，上海古籍出版社 1980 年版）</p>]]></content>
      <categories>
        <category>High School</category>
        <category>Chinese</category>
        <category>Classical Chinese Literature and Poetry</category>
      </categories>
      <tags>
        <tag>School Notes</tag>
        <tag>High School</tag>
        <tag>Chinese</tag>
      </tags>
  </entry>
  <entry>
    <title>永遇乐·京口北固亭怀古-辛弃疾</title>
    <url>/2022/03/12/chinese/High%20School/Classical%20Chinese%20Literature%20and%20Poetry/%E5%BF%85%E4%BF%AE/%E6%B0%B8%E9%81%87%E4%B9%90%C2%B7%E4%BA%AC%E5%8F%A3%E5%8C%97%E5%9B%BA%E4%BA%AD%E6%80%80%E5%8F%A4-%E8%BE%9B%E5%BC%83%E7%96%BE/</url>
    <content><![CDATA[<h2 id="课文解读">课文解读</h2>
<p>​
此词是辛弃疾登临镇江北固亭所作，时为南宋开禧元年（1205）秋。当时韩侂胄把持朝政大权，企图用北伐中原来提高白己声誉，于嘉泰三年（1203）起用闲居的抗金派代表人物辛弃疾。先任命其为绍兴知府、浙东安抚使，次年调任镇江知府。镇江古名京口，素来是军事重镇，处于抗金前线。韩侂胄抗金的主张符合辛弃疾收复失地的一贯志愿，但是韩侂胃在军事上准备并不充分。辛弃疾对这种局面忧心忡忡，在登临北固亭时览景有感，就自然地倾吐出来了。</p>
<p>​
上片即景抒情，由景物联想起古代两位著名的英雄人物——孙权与刘裕，吟咏他们的业绩，借以对韩侂胄进行讽喻与劝诫。“千古江山……雨打风吹去”，叹英雄千古难再，帝王豪奢淫靡的生活经不起风雨的洗刷。“斜阳草树……气吞万里如虎”，从回顾刘裕生平，揭示出蓬门陋巷、低微出身，并不妨碍英雄建功立业。</p>
<p>​
下片追述历史上的沉痛教训和亲身经历，表现出词人对韩侂胄等当权者轻敌冒进的担忧，强调了把握时机的重要，倾吐自己壮志难酬的抑郁不平。“元嘉草草”三句，写刘义隆刚愎自用，好大喜功，冒失出兵，结果全军溃逃，落得仓皇北顾。词人直陈史实，寓议论于叙事之中。“四十三年……烽火扬州路”，词人由今忆昔。四十三年前，在战火弥漫的扬州以北地区参加抗金斗争的词人，率众渡淮南归，原本想依靠朝廷的力量恢复中原，没有想到南宋朝廷昏聩无能，使他壮志难酬。“佛狸祠下，一片神鸦社鼓”说的是：长江北岸的佛狸祠，是北魏太武帝拓跋焘击败刘宋军队南下江北后建立的行宫，现在这里祭神赛会，香火不断。词人借此提醒人们不要忘记江北仍处在金人铁蹄之下，不要忘记收复故土。</p>
<p>​
“凭谁问”到结束，用廉颇的故事表达了自己因为积极备战，不去逢迎权贵而不被重用的愤慨。其实，不仅是不被重用，写这首词的半年以后，辛弃疾就受到诬陷，先是降职，后又奉诏归铅山闲居终老。然而历史是无情的。南宋开禧三年（1207）伐金失败，为了满足金人媾和要求，韩侂胄被杀以谢罪。事情的结果，证实了辛弃疾的预言。</p>
<p>​ 本词的特点有二：</p>
<p>​
第一，词人的政治见解和战略主张通过诗歌形象表露出来，而不破坏诗歌的美。词人构建的意象，有借古讽今的，规劝的，也有总结历史经验的，预示未来的，而这些都串联在词人思绪和感情的变化、升腾之上。也正因为事件的述说浸透了情，理又隐在事中，要读者去体会，故而体现了诗歌的本质。</p>
<p>​
第二，用典贴切，寄意深远。前人说过“材富则约以用之”，用典是压缩材料的好办法。如写仓促用兵导致失败的历史教训，仅用了“元嘉草草”三句十四个字。</p>
<p>​
教授本篇时，可引导学生思考以下问题：本篇运用了哪些典故？各有何作用？以典人诗的好处何在？对读者有哪些阅读要求？</p>
<h2 id="参考资料">参考资料</h2>
<h3 id="参考译文">参考译文</h3>
<div class="classcial-chinese-literature-and-poetry-translation"><div class="paragraph"><p class="original-text">千古江山，英雄无觅孙仲谋处。</p><p class="translation">历经千古的江山，再也难找到像孙权那样的英雄。</p><p class="original-text">舞榭歌台，风流总被雨打风吹去。</p><p class="translation">当年的舞榭歌台还在，英雄人物却随着岁月的流逝早已不复存在。</p><p class="original-text">斜阳草树，寻常巷陌，人道寄奴曾住。</p><p class="translation">斜阳照着长满草树的普通小巷，人们说那是当年刘裕曾经住过的地方。</p><p class="original-text">想当年，金戈铁马，气吞万里如虎。</p><p class="translation">遥想当年，他指挥着强劲精良的兵马，气吞骄虏一如猛虎！</p></div><div class="paragraph"><p class="original-text">元嘉草草，封狼居胥，赢得仓皇北顾。</p><p class="translation">元嘉帝兴兵北伐，想建立不朽战功封狼居胥，却落得仓皇逃命，北望追兵泪下无数。</p><p class="original-text">四十三年，望中犹记，烽火扬州路。</p><p class="translation">四十三年过去了，如今瞭望长江北岸，还记得扬州战火连天的情景。</p><p class="original-text">可堪回首，佛狸祠下，一片神鸦社鼓。</p><p class="translation">真是不堪回首，拓跋焘祠堂香火盛，乌鸦啄祭品，祭祀擂大鼓。</p><p class="original-text">凭谁问：廉颇老矣，尚能饭否？</p><p class="translation">还有谁会问，廉颇老了，饭量还好吗？</p></div></div>
<h3 id="参考文献">参考文献</h3>
<h4 id="永遇乐京口北固亭怀古集评">《永遇乐·京口北固亭怀古》集评</h4>
<p>​
金陵王气，始于东吴。权不能为汉讨贼，所谓英雄，亦仅保江东耳。事随运去，本不足怀，“无觅”亦何恨哉。至于寄奴王者，则千载如见其人。“寻常巷陌”胜于“舞榭歌台”远矣。以其能虎步中原，气吞万里也。后阕谓元嘉之政，尚足有为。乃草草卅年，徒忧北顾，则文帝不能继武矣。自元嘉二十九年，更谋北伐无功。明年癸巳，至齐明帝建武二年，此四十三年中，北师屡南，南师不复北。至于魏孝文济淮问罪，则元嘉且不可复见矣。故曰“望中犹记”，曰“可堪回首”。此稼轩守南徐日作，全为宋事寄慨。“廉颇老矣，尚能饭否”，谓己亦衰老，恐无能为也。</p>
<p>​ 使事虽多，脉络井井可寻，是在知人论世者。（陈洵《海绡说词》）</p>
<p>​
此词登京口北固山亭而作。人在江山雄伟处，形胜依然，而英雄长往，每发思古之幽情。况磊落英多者，当其凭高四顾，烟树人家，夕阳巷陌，皆孙、刘角逐之场，放眼古今，别有一种苍凉之思。况自胡马窥江去后，烽火扬州，犹有余恸。下阕慨叹佛狸，乃回应上文“寄奴”等句。当日鱼龙战伐，只赢得“神鸦社鼓”，一片荒寒。往者长已矣，而当世岂无健者？老去廉颇，犹思用赵，但知我其谁耶？英词壮采，当以铁绰板歌之。（俞陛云《唐五代两宋词选释》）</p>
<p>​
此词乃稼轩知镇江府时所作。词意乃即景生感，因以寄忠愤也。起三句，言江山犹昔，而当时之英雄如孙权者，则已不见，言外有无人可御外侮之意。“舞榭”三句，言不但英雄无觅处，即其遗迹亦不可见，言外有江山寂寞，时势消沉之意。“斜阳”三句，暗用刘禹锡吊古诗意，以见与此江山有关之英雄去后，其故居都呈一片荒凉之象。“想当年”二句，极写刘裕北伐时之声威，表示仰慕，以见已抗敌情切。“元嘉”三句，言欲恢复中原必须先有准备，否则必致败亡，因举宋文帝故事以见此意。宋文帝欲恢复中原，王玄谟迎合其意，大言可行，文帝因谓侍臣曰：“闻玄谟陈说，令人有封狼居胥意。”次年，即分命王玄谟等率师北伐，卒乃大败。北魏太武帝遂大举南侵，直抵扬州，江南震动。文帝自登建康幕府山观望形势，故曰“草草”，曰“仓皇北顾”。考此词作于宁宗开禧元年韩侂胄定议伐金之时。稼轩以此事准备不足，近于冒昧，与玄谟贪功相同，故举宋元嘉往事而言。稼轩为各州安抚使时，必储粮练兵以为用兵准备，今见韩氏无备而举事，不免忧虑，故于登览山川之际，感慨及之。或谓侂胄北伐之议，稼轩所赞成，观此词知其不然。“四十三年”三句，则由今忆昔，有“美人迟暮”之感。盖四十三年之前率众南归，其时具有大志，思凭国力恢复中原，乃今老矣，登亭远望，山川如故而国事日非，能无感叹！“可堪回首”三句，更由此而惊心，盖江北各地沦陷已久，民俗安于外族之统治，故于“佛狸祠下”迎神赛会，如此热闹。此稼轩远闻鼓声不觉惊起之故也。末二句，有廉颇思复用于赵之志，无奈朝廷无复用己之心，故以廉颇自比，而言外叹其不如也。（刘永济《唐五代两宋词简析》）</p>
<p>​
此首京口北固亭怀古词，虽曰怀古，实寓伤今之意。发端沉雄，与东坡“大江东去”相同，惟东坡泛言，稼轩则实本地风光。“舞榭”三句，承上奔往，极叹人物俱非。“斜阳”三句，记刘裕曾住之事。“想当年”两句，回忆刘裕盛况。换头，叹刘裕自为，不能恢复失地，四十三年自有重过此地之感。盖稼轩于绍兴三十二年知忠义军书记，尝奉表归朝。至开禧元年，又知镇江府，前后相距恰四十三年。“可堪”三句，仍致吊古之意，深叹当年宋之武功不竞，以致佛狸饮马长江，暗寓金人猖狂，亦同佛狸也。结句，自喻廉颇，悲壮之至。（唐圭璋《唐宋词简释》）</p>
<hr>
<h4 id="永遇乐京口北固亭怀古赏析-appreciation_of_yongyule_jingkoubeigutinghuaigu">《永遇乐·京口北固亭怀古》赏析
<span class="citation" data-cites="Appreciation_of_Yongyule_Jingkoubeigutinghuaigu">[@Appreciation_of_Yongyule_Jingkoubeigutinghuaigu]</span></h4>
<p>​
这是《稼轩词》中突出的爱国篇章之一。它的思想内容包括两个方面：一是写作者抗敌救国的雄图大志，二是写作者对恢复大业的深谋远虑和为国效劳的忠心。</p>
<p>​
宋宁宗嘉泰三年（1203），辛弃疾六十四岁时，被召起知绍兴府兼浙东安抚使。这以前，辛弃疾被迫退居江西乡间已有十多年了。起用他的是执掌大权的韩侂胄。因为那时蒙古已经崛起在</p>
<p>​
金政权的后方，金政权日益衰败，并且起了内乱。韩侂胄要立一场伐金的大功，以巩固自己的地位，于是起用了辛弃疾作为号召北伐的旗帜。第二年（1204），任他做镇江知府。镇江在那时濒临抗战前线。辛弃疾初到镇江，努力作北伐的准备。他明确断言金政权必乱必亡。他又认为：南宋要取得对金作战的胜利，必须做好充分的准备工作。他曾对宋宁宗和韩侂胄提出了这些意见，并建议应把对金用兵这件大事委托给元老重臣。这无疑是包括辛弃疾在内的。可是韩侂胄一伙人不但不能采纳，反而有所疑忌不满，他们借口一件小事故，给他一个降官的处分。开禧元年（1205）索性把他调离镇江，不许他参加北伐大计。辛弃疾二十三岁从山东起义南来，怀着一腔报国热情，在南方待了四十三年，开始遭到投降派的排挤，现在又遭到韩侂胄一伙人的打击，他那施展雄才大略来为恢复大业出力的愿望又落空了。这就是辛弃疾写这首词的时代背景。</p>
<p>​
这首词题为《京口北固亭怀古》，所以一开头就从镇江的历史人物—孙权和刘裕说起。孙权是三国时吴国的皇帝，他在南京建立吴国的首都，并且能够打垮来自北方的侵犯者曹操的军队，保卫了国家。辛弃疾登上京口北固亭怀古，第一个想到的就是三国时期的英雄人物孙仲谋（即孙权），只是现在已无处可寻了。“风流总被，雨打风吹去”，谓孙仲谋英雄事业的风流余韵，现已无存。“寄奴”，是南朝宋武帝刘裕的小字。刘裕在京口起兵讨伐桓玄，平定叛乱。“想当年”三句，颂刘裕率领兵强马壮的北伐军，驰骋中原，气吞胡虏。作者借这些京口当地的历史人物的英雄业绩，隐约地表达自己的抗敌救国的心情。</p>
<p>​
下片“元嘉草草，封狼居胥”几句也是用历史事实。“元嘉”是南朝宋文帝的年号。宋文帝刘义隆是刘裕的儿子。他不能继承父业，好大喜功，听信王玄谟的北伐之策，打无准备之仗，结果一败涂地。封狼居胥是用汉朝霍去病战胜匈奴，在狼居胥山举行祭天大礼的故事。宋文帝听了王玄谟的大话，对臣下说：“闻王玄谟陈说，使人有封狼居胥意。”辛弃疾用宋文帝“草草”（草率的意思）北伐终于惨败的历史事实，来作为对当时伐金须做好充分准备、不能草率从事的深切鉴戒。“仓皇北顾”，是看到北方追来的敌人张皇失色的意思，宋文帝战败时有“北顾涕交流”的诗句。韩侂胄于开禧二年北伐战败，次年被诛，正中了辛弃疾的“赢得仓皇北顾”的预言。</p>
<p>​
“四十三年”三句，由今忆昔，有屈赋的“美人迟暮”的感慨。辛弃疾于绍兴三十二年（1162）率众南归，至开禧元年在京口任上写这首《永遇乐》词，正好是四十三年。“望中犹记”两句，是说在京口北固亭北望，记得四十三年前自己正在战火弥漫的扬州以北地区参加抗金斗争。（“路”是宋朝的行政区域名，扬州属淮南东路。）后来渡淮南归，原想凭借国力，恢复中原，不期南宋朝廷昏聩无能，使他英雄无用武之地。如今过了四十三年，自己已成了老人，而壮志依然难酬。辛弃疾追思往事，不胜身世之感！</p>
<p>​
“佛狸祠下”三句，从上文缅怀往事回到眼前现实，使辛弃疾感到惊心：长江北岸瓜步山上有个佛狸祠，是北魏太武帝拓跋焘留下的历史遗迹。拓跋焘小字佛狸，属鲜卑族。他击败王玄谟的军队后，率追兵直达长江北岸的瓜步山，在山上建立行宫，这就是后来的佛狸祠。当地老百姓年年在佛狸祠下迎神赛会，“神鸦”是吃祭品的乌鸦，“社鼓”是祭神的鼓声。辛弃疾写“佛狸祠下”三句，表示自己的隐忧：如今江北各地沦陷已久，不迅速谋求恢复的话，民俗安于异族的统治，忘记了自己是宋室的臣民。这正和陆游的《北望》诗所谓“中原堕胡尘，北望但莽莽。耆年死已尽，童稚日夜长。羊裘左其衽，宁复记畴曩”彼此意思相同。</p>
<p>​
辛弃疾这首词最后用廉颇事作结，是作者到老而爱国之心不衰的明证。廉颇虽老，还想为赵王所用。他在赵王使者面前一顿饭就吃了一斗米做的饭、十斤肉，又披甲上马，表示自己尚有余勇。辛弃疾在这词末了以廉颇自比，也正表示自己不服老、还希望能为国效力的耿耿忠心。</p>
<p>​
辛弃疾词的创作方法，有一点和他以前的词人有明显的不同，就是多用典故。如这首词就用了这许多历史故事。有人因此说他的词缺点是好“掉书袋”。岳飞的孙子岳珂著《程史》，就说“用事多”是这首词的毛病，这是不确当的批评。我们应该作具体的分析：辛弃疾原有许多词是不免过度贪用典故的，但这首词却并不如此。它所用的故事，除末了廉颇一事以外，都是有关镇江的史实，眼前风光，是“京口怀古”这个题目应有的内容，和一般辞章家用典故不同。况且他用这些故事，都和这词的思想感情紧密相连，就艺术手法论，环绕作品的思想内容而使用许多史事，以加强作品的说服力和感染力，在宋词里是不多见的，这正是这首词的长处。杨慎谓辛词当以《永遇乐·京口北固亭怀古》为第一。这是一句颇有见地的评语。</p>
<p>（选自《唐宋词欣赏》，北京出版社 2009 年版）</p>]]></content>
      <categories>
        <category>High School</category>
        <category>Chinese</category>
        <category>Classical Chinese Literature and Poetry</category>
      </categories>
      <tags>
        <tag>School Notes</tag>
        <tag>High School</tag>
        <tag>Chinese</tag>
      </tags>
  </entry>
  <entry>
    <title>沁园春·长沙-毛泽东</title>
    <url>/2022/03/12/chinese/High%20School/Classical%20Chinese%20Literature%20and%20Poetry/%E5%BF%85%E4%BF%AE/%E6%B2%81%E5%9B%AD%E6%98%A5%C2%B7%E9%95%BF%E6%B2%99-%E6%AF%9B%E6%B3%BD%E4%B8%9C/</url>
    <content><![CDATA[<h2 id="课文解读">课文解读</h2>
<p>​ 毛泽东的《沁园春·长沙》写于 1925
年，当时革命形势高涨，群众运动风起云涌，反帝反封建斗争如火如荼。这时候，一方面工农革命运动蓬勃发展，另一方面反动势力为了维护其统治，对革命力量进行疯狂的镇压。谁将成为主宰中国未来发展方向的力量，成为人们所关注的焦点。</p>
<p>​ 写《沁园春·长沙》的时候，毛泽东 32 岁，这一年 2
月毛泽东从上海回湖南开展农民运动， 8 月从韶山到长沙， 9
月前往广州主持全国农民运动讲习所。他在长沙逗留期间重游橘子洲，面对湘江上的自然秋景联想起当时的革命形势，便写下了这首《沁园春·长沙》。</p>
<p>​
这首词分为上下两片。上片主要写景，写湘江边美丽壮观的秋天景色，也写诗人面对大好河山时的感受，描述的是人与自然的关系。诗人通过远眺、近观、仰望、俯视，看到了红叶、绿水、船只、蓝天、雄鹰、游鱼，为我们描绘了一幅生机盎然、色彩绚丽壮美的秋景图，体现了巍峨、博大、壮阔的崇高美。在“看”字所总领的一组意象中，“万山红遍”“层林尽染”“漫江碧透”中的“万”“层”“漫”以及“遍”“尽”“透”这些词在范围、程度、层次等方面，渲染了浓艳鲜明的色彩，表现出山红水绿的静态美；而“百舸争流”“鹰击长空”“鱼翔浅底”中的“争”“击”“翔”等词，给碧绿清澈的江面增加了昂扬奋进的气息，生动地刻画出了百舸竞发、争先恐后的热烈场面，以及万里长空中飞鹰的矫健和清澈见底的江水中游鱼的欢愉自在，体现了事物的动态美。之后以“万类霜天竞自由”作总结，一个“竞”字，有力地突出了在寒秋严霜下万物蓬勃旺盛的生命力，让读者感受到诗人对大自然的无限热爱和由衷赞美。在感慨中，“怅寥廓，问苍茫大地，谁主沉浮”准确地表现出诗人感慨不尽、思绪万千的精神状态，而一个设问直接表达了诗人阔大的胸襟和气魄。</p>
<p>​
下片以“携来百侣曾游。忆往昔峥嵘岁月稠”开启，由独立寒秋、故地重游所看到的景色，联想到以前与“同学”一起来游玩的情景，于是过渡到对往昔生活及“同学少年”的回忆中。作者选用典型事例，将往事化为触手可及的形象，将过去的岁月在很短的篇幅中生动地描绘出来。无论是“书生意气，挥斥方遒”，还是“指点江山，激扬文字”，都表现出一群有志青年慷慨激昂，评论国事，奋笔疾书，激浊扬清的形象。他们“粪土当年万户侯”，向军阀、官僚展开了英勇斗争，显示出豪迈的气概和磅礴的气势。到词的结尾，一句意味深长的“曾记否，到中流击水，浪遏飞舟？”呼应了上片的一问：正是这些“到中流击水”的青年才俊、一代英豪代表着主宰世界的新生力量。此句也形象地概括了早年革命者雄姿英发的战斗形象和以天下为己任、蔑视反动派、改造旧世界的战斗精神。</p>
<p>​
这首词上下两片各有侧重，但又紧密联系，浑然一体，主要有以下特点：第一，情景交融，叙议结合。上片写景，句句有情；下片有叙述有议论，也结合着抒情，在回忆往昔生活时，注入颂扬当代英雄的斗志豪情。这里的情不是孤立的，而是与现实人生息息相关的，是借景抒情。从全词来说，情为重点，景为衬托，情是诗人寄兴之所在，是诗人改造世界之志的归宿。第二，意象纷呈，意境深远。这首词的意象是呈辐射状的，即以中心意象向四周辐射而形成一个意象群。比如上片的中心意象是“万类霜天”，它回应了“万山”“层林”“百舸”“雄鹰”“游鱼”等意象；下片的中心意象是“同学少年”，它辐射出“书生意气，挥斥方遒”“指点江山，激扬文字”等复合意象。这些意象组合在一起，创造出深远的意境。</p>
<p>​
教学时，要引导学生深入到文本中去，分析词作结构和语词运用，理解作品的意蕴、意境，感受诗人的革命理想和豪迈激情。还可以引导学生将这首词与古代“悲秋”诗词进行对比，以更好理解这首词的情感特点。</p>
<h2 id="参考资料">参考资料</h2>
<h3 id="参考译文">参考译文</h3>
<div class="classcial-chinese-literature-and-poetry-translation"><div class="paragraph"><p class="original-text">独立寒秋，湘江北去，橘子洲头。</p><p class="translation">深秋季节，我独自站立在橘子洲头，望着滔滔的湘水向北奔流。</p><p class="original-text">看万山红遍，层林尽染；漫江碧透，百舸争流。</p><p class="translation">万千山峰全都变成了红色，层层树林好像染过颜色一样；江水清澈澄碧，一艘艘大船乘风破浪，争先恐后。</p><p class="original-text">鹰击长空，鱼翔浅底，万类霜天竞自由。</p><p class="translation">鹰在广阔的天空里飞，鱼在清澈的水里游，万物都在秋光中争着过自由自在的生活。</p><p class="original-text">怅寥廓，问苍茫大地，谁主沉浮？</p><p class="translation">面对广阔的宇宙惆怅感慨：这旷远苍茫大地的盛衰沉浮，该由谁来主宰呢？</p></div><div class="paragraph"><p class="original-text">携来百侣曾游。忆往昔峥嵘岁月稠。</p><p class="translation">曾经我和我的同学，经常携手结伴来到这里漫游。在一起商讨国家大事，那无数不平凡的岁月至今还萦绕在我的心头。</p><p class="original-text">恰同学少年，风华正茂；书生意气，挥斥方遒。</p><p class="translation">同学们正值青春年少，风华正茂；大家踌躇满志，意气奔放，劲头正足。</p><p class="original-text">指点江山，激扬文字，粪土当年万户侯。</p><p class="translation">评论国家大事，写出这些激浊扬清的文章，把当时那些军阀官僚看得如同粪土。</p><p class="original-text">曾记否，到中流击水，浪遏飞舟？</p><p class="translation">可曾还记得，那时的我们到江心水深流急的地方游泳，尽管风浪大得将急驰的行船都阻挡了？</p></div></div>
<h3 id="参考文献">参考文献</h3>
<h4 id="沁园春长沙的写作背景-background_of_qingyuanchun_changsha">《沁园春·长沙》的写作背景
<span class="citation" data-cites="Background_of_Qingyuanchun_Changsha">[@Background_of_Qingyuanchun_Changsha]</span></h4>
<p>​ 长沙，是湖南省省会，是毛泽东早年读书和从事革命活动的地方。自 1911
年起，到 1923 年 4
月去中共中央工作止，毛泽东在长沙学习和工作达十年之久。1911
年春，毛泽东考入湘乡驻省中学读书。同年 10
月辛亥革命爆发后，毛泽东参加长沙的起义新军。1912 年 3
月清帝退位，袁世凯就任临时大总统后，毛泽东退伍，先考入公立高级商业学校，一个月后又考入湖南全省高等中学校（后改名省立第一中学）。秋，毛泽东退学寄居湘乡会馆自学，每天到湖南省立图书馆读书。1913
年春，毛泽东考入湖南省立第四师范校预科。1914 年 2
月省立第四师范学校合并于省立第一师范学校。因为一师是秋季招生， 3
月毛泽东编入预科第三班重读了半年预科，秋季编入本科第八班，直到 1918 年 6
月毕业。在读书期间，毛泽东常和同学们攀登岳麓山，到橘子洲游览，畅游湘江，一起研究学问，讨论国家大事，寻求革命真理，以后又在长沙工作和从事革命活动，多次领导反对军阀政府的斗争。</p>
<p>​ 1915 年 9
月毛泽东印发反对袁世凯称帝的小册子，开展反对袁世凯的斗争。1915
年上半年学期末，一师学生反对由校长张干提议、省议会作出要学生缴十元杂费的新规定，毛泽东参与领导了驱逐张干的学潮，张干被迫辞职。1917
年发起组织新民学会， 1918 年 4 月正式成立。1917
年开办了中国第一所革命的工人夜学。1919
年主编《湘江评论》，下半年积极领导了湖南人民驱逐北洋军阀张敬尧的运动。1920
年创办“文化书社”“马克思主义研究会”“俄罗斯研究会”。1921 年 8
月与何叔衡创办湖南自修大学， 1923 年 4
月与李达等创办湖南自修大学校刊《新时代》。特别是， 1920
年与何叔衡等组织湖南共产主义小组和社会主义青年团。1921
年代表湖南共产主义小组到上海出席中国共产党第一次全国代表大会。回湖南后，建立了党的第一个省委中共湘区委员会，并担任书记。1922
年 10 月领导了长沙六千多泥木工人罢工，经过 20
天英勇斗争，获得完全胜利。</p>
<p>​ 1925 年 2
月，毛泽东与夫人杨开慧，携带长子毛岸英、次子毛岸青回家乡韶山养病，并领导农民运动。同年
8 月 28
日，由于韶山大恶霸地主成胥生告密，湖南军阀省长赵恒惕电令湘潭县团防局逮捕毛泽东，就地正法。毛泽东得到消息后，趁着月色，扮成乡下郎中，坐轿子逃出了韶山，经宁乡道林到九江庙，然后坐小船，秘密来到赵恒惕的眼皮底下一长沙。在长沙逗留一些日子后，
9
月上旬毛泽东与准备到农民运动讲习所第五期学习的庞叔侃、周振岳由长沙动身赴广州。就在毛泽东回到长沙，即将离开湖南去广州办农民运动讲习所期间，重访橘子洲，抚今追昔，激情澎湃，写下了这首词。</p>
<p>（选自《毛泽东诗词新解》，中央文献出版社 2003 年版，有删节）</p>
<hr>
<h4 id="社会改革家的临秋情怀重读毛泽东词沁园春长沙-the_autumn_feelings_of_social_reformers_rereading_mao_zedong_poem_qinyuanchun_changsha">社会改革家的临秋情怀—重读毛泽东词《沁园春·长沙》
<span class="citation" data-cites="The_Autumn_Feelings_of_Social_Reformers_Rereading_Mao_Zedong_Poem_Qinyuanchun_Changsha">[@The_Autumn_Feelings_of_Social_Reformers_Rereading_Mao_Zedong_Poem_Qinyuanchun_Changsha]</span></h4>
<p>​
这是青年毛泽东的一篇力作，是一篇游故地而观秋景、忆同窗而思往事、励斗志而抒豪情的壮美词章。即景抒情，缘物思人，固然是传统的艺术构思，然而它在内容上却是全新的笔墨：写秋景而不衰飒，忆往事而不惆怅，景、事、情紧密交融，汪洋涵汇，大气磅礴，实开临秋抚事词篇之大观。</p>
<p>​
橘子洲，湘江畔，岳麓山，曾是学生时代的毛泽东和他的同学好友常来畅游之处，壮丽的山水陪伴着他们的峥嵘岁月，激发着这群时代骄子的豪情壮志，送他们走上革命征途。十几年的光阴瞬息而逝，
1925
年深秋时节，青年毛泽东独自来到橘子洲头，眼前的山水唤起他的思忆，激荡着他的心胸。改天换地的革命理想，昂扬奋发的青春活力，继往开来的英雄斗志，这一切，通过写景、忆旧的笔墨痛快淋漓地挥洒出来。</p>
<p>​
秋天是草木变衰的季节，也是一般人易动伤怀的时候，“自古逢秋悲寂寥”，刘禹锡概括恰当。自从宋玉首兴悲秋之叹，历代文人接声递响，秋天落在纸面，只是一颗凄清的泪滴而已。然而，秋天又是“守成”与“革新”两种世界观的试金石。秋天对旧有之物进行否定，对新生之物加以孕育。大凡守成恋旧的人，常会因秋气扫除旧物而感慨盛事变衰；而立志改造社会的革命者，却在心理上与秋天构成同调，对秋风的除旧育新予以热烈的欢呼。唐代永贞革新的主要人物刘禹锡，就曾高唱“我言秋日胜春朝”（《秋词》）、“马思边草拳毛动，雕盼青云睡眼开”（《始闻秋风》），唐末农民起义领袖黄巢，盛称秋天的美景：“冲天香阵透长安，满城尽带黄金甲。”（《不第后赋菊》）毛泽东是伟大的革命家，他所进行的翻新中国几千年历史的革命是一场划时代的大革命。他热爱秋天，在所作的诗词中，多次欢呼秋天，赞美秋天：“一年一度秋风劲，不似春光。胜似春光，寥廓江天万里霜”（《采桑子·重阳》），“万木霜天红烂漫”（《渔家傲·反第一次大“围剿”》），“六盘山上高峰，红旗漫卷西风”（《清平乐·六盘山》）。在这首长调词中，对秋天的礼赞更是达到了如火如茶的地步。</p>
<p>​
首先，在景物的摄取上，采用多方观照、广角摄景的手法，多角度、多层面地展示秋光。“万山”句写远景，“漫江”句写近景，“鹰击”句写上景，“鱼翔”句写下景。远近上下，浏览无遗，爱秋之心，何等热切！字里行间，跳动着诗人喜悦的目光。其次，在景物的着色上，只取“红”“碧”二色：“万山红遍”“漫江碧透”。红、碧二色都富于生命的力度，勃发着生命的光彩，再加上“遍”“透”的程度修饰，一派蓬勃生机跃然纸上。而且，红、碧二色的对比度很强，红在碧的比衬下愈显其红，碧在红的比衬下愈显其碧，红枫碧水，交相辉映，溢彩流光，鲜明夺目。秋色之壮，叹为观止！古代大诗人的景物诗，亦非常注意景物颜色的搭配、对比，杜甫诗句“山青花欲燃”（《绝句二首》其二），就是以“青”“红”二色描写出春山的壮美。其三，在景物的状态描写上，取动而不取静。写鹰，则是搏击长空；写鱼，则是漫游浅底；写船，则是竞相疾驶；写水，则是滔滔北去；即便是写红枫，也要用个“染”字，“染”是着色的过程，这就写出枫叶的颜色由淡变深的动态。总之，一切景物都处于动态之中，而运动正是生命的体现。在作者的笔下，秋天不再是生命渐趋衰微，恰恰相反，那是一个充满了生机，“万类霜天竞自由”的恢宏世界！</p>
<p>​
且莫以为作者仅是在如实描绘客观景物。须知，秋风过处，总有落叶飘零；霜气袭来，常多萧瑟之响。对于此声此象，作者未写。他是在以心迎物，依据自己的主观情志去选择、驾驭景物，“写气图貌，既随物以宛转；属采附声，亦与心而徘徊”（《文心雕龙·物色》）。词中的景物是作者主观能动化了的景物，它们融注了作者的感情色彩和思想意识，而成为作者心境的物化和感情的载体。透过这幅壮丽、飞动的秋景图，我们分明读到了作者的内心世界，那是一种意气风发、惊雷隐动的心境，一种意欲除旧布新、主宰乾坤的心境。结韵“问苍茫大地，谁主沉浮”则是正面道出了这种心境。</p>
<p>​
词的过片“携来百侣曾游”，紧承上片结韵的提问，引出人物，是对“谁主沉浮”的含蓄回答，那就是诗人和他的革命伴侣们，要主宰中国大地的命运。能不能承担这个使命？能不能改造旧的社会？一个“忆”字引出往昔峥嵘岁月，诸多英雄之举，做出了肯定的回答。“恰同学少年，风华正茂；书生意气，挥斥方遒”四句，激昂顿挫，节奏鲜明，活画出一群青年革命家的英姿俊采。1914
年，毛泽东进入湖南省立第一师范读书，结识了一批胸怀革命大志的学友，经常在湘江岸边、岳麓山中、橘子洲头聚会。他们正值青春年华，思想敏锐，才华横溢，在蓬勃发展的革命形势的激励下，他们纵谈革命理想，探讨改造中国的途径，满腔热情，正如汹涌的湘江浪涛奔腾无阻。“指点江山，激扬文字，粪土当年万户侯”，这三句艺术地概括了这群青年革命家的实践活动。毛泽东曾在长沙组织起湖南学生联合会和新民学会，开办了工人夜校，宣传革命真理，还创办了《湘江评论》，发表了一篇篇抨击黑暗现实、鼓舞民众奋起战斗的激越文章。毛泽东在《&lt;湘江评论&gt;创刊宣言》中豪迈地宣称：“官僚不要怕，军阀不要怕，资本家不要怕。”他领导革命青年驱逐了反动校长张干，还组织进步同学开展反对袁世凯的斗争，领导湖南人民驱逐了反动军阀张敬尧，又率领革命工团的代表，同军阀赵恒惕进行面对面的斗争，保存了工会组织，等等。回忆峥嵘岁月，意在说明，年轻的革命家完全可以主宰中国的命运，完全有能力打碎旧的国家机器，创造一个崭新的世界。这段回忆旧事与上片的礼赞秋景具有同一的精神内核：礼赞秋景，实质是在赞美秋对夏的否定之功；回忆旧事，是在缅怀革命对反动的抗争之举。写景与叙事达到了高度的融合，其精神内核就是否定，就是抗争。具有否定精神的秋景，激发了具有抗争精神的诗人，就是这首词的创作动因和艺术构思。</p>
<p>​
值得一提的还有这首词的结韵。填词结韵最难，既不能断绝前文的意思，又不能延续道来；既须总括一篇之旨，又不可直白说出。毛泽东不愧是词家高手，他陡然截断了对同学少年革命生涯的追忆，转而描写他们在湘江中流击水的一幕往事，写游泳时推起的大浪遏制了飞驶的船只。这个生活细节看似与革命斗争无关，然而在凸现青年革命家的果敢坚毅的精神上，正与前文暗中扣合，一脉相承。而且，中流弄潮，这个意象本身就带有抗争的意味，它实际上是青年革命家峥嵘岁月的艺术缩影。如果把中国革命看作是一条长河，那么这群中流击水者正是长河中的弄潮儿，他们的大无畏精神弄起了震天动地的漫江雷涛！有了这种伟大精神和力量，又何愁不能改变中国历史？这些象外之象，弦外之音，却是从那日常生活中的游泳一幕生发而出，真可谓小中见大，言近旨远，事浅意深。再加上“曾记否”的试问语气，更显得语重心长，沉雄慷慨，摇曳多姿。作者仿佛是在自问，又仿佛是在遥问往昔的战友，一种磨砺旧志、重振雄风的呼唤，飞出了纸面，回荡于湘江两岸，岳麓山间……</p>
<p>​
全词无论写景、忆旧、议论、记事，都紧紧系于变革现实的思想主线，主脑鲜明，羽翼丰盈。词中景物之壮丽，人物之英俊，事迹之卓绝，情感之豪迈，四者格调一致，相互辉映，建构浑成，淋漓尽致地表达了一个世纪伟人的临秋情怀。</p>
<p>（选自《名作欣赏《2004 年第 8 期）</p>]]></content>
      <categories>
        <category>High School</category>
        <category>Chinese</category>
        <category>Classical Chinese Literature and Poetry</category>
      </categories>
      <tags>
        <tag>School Notes</tag>
        <tag>High School</tag>
        <tag>Chinese</tag>
      </tags>
  </entry>
  <entry>
    <title>短歌行-曹操</title>
    <url>/2022/03/12/chinese/High%20School/Classical%20Chinese%20Literature%20and%20Poetry/%E5%BF%85%E4%BF%AE/%E7%9F%AD%E6%AD%8C%E8%A1%8C-%E6%9B%B9%E6%93%8D/</url>
    <content><![CDATA[<h2 id="课文解读">课文解读</h2>
<p>​
《短歌行》是汉末政治家、文学家曹操用乐府古题创作的诗篇。它通过宴会的歌唱，以沉稳顿挫的笔调抒写诗人求贤如渴的思想感情和统一天下的雄心壮志。</p>
<p>​ 全诗可分为八章，每章四句。</p>
<p>​
第一、二章借歌和酒道出对时光消逝的感慨。在这八句诗中，主要的情感就是一个“愁”字。这里诗人一方面是在抒发个人之情，发愁时间过得太快，恐怕来不及有所作为；另一方面也是在巧妙地感染广大贤才，提醒贤才们人生就像朝露那样容易消失，岁月已经流逝很多，应该赶紧拿定主意，到他那里施展抱负。因此，诗中浓郁的抒情气氛包含了政治目的。这样积极的目的用低沉的调子来发端，固然表明诗人真有他的愁思，所以才说得真切；但另一方面也唯有通过这样的调子才更能打开处于下层、多历艰难又急于寻找出路的贤才的心扉。所以说用意和遣词既是真切的，也是巧妙的。</p>
<p>​
接着第三、四章情味更加缠绵深长。“青青”二句出白《诗经·郑风·子衿》，原诗是写一个姑娘在思念她的爱人，诗人在这里引用《子衿》的诗句，还说自己一直低低地吟诵它，这实在是太巧妙了。他说“青青子衿，悠悠我心”，固然是直接比喻了对贤才的思念：但更重要的是他所省掉的原诗中的两句话：“纵我不往，子宁不嗣音？”诗人由于事实上不可能一个一个地去找那些贤才，所以用这种含蓄的方法来提醒他们：就算我没有去找你们，你们为什么不主动来投奔我呢？由这层含而不露的意思可以看出，他那求才的用心十分真诚，的确具有感人的力量。他这种深细婉转的用心，在《求贤令》之类的文件中当然无法尽情表达；而这首《短歌行》作为一首诗，就能抒发政治文件所不能抒发的感情，起到政治文件所不能起的作用。紧接着诗人又引用《诗经·小雅·鹿鸣》中的四句，描写宾主欢宴的情景，意思是说：只要你们到我这里来，我是一定会待以嘉宾之礼的，我们是能够欢快融洽地相处并合作的。这八句仍然没有明确地说出“求才”二字，诗人引用了《诗经》中的语句来表明心志。“但为君故”这个“君”字，本来在《诗经》中可能指一个具体的人，而在这里则具有了广泛的意义：在当时凡是读到曹操此诗的贤士，都可以自认为就是曹操慕求的对象。正因为这样，此诗流传开去，才会起到巨大的社会作用。</p>
<p>​
第五、六章是对以上十六句的强调和照应。以上十六句主要讲了两个意思，即为求贤而愁，又表示要待贤以礼，这可以说是全诗中的两个“主旋律”，而“明明如月”八句就是这两个“主旋律”的复现和变奏。第五章四句又在讲忧愁，是照应第一、二章的八句；第六章四句讲贤才到来，是照应第三、四章的八句。表面看来，第五、六章意思、上是与前十六句重复的，但实际上由于“主旋律”的复现和变奏，因此使全诗更有抑扬低昂、反复咏叹之致，加强了抒情的意味。再从诗歌表达的主题来看，这八句不是简单重复，而是进一步强调、深化了题旨。</p>
<p>​
最后两章是全诗关键所在。第七章是形成全诗气氛的关键，也是全诗艺术感染力最强的地方，第八章则是了解作者主观思想的关键。第七章四句既是准确而形象的写景笔墨，同时也有比喻的深意和理解的多义。首先是指那些犹豫不定的人才在诸雄鼎立的局面下一时无所适从。所以诗人以乌鹊绕树、“何枝可依”的情景来启发他们，不要三心二意，要善于择枝而栖，赶紧到自己这一边来。这四句诗生动刻画了那些犹豫彷徨者的处境与心情，然而诗人不仅丝毫未加指责，反而在浓郁的诗意中透露着对这些人的关心和同情。同时，由于汉末大乱，北方人口大量迁移，本诗的“乌鹊南飞……何枝可依”等句，除了可能含有像在诗人另一首乐府诗《却东西门行》中所表现的征夫怀乡之感，表示诗人在南征北讨、不能定居的生活中一时的厌烦以外，也可能含有慨叹人民流离迁徙的情感。读者不仅能从此章中感受到诗人渴求贤才的心情，而且还能够从中感觉到当时社会的氛围。最后四句画龙点睛，明明白白地披肝沥胆，希望人才都来归顺，确切地点明了此诗的主题。“山不厌高，海不厌深”是通过比喻极有说服力地表现了人才越多越好，绝不会有“人满之患”之嫌。“周公吐哺”的典故突出地表现了诗人求贤若渴的心情。</p>
<p>​ 本诗艺术特色有三：</p>
<p>​
第一，合理引用和化用。比如“青青子衿，悠悠我心”是引用《诗经》诗句，将女子对情人的深情相思变成了诗人对贤才的思慕。又如“呦呦鹿鸣，食野之苹。我有嘉宾，鼓瑟吹笙”也是引用《诗经》诗句，其意在表达诗人期待贤者的热诚。再如“周公吐哺，天下归心”化用《史记·鲁周公世家》中周公事，诗人以周公自比，表达求贤建业的雄心。</p>
<p>​
第二，妙用比喻。“明明如月，何时可掇”将贤者喻为高空的明月，光照宇内，可望而不可即，让人生“忧”。又用“月明星稀，乌鹊南飞。绕树三匝，何枝可依”中乌鹊难以择枝的情景喻贤才无所依托。还用“山不厌高，海不厌深”喻贤才越多越好。</p>
<p>​
第三，巧用欲扬先抑手法。诗作以消极地感叹时光易逝，忧自己功业未建开头，最后折转，抒发其统一天下的雄心壮志。抑扬低昂，反复咏叹，大大加强了抒情的效果。</p>
<h2 id="参考资料">参考资料</h2>
<h3 id="参考译文">参考译文</h3>
<div class="classcial-chinese-literature-and-poetry-translation"><div class="paragraph"><p class="original-text">对酒当歌，人生几何！</p><p class="translation">一边喝酒一边高歌，人生的岁月有多少。</p><p class="original-text">譬如朝露，去日苦多。</p><p class="translation">好比晨露转瞬即逝，逝去的时光实在太多！</p><p class="original-text">慨当以慷，忧思难忘。</p><p class="translation">宴会上歌声慷慨激昂，心中的忧愁却难以遗忘。</p><p class="original-text">何以解忧？唯有杜康。</p><p class="translation">靠什么来排解忧闷？唯有豪饮美酒。</p><p class="original-text">青青子衿，悠悠我心。</p><p class="translation">有学识的才子们啊，你们令我朝夕思慕。</p><p class="original-text">但为君故，沉吟至今。</p><p class="translation">只是因为您的缘故，让我沉痛吟诵至今。</p><p class="original-text">呦呦鹿鸣，食野之苹。</p><p class="translation">阳光下鹿群呦呦欢鸣，在原野吃着艾蒿。</p><p class="original-text">我有嘉宾，鼓瑟吹笙。</p><p class="translation">一旦四方贤才光临舍下，我将奏瑟吹笙宴请嘉宾。</p><p class="original-text">明明如月，何时可掇？</p><p class="translation">当空悬挂的皓月哟，什么时候可以摘取呢？</p><p class="original-text">忧从中来，不可断绝。</p><p class="translation">心中深深的忧思，喷涌而出不能停止。</p><p class="original-text">越陌度阡，枉用相存。</p><p class="translation">远方宾客穿越纵横交错的田路，屈驾前来探望我。</p><p class="original-text">契阔谈<ruby><rb>讌</rb><rt>yàn</rt></ruby>，心念旧恩。</p><p class="translation">彼此久别重逢谈心宴饮，重温那往日的恩情。</p><p class="original-text">月明星稀，乌鹊南飞。</p><p class="translation">月光明亮星光稀疏，一群寻巢喜鹊向南飞去。</p><p class="original-text">绕树三匝，何枝可依？</p><p class="translation">绕树飞了几周却没敛翅，哪里才有它们栖身之所？</p><p class="original-text">山不厌高，海不厌深。</p><p class="translation">高山不辞土石才见巍峨，大海不弃涓流才见壮阔。</p><p class="original-text">周公吐哺，天下归心。</p><p class="translation">我愿如周公一般礼贤下士，愿天下的英杰真心归顺于我。</p></div></div>
<h3 id="参考文献">参考文献</h3>
<h4 id="短歌行集评">《短歌行》集评</h4>
<p>​
谭云：少小时读之，不觉其细；数年前读之，不觉其厚。至细，至厚，至奇！英雄骚雅，可以验后人心眼。钟云：四言至此，出脱《三百篇》殆尽。此其心手不粘带处。“青青子衿”二句，“呦呦鹿鸣”四句，全写《三百篇》，而毕竟一毫不似，其妙难言。（钟惺、谭元春《古诗归》）</p>
<p>​
劈首“对酒当歌”四字，正从《古诗》“今日良宴会”之“今日”二字来。截断已过、未来只说现前，境界更逼，时光更促，妙传“短”字神髓，较《古诗》更胜。盖“今日”二字虽妙，然一日之间未必皆对酒当歌之时也。以下三十一句诗文，皆从此四字生出。盖一厢口中饮酒，一厢耳中听歌，一厢心中凭空作想，想出这曲曲折折，絮絮叨叨，若连贯，若不连贯，纯是一片怜才意思。（吴淇《六朝选诗定论》）</p>
<p>​
此叹流光易逝，欲得贤才以早建王业之诗。前四一截，以酒发端，就流光易逝，引动早当建功，为通章虚冒。“慨当”十二句，则思得贤才于士类之中也。却以慷慨幽思，解忧惟酒，凭空喝入。然后“青青”四句，点清士类有贤，心欲得而沉吟不置，缴醒慷慨幽思。“呦呦”四句，则透后言诚得贤才辅洽，定当如《鹿鸣》之燕乐嘉宾，方为满愿。缴醒解忧惟酒，为一截。“明明”十二句，则思得贤才于故旧之中也。却借月不可掇，先作一比，拖出忧难断绝，隐逗欲得之诚。然后“越陌”四句，点清故旧有贤，虽过存而每嗟契阔，缴醒忧难断绝。“月明”四句，则从对面即乌鹊无栖，比出贤才昧时远引，不知依我之深为可惜。以“月明星稀”领起，则又借以缴醒月不可掇也，为一截。后四，方以兼容并蓄，引周公事，醒出得贤建业本心。千里双龙，一齐结穴，奸雄叵测，活现毫端。《解题》谓“当及时行乐”，何其掉以轻心！（张玉谷《古诗赏析》）</p>
<p>​
此诗即汉高《大风歌》思猛士之旨也。“人生几何”发端，盖传所谓古之王者知寿命之不长，故并建圣哲，以贻后嗣。次两引《青衿》《鹿鸣》二诗，一则求之不得，而沉吟忧思；一则求之既得，而笙簧酒醴。虽然，鸟则择木，木岂能择鸟？天下三分，士不北走则南驰耳。分奔吴、蜀，栖皇未定，若非吐哺折节，何以来之？山不厌土，故能成其高；海不厌水，故能成其深；王者不厌士，故天下归心。说者不察，乃谓孟德禅夺已萌，而沉吟未决，畏人讥嫌，感岁月之如流，恐进退之失据。试问篇中《子衿》《鹿鸣》之诗，契阔燕谈之语，当作何解？且孟德吐握求贤之日，犹王莽谦恭下士之初，岂肯直吐鄙怀，公言篡逆者乎？其谬甚矣。曹公苍莽古直悲凉，其诗上继变雅，无篇不奇，但亮节慷慨，无烦笺释，故止录此一篇。（陈沆《诗比兴笺》）</p>
<hr>
<h4 id="短歌行赏析-appreciation_of_duangexing">《短歌行》赏析 <span class="citation" data-cites="Appreciation_of_Duangexing">[@Appreciation_of_Duangexing]</span></h4>
<p>​
曹操集子里现存《短歌行》两首，我这里说的是它的第一首。一千七百多年来，这首诗脍炙人口，被认为是最能代表建安时期诗歌风格的作品之一。</p>
<p>​
“短歌行”是汉乐府一个曲调的名称。王士禛说：“曹氏父子兄弟往往以乐府题叙汉末事。”（《带经堂诗话》卷四）意思就是说他们往往用古代民歌的形式写当代现实的题材。曹操的诗更几乎全是这样。</p>
<p>​
这首诗的主题有过争论。唐代吴兢说它是“言当及时为乐”（《乐府古题要解》卷上），就遭到清人张玉谷“何以掉其轻心”的讥评。张玉谷认为：“此叹流光易逝，欲得贤才以早建王业之诗。”（《古诗赏析》卷八）看来张玉谷的理解是正确的。改用我们今天的话说，这首诗的主题就是表达作者思贤若渴的心情和对人才的尊重。</p>
<p>​
“对酒当歌，人生几何！譬如朝露，去日苦多。慨当以慷，忧思难忘。何以解忧？唯有杜康。”一开头，诗人就由眼前的酒宴和歌舞场面说开去，慨叹人生的短促和年华的消逝。从表面看，似乎曹操提出了一个“人生当及时行乐”的消极主题，甚至因此被后世许多悲观之士引为口实；而实际上刚好相反，全诗洋溢着高昂的情绪，蕴藏着应及时努力的思想。它通过微吟低唱的形式，倾吐慷慨激烈的心曲。魏源说：“对酒当歌，有风云之气。”（《诗比兴笺·序》）陈沆也指出：“此诗即汉高《大风歌》思猛士之旨也。”（《诗比兴笺》卷一）汉高祖刘邦思得猛士以守四方，曹操想求贤才以定天下，他们的思想基调确是很相似的。</p>
<p>​
“对酒当歌”的“当”字究竟是作“面对着”解还是作“应该”解呢？前人也持不同的看法。吴淇说“盖一厢口中饮酒，一厢耳中听歌”（《六朝选诗定论》卷之五），显然持前一种解释；王尧衢说“先言对酒必当歌咏”（《古唐诗合解》卷三），显然又持后一种解释。我以为中国古典诗词往往有多义性，只要两说俱通，不妨并存。对着酒当着歌也好，对酒时必当歌咏也好，无非都是说有酒有歌，无须为了人生的短促而消沉颓丧罢了。这一大段，似乎纯发议论；但梗概不平之气贯注首尾，有力地振动全篇。诗人不写觥筹交错和轻歌曼舞之景，而独抒身居廊庙心忧天下之情。诗撇开了对空间的描绘而转为对时间的思索，即由对酒当歌转为惜往日，给人以放浪恣肆之感。这是就曹操诗歌的风格说的。若就诗里的意境而言，则如吴淇所说“劈首“对酒当歌”四字……截断已过、未来，只说现前，境界更逼，时光更促，妙传“短”字神髓”（《六朝选诗定论》卷之五），给人展出一个紧逼迫促的境界。它使读者从现实生活中去探讨人生哲理，从朴素的形式中去寻求深长的意绪。这样，全诗“志深笔长，梗概多气”的特点，在首章中就揭示得很清楚了。</p>
<p>​
“青青子衿，悠悠我心。但为君故，沉吟至今。呦呦鹿鸣，食野之苹。我有嘉宾，鼓瑟吹笙。”八句中除三、四两句外，有六句引自《诗经》。前两句引自《郑风·子衿》，原诗首章是：“青青子衿，悠悠我心。纵我不往，子宁不嗣音？”说的是一个女子在热烈期待着所爱男子的到来。后四句引自《小雅·鹿鸣》，这本就是古代宴饮宾客时唱的诗。曹操引古喻今，自不免启人思接千载之上。当读者吟诵这些诗句的时候，很自然地会勾起各种联想。从表面看，曹操的话只有“但为君故，沉吟至今”两句；但他通过借古以讽的手法，举少总多，联类无穷，婉转而清晰地吐露了自己深挚的情意。前半写他求贤才不得时的日夜思慕，后半写他求贤才既得后的竭诚欢迎。两相对照，意极分明。加上“青青”写色，“呦呦”写声。诗中有色有声，更顿觉词采鲜艳、音韵悠扬多了。</p>
<p>​
“明明如月，何时可掇？”“掇”一作“辍”。我赞成作“掇”是。显然诗人这时正奇想天外：明朗的月亮，什么时候能把它摘到手呢？后来李白“欲上青天揽明月”的诗句应即由此夺胎。这两句写得委实精彩！它除了显示诗人不失赤子之心想“上九天揽月”外，还作为一种比兴手法，因小见大，暗寓贤才何时求得和理想何时实现等丰富含义。诗人因求贤才不得而“忧从中来，不可断绝”，又因贤才远道来归附自己而喜不自胜—“越陌度阡，枉用相存。契阔谈讌，心念旧恩”。这一忧一喜、忽忧忽喜的矛盾心理，正完满地表现了诗人思贤若渴的主题。</p>
<p>​
“月明星稀，乌鹊南飞。绕树三匝，何枝可依？”诗人融情入景，因抬头见月明星稀，乃顿生孤寒寂寞之感。接着又静中见动，以“乌鹊南飞”之景隐喻无所依托的贤才。沈德潜指出：““月明星稀”四句，喻客子无所依托。”（《古诗源》卷五）诗人因怜贤才的无所依托，渴望其归己，遂以“山不厌高，海不厌深”作比方，引“周公吐哺”的典故作勉励，表明自己求贤不懈的耿耿赤忱，希望能开创一个“天下归心”的大好局面。</p>
<p>​
总之，这首诗立意深远，风格别致。它集抒情、写景、叙事、说理于一炉，而能相互发热增辉。吴淇说它“曲曲折折，絮絮叨叨，若连贯，若不连贯，纯是一片怜才意思”（《六朝选诗定论》卷之五），是颇中肯綮的。全篇音韵铿锵有力，韵脚或八句一换，或四句一转，既摇曳生姿，又错落有致，真能给读者以无穷的审美享受。陈祚明评此诗为“跌宕悠扬，极悲凉之致”（《采菽堂古诗选》卷五），也很识味。</p>
<p>​
刘勰论及建安文学时指出：“观其时文，雅好慷慨，良由世积乱离，风衰俗怨。并志深而笔长，故梗概而多气也。”（《文心雕龙·时序》）就“志深笔长，梗概多气”而言，这首诗确不愧为建安诗歌的代表作。就题材而论，它并不特别，但无论它写什么，都蕴藏着深刻的思想和饱含着激越的感情，因此它能充分显示出“志深笔长，梗概多气”的风格。我以为，这首诗之所以能赢得古往今来广大读者的喜爱，也即由此缘故。</p>
<p>​
至于此诗写于何时，目前尚难确定。《三国演义》说它写于赤壁之战前夕、曹操夜宴长江之时，固然是出于小说家的虚构；苏轼《赤壁赋》引此诗“月明星稀，乌鹊南飞”两句后，紧接着就叙曹操“方其破荆州，下江陵，顺流而东也”，“酾酒临江，横槊赋诗”，似乎也暗示此诗写于此时，同样是出于文学家的想象和推测。这种虚构、想象和推测尽管都是合理的，但由于缺乏可信的史料为根据，还不能作出准确的结论。因此我以为姑且存疑为是。</p>
<p>（选自《汉魏六朝诗歌鉴赏集》，人民文学出版社 1985 年版）</p>]]></content>
      <categories>
        <category>High School</category>
        <category>Chinese</category>
        <category>Classical Chinese Literature and Poetry</category>
      </categories>
      <tags>
        <tag>School Notes</tag>
        <tag>High School</tag>
        <tag>Chinese</tag>
      </tags>
  </entry>
  <entry>
    <title>登高-杜甫</title>
    <url>/2022/03/12/chinese/High%20School/Classical%20Chinese%20Literature%20and%20Poetry/%E5%BF%85%E4%BF%AE/%E7%99%BB%E9%AB%98-%E6%9D%9C%E7%94%AB/</url>
    <content><![CDATA[<h2 id="课文解读">课文解读</h2>
<p>​
此诗是唐大历二年（767）秋杜甫在夔州时所写。登高在中国文化中是一个极富象征性的意象，杜甫把古代风俗中的登高祈寿与士大夫的登高言志综合在了一起，全诗通过登高所见秋江景色，倾诉了诗人长年漂泊、老病孤愁的复杂感情和抱负无成的怅恨，慷慨激越，动人心弦。杨伦称赞此诗为“杜集七言律诗第一”（《杜诗镜铨》），胡应麟《诗薮》推崇此诗是“古今七言律第一”。</p>
<p>​ 诗的前四句写登高见闻。</p>
<p>​
首联用“风急”二字领起，写夔州的特定环境。夔州在长江之滨，向以猿多著称，夔峡口更以风大闻名。诗人在多风的秋日登上高处，峡中不断传来“高猿长啸”之声。接着，诗人视线移动，由高处转向江水洲渚，在水清沙白的阔大背景上，看到了迎风飞翔、盘旋往复的鸟群。如果仅从这个角度看过去，首联真是营造了一幅气势磅礴的长江秋日图。然而，一个“哀”字奠定了全诗的情感基调，也为首联营造的画面增加了不尽的悲怆意味，这一个“哀”字让诗句中的风、天、渚、沙、猿啸、鸟飞顿时有了浓重的伤感色彩。如果联系全诗来看，这个“哀”字不仅写出了自然之悲象（秋），而且写出了人生之艰难（霜鬓）。</p>
<p>​
颔联集中表现了夔州秋天的典型特征。诗人仰望茫无边际、萧萧而下的木叶，俯视奔流不息、滚滚而来的江水，于不动声色的景物描写中让人倾听灵魂深处的苍凉与悲苦。“无边”“不尽”，使“萧萧”“滚滚”更加形象化，不仅使人联想到落木窸窣之声、长江汹涌之状，更能让人在秋日的种种情景中品味出韶光易逝、人生迟暮的感伤。把前两联合起来看，风急、猿啸、鸟飞、木落，伴以滚滚而来的江水，整个境界卷入到急速的流动之中。透过这些沉郁悲凉的对句，我们看到的是诗人出神入化的刚健笔力。“无边落木”一句，化用了屈原《九歌·湘夫人》中“袅袅兮秋风，洞庭波兮木叶下”的诗句，但杜甫继之以“滚滚长江”，使其境界旷远，意象宏阔。前人把“无边落木萧萧下，不尽长江滚滚来”誉为“古今独步”的“句中化境”，是有道理的。</p>
<p>​ 诗的后四句抒情。</p>
<p>​
前两联虽然极力描写秋景，但直到颈联，才点出一个“秋”字。颈联中的“悲”和“独登台”不仅暗合首联的“哀”，而且表明了诗人是在高处远眺，这就把眼前景和心中情紧密地联系在一起了。“常作客”，指出了诗人漂泊无定的生涯。“百年”，本喻有限的人生，此处专指暮年。“悲秋”两字写得沉痛。诗人日睹阔大苍凉的秋景，“萧萧”的落叶和“不尽”的逝水，不由得想到自己一生漂泊不定，年老后沦落他乡、体弱多病的处境，无限悲愁之绪顿时涌上心头。此联的“万里”“百年”和上一联的“无边”“不尽”，还有相互呼应的作用：诗人的羁旅之愁与孤独感，就像落叶和江水一样，推排不尽，驱赶不绝，情与景在此有了最好的交融之境。另外，“独”字应有两层意思在，一是独知此宇宙与人生之悲怆，二是独自承担此苦难的情怀。我们一般看到的思乡诗都有孤独的情感在，但像诗人这般因久客而孤独，再加上离乡万里、人在暮年的感叹，诗意便陡然见得深沉了。</p>
<p>​
尾联承接颈联，进一步抒发自己的悲秋苦恨之情。“艰难苦恨”写出了诗人潦倒的生活之苦和无法释怀的国难家愁，对杜甫来讲，这种“艰难苦恨”也就是人生的艰难。正是这种“苦恨”（人生艰难）使自己白发日多。因病无奈断酒后，悲愁越发难以排遣，而一人独自登高望远，无祈寿延年之意，只能惹恨添悲，怅惘苦恨。面对眼前所见所闻，无限悲凉之意自然袭上心头，慨叹之音白然脱口而出。</p>
<p>​
杜甫把这首律诗写得纵横恣肆，极尽变化之能事，合律而又突破了声律的束缚，对仗工整而又看不出雕琢的痕迹。诗前半写景，后半抒情。首联着重刻画眼前具体景物，好比画家的工笔，形、声、色、态，一一得到表现。次联着重渲染整个秋天气氛，好比画家的写意，让读者用想象补充。三联表现感情，从横（空间）、纵（时问）两方面着笔，异乡漂泊写到多病缠身。四联又从白发日多，因病断饮，归结到时世艰难是潦倒不堪的根源。这样，杜甫忧国伤时的情操，便跃然纸上。</p>
<p>​
教授本诗时，一方面可以在研习本诗的基础上参读《旅夜书怀》《登楼》《茅屋为秋风所破歌》等作品，充分感受诗人忧生忧世、沉郁顿挫的主体风格；另一方面可诵读杜甫诗作，如《月夜》《春夜喜雨》《闻官军收河南河北》等，充分感受杜甫诗歌题材的丰富、情感的深广和风格的多样。</p>
<h2 id="参考资料">参考资料</h2>
<h3 id="参考译文">参考译文</h3>
<div class="classcial-chinese-literature-and-poetry-translation"><div class="paragraph"><p class="original-text">风急天高猿啸哀，渚清沙白鸟飞回。</p><p class="translation">风急天高猿猴啼叫显得十分悲哀，水清沙白的河洲上有鸟儿在盘旋。</p><p class="original-text">无边落木萧萧下，不尽长江滚滚来。</p><p class="translation">无边无际的树木萧萧地飘下落叶，望不到头的长江水滚滚奔腾而来。</p><p class="original-text">万里悲秋常作客，百年多病独登台。</p><p class="translation">悲对秋景感慨万里漂泊常年为客，一生当中疾病缠身今日独上高台。</p><p class="original-text">艰难苦恨繁霜鬓，潦倒新停浊酒杯。</p><p class="translation">历尽了艰难苦恨白发长满了双鬓，衰颓满心偏又暂停了消愁的酒杯。</p></div></div>
<h3 id="参考文献">参考文献</h3>
<h4 id="七登高集评">七、《登高》集评</h4>
<p>​
此客中登眺感迟暮也。言登高而当秋风摇落之时，沙渚清幽之处，故啼猿飞鸟各自有情。落木江波，一望无际，是所见者万里皆秋，而以久客值此，其悲可知。百年多病而又独身登台，其愁更可想矣。盖客久则艰难备尝，病多则潦倒日甚，是以白发弥添，酒杯难举，将何以慰此穷愁也哉！（唐汝询《唐诗解》）</p>
<p>​
此章总结。（按：此前有《九日五首》，亦大历二年夔州作，故仇氏云云）上四，登高闻见之景；下四，登高感触之情。“登台”二字，明与首章相应。（按：《九日五首》之一云：“重阳独酌杯中酒，抱病起登江上台。”）猿啸鸟飞，落木长江，各就一山一水对言，是登台遥望所得者，而上联多用实字写景，下联多用虚字摹神。·····此诗八句皆对，黄生谓结调略须放松。（仇兆鳌《杜诗详注》）</p>
<p>​
（“风急”四句）登高所见。四句俱分俯仰说。（“万里”二句）登高所感。两句中包无限意。（“艰难”二句）久客则“艰苦”备尝，痛多则“潦倒”日甚。下二句亦用分承。时公以肺病断饮。又曰：高浑一气，古今独步。为杜集七言律诗第一。（杨伦《杜诗镜铨》）</p>
<p>​
前四句景，后四句情。一、二碎，三、四整，变化笔法。五、六接递开合，兼叙点，一气喷薄而出，此放翁所常拟之境也。收不觉为对句，换笔换意，一定章法也。而笔势雄骏奔放，若天马之不可羁，则他人不及。（方东树《昭昧詹言》）</p>
<hr>
<h4 id="登高赏析-appreciation_of_denggao">《登高》赏析 <span class="citation" data-cites="Appreciation_of_Denggao">[@Appreciation_of_Denggao]</span></h4>
<p>​
这是杜甫单篇七律中最著名的一首。同时所作的《九日五首》，今存四首，或以此首足之，虽未能定，但前四首（特别是第一首七律）与此首辞、意多同，则是显著的事实。在解说鉴赏这首诗时，不妨联系比较，相互印证。</p>
<p>​
诗系大历二年（767）客居夔州时重阳节登高而作。“万里悲秋常作客”一句，即全诗之主句，亦全诗主旨所在。而“悲秋”之意绪，即因登高时所闻见的秋景而触发，故开头即写登高所见秋景。</p>
<p>​
“风急天高猿啸哀，渚清沙白鸟飞回。”发端两句意象密集，十四个字写了六种具有夔峡地域特征的深秋景象。其中“风急”“天高”四字是贯串前两联的主要意象。时值寒秋，又立足于高台之上，故益感风之急疾猛烈，所谓“高台多悲风”。“急”字即含有“悲”意。由于“风急”，故扫荡浮云万里，益见秋空之高远明净，故曰“天高”。巴东三峡多猿，晴初霜旦、林寒涧肃的寒秋季节，猿声显得特别凄异，加上疾风的传送，哀啭的猿声仿佛被放大了许多倍，故曰“猿啸哀”。这一句写登高仰望平视所见所闻所触所感（“天高”写所见，“猿啸”写所闻，“风急”则既写听觉，又写触觉，“哀”写感觉）。下一句则全从视觉角度写俯视所见景象。由于天高气爽，云雾散尽，故江中的沙洲和岸边的沙地显得特别清朗明净、洁白无垢。由于“风急”，故鸟只能</p>
<p>​
在低空盘旋来回。如果说上句所写景象，透露出一种骚屑峻疾、凛寒悲哀的意绪，那么下句所写景象，则多少具有幽洁明净中略带凄清的色彩。两句所写均为秋景的特征，而格调则一疾一徐，显得张弛有致。</p>
<p>​
颔联写登高远视所见，一则写山，一则写水。时值深秋，三峡两岸的山峦上，层层叠叠的树林在经霜后，树叶凋黄，在疾风的吹拂下，纷纷陨落，耳畔似闻一片萧萧的落叶之声。这句所写景象，显然与《楚辞·九歌·湘夫人》的“袅袅兮秋风，洞庭波兮木叶下”有渊源关系，但情调却有显著区别。《九歌·湘夫人》中的“秋风”，是“袅袅”的轻盈舒徐之风，故所掀起的洞庭之波亦是微波动荡，而“木叶”之“下”也自然是一片两片地往下掉落。整个意境是阔大明净中具轻盈柔美之致，适宜于表现湘夫人的柔美情思。而《登高》中的秋风则是急疾猛烈的风，在它的强劲吹送下，千山万壑，丛林高树，木叶尽脱。着“无边”二字，既充分展示出境界之阔远，更渲染出在广远的空间中疾风席卷落叶的气势；而“萧萧”这一象声的叠字加在“下”字之上，更使读者如亲历其境，听到风卷无边落叶的声音，从而将“悲哉秋之为气也，萧瑟兮草木摇落而变衰”的悲秋意蕴渲染到极致。整个情调是阔大悲壮，具有强烈的动荡感，适宜于表达诗人“万里悲秋”的意绪。下一句写长江之水东流，着“不尽”“滚滚”四字，不仅展现出万里长江自西向东绵延伸展的广远空间，而且渲染出长江波涛汹涌、奔腾咆哮、一泻千里的气势。而上句无边落叶萧萧而下的景象，又使人自然联想起在广阔宇宙中生命凋衰的阔大悲凉；万里长江滚滚东流的景象，也同样极易唤起在悠悠不尽的历史长河中时间与生命的消逝的联想，从而为诗的后幅抒写“悲秋”之情做好了充分的铺垫。这一联与上一联之意象密集正好相反，只写了“落木”与“长江”两个意象，以此为中心，分别用“无边”与“不尽”，“萧萧”与“滚滚”，“下”与“来”加以尽情渲染，创造出极为阔远悲壮的境界，笔意显得非常疏宕。与上联正形成一密一疏的鲜明对照。</p>
<p>​
颈联转而抒写登高之情，“万里”“百年”即从上联“无边”“不尽”的广远之境中自然引出，故丝毫不显突兀。从叙事的角度看，这一联只不过说了客中登高而悲秋这样一件事（“多病”也可包于“悲秋”之意中）。但由于用“万里”“百年”“常”“独”等词语分别加以形容渲染，加上意象之间的互相映衬渗透，遂使读者感到其中包含的感情意绪极其复沓多重，极具抑扬顿挫的情致。前代评家对这一联十四个字中所包含的多重意蕴已有细致入微的分析，不必重复。妙在虽意蕴多重，却具鲜明的整体感，似乎诗人于此并未作着意的经营琢炼，只是随口说出。而上句概括了诗人安史之乱以来悲剧性的处境与心境，下句则紧贴诗题《登高》，突出强调了“悲秋”意蕴中所包含的生命衰飒的悲慨，从而自然转到尾联。这种化繁复于单纯明快的艺术功力，也许更值得称赞。</p>
<p>​
尾联直承“多病”“悲秋”，说自己由于历尽艰难困苦，尝尽愁苦恼恨，白发日繁；又因身体衰病，新近不得不戒了酒，连借酒浇愁的机会也没有了。或据《九日五首》之一的头两句“重阳独酌杯中酒，抱病起登江上台”，认为杜甫因病停杯之说为曲说。单看“独酌”之语，似乎有理，但诗人此下紧接着说“竹叶于人既无分，菊花从此不再开”（竹叶、菊花，指竹叶酒、菊花酒），则因病戒饮之说仍可成立，否则“既无分”“不再开”就无法解释。作为全篇感情的结穴，这个结尾确实有点“黯然而收”。就杜甫的实际处境而言，这样的结尾自是无可厚非，但就诗的艺术意境而言，尾联（特别是末句）只是顺延敷衍颈联的意蕴，而乏新意，也是事实，尽管并不至于影响诗的整体。</p>
<p>​
诗所抒写的虽是“悲秋”之意绪，但正如《秋兴八首》的“秋兴”包蕴极为丰富深厚一样，这里所抒的“悲秋”意蕴亦绝不仅仅是对自然界秋景的感受，而是包含了身世之悲、家国之忧的丰富内涵。因此，所谓“艰难苦恨”也不仅仅是属于诗人一身之境遇，这正是整首诗虽抒悲秋之意，而境界却极高远阔大、雄浑悲壮的内在原因。</p>
<p>（选自《唐诗选注评鉴》，中州古籍出版社 2013 年版）</p>]]></content>
      <categories>
        <category>High School</category>
        <category>Chinese</category>
        <category>Classical Chinese Literature and Poetry</category>
      </categories>
      <tags>
        <tag>School Notes</tag>
        <tag>High School</tag>
        <tag>Chinese</tag>
      </tags>
  </entry>
  <entry>
    <title>琵琶行并序-白居易</title>
    <url>/2022/03/12/chinese/High%20School/Classical%20Chinese%20Literature%20and%20Poetry/%E5%BF%85%E4%BF%AE/%E7%90%B5%E7%90%B6%E8%A1%8C%E5%B9%B6%E5%BA%8F-%E7%99%BD%E5%B1%85%E6%98%93/</url>
    <content><![CDATA[<h2 id="课文解读">课文解读</h2>
<p>​
“行”是古诗的一种体裁，南宋王灼《碧鸡漫志》解释说：“古诗或名曰乐府，谓诗之可歌也。故乐府中有歌有谣，有吟有引，有行有曲。”宋代姜夔《白石道人诗说》云：“体如行书曰行。”从唐人歌行体的风格来看，所谓“行”，是指那些流走自然、可歌可唱的诗篇。</p>
<p>​
《琵琶行》是一首长篇叙事诗，其创作背景作者在诗序中已经大体说明，需要补充的是诗人被贬的原因。唐宪宗元和十年（815），拥兵自重的藩镇李师道派遣刺客刺杀主张用武力平息叛乱的宰相武元衡，白居易上疏，请求朝廷缉捕凶犯，以雪国耻。没想到却遭到了一些朝臣的嫉恨。白居易当时是太子左赞善大夫，已经离开了谏官的位置。那些人说他不该越职言事，并诬称白居易写过“新井”和“赏花”的诗，不顾忌他母亲是因看花坠井而死的，大逆不道。其中真实的原因是，白居易在此前任左拾遗、翰林学士期间，屡向皇帝上书言事，剖析朝政，还写了大量讽刺社会政治的诗歌，像《卖炭翁》等，得罪了很多权贵。这一次政治打击在白居易的一生中是最为沉重的。从此，他虽然也不失关心国计民生的赤子之心，但干预政治的热情却大大减退。了解这一政治背景，有助于理解这首诗中诗人所表现出的压抑和苦闷。</p>
<p>​
被贬九江的第二年，一个深秋的夜晚，诗人到江边送客，离别在即，惆怅萦怀。忽然，从水面飘来的琵琶声，凝住了时空，吸引了主客，由此演绎出一段琵琶女的故事，更因之产生了一首脍炙古今的诗篇。</p>
<p>​
第一段，写送客闻琵琶之声。第一句“浔阳江头夜送客”，仅用七个字，就点出地点、时间、人物，拉开故事的序幕，语言平易，如话家常，又高度凝练。接着，诗人选取了秋天两种有代表性的植物—一红的枫叶，白的荻花，来点染环境，描绘出一幅萧瑟的清秋景象。如同小说的环境描写一样，把人物置于特定的背景中，给人以真切感，可谓“境界全出”。之后四句，叙写离情别意，有景有情，情景相生。“无管弦”，为琵琶女的出场设伏，也与下文“终岁不闻丝竹声”遥相呼应。</p>
<p>​
第二段，步入诗的主体部分，写与琵琶女相见及听她演奏的情形。前两句，峰回路转，引出正文。“主人忘归客不发”与“主人下马客在船”句式相同，一句之中兼写主客，前后映衬。所不同的是，之前是无可奈何的离别之情，这里是不由自主的流连之意。从“寻声暗问”，到移船相见，到“千呼万唤”，寥寥数语，写出诗人急切的心情；从“欲语迟”，到“始出来”，到“半遮面”，轻轻几笔，绘出琵琶女羞怯的情态。既然是知音，就无须更多的话语。琵琶女调弦校音，信手弹来，在诗人看来则是“未成曲调先有情”；待正式演奏，“大弦嘈嘈”，“小弦切切”，时而高亢，时而幽咽，时而舒缓，时而激烈，时而间歇，或如铁骑驰骋，风雨骤至，或如珠玉落盘，莺语花间。此情此景，令诗人叹为观止。这一段的音乐描写是全诗最具特色之处，作者运用了大量拟声词和恰切的比喻，生动地摹画出琵琶女高超的演奏技巧和她弹奏的音乐震撼人心的力量。</p>
<p>​
第三段，叙写琵琶女的身世。以“沉吟放拨”两句作为过渡，然后转入琵琶女“自言”的情境中。先追忆往昔繁华岁月，青春年少，貌美艺佳，倾国倾城，风光无限；继言时光流转，人事皆非，少年不再，容颜衰老，以致“门前冷落鞍马稀，老大嫁作商人妇”；复言“商人重利轻别离”，只好在这秋江冷月之中独守空船，而每当“夜深忽梦少年事”，总是不知不觉地泪水纵横，梦断妆残。</p>
<p>​
第四段，写诗人对自已命运的感慨。琵琶女的身世，激起了诗人自我悲伤的情怀，发出了“同是天涯沦落人，相逢何必曾相识”的感慨。江城的僻远，环境的凄凉，娱乐的鲜少，独处的寂寞，凡此种种，皆为这偶然的相识所触发，千头万绪，一一涌上心头。于是，诗人产生了强烈的创作冲动，为琵琶曲创制新词，既记其事，兼抒其情。</p>
<p>​
最后一段，写琵琶女弦繁管急、凄切哀婉的演奏，写全场的人听乐而动容，写诗人泪洒青衫，无限伤感。这样，一个感人的故事结束了，一首伟大的诗歌却千古流传下来。</p>
<p>​
这首诗一经诞生，便被广为传唱，流播久远。白居易死后，就连当时的皇帝唐宣宗李忱都写诗悼念他，其中有“童子解吟长恨曲，胡儿能唱琵琶篇”之语。元代剧作家马致远根据这首诗写了杂剧《青衫泪》，可见琵琶女和“江州司马”的故事感人之深，影响之远。</p>
<p>​
这是一首长篇叙事诗，故事充满传奇色彩，人物感情丰富、性格鲜明。可以从以下几方面把握本诗的叙事脉络：</p>
<p>​
第一，故事情节。这是叙事的主干，也是人物活动的依托。这首诗的情节不算复杂：首先是送客，其次是听乐，然后是琵琶女的自述，最后是诗人的独白。需要注意的是，这首诗叙事详略处理非常恰当。略写送客，详写听乐；略写诗人自己，详写琵琶女。这样就突出了重点，深化了主题。仔细吟味，写琵琶女的自述，也是从诗人转述的角度道来，却无一不是她的心绪神情；写自己的贬谪之苦，虽然是直抒胸臆的独白，但又时时隐现出同病相怜的意味。写琵琶女，详昔而略今；写诗人自己，则略昔而详今。两相映衬，更见互补之妙。</p>
<p>​
第二，音乐描写。这首诗的音乐描写是贯穿全诗的，从开头的“无管弦”，到后来的“转轴拨弦”，到“四弦一声”，到“却坐促弦”，诗情随着乐律而变。琵琶女的演奏，可分前后两段，先是“自选曲目”《霓裳》《六幺》，后是“规定曲目”，即专门应诗人之请弹奏的乐曲。可以说音乐是双方交流的“第一语言”，假如没有这一媒介，也就不会有这一沦落天涯叹知音的故事了，更不会有“江州司马青衫湿”了。</p>
<p>​
第三，景物描写。全诗以秋江月夜为背景展开故事情节，创造出一种苍凉凄清的气氛。清人沈德潜在《唐诗别裁》中评论这首诗是“以江月为文澜”，确实很有见地。如“别时茫茫江浸月”“唯见江心秋月白”“绕船月明江水寒”都是以静衬动：前者接住水面上飘忽而来的琵琶声，次者凝固了琵琶曲的强大感染力，后者映射出琵琶女“老大嫁作商人妇”的无限感慨。</p>
<p>​
第四，情感描写。全诗以送客的离别之情为序曲，重点写了琵琶女和诗人相遇相知之情。如“未成曲调先有情”，写出了琵琶女初试才艺表现出的一段天然风韵；“梦啼妆泪红阑干”，写出了琵琶女感伤身世的悲苦之情；诗人的“叹息”和“唧唧”，写出了听乐的心领神会和听言的深深感慨；“江州司马青衫湿”，则是诗人情感的总爆发，如开闸之河水，一时俱出。</p>
<p>​
需要指出的是，这首诗的情和景是相衬相生、互相作用的，可以说是景为情染，景因情而更美好；情借景重，情因景而更深厚。</p>
<h2 id="参考资料">参考资料</h2>
<h3 id="参考译文">参考译文</h3>
<div class="classcial-chinese-literature-and-poetry-translation"><div class="paragraph"><p class="original-text">元和十年，予左迁九江郡司马。</p><p class="translation">唐宪宗元和十年，我被贬为九江郡司马。</p><p class="original-text">明年秋，送客湓浦口，闻舟中夜弹琵琶者，听其音，铮铮然有京都声。</p><p class="translation">第二年秋季的一天，在湓浦口为朋友送行，夜里听到船上有人弹琵琶。听那声音，铮铮铿铿有京都流行的声韵。</p><p class="original-text">问其人，本长安倡女，尝学琵琶于穆、曹二善才，年长色衰，委身为贾人妇。</p><p class="translation">探问这个人，原来是长安的歌女，曾经向穆、曹两位琵琶大师学艺。后来年纪大了，红颜退尽，嫁给商人为妻。</p><p class="original-text">遂命酒，使快弹数曲。曲罢悯然，自叙少小时欢乐事，今漂沦憔悴，转徙于江湖间。</p><p class="translation">于是命人摆酒叫她畅快地弹几曲。她弹完后，有些闷闷不乐的样子，自己说起了少年时欢乐之事，而今漂泊沉沦，形容憔悴，在江湖之间辗转流浪。</p><p class="original-text">予出官二年，恬然自安，感斯人言，是夕始觉有迁谪意。</p><p class="translation">我离京调外任职两年来，随遇而安，自得其乐，而今被这个人的话所感触，这天夜里才有被降职的感觉。</p><p class="original-text">因为长句，歌以赠之，凡六百一十六言，命曰《琵琶行》。</p><p class="translation">于是撰写一首长诗赠送给她，共六百一十六字，题为《琵琶行》。</p></div><div class="paragraph"><p class="original-text">浔阳江头夜送客，枫叶荻花秋瑟瑟。</p><p class="translation">夜晚我到浔阳江头送别客人，枫树、 芦荻被秋风吹得发出飒飒声响。</p><p class="original-text">主人下马客在船，举酒欲饮无管弦。</p><p class="translation">我和客人下马在船上饯别设宴，举起酒杯想要饮酒却无助兴的音乐。</p><p class="original-text">醉不成欢惨将别，别时茫茫江浸月。</p><p class="translation">酒喝得不痛快更伤心将要分别，临别时茫茫江水中浸着一轮冷月。</p></div><div class="paragraph"><p class="original-text">忽闻水上琵琶声，主人忘归客不发。</p><p class="translation">忽然听见江面传来阵阵琵琶声；我忘却了回归客人也不想动身。</p><p class="original-text">寻声暗问弹者谁，琵琶声停欲语迟。</p><p class="translation">寻着声源轻声询问弹琵琶的是谁？琵琶停了许久却迟迟不语。</p><p class="original-text">移船相近邀相见，添酒回灯重开宴。</p><p class="translation">我们移船靠近邀请她出来相见，叫下人添酒回灯重新摆起酒宴。</p><p class="original-text">千呼万唤始出来，犹抱琵琶半遮面。</p><p class="translation">千呼万唤她才缓缓地走出来，用怀里抱着的琵琶半遮着脸面。</p><p class="original-text">转轴拨弦三两声，未成曲调先有情。</p><p class="translation">她转紧琴轴拨动琴弦试弹了几声，还没弹成曲调却先有了感情。</p><p class="original-text">弦弦掩抑声声思，似诉平生不得志。</p><p class="translation">弦弦凄楚悲切声音隐含着沉思，似乎在诉说着她一生的不如意。</p><p class="original-text">低眉信手续续弹，说尽心中无限事。</p><p class="translation">她低眉随手慢慢地连续弹奏，尽情地倾诉心底无限的伤心事。</p><p class="original-text">轻拢慢捻抹复挑，初为《霓裳》后《六幺》。</p><p class="translation">轻轻地拢，慢慢地捻，又抹又挑，初弹《霓裳羽衣曲》接着再弹《六幺》。</p><p class="original-text">大弦嘈嘈如急雨，小弦切切如私语。</p><p class="translation">大弦声音沉重抑扬如暴风骤雨，小弦细促轻幽、急切细碎，如人窃窃私语。</p><p class="original-text">嘈嘈切切错杂弹，大珠小珠落玉盘。</p><p class="translation">嘈嘈声切切声互为交错地弹奏，就像大大小小的珍珠一颗颗掉落玉盘。</p><p class="original-text">间关莺语花底滑，幽咽泉流冰下难。</p><p class="translation">一会儿像黄鹂在花下啼鸣婉转流利，一会儿又像泉水在冰下流动滞涩不畅。</p><p class="original-text">冰泉冷涩弦凝绝，凝绝不通声暂歇。</p><p class="translation">好像冰泉冷涩琵琶声开始凝结，凝结而不通畅声音渐渐地中断。</p><p class="original-text">别有幽愁暗恨生，此时无声胜有声。</p><p class="translation">像另有一种愁思幽恨暗暗滋生，此时声音暂歇却比有声更动人。</p><p class="original-text">银瓶乍破水浆迸，铁骑突出刀枪鸣。</p><p class="translation">突然，琵琶之音陡然高昂，似银瓶炸裂，水浆奔迸；又像杀出一队铁骑，刀枪齐鸣。</p><p class="original-text">曲终收拨当心画，四弦一声如裂帛。</p><p class="translation">一曲终了拨子从弦索中间划过，四弦一声轰鸣好像撕裂了布帛。</p><p class="original-text">东船西舫悄无言，唯见江心秋月白。</p><p class="translation">东面和西面的画舫和游船都静悄悄的，只看见江心之中映着的秋月泛着白光。</p></div><div class="paragraph"><p class="original-text">沉吟放拨插弦中，整顿衣裳起敛容。</p><p class="translation">她沉吟着收起拨片插在琴弦中；然后整理一下衣服起身站立，收敛（深思时悲愤幽怨的）面部表情。</p><p class="original-text">自言本是京城女，家在虾蟆陵下住。</p><p class="translation">她说她本是京城负有盛名的歌女，老家住在长安城东南的虾蟆陵。</p><p class="original-text">十三学得琵琶成，名属教坊第一部。</p><p class="translation">十三岁就已学会弹奏琵琶技艺，名字登记在教坊乐团的第一部里。</p><p class="original-text">曲罢曾教善才服，妆成每被秋娘妒。</p><p class="translation">每曲弹罢都令艺术大师们叹服，每次妆成都被同行歌伎们嫉妒。</p><p class="original-text">五陵年少争缠头，一曲红绡不知数。</p><p class="translation">京城的富贵子弟争着给我赏赐，每当一曲弹罢,不知要给多少彩绸。</p><p class="original-text">钿头银篦击节碎，血色罗裙翻酒污。</p><p class="translation">钿头银篦打节拍常常断裂粉碎，红色罗裙被酒渍染污也不后悔。</p><p class="original-text">今年欢笑复明年，秋月春风等闲度。</p><p class="translation">年复一年都在欢笑打闹中度过，秋去春来美好的时光白白消磨。</p><p class="original-text">弟走从军阿姨死，暮去朝来颜色故。</p><p class="translation">教坊的兄弟参军去了，当家的阿姨也死了，暮去朝来我也年老色衰。</p><p class="original-text">门前冷落鞍马稀，老大嫁作商人妇。</p><p class="translation">门前车马减少光顾者落落稀稀，自己的年岁大了我只得嫁给商人为妻。</p><p class="original-text">商人重利轻别离，前月浮梁买茶去。</p><p class="translation">商人只重营利，对离别看得很轻淡，上个月他到浮梁买茶办货去了。</p><p class="original-text">去来江口守空船，绕船月明江水寒。</p><p class="translation">他去了留下我在江口孤守空船，秋月与我作伴，绕船的秋水凄寒。</p><p class="original-text">夜深忽梦少年事，梦啼妆泪红阑干。</p><p class="translation">更深夜阑常常梦到少年时作乐狂欢，梦中哭醒涕泪纵横污损了粉颜。</p></div><div class="paragraph"><p class="original-text">我闻琵琶已叹息，又闻此语重唧唧。</p><p class="translation">我听了琵琶声早已摇头叹息，又听到她这番诉说更加歔欷。</p><p class="original-text">同是天涯沦落人，相逢何必曾相识！</p><p class="translation">同样都是天涯沦落的可怜人，今日相逢何必问是否曾经相识！</p><p class="original-text">我从去年辞帝京，谪居卧病浔阳城。</p><p class="translation">自从去年我离开繁华长安京城，被贬居住在浔阳江畔便一直卧病。</p><p class="original-text">浔阳地僻无音乐，终岁不闻丝竹声。</p><p class="translation">浔阳这地方荒凉偏僻没有音乐，一年到头也听不见管弦奏鸣。</p><p class="original-text">住近湓江地低湿，黄芦苦竹绕宅生。</p><p class="translation">居住在湓江附近，低洼潮湿，院子周围，尽长些黄芦苦竹。</p><p class="original-text">其间旦暮闻何物？杜鹃啼血猿哀鸣。</p><p class="translation">在这里早晚能听到的是什么呢？尽是杜鹃猿猴那些悲凄的哀鸣。</p><p class="original-text">春江花朝秋月夜，往往取酒还独倾。</p><p class="translation">春江花朝秋江月夜那样好光景；也无可奈何常常取酒独酌独饮。</p><p class="original-text">岂无山歌与村笛，呕哑嘲哳难为听。</p><p class="translation">难道这里就没有山歌和村笛吗？只是那音调嘶哑粗涩实在难听。</p><p class="original-text">今夜闻君琵琶语，如听仙乐耳暂明。</p><p class="translation">今晚我听你弹奏琵琶诉说衷情，就像听到仙乐眼也亮来耳也明。</p><p class="original-text">莫辞更坐弹一曲，为君翻作《琵琶行》。</p><p class="translation">请你不要推辞坐下来再弹一曲；我要为你创作一首新诗《琵琶行》。</p></div><div class="paragraph"><p class="original-text">感我此言良久立，却坐促弦弦转急。</p><p class="translation">被我的话所感动她站立了好久；回身坐下再转紧琴弦拨出急声。</p><p class="original-text">凄凄不似向前声，满座重闻皆掩泣。</p><p class="translation">凄凄切切不似刚才奏过的单调，在座的人重听都掩面哭泣不停。</p><p class="original-text">座中泣下谁最多？江州司马青衫湿。</p><p class="translation">要问在座之中谁流的眼泪最多？江州司马的青衫已被泪水浸湿！</p></div></div>
<h3 id="参考文献">参考文献</h3>
<h4 id="琵琶行集评">《琵琶行》集评</h4>
<p>​
乐天题琵琶曰：“银瓶乍破水浆迸，铁骑突出刀枪鸣。”又曰：“四弦一声如裂帛。”此皆曲尽万物之情状。若音声不可把玩，如石火电光，而人之才力能揽取之，然此但得其情状，非能写其不传之妙。如山谷《题芦雁图》，则妙绝矣。（何汶《竹庄诗话》）</p>
<p>​
此宦游不遂，因琵琶以托兴也。言当清秋明月之夜，闻琵琶哀怨之音，听商妇自叙之苦，以动我逐臣久客之怀，宜其泣下沾襟也。《连昌》纪事，《琵琶》叙情，《长恨》讽刺，并长篇之胜。而高、李弗录，今采而笺释之，俾学者有所观法焉。（唐汝询《唐诗解》）</p>
<p>​
乐天诗如《长恨歌》《琵琶行》，皆所谓老妪解颐者也。然无一字不深入人情，而且刺心透髓，即少陵、长吉歌行皆不能及。所以然者，少陵、长吉虽能为情语，然犹兼才与学为之；凡情语一夹才学，终隔一层，便不能刺透心髓。乐天之妙，妙在全不用才学，一味以本色真切出之，所以感人最深。由是观之，则老妪解颐，谈何容易！（黄周星《唐诗快》）</p>
<p>​
满腔迁谪之感，借商妇以发之，有同病相怜之意焉。比兴相纬，寄托遥深，其意微以显，其音哀以思，其辞丽以则。（《唐宋诗醇》）</p>
<p>​
结以两相叹感收之。此行似江潮涌雪，余波荡漾，有悠然不尽之妙，凡作长题，步步映衬，处处点缀，组织处，悠扬处，层出不穷。笔意鲜艳无过白香山者。（《精选评注五朝诗学津梁》）</p>
<hr>
<h4 id="琵琶行赏析-appreciation_of_pipaxing">《琵琶行》赏析 <span class="citation" data-cites="Appreciation_of_Pipaxing">[@Appreciation_of_Pipaxing]</span></h4>
<p>​
《琵琶行》和《长恨歌》是各有独创性的名作。早在作者生前，已经是“童子解吟《长恨》曲，胡儿能唱《琵琶》篇”。此后，一直传诵国内外，显示了强大的艺术生命力。
如“序”中所说，诗里所写的是作者由长安贬到九江期间在船上听一位长安故倡弹奏琵琶、诉说身世的情景。
宋人洪迈认为夜遇琵琶女事未必可信，作者是通过虚构的情节，抒发他自己的“天涯沦落之恨”（《容斋随笔》卷七），这是抓住了要害的。但那虚构的情节既然真实地反映了琵琶女的不幸遭遇，那么就诗的客观意义说，它也抒发了“长安故倡”的“天涯沦落之恨”。看不到这一点，同样有片面性。</p>
<p>​ 诗人着力塑造了琵琶女的形象。</p>
<p>​ 从开头到“犹抱琵琶半遮面”，写琵琶女的出场。</p>
<p>​
首句“浔阳江头夜送客”，只七个字，就把人物（主人和客人）、地点（浮阳江头）、事件（主人送客人）和时间（夜晚）一一作概括的介绍；再用“枫叶获花秋瑟瑟”一句作环境的烘染，而秋夜送客的萧瑟落寞之感，已曲曲传出。唯其萧瑟落寞，因而反跌出“举酒欲饮无管弦”。“无管弦”三字，既与后面的“终岁不闻丝竹声”相呼应，又为琵琶女的出场和弹奏作铺垫。因“无管弦”而“醉不成欢惨将别”，铺垫已十分有力，再用“别时茫茫江浸月”作进一层的环境，烘染，就使得“忽闻水上琵琶声”具有浓烈的空谷足音之感，无怪乎“主人忘归客不发”，要“寻声暗问弹者谁”,“移船相近邀相见”了。
从“夜送客”之时的“秋瑟瑟”“无管弦”“惨将别”一转而为“忽闻”“寻声”“暗问”“移船”，直到“邀相见”，这对于琵琶女的出场来说，已可以说是“千呼万唤”了。但“邀相见”还不那么容易，又要经历一个“千呼万唤”的过程，她才肯“出来”。这并不是她在拿身份。正像“我”渴望听仙乐一般的琵琶声，是“直欲摅写天涯沦落之恨”一样，她“千呼万唤始出来”，也是由于有一肚子“天涯沦落之恨”，不便明说，也不愿见人。诗人正是抓住这一点，用“琵琶声停欲语迟”“犹抱琵琶半遮面”的肖像描写来表现她的难言之痛的。
下面的一大段，通过描写琵琶女弹奏的乐曲来揭示她的内心世界。</p>
<p>​
先用“转轴拨弦三两声”一句写校弦试音，接着就赞叹“未成曲调先有情”，突出了一个“情”字。“弦弦掩抑声声思”以下六句，总写“初为《霓裳》后《六幺》”的弹奏过程，其中既用“低眉信手续续弹”“轻拢慢捻抹复挑”描写弹奏的神态，更用“似诉平生不得志”“说尽心中无限事”概括了琵琶女借乐曲所抒发的思想情感。此后十四句，在借助语言的音韵摹写音乐的时候，兼用各种生动的比喻以加强其形象性。“大弦嘈嘈如急雨”，既用“嘈嘈”这个叠字词摹声，又用“如急雨”使它形象化。“小弦切切如私语”亦然。这还不够，“嘈嘈切切错杂弹”，已，经再现了“如急雨”“如私语”两种旋律的交错出现，再用“大珠小珠落玉盘”一比，视觉形象与听觉形象就同时显露出来，令人耳目应接不暇。旋律继续变化，出现了先“滑”后“涩”的两种意境。“间关”之声，轻快流利，而这种声音又好像“莺语花底”，视觉形象的优美强化了听觉形象的优美。“幽咽”之声，悲抑哽塞，而这种声音又好像“泉流冰下”，视觉形象的冷涩强化了听觉形象的冷涩。由“冷涩”到“凝绝”，是一个“声渐歇”的过程，诗人用“别有幽愁暗恨生，此时无声胜有声”的佳句描绘了余音袅袅、余意无穷的艺术境界，令人拍案叫绝。弹奏至此，满以为已经结束了。谁知那“幽愁暗恨”在“声渐歇”的过程中积聚了无穷的力量，无法压抑，终于如“银瓶乍破”，水浆奔进，如“铁骑突出”，刀枪轰鸣，把“凝绝”的暗流突然推向，高潮。才到高潮，即收拨一画，戛然而止。一曲虽终，而回肠荡气、惊心动魄的音乐魅力，却并没有消失。诗人又用“东船西舫悄无言，唯见江心秋月白”的环境描写作侧面烘托，给读者留下了涵泳回味的广阔空间。
如此绘声绘色地再现千变万化的音乐形象，已不能不使我们惊佩作者的艺术才华。但作者的才华还不仅表现在再现音乐形象，更重要的是通过音乐形象的千变万化，展现了琵琶女起伏回荡的心潮，为下面的诉说身世作了音乐性的渲染。</p>
<p>​
正像在“邀相见”之后，省掉了请弹琵琶的细节一样；在曲终之后，也略去了关于身世的询问，而用两个描写肖像的句子向“自言”过渡：“沉吟”的神态，显然与询问有关，这反映了她欲说还休的内心矛盾；“放拨”“插弦中”“整顿衣裳”“起”“敛容”等一系列动作和表情，则表现了她克服矛盾、一吐为快的心理活动。“自言”以下，用如怨如慕、如泣如诉的抒情笔调，为琵琶女的半生遭遇谱写了一曲扣人心弦的悲歌，与“说尽心中无限事”的乐曲互相补充，完成了女主人公的形象塑造。</p>
<p>​
女主人公的形象塑造得异常生动真实，并具有高度的典型性。通过这个形象，深刻地反映了封建社会中被侮辱、被损害的乐伎们、艺人们的悲惨命运。面对这个形象，怎能不一洒同情之泪！
作者在被琵琶女的命运激起的情感波涛中坦露了自我形象。“我从去年辞帝京，谪居卧病浔阳城”的那个“我”，是作者自己。作者由于要求革除暴政、实行仁政而遭受打击，从长安贬到九江，心情很痛苦。当琵琶女第一次弹出哀怨的乐曲、表达心事的时候，就已经拨动了他的心弦，发出了深长的叹息声。当琵琶女自诉身世，讲到“夜深忽梦少年事，梦啼妆泪红阑干”的时候，就更激起他的情感的共鸣：“同是天涯沦落人，相逢何必曾相识！”同病相怜，同声相应，忍不住说出了自己的遭遇。</p>
<p>​
写琵琶女自诉身世，详昔而略今；写自己的遭遇，则压根儿不提被贬以前的事。这也许是意味着以彼之详，补此之略吧！比方说，琵琶女昔日在京城里“曲罢曾教善才服，妆成每被秋娘妒”的情况和作者被贬以前的情况是不是有某些相通之处呢？同样，他被贬以后的处境和琵琶女“老大嫁作商人妇”以后的处境是不是也有某些类似之处呢？看来是有的，要不然，怎么会发出“同是天涯沦落人”的感慨？</p>
<p>​
“我”的诉说，反转来又拨动了琵琶女的心弦，当她又一次弹琵琶的时候，那声音就更加凄苦感人，因而反转来又激动了“我”的感情，以至热泪直流，湿透青衫。</p>
<p>​
把处于封建社会底层的琵琶女的遭遇，同被压抑的正直的知识分子的遭遇相提并论，相互映衬，相互补充，作如此细致生动的描写，并寄予无限同情，这在以前的诗歌中还是罕见的。
（选自《唐诗鉴赏辞典》，上海辞书出版社 2004 年版）</p>]]></content>
      <categories>
        <category>High School</category>
        <category>Chinese</category>
        <category>Classical Chinese Literature and Poetry</category>
      </categories>
      <tags>
        <tag>School Notes</tag>
        <tag>High School</tag>
        <tag>Chinese</tag>
      </tags>
  </entry>
  <entry>
    <title>高中文言文</title>
    <url>/2022/03/12/chinese/High%20School/Classical%20Chinese%20Literature%20and%20Poetry/index/</url>
    <content><![CDATA[<h2 id="栏目内容">栏目内容</h2>
<h3 id="目录">目录</h3>
<h4 id="必修-上册">必修 上册</h4>
<pre class="template:contents"><code>[[High School, Chinese, Classical Chinese Literature and Poetry, 沁园春·长沙-毛泽东], 沁园春·长沙-毛泽东]
[[High School, Chinese, Classical Chinese Literature and Poetry, 短歌行-曹操], 短歌行-曹操]
[[High School, Chinese, Classical Chinese Literature and Poetry, 归园田居五首其一-陶渊明], 归园田居五首其一-陶渊明]
[[High School, Chinese, Classical Chinese Literature and Poetry, 梦游天姥吟留别-李白], 梦游天姥吟留别-李白]
[[High School, Chinese, Classical Chinese Literature and Poetry, 登高-杜甫], 登高-杜甫]
[[High School, Chinese, Classical Chinese Literature and Poetry, 琵琶行并序-白居易], 琵琶行并序-白居易]
[[High School, Chinese, Classical Chinese Literature and Poetry, 念奴娇·赤壁怀古-苏轼], 念奴娇·赤壁怀古-苏轼]
[[High School, Chinese, Classical Chinese Literature and Poetry, 永遇乐·京口北固亭怀古-辛弃疾], 永遇乐·京口北固亭怀古-辛弃疾]
[[High School, Chinese, Classical Chinese Literature and Poetry, 声声慢·寻寻觅觅-李清照], 声声慢·寻寻觅觅-李清照]
[[High School, Chinese, Classical Chinese Literature and Poetry, 劝学-荀子], 劝学-荀子]
[[High School, Chinese, Classical Chinese Literature and Poetry, 师说-韩愈], 师说-韩愈]</code></pre>
<h4 id="必修-上册-1">必修 上册</h4>
<pre class="template:contents"><code>[[High School, Chinese, Classical Chinese Literature and Poetry, 子路、曾晳、冉有、公西华侍坐-《论语》], 子路、曾晳、冉有、公西华侍坐-《论语》]
[[High School, Chinese, Classical Chinese Literature and Poetry, 齐桓晋文之事-《孟子》], 齐桓晋文之事-《孟子》]
[[High School, Chinese, Classical Chinese Literature and Poetry, 庖丁解牛-《庄子》], 庖丁解牛-《庄子》]
[[High School, Chinese, Classical Chinese Literature and Poetry, 烛之武退秦师-《左传》], 烛之武退秦师-《左传》]
[[High School, Chinese, Classical Chinese Literature and Poetry, 鸿门宴-司马迁], 鸿门宴-司马迁]</code></pre>
<h4 id="选择性必修上册">选择性必修上册</h4>
<pre class="template:contents"><code>[[High School, Chinese, Classical Chinese Literature and Poetry, 子路、曾晳、冉有、公西华侍坐-《论语》], 子路、曾晳、冉有、公西华侍坐-《论语》]
[[High School, Chinese, Classical Chinese Literature and Poetry, 齐桓晋文之事-《孟子》], 齐桓晋文之事-《孟子》]
[[High School, Chinese, Classical Chinese Literature and Poetry, 庖丁解牛-《庄子》], 庖丁解牛-《庄子》]
[[High School, Chinese, Classical Chinese Literature and Poetry, 烛之武退秦师-《左传》], 烛之武退秦师-《左传》]
[[High School, Chinese, Classical Chinese Literature and Poetry, 鸿门宴-司马迁], 鸿门宴-司马迁]</code></pre>
<h4 id="选择性必修中册">选择性必修中册</h4>
<pre class="template:contents"><code>[[High School, Chinese, Classical Chinese Literature and Poetry, 屈原列传-司马迁], 屈原列传-司马迁]
[[High School, Chinese, Classical Chinese Literature and Poetry, 苏武传-班固], 苏武传-班固]
[[High School, Chinese, Classical Chinese Literature and Poetry, 过秦论-贾谊], 过秦论-贾谊]
[[High School, Chinese, Classical Chinese Literature and Poetry, 五代史伶官传序-欧阳修], 五代史伶官传序-欧阳修]</code></pre>
<h4 id="选择性必修下册">选择性必修下册</h4>
<pre class="template:contents"><code>[[High School, Chinese, Classical Chinese Literature and Poetry, 氓-《诗经·卫风》], 氓-《诗经·卫风》]
[[High School, Chinese, Classical Chinese Literature and Poetry, 离骚（节选）-屈原], 离骚（节选）-屈原]
[[High School, Chinese, Classical Chinese Literature and Poetry, 孔雀东南飞并序], 孔雀东南飞并序]
[[High School, Chinese, Classical Chinese Literature and Poetry, 蜀道难-李白], 蜀道难-李白]
[[High School, Chinese, Classical Chinese Literature and Poetry, 蜀相-杜甫], 蜀相-杜甫]
[[High School, Chinese, Classical Chinese Literature and Poetry, 望海潮·东南形胜-柳永], 望海潮·东南形胜-柳永]
[[High School, Chinese, Classical Chinese Literature and Poetry, 扬州慢·淮左名都-姜夔], 扬州慢·淮左名都-姜夔]
[[High School, Chinese, Classical Chinese Literature and Poetry, 陈情表-李密], 陈情表-李密]
[[High School, Chinese, Classical Chinese Literature and Poetry, 项脊轩志-归有光], 项脊轩志-归有光]
[[High School, Chinese, Classical Chinese Literature and Poetry, 兰亭集序-王羲之], 兰亭集序-王羲之]
[[High School, Chinese, Classical Chinese Literature and Poetry, 归去来兮辞并序-陶渊明], 归去来兮辞并序-陶渊明]
[[High School, Chinese, Classical Chinese Literature and Poetry, 种树郭橐驼传-柳宗元], 种树郭橐驼传-柳宗元]
[[High School, Chinese, Classical Chinese Literature and Poetry, 石钟山记-苏轼], 石钟山记-苏轼]</code></pre>]]></content>
      <categories>
        <category>High School</category>
        <category>Chinese</category>
        <category>Classical Chinese Literature and Poetry</category>
      </categories>
      <tags>
        <tag>School Notes</tag>
        <tag>High School</tag>
        <tag>Chinese</tag>
      </tags>
  </entry>
  <entry>
    <title>高中文言文：必修上 第一单元</title>
    <url>/2022/03/12/chinese/High%20School/Classical%20Chinese%20Literature%20and%20Poetry/%E5%BF%85%E4%BF%AE/%E5%BF%85%E4%BF%AE%E4%B8%8A%E5%86%8C%20%E7%AC%AC%E4%B8%80%E5%8D%95%E5%85%83/</url>
    <content><![CDATA[<h2 id="单元内容">单元内容</h2>
<h3 id="课文目录">课文目录</h3>
<pre class="template:contents"><code>[[High School, Chinese, Classical Chinese Literature and Poetry, 沁园春·长沙-毛泽东], 沁园春·长沙-毛泽东]</code></pre>
<h3 id="单元目标">单元目标</h3>
<ol type="1">
<li>感受革命领袖的伟大革命抱负和豪放胸襟，理解文章作者对国家前途命运的关注，激发青春的热情，理解春青的价值，敞开心扉，追寻理想，拥抱未来。</li>
<li>领会本单元诗歌与小说的内容，理解诗歌运用意象抒发情感的手法，把握小说叙事和抒情的特点，体会诗歌和小说的独特魅力。</li>
<li>学习从语言、形象、情感特点等不同角度欣赏作品，获得审美体验，提高文学作品的鉴赏能力。</li>
<li>结合本单元诗作的学习，尝试写作诗歌。可以以本单元的作品为学习的范本，也可以选择自己喜欢的中外诗歌作为研习的材料，从生活出发，寻找素材，激发诗情，抒发真情实感。掌握诗歌写作的一般技巧，注重语言的锤炼。</li>
</ol>
<h2 id="编写意图">编写意图</h2>
<h3 id="编写意图-1">编写意图</h3>
<p>​
本单元属于必修课程“文学阅读与写作”学习任务群。课程标准指出：“本任务群旨在引导学生阅读古今中外诗歌、散文、小说、剧本等不同体裁的优秀文学作品，使学生在感受形象、品味语言、体验情感的过程中提升文学欣赏能力，并尝试文学写作，撰写文学评论，借以提高审美鉴赏能力和表达交流能力。”同时，对该任务群的学习目标和内容作了如下说明：</p>
<p>（1）精读古今中外优秀的文学作品，感受作品中的艺术形象，理解欣赏作品的语言表达，把握作品的内涵，理解作者的创作意图。结合自己的生活经验和阅读写作经历，发挥想象，加深对作品的理解，力求有自己的发现。</p>
<p>（2）根据诗歌、散文、小说、剧本不同的艺术表现方式，从语言、构思、形象、意蕴、情感等多个角度欣赏作品，获得审美体验，认识作品的美学价值，发现作者独特的艺术创造。</p>
<p>（3）结合所阅读的作品，了解诗歌、散文、小说、剧本写作的一般规律。捕捉创作灵感，用自己喜欢的文体样式和表达方式写作，与同学交流写作体会。尝试续写或改写文学作品。</p>
<p>（4）养成写读书提要和笔记的习惯。根据需要，可选用杂感、随笔、评论、研究论文等方式，写出自己的阅读感受和见解，与他人分享，积累、丰富、提升文学鉴赏经验。</p>
<p>​
本单元作为该任务群的第一个单元，以“青春激扬”为人文主题，围绕诗歌、小说的阅读鉴赏展开设计。</p>
<p>​
本单元的人文主题是有关青春的体验和思考。考虑到学生进入高中阶段，正值青春年华，有必要让他们对青春、青年、理想有白觉的体认，在经典作品的启发和引导下对青春的内涵、青年的责任进行思考，树立正确的世界观、人生观和价值观，养成积极向上、奋发有为的人格。一方面考虑到青春的时代性，另一方面也因为青春主题在文学上的广泛分布，教材尽可能地拓展所选文学作品的范围。本单元选编了词一首，诗四首，当代短篇小说两篇。这些作品都与单元主题相关。突出单元主题，一方面是为了突显价值观教育，有利于发挥教学的育人功能，另一方面也有利于建构学习情境，便于组织“文学阅读与写作”任务群的教学。作品排布上，分为三课，一方面突出了重点，另一方面也照顾到了文体的差别，再者也有利于教学的分段实施。</p>
<p>​ 第 1
课是毛泽东的《沁园春·长沙》。这首词中毛泽东同志充满激情地回忆了青年时期“粪土当年万户侯”的岁月，词作豪迈大气，洋溢着不可抗拒的青春热情，特别是对当时社会的思考和改造世界的雄心壮志有着强烈的感染力，可以激励学生坚定不断进取、奉献社会的决心和信心。</p>
<p>​
单元的学习提示从学生的学习出发，对每篇作品的特点都作了简要的说明，意在给学生提供进入作品的路径。同时，又从学习方法与学习重点上作了提示，在组织教学时应该予以重视。单元学习任务以“阅读文学作品，领悟青春价值”为核心，从任务群的目标着眼，注意情境设置和任务统领。设计上既关注文本的学习，又注意拓展学生的语文生活，尤其突出语文的综合实践活动，为个体学习与合作学习预留了空间。</p>
<p>​
本单元对诗歌写作给予了指导。引导学生联系本单元的诗歌作品，在写作实践中建立起文学创作与生活的联系，学会抒发真实情感。设计时，重点指导学生掌握诗歌如何分行，如何运用形象，如何运用常见的艺术手法，如何使作品具有音乐性、节奏感，如何锤炼语言。</p>
<h3 id="教学指导">教学指导</h3>
<p>​
教材是在课程标准指导下编写的，力图体现课标精神，因此教师的教学也应该努力落实课标精神。具体地说，本单元属于“文学阅读与写作”任务群，教学应该围绕这一任务群的学习目标与内容展开。要注意本单元教学的整体性，在具体的教学过程中，要注意让学生自主学习，在积极的、主动的语文实践中提高自己的文学阅读与写作水平。要根据不同的学习条件、学习主体来设计不同的教学方案。可以根据特定的教学内容创设学习情境，以任务驱动引领学生学习。不管是单元整体教学设计，还是以课来设计，抑或是以单篇来设计，都要考虑上述要素，体现课标精神。</p>
<p>​
本单元是以“青春激扬”为人文主题的单元，可以用这一主题将单元内容贯通起来设计教学方案。当然，整体的教学方案不是单一的、含混的、平面的，而是有步骤、有层次的，以突出对单元内容的逐步理解。提倡多角度学习，充分考虑学生各种能力的训练和学习方法的运用。而这些都可以通过专题学习的方式来具体实施。比如，本单元可以以体验青春为情境，分成四个专题来进行。</p>
<p>​
第一个专题侧重在认知，学生可以自主完成，也可以小组分工协作来完成。主要任务是了解本单元课文作者的生平，本单元作品创作的背景。这些任务可以通过查阅图书资料，也可以通过搜索互联网的资源来完成。有些课文可能资料比较丰富，有些可能资料相对较少，在任务完成及评价上不一定作硬性的要求。这一专题的学习目的主要是让学生知道用“知人论世”的阅读方法，熟练地运用不同的手段获取资料帮助学习。</p>
<p>​
第二个专题可以以“不同的青春”为主题引导学生开展阅读研讨。让学生在阅读本单元作品的基础上，对作品内容进行概括，对每一篇作品的内容进行提炼，撰写阅读笔记或提纲，然后运用比较阅读的方式进行研讨。这些作品是不同的作者在不同时期写的，他们对青春、青年和理想的认识，他们表达的青春情感与人生理想都有同有异，这为学生的深入阅读和讨论提供了前提，讨论的结果对学生也会有较大的启发。</p>
<p>​
第三个专题可以用“青春是如何呈现的”来引领。完成单元任务群的要求：阅读不同体裁的文学作品，从不同体裁文学作品的不同艺术表现方式中获得审美体验。重在让学生在艺术鉴赏中提升文学欣赏水平。青春虽然是这一单元的主题，但是，不同的作者对这一主题的认识与表现并不相同，他们运用的文学体裁也不一样，具体的艺术手法、语言风格就更加不同。所以，要让学生在这一专题学习中深入到文本当中去，深入到语言中去，反复研习，反复体验，获取对这些作品真实的艺术感受。</p>
<p>​
第四个专题可以以“我的青春”为学习主题。本单元的文学作品书写的是不同作家对青春的表达，学生的阅读一方面要理解作者的创作意图，同时又要有自己的发现。单元任务群要求要“结合自己的生活经验和阅读写作经历，发挥想象，加深对作品的理解，力求有自己的发现”。所以，在完成这一学习任务时，要引导学生进行拓展，想一想自己还读过哪些与这一主题相关的作品，自己有哪些值得诉说的青春故事、青春情感与青春理解，可以用不同的方式表现出来，与同学交流。然后，再将这些内容与本单元的作品进行比较和印证，以加深对作品的理解。</p>
<p>​
如果以课文编排体系来安排教学也是可以的。本单元的编写大体上就是以三组课文来呈现的。在设计教学方案时要以文体来进行，重点是提高学生对不同文体审美特点的认识，掌握不同文体的阅读和欣赏方法，提高对不同文体作品的审美鉴赏水平。当然，在一组一组的课文教学中，也应该贯穿对单元的人文主题的理解。</p>
<p>​ 第 1
课是毛泽东的《沁园春·长沙》。这篇作品虽然是现代人写的，但文体却是旧体诗词，可以将欣赏词作作为学习任务。首先引导学生利用资料了解毛泽东那个时期的生活和革命经历，了解词的特点，再通过反复诵读、品析关键词和精彩语句等方式深入学习。</p>
<p>​
本单元的写作是学写诗歌。在指导时要联系本单元的诗歌学习，激发学生表达内心情感的兴趣。要树立诗歌写作正确的写作观，调动他们的生活积累，引导学生从生活出发，从自己的内心出发。可以与学生一起研读一些特点鲜明，形式相对简单的现代诗歌作品，让学生理解和掌握现代诗写作的一些入门技巧。学写诗歌，不是培养诗人，而是通过写作进一步认识诗歌的特征，提高诗歌的艺术鉴赏水平。要因材施教，尊重和爱护学生的创造性，对于有兴趣从事诗歌创作的学生要尽可能为他们创造条件，可以通过组建兴趣小组、学生文学社团和个别辅导等途径与方式使他们的兴趣专长得到提高和发展。</p>
<p>​
需要说明的是，在设计教学方案时，要完整地对待单元的各项内容，将本单元的各个组成部分都看作不可缺少的教学材料。不能只盯着课文，教材从单元导语、课文、学习提示，到单元学习任务、写作指导，是一个有机的整体。要引导学生认真学习和利用这些内容，理解它们的功能，从而发挥它们在帮助学生学习上的应有作用。</p>]]></content>
      <categories>
        <category>High School</category>
        <category>Chinese</category>
        <category>Classical Chinese Literature and Poetry</category>
      </categories>
      <tags>
        <tag>School Notes</tag>
        <tag>High School</tag>
        <tag>Chinese</tag>
      </tags>
  </entry>
  <entry>
    <title>高中文言文：必修上 第三单元</title>
    <url>/2022/03/12/chinese/High%20School/Classical%20Chinese%20Literature%20and%20Poetry/%E5%BF%85%E4%BF%AE/%E5%BF%85%E4%BF%AE%E4%B8%8A%E5%86%8C%20%E7%AC%AC%E4%B8%89%E5%8D%95%E5%85%83/</url>
    <content><![CDATA[<h2 id="单元内容">单元内容</h2>
<h3 id="课文目录">课文目录</h3>
<pre class="template:contents"><code>[[High School, Chinese, Classical Chinese Literature and Poetry, 短歌行-曹操], 短歌行-曹操]
[[High School, Chinese, Classical Chinese Literature and Poetry, 归园田居五首其一-陶渊明], 归园田居五首其一-陶渊明]
[[High School, Chinese, Classical Chinese Literature and Poetry, 梦游天姥吟留别-李白], 梦游天姥吟留别-李白]
[[High School, Chinese, Classical Chinese Literature and Poetry, 登高-杜甫], 登高-杜甫]
[[High School, Chinese, Classical Chinese Literature and Poetry, 琵琶行并序-白居易], 琵琶行并序-白居易]
[[High School, Chinese, Classical Chinese Literature and Poetry, 念奴娇·赤壁怀古-苏轼], 念奴娇·赤壁怀古-苏轼]
[[High School, Chinese, Classical Chinese Literature and Poetry, 永遇乐·京口北固亭怀古-辛弃疾], 永遇乐·京口北固亭怀古-辛弃疾]
[[High School, Chinese, Classical Chinese Literature and Poetry, 声声慢·寻寻觅觅-李清照], 声声慢·寻寻觅觅-李清照]</code></pre>
<h3 id="单元目标">单元目标</h3>
<ol type="1">
<li><p>通过本单元作品的学习，认识占诗词的当代价值，提高思想修养和文化品位，增强对中华优秀传统文化的传承意识，增强文化自信。</p></li>
<li><p>通过诵读涵泳，发挥联想和想象，感受诗歌的意境之美，独立欣赏诗歌独特的艺术魅力。</p></li>
<li><p>学习本单元不同时期、不同体式的经典诗歌作品，借助知人论世、以意逆志等方法把握诗歌内涵，体察诗人对社会与人生的思考，理解诗人的精神境界，提升综合审美鉴赏力。</p></li>
<li><p>在学习本单元作品的基础上，联系对既往文学作品的学习，根据白身实际情况，写一篇文学短评。</p></li>
</ol>
<h2 id="编写意图">编写意图</h2>
<h3 id="编写意图-1">编写意图</h3>
<p>​
本单元属于必修课程“文学阅读与写作”学习任务群。本单元的人文主题是“生命的诗意”，精选了魏晋至唐宋时期的经典诗词作品八首。这八首诗歌作品分为三课，分别是魏晋诗歌、唐代诗歌、宋词，充分考虑了时代、诗人、诗体、风格流派、单元人文主题要求等方面的因素。</p>
<p>​ 第 7
课两首诗作都是魏晋时期的代表作品，都表达了诗人的人生思考和人生选择。这两首诗在语言风格与表达技巧上也有很大的不同，学生应该结合诗人的身世背景，通过体会其不同的韵律、节奏、表达技巧，把握诗中情感，体察诗人的生命追求。</p>
<p>​ 第 8
课的三首唐诗，体式不同，风格各异，作品抒发的情感因诗人所处时代和个人遭际不同而旱多样风貌。李白的《梦游天姥吟留别》为古体诗，七言为主，兼用杂言，笔随兴致，情绪的表达淋漓尽致。杜甫的《登高》格律谨严，历来为人称颂，诗歌营造的浓郁悲凉的意境是学习的重要内容，诗人的忧国之情与个人的人生感慨融为一体，需要重点把握，诗体形式与诗人情感抒发之间的关系也是学习的重点。白居易的《琵琶行》是借别人的故事诉说自己的人生遭际，诗中琵琶女与诗人的境遇相通。情感共鸣是学习的重点，要注意体察诗人的人生感慨与生命追求。另外音乐描写与景物描写也是诗中非常精妙的内容，学习过程中也要重点关注。</p>
<p>​ 第 9
课宋词三首，分属一般认为的豪放、婉约两种风格的经典之作，词作的风格特点是学习的重要内容，词作中体现的情感世界，词人的生命思考与精神追求也是学生要重点学习的内容。《念奴娇·赤壁怀古》将写景、咏史、抒情融为一体，境界宏阔，词作中寄托的生命感悟与人生态度值得思考与体会。《永遇乐·京口北固亭怀古》豪迈悲壮，借典故抒发词人情志是这首词的一大特点，词人的爱国之志，老而弥坚，也是学生应重点关注的内容。《声声慢》（寻寻觅觅）与之前两词决然不同，国破家亡的忧愁苦闷、人物内心的波澜皆由朴素清新的语言不动声色地表达出来，全词通篇写“愁”却不见“愁”字，这种借外物渲染情绪的写法值得关注。同时，其叠字手法的运用也是重点学习内容，我们借此可以看到词人渐次深入的情感世界。</p>
<p>​
单元学习任务以实践性学习为主线，围绕“生命的诗意”这一单元人文主题，三个学习任务分别从诵读、鉴赏、表达三个方面组织学生开展学习活动，不仅要完成对单元内容的学习，更要实现本单元承载的文学阅读与写作任务群的学习目标。</p>
<h3 id="教学指导">教学指导</h3>
<p>​
本单元教学，教师要综合考虑自身的专业特长、学生实际、单元人文主题、“文学阅读与写作”学习任务群的目标要求等诸多要素，因“材”施教。</p>
<p>​
全单元共有八首诗词作品，可以围绕单元人文主题“生命的诗意”，创设学习情境，再以若干专题学习的形式完成单元教学；可以按照一组组的课文组成教学单位，把整个单元分为三个部分去完成；可以根据教材的单元学习任务要求，作整体的单元教学安排。总之，这应该是一个基于学生自主学习的教学设计，突出学习的实践性原则。当然，如果实在缺乏整体教学的相关条件，也可以采取单篇教学的形式，只是单篇教学也要建立在具体的学习情境中，让学生能够主动学习，而不仅仅是教师的讲授式教学。</p>
<p>​
如果按照单元人文主题“生命的诗意”组织教学，全单元八篇作品可以打通整体设计。在设计学习情境的前提下，可以通过几个专题来完成。比如：第一个专题是借助互联网和其他资源，查阅这八首诗词创作的时代背景，考察诗人是在什么样的时代、什么样的状态下创作了作品，作品可能反映了诗人什么样的生命状态，寄寓了诗人什么样的内心情感。第二个专题是通读这八首诗词，探究作品中诗人的生命表达，借助第一个专题的结论深度体察诗人的情感世界与精神追求。第三个专题是探讨诗人对诗歌形式的具体选择，如占体诗不讲求对仗、平仄，押韵较宽，诗句长短不限，句子有四言、五言、六言、七言和杂言，体格白由，适合笔随兴致、自由奔放的情感表达，李白的《梦游天姥吟留别》就选择了古风；格律诗结构严谨，字数、句数、平仄、用韵都有较为严格的限制，语言精练，讲究对偶，适合表达深沉悲慨之志，杜甫的《登高》就选择了七言格律体。第四个专题是诵读，可以是班级古诗诵读会，借助声音传递学生对诗歌作品的把握，呈现诗人的生命追求与精神品格。</p>
<p>​
如果按照一组组的课文来教学，可以把单元分成魏晋诗歌、唐诗三首、宋词三首来组织教学，建议用课程标准中倡导的专题比较阅读来完成学习任务。同样，在各组课文设置学习情境的前提下，魏晋诗歌可以比较曹操与陶渊明的人生志趣与生命追求，探讨他们人生的不同选择，进而理解两位诗人各白的生命思考；唐诗三首，可以比较三首诗不同的诗体形式对表达诗人情感的影响，从而理解诗人的生命状态与精神世界；宋词三首，可以借助语言表达、表现手法、风格特征的差异来探讨词人在表达情感上的不同，从而把握词人的生命态度和深邃的心灵世界。</p>
<p>​
如果是单篇作品教学，老师们更要注意学习情境与学习任务的创设。比如教学《梦游天姥吟留别》，教师就可以设置如下学习情境及相应学习任务：诗人选择什么样的诗歌样式表达感情是有讲究的，这与诗人的个性有关，与诗歌内容有关，也与诗歌体式对情感表达的作用有关。李白为何选择古体诗而不是格律诗来写作《梦游天姥吟留别》？从上面三个方面进行探究，完成学习任务。</p>
<p>​
这种学习情境与任务创设其实包含了如下的一些内容：学生要了解李白的个性，要了解古体诗与格律诗由于体式的不同在表达感情上的区别，要读懂这首诗的内容，要明白李白在诗中表达的生命追求。如果这个内容完成了，整首诗的学习目标也就达到了。</p>
<p>​
以上教学建议的核心是学生自主学习，不是教师全盘灌输，教师从头讲到尾的课堂教学现象应该在教学内容设计时摒弃掉。多年的语文教学实践证明，学生只有依靠实践性学习，才能实现深度学习的课程目标，学生的综合语文素养才能形成，学科核心素养目标才能真正得以落实。需要特别说明的是，本单元的写作任务是完成一篇文学短评。建议教师们把文学短评的写作设置在单元内容学习的过程中，让读写结合真正在学习过程中得到落实。</p>
<p>​
如上所说，课文的处理可以有不同教学情境下的取舍，既可以单元整体学习，局部整体学习，也可以单篇教学。教读课文与自读课文只是教材编写过程中对学习内容轻重的初步判断，不同的学校不同的教师可以根据实际情况作进一步的取舍，当然这要服从“文学阅读与写作”任务群的学习要求和目标。教材中的“学习提示”为学生提示了相关课文的学习重点，有的还提示了相关的学习路径，建议教师在组织教学时充分利用课文的“学习提示”，提醒学生应该去关注什么、如何处理学习中可能遇到的问题。“单元学习任务”是根据课标要求对单元学习内容要求的高度概括，教师应该尽可能地组织学生去完成相关学习任务，可能有些任务对部分学生的要求高了些，教师可以根据实际情况进行简化取舍。总之，教师在处理单元教学内容时，要充分考虑学习情境、专题学习、实践性学习，最终实现深度学习，从而完成单元学习内容承载的任务群学习目标。</p>]]></content>
      <categories>
        <category>High School</category>
        <category>Chinese</category>
        <category>Classical Chinese Literature and Poetry</category>
      </categories>
      <tags>
        <tag>School Notes</tag>
        <tag>High School</tag>
        <tag>Chinese</tag>
      </tags>
  </entry>
  <entry>
    <title>高中文言文：必修上</title>
    <url>/2022/03/12/chinese/High%20School/Classical%20Chinese%20Literature%20and%20Poetry/%E5%BF%85%E4%BF%AE/%E5%BF%85%E4%BF%AE%E4%B8%8A%E5%86%8C/</url>
    <content><![CDATA[<h2 id="教材内容">教材内容</h2>
<h3 id="课文目录">课文目录</h3>
<pre class="template:contents"><code>[[High School, Chinese, Classical Chinese Literature and Poetry, 沁园春·长沙-毛泽东], 沁园春·长沙-毛泽东]
[[High School, Chinese, Classical Chinese Literature and Poetry, 短歌行-曹操], 短歌行-曹操]
[[High School, Chinese, Classical Chinese Literature and Poetry, 归园田居五首其一-陶渊明], 归园田居五首其一-陶渊明]
[[High School, Chinese, Classical Chinese Literature and Poetry, 梦游天姥吟留别-李白], 梦游天姥吟留别-李白]
[[High School, Chinese, Classical Chinese Literature and Poetry, 登高-杜甫], 登高-杜甫]
[[High School, Chinese, Classical Chinese Literature and Poetry, 琵琶行并序-白居易], 琵琶行并序-白居易]
[[High School, Chinese, Classical Chinese Literature and Poetry, 念奴娇·赤壁怀古-苏轼], 念奴娇·赤壁怀古-苏轼]
[[High School, Chinese, Classical Chinese Literature and Poetry, 永遇乐·京口北固亭怀古-辛弃疾], 永遇乐·京口北固亭怀古-辛弃疾]
[[High School, Chinese, Classical Chinese Literature and Poetry, 声声慢·寻寻觅觅-李清照], 声声慢·寻寻觅觅-李清照]
[[High School, Chinese, Classical Chinese Literature and Poetry, 劝学-荀子], 劝学-荀子]
[[High School, Chinese, Classical Chinese Literature and Poetry, 师说-韩愈], 师说-韩愈]</code></pre>]]></content>
      <categories>
        <category>High School</category>
        <category>Chinese</category>
        <category>Classical Chinese Literature and Poetry</category>
      </categories>
      <tags>
        <tag>School Notes</tag>
        <tag>High School</tag>
        <tag>Chinese</tag>
      </tags>
  </entry>
  <entry>
    <title>高中文言文：必修上 第六单元</title>
    <url>/2022/03/12/chinese/High%20School/Classical%20Chinese%20Literature%20and%20Poetry/%E5%BF%85%E4%BF%AE/%E5%BF%85%E4%BF%AE%E4%B8%8A%E5%86%8C%20%E7%AC%AC%E5%85%AD%E5%8D%95%E5%85%83/</url>
    <content><![CDATA[<h2 id="单元内容">单元内容</h2>
<h3 id="课文目录">课文目录</h3>
<pre class="template:contents"><code>[[High School, Chinese, Classical Chinese Literature and Poetry, 劝学-荀子], 劝学-荀子]
[[High School, Chinese, Classical Chinese Literature and Poetry, 师说-韩愈], 师说-韩愈]</code></pre>
<h3 id="单元目标">单元目标</h3>
<ol type="1">
<li><p>学习富有思辨色彩的古今中外文本，通过对“学习之道”的梳理、探究和反思，把握学习的价值、意义、原则和方法，形成正确的学习观，提高学习能力。</p></li>
<li><p>阅读课文，注意把握思辨类文本中作者的观点和态度，理解作者思考问题的角度，学习有针对性地表达观点的方法。</p></li>
<li><p>研读课文，把握说理的逻辑思路，感受思辨中蕴含的逻辑思维，感受思辨的力量，提高理性思维水平。</p></li>
<li><p>在深入阅读文本、学习文本论述方法的基础上，学会选择合适的角度、以恰当的方式、有针对性地阐述自己的观点。</p></li>
</ol>
<h2 id="编写意图">编写意图</h2>
<h3 id="编写意图-1">编写意图</h3>
<p>​
围绕课程标准“思辨类阅读与表达”学习任务群，必修教材共设计了三个单元，本单元是其中第一个，围绕“学习之道”选择了六篇课文，前四篇以议论为主，思辨性较强；后两篇兼有议论和记叙，其中也有一些能引发学生深入思考的思辨性内容。</p>
<p>​
关于“思辨类阅读与表达”学习任务群的学习目标与内容，课程标准是这样阐述的：</p>
<p>（1）阅读古今中外论说名篇，把握作者的观点、态度和语言特点，理解作者阐述观点的方法和逻辑。阅读近期重要的时事评论，学习作者评说国内外大事或社会热点问题的立场、观点、方法。在阅读各类文本时，分析质疑，多元解读，培养思辨能力。</p>
<p>（2）学习表达和阐发自己的观点，力求立论正确，语言准确，论据恰当，讲究逻辑。学习多角度思考问题。学习反驳，能够做到有理有据，以理服人。</p>
<p>（3）围绕感兴趣的话题开展讨论和辩论，能理性、有条理地表达自己的观点，平等商讨，有针对性、有风度、有礼貌地进行辩驳。</p>
<p>​
根据这样的总体阐述，作为全套高中教材的第一个思辨类单元，我们将单元目标确定为：让学生对“思辨类阅读与表达”有一个基本的认识，能够理解论述类文章的现实针对性，在阅读时能够把握作者的主要观点和论述思路，感受文章的逻辑思辨力量，并能够在表达交流时有理有据地进行论述，增强思维的逻辑性和深刻性。</p>
<p>​ 围绕这样的教学目标，教材一共选编了六篇课文，分为四组。</p>
<p>​
《苟子》中的《劝学》和韩愈的《师说》，都是我国古代探讨学习问题的名篇。《劝学》开篇即提出自己的观点——“学不可以已”，然后分别阐述了学习的意义、应持有的态度和可采取的方法。《师说》针对当时士大夫阶层“耻学于师”的风气，论述从师学习的必要性。学习这两篇文章，要引导学生辩证地思考作者的观点，真正领会学习的重要性，特别是能够结合当今倡导的终身学习、深入学习等观念，理解占人有关学习的观点在当下的现实意义。</p>
<p>​
课文中从占至今，从探讨学习的态度、方法和意义到提倡“师道”，是针对特定对象或现实问题有感而发，逻辑严密，具有很强的说服力和感染力。</p>
<h2 id="教学指导">教学指导</h2>
<p>​
教材“单元提示”中指出：“学习本单元，以‘学习之道’为核心，通过梳理、探究和反思，形成正确的学习观，改进学习方法，提高学习能力。”这是本单元的核心任务，即通过梳理、探究他人的“学习之道”，对照自己的经验和社会的要求，形成自己的“学习之道”。“学习之道”是本单元的人文主题，从某种程度上说，也是学习情境，有了这个情境，六篇课文及其他学习材料才得以聚合起来，才能有学习材料之间的比较、分析、综合与迁移。</p>
<p>​
“学习之道”这个主题是从选文内容的交集出发提出的。每篇选文写作背景不同、写作动机不同，但无一例外地都与人们的学习活动密切相关。一篇文章之中可以涉及“学习之道”的多个方面，多篇文章之中的“学习之道”既有互相印证的，也可能有互相冲突的。于是，学生在“学习之道”这个主题的驱使下，就可以深入到每篇文章中去“寻道”“悟道”。把那些能够互相印证、互相启发的学习之道提炼概括出来，此之谓“求同”。在“求同”的过程中，学生训练了自己的归纳概括能力，加深了对古今人物心目中通用的学习之道的理解，再用这些“道”，来指导自己的学习，学以致用。有些课文关于学习的观点是不尽相同的，也可以请学生找一找，看一看，不同在哪里，为什么会不同，今天更应该支持哪个观点，此之谓“求异”一这种思辨、讨论，同样也是学习情境。每篇课文的学习任务，单元总的学习任务，教师使用教材时自己设计的学习任务，都应该紧紧围绕“学习”这一人类社会行为，反复地寻道、明道，概括、比较，辨别、接纳，拓展、运用。做到这一点，也就在思想内容上抓住了单元主题，深化了单元主题。课程标准在“思辨性阅读与表达”学习任务群中的“教学提示”是这样表述的：</p>
<p>​
以专题性学习为主。选择日常生活和学习中、历史或当今社会中学生共同关心的话题，要求学生通过阅读与鉴赏、表达与交流、梳理与探究等语文学习活动，阅读古今中外典型的思辨性文本，学习并梳理论证方法，学习用口头与书面语言阐述和论证自己的观点，驳斥错误的观点。</p>
<p>​
教学过程要注重对学生思维过程和思维方法的引导，注意发展学生的辩证思维和批判性思维，注意学生思维的逻辑性。结合学生阅读和表达中遇到的实际问题，适时适度地引导学生学习必要的逻辑知识；相关知识的教学要简明、实用，能有效地帮助学生解决概念、判断、推理等方面遇到的问题；避免进行不必要的、机械的训练。</p>
<p>​
根据这样的表述，我们可以认为，教材为本单元设置了四个相对独立又互相联系的专题，共同服务于对“学习之道”问题的探讨，并引导学生在阅读过程中梳理论述的方法，学习论述的技巧，进而迁移运用于自己的口头与书面表达。所以，教材在“单元提示”中明确提出：“关注作者思考问题的角度，学习他们有针对性地表达观点的方法；学会发现问题，从合适的角度以恰当的方式阐述自己的看法。”何谓针对性？就是“有的放矢”，就是“文章合为时而著，歌诗合为事而作”。《劝学》有感于学习的重要性，是荀子教育思想的重要组成部分，在当时有很强的针对性；《师说》针对当时士大夫“耻相师”的现状，呼吁人们求师从师；也就是说，当我们发表意见的时候，心中总是有一个对象，或者是具体的人和事，或者是一种现象、风气。一篇议论文，有针对性就有意义，有启发，没有就是无病呻吟。现在学生写的很多作文，之所以空洞无物，就是他没找到这话是对谁说的，说的是谁的问题。</p>
<p>​
论述有针对性，必然还要有“概括性”。针对具体的现象、问题进行讨论，就不能简单地就事论事，而要透视现象，把问题说透。论述的概括性是指提炼观点是否有概括力，分析问题是否有穿透力。本单元的《劝学》《师说》都是针对当时的现象、问题、风气，但又都不囿于一时一事，而是站在历史文化的高度，分析问题的根源，指出问题的本质，抽丝剥茧，刨根问底，具有高度的理论概括性，于是就有了超越历史的思想意义和实践价值。</p>
<p>​
综合以上分析以及前边“编写意图”中有关学习目标的表述，我们可以形成以下较为清晰的教学要求：阅读有关学习的思辨类文本，把握和概括作者的观点和态度，辩证地探讨“学习之道”，形成自己的学习态度和主张；梳理文章的论证方法和技巧，理解作者阐述观点的思维逻辑，提高学生思维的严密性和辩证性。这样的要求也正是“思辨性阅读与表达”所要达成的关键能力。为了使学生具有以上所说的关键能力，根据课程标准倡导的情境、任务、活动理念，接下来就要思考需要设计怎样的任务、通过怎样的活动来培养这样的能力。</p>
<p>​
这里所说的任务应该是真实情境下的表现性任务，也就是说，它是建立在有意义的、现实生活的真实情境中，并且能够产生真实的有形产品，如图表、文章、视频等，或者是表演，如演讲、辩论、戏剧等。如果说，探讨“学习之道”是本单元的核心任务的话，那么，我们可以将具体任务设计为举办“学习之道”演讲会或“学习之道”讨论会，通过这样的具体任务来达成本单元教学目标。</p>
<p>​
根据以上分析，本单元的教学可以围绕探讨“学习之道”这个核心任务，结合“单元学习任务”，打通六篇课文，做整体设计，完成演讲会或报告会，实现本单元的学习目标。此方案是“逆向教学设计”，可将教材中的“单元学习任务”分解为若干具体的学习任务，以此为线索回归文本，再依据文本开发学习活动、学习资源、学习工具，形成学习任务的集群。</p>
<p>​
本单元教学也可参照教材课文编排的结构，把整个单元分为三个板块去完成。第一个板块一观点与依据，重点研读《劝学》和《师说》，引导学生联系作者的思想主张和写作背景，分析作者提出观点的依据，理解论述的针对性和论证的方法；《劝学》和《师说》作为文言文特有的语言现象，作为古代散文独特的说理风格。</p>]]></content>
      <categories>
        <category>High School</category>
        <category>Chinese</category>
        <category>Classical Chinese Literature and Poetry</category>
      </categories>
      <tags>
        <tag>School Notes</tag>
        <tag>High School</tag>
        <tag>Chinese</tag>
      </tags>
  </entry>
  <entry>
    <title>简谐运动</title>
    <url>/2022/03/12/physics/High%20School/S3%20Waves/%E7%AE%80%E8%B0%90%E8%BF%90%E5%8A%A8/</url>
    <content><![CDATA[Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
<h2 id="课程标准">课程标准</h2>
<h3 id="课程标准内容">课程标准内容</h3>
<h4 id="机械振动与机械波选择性必修">1.2
机械振动与机械波（选择性必修）</h4>
<blockquote>
<p>1.2.1 通过实验，认识简谐运动的特征。能用公式和图像描述简谐运动。</p>
</blockquote>
<p>​
简谐运动是最简单的机械振动，但对学生而言则是一种更复杂的机械运动形式。本条目要求学生：通过对弹簧振子运动过程的观察和受力分析，从力与运动的关系、能量两个角度认识简谐运动的特征，进一步深化对质点运动的认识，发展运动与相互作用观念、能量观念。通过分析回复力与位移的关系，认识简谐运动是一种在变力作用下的变加速运动。通过分析弹簧振子在不同位置的速度大小、速度方向、加速度大小、加速度方向，以及动能和弹性势能之间的转化，深化对位移、速度、加速度、机械能等重要的物理概念的认识，并能用图像描述运动的位移与时间的关系，能从图像中找出振动的周期和振幅。在教学过程中，可以让学生通过观察定性了解振动的相位及相位差的概念。</p>
<blockquote>
<p>1.2.2
通过实验，探究单摆的周期与摆长的定量关系。知道单摆周期与摆长、重力加速度的关系。会用单摆测量重力加速度的大小。</p>
</blockquote>
<p>​
本条目整合了实验版课程标准关于单摆的两个条目，要求学生：通过实验收集单摆的周期和摆长关系的数据，尝试用不同的曲线拟合实验曲线，得出周期与摆长的二次方根成正比的关系。有条件的话，可以练习用计算机处理实验数据，发展分析和处理实验数据的能力，进而发展科学探究能力。单摆也是一种理想模型，在研究单摆时，要让学生经历建构模型的过程，发展学生的建模能力。这里只要求学生知道单摆周期与摆长、重力加速度的定量关系，并能依据单摆周期公式用单摆测量重力加速度，完成实验，在实验过程中要注意减小误差。</p>
<blockquote>
<p>1.2.3 通过实验，认识受迫振动的特点。了解产生共振的条件及其应用。</p>
<p>例1 调查生产生活中受迫振动的应用实例。</p>
<p>例2 调查生产生活中利用和防止共振的实例。</p>
</blockquote>
<p>​
本条目要求学生：通过观察演示实验和各种实例，分析概括出受迫振动的特点，例如受迫振动的频率等于驱动力的频率，与振动物体的固有频率无关等。了解无阻尼情况下共振现象的产生条件是驱动力的频率等于系统的固有频率。通过查阅资料等方式，了解共振技术在现代生活生产中的应用。</p>
<h2 id="知识聚焦">知识聚焦</h2>
<h3 id="一简谐运动">一、简谐运动</h3>
<h4 id="机械振动">1. 机械振动</h4>
<p>​
我们把物体或物体的一部分在一个位置附近的往复运动称为<strong>机械振动</strong>（mechanical
vibration），简称<strong>振动</strong>。</p>
<p>​
如图，把一个有小孔的小球连接在弹簧的一端，弹簧的另一端固定，小球套在光滑的杆上，能够自由滑动。弹簧的质量与小球相比可以忽略。小球运动时空气阻力很小，也可以忽略。弹簧未形变时，小球所受合力为
0，处于<strong>平衡位置</strong>（equilibrium
position）。把小球拉向右方，然后放开，它就在平衡位置附近运动起来。我们把小球和弹簧组成的系统称为<strong>弹簧振子</strong>（spring
oscillator），有时也简称为<strong>振子</strong>。</p>
<figure>
<img src="https://raw.githubusercontent.com/PassionPenguin/picgo-database/main/image-20220316235051691.png" alt="image-20220316235051691">
<figcaption aria-hidden="true">image-20220316235051691</figcaption>
</figure>
<p>​
在坐标系中标出各时刻小球球心的位置，用曲线把各点连接起来，就是小球在平衡位置附近往复运动时的位移—时间图像，即
<span class="math inline"><em>x</em> − <em>t</em></span> 图像。<span class="math inline"><em>x</em> − <em>t</em></span> 图像即振动图像。</p>
<figure>
<img src="https://raw.githubusercontent.com/PassionPenguin/picgo-database/main/image-20220316235224887.png" alt="image-20220316235224887">
<figcaption aria-hidden="true">image-20220316235224887</figcaption>
</figure>
<p>​ 如果物体的位移与时间的关系遵从正弦函数的规律，即它的振动图像（<span class="math inline"><em>x</em> − <em>t</em></span>
图像）是一条正弦曲线，这样的振动是一种<strong>简谐运动</strong>（simple
harmonic motion）。==简谐运动是最基本的振动==。</p>
<h4 id="简谐振动的描述">2. 简谐振动的描述</h4>
<p>​ 我们已经知道，做简谐运动的物体的位移 <span class="math inline"><em>x</em></span> 与运动时间 <span class="math inline"><em>t</em></span> 之间满足正弦函数关系，因此，位移
<span class="math inline"><em>x</em></span> 的一般函数表达式可写为 <span class="math inline"><em>x</em> = <em>A</em>sin (<em>ω</em><em>t</em>+<em>ϕ</em>)</span>。</p>
<p>​
我们把振动物体离开平衡位置的最大距离，叫作振动的<strong>振幅</strong>（amplitude）。振幅是表示振动幅度大小的物理量，常用字母
<span class="math inline"><em>A</em></span>
表示。振幅的单位是米。==振动物体运动的范围是振幅的两倍。==</p>
<p>​
一个完整的振动过程称为一次<strong>全振动</strong>。做简谐运动的物体完成一次全振动所需要的时间，叫作振动的<strong>周期</strong>（period）。周期的倒数叫作振动的<strong>频率</strong>（frequency），数值等于单位时间内完成全振动的次数。用
<span class="math inline"><em>T</em></span> 表示周期，用 <span class="math inline"><em>f</em></span> 表示频率，则有 <span class="math inline"><em>f</em><em>T</em> = 1</span>。</p>
<p>​
在国际单位制中，周期的单位是秒。频率的单位是<strong>赫兹</strong>（hertz），简称赫，符号是
<span class="math inline"><em>H</em><em>z</em></span>。<span class="math inline">1<em>H</em><em>z</em>＝1<em>s</em><sup>−1</sup></span>。</p>
<p>​ 物理学中把 <span class="math inline">(<em>ω</em><em>t</em>＋<em>ϕ</em>)</span>
叫作<strong>相位</strong>（phase）。<span class="math inline"><em>ϕ</em></span> 是 <span class="math inline"><em>t</em> = 0</span>
时的相位，称作<strong>初相位</strong>，或<strong>初相</strong>。实际上，经常用到的是两个具有相同频率的简谐运动的<strong>相位差</strong>（phase
difference），即 <span class="math inline"><em>Δ</em><em>ϕ</em> = (<em>ω</em><em>t</em>+<em>ϕ</em><sub>1</sub>) − (<em>ω</em><em>t</em>+<em>ϕ</em><sub>2</sub>) = <em>ϕ</em><sub>1</sub> − <em>ϕ</em><sub>2</sub></span>。</p>
<h4 id="简谐运动的回复力与能量">3. 简谐运动的回复力与能量</h4>
<p>​
在某个力的作用下，物体在平衡位置附近做往复运动。我们把这样的力称为<strong>回复力</strong>（restoring
force）。</p>
<p>​
如果==物体在运动方向上所受的力与它偏离平衡位置位移的大小成正比，并且总是指向平衡位置==，质点的运动就是<strong>简谐运动</strong>（简谐振动）。</p>
<p>​
在弹簧振子运动的任意位置，系统的动能与势能之和都是一定的，遵守机械能守恒定律。</p>
<p>​ 当小球运动到最大位移时，动能为
0，弹性势能最大，系统的机械能等于最大弹性势能。对于弹簧劲度系数和小球质量都一定的系统，振幅越大，机械能越大。</p>
<h3 id="二单摆">二、单摆</h3>
<h4 id="单摆">1. 单摆</h4>
<p>​
如果细线的长度不可改变，细线的质量与小球相比可以忽略，球的直径与线的长度相比也可以忽略，这样的装置就叫作<strong>单摆</strong>（simple
pendulum）。单摆是实际摆的理想化模型。==单摆在摆角很小的情况下做简谐运动。==</p>
<blockquote>
<h4 id="单摆的回复力">单摆的回复力</h4>
<p>​ 如下图，单摆摆长为 <span class="math inline"><em>l</em></span>、摆球质量为 <span class="math inline"><em>m</em></span>。将摆球拉离平衡位置 <span class="math inline"><em>O</em></span>
后释放，摆球沿圆弧做往复运动。当摆球沿圆弧运动到某一位置 <span class="math inline"><em>P</em></span> 时，摆线与竖直方向的夹角为 <span class="math inline"><em>θ</em></span>。此时摆球受到重力 <span class="math inline"><em>G</em></span> 和摆线拉力 <span class="math inline"><em>F</em><sub><em>T</em></sub></span> 的作用。重力
<span class="math inline"><em>G</em></span> 沿圆弧切线方向的分力 <span class="math inline"><em>F</em>＝<em>m</em><em>g</em>sin <em>θ</em></span>，正是这个力充当回复力，迫使摆球回到平衡位置
<span class="math inline"><em>O</em></span>。</p>
<p>​ 当摆角 <span class="math inline"><em>θ</em></span>
很小时，摆球运动的圆弧可以看成直线，可认为 <span class="math inline"><em>F</em></span> 指向平衡位置 <span class="math inline"><em>O</em></span>，与位移 <span class="math inline"><em>x</em></span> 反向。圆弧 <span class="math inline">$\overset{\LARGE{\frown}}{OP}$</span>
的长度可认为与摆球的位移 <span class="math inline"><em>x</em></span>
大小相等，即： <span class="math display">$$
$\sin{\theta}\approx\theta=\dfrac{\overset{\LARGE{\frown}}{OP}}{l}\approx\dfrac{x}{l}$
$$</span> ​ （如果 <span class="math inline"><em>θ</em></span>
很小，弧度表示的 <span class="math inline"><em>θ</em></span> 与它的正弦
<span class="math inline">sin <em>θ</em></span> 近似相等）</p>
<p>​ 因此单摆振动的回复力 <span class="math inline"><em>F</em></span>
可以表示为： <span class="math display">$$
$F=-\dfrac{mg}{l}x$
$$</span> <img src="https://raw.githubusercontent.com/PassionPenguin/picgo-database/main/image-20220317000433887.png" alt="image-20220317000433887"></p>
</blockquote>
<h4 id="实验探究单摆周期与摆长之间的关系-exp-探究单摆周期与摆长之间的关系">2.
实验：探究单摆周期与摆长之间的关系 |
#exp-探究单摆周期与摆长之间的关系</h4>
<p>​
实验表明：单摆做简谐运动的周期与摆长有关，摆长越长，周期越大；单摆的周期与摆球质量和振幅无关。荷兰物理学家惠更斯进行了详尽的研究，发现单摆做简谐运动的周期
<span class="math inline"><em>T</em></span> 与摆长 <span class="math inline"><em>l</em></span> 的二次方根成正比，与重力加速度
<span class="math inline"><em>g</em></span>
的二次方根成反比，而与振幅、摆球质量无关。惠更斯确定了计算单摆周期的公式：
<span class="math display">$$
$T=2\pi\sqrt{\dfrac{l}{g}}$
$$</span></p>
<p>​
根据这一原理，我们可以推导得到重力加速度与单摆周期、摆长的关系：<span class="math inline">$g=\dfrac{4\pi^2l}{T^2}$</span>。</p>
<h3 id="三受迫振动与共振">三、受迫振动与共振</h3>
<h4 id="阻尼振动与受迫振动">1. 阻尼振动与受迫振动</h4>
<p>​
我们把在没有外力干预的情况下做简谐运动，周期或频率与振幅无关，仅由系统自身的性质决定的振动称为固有振动，其振动频率称为<strong>固有频率</strong>（natural
frequency）。</p>
<p>​ 振幅随时间逐渐减小的振动称为<strong>阻尼振动</strong>。</p>
<p>​
振动系统能量衰减的方式通常有两种。一种是由于振动系统受到摩擦阻力的作用，使振动系统的机械能逐渐转化为内能。例如单摆运动时受到空气的阻力。另一种是由于振动系统引起邻近介质中各质点的振动，使能量向四周辐射出去，从而自身机械能减少。例如音叉发声时，一部分机械能随声波辐射到周围空间，导致音叉振幅减小。</p>
<p>​
外力对系统做功，补偿系统的能量损耗，使系统的振动维持下去。这种周期性的外力叫作<strong>驱动力</strong>，系统在驱动力作用下的振动叫作<strong>受迫振动</strong>（forced
vibration）。物体做受迫振动达到稳定后，物体振动的频率等于驱动力的频率，与物体的固有频率无关。</p>
<h4 id="共振现象">2. 共振现象</h4>
<p>​
当驱动力的频率等于固有频率时，物体做受迫振动的振幅达到最大值，这种现象称为<strong>共振</strong>（resonance）。</p>
<p><img src="https://raw.githubusercontent.com/PassionPenguin/picgo-database/main/image-20220317001959340.png" alt="受迫振动振幅与驱动力频率的关系" style="zoom:50%;"></p>]]></content>
      <categories>
        <category>High School</category>
        <category>Physics</category>
        <category>Waves</category>
      </categories>
      <tags>
        <tag>School Notes</tag>
        <tag>High School</tag>
        <tag>Physics</tag>
      </tags>
  </entry>
  <entry>
    <title>动量与动量守恒定律</title>
    <url>/2022/03/12/physics/High%20School/S1%20Mechanics/%E5%8A%A8%E9%87%8F%E4%B8%8E%E5%8A%A8%E9%87%8F%E5%AE%88%E6%81%92%E5%AE%9A%E5%BE%8B/</url>
    <content><![CDATA[Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
<h2 id="课程标准">课程标准</h2>
<h3 id="课程标准内容">课程标准内容</h3>
<h4 id="动量与动量守恒定律选择性必修">1.1
动量与动量守恒定律（选择性必修）</h4>
<blockquote>
<p>1.1.1
理解冲量和动量。通过理论推导和实验，理解动量定理和动量守恒定律，能用其解释生产生活中的有关现象。知道动量守恒定律的普适性。</p>
<p>例 1 知道火箭的发射利用了反冲现象。</p>
<p>例 2 查阅资料，了解中子的发现过程, 讨论动量守恒定律在其中的作用。</p>
</blockquote>
<p>​
动量定理和动量守恒定律对于发展学生的运动与相互作用观念以及科学思维至关重要。本条目强调理论推导和实验的统一，要求学生不但能用所学的牛顿运动定律和加速度的关系式推导得出动量定理和动量守恒定律，还要通过实验进行探究或验证，对物体相互作用过程中系统的动量守恒加深理解。在此过程中，学生通过学习物理学研究问题的基本思路和方法，发展科学推理能力和科学论证能力，促进对物理知识的进一步关联整合，同时深化对“系统”的认识。课程标准要求达到“理解”层次，理解动量定理和动量守恒定律的前提是理解冲量和动量的概念。教师要创设情境引导学生经历冲量和动量概念的形成过程，理解冲量和动量的矢量性，让学生在不同的情境中应用动量定理和动量守恒定律解释现象、分析和解决问题。动量守恒定律虽然可以通过牛顿运动定律和运动学公式推导得出，但是物理学的研究表明，动量守恒定律比牛顿运动定律的适用性更广，对研究宏观物体和微观粒子都适用。因此要求学生知道动量守恒定律的普适性，在教学过程中可以参照课程标准中的例
2
，要求学生收集资料，了解中子的发现过程，讨论动量守恒定律在其中的作用。</p>
<blockquote>
<p>1.1.2
通过实验，了解弹性碰撞和非弹性碰撞的特点。定量分析一维碰撞问题并能解释生产生活中的弹性碰撞和非弹性碰撞现象。</p>
</blockquote>
<p>​
本条目要求学生：从能量的角度研究碰撞现象，进一步发展能量观念和对系统的认识。通过研究光滑水平面上或气垫导轨上不同物体的碰撞，从能量的角度分析碰撞前后系统机械能的变化，建立弹性碰撞和非弹性碰撞的概念，能根据机械能的损失情况来区分是不是弹性碰撞。能应用动量守恒定律分析一维碰撞问题和反冲动，解释生产生活中的弹性碰撞和非弹性碰撞现象，例如合球碰撞前后的运动情品等。在教学中，可以让学生通过制作“水火箭”等课外活动，深化对反冲运动的认识，发展动手实践能力。</p>
<blockquote>
<p>1.1.3 体会用守恒定律分析物理问题的方法，体会自然界的和谐与统一。</p>
<p>例 3 查阅资料，了解太空物体的碰撞和微观粒子的碰撞等相关信息。</p>
</blockquote>
<p>​
本条目要求学生：将动量守恒与必修课程中学过的机械能守恒和能量守恒定律联系起来，通过运用这些规律分析和解决实际问题，进一步发展“能量”“系统”守恒”等观念，初步形成物理学理论所描述的自然界具有内在和谐与统一的整体图景。</p>
<h4 id="教学活动要求">教学活动要求</h4>
<ol type="1">
<li>制作“水火箭”。</li>
<li>观察台球碰撞前后的运动情况，尝试用动量知识定性解释。</li>
</ol>
<h2 id="知识聚焦">知识聚焦</h2>
<h3 id="一动量与动量定理">一、动量与动量定理</h3>
<h4 id="动量">1. 动量</h4>
<p>​ 物理学中把质量和速度的乘积 <span class="math inline"><em>m</em><em>v</em></span>
定义为物体的<strong>动量</strong>，用字母 <span class="math inline"><strong>p</strong></span>
表示，单位是千克米每秒，符号 <span class="math inline"><em>k</em><em>g</em> ⋅ <em>m</em>/<em>s</em></span>。</p>
<h4 id="动量定理">2. 动量定理</h4>
<p>​ 物理学中把力与力的作用时间的乘积 <span class="math inline"><strong>F</strong><em>Δ</em><em>t</em></span>
叫作力的<strong>冲量</strong>，用字母 <span class="math inline"><strong>I</strong></span> 表示，单位是牛秒 ，符号
<span class="math inline"><em>N</em> ⋅ <em>s</em></span>。推导冲量，可以得到如下结果：</p>
<div class="sourceCode" id="cb1"><pre class="sourceCode latex"><code class="sourceCode latex"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a><span class="fu">\notag\begin</span>&#123;align&#125;</span>
<span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a>  <span class="fu">\mathbf</span>&#123;I&#125; &amp;= <span class="fu">\int</span> <span class="fu">\!\mathbf</span>&#123;F&#125;<span class="fu">\,\mathrm</span>&#123;d&#125;t<span class="fu">\\</span></span>
<span id="cb1-3"><a href="#cb1-3" aria-hidden="true" tabindex="-1"></a>  &amp;= <span class="fu">\int</span> <span class="fu">\!\frac</span>&#123;<span class="fu">\mathrm</span>&#123;d&#125;<span class="fu">\mathbf</span>&#123;p&#125;&#125;&#123;<span class="fu">\mathrm</span>&#123;d&#125;t&#125;<span class="fu">\,\mathrm</span>&#123;d&#125;t<span class="fu">\\</span></span>
<span id="cb1-4"><a href="#cb1-4" aria-hidden="true" tabindex="-1"></a>  &amp;= <span class="fu">\int</span> <span class="fu">\!\mathrm</span>&#123;d&#125;<span class="fu">\mathbf</span>&#123;p&#125;<span class="fu">\\</span></span>
<span id="cb1-5"><a href="#cb1-5" aria-hidden="true" tabindex="-1"></a>  &amp;= <span class="fu">\Delta\mathbf</span>&#123;p&#125; = <span class="fu">\mathbf</span>&#123;p&#125;' - <span class="fu">\mathbf</span>&#123;p&#125;<span class="fu">\\</span></span>
<span id="cb1-6"><a href="#cb1-6" aria-hidden="true" tabindex="-1"></a>  <span class="fu">\therefore\mathbf</span>&#123;F&#125;<span class="fu">\Delta</span> t &amp;= m<span class="fu">\Delta\mathbf</span>&#123;v&#125;</span>
<span id="cb1-7"><a href="#cb1-7" aria-hidden="true" tabindex="-1"></a><span class="kw">\end</span>&#123;<span class="ex">align</span>&#125;</span></code></pre></div>
<p>​
上述推导表明，==物体在一个过程中所受力的冲量等于它在这个过程始末的动量变化量==的关系叫作<strong>动量定理</strong>。</p>
<h4 id="动量与动能">3. 动量与动能</h4>
<p>​ 力可以通过动量来表示，即 <span class="math inline">$F=\dfrac{\Delta
p}{\Delta t}$</span>，又可以用动能来表示，即 <span class="math inline">$F=\dfrac{\Delta E_k}{x}$</span>。</p>
<p>​ 动量决定了物体在力 <span class="math inline"><em>F</em></span>
的阻碍下能够运动多长时间，动能则决定了物体在力 <span class="math inline"><em>F</em></span>
的阻碍下能够运动多长距离，也就是，==动量定理反映了力对时间的累积效应，动能定理反映了力对空间的累积效应==。</p>
<h3 id="二动量守恒定律">二、动量守恒定律</h3>
<h4 id="动量守恒定律">1. 动量守恒定律</h4>
<p>​
我们把由两个（或多个）相互作用的物体构成的整体叫作一个力学系统，简称<strong>系统</strong>，系统内物体间作用力称为<strong>内力</strong>，系统以外物体施加给系统内物体的力叫作<strong>外力</strong>。</p>
<p>​
<strong>动量守恒定律</strong>的内容是，==如果一个系统不受外力，或者所受外力的矢量和为
<span class="math inline">$\vec{0}$</span>，那么这个系统的总动量保持不变==。</p>
<p>​ 动量守恒定律的成立条件为：</p>
<ol type="1">
<li>系统不受外力作用（理想化情况）；</li>
<li>系统受到外力作用，但外力的矢量和为 <span class="math inline">$\vec{0}$</span>；</li>
<li>系统所受的外力远小于系统内各物体间的内力，总动量近似守恒（如爆炸）；</li>
<li>系统所受合外力不为零，但是在某一方向上为零，则在该方向上动量守恒；</li>
</ol>
<blockquote>
<h3 id="动量守恒中的临界问题">动量守恒中的临界问题</h3>
<ol type="1">
<li>物体恰好到达另一带斜面或弧形槽的物体的最高点：两物体的水平速度相等，竖直速度为零；</li>
<li>两物体恰好不相撞：相接触时速度相等；</li>
<li>物体刚好不滑出小车：物体滑倒小车一端时与小车速度相等；</li>
<li>弹簧具有最大弹性势能：弹簧压缩到最短或拉伸到最长，此时弹簧连着的两个物体不能再靠近或远离，具有相同的速度；</li>
</ol>
</blockquote>
<h4 id="实验验证动量守恒定律-exp-验证动量守恒定律">2.
实验：验证动量守恒定律 | #exp-验证动量守恒定律</h4>
<h5 id="方案一平抛运动验证动量守恒定律">方案一：<strong>平抛运动</strong>验证动量守恒定律</h5>
<h5 id="实验目的">实验目的</h5>
<p>​ 利用平抛运动验证动量守恒定律。</p>
<h5 id="实验器材">实验器材</h5>
<p>​
斜槽；两个质量不同的小球；铅垂线；白纸；复写纸；天平；刻度尺；圆规；三角板。</p>
<!-- ##### 实验原理与设计 -->
<h5 id="实验步骤">实验步骤</h5>
<ol type="1">
<li>用天平测出两小球的质量，选用质量大的小球作为入射小球；</li>
<li>调整固定斜槽使斜槽末端水平，在斜槽末端悬挂铅垂线，在斜槽下放一白纸上垫复写纸；</li>
<li>记录铅垂线所指位置 <span class="math inline"><em>O</em></span>；</li>
<li>不放被撞小球，让入射小球从斜槽上某固定高度自由落下 10
次，用圆规画尽可能小的圆含括所有的小球落点，圆心 <span class="math inline"><em>P</em></span> 为小球落点平均位置；</li>
<li>把被撞小球放在斜槽末端，让入射小球从斜槽同一高度自由滚下，使它们发生碰撞，重复
10 次，按照 (4) 的方法标注碰后入射小球和被撞小球的平均落点 <span class="math inline"><em>M</em></span> 与 <span class="math inline"><em>N</em></span>；</li>
<li>测量 <span class="math inline"><em>O</em><em>M</em></span>、<span class="math inline"><em>O</em><em>N</em></span>、<span class="math inline"><em>O</em><em>P</em></span> 的长度；</li>
</ol>
<h5 id="数据处理">数据处理</h5>
<p>​ 验证 <span class="math inline">$m_1\cdot\overline{OP}=m_1\cdot\overline{OM} +
m_2\cdot\overline{ON}$</span>是否在误差允许范围内成立；</p>
<h5 id="注意事项">注意事项</h5>
<ol type="1">
<li>斜槽末端切线必须水平；</li>
<li>入射小球必须每次都在斜槽同一高度静止释放；</li>
<li>选取质量较大的小球作为入射小球；</li>
<li>实验过程中记录用白纸、斜槽的相对位置要始终保持不变；</li>
</ol>
<!-- ##### 误差分析 -->
<hr>
<h5 id="方案二小车在平滑木板上运动验证动量守恒定律">方案二：<strong>小车在平滑木板上运动</strong>验证动量守恒定律</h5>
<h5 id="实验目的-1">实验目的</h5>
<p>​ 利用小车在平滑木板上的碰撞验证动量守恒定律。</p>
<h5 id="实验器材-1">实验器材</h5>
<p>​ 光滑长木板；打点计时器；纸带；两个小车（起撞小车 A、被撞小车
B）；天平；撞针；橡皮泥。</p>
<h5 id="实验原理与设计">实验原理与设计</h5>
<ol type="1">
<li>利用打点计时器测量纸带碰撞前后的运动速度 <span class="math inline">$v = \dfrac{\Delta x}{\Delta
t}$</span>，通过相对运动速度关系间接获得小车速度；</li>
<li>利用完全非弹性碰撞原理，在碰撞后可以少测一次速度；</li>
</ol>
<h5 id="实验步骤-1">实验步骤</h5>
<ol type="1">
<li>用天平测出两小车的质量；</li>
<li>将打点计时器固定在光滑长木板的一侧，把纸带穿过打点计时器的限位孔，连在小车的后面，在两小车的碰撞端分别装上撞针和橡皮泥；</li>
<li>接通电源，让小车 A 运动，小车 B
静止，两车碰撞后撞针插入橡皮泥中使两小车连成一体运动；</li>
<li>利用纸带上计数点间距离 <span class="math inline"><em>Δ</em><em>x</em></span> 和时间 <span class="math inline"><em>Δ</em><em>t</em></span>，结合公式测量速度；</li>
<li>改变碰撞条件，重复实验。</li>
</ol>
<h5 id="数据处理-1">数据处理</h5>
<p>​ 分别计算碰撞前小车 A 的速度 <span class="math inline"><em>v</em><sub>0</sub></span> 与碰撞后小车的运动速度
<span class="math inline"><em>v</em><sub><em>t</em></sub></span>，验证
<span class="math inline"><em>m</em><sub><em>A</em></sub><em>v</em><sub>0</sub> = (<em>m</em><sub><em>A</em></sub>+<em>m</em><sub><em>B</em></sub>)<em>v</em><sub><em>t</em></sub></span>
是否在误差允许范围内成立。</p>
<!-- ##### 注意事项 -->
<!-- ##### 误差分析 -->
<hr>
<h5 id="方案三单摆碰撞验证动量守恒定律">方案三：<strong>单摆碰撞</strong>验证动量守恒定律</h5>
<h5 id="实验目的-2">实验目的</h5>
<p>​ 利用等长悬线悬挂大小球的碰撞验证动量守恒定律。</p>
<h5 id="实验器材-2">实验器材</h5>
<p>​ 带细线的摆球（起撞摆球 A、被撞摆球
B）；铁架台；天平；量角器；坐标纸；胶布。</p>
<h5 id="实验原理与设计-1">实验原理与设计</h5>
<ol type="1">
<li>利用单摆摆动计算摆球碰撞前后速度；</li>
</ol>
<h5 id="实验步骤-2">实验步骤</h5>
<ol type="1">
<li>用天平测出两摆球的质量；</li>
<li>把两个等大摆球用等长悬线悬挂，使悬线竖直时两小球相互接触但无弹力；</li>
<li>让摆球 B 静止，拉起摆球 A
到一定角度，放开使之碰撞，记录碰撞后摆球摆起的角度；</li>
<li>改变起撞角度等条件，重复步骤 (3)；</li>
</ol>
<h5 id="数据处理-2">数据处理</h5>
<p>​ 根据摆球碰撞前后的摆起角度，计算摆球碰撞前后的速度，验证 <span class="math inline"><em>m</em><sub><em>A</em></sub><em>v</em><sub>0</sub> = (<em>m</em><sub><em>A</em></sub>+<em>m</em><sub><em>B</em></sub>)<em>v</em><sub><em>t</em></sub></span>
是否在误差允许范围内成立。</p>
<h5 id="数据处理-3">数据处理</h5>
<p>​ 分别计算碰撞前小车 A 的速度 <span class="math inline"><em>v</em><sub>0</sub></span> 与碰撞后小车的运动速度
<span class="math inline"><em>v</em><sub><em>t</em></sub></span>，验证
<span class="math inline"><em>m</em><sub><em>A</em></sub><em>v</em><sub>0</sub> = (<em>m</em><sub><em>A</em></sub>+<em>m</em><sub><em>B</em></sub>)<em>v</em><sub><em>t</em></sub></span>
是否在误差允许范围内成立。</p>
<!-- ##### 注意事项 -->
<!-- ##### 误差分析 -->
<hr>
<h5 id="方案四气垫导轨滑块碰撞验证动量守恒定律">方案四：<strong>气垫导轨滑块碰撞</strong>验证动量守恒定律</h5>
<h5 id="实验目的-3">实验目的</h5>
<p>​ 利用气垫导轨上滑块的碰撞验证动量守恒定律。</p>
<h5 id="实验器材-3">实验器材</h5>
<p>​ 两个质量不同的滑块（起撞滑块 A、被撞滑块
B）；弹性碰撞架；撞针；橡皮泥；气垫导轨；光电计时器；天平。</p>
<h5 id="实验原理与设计-2">实验原理与设计</h5>
<ol type="1">
<li>气垫导轨阻力小，速度损耗小误差小；</li>
<li>光电门计时准确，可以较准确测量速度；</li>
<li>利用完全非弹性碰撞原理，在碰撞后可以少测一次速度；</li>
</ol>
<h5 id="实验步骤-3">实验步骤</h5>
<ol type="1">
<li>用天平测出滑块质量；</li>
<li>安装好气垫导轨；</li>
<li>接通电源，用配套光电计时装置测出两滑块碰撞前后的速度；</li>
<li>改变滑块 A 的初速度或改变滑块的质量，重复步骤 (3)；</li>
</ol>
<h5 id="数据处理-4">数据处理</h5>
<p>​ 利用光电计时原理，分别计算出滑块碰撞前后的速度，验证 <span class="math inline"><em>m</em><sub><em>A</em></sub><em>v</em><sub>0</sub> = (<em>m</em><sub><em>A</em></sub>+<em>m</em><sub><em>B</em></sub>)<em>v</em><sub><em>t</em></sub></span>
是否在误差允许范围内成立。</p>
<!-- ##### 注意事项 -->
<!-- ##### 误差分析 -->
<h4 id="弹性碰撞与非弹性碰撞反冲现象">3.
弹性碰撞与非弹性碰撞、反冲现象</h4>
<p>​
如果系统在碰撞前后动能不变，这类碰撞叫作<strong>弹性碰撞</strong>。如果系统在碰撞后动能减少，这类碰撞叫作<strong>非弹性碰撞</strong>。如果在碰撞后，两个物体黏连在一起没有任何恢复运动，则系统损失的动能最多，称为<strong>完全非弹性碰撞</strong>。</p>
<p>​
根据动量守恒定律，类似发射炮弹时，系统内力很大，可以忽略内力，发射前动量为
<span class="math inline">$\vec{0}$</span>，发射后炮身的后退现象称为<strong>反冲现象</strong>。反冲时有其他形式的能量转化，所以总动能增加。又因为作用时间相同，推导可得
<span class="math inline"><em>m</em><sub>1</sub><em>s</em><sub>1</sub> = <em>m</em><sub>2</sub><em>s</em><sub>2</sub>, <em>s</em><sub><em>相</em><em>对</em></sub> = <em>s</em><sub>1</sub> + <em>s</em><sub>2</sub></span>。</p>
<h3 id="三动量模型">三、动量模型</h3>
<h4 id="人船模型">1. 人船模型</h4>
<p>​
人船模型的特征是==两个原本静止的物体，如果动量守恒，在相互作用的过程中，任意时刻两物体的速度大小之比为质量的反比==。</p>
<ol type="1">
<li>系统由两个物体组成，相互作用前静止（A 动 B 动，A 停 B 停）；</li>
<li>系统内发生相对运动的过程中至少有一个方向动量守恒（==一定要注意是相对同一参考系而言==）；</li>
</ol>
<p><img src="https://raw.githubusercontent.com/PassionPenguin/picgo-database/main/97c77a8d09cc906d70da1fb9cb14442.jpg" alt="97c77a8d09cc906d70da1fb9cb14442" style="zoom: 33%;"></p>
<h4 id="子弹-木块模型">2. 子弹-木块模型</h4>
<p>​
不管子弹是否击穿木块，子弹和木块组成的系统在相互作用过程中，子弹运动方向上动量守恒：</p>
<ol type="1">
<li><span class="math inline"><em>m</em><em>v</em><sub>0</sub> = (<em>m</em>+<em>M</em>)<em>v</em></span>（未击穿）；</li>
<li><span class="math inline"><em>m</em><em>v</em><sub>0</sub> = <em>m</em><em>v</em><sub>1</sub> + <em>M</em><em>v</em><sub>2</sub></span>（击穿）；</li>
<li>==能量上，如果系统内外没有滑动摩擦力，则用机械能守恒定律；如果内部受滑动摩擦力，则摩擦生热关系
<span class="math inline"><em>Q</em> = <em>f</em> ⋅ <em>x</em><sub><em>相</em><em>对</em></sub> = <em>E</em><sub>0</sub> − <em>E</em><sub><em>t</em></sub></span>==。</li>
</ol>]]></content>
      <categories>
        <category>High School</category>
        <category>Physics</category>
        <category>Mechanics</category>
      </categories>
      <tags>
        <tag>School Notes</tag>
        <tag>High School</tag>
        <tag>Physics</tag>
      </tags>
  </entry>
  <entry>
    <title>Android Kotlin 在 WebView 中获取系统 DarkMode 状态</title>
    <url>/2022/03/11/computer%20science/android/getting-system-darkmode-status-from-webview/</url>
    <content><![CDATA[<p>​ 不清楚现在的情况如何，仅记录一下 2020 年初 Android 刚出 DarkMode
时从 WebView 中判断系统 DarkMode 状态方法。</p>
<p>​ 当时的问题是，所有的应用 WebView 的 DarkMode 都与系统的 DarkMode
状态隔离，导致应用中嵌入的网页的主题与应用的主题不一致，想了一想，选择加了一个
<code>JavaScriptInterface</code>
传递数据。虽然说现在看代码似乎存在一定问题，不过算是接触 Kotlin、Android
开发刚刚 2 星期的初三萌新所写，哈哈哈。</p>
<div class="sourceCode" id="cb1"><pre class="sourceCode kotlin"><code class="sourceCode kotlin"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a><span class="kw">val</span> <span class="va">isDarkMode</span> <span class="op">=</span> <span class="kw">this</span><span class="op">.</span>resources<span class="op">.</span>configuration<span class="op">.</span>uiMode and Configuration<span class="op">.</span>UI_MODE_NIGHT_MASK<span class="op">===</span>Configuration<span class="op">.</span>UI_MODE_NIGHT_YES</span>
<span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-3"><a href="#cb1-3" aria-hidden="true" tabindex="-1"></a><span class="kw">val</span> <span class="va">webView</span> <span class="op">=</span> findViewById<span class="op">&lt;</span>WebView<span class="op">&gt;(</span>R<span class="op">.</span>id<span class="op">.</span>sswebview<span class="op">)</span></span>
<span id="cb1-4"><a href="#cb1-4" aria-hidden="true" tabindex="-1"></a><span class="kw">class</span> WebAppInterface<span class="op">(</span><span class="kw">private</span> <span class="kw">val</span> <span class="va">mContext</span><span class="op">:</span> <span class="dt">Context</span><span class="op">)</span> <span class="op">&#123;</span></span>
<span id="cb1-5"><a href="#cb1-5" aria-hidden="true" tabindex="-1"></a>      <span class="at">@JavascriptInterface</span></span>
<span id="cb1-6"><a href="#cb1-6" aria-hidden="true" tabindex="-1"></a>      <span class="kw">fun</span> <span class="fu">isDarkTheme</span><span class="op">():</span> <span class="dt">Boolean</span> <span class="op">&#123;</span></span>
<span id="cb1-7"><a href="#cb1-7" aria-hidden="true" tabindex="-1"></a>           <span class="kw">return</span> isDarkMode</span>
<span id="cb1-8"><a href="#cb1-8" aria-hidden="true" tabindex="-1"></a>      <span class="op">&#125;</span></span>
<span id="cb1-9"><a href="#cb1-9" aria-hidden="true" tabindex="-1"></a><span class="op">&#125;</span></span>
<span id="cb1-10"><a href="#cb1-10" aria-hidden="true" tabindex="-1"></a>webView<span class="op">.</span>getSettings<span class="op">().</span>setJavaScriptEnabled<span class="op">(</span><span class="kw">true</span><span class="op">);</span></span>
<span id="cb1-11"><a href="#cb1-11" aria-hidden="true" tabindex="-1"></a>webView<span class="op">.</span>addJavascriptInterface<span class="op">(</span>WebAppInterface<span class="op">(</span><span class="kw">this</span><span class="op">),</span> <span class="st">"Android"</span><span class="op">)</span></span></code></pre></div>]]></content>
      <categories>
        <category>Computer Science</category>
        <category>Android</category>
      </categories>
      <tags>
        <tag>Computer Science</tag>
        <tag>Android</tag>
        <tag>Kotlin</tag>
      </tags>
  </entry>
  <entry>
    <title>Pandoc 将 Markdown 中的所有 latex 代码直接以 SVG 形式嵌入在导出的 HTML 中</title>
    <url>/2022/03/09/computer%20science/pandoc/pandoc-embed-all-latex-code-in-markdown-file-as-svg-in-the-exported-html/</url>
    <content><![CDATA[<h2 id="前言">前言</h2>
<h3 id="为什么要这样做">为什么要这样做</h3>
<p>​ 日常写的笔记等文章，或多或少会存在一部分的 latex
代码来实现数学公式的输入与化学结构式的表达，但是 pandoc
默认并不支持完备的 latex，只支持有限的一部分
package，存在一定的限制，故而一直在想着去整一个插件去让 pandoc 支持
latex 转 svg 来嵌入到输出的 HTML 文件中，实现 latex 的嵌入功能。</p>
<h3 id="搜索资料">搜索资料</h3>
<p>​ 参考了一下，使用了 Lua 作为 <a href="https://pandoc.org/lua-filters.html">pandoc filter</a>
的语言，主要还是因为它简单，而且不少语法与 C 相似。</p>
<p>​ 整理一下目的，我需要抓出所有 Markdown 里面的 latex
代码，提取出来后使用命令行工具转换为 svg 文件，再把生成的 svg 返回给
pandoc 供替换。</p>
<h2 id="开始秃头">开始秃头</h2>
<h3 id="提取-latex">提取 latex</h3>
<p>​ 既然我们要提取所有的 latex 代码，首先要抓出所有存放 latex
代码的部分，包括
<code>InlineMath</code>、<code>DisplayMath</code>、<code>CodeBlock+latex</code>。</p>
<blockquote>
<h5 id="pandoc-tex_math_dollars-错误解析">pandoc
<code>tex_math_dollars</code> 错误解析</h5>
<p>​ 因为 dollar-symbol <code>$</code> 在 pandoc
<code>commonmark+tex_math_dollars</code> 中会被<a href="https://github.com/jgm/pandoc/issues/7942#issuecomment-1053858533">错误解析</a>，会导致
<code>DisplayMath</code> 中的 <code>$</code>（指示 latex
使用数学模式）被当做 <code>InlineMath</code> 解析，从而使整个
<code>DisplayMath</code> 乱套。</p>
<p>​ （当时遇到这个问题的时候头都快薅秃了，一脸茫然 😒），最终选择把
latex 代码扔进 <code>CodeBlock</code> 中存着，不让 pandoc 去解析了。</p>
<hr>
<h3 id="后续">后续</h3>
<p>​ 维护者 <code>jgm</code> 就此将 pandoc 自带的 latex
解析器中的逻辑作为蓝本，向 <code>tex_math_dollars</code> 的仓库
<code>jgm/commonmark-hs</code> 提交了 <a href="https://github.com/jgm/commonmark-hs/commit/e136525716b1a0b55e367b07fe5146f88344e7cb">commit#e136525</a>，目前已得到了解决（虽然我已经为此改掉了全部存在问题的代码……）。</p>
<div class="sourceCode" id="cb1"><pre class="sourceCode haskell"><code class="sourceCode haskell"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a>github<span class="op">@</span>jgm<span class="op">/</span>pandoc<span class="op">~</span>master<span class="op">:</span>src<span class="op">/</span><span class="dt">Text</span><span class="op">/</span><span class="dt">Pandoc</span><span class="op">/</span><span class="dt">Readers</span><span class="op">/</span><span class="dt">LaTeX</span><span class="op">/</span>Math.hs<span class="op">#</span><span class="dt">L29</span><span class="op">?</span>hash<span class="ot">=</span>6ed8999f75be11b4ef9f561599d4dd80fcca92ec</span>
<span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a><span class="ot">dollarsMath ::</span> <span class="dt">PandocMonad</span> m <span class="ot">=&gt;</span> <span class="dt">LP</span> m <span class="dt">Inlines</span></span>
<span id="cb1-3"><a href="#cb1-3" aria-hidden="true" tabindex="-1"></a>dollarsMath <span class="ot">=</span> <span class="kw">do</span></span>
<span id="cb1-4"><a href="#cb1-4" aria-hidden="true" tabindex="-1"></a>  symbol <span class="ch">'$'</span></span>
<span id="cb1-5"><a href="#cb1-5" aria-hidden="true" tabindex="-1"></a>  display <span class="ot">&lt;-</span> option <span class="dt">False</span> (<span class="dt">True</span> <span class="op">&lt;$</span> symbol <span class="ch">'$'</span>)</span>
<span id="cb1-6"><a href="#cb1-6" aria-hidden="true" tabindex="-1"></a>  (<span class="kw">do</span> contents <span class="ot">&lt;-</span> try <span class="op">$</span> untokenize <span class="op">&lt;$&gt;</span> pDollarsMath <span class="dv">0</span></span>
<span id="cb1-7"><a href="#cb1-7" aria-hidden="true" tabindex="-1"></a>      <span class="kw">if</span> display</span>
<span id="cb1-8"><a href="#cb1-8" aria-hidden="true" tabindex="-1"></a>         <span class="kw">then</span> mathDisplay contents <span class="op">&lt;$</span> symbol <span class="ch">'$'</span></span>
<span id="cb1-9"><a href="#cb1-9" aria-hidden="true" tabindex="-1"></a>         <span class="kw">else</span> <span class="fu">return</span> <span class="op">$</span> mathInline contents)</span>
<span id="cb1-10"><a href="#cb1-10" aria-hidden="true" tabindex="-1"></a>   <span class="op">&lt;|&gt;</span> (guard display <span class="op">&gt;&gt;</span> <span class="fu">return</span> (mathInline <span class="st">""</span>))</span>
<span id="cb1-11"><a href="#cb1-11" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-12"><a href="#cb1-12" aria-hidden="true" tabindex="-1"></a><span class="co">-- Int is number of embedded groupings</span></span>
<span id="cb1-13"><a href="#cb1-13" aria-hidden="true" tabindex="-1"></a><span class="ot">pDollarsMath ::</span> <span class="dt">PandocMonad</span> m <span class="ot">=&gt;</span> <span class="dt">Int</span> <span class="ot">-&gt;</span> <span class="dt">LP</span> m [<span class="dt">Tok</span>]</span>
<span id="cb1-14"><a href="#cb1-14" aria-hidden="true" tabindex="-1"></a>pDollarsMath n <span class="ot">=</span> <span class="kw">do</span></span>
<span id="cb1-15"><a href="#cb1-15" aria-hidden="true" tabindex="-1"></a>  tk<span class="op">@</span>(<span class="dt">Tok</span> _ toktype t) <span class="ot">&lt;-</span> anyTok</span>
<span id="cb1-16"><a href="#cb1-16" aria-hidden="true" tabindex="-1"></a>  <span class="kw">case</span> toktype <span class="kw">of</span></span>
<span id="cb1-17"><a href="#cb1-17" aria-hidden="true" tabindex="-1"></a>       <span class="dt">Symbol</span> <span class="op">|</span> t <span class="op">==</span> <span class="st">"$"</span></span>
<span id="cb1-18"><a href="#cb1-18" aria-hidden="true" tabindex="-1"></a>              , n <span class="op">==</span> <span class="dv">0</span> <span class="ot">-&gt;</span> <span class="fu">return</span> []</span>
<span id="cb1-19"><a href="#cb1-19" aria-hidden="true" tabindex="-1"></a>              <span class="op">|</span> t <span class="op">==</span> <span class="st">"\\"</span> <span class="ot">-&gt;</span> <span class="kw">do</span></span>
<span id="cb1-20"><a href="#cb1-20" aria-hidden="true" tabindex="-1"></a>                  tk' <span class="ot">&lt;-</span> anyTok</span>
<span id="cb1-21"><a href="#cb1-21" aria-hidden="true" tabindex="-1"></a>                  (tk <span class="op">:</span>) <span class="op">.</span> (tk' <span class="op">:</span>) <span class="op">&lt;$&gt;</span> pDollarsMath n</span>
<span id="cb1-22"><a href="#cb1-22" aria-hidden="true" tabindex="-1"></a>              <span class="op">|</span> t <span class="op">==</span> <span class="st">"&#123;"</span> <span class="ot">-&gt;</span> (tk <span class="op">:</span>) <span class="op">&lt;$&gt;</span> pDollarsMath (n<span class="op">+</span><span class="dv">1</span>)</span>
<span id="cb1-23"><a href="#cb1-23" aria-hidden="true" tabindex="-1"></a>              <span class="op">|</span> t <span class="op">==</span> <span class="st">"&#125;"</span> <span class="ot">-&gt;</span></span>
<span id="cb1-24"><a href="#cb1-24" aria-hidden="true" tabindex="-1"></a>                <span class="kw">if</span> n <span class="op">&gt;</span> <span class="dv">0</span></span>
<span id="cb1-25"><a href="#cb1-25" aria-hidden="true" tabindex="-1"></a>                <span class="kw">then</span> (tk <span class="op">:</span>) <span class="op">&lt;$&gt;</span> pDollarsMath (n<span class="op">-</span><span class="dv">1</span>)</span>
<span id="cb1-26"><a href="#cb1-26" aria-hidden="true" tabindex="-1"></a>                <span class="kw">else</span> mzero</span>
<span id="cb1-27"><a href="#cb1-27" aria-hidden="true" tabindex="-1"></a>       _ <span class="ot">-&gt;</span> (tk <span class="op">:</span>) <span class="op">&lt;$&gt;</span> pDollarsMath n</span></code></pre></div>
<div class="sourceCode" id="cb2"><pre class="sourceCode diff"><code class="sourceCode diff"><span id="cb2-1"><a href="#cb2-1" aria-hidden="true" tabindex="-1"></a>github@jgm/commonmark-hs~commonmark-extensions:src/Commonmark/Extensions/Math.hs#L55?hash=e136525716b1a0b55e367b07fe5146f88344e7cb</span>
<span id="cb2-2"><a href="#cb2-2" aria-hidden="true" tabindex="-1"></a>  (_, toks) &lt;- withRaw $ many1 $</span>
<span id="cb2-3"><a href="#cb2-3" aria-hidden="true" tabindex="-1"></a>                  choice [ () &lt;$ symbol '\\' &gt;&gt; anyTok</span>
<span id="cb2-4"><a href="#cb2-4" aria-hidden="true" tabindex="-1"></a>                         , noneOfToks [Symbol '$']</span>
<span id="cb2-5"><a href="#cb2-5" aria-hidden="true" tabindex="-1"></a><span class="va">+                        , try (symbol '$' &lt;* notFollowedBy (symbol '$'))</span></span>
<span id="cb2-6"><a href="#cb2-6" aria-hidden="true" tabindex="-1"></a>                         ]</span>
<span id="cb2-7"><a href="#cb2-7" aria-hidden="true" tabindex="-1"></a>  count 2 $ symbol '$'</span>
<span id="cb2-8"><a href="#cb2-8" aria-hidden="true" tabindex="-1"></a>  return $! displayMath (untokenize toks)</span></code></pre></div>
</blockquote>
<p>​ 在这里我们直接在 <code>return</code> 处定义（为了后续维护）：</p>
<div class="sourceCode" id="cb3"><pre class="sourceCode lua"><code class="sourceCode lua"><span id="cb3-1"><a href="#cb3-1" aria-hidden="true" tabindex="-1"></a><span class="kw">function</span> exec_math<span class="op">()</span></span>
<span id="cb3-2"><a href="#cb3-2" aria-hidden="true" tabindex="-1"></a><span class="kw">end</span></span>
<span id="cb3-3"><a href="#cb3-3" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb3-4"><a href="#cb3-4" aria-hidden="true" tabindex="-1"></a><span class="kw">function</span> exec_codeblock<span class="op">()</span></span>
<span id="cb3-5"><a href="#cb3-5" aria-hidden="true" tabindex="-1"></a><span class="kw">end</span></span>
<span id="cb3-6"><a href="#cb3-6" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb3-7"><a href="#cb3-7" aria-hidden="true" tabindex="-1"></a><span class="cf">return</span> <span class="op">&lt;</span>!<span class="co">--swig￼0--&gt;</span></span></code></pre></div>
<h3 id="转换-svg">转换 SVG</h3>
<p>​ 因为 <code>CodeBlock</code> 和 <code>Math</code>
的属性不同，我们无法合并，于是不如写一个接口出来，输入 latex 代码，输出
svg 代码（忽略了
<code>default_preamble</code>、<code>begin_statement</code>、<code>ending_statement</code>，具体内容见文末）：</p>
<div class="sourceCode" id="cb4"><pre class="sourceCode lua"><code class="sourceCode lua"><span id="cb4-1"><a href="#cb4-1" aria-hidden="true" tabindex="-1"></a><span class="kw">local</span> open <span class="op">=</span> <span class="fu">io.open</span></span>
<span id="cb4-2"><a href="#cb4-2" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb4-3"><a href="#cb4-3" aria-hidden="true" tabindex="-1"></a><span class="kw">local</span> function read_file<span class="op">(</span>path<span class="op">)</span></span>
<span id="cb4-4"><a href="#cb4-4" aria-hidden="true" tabindex="-1"></a>  <span class="co">-- r read mode and b binary mode</span></span>
<span id="cb4-5"><a href="#cb4-5" aria-hidden="true" tabindex="-1"></a>  <span class="kw">local</span> file <span class="op">=</span> open<span class="op">(</span>path<span class="op">,</span> <span class="st">"rb"</span><span class="op">)</span></span>
<span id="cb4-6"><a href="#cb4-6" aria-hidden="true" tabindex="-1"></a>  <span class="cf">if</span> <span class="kw">not</span> file <span class="cf">then</span></span>
<span id="cb4-7"><a href="#cb4-7" aria-hidden="true" tabindex="-1"></a>    <span class="cf">return</span> <span class="kw">nil</span></span>
<span id="cb4-8"><a href="#cb4-8" aria-hidden="true" tabindex="-1"></a>  <span class="cf">end</span></span>
<span id="cb4-9"><a href="#cb4-9" aria-hidden="true" tabindex="-1"></a>  <span class="co">-- *a or *all reads the whole file</span></span>
<span id="cb4-10"><a href="#cb4-10" aria-hidden="true" tabindex="-1"></a>  <span class="kw">local</span> content <span class="op">=</span> file<span class="op">:</span><span class="fu">read</span> <span class="st">"*a"</span></span>
<span id="cb4-11"><a href="#cb4-11" aria-hidden="true" tabindex="-1"></a>  file<span class="op">:</span><span class="fu">close</span><span class="op">()</span></span>
<span id="cb4-12"><a href="#cb4-12" aria-hidden="true" tabindex="-1"></a>  <span class="cf">return</span> content</span>
<span id="cb4-13"><a href="#cb4-13" aria-hidden="true" tabindex="-1"></a><span class="cf">end</span></span>
<span id="cb4-14"><a href="#cb4-14" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb4-15"><a href="#cb4-15" aria-hidden="true" tabindex="-1"></a><span class="kw">function</span> convert_svg<span class="op">(</span>elem<span class="op">,</span> <span class="fu">type</span><span class="op">)</span></span>
<span id="cb4-16"><a href="#cb4-16" aria-hidden="true" tabindex="-1"></a>  <span class="co">-- Combine latex source code --</span></span>
<span id="cb4-17"><a href="#cb4-17" aria-hidden="true" tabindex="-1"></a>  <span class="kw">local</span> mathEq <span class="op">=</span> default_preamble <span class="op">..</span> begin_statement <span class="op">..</span> elem<span class="op">.</span>text <span class="op">..</span> ending_statement</span>
<span id="cb4-18"><a href="#cb4-18" aria-hidden="true" tabindex="-1"></a>  <span class="co">-- Make latex with `latex` --</span></span>
<span id="cb4-19"><a href="#cb4-19" aria-hidden="true" tabindex="-1"></a>  <span class="kw">local</span> tex <span class="op">=</span> <span class="fu">io.open</span><span class="op">(</span><span class="st">"input.tex"</span><span class="op">,</span> <span class="st">"w"</span><span class="op">)</span></span>
<span id="cb4-20"><a href="#cb4-20" aria-hidden="true" tabindex="-1"></a>  tex<span class="op">:</span><span class="fu">write</span><span class="op">(</span>mathEq<span class="op">)</span></span>
<span id="cb4-21"><a href="#cb4-21" aria-hidden="true" tabindex="-1"></a>  tex<span class="op">:</span><span class="fu">close</span><span class="op">()</span></span>
<span id="cb4-22"><a href="#cb4-22" aria-hidden="true" tabindex="-1"></a>  <span class="fu">os.execute</span><span class="op">(</span><span class="st">"latex input.tex"</span><span class="op">)</span></span>
<span id="cb4-23"><a href="#cb4-23" aria-hidden="true" tabindex="-1"></a>  <span class="co">-- Convert dvi to svg and optimize the output svg --</span></span>
<span id="cb4-24"><a href="#cb4-24" aria-hidden="true" tabindex="-1"></a>  <span class="fu">os.execute</span><span class="op">(</span><span class="st">"dvisvgm --no-fonts input.dvi -o output.svg &amp;&amp; svgo output.svg"</span><span class="op">)</span></span>
<span id="cb4-25"><a href="#cb4-25" aria-hidden="true" tabindex="-1"></a>  cleanup<span class="op">()</span></span>
<span id="cb4-26"><a href="#cb4-26" aria-hidden="true" tabindex="-1"></a>  <span class="cf">return</span> output<span class="op">(</span><span class="fu">type</span><span class="op">,</span> read_file<span class="op">(</span>filename<span class="op">),</span> hex_value<span class="op">)</span></span>
<span id="cb4-27"><a href="#cb4-27" aria-hidden="true" tabindex="-1"></a><span class="kw">end</span></span>
<span id="cb4-28"><a href="#cb4-28" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb4-29"><a href="#cb4-29" aria-hidden="true" tabindex="-1"></a><span class="kw">function</span> cleanup<span class="op">()</span></span>
<span id="cb4-30"><a href="#cb4-30" aria-hidden="true" tabindex="-1"></a>  <span class="co">-- Clean up directory --</span></span>
<span id="cb4-31"><a href="#cb4-31" aria-hidden="true" tabindex="-1"></a>  <span class="cf">for</span> <span class="cn">_</span><span class="op">,</span> name <span class="kw">in</span> <span class="fu">ipairs</span><span class="op">(&#123;</span><span class="st">"input.tex"</span><span class="op">,</span> <span class="st">"input.aux"</span><span class="op">,</span> <span class="st">"input.dvi"</span><span class="op">,</span> <span class="st">"input.log"</span><span class="op">,</span> <span class="st">"output.svg"</span><span class="op">&#125;)</span> <span class="cf">do</span></span>
<span id="cb4-32"><a href="#cb4-32" aria-hidden="true" tabindex="-1"></a>    <span class="fu">print</span><span class="op">(</span><span class="st">"Deleting "</span> <span class="op">..</span> name<span class="op">)</span></span>
<span id="cb4-33"><a href="#cb4-33" aria-hidden="true" tabindex="-1"></a>    <span class="fu">os.remove</span><span class="op">(</span>name<span class="op">)</span></span>
<span id="cb4-34"><a href="#cb4-34" aria-hidden="true" tabindex="-1"></a>  <span class="cf">end</span></span>
<span id="cb4-35"><a href="#cb4-35" aria-hidden="true" tabindex="-1"></a><span class="kw">end</span></span></code></pre></div>
<p>​ <code>convert_svg</code> 末尾的那一句 <code>output</code> 是输出给
pandoc：</p>
<div class="sourceCode" id="cb5"><pre class="sourceCode lua"><code class="sourceCode lua"><span id="cb5-1"><a href="#cb5-1" aria-hidden="true" tabindex="-1"></a><span class="kw">function</span> output<span class="op">(</span><span class="fu">type</span><span class="op">,</span> svg<span class="op">,</span> hex_value<span class="op">)</span></span>
<span id="cb5-2"><a href="#cb5-2" aria-hidden="true" tabindex="-1"></a>  <span class="cf">return</span> pandoc<span class="op">.</span>RawInline<span class="op">(</span><span class="st">'html'</span><span class="op">,</span></span>
<span id="cb5-3"><a href="#cb5-3" aria-hidden="true" tabindex="-1"></a>    <span class="fu">type</span> <span class="op">==</span> <span class="st">"InlineMath"</span> <span class="kw">and</span> <span class="st">"&lt;span class='math latex inline' data-sha1='"</span> <span class="op">..</span> hex_value <span class="op">..</span> <span class="st">"'&gt;"</span> <span class="op">..</span> svg <span class="op">..</span></span>
<span id="cb5-4"><a href="#cb5-4" aria-hidden="true" tabindex="-1"></a>      <span class="st">"&lt;/span&gt;"</span> <span class="kw">or</span> <span class="st">"&lt;p class='math latex display' data-sha1='"</span> <span class="op">..</span> hex_value <span class="op">..</span> <span class="st">"'&gt;"</span> <span class="op">..</span> svg <span class="op">..</span> <span class="st">"&lt;/p&gt;"</span><span class="op">)</span></span>
<span id="cb5-5"><a href="#cb5-5" aria-hidden="true" tabindex="-1"></a><span class="kw">end</span></span></code></pre></div>
<p>​ 修改 <code>exec_math</code> 和 <code>exec_codeblock</code>
让它们接上 <code>convert_svg</code> 函数：</p>
<div class="sourceCode" id="cb6"><pre class="sourceCode lua"><code class="sourceCode lua"><span id="cb6-1"><a href="#cb6-1" aria-hidden="true" tabindex="-1"></a><span class="kw">function</span> exec_math<span class="op">(</span>elem<span class="op">)</span></span>
<span id="cb6-2"><a href="#cb6-2" aria-hidden="true" tabindex="-1"></a>  <span class="cf">if</span> <span class="fu">string.find</span><span class="op">(</span>elem<span class="op">.</span>text<span class="op">,</span> <span class="st">"chemfig"</span><span class="op">)</span> <span class="kw">or</span> elem<span class="op">.</span>mathtype <span class="op">==</span> <span class="st">"DisplayMath"</span> <span class="cf">then</span> <span class="co">--- Select those who are not supported by mathjax</span></span>
<span id="cb6-3"><a href="#cb6-3" aria-hidden="true" tabindex="-1"></a>    <span class="cf">return</span> convert_svg<span class="op">(</span>elem<span class="op">,</span> elem<span class="op">.</span>mathtype<span class="op">)</span></span>
<span id="cb6-4"><a href="#cb6-4" aria-hidden="true" tabindex="-1"></a>  <span class="cf">end</span></span>
<span id="cb6-5"><a href="#cb6-5" aria-hidden="true" tabindex="-1"></a>  <span class="cf">return</span> elem</span>
<span id="cb6-6"><a href="#cb6-6" aria-hidden="true" tabindex="-1"></a><span class="kw">end</span></span>
<span id="cb6-7"><a href="#cb6-7" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb6-8"><a href="#cb6-8" aria-hidden="true" tabindex="-1"></a><span class="kw">function</span> exec_codeblock<span class="op">(</span>elem<span class="op">)</span></span>
<span id="cb6-9"><a href="#cb6-9" aria-hidden="true" tabindex="-1"></a>  <span class="cf">if</span> elem<span class="op">.</span>classes<span class="op">[</span><span class="dv">1</span><span class="op">]</span> <span class="op">==</span> <span class="st">"latex"</span> <span class="cf">then</span></span>
<span id="cb6-10"><a href="#cb6-10" aria-hidden="true" tabindex="-1"></a>    <span class="cf">return</span> convert_svg<span class="op">(</span>elem<span class="op">,</span> <span class="st">"CodeBlock"</span><span class="op">)</span></span>
<span id="cb6-11"><a href="#cb6-11" aria-hidden="true" tabindex="-1"></a>  <span class="cf">end</span></span>
<span id="cb6-12"><a href="#cb6-12" aria-hidden="true" tabindex="-1"></a>  <span class="cf">return</span> elem</span>
<span id="cb6-13"><a href="#cb6-13" aria-hidden="true" tabindex="-1"></a><span class="kw">end</span></span></code></pre></div>
<p>​ 下面的是终端命令用于应用这一个 filter 到 pandoc 上：</p>
<div class="sourceCode" id="cb7"><pre class="sourceCode sh"><code class="sourceCode bash"><span id="cb7-1"><a href="#cb7-1" aria-hidden="true" tabindex="-1"></a><span class="ex">pandoc</span> <span class="at">--lua-filter</span><span class="op">=</span>tex2svg.lua <span class="at">-f</span> markdown <span class="at">-s</span> tmp.md <span class="at">-o</span> tmp.html <span class="at">--standalone</span></span></code></pre></div>
<h3 id="添加缓存机制">添加缓存机制</h3>
<p>​ 试着对所有的笔记执行了一下，发现运行效果还可以，但是出于 latex
的慢，因而有点拖沓……就想着能不能做缓存，下次执行的时候先检查一下有没有已经输出。恰逢
pandoc 库自带 <code>sha1</code>，就用它做了一下缓存机制，为每一段 latex
代码按照它们的内容 <code>sha1</code> 编码为文件名：</p>
<div class="sourceCode" id="cb8"><pre class="sourceCode diff"><code class="sourceCode diff"><span id="cb8-1"><a href="#cb8-1" aria-hidden="true" tabindex="-1"></a><span class="va">+ -- Check if a file or directory exists in this path --</span></span>
<span id="cb8-2"><a href="#cb8-2" aria-hidden="true" tabindex="-1"></a><span class="va">+ function exists(file)</span></span>
<span id="cb8-3"><a href="#cb8-3" aria-hidden="true" tabindex="-1"></a><span class="va">+   local ok, err, code = os.rename(file, file)</span></span>
<span id="cb8-4"><a href="#cb8-4" aria-hidden="true" tabindex="-1"></a><span class="va">+   if not ok then</span></span>
<span id="cb8-5"><a href="#cb8-5" aria-hidden="true" tabindex="-1"></a><span class="va">+       if code == 13 then</span></span>
<span id="cb8-6"><a href="#cb8-6" aria-hidden="true" tabindex="-1"></a><span class="va">+           -- Permission denied, but it exists --</span></span>
<span id="cb8-7"><a href="#cb8-7" aria-hidden="true" tabindex="-1"></a><span class="va">+           return true</span></span>
<span id="cb8-8"><a href="#cb8-8" aria-hidden="true" tabindex="-1"></a><span class="va">+       end</span></span>
<span id="cb8-9"><a href="#cb8-9" aria-hidden="true" tabindex="-1"></a><span class="va">+   end</span></span>
<span id="cb8-10"><a href="#cb8-10" aria-hidden="true" tabindex="-1"></a><span class="va">+   return ok</span></span>
<span id="cb8-11"><a href="#cb8-11" aria-hidden="true" tabindex="-1"></a><span class="va">+ end</span></span>
<span id="cb8-12"><a href="#cb8-12" aria-hidden="true" tabindex="-1"></a><span class="va">+ -- Check if a directory exists in this path --</span></span>
<span id="cb8-13"><a href="#cb8-13" aria-hidden="true" tabindex="-1"></a><span class="va">+ function isdir(path)</span></span>
<span id="cb8-14"><a href="#cb8-14" aria-hidden="true" tabindex="-1"></a><span class="va">+     -- "/" works on both Unix and Windows --</span></span>
<span id="cb8-15"><a href="#cb8-15" aria-hidden="true" tabindex="-1"></a><span class="va">+     return exists(path .. "/")</span></span>
<span id="cb8-16"><a href="#cb8-16" aria-hidden="true" tabindex="-1"></a><span class="va">+ end</span></span>
<span id="cb8-17"><a href="#cb8-17" aria-hidden="true" tabindex="-1"></a><span class="va">+</span></span>
<span id="cb8-18"><a href="#cb8-18" aria-hidden="true" tabindex="-1"></a><span class="va">+ pandoc.utils = require 'pandoc.utils'</span></span>
<span id="cb8-19"><a href="#cb8-19" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb8-20"><a href="#cb8-20" aria-hidden="true" tabindex="-1"></a>function convert_svg(elem, type)</span>
<span id="cb8-21"><a href="#cb8-21" aria-hidden="true" tabindex="-1"></a><span class="va">+ local hex_value = pandoc.utils.sha1(elem.text)</span></span>
<span id="cb8-22"><a href="#cb8-22" aria-hidden="true" tabindex="-1"></a><span class="va">+ local filename = ".texsvg/texsvg-" .. hex_value .. ".svg"</span></span>
<span id="cb8-23"><a href="#cb8-23" aria-hidden="true" tabindex="-1"></a><span class="va">+ </span></span>
<span id="cb8-24"><a href="#cb8-24" aria-hidden="true" tabindex="-1"></a><span class="va">+ if not isdir(".texsvg") then</span></span>
<span id="cb8-25"><a href="#cb8-25" aria-hidden="true" tabindex="-1"></a><span class="va">+   os.execute("mkdir .texsvg")</span></span>
<span id="cb8-26"><a href="#cb8-26" aria-hidden="true" tabindex="-1"></a><span class="va">+ end</span></span>
<span id="cb8-27"><a href="#cb8-27" aria-hidden="true" tabindex="-1"></a><span class="va">+ -- Check if it's generated previously --</span></span>
<span id="cb8-28"><a href="#cb8-28" aria-hidden="true" tabindex="-1"></a><span class="va">+ if exists(filename) then</span></span>
<span id="cb8-29"><a href="#cb8-29" aria-hidden="true" tabindex="-1"></a><span class="va">+   cleanup()</span></span>
<span id="cb8-30"><a href="#cb8-30" aria-hidden="true" tabindex="-1"></a><span class="va">+   print("Using previously generated svg")</span></span>
<span id="cb8-31"><a href="#cb8-31" aria-hidden="true" tabindex="-1"></a><span class="va">+   return output(elem, read_file(filename), hex_value)</span></span>
<span id="cb8-32"><a href="#cb8-32" aria-hidden="true" tabindex="-1"></a><span class="va">+ end</span></span>
<span id="cb8-33"><a href="#cb8-33" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb8-34"><a href="#cb8-34" aria-hidden="true" tabindex="-1"></a>  -- Combine latex source code --</span>
<span id="cb8-35"><a href="#cb8-35" aria-hidden="true" tabindex="-1"></a>  local mathEq = default_preamble .. begin_statement .. elem.text .. ending_statement</span>
<span id="cb8-36"><a href="#cb8-36" aria-hidden="true" tabindex="-1"></a>  -- Make latex with `latex` --</span>
<span id="cb8-37"><a href="#cb8-37" aria-hidden="true" tabindex="-1"></a>  local tex = io.open("input.tex", "w")</span>
<span id="cb8-38"><a href="#cb8-38" aria-hidden="true" tabindex="-1"></a>  tex:write(mathEq)</span>
<span id="cb8-39"><a href="#cb8-39" aria-hidden="true" tabindex="-1"></a>  tex:close()</span>
<span id="cb8-40"><a href="#cb8-40" aria-hidden="true" tabindex="-1"></a>  os.execute("latex input.tex")</span>
<span id="cb8-41"><a href="#cb8-41" aria-hidden="true" tabindex="-1"></a>  -- Convert dvi to svg and optimize the output svg --</span>
<span id="cb8-42"><a href="#cb8-42" aria-hidden="true" tabindex="-1"></a><span class="st">- os.execute("dvisvgm --no-fonts input.dvi -o output.svg &amp;&amp; svgo output.svg")</span></span>
<span id="cb8-43"><a href="#cb8-43" aria-hidden="true" tabindex="-1"></a><span class="va">+ os.execute("dvisvgm --no-fonts input.dvi -o " .. filename .. " &amp;&amp; svgo " .. filename)</span></span>
<span id="cb8-44"><a href="#cb8-44" aria-hidden="true" tabindex="-1"></a>  cleanup()</span>
<span id="cb8-45"><a href="#cb8-45" aria-hidden="true" tabindex="-1"></a>  return output(type, read_file(filename), hex_value)</span>
<span id="cb8-46"><a href="#cb8-46" aria-hidden="true" tabindex="-1"></a>end</span>
<span id="cb8-47"><a href="#cb8-47" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb8-48"><a href="#cb8-48" aria-hidden="true" tabindex="-1"></a>function cleanup()</span>
<span id="cb8-49"><a href="#cb8-49" aria-hidden="true" tabindex="-1"></a>  -- Clean up directory --</span>
<span id="cb8-50"><a href="#cb8-50" aria-hidden="true" tabindex="-1"></a><span class="st">- for _, name in ipairs(&#123;"input.tex", "input.aux", "input.dvi", "input.log", "output.svg"&#125;) do</span></span>
<span id="cb8-51"><a href="#cb8-51" aria-hidden="true" tabindex="-1"></a><span class="va">+ for _, name in ipairs(&#123;"input.tex", "input.aux", "input.dvi", "input.log"&#125;) do</span></span>
<span id="cb8-52"><a href="#cb8-52" aria-hidden="true" tabindex="-1"></a>    print("Deleting " .. name)</span>
<span id="cb8-53"><a href="#cb8-53" aria-hidden="true" tabindex="-1"></a>    os.remove(name)</span>
<span id="cb8-54"><a href="#cb8-54" aria-hidden="true" tabindex="-1"></a>  end</span>
<span id="cb8-55"><a href="#cb8-55" aria-hidden="true" tabindex="-1"></a>end</span></code></pre></div>
<h3 id="解决不正常的引用">解决不正常的引用</h3>
<p>​ 不过值得注意的是，如果一页里面有多个 latex 代码被渲染，因为导出的
svg 中会有大量的 <code>&lt;use&gt;</code>，且 <code>id</code>
都是以同一个顺序起始，会导致 HTML 页面中 svg 渲染不正常（svg
能够跨标签引用），此时就用上 JavaScript 简单筛一遍加一个
<code>id</code>：</p>
<div class="sourceCode" id="cb9"><pre class="sourceCode javascript"><code class="sourceCode javascript"><span id="cb9-1"><a href="#cb9-1" aria-hidden="true" tabindex="-1"></a>[<span class="op">...</span><span class="bu">document</span><span class="op">.</span><span class="fu">querySelectorAll</span>(<span class="st">".math.latex"</span>)]<span class="op">.</span><span class="fu">forEach</span>(e <span class="kw">=&gt;</span> &#123;</span>
<span id="cb9-2"><a href="#cb9-2" aria-hidden="true" tabindex="-1"></a>  [<span class="op">...</span>e<span class="op">.</span><span class="fu">querySelectorAll</span>(<span class="st">"defs [id]"</span>)]<span class="op">.</span><span class="fu">forEach</span>(i <span class="kw">=&gt;</span> &#123;</span>
<span id="cb9-3"><a href="#cb9-3" aria-hidden="true" tabindex="-1"></a>    i<span class="op">.</span><span class="at">id</span> <span class="op">=</span> e<span class="op">.</span><span class="at">attributes</span>[<span class="st">'data-sha1'</span>]<span class="op">.</span><span class="at">value</span> <span class="op">+</span> <span class="st">"_"</span> <span class="op">+</span> i<span class="op">.</span><span class="at">id</span><span class="op">;</span></span>
<span id="cb9-4"><a href="#cb9-4" aria-hidden="true" tabindex="-1"></a>  &#125;)<span class="op">;</span></span>
<span id="cb9-5"><a href="#cb9-5" aria-hidden="true" tabindex="-1"></a>  [<span class="op">...</span>e<span class="op">.</span><span class="fu">querySelectorAll</span>(<span class="st">"[xlink:href]"</span>)]<span class="op">.</span><span class="fu">forEach</span>(i <span class="kw">=&gt;</span> &#123;</span>
<span id="cb9-6"><a href="#cb9-6" aria-hidden="true" tabindex="-1"></a>    i<span class="op">.</span><span class="at">attributes</span>[<span class="st">'xlink:href'</span>]<span class="op">.</span><span class="at">value</span> <span class="op">=</span> i<span class="op">.</span><span class="at">attributes</span>[<span class="st">'xlink:href'</span>]<span class="op">.</span><span class="at">value</span><span class="op">.</span><span class="fu">replace</span>(<span class="st">"#"</span><span class="op">,</span> <span class="st">"#"</span> <span class="op">+</span> e<span class="op">.</span><span class="at">attributes</span>[<span class="st">'data-sha1'</span>]<span class="op">.</span><span class="at">value</span> <span class="op">+</span> <span class="st">"_"</span>)<span class="op">;</span></span>
<span id="cb9-7"><a href="#cb9-7" aria-hidden="true" tabindex="-1"></a>  &#125;)<span class="op">;</span></span>
<span id="cb9-8"><a href="#cb9-8" aria-hidden="true" tabindex="-1"></a>&#125;)<span class="op">;</span></span></code></pre></div>
<p>​ 大功告成 🎉~</p>
<h2 id="完整代码">完整代码</h2>
<p>​ 完整代码如下：</p>
<div class="sourceCode" id="cb10"><pre class="sourceCode lua"><code class="sourceCode lua"><span id="cb10-1"><a href="#cb10-1" aria-hidden="true" tabindex="-1"></a>pandoc<span class="op">.</span>utils <span class="op">=</span> <span class="fu">require</span> <span class="st">'pandoc.utils'</span></span>
<span id="cb10-2"><a href="#cb10-2" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb10-3"><a href="#cb10-3" aria-hidden="true" tabindex="-1"></a><span class="kw">local</span> begin_statement<span class="op">,</span> ending_statement <span class="op">=</span> <span class="vs">[[</span></span>
<span id="cb10-4"><a href="#cb10-4" aria-hidden="true" tabindex="-1"></a><span class="vs">\begin&#123;document&#125;</span></span>
<span id="cb10-5"><a href="#cb10-5" aria-hidden="true" tabindex="-1"></a><span class="vs">\begin&#123;preview&#125;</span></span>
<span id="cb10-6"><a href="#cb10-6" aria-hidden="true" tabindex="-1"></a><span class="vs">]]</span><span class="op">,</span> <span class="vs">[[</span></span>
<span id="cb10-7"><a href="#cb10-7" aria-hidden="true" tabindex="-1"></a><span class="vs">\end&#123;preview&#125;</span></span>
<span id="cb10-8"><a href="#cb10-8" aria-hidden="true" tabindex="-1"></a><span class="vs">\end&#123;document&#125;</span></span>
<span id="cb10-9"><a href="#cb10-9" aria-hidden="true" tabindex="-1"></a><span class="vs">]]</span></span>
<span id="cb10-10"><a href="#cb10-10" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb10-11"><a href="#cb10-11" aria-hidden="true" tabindex="-1"></a><span class="kw">local</span> default_preamble <span class="op">=</span> <span class="vs">[[</span></span>
<span id="cb10-12"><a href="#cb10-12" aria-hidden="true" tabindex="-1"></a><span class="vs">\documentclass[12pt,preview]&#123;standalone&#125;</span></span>
<span id="cb10-13"><a href="#cb10-13" aria-hidden="true" tabindex="-1"></a><span class="vs">\usepackage&#123;ctex&#125;</span></span>
<span id="cb10-14"><a href="#cb10-14" aria-hidden="true" tabindex="-1"></a><span class="vs">\usepackage[version=4]&#123;mhchem&#125;</span></span>
<span id="cb10-15"><a href="#cb10-15" aria-hidden="true" tabindex="-1"></a><span class="vs">\usepackage&#123;chemfig&#125;</span></span>
<span id="cb10-16"><a href="#cb10-16" aria-hidden="true" tabindex="-1"></a><span class="vs">\usepackage&#123;amsthm,amssymb&#125;</span></span>
<span id="cb10-17"><a href="#cb10-17" aria-hidden="true" tabindex="-1"></a><span class="vs">\renewcommand&#123;\qedsymbol&#125;&#123;$\blacksquare$&#125;</span></span>
<span id="cb10-18"><a href="#cb10-18" aria-hidden="true" tabindex="-1"></a><span class="vs">\DeclareOldFontCommand&#123;\rm&#125;&#123;\normalfont\rmfamily&#125;&#123;\mathrm&#125;</span></span>
<span id="cb10-19"><a href="#cb10-19" aria-hidden="true" tabindex="-1"></a><span class="vs">\DeclareOldFontCommand&#123;\sf&#125;&#123;\normalfont\sffamily&#125;&#123;\mathsf&#125;</span></span>
<span id="cb10-20"><a href="#cb10-20" aria-hidden="true" tabindex="-1"></a><span class="vs">\DeclareOldFontCommand&#123;\tt&#125;&#123;\normalfont\ttfamily&#125;&#123;\mathtt&#125;</span></span>
<span id="cb10-21"><a href="#cb10-21" aria-hidden="true" tabindex="-1"></a><span class="vs">\DeclareOldFontCommand&#123;\bf&#125;&#123;\normalfont\bfseries&#125;&#123;\mathbf&#125;</span></span>
<span id="cb10-22"><a href="#cb10-22" aria-hidden="true" tabindex="-1"></a><span class="vs">\DeclareOldFontCommand&#123;\it&#125;&#123;\normalfont\itshape&#125;&#123;\mathit&#125;</span></span>
<span id="cb10-23"><a href="#cb10-23" aria-hidden="true" tabindex="-1"></a><span class="vs">\DeclareOldFontCommand&#123;\sl&#125;&#123;\normalfont\slshape&#125;&#123;\@nomath\sl&#125;</span></span>
<span id="cb10-24"><a href="#cb10-24" aria-hidden="true" tabindex="-1"></a><span class="vs">\DeclareOldFontCommand&#123;\sc&#125;&#123;\normalfont\scshape&#125;&#123;\@nomath\sc&#125;</span></span>
<span id="cb10-25"><a href="#cb10-25" aria-hidden="true" tabindex="-1"></a><span class="vs">\newcommand&#123;\N&#125;&#123;\mathbb&#123;N&#125;&#125;</span></span>
<span id="cb10-26"><a href="#cb10-26" aria-hidden="true" tabindex="-1"></a><span class="vs">\newcommand&#123;\R&#125;&#123;\mathbb&#123;R&#125;&#125;</span></span>
<span id="cb10-27"><a href="#cb10-27" aria-hidden="true" tabindex="-1"></a><span class="vs">\newcommand&#123;\Z&#125;&#123;\mathbb&#123;Z&#125;&#125;</span></span>
<span id="cb10-28"><a href="#cb10-28" aria-hidden="true" tabindex="-1"></a><span class="vs">]]</span></span>
<span id="cb10-29"><a href="#cb10-29" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb10-30"><a href="#cb10-30" aria-hidden="true" tabindex="-1"></a><span class="co">-- Check if a file or directory exists in this path --</span></span>
<span id="cb10-31"><a href="#cb10-31" aria-hidden="true" tabindex="-1"></a><span class="kw">function</span> exists<span class="op">(</span>file<span class="op">)</span></span>
<span id="cb10-32"><a href="#cb10-32" aria-hidden="true" tabindex="-1"></a>  <span class="kw">local</span> ok<span class="op">,</span> err<span class="op">,</span> code <span class="op">=</span> <span class="fu">os.rename</span><span class="op">(</span>file<span class="op">,</span> file<span class="op">)</span></span>
<span id="cb10-33"><a href="#cb10-33" aria-hidden="true" tabindex="-1"></a>  <span class="cf">if</span> <span class="kw">not</span> ok <span class="cf">then</span></span>
<span id="cb10-34"><a href="#cb10-34" aria-hidden="true" tabindex="-1"></a>    <span class="cf">if</span> code <span class="op">==</span> <span class="dv">13</span> <span class="cf">then</span></span>
<span id="cb10-35"><a href="#cb10-35" aria-hidden="true" tabindex="-1"></a>      <span class="co">-- Permission denied, but it exists --</span></span>
<span id="cb10-36"><a href="#cb10-36" aria-hidden="true" tabindex="-1"></a>      <span class="cf">return</span> <span class="kw">true</span></span>
<span id="cb10-37"><a href="#cb10-37" aria-hidden="true" tabindex="-1"></a>    <span class="cf">end</span></span>
<span id="cb10-38"><a href="#cb10-38" aria-hidden="true" tabindex="-1"></a>  <span class="cf">end</span></span>
<span id="cb10-39"><a href="#cb10-39" aria-hidden="true" tabindex="-1"></a>  <span class="cf">return</span> ok</span>
<span id="cb10-40"><a href="#cb10-40" aria-hidden="true" tabindex="-1"></a><span class="kw">end</span></span>
<span id="cb10-41"><a href="#cb10-41" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb10-42"><a href="#cb10-42" aria-hidden="true" tabindex="-1"></a><span class="co">-- Check if a directory exists in this path --</span></span>
<span id="cb10-43"><a href="#cb10-43" aria-hidden="true" tabindex="-1"></a><span class="kw">function</span> isdir<span class="op">(</span>path<span class="op">)</span></span>
<span id="cb10-44"><a href="#cb10-44" aria-hidden="true" tabindex="-1"></a>  <span class="co">-- "/" works on both Unix and Windows --</span></span>
<span id="cb10-45"><a href="#cb10-45" aria-hidden="true" tabindex="-1"></a>  <span class="cf">return</span> exists<span class="op">(</span>path <span class="op">..</span> <span class="st">"/"</span><span class="op">)</span></span>
<span id="cb10-46"><a href="#cb10-46" aria-hidden="true" tabindex="-1"></a><span class="kw">end</span></span>
<span id="cb10-47"><a href="#cb10-47" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb10-48"><a href="#cb10-48" aria-hidden="true" tabindex="-1"></a><span class="kw">local</span> open <span class="op">=</span> <span class="fu">io.open</span></span>
<span id="cb10-49"><a href="#cb10-49" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb10-50"><a href="#cb10-50" aria-hidden="true" tabindex="-1"></a><span class="kw">local</span> function read_file<span class="op">(</span>path<span class="op">)</span></span>
<span id="cb10-51"><a href="#cb10-51" aria-hidden="true" tabindex="-1"></a>  <span class="co">-- r read mode and b binary mode</span></span>
<span id="cb10-52"><a href="#cb10-52" aria-hidden="true" tabindex="-1"></a>  <span class="kw">local</span> file <span class="op">=</span> open<span class="op">(</span>path<span class="op">,</span> <span class="st">"rb"</span><span class="op">)</span></span>
<span id="cb10-53"><a href="#cb10-53" aria-hidden="true" tabindex="-1"></a>  <span class="cf">if</span> <span class="kw">not</span> file <span class="cf">then</span></span>
<span id="cb10-54"><a href="#cb10-54" aria-hidden="true" tabindex="-1"></a>    <span class="cf">return</span> <span class="kw">nil</span></span>
<span id="cb10-55"><a href="#cb10-55" aria-hidden="true" tabindex="-1"></a>  <span class="cf">end</span></span>
<span id="cb10-56"><a href="#cb10-56" aria-hidden="true" tabindex="-1"></a>  <span class="co">-- *a or *all reads the whole file</span></span>
<span id="cb10-57"><a href="#cb10-57" aria-hidden="true" tabindex="-1"></a>  <span class="kw">local</span> content <span class="op">=</span> file<span class="op">:</span><span class="fu">read</span> <span class="st">"*a"</span></span>
<span id="cb10-58"><a href="#cb10-58" aria-hidden="true" tabindex="-1"></a>  file<span class="op">:</span><span class="fu">close</span><span class="op">()</span></span>
<span id="cb10-59"><a href="#cb10-59" aria-hidden="true" tabindex="-1"></a>  <span class="cf">return</span> content</span>
<span id="cb10-60"><a href="#cb10-60" aria-hidden="true" tabindex="-1"></a><span class="cf">end</span></span>
<span id="cb10-61"><a href="#cb10-61" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb10-62"><a href="#cb10-62" aria-hidden="true" tabindex="-1"></a><span class="cf">if</span> <span class="cn">FORMAT</span><span class="op">:</span><span class="fu">match</span> <span class="st">'html'</span> <span class="cf">then</span></span>
<span id="cb10-63"><a href="#cb10-63" aria-hidden="true" tabindex="-1"></a><span class="co">-- Convert Math El -&gt; DVI via latex --</span></span>
<span id="cb10-64"><a href="#cb10-64" aria-hidden="true" tabindex="-1"></a><span class="kw">function</span> exec_math<span class="op">(</span>elem<span class="op">)</span></span>
<span id="cb10-65"><a href="#cb10-65" aria-hidden="true" tabindex="-1"></a>  <span class="cf">if</span> <span class="fu">string.find</span><span class="op">(</span>elem<span class="op">.</span>text<span class="op">,</span> <span class="st">"chemfig"</span><span class="op">)</span> <span class="kw">or</span> elem<span class="op">.</span>mathtype <span class="op">==</span> <span class="st">"DisplayMath"</span> <span class="cf">then</span></span>
<span id="cb10-66"><a href="#cb10-66" aria-hidden="true" tabindex="-1"></a>    <span class="cf">return</span> convert_svg<span class="op">(</span>elem<span class="op">,</span> elem<span class="op">.</span>mathtype<span class="op">)</span></span>
<span id="cb10-67"><a href="#cb10-67" aria-hidden="true" tabindex="-1"></a>  <span class="cf">end</span></span>
<span id="cb10-68"><a href="#cb10-68" aria-hidden="true" tabindex="-1"></a>  <span class="cf">return</span> elem</span>
<span id="cb10-69"><a href="#cb10-69" aria-hidden="true" tabindex="-1"></a><span class="kw">end</span></span>
<span id="cb10-70"><a href="#cb10-70" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb10-71"><a href="#cb10-71" aria-hidden="true" tabindex="-1"></a><span class="kw">function</span> exec_codeblock<span class="op">(</span>elem<span class="op">)</span></span>
<span id="cb10-72"><a href="#cb10-72" aria-hidden="true" tabindex="-1"></a>  <span class="cf">if</span> elem<span class="op">.</span>classes<span class="op">[</span><span class="dv">1</span><span class="op">]</span> <span class="op">==</span> <span class="st">"latex"</span> <span class="cf">then</span></span>
<span id="cb10-73"><a href="#cb10-73" aria-hidden="true" tabindex="-1"></a>    <span class="cf">return</span> convert_svg<span class="op">(</span>elem<span class="op">,</span> <span class="st">"CodeBlock"</span><span class="op">)</span></span>
<span id="cb10-74"><a href="#cb10-74" aria-hidden="true" tabindex="-1"></a>  <span class="cf">end</span></span>
<span id="cb10-75"><a href="#cb10-75" aria-hidden="true" tabindex="-1"></a>  <span class="cf">return</span> elem</span>
<span id="cb10-76"><a href="#cb10-76" aria-hidden="true" tabindex="-1"></a><span class="kw">end</span></span>
<span id="cb10-77"><a href="#cb10-77" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb10-78"><a href="#cb10-78" aria-hidden="true" tabindex="-1"></a><span class="kw">function</span> convert_svg<span class="op">(</span>elem<span class="op">,</span> <span class="fu">type</span><span class="op">)</span></span>
<span id="cb10-79"><a href="#cb10-79" aria-hidden="true" tabindex="-1"></a>  <span class="kw">local</span> hex_value <span class="op">=</span> pandoc<span class="op">.</span>utils<span class="op">.</span>sha1<span class="op">(</span>elem<span class="op">.</span>text<span class="op">)</span></span>
<span id="cb10-80"><a href="#cb10-80" aria-hidden="true" tabindex="-1"></a>  <span class="kw">local</span> filename <span class="op">=</span> <span class="st">".texsvg/texsvg-"</span> <span class="op">..</span> hex_value <span class="op">..</span> <span class="st">".svg"</span></span>
<span id="cb10-81"><a href="#cb10-81" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb10-82"><a href="#cb10-82" aria-hidden="true" tabindex="-1"></a>  <span class="cf">if</span> <span class="kw">not</span> isdir<span class="op">(</span><span class="st">".texsvg"</span><span class="op">)</span> <span class="cf">then</span></span>
<span id="cb10-83"><a href="#cb10-83" aria-hidden="true" tabindex="-1"></a>    <span class="fu">os.execute</span><span class="op">(</span><span class="st">"mkdir .texsvg"</span><span class="op">)</span></span>
<span id="cb10-84"><a href="#cb10-84" aria-hidden="true" tabindex="-1"></a>  <span class="cf">end</span></span>
<span id="cb10-85"><a href="#cb10-85" aria-hidden="true" tabindex="-1"></a>  <span class="co">-- Check if it's generated previously --</span></span>
<span id="cb10-86"><a href="#cb10-86" aria-hidden="true" tabindex="-1"></a>  <span class="cf">if</span> exists<span class="op">(</span>filename<span class="op">)</span> <span class="cf">then</span></span>
<span id="cb10-87"><a href="#cb10-87" aria-hidden="true" tabindex="-1"></a>    cleanup<span class="op">()</span></span>
<span id="cb10-88"><a href="#cb10-88" aria-hidden="true" tabindex="-1"></a>    <span class="fu">print</span><span class="op">(</span><span class="st">"Using previously generated svg"</span><span class="op">)</span></span>
<span id="cb10-89"><a href="#cb10-89" aria-hidden="true" tabindex="-1"></a>    <span class="cf">return</span> output<span class="op">(</span>elem<span class="op">,</span> read_file<span class="op">(</span>filename<span class="op">),</span> hex_value<span class="op">)</span></span>
<span id="cb10-90"><a href="#cb10-90" aria-hidden="true" tabindex="-1"></a>  <span class="cf">end</span></span>
<span id="cb10-91"><a href="#cb10-91" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb10-92"><a href="#cb10-92" aria-hidden="true" tabindex="-1"></a>  <span class="co">-- Combine latex source code --</span></span>
<span id="cb10-93"><a href="#cb10-93" aria-hidden="true" tabindex="-1"></a>  <span class="kw">local</span> mathEq <span class="op">=</span> default_preamble <span class="op">..</span> begin_statement <span class="op">..</span> elem<span class="op">.</span>text <span class="op">..</span> ending_statement</span>
<span id="cb10-94"><a href="#cb10-94" aria-hidden="true" tabindex="-1"></a>  <span class="co">-- Make latex with `latex` --</span></span>
<span id="cb10-95"><a href="#cb10-95" aria-hidden="true" tabindex="-1"></a>  <span class="kw">local</span> tex <span class="op">=</span> <span class="fu">io.open</span><span class="op">(</span><span class="st">"input.tex"</span><span class="op">,</span> <span class="st">"w"</span><span class="op">)</span></span>
<span id="cb10-96"><a href="#cb10-96" aria-hidden="true" tabindex="-1"></a>  tex<span class="op">:</span><span class="fu">write</span><span class="op">(</span>mathEq<span class="op">)</span></span>
<span id="cb10-97"><a href="#cb10-97" aria-hidden="true" tabindex="-1"></a>  tex<span class="op">:</span><span class="fu">close</span><span class="op">()</span></span>
<span id="cb10-98"><a href="#cb10-98" aria-hidden="true" tabindex="-1"></a>  <span class="fu">os.execute</span><span class="op">(</span><span class="st">"latex input.tex"</span><span class="op">)</span></span>
<span id="cb10-99"><a href="#cb10-99" aria-hidden="true" tabindex="-1"></a>  <span class="co">-- Convert dvi to svg and optimize the output svg --</span></span>
<span id="cb10-100"><a href="#cb10-100" aria-hidden="true" tabindex="-1"></a>  <span class="fu">os.execute</span><span class="op">(</span><span class="st">"dvisvgm --no-fonts input.dvi -o "</span> <span class="op">..</span> filename <span class="op">..</span> <span class="st">" &amp;&amp; svgo "</span> <span class="op">..</span> filename<span class="op">)</span></span>
<span id="cb10-101"><a href="#cb10-101" aria-hidden="true" tabindex="-1"></a>  cleanup<span class="op">()</span></span>
<span id="cb10-102"><a href="#cb10-102" aria-hidden="true" tabindex="-1"></a>  <span class="cf">return</span> output<span class="op">(</span><span class="fu">type</span><span class="op">,</span> read_file<span class="op">(</span>filename<span class="op">),</span> hex_value<span class="op">)</span></span>
<span id="cb10-103"><a href="#cb10-103" aria-hidden="true" tabindex="-1"></a><span class="kw">end</span></span>
<span id="cb10-104"><a href="#cb10-104" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb10-105"><a href="#cb10-105" aria-hidden="true" tabindex="-1"></a><span class="kw">function</span> output<span class="op">(</span><span class="fu">type</span><span class="op">,</span> svg<span class="op">,</span> hex_value<span class="op">)</span></span>
<span id="cb10-106"><a href="#cb10-106" aria-hidden="true" tabindex="-1"></a>  <span class="cf">return</span> pandoc<span class="op">.</span>RawInline<span class="op">(</span><span class="st">'html'</span><span class="op">,</span></span>
<span id="cb10-107"><a href="#cb10-107" aria-hidden="true" tabindex="-1"></a>    <span class="fu">type</span> <span class="op">==</span> <span class="st">"InlineMath"</span> <span class="kw">and</span> <span class="st">"&lt;span class='math latex inline' data-sha1='"</span> <span class="op">..</span> hex_value <span class="op">..</span> <span class="st">"'&gt;"</span> <span class="op">..</span> svg <span class="op">..</span></span>
<span id="cb10-108"><a href="#cb10-108" aria-hidden="true" tabindex="-1"></a>      <span class="st">"&lt;/span&gt;"</span> <span class="kw">or</span> <span class="st">"&lt;p class='math latex display' data-sha1='"</span> <span class="op">..</span> hex_value <span class="op">..</span> <span class="st">"'&gt;"</span> <span class="op">..</span> svg <span class="op">..</span> <span class="st">"&lt;/p&gt;"</span><span class="op">)</span></span>
<span id="cb10-109"><a href="#cb10-109" aria-hidden="true" tabindex="-1"></a><span class="kw">end</span></span>
<span id="cb10-110"><a href="#cb10-110" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb10-111"><a href="#cb10-111" aria-hidden="true" tabindex="-1"></a><span class="kw">function</span> cleanup<span class="op">()</span></span>
<span id="cb10-112"><a href="#cb10-112" aria-hidden="true" tabindex="-1"></a>  <span class="co">-- Clean up directory --</span></span>
<span id="cb10-113"><a href="#cb10-113" aria-hidden="true" tabindex="-1"></a>  <span class="cf">for</span> <span class="cn">_</span><span class="op">,</span> name <span class="kw">in</span> <span class="fu">ipairs</span><span class="op">(&#123;</span><span class="st">"input.tex"</span><span class="op">,</span> <span class="st">"input.aux"</span><span class="op">,</span> <span class="st">"input.dvi"</span><span class="op">,</span> <span class="st">"input.log"</span><span class="op">&#125;)</span> <span class="cf">do</span></span>
<span id="cb10-114"><a href="#cb10-114" aria-hidden="true" tabindex="-1"></a>    <span class="fu">print</span><span class="op">(</span><span class="st">"Deleting "</span> <span class="op">..</span> name<span class="op">)</span></span>
<span id="cb10-115"><a href="#cb10-115" aria-hidden="true" tabindex="-1"></a>    <span class="fu">os.remove</span><span class="op">(</span>name<span class="op">)</span></span>
<span id="cb10-116"><a href="#cb10-116" aria-hidden="true" tabindex="-1"></a>  <span class="cf">end</span></span>
<span id="cb10-117"><a href="#cb10-117" aria-hidden="true" tabindex="-1"></a><span class="kw">end</span></span>
<span id="cb10-118"><a href="#cb10-118" aria-hidden="true" tabindex="-1"></a><span class="cf">end</span></span>
<span id="cb10-119"><a href="#cb10-119" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb10-120"><a href="#cb10-120" aria-hidden="true" tabindex="-1"></a><span class="cf">return</span> <span class="op">&lt;</span>!<span class="co">--swig￼1--&gt;</span></span></code></pre></div>]]></content>
      <categories>
        <category>Computer Science</category>
        <category>Pandoc</category>
        <category>Filter</category>
      </categories>
      <tags>
        <tag>Computer Science</tag>
        <tag>Pandoc</tag>
        <tag>Lua</tag>
      </tags>
  </entry>
  <entry>
    <title>光的干涉、衍射、偏振与激光</title>
    <url>/2022/03/08/physics/High%20School/S4%20Optics/P2%20%E5%85%89%E7%9A%84%E5%B9%B2%E6%B6%89%E3%80%81%E8%A1%8D%E5%B0%84%E3%80%81%E5%81%8F%E6%8C%AF%E4%B8%8E%E6%BF%80%E5%85%89/</url>
    <content><![CDATA[Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
<h2 id="课程标准">课程标准</h2>
<h3 id="课程标准内容">课程标准内容</h3>
<h4 id="光及其应用">1.3 光及其应用</h4>
<blockquote>
<p>1.3.3
观察光的干涉、衍射和偏振现象，了解这些现象产生的条件，知道其在生产生活中的应用。知道光是横波，会用双缝干涉实验测量光的波长。</p>
<p>例3
演示双缝干涉和单缝衍射现象，观察双缝干涉和单缝衍射图样，并以此说明光具有波的性质。</p>
<p>例4
利用生活中的器材设计实验，观察光的薄膜干涉现象，讨论薄膜干涉的原因。</p>
</blockquote>
<p>​
本条目要求学生：通过观察日常生活中的现象和演示实验，了解光的干涉、衍射和偏振现象，知道光是一种波，进一步认识光的本性。在教学过程中，对学生要强调重视实验和自然现象，注重观察事实，加强基于证据的抽象思维能力的培养。知道双缝干涉产生稳定干涉图样的原因，知道何处呈现亮条纹，何处呈现暗条纹，知道只有频率相同的两种光波才能发生干涉现象，并建立相干光的概念。知道在狭缝间距和狭缝与屏之间的距离不变的条件下，不同颜色的光产生的双缝干涉条纹间距不同，光的波长越长，干涉条纹的间距越大。知道双缝干涉实验中，相邻两条亮纹或暗纹的间距与狭缝间距、狭缝与屏的间距、波长之间的定量关系。应用双缝干涉实验进行探究，测量光的波长，并利用不同的色光，观察干涉条纹间距的变化，求出相应的波长。</p>
<p>​
结合演示实验和日常生活中的现象，观察、了解光的薄膜干涉现象。例如，应用肥皂液膜的干涉、两片玻璃之间的空气薄膜的干涉、相机镜头增透膜的干涉等，讨论薄膜干涉的原理。</p>
<p>​
通过演示实验理解产生光的衍射现象的条件，知道只有当障碍物或孔、缝的大小比光的波长小或与光的波长相近时，才能观察到明显的衍射现象。知道“光沿直线传播”是宏观观察的结果。</p>
<p>​
可以自己动手做实验观察衍射现象。利用两支铅笔、打有小孔的铝箔或胶片、刀片、羽毛、纱巾等观察发光的光源或灯丝，丰富对衍射现象的感性认识。通过阅读“泊松亮斑”的材料，了解光的波动理论的发展历史，体会在科学研究中必须重视理论指导和实践检验的作用。</p>
<p>​
通过实验认识光的偏振。可以从机械波开始了解光的偏振现象，知道只有横波才能产生偏振现象，进如深对光的波动性的认识。了解偏振现象在生产生活中的应用。可以通过立体电影体振现象的应用，增强学习的兴趣。</p>
<blockquote>
<p>1.3.4
通过实验，了解激光的特性。能举例说明激光技术在生产生活中的应用。</p>
</blockquote>
<p>​
本条目要求学生：对激光有初步的了解。通过演示实验，了解激光是单色性好、平行度高、亮度高的相干光，它可以在很短的时间和很小的空间集中很大的能量。</p>
<p>​
了解激光技术在生产生活中的应用，可以结合最新的科技成果并联系学生的实际进行介绍，开阔学生的视野。了解全息照相的应用及原理，通过演示实验或视频观察全息照相，体会激光的应用。</p>
<h4 id="教学活动要求">教学活动要求</h4>
<ol type="1">
<li>通过调查研究，收集光的偏振现象应用的实例。</li>
<li>观看 3D 电影，查阅资料，了解 3D 电影的原理。</li>
</ol>
<h2 id="知识聚焦">知识聚焦</h2>
<h3 id="一光的干涉">一、光的干涉</h3>
<h4 id="光的干涉">1. 光的干涉</h4>
<p>​ 因为光是一种横波，能够发生机械波的干涉现象。1801
年，英国物理学家托马斯-杨成功地观察到了光的干涉现象，==证明了光的波动性==。</p>
<p>​ 让一束单色光光投射到一个有两条狭缝 <span class="math inline"><em>S</em><sub>1</sub></span> 和<span class="math inline"><em>S</em><sub>2</sub></span> 的挡板上，狭缝<span class="math inline"><em>S</em><sub>1</sub></span> 和 <span class="math inline"><em>S</em><sub>2</sub></span>
相距很近。狭缝就成了两个波源，它们的频率、相位和振动方向总是相同的。这两个波源发出的光在挡板后面的空间互相叠加，发生干涉现象：来自两个光源的光在一些位置相互加强，在另一些位置相互削弱，因此在挡板后面的屏上得到明暗相间的条纹。</p>
<figure>
<img src="https://raw.githubusercontent.com/PassionPenguin/picgo-database/main/image-20220309003106783.png" alt="image-20220309003106783">
<figcaption aria-hidden="true">image-20220309003106783</figcaption>
</figure>
<figure>
<img src="https://raw.githubusercontent.com/PassionPenguin/picgo-database/main/image-20220309003117796.png" alt="image-20220309003117796">
<figcaption aria-hidden="true">image-20220309003117796</figcaption>
</figure>
<p>​
==当两个光源与屏上某点的距离之差等于半波长的偶数倍时（即恰好等于波长的整数倍时），两列光波在这点相互加强，这里出现亮条纹；当两个光源与屏上某点的距离之差等于半波长的奇数倍时，两列光波在这点相互削弱，这里出现暗条纹。==</p>
<blockquote>
<h4 id="推导相邻亮暗干涉条纹距离与波长关系">推导相邻亮/暗干涉条纹距离与波长关系</h4>
<figure>
<img src="https://raw.githubusercontent.com/PassionPenguin/picgo-database/main/image-20220309003320089.png" alt="image-20220309003320089">
<figcaption aria-hidden="true">image-20220309003320089</figcaption>
</figure>
<p>​ 波长为 <span class="math inline"><em>λ</em></span>
的单色光照射到双缝上。两缝中心之间的距离为 <span class="math inline"><em>d</em></span>，两缝 <span class="math inline"><em>S</em><sub>1</sub></span>、<span class="math inline"><em>S</em><sub>2</sub></span>
的连线的中垂线与屏的交点为 <span class="math inline"><em>P</em><sub>0</sub></span>，双缝到屏的距离 <span class="math inline"><em>O</em><em>P</em><sub>0</sub> = <em>l</em></span>。</p>
<p>​ 我们考察屏上与 <span class="math inline"><em>P</em><sub>0</sub></span> 的距离为 <span class="math inline"><em>x</em></span> 的一点 <span class="math inline"><em>P</em><sub>1</sub></span> ，两缝与 <span class="math inline"><em>P</em><sub>1</sub></span> 的距离分别为 <span class="math inline"><em>P</em><sub>1</sub><em>S</em><sub>1</sub> = <em>r</em><sub>1</sub></span>、<span class="math inline"><em>P</em><sub>1</sub><em>S</em><sub>2</sub> = <em>r</em><sub>2</sub></span>。</p>
<p>​ 在线段 <span class="math inline"><em>P</em><sub>1</sub><em>S</em><sub>2</sub></span>
上作 <span class="math inline"><em>P</em><sub>1</sub><em>M</em> = <em>P</em><sub>1</sub><em>S</em><sub>1</sub></span>，于是，<span class="math inline"><em>S</em><sub>2</sub><em>M</em> = <em>r</em><sub>2</sub>－<em>r</em><sub>1</sub></span>。由于两缝之间的距离
<span class="math inline"><em>d</em></span> 远远小于缝到屏的距离 <span class="math inline"><em>l</em></span>，所以，能够认为 <span class="math inline"><em>Δ</em><em>S</em><sub>1</sub><em>S</em><sub>2</sub><em>M</em></span>
是直角三角形。</p>
<p>​ 根据三角函数的关系有： <span class="math display">$$
$r_2 - r_1 = d\sin{\theta}$\\
$x = l\tan{\theta} \approx l\sin{\theta}$
$$</span> ​ 消去 <span class="math inline">sin <em>θ</em></span>，有：
<span class="math display">$$
\notag\begin{align}
r_2 - r_1 = d\frac{x}{l}
\end{align}
$$</span> ​ 根据上一节的分析，当两列波的路程差为波长的整数倍，即 <span class="math inline"><em>d</em> = <em>n</em><em>λ</em>, (<em>n</em>=0，±1，±2⋯)</span>
时出现亮条纹，也就是说，亮条纹中心的位置为： <span class="math display">$$
\notag\begin{align}
x = n\frac{l}{d}\lambda
\end{align}
$$</span> ​ 相邻两个亮条纹或暗条纹的中心间距是 <span class="math display">$$
\notag\begin{align}
\Delta x = n\frac{l}{d}\lambda
\end{align}
$$</span> ​ 根据这个关系式可以测出波长。</p>
</blockquote>
<h4 id="薄膜干涉">2. 薄膜干涉</h4>
<p>​ 来自两个面的反射光相互叠加，发生干涉，也称薄膜干涉。</p>
<p>​
通常而言，不同位置的液膜，厚度不同，因此在膜上不同的位置，来自前后两个面的反射光（即图中的实线和虚线波形代表的两列光）的路程差不同。在某些位置，这两列波叠加后相互加强，出现了亮条纹；在另一些位置，叠加后相互削弱，出现了暗条纹。</p>
<figure>
<img src="https://raw.githubusercontent.com/PassionPenguin/picgo-database/main/image-20220309004334748.png" alt="image-20220309004334748">
<figcaption aria-hidden="true">image-20220309004334748</figcaption>
</figure>
<h4 id="实验用双缝干涉测量光的波长-exp-用双缝干涉测量光的波长">3.
实验：用双缝干涉测量光的波长 | #exp-用双缝干涉测量光的波长</h4>
<h5 id="一实验原理">一、实验原理</h5>
<p>​ 利用干涉条纹间距与光的波长之间的关系 <span class="math inline">$\Delta x =
\dfrac{l}{d}\lambda$</span>，导出光的波长计算式为 <span class="math inline">$\lambda = \dfrac{d}{l}\Delta x$</span>。</p>
<h5 id="二实验思路">二、实验思路</h5>
<p>​
光源发出的光经滤光片（装在单缝前）成为单色光，把单缝照亮。单缝相当于一个线光源，它又把双缝照亮。来自双缝的光在双缝右边的空间发生干涉。遮光筒的一端装有毛玻璃屏，我们可以在这个屏上观察到干涉条纹，并由实验原理计算出光的波长。透镜的作用是使射向单缝的光更集中。</p>
<figure>
<img src="https://raw.githubusercontent.com/PassionPenguin/picgo-database/main/image-20220309005527811.png" alt="image-20220309005527811">
<figcaption aria-hidden="true">image-20220309005527811</figcaption>
</figure>
<h5 id="三实验操作">三、实验操作</h5>
<ol type="1">
<li>实验前先取下双缝，打开光源，调节光源的高度和角度，使它发出的光束沿着遮光筒的轴线把屏照亮。然后放好单缝和双缝。注意使单缝与双缝相互平行，尽量使缝的中点位于遮光筒的轴线上。</li>
<li>做好以上调整后，在单缝与光源之间放上滤光片就可以观察到单色光的双缝干涉图样。</li>
<li>测量双缝到屏的距离 <span class="math inline"><em>l</em></span>
和相邻两条亮条纹间的距离 <span class="math inline"><em>Δ</em><em>x</em></span>。</li>
<li>分别改变滤光片的颜色和双缝的距离，观察干涉条纹的变化，并求出相应的波长。</li>
</ol>
<h5 id="四测量物理量">四、测量物理量</h5>
<p>​ 根据实验原理，本实验需要测量的物理量为双缝到屏的距离 <span class="math inline"><em>l</em></span>、相邻两条亮条纹之间的距离 <span class="math inline"><em>Δ</em><em>x</em></span>（已知双缝间距 <span class="math inline"><em>d</em></span>）。</p>
<h5 id="五误差控制">五、误差控制</h5>
<ol type="1">
<li>测出 <span class="math inline"><em>n</em></span> 个亮条纹之间的距离
<span class="math inline"><em>a</em></span>，再求相邻两个条纹之间的距离
<span class="math inline">$\Delta x=\dfrac{a}{n-1}$</span>。</li>
<li>多次测量取平均值。</li>
</ol>
<h3 id="二光的衍射与偏振激光现象">二、光的衍射与偏振，激光现象</h3>
<h4 id="光的衍射">1. 光的衍射</h4>
<p>​
在挡板上安装一个宽度可调的狭缝，缝后放一个光屏。用单色平行光照射狭缝，我们看到，当缝比较宽时，光沿着直线通过狭缝，在屏上产生一条与缝宽相当的亮条纹。但是，当缝调到很窄时，尽管亮条纹的亮度有所降低，但是宽度反而增大了，而且还出现了明暗相间的条纹。</p>
<figure>
<img src="https://raw.githubusercontent.com/PassionPenguin/picgo-database/main/image-20220309004528649.png" alt="image-20220309004528649">
<figcaption aria-hidden="true">image-20220309004528649</figcaption>
</figure>
<p>​
这表明，==光没有沿直线传播==（<strong>光沿直线传播只是一般性的经验总结</strong>），它绕过了缝的边缘，传播到了相当宽的地方。这就是光的衍射现象。如图，在一次实验中拍摄的屏上亮条纹的照片，上图的狭缝较窄，衍射后在屏上产生的中央亮条纹较宽。</p>
<figure>
<img src="https://raw.githubusercontent.com/PassionPenguin/picgo-database/main/image-20220309004539665.png" alt="image-20220309004539665">
<figcaption aria-hidden="true">image-20220309004539665</figcaption>
</figure>
<p>​
如果用白光做上述实验，得到的条纹是彩色的，因为白光中包含了各种颜色的光，衍射时不同色光的亮条纹的位置不同，于是各种色光就区分开了。</p>
<p>​
在单缝衍射和圆孔衍射的照片中，都有一些亮条纹和暗条纹。这是由于来自单缝或圆孔上不同位置的光，通过缝或孔之后叠加时加强或者削弱的结果。各种不同形状的障碍物都能使光发生衍射，致使影的轮廓模糊不清，出现明暗相间的条纹。</p>
<h4 id="光的偏振">2. 光的偏振</h4>
<p>​
波分为纵波和横波。在纵波中，各点的振动方向总与波的传播方向在同一直线上。在横波中，各点的振动方向总与波的传播方向垂直。</p>
<p>​
不同的横波，即使传播方向相同，振动方向也可能是不同的。这个现象称为“偏振现象”。例如，一列沿水平方向传播的横波，既可能沿上下方向振动，也可能沿左右方向振动，还可能沿其他“斜”的方向振动。横波的振动方向称为“偏振方向”。</p>
<figure>
<img src="https://raw.githubusercontent.com/PassionPenguin/picgo-database/main/image-20220309004735539.png" alt="image-20220309004735539">
<figcaption aria-hidden="true">image-20220309004735539</figcaption>
</figure>
<figure>
<img src="https://raw.githubusercontent.com/PassionPenguin/picgo-database/main/image-20220309004748215.png" alt="image-20220309004748215">
<figcaption aria-hidden="true">image-20220309004748215</figcaption>
</figure>
<p>​
太阳以及日光灯、发光二极管等普通光源发出的光，包含着在垂直于传播方向上沿一切方向振动的光，而且沿着各个方向振动的光波的强度都相同。这种光是“<strong>自然光</strong>”。</p>
<p>​ 自然光在通过偏振片 <span class="math inline"><em>P</em></span>
时，只有振动方向与偏振片的透振方向一致的光波才能顺利通过。也就是说，通过偏振片
<span class="math inline"><em>P</em></span>
的光波，在垂直于传播方向的平面上，沿着某个特定的方向振动。这种光叫作<strong>偏振光</strong>。</p>
<figure>
<img src="https://raw.githubusercontent.com/PassionPenguin/picgo-database/main/image-20220309004858520.png" alt="image-20220309004858520">
<figcaption aria-hidden="true">image-20220309004858520</figcaption>
</figure>
<h4 id="激光">3. 激光</h4>
<p>​ 1960
年，美国物理学家梅曼率先在实验室中制造出了传播方向、偏振、相位等性质完全相同的光波，这就是<strong>激光</strong>。激光的特性有很多：</p>
<ol type="1">
<li>激光具有<strong>很好的平行度</strong>，可以进行精确的测距，提供精确的目标指引。</li>
<li>激光的<strong>亮度很高（能量很高）</strong>，可以用于医学的激光刀，用于机械加工中的激光切割、焊接。</li>
<li>激光可以作为光源研究光谱，分析分子运动与化学反应过程，制作高精度光钟。</li>
<li>激光具有相干性，可以完成各种与干涉相关的实验，应用与生活。</li>
<li>激光可以被调制，用于传递信息。</li>
<li>激光可以发生偏振，用于投放 3D 电影等。</li>
</ol>]]></content>
      <categories>
        <category>High School</category>
        <category>Physics</category>
        <category>Optics</category>
      </categories>
      <tags>
        <tag>School Notes</tag>
        <tag>High School</tag>
        <tag>Physics</tag>
      </tags>
  </entry>
  <entry>
    <title>植物组织培养：实验设备和培养条件</title>
    <url>/2022/03/06/biology/Tissue%20culture%20of%20plant%20by%20HZAU/Chapter%202%20Equipment%20and%20Requirements/</url>
    <content><![CDATA[Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
<h2 id="目录与学习目标">目录与学习目标</h2>
<p>​ 本章分为如下部分：</p>
<pre class="template:contents"><code>[[self], 培养室的组成]
[[self], 设备和器材]
[[self], 培养条件]</code></pre>
<h2 id="一培养室的组成">一、培养室的组成</h2>
<p>​ 植物组织培养实验室由如下基本部分组成：</p>
<ol type="1">
<li>无菌室；</li>
<li>化学实验室；</li>
<li>培养室；</li>
<li>细胞学实验室（园艺植物快速繁殖：更改为准备车间）；</li>
<li>洗涤室；</li>
<li>准备室；</li>
</ol>
<h3 id="无菌室">1. 无菌室</h3>
<h4 id="无菌室功用与要求">无菌室功用与要求</h4>
<p>​
<strong>无菌室</strong>==是进行材料的分离、接种和培养体的转移的一个重要操作室==。</p>
<p>​ 无菌室接种室<strong>宜小不宜大</strong>，一般 7~8 <span class="math inline"><em>m</em><sup>2</sup></span> （10~20 <span class="math inline"><em>m</em><sup>2</sup></span>）即可，其规模根据实验需要和环境控制的难易程度而定。可以用板材和玻璃建造。没有条件建设无菌室的，可以采用隔离间作为接种室。</p>
<p>​
无菌室外要设一个<strong>缓冲间</strong>，错开门向，==以免气流带进杂菌==。基本要求如下：</p>
<ol type="1">
<li>室内密闭，空气不流动，面积 7~8 <span class="math inline"><em>m</em><sup>2</sup></span>
；墙壁光滑，地面平坦，要安装紫外灯；</li>
<li>外设预备室：条件有限的，无菌室可用<strong>无菌箱</strong>代替；</li>
<li>无菌工作台：根据风幕形成的方式，分为二种：
<ol type="1">
<li>垂直式超净工作台（vertical flow clean
bench）；原理是室内空气经预过滤器初滤，由小型离心风机压入静压箱，再经空气高效过滤器二级过滤，以形成无菌的高洁净的工作环境。</li>
<li>水平式超净工作台（horizontal flow clean
bench）；水平流工作台噪音比较小，风向往外所以多用在植物组织培养操作，对身体健康影响不大。</li>
</ol></li>
</ol>
<h4 id="保证无菌室良好条件的方法">保证无菌室良好条件的方法</h4>
<ol type="1">
<li><p>福尔马林和高锰酸钾薰蒸；</p>
<p>①按照甲醛（40 %）<span class="math inline">10<em>m</em><em>L</em>/<em>m</em><sup>3</sup></span>
、高锰酸钾 <span class="math inline">5<em>g</em>/<em>m</em><sup>3</sup></span>
计算用量。比例为 2:1
；②盛药容器要耐热、耐腐蚀：一般用陶瓷或玻璃容器；③房间要密闭，这样熏蒸效果才好；④容器应靠近门，操作人员迅速撤离；先将温水倒入容器内，后加入高锰酸钾，搅拌均匀；再加入甲醛；加入甲醛后人立即离开，密闭房间。注意顺序：是将甲醛倒入高锰酸钾溶液内。⑤消毒时间一般为
20-30 min。⑥消毒后要打开门窗通风换气。</p></li>
<li><p>工作台用 75%乙醇擦净；</p></li>
<li><p>紫外灯照射物品材料；</p></li>
</ol>
<blockquote>
<h3 id="甲醛与福尔马林">甲醛与福尔马林</h3>
<p>​ 福尔马林（英语：Formalin），是甲醛含量为 35%至 40%（重量百分比为
37%；体积百分比为 40%）的水溶液，也加入 10%～
15%的甲醇防止聚合。具有防腐、消毒和漂白的功能，不同领域各有其作用，但福尔马林会散发出刺鼻的气味。甲醛被国际癌症研究中心（IARC）列为明确人类致癌物质，影响人体健康。<span class="citation" data-cites="WikipediaZH_Formalin">[@WikipediaZH_Formalin]</span></p>
</blockquote>
<h4 id="无菌室操作规程">无菌室操作规程</h4>
<ol type="1">
<li>接种室内使用前，打开超净台风机和紫外灯，照射杀菌 15-30mins。</li>
<li>也可以使用紫外线照射灭菌：在无菌箱中或超净工作台上装一支 30
瓦的紫外线灯管，操作之前，每次开 20~30
min，就能达到空间杀菌的目的。</li>
<li>穿上工作服及无菌工作帽、鞋，用洗手液洗手。进人接种室后，用 75
％乙醇在工作台空间内喷雾消毒。</li>
<li>接种操作前，用 75 ％的酒精棉球擦手。</li>
<li>操作时，注意安全。如棉塞着火，用手紧握即可熄灭。</li>
<li>工作结束后，将台面收拾干净，不留残物。</li>
</ol>
<h3 id="化学实验室">2. 化学实验室</h3>
<h4 id="化学实验室的功用">化学实验室的功用</h4>
<p>​
<strong>化学实验室</strong>==是配制培养基，存放药品等的场所==。备有：</p>
<ol type="1">
<li>无机盐、维生素、氨基酸、糖类、琼脂、生长调节剂；（化学药品）</li>
<li>试管、三角瓶、烧杯、量筒、吸管、试剂瓶等；（玻璃器皿）</li>
<li>普通天平、分析天平；</li>
<li>冰箱（放母液）、水浴锅、过滤装置、酸度计；</li>
<li>蒸馏器；</li>
<li>加热装置。</li>
</ol>
<h4 id="工具">工具</h4>
<ol type="1">
<li>培养容器：
<ol type="1">
<li>容器：试管、柱形瓶、长方形培养盒、锥形瓶；</li>
<li>材质：玻璃、PC 材料、聚丙烯塑料；</li>
</ol></li>
<li>量具：移液管、移液器、一次性吸管、枪头；</li>
<li>容器、量器：细口瓶、刻度烧杯和量筒；</li>
<li>杂项：带滤膜的瓶盖、牛皮纸、棉塞、塑料泡沫盖；</li>
</ol>
<h3 id="培养室">3. 培养室</h3>
<h4 id="培养室的功用">培养室的功用</h4>
<p>​
<strong>培养室</strong>==是对接种好培养材料的试管进行培养生长的场所==，以<strong>利用空间和节能为原则</strong>。培养室中的工具包括培养架、白炽灯、控温器、定时器、光照培养箱。</p>
<p>​ 培养架分为 4~5 层，总高 1.7~2.0m，每层装日光灯， 40w，L＝ 1.3 m 或
30w，L＝ 1m。</p>
<h4 id="培养室环境要求">培养室环境要求</h4>
<p>​ 培养室最重要的是==保持一定的温度条件， 20~27
℃左右==。室内湿度也要求恒定。要求 70~80
%的相对湿度（通过电热器、立式电炉、继电器、控温仪、空调、调温调湿机等进行控制）。</p>
<p>​ 组织培养的光照强度一般在 1000~5000Lux，每天 10~16
h，或者连续光照。</p>
<h3 id="细胞学实验室">4. 细胞学实验室</h3>
<p>​
<strong>细胞学实验室</strong>==是观察、记录培养生长情况及结果的场所==，备有显微镜、解剖镜、染色设备。</p>
<h3 id="洗涤室">5. 洗涤室</h3>
<p>​
<strong>洗涤室</strong>用于==完成玻璃器皿和实验用具的洗涤、干燥和贮存；培养材料的预处理与清洗；组培苗的出瓶、清洗与整理等操作==。</p>
<blockquote>
<h4 id="新玻璃器皿的处理方法">新玻璃器皿的处理方法</h4>
<p>​ 1%
稀盐酸除去无机盐；中性洗涤剂中洗涤，除去有机物、油脂；再用自来水清洗，再用蒸馏水洗
1~2 次。</p>
</blockquote>
<h3 id="准备室">6. 准备室</h3>
<p>​
<strong>准备室</strong>==主要进行玻璃器皿、小用具及培养基灭菌消毒==，备有烘箱、高压灭菌锅、水源、电源或煤气装置。</p>
<h4 id="灭菌条件">灭菌条件</h4>
<ol type="1">
<li>玻璃器皿、小用具采用<strong>干热灭菌法</strong>灭菌， 150 ℃， 1
h；</li>
<li>培养基等采用高压蒸汽灭菌（<strong>湿热灭菌法</strong>），<span class="math inline">1.06<em>k</em><em>g</em>/<em>c</em><em>m</em><sup>2</sup></span>，
121 ℃， 15 min；</li>
<li>蒸馏水高压蒸汽灭菌时间可适当延长， 15-30 min；</li>
</ol>
<blockquote>
<h5 id="灭菌作用取决于温度而不是取决于压力所需要的时间随着要消毒的液体的体积而变化">灭菌作用取决于温度，而不是取决于压力，所需要的时间随着要消毒的液体的体积而变化。</h5>
</blockquote>
<h2 id="二设备与器材">二、设备与器材</h2>
<p>​
植物组织培养实验工具由<strong>玻璃器皿、器械工具、仪器设备</strong>组成。</p>
<h3 id="玻璃器皿">1. 玻璃器皿</h3>
<p>​
植物培养实验工具中的玻璃器皿要求<strong>硬质玻璃、透光度好</strong>。玻璃器皿分为培养器皿、分注器、离心管和其他玻璃器皿。</p>
<ol type="1">
<li>培养器皿：
<ol type="1">
<li>试管：2×15 cm， 2.5×15 cm；</li>
<li>锥形瓶：50 ， 100 ， 250 ， 500 ml；</li>
<li>培养皿：6 ， 9 ， 12 cm；</li>
<li>瓶塞：纱布包棉花，外加牛皮纸，橡皮筋扎住或用塑料盖；</li>
</ol></li>
<li>分注器；</li>
<li>离心管：通过离心将液体培养中的细胞或制备的原生质体从培养基中分离出来，并收集（要加橡皮塞）；</li>
<li>其他玻璃器皿皿：烧杯、量筒、移液管、容量瓶、试剂瓶、称量瓶、玻璃缸及酒精灯，
50~1000 ml， 1 ， 2 ， 5 ， 10 ， 20 ml；</li>
</ol>
<h3 id="器械用具">2. 器械用具</h3>
<ol type="1">
<li><strong>镊子类</strong>：五官科、牙科及钟表镊子，尖端有圆钝、锋利之别。</li>
<li><strong>剪刀类</strong>：眼科：小型；五官科：中型。</li>
<li>解剖刀；</li>
<li><strong>钻孔器</strong>：取肉质基、块茎和肉质根内部组织时使用，T
型，D5~10 mm。</li>
<li>接种针：先端安白金丝或镍丝，烧热后易冷却。</li>
<li><strong>细菌过滤器</strong>：加热易分解的化学物质，不能采用高压灭菌法灭菌，需要使用细菌过滤器。
<ol type="1">
<li>对少量溶液，可采用注射器型，注射器的先端装置灭菌用的漏斗，注射器内放入需灭菌的溶液，加压时就对溶液进行过滤。</li>
<li>吸引型：漏斗下安装流水泵，或真空泵进行抽引，可对较大量的溶液进行过滤。</li>
</ol></li>
<li><strong>5 号、 6 号砂芯玻璃漏斗</strong>：5 号可除去大部分细菌， 6
号可除去全部细菌。</li>
</ol>
<h3 id="仪器设备">3. 仪器设备</h3>
<ol type="1">
<li><strong>恒湿箱（培养箱）</strong>：可调节温和光。</li>
<li><strong>烘箱</strong>：
<ol type="1">
<li>洗净的玻璃器皿加速干燥， 80~100 ℃烘干；</li>
<li>干热灭菌：150 ℃， 1~3 h；</li>
<li>测干重物质重：80 ℃烘干；</li>
</ol></li>
<li>高压灭菌锅：1 <span class="math inline"><em>k</em><em>g</em>/<em>c</em><em>m</em><sup>2</sup></span>、
1.06 <span class="math inline"><em>k</em><em>g</em>/<em>c</em><em>m</em><sup>2</sup></span>
，约 120 ℃，保温 10~15 min。</li>
<li><strong>冰箱</strong>：
<ol type="1">
<li>试剂和母液的贮藏；</li>
<li>细胞组织和试验材料的冷冻保藏；</li>
<li>材料预处理；</li>
</ol></li>
<li><strong>振荡培养机</strong>：用液体培养基培养细胞和愈伤组织时，为改进<span class="math inline">$\ce{O2}$</span>供应，保质培养分散悬浊状况，要进行振荡培养。1
min， 60~120 次（低速）， 120~250 次（高速）。植物细胞组织培养在 100
次/min 左右。</li>
<li><strong>旋转培养机</strong>。</li>
<li><strong>天平</strong> ：天平应安置在干燥，不受振动的固定操作台上；
<ol type="1">
<li>普通天平（感量为 0.1 g）：称大量元素、蔗糖、琼脂等；</li>
<li>分析天平（感量为 0.1 mg）：称大量微量元素、维生素、激素等。</li>
</ol></li>
<li><strong>酸度计</strong>：
<ol type="1">
<li>用前用标准液（pH 7.0 或 4.0）调节；用后电极用蒸馏水冲洗净；</li>
<li>特点：不仅配制培养基时可用，而且也可在培养过程中测定 pH
的变化。</li>
</ol></li>
<li><strong>离心机</strong>：
<ol type="1">
<li>电动离心机（3000~4000
转/min）：用于分离培养基中的细胞和离解细胞壁后的原生质体。</li>
<li>高速冷冻离心机：用于分离酶。</li>
</ol></li>
<li><strong>显微镜</strong>：
<ol type="1">
<li>双筒实体显微镜：在切取茎尖较小组织时用得多， 5~80X；</li>
<li>倒置显微镜：从培养皿底部观察培养物；</li>
<li>相差显微镜：观察到细胞中透明的微细结构及凹凸面；</li>
<li>干涉显微镜：测定各种细胞结构的光程差，据此测定细胞和组织的干重；</li>
<li>电子显微镜：精细结构的观察。</li>
</ol></li>
<li><strong>水浴锅</strong>：难溶解的药品的溶解，琼脂的熔化等，采用单孔、双孔及多孔，不同规格的水浴锅、红外、微波炉、电炉代替使用。</li>
<li><strong>蒸馏水制造装置</strong>：电或煤气式自动蒸馏装置，采用硬质玻璃为更好，得到的蒸馏水再经过无离子制造装置，得到纯度高的蒸馏水。</li>
<li><strong>微波炉</strong>；</li>
<li><strong>电磁炉</strong>；</li>
<li><strong>酒精灯</strong>；</li>
</ol>
<h2 id="三培养条件">三、培养条件</h2>
<p>​
植物组织培养受到<strong>温、光、湿度</strong>各种物理条件，<strong>不同气体、培养基的组成、pH
值、渗透压</strong>等各种化学环境条件，以及培养的<strong>外植体部位、大小、细胞密度</strong>等各种生物环境条件的影响。</p>
<h3 id="物理条件">1. 物理条件</h3>
<h4 id="温度">温度</h4>
<p>​
植物组织培养一般在<strong>密闭保温较好的培养室</strong>进行，由空调机或调温调湿机来调节室温。最适温度：大多数
25±2 ℃。范围 20~33 ℃，上限 35 ℃，下限为 15
℃。不同植物的生长温度的不同，说明==温度控制了内源细胞分裂素代谢系统的变化，也就表现出不同温度对生长的不同影响==。低温处理对开花、生长速度有影响。</p>
<h4 id="光照">光照</h4>
<p>​
光照是组织培养的重要条件之一，它对细胞、组织、器官的<strong>生长分化</strong>有很大影响。<strong>光质</strong>：不同波长的光对细胞的分裂和器官分化也有影响。<strong>日照长度</strong>：日照长度对试管内花的形成是个重要影响因素。</p>
<ol type="1">
<li>有的适合于光培养：地钱叶绿素含量高的愈伤组织；</li>
<li>有的适合于暗培养：玉簪花芽和花茎的培养，花芽愈伤组织的诱导；</li>
<li>光照强度不仅对增殖，同时对器官的形成也有影响；</li>
<li>卡里佐枳橙茎尖生长，随光照强度增加，分化产生新梢数也随着增加；</li>
</ol>
<h4 id="渗透压与-ph">渗透压与 pH</h4>
<p>　
培养内添加的盐类、蔗糖、甘露糖醇及聚乙二醇类高分子化合物影响到渗透压的变化。</p>
<p>​ ==最适 pH 值一般为 5.5 左右，低于 4.0 ，高于 7.0 生长恶劣。多数最适
pH 值在 5~6.5 。==</p>
<p>​ pH 值变化及缓冲剂的使用：一般培养基 pH 值调到 5.6
左右，但接入植物材料经旺盛生长后 pH 值会偏向酸性，可加入缓冲液调节。</p>
<h4 id="空气与其他气体">空气与其他气体</h4>
<p>​
==氧气是愈伤组织生长所必需的==。如果组织完全浸泡在培养基中，生长就无法进行；瓶盖完全密封，也影响生长。</p>
<p>​ 其它气体：乙烯气体；</p>
<p>​
液体培养：解决通气问题要考虑振荡次数、容器类型、振幅、培养基量、培养基的种类等。</p>]]></content>
      <categories>
        <category>Professional Course</category>
        <category>Biology</category>
        <category>Bioengineering</category>
        <category>Tissue Culture of Plant by HZAU</category>
      </categories>
      <tags>
        <tag>School Notes</tag>
        <tag>Biology</tag>
        <tag>Botany</tag>
        <tag>Cell Culture</tag>
        <tag>Professional Course</tag>
      </tags>
  </entry>
  <entry>
    <title>植物组织培养：绪论</title>
    <url>/2022/03/06/biology/Tissue%20culture%20of%20plant%20by%20HZAU/Chapter%201%20Abstract/</url>
    <content><![CDATA[Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
<h4 id="思考问题">思考问题</h4>
<ol type="1">
<li>为什么要学习植物组织培养；</li>
<li>植物组织培养设计的内容；</li>
<li>怎么样学好植物组织培养；</li>
</ol>
<h4 id="学习策略">学习策略</h4>
<ol type="1">
<li>练好扎实基本功（理论学习）；</li>
<li>重视实验课（动手能力）；</li>
<li>重视新知识的吸收与总结（网上纳新）；</li>
<li>与理论和生产实践相结合（技术转化）；</li>
</ol>
<h2 id="目录与学习目标">目录与学习目标</h2>
<p>​ 本章分为如下部分：</p>
<pre class="template:contents"><code>[[self], 植物组织培养的概念]
[[self], 理论基础——植物细胞全能性]
[[self], 植物组织培养发展历史]
[[self], 植物组织培养技术应用]</code></pre>
<p>​ 本章的学习目标为：</p>
<ol type="1">
<li>掌握植物组织培养基本概念；</li>
<li>了解植物细胞的全能性；</li>
<li>了解植物组织培养发展历史及应用；</li>
</ol>
<h2 id="一植物组织培养的概念">一、植物组织培养的概念</h2>
<h3 id="植物组织培养概念">1. 植物组织培养概念</h3>
<p>​
<strong>植物组织培养</strong>是指在无菌和人工控制的环境条件下，利用人工培养基对离体的植物器官、组织、细胞及原生质体等进行培养，使其再生细胞或完整植株的技术。</p>
<p>​
<strong>外植体</strong>是指植物组织培养中作为离体培养起始材料的器官或组织的片段。</p>
<h3 id="植物组织培养特点">2. 植物组织培养特点</h3>
<ol type="1">
<li>培养条件可以人为控制，不受地区、季节限制；</li>
<li>生长周期短，繁殖效率高；</li>
<li>管理方便，利于工厂化生产和自动化控制；</li>
</ol>
<h3 id="植物组织培养的分类">3. 植物组织培养的分类</h3>
<h4 id="按照培养对象分类">按照培养对象分类</h4>
<ol type="1">
<li><strong>胚胎培养</strong>（embryo
culture）：指从胚珠中分离出来的成熟和未成熟胚为外植体的离体无菌培养；</li>
<li><strong>器官培养</strong>（organ
culture）：指以植物的根茎叶，花，果实等器官为外植体的离体无菌培养；</li>
<li><strong>组织培养</strong>（tissue
culture）：指以分离出植物各部位的组织，分生组织，形成层，木质部，韧皮部，表皮等为外植体的离体无菌培养；</li>
<li><strong>细胞培养</strong>（cell
culture）：指以单个游离细胞为外植体的离体无菌培养；</li>
<li><strong>原生质体培养</strong>（protoplast
culture）：指以除去细胞壁的原生质体为外植体的离体无菌培养；</li>
</ol>
<h4 id="按照培养方法分类">按照培养方法分类</h4>
<ol type="1">
<li><strong>固体培养</strong>（solid
culture）：以固体培养基为培养基质，培养对象为器官和组织，==主要用于形成再生植株==；</li>
<li><strong>液体培养</strong>（liquid
culture）：以液体培养基为培养基质，培养对象为植物细胞，==主要用于生产次生代谢产物==；</li>
</ol>
<h4 id="按照培养过程">按照培养过程</h4>
<ol type="1">
<li><strong>初代培养</strong>（primary
culture）：指外植体最初接种于试管培养基中的第一次培养；</li>
<li><strong>继代培养</strong>（subculture）：将初代培养得到的培养物移植于新鲜培养基中，这种反复多次移植的培养称为继代培养；</li>
<li><strong>生根培养</strong>（rooting
culture）：诱导无根组培苗产生根，形成完整植株的过程。目的是提高移栽后的成活率；</li>
</ol>
<h2 id="二理论基础植物细胞全能性">二、理论基础——<strong>植物细胞全能性</strong></h2>
<h3 id="植物组织培养的理论基础">1. 植物组织培养的理论基础</h3>
<p>​
<strong>植物细胞全能性</strong>（totipotency)：是指==任何生活的植物细胞，只要有完整的膜系统与细胞核，就拥有一整套发育成一个完整植株的遗传基础，并具备发育成完整植物体的潜在能力==。</p>
<p>​
研究表明，处于离体状态的植物活细胞，在一定的营养物质、激素和其他外界条件的作用下，就可能表现出全能性，发育成完整的植株。</p>
<blockquote>
<h4 id="植物细胞全能性">植物细胞全能性</h4>
<ol type="1">
<li><p>对于植物细胞来说，不仅受精卵，体细胞也具有全能性。</p></li>
<li><p>植物细胞表达全能性大小是==受精卵&gt;生殖细胞&gt;体细胞==。</p></li>
</ol>
<p>​ 根据细胞周期，植物细胞实现全能性能力分为如下三类：</p>
<ol type="1">
<li><strong>周期性细胞</strong>：始终保持分裂能力，如茎尖、根尖分生区及形成层的细胞；</li>
<li><strong><span class="math inline"><em>G</em><sub>0</sub></span>期细胞</strong>：在通常情况下不分裂，但受到外界刺激后可重新启动分裂，如表皮细胞及各种薄壁细胞；</li>
<li><strong>终端分化细胞</strong>；永久失去分裂能力，如筛管、导管、纤维、气孔、保卫细胞等特化细胞；</li>
</ol>
</blockquote>
<h3 id="植物的生命周期与全能性的体外表达">2.
植物的生命周期与全能性的体外表达</h3>
<p>​ 细胞（分裂分化）组织（组成）器官（构建）植物体。</p>
<pre class="mermaid">stateDiagram-v2
    direction LR
    state forkstate &lt;<fork>&gt;
    state joinstate &lt;<join>&gt;

    state 脱分化 {
        direction LR
        分化成熟细胞 --&gt; 分生态细胞
    }
    state 再分化 {
        direction LR
        分生态细胞 --&gt; forkstate
        forkstate --&gt; 根、茎芽
        forkstate --&gt; 胚状体
        根、茎芽 --&gt; joinstate
        胚状体 --&gt; joinstate
    }
    joinstate --&gt; 再生植株</join></fork></pre>
<blockquote>
<h4 id="植物细胞表达全能性的方式与过程">植物细胞表达全能性的方式与过程</h4>
<ol type="1">
<li>表达的方式有：器官发生（小麦）或（和）胚胎发生（菊花）；</li>
<li>表达过程须经：脱分化和再分化两个阶段；</li>
</ol>
</blockquote>
<h2 id="三植物组织培养发展历史">三、植物组织培养发展历史</h2>
<h3 id="探索阶段20-世纪初30-年代中">1. 探索阶段：(20 世纪初—30
年代中）</h3>
<ol type="1">
<li>1838-1839 年，德国科学家 Schleide 施莱登 和 Schwann 施旺
发表了细胞学说，奠定了组织培养的理论基础。</li>
<li>1902 年，德国植物学家 Haberlandt 哈伯兰特
根据细胞学说，==提出植物细胞全能性（totipotency）理论==，被称为植物组培之父。
<ol type="1">
<li>观点：高等植物的组织和器官可以分割成单个细胞；</li>
<li>贡献：==提出细胞全能性，首次进行离体细胞培养==；</li>
<li>实验：使用了<strong>小野芝麻和凤眼兰的栅栏细胞 和
虎眼万年青属表皮细胞</strong>，用 Knop+蔗糖培育发现没有分裂；</li>
<li>实验失败原因：<strong>细胞高度分化+培养基中无生长激素</strong>；</li>
</ol></li>
<li>1904 年，Hanning 最先成功地培养了萝卜和辣根菜的胚。</li>
<li>1922 年，Knudson
采用胚培养法获得大量兰花幼苗。克服其种子发芽困难的问题。</li>
<li>1925 年：Laibach 亚麻种间杂交幼胚培养得到杂种。</li>
</ol>
<h3 id="建立阶段20-世纪-30-年代末50-年代中">2. 建立阶段（20 世纪 30
年代末—50 年代中）</h3>
<ol type="1">
<li>1934 年，美国植物生理学家 White
怀特（植物组织培养的奠基人）用番茄根尖建立起第一个活跃生长的无性繁殖系，从而使非胚器官的培养首先获得成功。</li>
<li>1934 年：法国学者 Gautherete 高斯雷特
培养山毛杨、黑杨形成层组织产生了 Callus（愈伤组织）。</li>
<li>1937 年：White 发现 3 种 B 族维生素和 IAA 对植物生长有作用。</li>
<li>1939 年：Gautherete 培养胡萝卜根外植体获得成功。</li>
<li>1939 年：White 培养烟草种间杂种幼茎切段原形成层成功。</li>
<li>1939 年：Nobecourt 诺博卡特 培养胡萝卜块茎薄壁组织成功。</li>
<li>1948
年，Skoog、崔瀓通过实验发现腺嘌呤可以促进愈伤组织生长，并诱导芽的形成。</li>
<li>1955 年，Miller 发现激动素（kinetin）。</li>
<li>1957 年，Skoog &amp; Miller
提出了==激素调控理论==，认为根与茎的分化与
CTK/AUX（细胞分裂素、生长素）的比例关系有关。使得人为控制培养物分化方向成为可能。</li>
<li>1958 年，英国科学家 Steward
等用胡萝卜根的愈伤组织细胞进行悬浮培养，成功诱导出完整的小植株，不但==首次使细胞全能性理论得到证实==，而且为组织培养的技术程序奠定了基础。</li>
</ol>
<h3 id="迅速发展阶段从-20-世纪-50-年代末至今">3. 迅速发展阶段（从 20
世纪 50 年代末—至今）</h3>
<ol type="1">
<li>1958 年，英国科学家 Steward
等用胡萝卜根的愈伤组织细胞进行悬浮培养，成功诱导出胚状体并分化为完整的小植株。这是第一次实现人工体细胞胚，是植物组织培养的第一个突破。</li>
<li>1960 年英国学者 Cocking
用酶法分离原生质体成功。这是植物组织培养的第二个突破。
<ol type="1">
<li>同年，Morel
提出了离体快繁兰花的方法，造就“兰花工业“。现在微繁技术已经广泛用于各经济作物的生产，并==可以与植物脱毒技术结合起来在无毒种苗的繁育中发挥作用==。</li>
</ol></li>
<li>1962 年，Murashinge 和 Skoog
在烟草培养中筛选出<strong>至今仍被广泛使用的 MS 培养基</strong>。</li>
<li>1964-1966 年，印度科学家 Guha 和 Maheswari
在曼陀罗花药培养中首次由花粉诱导得到了单倍体植株。
<ol type="1">
<li>该技术主要用于<strong>遗传育种</strong>工作，==可大大缩短育种周期，提高效率==。</li>
<li>我国科学家在烟草、水稻、小麦的单倍体培养中取得了重要成绩。</li>
</ol></li>
<li>1972 年，Carlson
通过两个种的烟草原生质体融合培养，获得了第一个体细胞杂交的杂种植株。</li>
</ol>
<blockquote>
<h4 id="植物组培技术发展的原因">植物组培技术发展的原因</h4>
<p>​ 60
年代以来，植物组培技术能够得到快速发展，很重要的一个原因就在于走出了实验室，==通过与良种选育、遗传育种和植物基因工程技术的结合==，在植物改良中发挥了重要作用。</p>
</blockquote>
<blockquote>
<h4 id="我国发展情况">我国发展情况</h4>
<p>​ 早期的李继侗、崔瀓、罗士伟等人都作了很多有价值的工作。</p>
<p>​ 进入 70
年代以后，我国科学家在原生质体培养以及花药培养做出了举世公认的重要成绩，得到了世界同行的普遍重视和赞赏。</p>
<p>​
王伏雄、李正理、孙敬三、朱至清、许智宏、杨弘远、胡道芬、潘瑞炽、丁家宜等。</p>
</blockquote>
<h2 id="四植物组织培养技术应用">四、植物组织培养技术应用</h2>
<p>​ 植物组织培养技术应用广泛，地位重要的原因：</p>
<ol type="1">
<li><p>能够从不同植物部位形成再生植株；</p></li>
<li><p>能够进行大规模进行细胞悬浮培养；</p></li>
<li><p>掌握了植物组织和细胞超低温保存的方法；</p></li>
<li><p>建立了遗传转化方法，实现了基因转移；</p></li>
</ol>
<h3 id="植物快速繁殖与工厂化育苗">1. 植物快速繁殖与工厂化育苗</h3>
<ol type="1">
<li>20 世纪 60 年代初，欧洲“兰花工业”兴起</li>
<li>美国：快繁公司 250 家，年生产各种花卉、苗木的能力为 200 万株-400
万株；其中兰花、菊花及各种观叶植物，全部采用组培技术，每年菊花销售额为
1.2 亿美元。</li>
<li>荷兰：快繁公司 72 家，全年生产各类试管苗 8000
万株。荷兰以球根花卉郁金香、洋水仙、小苍兰为主，均采用<strong>工业化生产</strong>，且能<strong>反季节开花</strong>。</li>
</ol>
<h3 id="培育无病毒苗木">2. 培育无病毒苗木</h3>
<p>​ 1960 年 Morel
第一个用茎尖顶端分生组织培养法获得无病毒兰花后，组培技术就成为脱除植物病毒的理想方法。</p>
<blockquote>
<h4 id="目前已脱除病毒的植物有">目前已脱除病毒的植物有</h4>
<ol type="1">
<li><p>果树：柑橘、苹果、梨、草莓、树莓、香蕉、甘蔗等；</p></li>
<li><p>蔬菜：马铃薯、大蒜、番茄；</p></li>
<li><p>观赏植物：兰花、康乃馨、鸢尾、大丽花、矮牵牛；</p></li>
</ol>
</blockquote>
<h3 id="细胞培养生产次生代谢产物">3. 细胞培养生产次生代谢产物</h3>
<p>​ 目前通过细胞培养的植物种类已达 100 多种，所能鉴别的有用成分超过 300
种。</p>
<p>​
这些次生产物主要集中在==价格高，栽培困难、产量低、需求大的==<strong>药品</strong>，如人参皂苷、紫草宁、紫杉醇、黄酮。其他一些次生产物如<strong>香料</strong>（小豆蔻油、玫瑰油和薰衣草精油）、<strong>食品添加剂、颜料和树胶</strong>。</p>
<h3 id="培育新品种或创制新种质">4. 培育新品种或创制新种质</h3>
<ol type="1">
<li>作为转基因受体材料——转基因植株；</li>
<li>花药培养——单倍体育种（水稻、小麦、高粱；百合、天仙子、草莓等）；</li>
<li>突变体筛选与育种：
<ol type="1">
<li>水稻：高赖氨酸突变体</li>
<li>辣椒：抗盐、抗低温突变体；</li>
</ol></li>
<li>细胞融合与育种——远缘杂交物种（属间杂交：马铃薯+番茄）；</li>
</ol>]]></content>
      <categories>
        <category>Professional Course</category>
        <category>Biology</category>
        <category>Bioengineering</category>
        <category>Tissue Culture of Plant by HZAU</category>
      </categories>
      <tags>
        <tag>School Notes</tag>
        <tag>Biology</tag>
        <tag>Botany</tag>
        <tag>Cell Culture</tag>
        <tag>Professional Course</tag>
      </tags>
  </entry>
  <entry>
    <title>细胞工程</title>
    <url>/2022/03/06/biology/High%20School/b5%20bioengineering/P2%20%E7%BB%86%E8%83%9E%E5%B7%A5%E7%A8%8B/</url>
    <content><![CDATA[Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
<h2 id="知识聚焦">知识聚焦</h2>
<p>​
细胞工程指应用细胞生物学、分子生物学和发育生物学等学科的原理和方法，通过细胞器、细胞或组织水平上的操作，有目的的获得特定的细胞、组织、器官、个体或其产品的一门综合性的生物工程。</p>
<p>​
在<strong>细胞经过分裂分化后，仍然具有产生完整生物体或分裂成其他多种细胞的潜能称为细胞的<em>全能性</em></strong>（见[[High
School, Biology, Cell Biology], 细胞的生命历程,
细胞的分化]，值得注意的是，<strong>卵细胞、早期胚胎细胞、部分干细胞<em>也具有全能性</em></strong>）。在特定的时间空间条件下，细胞中的基因会<strong>选择性表达</strong>，使分化的细胞无法表现全能性。</p>
<hr>
<p>​ （[[Professional Course, Biology, Bioengineering, Tissue Culture of
Plant by HZAU], 植物组织培养：绪论, 植物组织培养的理论基础]）</p>
<p>​
<strong><em>植物细胞全能性</em></strong>（totipotency)：是指<strong>任何生活的植物细胞，只要有完整的膜系统与细胞核，就拥有一整套发育成一个完整植株的遗传基础，并具备发育成完整植物体的潜在能力</strong>。</p>
<p>​
研究表明，处于离体状态的植物活细胞，在一定的营养物质、激素和其他外界条件的作用下，就可能表现出全能性，发育成完整的植株。</p>
<blockquote>
<h4 id="植物细胞全能性">植物细胞全能性</h4>
<ol type="1">
<li><p>对于植物细胞来说，不仅受精卵，体细胞也具有全能性。</p></li>
<li><p>植物细胞表达全能性大小是==受精卵&gt;生殖细胞&gt;体细胞==。</p></li>
</ol>
<p>​ 根据细胞周期，植物细胞实现全能性能力分为如下三类：</p>
<ol type="1">
<li><strong>周期性细胞</strong>：始终保持分裂能力，如茎尖、根尖分生区及形成层的细胞；</li>
<li><strong><span class="math inline"><em>G</em><sub>0</sub></span>期细胞</strong>：在通常情况下不分裂，但受到外界刺激后可重新启动分裂，如表皮细胞及各种薄壁细胞；</li>
<li><strong>终端分化细胞</strong>；永久失去分裂能力，如筛管、导管、纤维、气孔、保卫细胞等特化细胞；</li>
</ol>
</blockquote>
<hr>
<h3 id="一植物细胞工程">一、植物细胞工程</h3>
<h4 id="植物组织培养技术">1. 植物组织培养技术</h4>
<p>​
<strong><em>植物组织培养</em></strong>指将离体的植物器官、组织、细胞等，培养在人工配置的培养基上，给予适宜的培养条件，诱导其形成完整植株的技术。</p>
<p>​
根据植物组织培养的概念，其流程一般是==接种外植体、诱导愈伤组织、诱导生芽、诱导生根、移栽成活==。诱导愈伤组织时细胞进行<strong>脱分化</strong>，诱导愈伤组织后在生根生芽时细胞<strong>再分化</strong>。在此过程中，关键的激素为细胞分裂素、生长素、无机盐（菊花诱导愈伤组织、诱导生芽：6-BA、NAA；菊花诱导生根：NAA
或 IAA 与更少量的无机盐）。</p>
<table>
<thead>
<tr class="header">
<th>区别</th>
<th>结果</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>先用生长素，再用细胞分裂素</td>
<td>有利于细胞分裂，但细胞不分化</td>
</tr>
<tr class="even">
<td>先用细胞分裂素，再用生长素</td>
<td>细胞既分裂又分化</td>
</tr>
<tr class="odd">
<td>生长素与细胞分裂素同时使用</td>
<td>分化频率提高</td>
</tr>
<tr class="even">
<td>生长素与细胞分裂素使用比例高</td>
<td>利于根的分化，抑制芽的形成</td>
</tr>
<tr class="odd">
<td>生长素与细胞分裂素使用比例适中</td>
<td>促进愈伤组织的生成</td>
</tr>
<tr class="even">
<td>生长素与细胞分裂素使用比例低</td>
<td>利于芽的分化，抑制根的形成</td>
</tr>
</tbody>
</table>
<h4 id="探究实践菊花的组织培养-exp-菊花的组织培养">2.
探究实践：菊花的组织培养 | #exp-菊花的组织培养</h4>
<h5 id="制备外植体">制备外植体</h5>
<ol type="1">
<li><strong>消毒</strong>：酒精擦拭双手与超净工作台台面；外植体消毒：流水冲洗、酒精消毒、无菌水清洗、次氯酸钠溶液处理、无菌水清洗。</li>
<li><strong>取材</strong>：无菌滤纸吸去外植体表面水分，用无菌解剖刀切成
0.5-1cm 的小段。</li>
</ol>
<blockquote>
<h4 id="外植体的选择">外植体的选择</h4>
<p>​
外植体的脱分化难易程度因植物种类、器官来源与生理状况不同而不同，一般来说，植物的<strong>花和幼嫩的软组织</strong>脱分化相对容易，而茎叶、成熟组织相对较难。</p>
<p>​
植物组织培养成功的关键是避免微生物的感染，所有实验工具都要严格灭菌，接种过程要进行严格的无菌操作。</p>
</blockquote>
<h5 id="接种">接种</h5>
<p>​ 在酒精灯火焰旁，将外植体的<span class="math inline">$\frac{1}{3}-\frac{1}{2}$</span>插入培养基，封盖瓶口，作标记。</p>
<h5 id="培养诱导">培养诱导</h5>
<ol type="1">
<li><strong>脱分化</strong>：环境条件 18-22
℃恒温避光，观察并记录愈伤组织的生长情况。</li>
<li><strong>再分化</strong>：15-20
天后，光照，将愈伤组织转接到诱导生芽的培养基上，生芽后转接到诱导生根的培养基上。</li>
</ol>
<blockquote>
<h4 id="光照与培养诱导阶段">光照与培养诱导阶段</h4>
<ol type="1">
<li><strong>脱分化阶段避光培养</strong>，有利于脱分化产生愈伤组织（光照下容易分化产生微管等组织，不利于产生大量的愈伤组织）。</li>
<li><strong>再分化阶段一定要有光照</strong>，有利于合成叶绿素。</li>
<li>植物激素中生长素和细胞分裂素是启动细胞分裂、脱分化、再分化的关键激素，浓度、用量比例都会影响植物细胞的发育方向。</li>
</ol>
</blockquote>
<h5 id="移栽试管苗">移栽试管苗</h5>
<p>​
打开瓶盖或封口膜，在消毒箱内生长几日，随后移植到消毒后的<ruby><rb>蛏</rb><rt>chēng</rt></ruby>石或珍珠岩等环境中。</p>
<h4 id="植物体细胞杂交技术">3. 植物体细胞杂交技术</h4>
<p>​
实现两个植物物种之间的杂交，我们需要使用<strong><em>植物体细胞杂交技术</em></strong>（<strong>杂交育种是有性生殖</strong>，所得子代一般为二倍体），即将不同来源的植物体细胞，在一定条件下融合成杂种细胞，并把杂种细胞培育成新植物体的技术。</p>
<p>​
植物体细胞杂交的过程<strong>包括植物细胞融合和植物组织培养<em>两个过程</em></strong>：</p>
<ol type="1">
<li><p>获得原生质体：常利用纤维素酶、果胶酶去除细胞壁。</p>
<blockquote>
<h4 id="去除细胞壁的原因">去除细胞壁的原因</h4>
<p>​
植物体细胞杂交实现的结构基础是细胞膜的流动性，植物细胞在细胞膜外有细胞壁，阻碍了植物细胞间的杂交，需要去除细胞壁。利用酶解法（纤维素酶和果胶酶）去除细胞壁后，得到原生质体，就可以正常继续植物细胞融合操作。</p>
</blockquote>
<blockquote>
<h6 id="区分原生质体与原生质层">区分原生质体与原生质层</h6>
<p>​
原生质体指植物细胞去除细胞壁后剩余的部分（细胞膜、细胞质、细胞核）。</p>
<p>​
原生质层指成熟植物细胞的细胞膜、液泡膜以及介于这两层膜之间的细胞质（细胞膜、液泡膜、细胞质）。</p>
<p>​
<strong>原生质层<em>不包括细胞液（液泡中液体部分）、细胞核</em></strong>。</p>
</blockquote></li>
<li><p>原生质体融合：物理法（电融合法、离心法）、化学法（聚乙二醇
PEG、高 <span class="math inline">$\ce{Ca^2+}$</span>-高 pH
融合法）。</p>
<blockquote>
<h5 id="融合后细胞种类">融合后细胞种类</h5>
<p>​ 假设杂交的细胞
A、B，则融合后的细胞种类有<strong>三类多种</strong>，其中只有两两融合形成的
AB 为我们所需，需要筛选：</p>
<ol type="1">
<li>未融合细胞（A、B）；</li>
<li>两两相互融合的细胞（AA、BB、AB）；</li>
<li>多细胞融合（……）</li>
</ol>
</blockquote></li>
<li><p>再生新细胞壁：植物细胞融合<strong>完成的标志</strong>。</p></li>
<li><p>获得杂种植株：利用植物组织培养技术，标志着<strong>植物体细胞杂交完成</strong>。</p></li>
</ol>
<p>​
植物细胞杂交技术<strong>可以<em>克服植物远缘杂交不亲和的障碍</em></strong>，扩大可用于杂交的亲本组合的范围。但：</p>
<ol type="1">
<li>亲缘关系越远，染色体排斥丢失的现象越严重。</li>
<li>由于两个物种全部遗传物质的合并，各种基因都在其中，我们无法让杂种植株完全按我们需求表达。</li>
<li>无法表现双亲性状原因：<strong><em>生物基因的表达不是孤立的，是相互调控、相互影响的</em></strong>。</li>
</ol>
<h4 id="植物细胞工程的应用">4. 植物细胞工程的应用</h4>
<p>​
由植物组织培养而开创的植物<strong><em>快速繁殖技术</em></strong>属于<strong>无性繁殖</strong>，通过有丝分裂增加细胞数目，细胞分裂、分化过程中遗传物质保持不变。</p>
<p>​
通过利用植物顶端分生区附近（如茎尖）病毒极少，甚至无病毒的特性，我们可以繁殖得到<strong>脱毒苗</strong>。</p>
<p>​
作物可以进行单倍体育种（花药离体培养得到单倍体植株，在诱导染色体加倍（秋水仙素）后可以培养出遗传性状相对稳定的纯合二倍体植株，<strong>缩短育种年限，节约人力物力</strong>）。</p>
<p>​
植物组织培养中，因为被培养细胞（通常指<strong>愈伤组织</strong>）一直处于不断增殖状态，容易受到培养条件和诱变因素（射线、化学物质等）的影响而产生突变，进而筛选培育新品种。也可以对<strong>体细胞</strong>应用化学（EMS，甲基磺酸乙酯或SA，叠氮化钠）或物理（电离辐射）的诱变处理，诱导分化形成植株。</p>
<p><img src="https://raw.githubusercontent.com/PassionPenguin/picgo-database/main/%E6%A4%8D%E7%89%A9%E7%BB%84%E5%9F%B9.jpg" alt="植物组培" style="zoom:50%;"></p>
<h3 id="二动物细胞工程">二、动物细胞工程</h3>
<p>​
动物细胞工程常用的技术包括<strong>动物细胞培养、动物细胞融合和动物细胞核移植等，<em>动物细胞培养是动物细胞工程的基础</em></strong>。</p>
<h4 id="动物细胞培养">1. 动物细胞培养</h4>
<h5 id="动物细胞培养-1">动物细胞培养</h5>
<p>​
<strong><em>动物细胞培养</em></strong>指从动物体中取出相关的组织，将其分散成单个细胞，然后在适宜的培养条件下，让这些细胞生长和增殖的技术。其过程如下：</p>
<ol type="1">
<li><p>获取动物体组织块，剪碎组织后使用<strong>胰蛋白酶</strong>处理使动物细胞分散成单个细胞。</p>
<blockquote>
<h6 id="分散动物细胞培养原因">分散动物细胞培养原因</h6>
<p>​
分散细胞后易于培养，所需物质容易供给，所代谢废物易于排出，也可使在细胞水平操作的其他技术得以实现。</p>
</blockquote>
<blockquote>
<h5 id="酶处理注意事项">酶处理注意事项</h5>
<p>​
使用蛋白酶处理，需要注意蛋白酶的活性条件（如<strong>胃蛋白酶需要酸性环境</strong>，与培养液相差甚远），注意蛋白酶的作用时间（<strong>避免其对细胞膜蛋白有所损害</strong>，以致细胞受损）。</p>
</blockquote></li>
<li><p>制成细胞悬液，将培养液稀释后将细胞悬液转入培养液中，放入 <span class="math inline">$\ce{CO2}$</span> 培养箱（95% 空气与 5% <span class="math inline">$\ce{CO2}$</span>）培养进行<strong><em>原代培养</em></strong>。</p>
<blockquote>
<h4 id="细胞培养所需的条件">细胞培养所需的条件</h4>
<ol type="1">
<li><strong>无菌无毒环境</strong>：对培养液和所有培养用具进行无菌处理；在细胞培养液中添加适量抗生素；定期更换培养液，防止细胞代谢产物积累。</li>
<li><strong>营养</strong>：与体内基本相同（糖类、氨基酸、生长因子、无机盐、维生素……），在使用合成培养基时会加入适量血清、血浆等天然成分，并通常使用液体培养基（培养液）。</li>
<li><strong>温度、pH、渗透压</strong>，温度以 <span class="math inline">$36.5\pm5\degree℃$</span>为宜，pH 为弱碱性 <span class="math inline">7.2 ∼ 7.4</span>。</li>
<li><strong>气体环境</strong>：所需氧气与二氧化碳（通入空气、二氧化碳），氧气为细胞代谢所需，<span class="math inline">$\ce{CO2}$</span> 可维持培养基 pH。</li>
</ol>
</blockquote></li>
<li><p>将贴满瓶壁的细胞用酶分散成单个细胞，制成细胞悬液，转入培养液，放入
<span class="math inline">$\ce{CO2}$</span>
培养箱培养进行<strong><em>传代培养</em></strong>。</p>
<blockquote>
<h4 id="细胞贴壁与接触抑制">细胞贴壁与接触抑制</h4>
<p>​
大多数细胞不适应悬浮生长，需要贴附在某些基质表面才能生长增殖。悬浮在培养瓶中分散的细胞很快会贴到瓶壁上，称为<strong><em>细胞贴壁</em></strong>。</p>
<p>​
细胞数量不断增多，当贴壁细胞分裂生长到表面相互接触时，细胞会停止分裂增殖，称为细胞的<strong><em>接触抑制</em></strong>。</p>
</blockquote></li>
</ol>
<h5 id="干细胞培养及其应用">干细胞培养及其应用</h5>
<p>​
干细胞在一定条件下可以分化成其他类型的细胞，存在于<strong>早期胚胎、骨髓和脐带血</strong>等多种组织和器官中，包括胚胎干细胞（ES
细胞）和成体干细胞（包括骨髓中的造血干细胞、神经系统中的神经干细胞和睾丸中的精原干细胞）。</p>
<ol type="1">
<li><strong>全能干细胞</strong>：可以分化成人体的各种细胞，构成组织器官，最终发育成一个完整个体。受精卵是最初始的全能干细胞，卵裂期
32 细胞（桑葚胚）以前的所有细胞都是全能干细胞。</li>
<li><strong>胚胎干细胞</strong>：可以分化成成年动物体内任何一种类型的细胞，并进一步形成机体所有组织、器官甚至个体的潜能。</li>
<li><strong>多能干细胞</strong>：可以分化成多种细胞组织的潜能，但是丧失了发育成完整个体的能力，受到一定限制，如骨髓多能造血干细胞。</li>
<li><strong>专能干细胞</strong>：只能分化成一种类型或功能密切相关的几种类型的细胞，如神经干细胞。</li>
</ol>
<p>​
干细胞可用于体外诱导形成新的组织细胞，培育人造器官解决供体器官不足与排斥问题，可用于治疗造血、免疫功能，可用于治疗神经组织损伤和退行性疾病。另外，可以通过体外诱导小鼠成纤维细胞，获得了类似胚胎干细胞的一种诱导全能干细胞（iPS
细胞）。</p>
<h4 id="动物细胞融合技术">2. 动物细胞融合技术</h4>
<h5 id="动物细胞融合技术-1">动物细胞融合技术</h5>
<p>​
<strong><em>动物细胞融合技术</em></strong>是使<strong>两个或多个</strong>动物细胞结合形成一个细胞的技术，其基本原理是<strong>细胞膜的流动性</strong>，可以用聚乙二醇（PEG）融合法、灭活病毒（常用仙台病毒）诱导法和电融合法实现，本质是细胞膜上的蛋白质、脂质分子在特定刺激下重新排布，使细胞膜打开。</p>
<p>​ 动物细胞融合技术突破了有性杂交的局限，使远缘杂交成为可能。</p>
<h5 id="单克隆抗体及其应用">单克隆抗体及其应用</h5>
<p>​
利用动物细胞融合技术，发展了<strong><em>杂交瘤技术</em></strong>，可用作制备单克隆抗体（<strong>特异性强、灵敏性高且可大量制备</strong>），过程如下：</p>
<ol type="1">
<li>用特定的抗原对小鼠进行免疫，从小鼠的脾中得到能产生特定抗体的 B
淋巴细胞，得到多种 B 淋巴细胞。</li>
<li>培养骨髓瘤细胞，得到大量骨髓瘤细胞。</li>
<li>将两者细胞诱导融合，得到大量细胞。</li>
<li>用特定的选择培养基进行筛选（未融合的亲本细胞和融合的具有同种核的细胞都会死亡，只有融合的杂交瘤细胞才能生长），得到杂交瘤细胞（可以迅速达量增殖且产生抗体）。</li>
<li>对上述选择培养的杂交瘤细胞进行克隆化培养和抗体检测，多次进行筛选（使用
96 孔板培养与筛选）。</li>
<li>将抗体检测阳性的杂交瘤细胞在体外条件下大量培养或注射到小鼠腹腔内增殖，获取大量单克隆抗体。</li>
</ol>
<blockquote>
<h4 id="两次筛选的区别">两次筛选的区别</h4>
<table>
<colgroup>
<col style="width: 6%">
<col style="width: 46%">
<col style="width: 46%">
</colgroup>
<thead>
<tr class="header">
<th></th>
<th>第一次筛选</th>
<th>第二次筛选</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>筛选原因</td>
<td>诱导融合后得到多种杂交细胞，另外有未融合的细胞。</td>
<td>在步骤 1 得到的 B
细胞并不只有对我们所需要的抗原具有特异性的，还有可以产生其他抗体的 B
细胞。</td>
</tr>
<tr class="even">
<td>筛选方法</td>
<td>使用特定选择培养基，让未融合和同种细胞融合形成的细胞都会死亡，只有融合的杂交瘤细胞才能生长。</td>
<td>用多孔培养皿、多孔板进行培养，使得每一孔内只有一个杂交瘤细胞下开始克隆化培养和抗体检测。</td>
</tr>
<tr class="odd">
<td>筛选目的</td>
<td>得到杂交瘤细胞。</td>
<td>得到可以分泌所需抗体的杂交瘤细胞。</td>
</tr>
</tbody>
</table>
<p>​ 第一次筛选常用 HAT 培养基（次黄嘌呤 H、氨基喋呤 A 和胸腺嘧啶
T）。</p>
<ol type="1">
<li>因为细胞 DNA
合成途径有主要合成和补救合成途径两种方式。<strong>主要合成</strong>就是利用糖和氨基酸在二氢叶酸还原酶的催化下来合成
DNA；而<strong>补救合成</strong>途径则是通过次嘌呤鸟嘌呤磷酸核糖转移酶（Hypoxanthine
guznine phosphoribosyl transferase， HGPRT）和胸腺嘧啶激酶（Thymidine
kinase，TK）将核苷酸前体合成核苷酸以供 DNA 合成原料。</li>
<li>HAT
培养基中氯基喋呤是二氢叶酸还原酶的<strong>抑制剂</strong>，能有效地阻断
DNA
合成的内源性途径。融合前的骨髓瘤细胞不能产生抗体，并且缺乏次黄嘌呤-鸟嘌呤磷酸核糖基转移酶（HGPRT）基因，使得它们对
HAT 培养基敏感，阻断了 DNA 补救合成途径。</li>
<li>将融合的细胞在 HAT 培养基中孵育大约 10 至 14
天，未融合的以及自身融合的骨髓瘤细胞死亡。这是因为 HAT
培养基阻断了骨髓瘤细胞两大 DNA 合成途径。未融合的以及自身融合的 B
淋巴细胞虽然能够合成 HGPRT
酶，但其是正常细胞，存活一段时间（最多两周）也死亡。因此，在 HAT
养基中，只有 B 细胞-骨髓瘤杂合体存活，因为杂交瘤细胞继承了 B
淋巴细胞和骨髓瘤细胞的双重特性，能够合成 HGPRT 酶和 TK
酶。这些杂交瘤细胞能够分泌抗体（B
细胞特性）并且无限增殖（骨髓瘤细胞特性）。</li>
<li>即次黄嘌呤、胸腺嘧啶作为补救合成的原料，只有 B
细胞可以利用，并且氨基喋呤可以阻断主要合成的途径，使只有 B
细胞-骨髓瘤杂合体存活。</li>
</ol>
</blockquote>
<h4 id="动物细胞核移植技术">4. 动物细胞核移植技术</h4>
<p>​
<strong><em>动物细胞核移植</em></strong>技术是将动物一个细胞的细胞核移入去核的卵母细胞中，使这个重新组合的细胞发育成新胚胎，继而发育成动物个体的技术，理论基础为<strong><em>动物细胞核</em>的全能性</strong>。</p>
<p>​
哺乳动物核移植可以分为<strong>胚胎细胞核移植和体细胞核移植</strong>，动物胚胎细胞分化程度低而体细胞分化程度高，故胚胎细胞表达全能性难度比体细胞低。高产奶牛体细胞核移植过程如下：</p>
<ol type="1">
<li><p>收集牛卵巢，采集卵母细胞，在体外培养到 MⅡ 期。</p></li>
<li><p>显微操作去核，在该阶段的卵母细胞细胞质中<strong>存在可以激活细胞核全能性的物质</strong>。</p>
<blockquote>
<h6 id="为什么克隆动物与供体动物性状不同">为什么克隆动物与供体动物性状不同？</h6>
<ol type="1">
<li>克隆动物大部分 DNA（核 DNA
全部）来源于供体细胞的细胞核，但是<strong>细胞质中存在少量
DNA</strong>（如线粒体 DNA、质粒……）。</li>
<li><strong>性状是基因与环境共同作用的结果</strong>，供体动物生活的环境与克隆动物所生活的环境不完全相同。</li>
<li>克隆动物在发育、生活的过程中会发生<strong>表观遗传修饰现象</strong>（甲基化、乙酰化……），或可能发生<strong>基因突变</strong>，产生供体动物没有的性状。</li>
</ol>
</blockquote></li>
<li><p>从<strong><em>供体</em>高产奶牛</strong>身体某一部位取体细胞进行培养。</p></li>
<li><p>将供体细胞注入去核的卵母细胞。</p>
<blockquote>
<h6 id="为什么需要取用传代-10-代内的细胞用作供体细胞">为什么需要取用传代
10 代内的细胞用作供体细胞？</h6>
<p>​ 培养的动物细胞传至 <span class="math inline">10 ∼ 50</span>
代时，部分细胞核型可能会改变，细胞遗传物质可能突变，而 10
代以内的细胞一般能保持正常的二倍体核型。（核型指染色体组在有丝分裂中期的表型，是染色体数目、大小、形态特征的综合。）</p>
</blockquote></li>
<li><p>通过电融合法使两细胞融合，供体核进入卵母细胞，形成重构配。</p></li>
<li><p>使用物理或化学方法（如电刺激、<span class="math inline">$\ce{Ca^2+}$</span>
载体、乙醇和蛋白酶合成抑制剂等）激活重构胚，使其完成细胞分裂和发育进程。</p></li>
<li><p>将胚胎移入<strong><em>受体</em>（代孕）母牛</strong>体内，继续发育。</p></li>
</ol>
<p>​ 通过核移植技术得到的动物称为克隆动物，上述过程属于无性生殖。</p>
<p>​
该技术可以用于畜牧业加速家畜遗传改良进程，促进优良畜群繁育，或运用与医药卫生领域，生产医用蛋白等物质，供活体实验或供诱导发育可移植器官。</p>
<h3 id="三胚胎工程">三、胚胎工程</h3>
<p>​
<strong><em>胚胎工程</em></strong>是指对生殖细胞、受精卵或早期胚胎细胞进行多种显微操作和处理，然后将获得的胚胎移植到雌性动物体内生产后代，以满足人类的各种需求。胚胎工程技术包括<strong>体外受精、胚胎移植和胚胎分割等</strong>。</p>
<h4 id="胚胎工程理论基础">1. 胚胎工程理论基础</h4>
<p>​
了解<strong>哺乳动物受精和早期胚胎发育的规律</strong>对进行胚胎工程的学习、运用具有重大意义。</p>
<h5 id="受精">受精</h5>
<p>​
<strong><em>受精</em></strong>是精子与卵子结合形成合子（受精卵）的过程，包括受精前的准备阶段和受精阶段。在自然条件下，哺乳动物的受精在<strong>输卵管</strong>中完成。</p>
<p>​
精子在排出后不能立即与卵子受精，必须在雌性动物的生殖道发生相应的生理变化后才具有受精能力，现象称为<strong><em>精子获能</em></strong>（通过酶对精子顶体表面糖蛋白的降解降低顶体膜的稳定性使其可以穿透卵子的透明带，同时尾部发生变化使精子具有更强流动性），可用
A23187 钙离子载体或肝素进行化学诱导。</p>
<p>​ 动物排出的卵子成熟程度不等，需要在输卵管中发育到 MⅡ
期才具备与精子受精的能力。</p>
<p>​ 受精过程是在输卵管中完成的，包括如下阶段：</p>
<ol type="1">
<li>精子穿过透明带（顶体反应）：顶体酶将透明带降解出一条孔洞，精子借助自身运动穿越透明带，接触卵细胞膜。</li>
<li>透明带反应（皮质反应）：在精子穿越透明带触及卵细胞膜瞬间，会产生阻止后来精子进入透明带的生理反应，同时，透明带扩张并改变表面成分，<strong>此为防止多精入卵受精的第一道屏障</strong>。</li>
<li>精子入卵：会立即被微绒毛抱合，随后精子外膜与卵细胞膜相互接触，精子入卵。</li>
<li>卵细胞膜反应：精子入卵后，卵细胞膜会立即发生生理反应，拒绝其他精子再进入卵内，此为防止多精入卵受精的第二道屏障。</li>
<li>雌雄原核形成：精子入卵后，原有的核膜破裂，形成一个新的核膜，最后形成一个比原来精子核大的核，称为雄原核。与此同时，卵子被激活，完成
MⅡ，<strong>排出第二极体</strong>，形成雌原核（可将观察到两个极体或雌雄原核作为受精<strong><em>标志</em></strong>）。</li>
<li>雌雄原核融合：雌雄原核充分发育后彼此接触合并，两组核染色体合为一组，形成一个含二倍染色体的合子（受精卵）。</li>
</ol>
<h5 id="胚胎早期发育">胚胎早期发育</h5>
<p>​ 受精卵形成后，在输卵管与子宫中进行有丝分裂，有如下阶段：</p>
<ol type="1">
<li><strong>卵裂期</strong>：在透明带内进行有丝分裂，特点为细胞数量不断增加但是胚胎总体积不增加或略有缩小。</li>
<li><strong>桑葚胚</strong>：卵裂产生的子细胞逐渐形成致密的细胞团（32
细胞）。在该阶段以前每一个细胞都具有发育成完整胚胎的潜能，属于全能细胞。</li>
<li><strong>囊胚</strong>：胚胎进一步发育，细胞逐渐分化为内细胞团（发育为胎儿）与滋养层细胞（发育为胎盘、胎膜）。进一步发育，内部出现含液体的囊胚腔，此时胚胎称为囊胚。</li>
<li><strong>原肠胚</strong>：继续发育，内细胞表层细胞形成外胚层，下方的细胞形成内胚层，此时胚胎称为原肠胚，内胚层包围的囊腔称为原肠腔，并进一步形成中胚层，逐渐分化成各种组织、器官等。</li>
</ol>
<h4 id="体外受精与胚胎移植胚胎分割">2. 体外受精与胚胎移植、胚胎分割</h4>
<p>​
通过人工操作使卵子在体外受精，经培养发育为早期胚胎后进行胚胎移植可以产生个体，过程包括体外受精、胚胎移植等。</p>
<h5 id="体外受精">体外受精</h5>
<p>​
采集卵母细胞和精子，分别在体外进行成熟培养和获能处理，即可用于体外受精。</p>
<p>​ 采集卵母方式的主要方式有：</p>
<ol type="1">
<li><strong>（主要方法）</strong>：用<strong>外源促性腺激素处理</strong>，使动物超数排卵，然后从输卵管中获取卵子（可以直接进行体外受精）。</li>
<li>从已屠宰的母畜的卵巢中采集卵母细胞，或直接从活体的卵巢中吸取卵母细胞（都需要在体外经人工培养成熟）。</li>
</ol>
<h5 id="胚胎移植">胚胎移植</h5>
<p>​
<strong><em>胚胎移植</em></strong>是指将通过体外受精及其他方式得到的胚胎，移植到<strong>同种的、生理状态相同</strong>的雌性动物体内，使之继续发育为新个体的技术。<strong>提供胚胎的个体称为<em>供体</em></strong>，<strong>接受胚胎的个体称为<em>受体</em></strong>（与核移植技术有所区别）。</p>
<p>​
进行胚胎移植时，需要对供体与受体进行<strong>同期发情</strong>操作，使它们的生理条件达到同步或一致，使移入的供体胚胎可以得到相同或相似的生存条件，是胚胎移植成功与否的关键。</p>
<p>​
胚胎移植可以大大缩短供体本身的繁殖周期，充分发挥雌性优良个体的繁殖潜能。</p>
<blockquote>
<h4 id="胚胎移植的生理学基础">胚胎移植的生理学基础</h4>
<ol type="1">
<li>哺乳动物发情排卵后（同期发情），不管是否妊娠，在一段时间内，同种动物的供、受体生殖器官的生理变化是相同的，<strong>为供体的胚胎移入受体提供了相同的生理环境</strong>。</li>
<li>早期胚胎在一定时间内处于游离状态，为胚胎的收集提供了可能。</li>
<li>受体对移入子宫的外来胚胎基本不发生免疫排斥反应（<strong>免疫赦免</strong>），为胚胎在受体的存活提供了可能。</li>
<li>供体胚胎可与受体子宫建立正常的生理和组织联系，但供体胚胎的遗传特性在孕育过程中不会受到影响。</li>
</ol>
</blockquote>
<h5 id="胚胎分割">胚胎分割</h5>
<p>​ <strong><em>胚胎分割</em></strong>是指采用机械方法将早期胚胎切割成
2 等分、4 等分或 8
等分等，经移植获得同卵双胎或多胎的技术，需要<strong><em>均等</em>切割<em>桑葚胚整体</em>或<em>囊胚的内细胞团</em></strong>。</p>
<p>​ 另外，可以通过取囊胚的滋养层进行 DNA 分析鉴别性别。</p>]]></content>
      <categories>
        <category>High School</category>
        <category>Biology</category>
        <category>Bioengineering</category>
      </categories>
      <tags>
        <tag>School Notes</tag>
        <tag>High School</tag>
        <tag>Biology</tag>
      </tags>
  </entry>
  <entry>
    <title>导数</title>
    <url>/2022/03/05/mathematics/High%20School/Function/%E5%AF%BC%E6%95%B0/</url>
    <content><![CDATA[Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
<h2 id="知识聚焦">知识聚焦</h2>
<h3 id="一导数">一、导数</h3>
<h4 id="导数与变化率">1. 导数与变化率</h4>
<p>​ 对于函数<span class="math inline"><em>y</em> = <em>f</em>(<em>x</em>)</span>，设自变量<span class="math inline"><em>x</em></span>从<span class="math inline"><em>x</em><sub>0</sub></span>变化到<span class="math inline"><em>x</em><sub>0</sub> + <em>Δ</em><em>x</em></span>，相应地函数值从<span class="math inline"><em>f</em>(<em>x</em><sub>0</sub>)</span>变化为<span class="math inline"><em>f</em>(<em>x</em><sub>0</sub>+<em>Δ</em><em>x</em>)</span>，此时我们把比值<span class="math inline">$\frac{\Delta x}{\Delta y}$</span>，也即 <span class="math display">$$
\notag\begin{align}
\frac{\Delta x}{\Delta y} = \frac{f(x_0 + \Delta x)-f(x_0)}{\Delta x}
\end{align}
$$</span> 称为函数从<span class="math inline"><em>x</em><sub>0</sub></span>到<span class="math inline"><em>x</em><sub>0</sub> + <em>Δ</em><em>x</em></span>的平均变化率。如果当<span class="math inline"><em>Δ</em><em>x</em> → 0</span>时平均变化率无穷趋近于一个确值（即<span class="math inline">$\frac{\Delta y}{\Delta
x}$</span>有极限），则称<span class="math inline"><em>y</em> = <em>f</em>(<em>x</em>)</span>在<span class="math inline"><em>x</em> = <em>x</em><sub>0</sub></span>处可导，并把这个定值称为<span class="math inline"><em>y</em> = <em>f</em>(<em>x</em>)</span>在<span class="math inline"><em>x</em> = <em>x</em><sub>0</sub></span>处的<strong>导数</strong>（也称<strong>瞬时变化率</strong>），记作<span class="math inline"><em>f</em>′(<em>x</em>)</span>或<span class="math inline"><em>y</em>′|<sub><em>x</em> = <em>x</em><sub>0</sub></sub></span>，即
<span class="math display">$$
\notag\begin{align}
f'(x)=y'=\lim_{\Delta x\rightarrow0}{\frac{f(x_0+\Delta x)}{\Delta x}}
\end{align}
$$</span> ​
导数的物理意义可以代表速度、加速度等，数学意义可以代表函数的变化率与切割线斜率。因为导数是定义域上每一个点与其瞬时变化率的映射，我们可以把<span class="math inline"><em>y</em> = <em>f</em>(<em>x</em>)</span>当做一个函数，也即<strong>导函数</strong>（简称<strong>导数</strong>）。</p>
<h4 id="基本初等函数的导数四则运算与复合函数的导数">2.
基本初等函数的导数、四则运算与复合函数的导数</h4>
<p>​ 根据导数的定义，基本初等函数的导数如下：</p>
<table>
<thead>
<tr class="header">
<th>原函数</th>
<th>导数</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><span class="math inline"><em>f</em>(<em>x</em>) = <em>c</em></span>（<span class="math inline"><em>c</em></span>为常数）</td>
<td><span class="math inline"><em>f</em>′(<em>x</em>) = 0</span></td>
</tr>
<tr class="even">
<td><span class="math inline"><em>f</em>(<em>x</em>) = <em>x</em><sup><em>a</em></sup></span>（<span class="math inline"><em>a</em> ∈ ℚ, <em>a</em> ≠ 0</span>）</td>
<td><span class="math inline"><em>f</em>′(<em>x</em>) = <em>a</em><em>x</em><sup><em>a</em> − 1</sup></span></td>
</tr>
<tr class="odd">
<td><span class="math inline"><em>f</em>(<em>x</em>) = sin <em>x</em></span></td>
<td><span class="math inline"><em>f</em>′(<em>x</em>) = cos <em>x</em></span></td>
</tr>
<tr class="even">
<td><span class="math inline"><em>f</em>(<em>x</em>) = cos <em>x</em></span></td>
<td><span class="math inline"><em>f</em>′(<em>x</em>) =  − sin <em>x</em></span></td>
</tr>
<tr class="odd">
<td><span class="math inline"><em>f</em>(<em>x</em>) = <em>a</em><sup><em>x</em></sup></span>（<span class="math inline"><em>a</em> &gt; 0, <em>a</em> ≠ 1</span>）</td>
<td><span class="math inline"><em>f</em>′(<em>x</em>) = <em>a</em><sup><em>x</em></sup>ln <em>a</em></span></td>
</tr>
<tr class="even">
<td><span class="math inline"><em>f</em>(<em>x</em>) = log<sub><em>a</em></sub><em>x</em></span>（<span class="math inline"><em>a</em> &gt; 0, <em>a</em> ≠ 1</span>）</td>
<td><span class="math inline">$f'(x)=\dfrac{1}{x\ln{a}}$</span></td>
</tr>
</tbody>
</table>
<p>​ 对于导数，有如下四则运算、复合函数导数法则：</p>
<table>
<colgroup>
<col style="width: 45%">
<col style="width: 54%">
</colgroup>
<thead>
<tr class="header">
<th>运算法则</th>
<th>导数结果</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><span class="math inline"><em>h</em>(<em>x</em>) = <em>f</em>(<em>x</em>) ± <em>g</em>(<em>x</em>)</span></td>
<td><span class="math inline"><em>h</em>′(<em>x</em>) = <em>f</em>′(<em>x</em>) ± <em>g</em>′(<em>x</em>)</span></td>
</tr>
<tr class="even">
<td><span class="math inline"><em>h</em>(<em>x</em>) = <em>f</em>(<em>x</em>) ⋅ <em>g</em>(<em>x</em>)</span></td>
<td><span class="math inline"><em>h</em>′(<em>x</em>) = <em>f</em>′(<em>x</em>) ⋅ <em>g</em>(<em>x</em>) + <em>f</em>(<em>x</em>) ⋅ <em>g</em>′(<em>x</em>)</span></td>
</tr>
<tr class="odd">
<td><span class="math inline">$h(x)=\dfrac{f(x)}{g(x)}$</span>（<span class="math inline"><em>g</em>(<em>x</em>) ≠ 0</span>）</td>
<td><span class="math inline">$h'(x)=\dfrac{f'(x)\cdot g(x) - f(x)\cdot
g'(x)}{(g(x))^2}$</span></td>
</tr>
<tr class="even">
<td><span class="math inline"><em>h</em>(<em>x</em>) = <em>c</em><em>f</em>(<em>x</em>)</span></td>
<td><span class="math inline"><em>h</em>′(<em>x</em>) = <em>c</em><em>f</em>′(<em>x</em>)</span></td>
</tr>
<tr class="odd">
<td><span class="math inline"><em>h</em>(<em>x</em>) = <em>f</em>(<em>g</em>(<em>x</em>))</span></td>
<td><span class="math inline"><em>h</em>′(<em>x</em>) = <em>f</em>′(<em>x</em>) ⋅ <em>g</em>′(<em>x</em>)</span></td>
</tr>
</tbody>
</table>
<blockquote>
<h4 id="证明指对数函数的导数">证明指对数函数的导数</h4>
<p>​ 已知<span class="math inline">$e=\log_a{(x+1)}^\frac{1}{x}$</span>，对于函数<span class="math inline"><em>g</em>(<em>x</em>) = <em>a</em><sup><em>x</em></sup></span>与<span class="math inline"><em>g</em>(<em>x</em>) = log<sub><em>a</em></sub><em>x</em></span>，求证<span class="math inline"><em>f</em>′(<em>x</em>) = <em>a</em><sup><em>x</em></sup>ln <em>a</em></span>与<span class="math inline">$g'(x)=\frac{1}{x\ln{x}}$</span>。</p>
<p>​ 证明<span class="math inline"><em>f</em>′(<em>x</em>) = <em>a</em><sup><em>x</em></sup>ln <em>x</em></span>：
<span class="math display">$$
\notag\begin{align}
f'(x)&amp;=\lim_{\Delta\rightarrow 0}{\frac{a^{x_0 + \Delta
x}-a^{x_0}}{\Delta x}}\\
&amp;=\lim_{\Delta\rightarrow 0}{\frac{a^{x_0}(a^{\Delta x}-1)}{\Delta
x}}\\
\end{align}
$$</span> ​ 令<span class="math inline"><em>k</em> = <em>a</em><sup><em>Δ</em><em>x</em></sup> − 1</span>，则<span class="math inline"><em>Δ</em><em>x</em> = log<sub><em>a</em></sub>(<em>k</em>+1)</span>，则
<span class="math display">$$
\notag\begin{align}
f'(x_0)&amp;=\lim_{\Delta x\rightarrow0}{\frac{a^{x_0}\cdot
k}{log_a{(k+1)}}}\\
&amp;=a^{x_0}\cdot\lim_{\Delta
x\rightarrow0}{\frac{1}{log_a{(k+1)}^{\frac{1}{k}}}}\\
&amp;=a^{x_0}\cdot\frac{1}{log_a{e}}\\
&amp;=a^{x_0}\cdot\ln{a}
\end{align}
\begin{proof}
\end{proof}
$$</span> ​ 证明<span class="math inline">$g'(x)=\frac{1}{x\ln{x}}$</span>： <span class="math display">$$
\notag\begin{align}
g'(x)&amp;=\lim_{\Delta x\rightarrow0}{\frac{\log_a{(x_0+\Delta
x)}-\log_a{x_0}}{\Delta x}}\\
&amp;=\lim_{\Delta x\rightarrow0}{\frac{1}{\Delta
x}\log_a{\frac{x_0+\Delta x}{x_0}}}\\
&amp;=\lim_{\Delta x\rightarrow0}{\log_a{(1+\frac{\Delta
x}{x_0})^{\frac{1}{\Delta x}}}}\\
&amp;=\lim_{\Delta x\rightarrow0}{\frac{1}{x_0}\log_a{(1+\frac{\Delta
x}{x_0})^{\frac{x_0}{\Delta x}}}}\\
&amp;=\frac{1}{x_0}log_a{e}\\
&amp;=\frac{1}{x_0\ln{a}}
\end{align}
\begin{proof}
\end{proof}
$$</span></p>
</blockquote>
<blockquote>
<h3 id="函数切线问题">函数切线问题</h3>
<ol type="1">
<li>直线 <span class="math inline"><em>l</em></span> 是函数 <span class="math inline"><em>y</em> = <em>f</em>(<em>x</em>)</span> 在 <span class="math inline">(<em>a</em>,<em>b</em>)</span> 处的切线，则点 <span class="math inline">(<em>a</em>,<em>b</em>)</span> 为切点，<span class="math inline"><em>k</em> = <em>f</em>′(<em>a</em>)</span>。</li>
<li>直线 <span class="math inline"><em>l</em></span> 是函数 <span class="math inline"><em>y</em> = <em>f</em>(<em>x</em>)</span> 过 <span class="math inline">(<em>a</em>,<em>b</em>)</span> 点的切线，<span class="math inline">(<em>a</em>,<em>b</em>)</span>
未必是切点，需要设切点 <span class="math inline">(<em>x</em><sub>0</sub>,<em>f</em>(<em>x</em><sub>0</sub>))</span>。</li>
</ol>
</blockquote>
<h3 id="二导数与奇偶性单调性最值和极值">二、导数与奇偶性、单调性、最值和极值</h3>
<h4 id="导数与奇偶性单调性最值和极值">1.
导数与奇偶性、单调性、最值和极值</h4>
<p>​
一般地，如果函数可导，<strong>原函数的奇偶性与导函数的奇偶性相反</strong>。</p>
<p>​ 函数<span class="math inline"><em>f</em>(<em>x</em>)</span>的单调性与导函数<span class="math inline"><em>f</em>′(<em>x</em>)</span>的正负之间具有如下关系：</p>
<p>​ ==在某个区间<span class="math inline">(<em>a</em>,<em>b</em>)</span>，如果<span class="math inline"><em>f</em>′(<em>x</em>) &gt; 0</span>，那么函数<span class="math inline"><em>f</em>(<em>x</em>)</span>在<span class="math inline">(<em>a</em>,<em>b</em>)</span>上单调递增==。</p>
<p>​ ==在某个区间<span class="math inline">(<em>a</em>,<em>b</em>)</span>，如果<span class="math inline"><em>f</em>′(<em>x</em>) &lt; 0</span>，那么函数<span class="math inline"><em>f</em>(<em>x</em>)</span>在<span class="math inline">(<em>a</em>,<em>b</em>)</span>上单调递减==。</p>
<p>​
如果一个函数在某一范围内导数的绝对值较大，那么函数在这个范围内变化得较快，反之较慢。</p>
<p>​ 如果<span class="math inline"><em>f</em>′(<em>x</em><sub>0</sub>) = 0</span>，且<span class="math inline"><em>f</em>′(<em>x</em><sub>0</sub>)</span>比其附近左侧函数值大，比其附近右侧函数值小，则<span class="math inline"><em>f</em>′(<em>x</em>)</span>在<span class="math inline"><em>x</em> = <em>x</em><sub>0</sub></span>取得<strong>极小值</strong>为<span class="math inline"><em>f</em>(<em>x</em><sub>0</sub>)</span>，<strong>极小值点</strong><span class="math inline"><em>x</em> = <em>x</em><sub>0</sub></span>；如果<span class="math inline"><em>f</em>′(<em>x</em><sub>0</sub>) = 0</span>且<span class="math inline"><em>f</em>′(<em>x</em><sub>0</sub>)</span>比其附近左侧函数值小，比其附近右侧函数值大，则<span class="math inline"><em>f</em>′(<em>x</em>)</span>在<span class="math inline"><em>x</em> = <em>x</em><sub>0</sub></span>取得<strong>极大值</strong>为<span class="math inline"><em>f</em>(<em>x</em><sub>0</sub>)</span>，极大值点<span class="math inline"><em>x</em> = <em>x</em><sub>0</sub></span>。极大值与极小值统称<strong>极值</strong>，极大值点与极小值点统称<strong>极值点</strong>。极值反映的是函数在某一点附近的大小情况，刻画函数的局部性质。</p>
<p>​ 如果在区间<span class="math inline">[<em>a</em>,<em>b</em>]</span>，函数的图像是一条连续的曲线，则函数一定有最大最小值。使用导数求函数最大最小值的方法如下：</p>
<ol type="1">
<li>求函数在<span class="math inline">(<em>a</em>,<em>b</em>)</span>上的极值；</li>
<li>将函数<span class="math inline"><em>f</em>(<em>x</em>)</span>各极值与端点处的函数值<span class="math inline"><em>f</em>(<em>a</em>)</span>、<span class="math inline"><em>f</em>(<em>b</em>)</span>比较，最大者为极大值，最小者为极小值。</li>
</ol>
<p>​ 对于三次函数 <span class="math inline"><em>y</em> = <em>a</em><em>x</em><sup>3</sup> + <em>b</em><em>x</em><sup>2</sup> + <em>c</em><em>x</em> + <em>d</em></span>，其为中心对称图形，对称中心
<span class="math inline">$(-\dfrac{b}{3a},f(-\dfrac{b}{3a}))$</span>（由其导函数推出）。</p>
<h4 id="导数与单调性">2. 导数与单调性</h4>
<blockquote>
<h3 id="解决导数与单调性问题">解决导数与单调性问题</h3>
<ol type="1">
<li>==判断定义域==；</li>
<li>求导，简并导数，使导数可以判断正负；
<ol type="1">
<li>如果不含参，令导数为零，求极值点，根据导数正负判断增减性区间。</li>
<li>如果含参，可以参考 3 与 4 ：</li>
</ol></li>
<li>参数分离法：适合已知增减性判断参数取值，且可以提取参数，并且提取出的等式可以简单判断正负。</li>
<li>分类讨论满足导数为零，根据导数正负判断增减性区间。</li>
</ol>
</blockquote>
<h4 id="导数与极值最值">3. 导数与极值、最值</h4>
<blockquote>
<h3 id="解决导数与极值最值问题">解决导数与极值、最值问题</h3>
<h5 id="已知定义域求函数恒成立问题">1.已知定义域求函数恒成立问题</h5>
<ol type="1">
<li>==判断定义域==；</li>
<li>求导，求极值点，求出极值与定义域边界值；</li>
<li>判断极值与边界值大小。</li>
</ol>
<h5 id="已知函数与另一函数有交点问题">2.
已知函数与另一函数有交点问题</h5>
<ol type="1">
<li>令新函数，判断定义域，求导数；</li>
<li>有 n 个交点实际就是==原函数有<span class="math inline">(<em>n</em>−1)</span>个增减区间（<span class="math inline"><em>n</em> − 1</span>个极值点）的问题，转换为求极值的正负问题==。</li>
<li>如果对于一个干净的二、三次函数，可以转换为二次函数的根的数量问题，如<span class="math inline"><em>f</em>(<em>x</em>) = <em>x</em><sup>3</sup> − 4<em>x</em><sup>2</sup> − (3+<em>b</em>)<em>x</em></span>，求导<span class="math inline"><em>f</em>′(<em>x</em>) = 3<em>x</em><sup>2</sup> − 8<em>x</em> − 3 − <em>b</em></span>，如果<span class="math inline"><em>f</em>(<em>x</em>)</span>有三个根，对于<span class="math inline"><em>f</em>(<em>x</em>) = <em>x</em>(<em>x</em><sup>2</sup>−4<em>x</em>−3−<em>b</em>)</span>，满足<span class="math inline"><em>g</em>(<em>x</em>) = <em>x</em><sup>2</sup> − 4<em>x</em> − 3 − <em>b</em></span>函数<span class="math inline"><em>x</em><sub>1</sub><em>x</em><sub>2</sub> ≠ 0</span>及<span class="math inline"><em>Δ</em> &gt; 0</span>即可。</li>
</ol>
<h5 id="已知函数始终在另一个函数的上面或下面">3.
已知函数始终在另一个函数的上面或下面</h5>
<ol type="1">
<li>方法一：
<ol type="1">
<li>求两个函数定义域与导数，求最值；</li>
<li>例如：如果对于<span class="math inline">(<em>a</em>,<em>b</em>)</span>存在<span class="math inline"><em>f</em>′(<em>x</em>) &lt; 0</span>，<span class="math inline"><em>g</em>′(<em>x</em>) &gt; 0</span>，对于<span class="math inline">(<em>b</em>,<em>c</em>)</span>存在<span class="math inline"><em>f</em>′(<em>x</em>) &gt; 0</span>，<span class="math inline"><em>g</em>′(<em>x</em>) &lt; 0</span>，且满足<span class="math inline"><em>f</em>′(<em>x</em><sub>0</sub>) = <em>g</em>′(<em>x</em><sub>1</sub>) = 0</span>，<span class="math inline"><em>f</em>(<em>x</em>)<sub><em>极</em><em>小</em></sub> &gt; <em>g</em>(<em>x</em>)<sub><em>极</em><em>大</em></sub></span>，<span class="math inline"><em>x</em><sub>0</sub> &lt; <em>x</em><sub>1</sub></span>，根据图像可以判断在<span class="math inline"><em>x</em> ∈ (<em>a</em>,<em>c</em>)</span>，<span class="math inline"><em>f</em>(<em>x</em>)</span>恒在<span class="math inline"><em>g</em>(<em>x</em>)</span>上方。</li>
</ol></li>
<li>方法二（<strong>常用</strong>）：
<ol type="1">
<li>令新函数为两个函数的差，求导；</li>
<li>判断新函数的最小值与某个数的大小恒成立关系。</li>
</ol></li>
</ol>
<p>==更多恒成立内容见[[High School, Mathematics, Function],
使用导数判断函数的单调性、极值、最值, 简单的恒成立问题]</p>
</blockquote>
<h3 id="三导数作图">三、导数作图</h3>
<h4 id="导数作图">1. 导数作图</h4>
<p>​
根据导数判断原函数图形、根据原函数判断导函数图形等题目中常用<strong>特殊值、单调性、增减性、对称性</strong>判断。</p>
<h4 id="分式型导数作图">2. 分式型导数作图</h4>
<p>​
对于分式型函数的极限，法国数学家洛必达给出如下结论（<strong>洛必达法则</strong>）：如果<span class="math inline"><em>x</em> → <em>a</em></span>，<span class="math inline"><em>f</em>(<em>x</em>)</span>与<span class="math inline"><em>g</em>(<em>x</em>)</span>同时趋近 0 或<span class="math inline">∞</span>，有： <span class="math display">$$
\notag\begin{align}\lim_{\Delta
x\rightarrow0}{\frac{f(x)}{g(x)}}=\lim_{\Delta
x\rightarrow0}{\frac{f'(x)}{g'(x)}}\end{align}
$$</span> ​ 另外，对于分式函数<span class="math inline">$\frac{f(x)}{g(x)}$</span>，如果<span class="math inline"><em>f</em>(<em>a</em>) ≠ 0</span>且<span class="math inline"><em>g</em>(<em>a</em>) = 0</span>，则<span class="math inline"><em>x</em> = <em>a</em></span>为函数的一条渐近线。</p>
<h3 id="四简单的恒成立问题">四、简单的恒成立问题</h3>
<p>​ 恒成立问题归纳如下：</p>
<table>
<colgroup>
<col style="width: 55%">
<col style="width: 44%">
</colgroup>
<thead>
<tr class="header">
<th>命题</th>
<th>思路</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><span class="math inline"><em>f</em>(<em>x</em>) ≥ 0</span>在定义域内恒成立</td>
<td><span class="math inline"><em>f</em>(<em>x</em>)<sub><em>m</em><em>i</em><em>n</em></sub> ≥ 0</span></td>
</tr>
<tr class="even">
<td><span class="math inline"><em>f</em>(<em>x</em>) ≤ 0</span>在定义域内恒成立</td>
<td><span class="math inline"><em>f</em>(<em>x</em>)<sub><em>m</em><em>i</em><em>n</em></sub> ≤ 0</span></td>
</tr>
<tr class="odd">
<td><span class="math inline"><em>f</em>(<em>x</em>) ≥ <em>g</em>(<em>x</em>)</span>在定义域内恒成立</td>
<td><span class="math inline">(<em>f</em>(<em>x</em>)−<em>g</em>(<em>x</em>))<sub><em>m</em><em>i</em><em>n</em></sub> ≥ 0</span></td>
</tr>
<tr class="even">
<td><span class="math inline"><em>f</em>(<em>x</em>) ≤ <em>g</em>(<em>x</em>)</span>在定义域内恒成立</td>
<td><span class="math inline">(<em>f</em>(<em>x</em>)−<em>g</em>(<em>x</em>))<sub><em>m</em><em>i</em><em>n</em></sub> ≤ 0</span></td>
</tr>
<tr class="odd">
<td><span class="math inline">∀<em>x</em> ∈ <em>D</em>, <em>f</em>(<em>x</em>) &gt; <em>m</em></span></td>
<td><span class="math inline"><em>f</em>(<em>x</em>)<sub><em>m</em><em>a</em><em>x</em></sub> &gt; <em>m</em></span></td>
</tr>
<tr class="even">
<td><span class="math inline">∀<em>x</em> ∈ <em>D</em>, <em>f</em>(<em>x</em>) &lt; <em>m</em></span></td>
<td><span class="math inline"><em>f</em>(<em>x</em>)<sub><em>m</em><em>a</em><em>x</em></sub> &lt; <em>m</em></span></td>
</tr>
<tr class="odd">
<td><span class="math inline">∀<em>x</em><sub>1</sub> ∈ <em>A</em>, ∃<em>x</em><sub>2</sub> ∈ <em>B</em>, <em>f</em>(<em>x</em><sub>1</sub>) = <em>g</em>(<em>x</em><sub>2</sub>)</span></td>
<td><span class="math inline"><em>f</em>(<em>A</em>) ⊆ <em>g</em>(<em>B</em>)</span>（<span class="math inline"><em>f</em>(<em>x</em>)</span>的值域是<span class="math inline"><em>g</em>(<em>x</em>)</span>值域的子集）</td>
</tr>
<tr class="even">
<td><span class="math inline">∃<em>x</em><sub>1</sub> ∈ <em>A</em>, ∃<em>x</em><sub>2</sub> ∈ <em>B</em>, <em>f</em>(<em>x</em><sub>1</sub>) = <em>g</em>(<em>x</em><sub>2</sub>)</span></td>
<td><span class="math inline"><em>f</em>(<em>A</em>) ∩ <em>g</em>(<em>B</em>) ≠ ⌀</span>（<span class="math inline"><em>f</em>(<em>x</em>)</span>的值域与<span class="math inline"><em>g</em>(<em>x</em>)</span>值域有非空交集）</td>
</tr>
<tr class="odd">
<td>任意小求最大</td>
<td>任意大求最小</td>
</tr>
<tr class="even">
<td>存在大求最大</td>
<td>存在小求最小</td>
</tr>
<tr class="odd">
<td><span class="math inline">∀<em>x</em><sub>1</sub> ∈ <em>A</em>, ∀<em>x</em><sub>2</sub> ∈ <em>B</em>, <em>f</em>(<em>x</em><sub>1</sub>) ≤ <em>g</em>(<em>x</em><sub>2</sub>)</span></td>
<td><span class="math inline"><em>f</em>(<em>x</em>)<sub><em>m</em><em>a</em><em>x</em></sub> ≤ <em>g</em>(<em>x</em>)<sub><em>m</em><em>i</em><em>n</em></sub></span></td>
</tr>
<tr class="even">
<td><span class="math inline">∀<em>x</em><sub>1</sub> ∈ <em>A</em>, ∀<em>x</em><sub>2</sub> ∈ <em>B</em>, <em>f</em>(<em>x</em><sub>1</sub>) ≥ <em>g</em>(<em>x</em><sub>2</sub>)</span></td>
<td><span class="math inline"><em>f</em>(<em>x</em>)<sub><em>m</em><em>i</em><em>n</em></sub> ≥ <em>g</em>(<em>x</em>)<sub><em>m</em><em>a</em><em>x</em></sub></span></td>
</tr>
<tr class="odd">
<td><span class="math inline">∀<em>x</em><sub>1</sub> ∈ <em>A</em>, ∃<em>x</em><sub>2</sub> ∈ <em>B</em>, <em>f</em>(<em>x</em><sub>1</sub>) ≤ <em>g</em>(<em>x</em><sub>2</sub>)</span></td>
<td><span class="math inline"><em>f</em>(<em>x</em>)<sub><em>m</em><em>a</em><em>x</em></sub> ≤ <em>g</em>(<em>x</em>)<sub><em>m</em><em>a</em><em>x</em></sub></span></td>
</tr>
<tr class="even">
<td><span class="math inline">∀<em>x</em><sub>1</sub> ∈ <em>A</em>, ∃<em>x</em><sub>2</sub> ∈ <em>B</em>, <em>f</em>(<em>x</em><sub>1</sub>) ≥ <em>g</em>(<em>x</em><sub>2</sub>)</span></td>
<td><span class="math inline"><em>f</em>(<em>x</em>)<sub><em>m</em><em>i</em><em>n</em></sub> ≥ <em>g</em>(<em>x</em>)<sub><em>m</em><em>i</em><em>n</em></sub></span></td>
</tr>
<tr class="odd">
<td><span class="math inline">∃<em>x</em><sub>1</sub> ∈ <em>A</em>, ∃<em>x</em><sub>2</sub> ∈ <em>B</em>, <em>f</em>(<em>x</em><sub>1</sub>) ≤ <em>g</em>(<em>x</em><sub>2</sub>)</span></td>
<td><span class="math inline"><em>f</em>(<em>x</em>)<sub><em>m</em><em>i</em><em>n</em></sub> ≤ <em>g</em>(<em>x</em>)<sub><em>m</em><em>a</em><em>x</em></sub></span></td>
</tr>
<tr class="even">
<td><span class="math inline">∃<em>x</em><sub>1</sub> ∈ <em>A</em>, ∃<em>x</em><sub>2</sub> ∈ <em>B</em>, <em>f</em>(<em>x</em><sub>1</sub>) ≥ <em>g</em>(<em>x</em><sub>2</sub>)</span></td>
<td><span class="math inline"><em>f</em>(<em>x</em>)<sub><em>m</em><em>a</em><em>x</em></sub> ≥ <em>g</em>(<em>x</em>)<sub><em>m</em><em>i</em><em>n</em></sub></span></td>
</tr>
<tr class="odd">
<td><span class="math inline">∀<em>x</em><sub>1</sub> ∈ <em>A</em>, ∀<em>x</em><sub>2</sub> ∈ <em>B</em>, |<em>f</em>(<em>x</em><sub>1</sub>)−<em>g</em>(<em>x</em><sub>2</sub>)| ≤ <em>a</em></span></td>
<td><span class="math inline"><em>g</em>(<em>x</em>)<sub><em>m</em><em>a</em><em>x</em></sub> − <em>f</em>(<em>x</em>)<sub><em>m</em><em>i</em><em>n</em></sub> ≤ <em>a</em></span>
+ <span class="math inline"><em>f</em>(<em>x</em>)<sub><em>m</em><em>a</em><em>x</em></sub> − <em>g</em>(<em>x</em>)<sub><em>m</em><em>i</em><em>n</em></sub> ≤ <em>a</em></span></td>
</tr>
<tr class="even">
<td><span class="math inline">∀<em>x</em><sub>1</sub> ∈ <em>A</em>, ∀<em>x</em><sub>2</sub> ∈ <em>B</em>, |<em>f</em>(<em>x</em><sub>1</sub>)−<em>g</em>(<em>x</em><sub>2</sub>)| ≥ <em>a</em></span></td>
<td><span class="math inline"><em>g</em>(<em>x</em>)<sub><em>m</em><em>i</em><em>n</em></sub> − <em>f</em>(<em>x</em>)<sub><em>m</em><em>a</em><em>x</em></sub> ≥ <em>a</em></span>
/ <span class="math inline"><em>f</em>(<em>x</em>)<sub><em>m</em><em>i</em><em>n</em></sub> − <em>g</em>(<em>x</em>)<sub><em>m</em><em>a</em><em>x</em></sub> ≥ <em>a</em></span></td>
</tr>
<tr class="odd">
<td><span class="math inline">∃<em>x</em><sub>1</sub> ∈ <em>A</em>, ∃<em>x</em><sub>2</sub> ∈ <em>B</em>, |<em>f</em>(<em>x</em><sub>1</sub>)−<em>g</em>(<em>x</em><sub>2</sub>)| ≤ <em>a</em></span></td>
<td><span class="math inline"><em>g</em>(<em>x</em>)<sub><em>m</em><em>i</em><em>n</em></sub> − <em>f</em>(<em>x</em>)<sub><em>m</em><em>a</em><em>x</em></sub> ≤ <em>a</em></span>
+ <span class="math inline"><em>f</em>(<em>x</em>)<sub><em>m</em><em>i</em><em>n</em></sub> − <em>g</em>(<em>x</em>)<sub><em>m</em><em>a</em><em>x</em></sub> ≤ <em>a</em></span></td>
</tr>
<tr class="even">
<td><span class="math inline">∃<em>x</em><sub>1</sub> ∈ <em>A</em>, ∃<em>x</em><sub>2</sub> ∈ <em>B</em>, |<em>f</em>(<em>x</em><sub>1</sub>)−<em>g</em>(<em>x</em><sub>2</sub>)| ≥ <em>a</em></span></td>
<td><span class="math inline"><em>g</em>(<em>x</em>)<sub><em>m</em><em>a</em><em>x</em></sub> − <em>f</em>(<em>x</em>)<sub><em>m</em><em>i</em><em>n</em></sub> ≥ <em>a</em></span>
/ <span class="math inline"><em>f</em>(<em>x</em>)<sub><em>m</em><em>a</em><em>x</em></sub> − <em>g</em>(<em>x</em>)<sub><em>m</em><em>i</em><em>n</em></sub> ≥ <em>a</em></span></td>
</tr>
<tr class="odd">
<td><span class="math inline">∀<em>x</em><sub>1</sub> ∈ <em>A</em>, ∃<em>x</em><sub>2</sub> ∈ <em>B</em>, |<em>f</em>(<em>x</em><sub>1</sub>)−<em>f</em>(<em>x</em><sub>2</sub>)| ≤ <em>a</em></span></td>
<td><span class="math inline"><em>g</em>(<em>x</em>)<sub><em>m</em><em>i</em><em>n</em></sub> − <em>f</em>(<em>x</em>)<sub><em>m</em><em>i</em><em>n</em></sub> ≤ <em>a</em></span>
+ <span class="math inline"><em>f</em>(<em>x</em>)<sub><em>m</em><em>a</em><em>x</em></sub> − <em>g</em>(<em>x</em>)<sub><em>m</em><em>a</em><em>x</em></sub> ≤ <em>a</em></span></td>
</tr>
<tr class="even">
<td><span class="math inline">∀<em>x</em><sub>1</sub> ∈ <em>A</em>, ∃<em>x</em><sub>2</sub> ∈ <em>B</em>, |<em>f</em>(<em>x</em><sub>1</sub>)−<em>f</em>(<em>x</em><sub>2</sub>)| ≥ <em>a</em></span></td>
<td><span class="math inline"><em>g</em>(<em>x</em>)<sub><em>m</em><em>a</em><em>x</em></sub> − <em>f</em>(<em>x</em>)<sub><em>m</em><em>a</em><em>x</em></sub> ≥ <em>a</em></span>
/ <span class="math inline"><em>f</em>(<em>x</em>)<sub><em>m</em><em>i</em><em>n</em></sub> − <em>g</em>(<em>x</em>)<sub><em>m</em><em>i</em><em>n</em></sub> ≥ <em>a</em></span></td>
</tr>
</tbody>
</table>
<p>​ 恒成立问题思路归纳如下：</p>
<table>
<colgroup>
<col style="width: 14%">
<col style="width: 85%">
</colgroup>
<thead>
<tr class="header">
<th>方法</th>
<th>内容</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>分离变量法</td>
<td>将参数与变量分开，使不等式一边只有参数，一边只有变量（且该部分可以求得最值）。<br>分离变量法能够成功的前提是分离后的函数的最值可求，需要先分离再验证。</td>
</tr>
<tr class="even">
<td>指数找队友</td>
<td>与指数相关的恒成立问题，==如果很难求导数的零点==，优先考虑将函数变成<span class="math inline"><em>e</em><sup><em>x</em></sup><em>f</em>(<em>x</em>)</span>或<span class="math inline"><em>e</em><sup>−<em>x</em></sup><em>f</em>(<em>x</em>)</span>的形式。<br>原因：对函数<span class="math inline"><em>h</em>(<em>x</em>)</span>变形后的函数<span class="math inline"><em>g</em>(<em>x</em>)</span>求导，发现导数的零点与指数函数毫无关系，只与<span class="math inline"><em>f</em>(<em>x</em>)</span>有关。<br>注意事项：1.
不要看到导数就变形，有些本身就可以提取公因式、因式分解求解；<br>2.
求最值、极值、单调性不可以变形，否则就改变了原式。</td>
</tr>
<tr class="odd">
<td>对数单身狗</td>
<td>与对数相关的恒成立问题，==如果很难求导数的零点==，则优先考虑将函数变形为<span class="math inline"><em>f</em>(<em>x</em>) + ln <em>g</em>(<em>x</em>)</span>或<span class="math inline"><em>f</em>(<em>x</em>)(ln<em>f</em>(<em>x</em>)+<em>C</em>)</span>的形式。<br>原因：对函数<span class="math inline"><em>h</em>(<em>x</em>)</span>变形后的函数<span class="math inline"><em>g</em>(<em>x</em>)</span>求导，发现导数的零点与指数函数毫无关系，只与<span class="math inline"><em>f</em>(<em>x</em>)</span>有关。</td>
</tr>
</tbody>
</table>]]></content>
      <categories>
        <category>High School</category>
        <category>Mathematics</category>
        <category>Function</category>
      </categories>
      <tags>
        <tag>School Notes</tag>
        <tag>High School</tag>
        <tag>Mathematics</tag>
      </tags>
  </entry>
  <entry>
    <title>Git 使用新 gpg 秘钥重新 commit</title>
    <url>/2022/03/05/computer%20science/source%20control/resign-all-commits-with-new-gpg-key/</url>
    <content><![CDATA[<p>​ 之前的 gpg 私钥在电脑重装时候丢失了，更早的私钥却还在，GitHub
上两者又都有，就想着把所有我签名的 commits 都改成更早的那一个 gpg
私钥。</p>
<div class="sourceCode" id="cb1"><pre class="sourceCode sh"><code class="sourceCode bash"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a><span class="fu">git</span> filter-branch <span class="at">--commit-filter</span> <span class="st">'</span></span>
<span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a><span class="st">if [ "$GIT_COMMITTER_EMAIL" = "your@email.com" ]</span></span>
<span id="cb1-3"><a href="#cb1-3" aria-hidden="true" tabindex="-1"></a><span class="st">then</span></span>
<span id="cb1-4"><a href="#cb1-4" aria-hidden="true" tabindex="-1"></a><span class="st">git commit-tree -S "$@";</span></span>
<span id="cb1-5"><a href="#cb1-5" aria-hidden="true" tabindex="-1"></a><span class="st">fi</span></span>
<span id="cb1-6"><a href="#cb1-6" aria-hidden="true" tabindex="-1"></a><span class="st">'</span> <span class="at">--</span> <span class="at">--all</span></span>
<span id="cb1-7"><a href="#cb1-7" aria-hidden="true" tabindex="-1"></a><span class="co"># 将 your@email.com 更改为自己以前 commit 时候用的邮箱即可</span></span>
<span id="cb1-8"><a href="#cb1-8" aria-hidden="true" tabindex="-1"></a><span class="co"># 建议运行前先备份！</span></span></code></pre></div>]]></content>
      <categories>
        <category>Computer Science</category>
        <category>Source Control</category>
      </categories>
      <tags>
        <tag>Computer Science</tag>
        <tag>Source Control</tag>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title>发酵工程</title>
    <url>/2022/03/02/biology/High%20School/b5%20bioengineering/P1%20%E5%8F%91%E9%85%B5%E5%B7%A5%E7%A8%8B/</url>
    <content><![CDATA[Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
<h2 id="知识聚焦">知识聚焦</h2>
<blockquote>
<h5 id="本章知识内容较多考察点较细需要牢记相关知识">本章知识内容较多，考察点较细，需要牢记相关知识。</h5>
</blockquote>
<h3 id="一发酵与传统发酵技术">一、发酵与传统发酵技术</h3>
<p>​
<strong><em>发酵</em>是指人们利用微生物，在适宜的条件下，将原料通过微生物的代谢转化为人类所需要的产物</strong>。</p>
<p>​
<strong><em>传统发酵技术</em>是指直接利用原材料中天然存在的微生物，或前一次发酵保存下来的面团、卤汁等发酵物中的微生物进行发酵、制作食品的技术</strong>。</p>
<table style="width:100%;">
<colgroup>
<col style="width: 4%">
<col style="width: 19%">
<col style="width: 34%">
<col style="width: 34%">
<col style="width: 5%">
</colgroup>
<thead>
<tr class="header">
<th></th>
<th>泡菜</th>
<th>果酒</th>
<th>果醋</th>
<th>腐乳</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>菌种</td>
<td>乳酸菌</td>
<td>酵母菌</td>
<td>酵母菌、醋酸菌（或醋酸菌）</td>
<td>毛霉、曲霉</td>
</tr>
<tr class="even">
<td>代谢类型</td>
<td>异养厌氧型</td>
<td>异养需氧型</td>
<td>异养兼性厌氧型</td>
<td>异养厌氧型</td>
</tr>
<tr class="odd">
<td>细胞类型</td>
<td>细菌</td>
<td>真菌</td>
<td>细菌</td>
<td>真菌</td>
</tr>
<tr class="even">
<td>代谢温度</td>
<td>20-30 ℃</td>
<td>18-30 ℃</td>
<td>30-35 ℃</td>
<td>17 ℃</td>
</tr>
<tr class="odd">
<td>时间</td>
<td>4-7 天</td>
<td>10-12 天</td>
<td>7-8 天</td>
<td>10-15 天</td>
</tr>
<tr class="even">
<td>pH</td>
<td>酸性</td>
<td>酸性</td>
<td>酸性</td>
<td>中性</td>
</tr>
<tr class="odd">
<td>代谢原理</td>
<td><span class="math inline">$\ce{C6H12O6 -&gt;[酶] 2C3H6O3 +
energy}$</span></td>
<td><span class="math inline">$\ce{C6H12O6 + 6O2 -&gt;[酶] 6CO2 + 12H2O
+ energy}$</span><br><span class="math inline">$\ce{C6H12O6 -&gt;[酶]
2C2H5OH + 2CO2 + energy}$</span></td>
<td><span class="math inline">$\ce{C6H12O6 + 2O2 -&gt;[酶] 2CH3COOH +
2CO2 + 2H2O +energy}$</span><br><span class="math inline">$\ce{C2H5OH
+ O2 -&gt;[酶] CH3COOH + H2O + energy}$</span></td>
<td>蛋白质水解：<span class="math inline">$\ce{Protein + H2O -&gt;[酶]
\text{a.a.}}$</span></td>
</tr>
<tr class="even">
<td>相关鉴定</td>
<td>亚硝酸盐：==盐酸酸化条件下亚硝酸盐与对氨基苯磺酸反应后，与
N-1-萘基乙二胺盐酸盐结合形成玫瑰红色染料。==</td>
<td>酒精：<span class="math inline">$\ce{K2CrO4(aq, H^+)}$</span></td>
<td>醋酸：闻气味、检测 pH</td>
<td></td>
</tr>
<tr class="odd">
<td>制作过程</td>
<td>1. 配置盐水（清水：食盐配置百分比 5%-20%），煮沸冷却。 <br>2.
加入蒜瓣、生姜和其他香辛料，继续装至八分满。 <br>3.
缓缓倒入冷却的盐水，使盐水没过全部菜料，盖好坛盖。<br>4.
向坛盖边沿水槽注水，并注意经常向水槽中补满水。室温发酵。</td>
<td>1. 清洗发酵瓶、榨汁机等工具，用 70%酒精消毒、晾干。<br>2.
挑选并冲洗新鲜葡萄，用清水冲洗 1-2
次，去除枯梗和腐烂的坏果，沥干。<br>3.
用榨汁机榨取葡萄汁，装入发酵瓶中，留有<span class="math inline">$\frac{1}{3}$</span>的空间。<br>4. 控制温度在
18-30 ℃，发酵 10-12 天，每隔 12h 左右拧松瓶盖排气。</td>
<td>在果酒的基础上：<br>5. 打开瓶盖，盖上纱布，控制温度在 30-35
℃，发酵 7-8 天。</td>
<td>前期发酵：<br>1. 让豆腐上生出毛霉。<br>2.
加盐腌制。<br>后期发酵（抑制毛霉生长，改变口感风味）：<br>3.
加卤汤，装瓶。<br>4. 密封腌制。</td>
</tr>
<tr class="even">
<td>注意事项</td>
<td>1. 煮沸盐水：除去水中溶解氧；杀灭水中其他杂菌。<br>2.
==亚硝酸盐不是致癌物==，亚硝酸盐的代谢产物<strong>亚硝胺</strong>才是致癌物。<br>3.
泡菜坛盖边注满水用以保证乳酸菌发酵的无氧环境，需要及时补充水。<br>4.
泡菜坛需要选择透气性差、无裂纹、火候好、无沙眼、坛沿深、盖子吻合好的。<br>5.
材料选择：蔬菜需要新鲜（避免硝酸盐被还原）<br>6.
发酵温度：控制在室温，过高滋生杂菌，过低发酵时间过长。<br>7.
<strong>腌制条件：<em>腌制时间、温度、食盐用量，防止杂菌污染，严格灭菌。</em></strong></td>
<td>1. 及时排气，避免发酵旺盛期 <span class="math inline">$\ce{CO2}$</span> 撑裂发酵瓶。<br>2.
制酒时，应该<strong>先打开后关闭充气口</strong>。<br>3.
酵母菌数量不足（前期有氧呼吸不足）会导致酒精浓度低。<br>4.
酵母菌数量充足但发酵时密封不严会导致酒精浓度低。<br>5.
葡萄酒呈红色可能是葡萄皮上的色素进入发酵液所致。</td>
<td>在果酒的基础上：<br>6.
制醋时，应该<strong>始终打开充气口</strong>（连接气泵），输入无菌空气。<br>7.
若产生的醋酸少，很可能是供氧不足所致（短期中断也会导致大量醋酸菌死亡）。</td>
<td>1. 食盐与豆腐块用量控制在
1:5，过高影响口味，过低不足以抑制微生物生长，易腐败变质。<br>2.
卤汤中酒精浓度应控制在 12%
左右，过高延长腐乳成熟时间，过低不足以抑制微生物生长，易腐败变质。<br>3.
装瓶时需要洗刷干净发酵瓶并沸水消毒。<br>4.
装瓶时迅速小心，加卤汤后胶条密封瓶口，封瓶时将瓶口通过酒精灯火焰，防止瓶口被污染。<br>5.
豆腐含水量以 70% 适宜，过高不易成形，过低不利于毛霉生长。</td>
</tr>
</tbody>
</table>
<blockquote>
<h5 id="注意事项">注意事项</h5>
<ol type="1">
<li>使用传统发酵技术发酵时都是利用多菌种进行发酵，如腐乳的发酵中有青霉、毛霉、曲霉、酵母参与，只是毛霉是主要参与者。</li>
<li>每一次取样时取样用具要洗净，取样后迅速封口，注意无菌操作。</li>
<li>利用醋酸菌、酵母菌等时不可加入青霉素等抗生素。</li>
</ol>
</blockquote>
<h3 id="二微生物的培养">二、微生物的培养</h3>
<h4 id="培养基">1. 培养基</h4>
<p>​
人们按照微生物对营养物质的不同需求，配制出供其生长繁殖的营养基质称为<strong><em>营养基</em>，用以<em>培养、分离、鉴定、保存微生物</em>或<em>积累其代谢物</em></strong>。</p>
<p>​
<strong><em>菌落</em>，是指由<em>单个或少数微生物细胞</em>在适宜<em>固体培养基</em>表面或内部生长繁殖到一定程度，形成<em>以母细胞为中心</em>的一团<em>肉眼可见的、有一定形态、构造</em>等特征的<em>子细胞集团</em></strong>。</p>
<p>​
根据物理性质，可以分为液体培养基（大量培养）、半固体培养基（观察微生物运动、分离、鉴定）和固体培养基（实验室中分离、鉴定、活菌计数、保藏菌种）。根据需求，可以分为选择培养基（筛选目的菌）和鉴定培养基（鉴别微生物）。</p>
<p>​ 各种培养基一般都含有微生物的 6 大营养要素（<strong><em>C 源、N
源、水、能源、生长因子、无机盐</em></strong>）。此外，为了满足的生长环境，需要适当<strong>调整
pH、<span class="math inline">$\ce{O2}$</span>等成分</strong>。在培养乳酸杆菌时需要添加<strong>维生素</strong>，培养霉菌时需要调整
pH 为弱酸性，培养细菌时需要调整 pH 为中性或弱碱性，培养酵母菌时需要调整
pH 为弱酸性 <span class="citation" data-cites="EssentialMicroBiology_CultureMedium_pH">[@EssentialMicroBiology_CultureMedium_pH]</span>。==环境条件会影响微生物的生长繁殖与代谢物的生成==（如谷氨酸发酵中，中性或弱碱性条件积累谷氨酸，酸性条件形成谷氨酸胺、N-乙酰谷胺酰胺）。</p>
<blockquote>
<h4 id="琼脂作为凝固剂的优点">琼脂作为凝固剂的优点</h4>
<ol type="1">
<li>琼脂一般不会被微生物代谢，不能供给能量或作碳源。</li>
<li>琼脂在室温下是固体。</li>
</ol>
</blockquote>
<h4 id="无菌技术">2. 无菌技术</h4>
<p>​
==获得纯培养物的关键在于防范杂菌污染==，为了防止实验室的培养物被杂菌污染（获得纯净培养物），有效避免操作者自身被微生物感染，我们采取无菌技术：</p>
<table>
<thead>
<tr cid="n181" mdtype="table_row">
<th>
<span contenteditable="true" data-cid="n182" data-mdtype="table_cell"></span>
</th>
<th>
<span contenteditable="true" data-cid="n183" data-mdtype="table_cell"><span data-md-inline="plain">方法</span></span>
</th>
<th>
<span contenteditable="true" data-cid="n184" data-mdtype="table_cell"><span data-md-inline="plain">目的</span></span>
</th>
<th>
<span contenteditable="true" data-cid="n185" data-mdtype="table_cell"><span data-md-inline="plain">常见方法</span></span>
</th>
<th>
<span contenteditable="true" data-cid="n186" data-mdtype="table_cell"><span data-md-inline="plain">应用范围</span></span>
</th>
</tr>
</thead>
<tbody>
<tr cid="n187" mdtype="table_row">
<td rowspan="4">
<span contenteditable="true" data-cid="n188" data-mdtype="table_cell"><span data-md-inline="plain">消毒</span></span>
</td>
<td rowspan="4">
<span contenteditable="true" data-cid="n189" data-mdtype="table_cell"><span data-md-inline="plain">较为温和的物化或生物方法</span></span>
</td>
<td rowspan="4">
<span contenteditable="true" data-cid="n190" data-mdtype="table_cell"><span data-md-inline="plain">杀死物体表面或内部的一部分微生物（不含芽孢和孢子）</span></span>
</td>
<td>
<span contenteditable="true" data-cid="n191" data-mdtype="table_cell"><span data-md-inline="plain">煮沸消毒</span></span>
</td>
<td>
<span contenteditable="true" data-cid="n192" data-mdtype="table_cell"><span data-md-inline="plain">日常用品</span></span>
</td>
</tr>
<tr cid="n199" mdtype="table_row">
<td>
<span contenteditable="true" data-cid="n203" data-mdtype="table_cell"><span data-md-inline="plain">巴氏消毒</span></span>
</td>
<td>
<span contenteditable="true" data-cid="n204" data-mdtype="table_cell"><span data-md-inline="plain">不耐高温的液体</span></span>
</td>
</tr>
<tr cid="n205" mdtype="table_row">
<td>
<span contenteditable="true" data-cid="n209" data-mdtype="table_cell"><span data-md-inline="plain">紫外线消毒</span></span>
</td>
<td>
<span contenteditable="true" data-cid="n210" data-mdtype="table_cell"><span data-md-inline="plain">环境消毒</span></span>
</td>
</tr>
<tr cid="n211" mdtype="table_row">
<td>
<span contenteditable="true" data-cid="n215" data-mdtype="table_cell"><span data-md-inline="plain">化学药物（酒精、氯气等）消毒</span></span>
</td>
<td>
<span contenteditable="true" data-cid="n216" data-mdtype="table_cell"><span data-md-inline="plain">用酒精擦拭双手、用氯气消毒水源</span></span>
</td>
</tr>
<tr cid="n193" mdtype="table_row">
<td rowspan="3">
<span contenteditable="true" data-cid="n194" data-mdtype="table_cell"><span data-md-inline="plain">灭菌</span></span>
</td>
<td rowspan="3">
<span contenteditable="true" data-cid="n195" data-mdtype="table_cell"><span data-md-inline="plain">强烈的理化方法</span></span>
</td>
<td rowspan="3">
<span contenteditable="true" data-cid="n196" data-mdtype="table_cell"><span data-md-inline="plain">杀死物体内外所有的微生物（包括芽孢和孢子）</span></span>
</td>
<td>
<span contenteditable="true" data-cid="n197" data-mdtype="table_cell"><span data-md-inline="plain">灼烧灭菌</span></span>
</td>
<td>
<span contenteditable="true" data-cid="n198" data-mdtype="table_cell"><span data-md-inline="plain">接种工具</span></span>
</td>
</tr>
<tr cid="n217" mdtype="table_row">
<td>
<span contenteditable="true" data-cid="n221" data-mdtype="table_cell"><span data-md-inline="plain">干热灭菌</span></span>
</td>
<td>
<span contenteditable="true" data-cid="n222" data-mdtype="table_cell"><span data-md-inline="plain">玻璃器皿、金属用具</span></span>
</td>
</tr>
<tr cid="n223" mdtype="table_row">
<td>
<span contenteditable="true" data-cid="n227" data-mdtype="table_cell"><span data-md-inline="plain">高温蒸汽灭菌（湿热灭菌）</span></span>
</td>
<td>
<span contenteditable="true" data-cid="n228" data-mdtype="table_cell"><span data-md-inline="plain">培养基及容器</span></span>
</td>
</tr>
</tbody>
</table>
<h4 id="纯培养与选择培养">3. 纯培养与选择培养</h4>
<p>​
由单一个体繁殖所获得的微生物群体称为<strong>纯培养物</strong>，获得纯培养物的过程就是纯培养。纯培养的方法有<strong>平板划线法、稀释涂布平板法</strong>。纯培养的过程一般为==制备培养基（制备培养基、灭菌、倒平板）、接种与分离、培养==。</p>
<table>
<colgroup>
<col style="width: 4%">
<col style="width: 31%">
<col style="width: 31%">
<col style="width: 31%">
</colgroup>
<thead>
<tr class="header">
<th></th>
<th>倒平板</th>
<th>平板划线法</th>
<th>稀释涂布平板法</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>简介</td>
<td>制取固体培养基操作。</td>
<td>接种环在固体平板培养基表面连续划线接种菌体。</td>
<td>在一系列的梯度稀释后进行涂布平板法操作接种菌体。</td>
</tr>
<tr class="even">
<td>步骤</td>
<td>1. 酒精灯火焰旁右手拿锥形瓶，左手拔出棉塞。<br>2.
将瓶口迅速通过火焰灼烧灭菌，防止瓶口微生物污染培养基。<br>3.
用左手将培养皿打开一条稍大于瓶口的缝隙（不完全打开以防污染），右手将锥形瓶中培养基倒入培养皿中，左手立刻盖上培养皿的皿盖。<br>4.
等待培养基冷却后，倒置培养皿。</td>
<td>1. 将接种环在火焰上灼烧，直到接种环金属丝烧红。<br>2.
在火焰旁==冷却接种环==，拔出装有酵母菌培养液的试管棉塞。<br>3.
将试管口通过火焰灼烧灭菌。 在火焰附近取一环菌液。<br>4.
将试管口通过火焰灼烧灭菌，随后塞上棉塞。<br>5.
在火焰附近将皿盖打开一条缝隙，用接种环在培养基<strong>表面</strong>迅速浅浅划出平行线
3-5 条，盖上皿盖。<br>6.
灼烧接种环，冷却后从第一次划线末端开始下一次划线，作 5
次划线，最后一次划线不要与第一次划线相连。</td>
<td>1. 系列梯度稀释操作（梯度稀释菌液至<span class="math inline">10<sup>7</sup></span>，梯度<span class="math inline">10</span>）。<br>2. 取 0.1mL
菌液，添加到培养基表面。<br>3.
取出浸泡于酒精中的<strong>涂布器</strong>，在火焰上点燃，烧尽酒精后<strong>冷却涂布器</strong>。<br>4.
用涂布器将菌液均匀涂布在培养基表面。涂布时转动培养皿，使菌液分布均匀。</td>
</tr>
<tr class="odd">
<td>注意事项</td>
<td>1. 倒置培养皿，防止<strong>冷凝水滴落污染</strong>培养皿。<br>2.
纯培养酵母菌时，我们使用<strong>马铃薯琼脂培养基</strong>（马铃薯加水煮烂后过滤得到滤液，添加葡萄糖与琼脂）。</td>
<td>1.
不同阶段灼烧接种环目的：第一次操作前<strong>杀灭原有微生物</strong>；每次划线前杀灭上次划线后残留的菌种，<strong>使下次划线菌种直接来源于上次划线末端</strong>；划线结束后杀灭接种环上残留菌种，<strong>避免细菌污染环境和感染操作者</strong>。<br>2.
可以从具有显著菌落特征的区域菌落中挑选。</td>
<td>1.
燃尽涂布器上的酒精后冷却涂布器，防止<strong>杀灭菌液</strong>。<br>2.
可以从适宜稀释度的平板上的菌落挑选菌体。</td>
</tr>
<tr class="even">
<td>优劣</td>
<td>-</td>
<td>1. 可以根据菌落的特点获得某种微生物的单细胞菌落。<br>2.
不能对微生物计数，只能接种或分离微生物。</td>
<td>1.
可以<strong>接种或分离</strong>获得到单细胞菌落，也可以对微生物进行<strong>计数</strong>。<br>2.
在稀释倍数足够高时，培养基表面生长的一个<strong>单一菌落来源于<em>样品稀释液中的一个活菌</em></strong>，平板上的菌落数可以反映样品中含有活菌数的大概。进行数量测定时，选取平板上菌落数
30-300 的稀释度，并在该稀释度下重复 3 次实验，求平均。<br>3.
操作复杂，需要涂布多个平板。</td>
</tr>
</tbody>
</table>
<p>​ 人为提供利于目的菌生长的条件（营养、温度、pH
等），同时抑制或阻止其他微生物的生长是实验室微生物筛选的原理。</p>
<blockquote>
<h4 id="选择培养基">选择培养基</h4>
<ol type="1">
<li>全部营养成分具备下，加入物质（抗生素、高浓度食盐水等）。</li>
<li>改变培养基营养成分以分离微生物（排除氮源、碳源等）。</li>
<li>利用培养基特定化学成分分离（如仅提供唯一碳源为特定物质）。</li>
<li>通过某些特殊环境分离微生物（高盐分离耐盐菌，高温分离耐高温菌等）。</li>
</ol>
</blockquote>
<blockquote>
<h5 id="选择培养基上生长的微生物不一定是目的菌">选择培养基上生长的微生物不一定是目的菌：</h5>
<ol type="1">
<li>可能会有其他菌种同样具备条件。</li>
<li>可能是该菌种利用了目的菌代谢产物进行生存。</li>
</ol>
</blockquote>
<blockquote>
<h4 id="选择培养的鉴定">选择培养的鉴定</h4>
<p>​ 鉴定能分泌脲酶（<span class="math inline">$\ce{CO(NH2)2 + H2O
-&gt;[脲酶] CO2 ^ +
2NH3}$</span>）的细菌：<strong>酚红</strong>或酚酞指示剂——与<span class="math inline">$\ce{NH3}$</span>显红色（出现红色环带）。</p>
<p>​
鉴定能分解纤维素的细菌：<strong>刚果红</strong>染液——与纤维素生成红色配合物（出现透明圈）。</p>
<p>​
鉴定大肠杆菌：伊红美蓝（伊红亚甲基蓝；<strong>伊红亚甲蓝</strong>）培养基，大肠杆菌呈深紫色并伴有绿色金属光泽。</p>
</blockquote>
<h4 id="测定微生物数目">4. 测定微生物数目</h4>
<table>
<colgroup>
<col style="width: 6%">
<col style="width: 46%">
<col style="width: 46%">
</colgroup>
<thead>
<tr class="header">
<th></th>
<th>显微镜直接计数</th>
<th>间接计数（活菌计数）</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>原理</td>
<td>利用特定细菌计数板或血细胞计数板，在显微镜下观察、计数，然后再计算一定体积的样品中微生物的数量</td>
<td>在稀释倍数足够高时，培养基表面生长的一个单一菌落来源于样品稀释液中的一个活菌，平板上的菌落数可以反映样品中含有活菌数的大概。</td>
</tr>
<tr class="even">
<td>注意事项</td>
<td>1. 用计数板直接计数，方便且时间短。<br>2.
（在不使用台盼蓝、美兰等）无法区分死菌与活菌，<strong>导致<em>统计值比实际值偏大</em></strong>。<br>（可以使用台盼蓝：膜选择性、美兰：还原酶对死细胞进行染色，均呈蓝色，判断死细胞）</td>
<td>1. 进行数量测定时，选取平板上菌落数 30-300 的稀释度。<br>2.
在所选择的稀释度下重复 3 次实验，求平均。<br>3.
由于涂布器残余菌液、两个或多个细胞连在一起平板上只能观察到一个稍大的菌落，<strong>所以<em>统计值往往偏少于实际活菌数</em></strong>。</td>
</tr>
</tbody>
</table>
<h4 id="发酵工程及其应用">5. 发酵工程及其应用</h4>
<p>​
发酵工程与传统发酵技术相比，主要以可再生资源为原料，反应条件温和，环境污染较少，可以生产目前无法生产或通过化学方法生产困难的性能优异产品，投资较少。</p>
<p>​ 发酵工程的基本环节是：</p>
<pre class="mermaid">graph LR
a[从自然界分离的菌种]
b[诱变育种]
c[基因工程]
d[细胞工程]
e[生产所用菌种]
f[原料]
g[扩大培养]
h[发酵罐 - 控制条件]
i[配置培养基]
j[微生物菌体]
k[代谢产物]
l[产物]
a --&gt; b
a --&gt; c
a --&gt; d
b --&gt; e
c --&gt; e
d --&gt; e
e --&gt; g
g --接种--&gt; h
f --&gt; i
i --灭菌 + 冷却--&gt; h
h --&gt; j
h --&gt; k
j --&gt; l
k --&gt; l</pre>
<p>​</p>]]></content>
      <categories>
        <category>High School</category>
        <category>Biology</category>
        <category>Bioengineering</category>
      </categories>
      <tags>
        <tag>School Notes</tag>
        <tag>High School</tag>
        <tag>Biology</tag>
      </tags>
  </entry>
  <entry>
    <title>光的折射与全反射</title>
    <url>/2022/03/01/physics/High%20School/S4%20Optics/P1%20%E5%85%89%E7%9A%84%E6%8A%98%E5%B0%84%E4%B8%8E%E5%85%A8%E5%8F%8D%E5%B0%84/</url>
    <content><![CDATA[Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
<h2 id="课程标准">课程标准</h2>
<h3 id="课程标准内容">课程标准内容</h3>
<h4 id="光及其应用">1.3 光及其应用</h4>
<blockquote>
<p>1.3.1 通过实验，理解光的折射定律。会测量材料的折射率。</p>
</blockquote>
<p>​
本条目要求学生：通过探究折射角与入射角关系的实验，理解光的折射定律。理解折射率的意义，知道折射率与光速、光在介质中传播速度的关系。知道光的色散现象，通过演示实验观察色散现象。在理解的基础上，能运用折射定律解释大自然的折射现象，分析解决一些简单的实际问题。</p>
<p>​
本条目还要求学生：会通过实验测量材料的折射率，了解测定折射率的方法讨论和交流减小实验误差的措施。</p>
<p>​
为了使学生更深入地理解折射率的物理概念，可以根据实际情况适当扩展，让学生了解相对折射率和绝对折射率的关系。这种扩展对学生理解折射率会有帮助。对概念的讲解，不宜限定过死，否则不利于学生形成全面合理的知识结构。</p>
<blockquote>
<p>1.3.2
知道光的全反射现象及其产生的条件。初步了解光纤的工作原理、光纤技术在生产生活中的应用。</p>
<p>例1 演示光沿水柱（或弯曲的玻璃柱）的传播。</p>
<p>例2 观察光缆的结构，分析光的全反射在光纤中是如何产生的。</p>
</blockquote>
<p>​
了解全反射在技术上的应用。通过了解光缆的结构，了解光导纤维的工作原理，在了解工作原理的基础上知道光纤技术在生产生活中的应用，例如光纤通信。学生应该密切联系生活实际进行学习，通过查阅资料，举例说明光纤在生产生活中的用途，体会光纤技术对社会生活的重大影响。</p>
<h2 id="知识聚焦">知识聚焦</h2>
<h3 id="一光学基本知识">一、光学基本知识</h3>
<h4 id="光的折射与反射">1. 光的折射与反射</h4>
<p>​ 一般来说，光从第 1 种介质射到该介质与第 2
种介质的分界面时，一部分光会返回到第 1
种介质，这个现象叫做<strong>光的反射</strong>；另一部分光会进入第 2
种介质，这个现象叫做<strong>光的折射</strong>。</p>
<figure>
<img src="https://raw.githubusercontent.com/PassionPenguin/picgo-database/main/image-20220301231513243.png" alt="image-20220301231513243">
<figcaption aria-hidden="true">image-20220301231513243</figcaption>
</figure>
<p>​ 1621
年，荷兰数学家斯涅耳在分析大量数据后，总结了入射角和折射角之间的规律（<strong>折射定律</strong>）：==折射光线与入射光线、法线处于同一平面，折射光线与入射光线分别位于法线的两侧；入射角的正弦与折射角的正弦成正比（<span class="math inline">sin <em>i</em> = <em>n</em>sin <em>γ</em></span>，<span class="math inline"><em>n</em></span>为常数，与两种介质的性质有关）==。事实也表明，与光的反射现象一样，光的折射现象中<strong>光路可逆</strong>。</p>
<p>​
光从真空射入某种介质发生折射时，入射角的正弦与折射角的正弦之比称为折射率，用符号<span class="math inline"><em>n</em></span>表示。真空的折射率为 1
，空气的折射率接近 1 。折射率与光在不同介质中传播的速度成反比：<span class="math inline">$n=\dfrac{c}{v}, n &gt; 1$</span>，其中<span class="math inline"><em>c</em></span>为真空中的光速。</p>
<h4 id="视深与实际深度">2. 视深与实际深度</h4>
<p>​
视深是人眼垂直物体界面看透明物质内部某物点的像点离界面的距离，中学阶段一般沿着界面的法线方向观察，入射角小折射角也很小，<span class="math inline">$\dfrac{\sin{i}}{\sin{\gamma}}\approx\frac{\tan{i}}{\tan{\gamma}}$</span>，水中物体的视深<span class="math inline">$h=\dfrac{H}{n}$</span>（<span class="math inline"><em>H</em></span>为实际深度）。</p>
<h4 id="实验测量玻璃的折射率-exp-测量玻璃的折射率">3.
实验：测量玻璃的折射率 | #exp-测量玻璃的折射率</h4>
<h5 id="一实验目的">一、实验目的</h5>
<ol type="1">
<li>测量玻璃的折射率；</li>
<li>学习用插针法确定光路；</li>
</ol>
<h5 id="二实验器材">二、实验器材</h5>
<p>​ 木板、白纸、玻璃砖、大头针、图钉、量角器、三角板、铅笔、圆规。</p>
<h5 id="三实验原理与设计">三、实验原理与设计</h5>
<p>​ 当光从空气射入玻璃时，根据折射定律<span class="math inline">$n=\dfrac{\sin{i}}{\sin{\gamma}}$</span>求出入射角<span class="math inline">sin <em>i</em></span>、折射角<span class="math inline">sin <em>γ</em></span>，即可计算出玻璃的折射率。</p>
<p>​ 如图，透过玻璃砖观察大头针 A、B，调整视线方向使 B 挡住 A
的像，再在观察侧依次插入大头针 C、D，使 C 挡住 B 的像，D 挡住 C
的像。连接 AB、OO’、CD 即分别代表入射、折射和出射光线，测出入射角<span class="math inline">sin <em>θ</em><sub>1</sub></span>和折射角<span class="math inline">sin <em>θ</em><sub>2</sub></span>即可。</p>
<figure>
<img src="https://raw.githubusercontent.com/PassionPenguin/picgo-database/main/image-20220301231617041.png" alt="image-20220301231617041">
<figcaption aria-hidden="true">image-20220301231617041</figcaption>
</figure>
<h5 id="四实验步骤">四、实验步骤</h5>
<ol type="1">
<li><p>把白纸用图钉钉在木板上，将玻璃砖放到白纸上，用笔描出玻璃砖<strong>光洁界面</strong>，用两枚大头针确定入射光的方向。</p></li>
<li><p>用两枚大头针在玻璃砖的另一侧确定出射光的方向。</p></li>
<li><p>取走玻璃砖，根据入射光和出射光的方向，确定入射点<span class="math inline"><em>O</em></span>和出射点<span class="math inline"><em>O</em>′</span>，连接<span class="math inline"><em>O</em><em>O</em>′</span>即为玻璃砖内部的折射光。画出<span class="math inline"><em>O</em></span>点处的法线，标出角<span class="math inline"><em>i</em>, <em>γ</em></span>，测量角度并计算折射率。</p></li>
<li><p>重复上述实验多次，求出玻璃的折射率的平均值。</p></li>
</ol>
<h5 id="五数据处理">五、数据处理</h5>
<ol type="1">
<li>计算法：直接计算<span class="math inline">sin <em>i</em>, sin <em>γ</em></span>代入公式计算。</li>
<li>图像法：求出多组对应的入射角与折射角正弦值，作出<span class="math inline">sin <em>i</em> − sin <em>γ</em></span>图像，直线的斜率即为折射率。</li>
<li>单位圆法：在不使用量角器时，可以画单位圆，根据：</li>
</ol>
<p><span class="math display">$$
\begin{align}
n=\frac{\sin{i}}{\sin{\gamma}}\\
\sin{i}=\frac{PN}{R}\\
\sin{\gamma}=\frac{QN'}{R}\\
\therefore n=\frac{PN}{QN'}
\end{align}
$$</span></p>
<figure>
<img src="https://raw.githubusercontent.com/PassionPenguin/picgo-database/main/1534395085415241.png" alt="Example">
<figcaption aria-hidden="true">Example</figcaption>
</figure>
<h5 id="六注意事项">六、注意事项</h5>
<ol type="1">
<li>用手拿玻璃砖时，手只能接触玻璃砖的毛面或棱角，不能触摸光洁的光学面．严禁把玻璃砖当尺子画玻璃砖的两个边<span class="math inline"><em>a</em><em>a</em>′</span>、<span class="math inline"><em>b</em><em>b</em>′</span>。</li>
<li>实验过程中，玻璃砖在纸上的位置不可移动。</li>
<li>大头针应竖直地插在白纸上，且玻璃砖每一侧的两枚大头针<span class="math inline"><em>P</em><sub>1</sub></span>和<span class="math inline"><em>P</em><sub>2</sub></span>间、<span class="math inline"><em>P</em><sub>3</sub></span>和<span class="math inline"><em>P</em><sub>4</sub></span>间的距离应尽量大一些，以减少确定光路方向时造成的误差。</li>
<li>实验时入射角不宜过小，否则会使入射角和折射角的值偏小，增大测量误差；入射角也不宜过大，否则在<span class="math inline"><em>b</em><em>b</em>′</span>一侧要么看不到<span class="math inline"><em>P</em><sub>1</sub></span>、<span class="math inline"><em>P</em><sub>2</sub></span>的虚像，要么看到<span class="math inline"><em>P</em><sub>1</sub></span>、<span class="math inline"><em>P</em><sub>2</sub></span>的像模糊不清，并且变粗，不便于插大头针<span class="math inline"><em>P</em><sub>3</sub></span>、<span class="math inline"><em>P</em><sub>4</sub></span>。由于要多次改变。</li>
<li>入射角的大小重复实验，所以入射光线与出射光线要一一对应编号，以免混乱。</li>
<li>玻璃砖应选用宽度尽量大的（<span class="math inline"> &gt; 5<em>c</em><em>m</em></span>）。若宽度太小，则会有较大的测量误差。</li>
</ol>
<h5 id="七误差分析">七、误差分析</h5>
<ol type="1">
<li>入射光线和出射光线画得不够精确：要求插大头针时间距应该稍大。</li>
<li>入射角、折射角测量不够精确：要求入射角稍大些（不宜太大，否则反射光较强而折射光较弱）。</li>
<li>玻璃砖的两个光洁界面可以不平行。界面不管是否平行都对测量没有误差影响。</li>
<li>若画玻璃砖界面时偏离较远，则会使折射角变大，使测量的折射率偏小。</li>
</ol>
<h3 id="二光的全反射">二、光的全反射</h3>
<h4 id="全反射现象">1. 全反射现象</h4>
<p>​
对于折射率不同的两种介质，折射率较小的称为<strong>光疏介质</strong>，折射率较大的称为<strong>光密介质</strong>。光从光疏介质射入光密介质时，当入射角增大到某一角度之后，使折射光线完全消失的现象称为<strong>全反射</strong>，此时入射角称为<strong>临界角</strong>。</p>
<p>​ 因为折射角为<span class="math inline">$90\degree$</span>时发生全反射，由光的反射定律，<span class="math inline">$\sin{\gamma}=\dfrac{1}{n}$</span>。</p>
<blockquote>
<h3 id="计算全反射的临界角">计算全反射的临界角</h3>
<p>​
由于不同介质的折射率不同，如果要测出介质的全反射临界角，可以参考如下方法：从光疏介质以接近平行方向射入光线<span class="math inline"><em>A</em><em>O</em></span>，得到在光密介质端的折射光线<span class="math inline"><em>B</em><em>O</em></span>，由于光线可逆，我们即可推出<span class="math inline"><em>θ</em><sub>2</sub></span>角为临界角。</p>
<figure>
<img src="https://raw.githubusercontent.com/PassionPenguin/picgo-database/main/image-20220301232039007.png" alt="image-20220301232039007">
<figcaption aria-hidden="true">image-20220301232039007</figcaption>
</figure>
</blockquote>
<h4 id="全反射棱镜与光导纤维">2. 全反射棱镜与光导纤维</h4>
<p>​
如果玻璃棱镜的截面为等腰直角三角形，光垂直一边射入棱镜，会发生全反射而不折射的棱镜称为全反射棱镜，优点在于损耗小反射率高。</p>
<p>​
光沿有机玻璃棒的锯齿形路线传播（全反射）是光导纤维的导光原理。光导纤维可用于传导数据、制作内窥镜，具有传输容量大、衰减小、抗干扰性强与保密性等优点。</p>
<figure>
<img src="https://raw.githubusercontent.com/PassionPenguin/picgo-database/main/image-20220301232213100.png" alt="image-20220301232213100">
<figcaption aria-hidden="true">image-20220301232213100</figcaption>
</figure>
<figure>
<img src="https://raw.githubusercontent.com/PassionPenguin/picgo-database/main/image-20220301232250738.png" alt="image-20220301232250738">
<figcaption aria-hidden="true">image-20220301232250738</figcaption>
</figure>
<h4 id="蜃景解释">3. “蜃景”解释</h4>
<p>​
空气密度随温度升高而减小，折射率也随之减小，故而在温度不同下空气会出现分层现象。</p>
<p>​
出现上方蜃景的原因：底层空气温度较低，高层空气温度较高，使光线不断折射直到发生全反射（光线上曲）。出现下方蜃景则是因为物体发出的光线向下传播时，底层空气温度较高折射率小使入射角逐渐变大（光线下曲）或发生全反射。</p>]]></content>
      <categories>
        <category>High School</category>
        <category>Physics</category>
        <category>Optics</category>
      </categories>
      <tags>
        <tag>School Notes</tag>
        <tag>High School</tag>
        <tag>Physics</tag>
      </tags>
  </entry>
  <entry>
    <title>细胞的生命历程</title>
    <url>/2022/02/27/biology/High%20School/b1%20cell%20biology/P6%20%E7%BB%86%E8%83%9E%E7%9A%84%E7%94%9F%E5%91%BD%E5%8E%86%E7%A8%8B/</url>
    <content><![CDATA[<h2 id="课程标准">课程标准</h2>
<h4 id="细胞会经历生长增殖分化衰老和死亡等生命进程">2.3
细胞会经历生长、增殖、分化、衰老和死亡等生命进程</h4>
<p>2.3.1
描述细胞通过不同的方式进行分裂，其中有丝分裂保证了遗传信息在亲代和子代细胞中的一致性。</p>
<p>2.3.2
说明在个体发育过程中，细胞在形态、结构和功能方面发生特异性的分化，形成了复杂的多细胞生物体。</p>
<p>2.3.3 描述在正常情况下，细胞衰老和死亡是一种自然的生理过程。</p>
<span id="more"></span>
<h3 id="教学活动要求">教学活动要求</h3>
<ol type="1">
<li>制作和观察根尖细胞有丝分裂简易装片，或观察其永久装片；</li>
</ol>
<h3 id="学业要求">学业要求</h3>
<p>​
观察处于细胞周期不同阶段的细胞，结合有丝分裂模型，描述细胞增殖的主要特征，并举例说明细胞的分化、衰老、死亡等生命现象（生命观念、科学探究、社会责任）。</p>
<h3 id="内容说明">内容说明</h3>
<h4 id="细胞的生命历程">细胞的生命历程</h4>
<ol type="1">
<li>认识生物新个体的繁殖、生长、发育、衰老直至死亡等生命进程，是以细胞的生命历程为基础的。</li>
<li>通过开展根尖的培养、根尖细胞的有丝分裂简易装片的制作和观察或永久装片的观察等活动，认识部分细胞的生长和增殖的周期性，认识细胞周期可以分为间期和分裂期，阐明有丝分裂保证了遗传信息在亲代和子代细胞间的一致性，了解细胞分裂方式包括有丝分裂、无丝分裂和减数分裂。</li>
<li>以高等动物受精卵发育为例，说明细胞分化是细胞形态、结构和功能发生转变的过程，是各种组织、器官及复杂生物个体发育的基础。</li>
<li>列觉相关事实，说明细胞衰老和死亡是一种自然的生理过程，简述细胞衰老的主要特征及与个体衰老的关系。</li>
</ol>
<h2 id="知识聚焦">知识聚焦</h2>
<h3 id="一细胞的增殖">一、细胞的增殖</h3>
<h4 id="细胞增殖">1. 细胞增殖</h4>
<p>​
细胞通过细胞分裂增加细胞数量的过程，叫作<strong>细胞增殖</strong>。单细胞生物通过细胞增殖而繁衍，多细胞生物从受精卵开始经过细胞增殖和分化逐渐发育成个体。==细胞增殖是重要的细胞活动，是生物体生长发育、繁殖遗传的基础==。</p>
<p>​
连续分离的的细胞，一次分裂完成⇒下一次分裂完成（间期→分裂期）为一个细胞周期。一个细胞周期包括两个阶段（分裂间期和分裂期）。细胞周期大部分时间处于分裂间期，复制
DNA 与合成蛋白质。</p>
<p>​ 有丝分裂具体细节见[[High School, Biology, Genetics],
遗传因子、基因与染色体的关系, 有丝分裂、减数分裂和受精作用]。</p>
<h4 id="探究实践观察根尖分生区组织细胞的有丝分裂-exp-观察根尖分生区组织细胞的有丝分裂">2.
探究实践：观察根尖分生区组织细胞的有丝分裂 |
#exp-观察根尖分生区组织细胞的有丝分裂</h4>
<p>​
在高等植物体内，有丝分裂常见于根尖、芽尖等分生区细胞。由千各个细胞的分裂是独立进行的，因此在同一分生组织中可以看到处于不同分裂时期的细胞。通过在高倍显微镜下观察各个时期细胞内染色体的存在状态，就可以判断这些细胞分别处千有丝分裂的哪个时期。染色体容易被碱性染料（如甲紫溶液，旧称妇眈蹄液）着色。</p>
<h5 id="目的要求">目的要求</h5>
<ol type="1">
<li><p>制作洋葱根尖细胞有丝分裂装片。</p></li>
<li><p>观察植物细胞有丝分裂的过程，识别有丝分裂的不同时期，比较细胞周期中不同时期的时间长短。</p></li>
<li><p>绘制植物细胞有丝分裂简图。</p></li>
</ol>
<h5 id="材料用具">材料用具</h5>
<p>​
洋葱（可用葱、蒜代替），显微镜，载玻片，盖玻片，玻璃皿，剪刀，摄子，滴管。
​ 质量浓度为 0.01 g/mL 或 0.02 g/mL 的甲紫溶液（将甲紫溶解在质量分数为
2％ 的醋酸溶液中配制而成）或醋酸洋红液，质量分数为 15％
的盐酸，体积分数为 95％ 的酒精， 洋葱根尖细胞有丝分裂固定装片。</p>
<h5 id="方法步骤">方法步骤</h5>
<h6 id="一洋葱根尖的培养">一、洋葱根尖的培养</h6>
<p>​ 在上实验课之前的 3~4 d,
取洋葱一个，放在广口瓶上。瓶内装满清水，让洋葱的底部接触到瓶内的水面。把这个装置放在温暖的地方培养。待根长约
5 cm 时，取生长健壮的根尖制成临时装片观察。</p>
<h6 id="二装片的制作">二、装片的制作</h6>
<p>​ 制片流程为：解离一漂洗一染色一制片。</p>
<table>
<colgroup>
<col style="width: 3%">
<col style="width: 55%">
<col style="width: 7%">
<col style="width: 33%">
</colgroup>
<thead>
<tr class="header">
<th>过程</th>
<th>方法</th>
<th>时间</th>
<th>目的</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>解离</td>
<td>上午10 时至下午2
时（洋葱根尖分生区有较多的细胞处于分裂期，这会因洋葱品种、室温等的差异而有所不同），剪取洋葱根尖2~3mm,
立即放入盛有盐酸和酒精混合液(1: l) 的玻璃皿中，在室温下解离。</td>
<td>3~5min</td>
<td>用药液使组织中的细相互分离开来。</td>
</tr>
<tr class="even">
<td>漂洗</td>
<td>解离待根尖软化后，用镁子取出，放入盛有清水的玻璃皿中漂洗。</td>
<td>约 10min</td>
<td>洗去药液，防止解离过度。</td>
</tr>
<tr class="odd">
<td>染色</td>
<td>把根尖放入盛有质量浓度为 0.01 g/mL 或 0.02 g/mL
的甲紫溶液（或醋酸洋红液）的玻璃皿中染色。</td>
<td>3~5 min</td>
<td>甲紫溶液或醋酸洋红液能使染色体着色。</td>
</tr>
<tr class="even">
<td>制片</td>
<td>用镊子将这段根尖取出来，放在载玻片上，加一滴清水，并用镊子尖把根尖弄碎，盖上盖玻片。然后，用拇指轻轻地按压盖玻片。</td>
<td></td>
<td>使细胞分散开来，有利于观察。</td>
</tr>
</tbody>
</table>
<h6 id="三洋葱根尖细胞有丝分裂的观察">三、洋葱根尖细胞有丝分裂的观察</h6>
<ol type="1">
<li>把制成的装片先放在低倍镜下观察，扫视整个装片，找到分生区细胞：细胞呈正方形，排列紧密。再换成高倍镜仔细观察，首先找出分裂中期的细胞，然后再找前期、后期、末期的细胞，注意观察各时期细胞内染色体形态和分布的特点。最后观察分裂间期的细胞。</li>
<li>如果自制装片的效果不太理想，可以观察洋葱根尖有丝分裂固定装片。</li>
<li>调节显微镜的放大倍数，使你能够在视野中同时看到约50个细胞，仔细统计视野中处于各时期的细胞数，记录在记录表“样本1”
中。把视野移动到分生区一个新的区域再统计，然后记录在记录表“样本2”
中。对数据进行整理，填入表中。</li>
</ol>
<h6 id="四绘图">四、绘图</h6>
<p>绘出植物细胞有丝分裂中期简图。</p>
<h6 id="五有条件的学校可以观察马蛔虫受-精卵的有丝分裂固定装片">五、有条件的学校，可以观察马蛔虫受
精卵的有丝分裂固定装片。</h6>
<h5 id="结论">结论</h5>
<p>​ 根据观察结果，用自己的语言描述细胞周期各个时期的特点。</p>
<h3 id="二细胞的分化">二、细胞的分化</h3>
<p>​
在个体发育中，由一个或一种细胞增殖产生的后代，在形态结构和生理功能上发生稳定性差异的过程称为细胞分化。细胞分化是一种持久性的变化，<strong>不可逆</strong>。</p>
<p>​
细胞分化是一种普遍存在的现象，是个体发育的<strong>基础</strong>，其中分化的实质（产生原因）是<strong>基因的选择性表达</strong>。</p>
<p>​
<strong>细胞的全能性</strong>指细胞经分裂分化后仍具有产生完整有机体或分化成其他各种细胞的潜能与特性。没有分化的细胞具有全能性，高度分化的植物细胞具有全能性，动物和人体中仍然保留少数具有分裂分化能力的细胞（干细胞），如人骨髓中的造血干细胞。根据细胞的全能性，我们有了[[High
School, Biology, Bioengineering], 细胞工程,
细胞工程]利用这一特性培植、繁育产生新的个体。</p>
<h3 id="三细胞的衰老和死亡">三、细胞的衰老和死亡</h3>
<p>​
细胞的<strong>衰老</strong>过程是细胞生理状态和化学反应发生复杂变化的过程，最终表现为细胞形态、结构和功能发生变化：</p>
<ol type="1">
<li>膜通透性改变，运输效率降低。</li>
<li>核体积增大，核膜内折，染色质收缩，染色加深。</li>
<li>水分减少，体积萎缩变小。</li>
<li>酶活性降低，呼吸速率降低，新陈代谢速率减缓。</li>
<li>色素积累，妨碍物质交流传递。</li>
</ol>
<p>​
细胞衰老是正常生命现象，正常的细胞衰老有利于机体更好地实现自我更新，但是众多细胞和组织的衰老就会导致个体的衰老。<strong>细胞死亡</strong>包括<strong>凋亡</strong>和<strong>坏死</strong>等方式，其中凋亡是细胞死亡的一种主要方式。</p>
<ol type="1">
<li>细胞凋亡是由基因决定细胞自动结束生命的过程，是一种<strong>程序性死亡</strong>。</li>
<li>细胞坏死是在各种不利因素下（如极端物理化学因素、严重病理性刺激等），由细胞正常代谢活动受损或中断引起的细胞损伤和死亡。</li>
<li>细胞自噬是细胞将受损或功能退化的细胞结构通过溶酶体降解后再利用的过程。</li>
</ol>]]></content>
      <categories>
        <category>High School</category>
        <category>Biology</category>
        <category>Cell Biology</category>
      </categories>
      <tags>
        <tag>School Notes</tag>
        <tag>High School</tag>
        <tag>Biology</tag>
      </tags>
  </entry>
  <entry>
    <title>细胞的能量供应与利用</title>
    <url>/2022/02/26/biology/High%20School/b1%20cell%20biology/P5%20%E7%BB%86%E8%83%9E%E7%9A%84%E8%83%BD%E9%87%8F%E4%BE%9B%E5%BA%94%E4%B8%8E%E5%88%A9%E7%94%A8/</url>
    <content><![CDATA[Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
<h2 id="课程标准">课程标准</h2>
<h4 id="细胞的功能绝大多数基于化学反应这些反应发生在细胞的特定区域">2.2
细胞的功能绝大多数基于化学反应，这些反应发生在细胞的特定区域</h4>
<p>2.2.1
说明绝大多数酶是一类能催化生化反应的蛋白质，酶活性受到环境因素（如 pH
和温度等）的影响。</p>
<p>2.2.2 解释 ATP 是驱动细胞生命活动的直接能源物质。</p>
<p>2.2.3
说明植物细胞的叶绿体从太阳光中捕获能量，这些能量在二氧化碳和水转变为糖与氧气的过程中，转换并储存为糖分子中的化学能。</p>
<p>2.2.4
说明生物通过细胞呼吸将储存在有机分子中的能量转化为生命活动可以利用的能量。</p>
<span id="more"></span>
<h3 id="教学活动要求">教学活动要求</h3>
<ol type="1">
<li>探究酶催化的专一性、高效性及影响酶活性的因素；</li>
<li>提取和分离叶绿体色素；</li>
<li>探究不同环境因素对光合作用的影响；</li>
<li>探究酵母菌的呼吸方式；</li>
</ol>
<h3 id="学业要求">学业要求</h3>
<p>​
从物质与能量视角，探索光合作用与呼吸作用，阐明细胞生命活动过程中贯穿着物质与能量的变化（生命观念、科学思维、科学探究）。</p>
<h3 id="内容说明">内容说明</h3>
<h4 id="物质和能量转换">物质和能量转换</h4>
<ol type="1">
<li>通过开展实验探究酶催化作用的高效性和专一性，探究温度、pH
等因素对酶活性的影响，认识酶的作用特性以及影响酶作用的因素，进而理解酶在细胞内的物质和能量转变中地位和作用。</li>
<li>通过分析相关资料，了解 ATP 的结构特点，能够解释 ATP 与 ADP
之间相互转化所伴随的能量转化，理解这种转化在细胞内能量的储存和利用中的地位与作用。</li>
<li>通过分析叶绿体结构和成分，开展提取和分离叶绿体色素，分析这些色素的吸收光谱和作用光谱，理解叶绿体的结构和成分与其光合作用的适应性。</li>
<li>通过分析光合作用相关研究资料，认识光合作用的大致过程及发生的物质和能量转换的实质，理解光合作用在生物界乃至整个自然界物质和能量转换中的地位和作用，结合光合作用的原理并依据相关资料的研究结果，阐明影响光合速率的内外因素及其在生产实践中的应用。</li>
<li>通过开展探究酵母菌的呼吸方式，阐述呼吸作用的过程和场所，理解其物质变化和能量转换的实质，理解细胞结构和成分与呼吸作用的统一性，了解有氧呼吸和无氧呼吸的异同，结合呼吸作用过程、相关研究资料和生活经验，分析影响呼吸作用速率的内外速率，了解人工控制呼吸速率的相关措施及在生产生活中的应用实例。</li>
</ol>
<h2 id="知识聚焦">知识聚焦</h2>
<h3 id="一降低化学反应活化能的酶">一、降低化学反应活化能的酶</h3>
<h4 id="细胞代谢与酶">1. 细胞代谢与酶</h4>
<p>​
<strong>细胞代谢</strong>是细胞中进行的化学反应。在所有的化学反应中，<strong>活化能</strong>指分子从常态转变为容易发生化学反应的活跃状态所需要的能量（见化学选择性必修一
2.1
化学反应速率）。使用催化剂可以显著降低化学反应的活化能，从而提升化学反应速率。在生物体内，<strong>酶</strong>是细胞产生的充当催化细胞代谢作用的有机物（多数为蛋白质，<strong>少部分
RNA</strong>）。</p>
<ol type="1">
<li>细胞代谢离不开酶。</li>
<li>酶降低活化能的作用更显著，催化效率更高。</li>
<li>酶使细胞代谢能够在温和条件下进行。</li>
<li>特性：高效性、专一性、作用条件温和。</li>
</ol>
<h4 id="探究实践比较过氧化氢在不同条件下的分解-exp-比较过氧化氢在不同条件下的分解">2.
探究实践：比较过氧化氢在不同条件下的分解 |
#exp-比较过氧化氢在不同条件下的分解</h4>
<h4 id="探究实践淀粉酶对淀粉和蔗糖的水解作用-exp-淀粉酶对淀粉和蔗糖的水解作用">3.
探究实践：淀粉酶对淀粉和蔗糖的水解作用 |
#exp-淀粉酶对淀粉和蔗糖的水解作用</h4>
<h4 id="探究实践影响酶活性的条件-exp-影响酶活性的条件">4.
探究实践：影响酶活性的条件 | #exp-影响酶活性的条件</h4>
<blockquote>
<h3 id="设计酶活性的探究实验">设计酶活性的探究实验</h3>
<p>​
在设计研究酶活性的探究实验中，需要注意代谢反应相关物质是否会被设计的条件所影响，如：</p>
<ol type="1">
<li>淀粉实验，不能加酸。</li>
<li>过氧化氢实验，不能升温。</li>
</ol>
</blockquote>
<h3 id="二细胞的直接能源物质-atp">二、细胞的直接能源物质 ATP</h3>
<p>​ 虽然说葡萄糖等有机物是细胞的能源物质，但是只有==ATP
是直接供能的直接能源物质==。ATP
的本质是腺苷三磷酸（一种高能磷酸化合物），结构简写为<span class="math inline"><em>A</em> − <em>P</em> ∼ <em>P</em> ∼ <em>P</em></span>（<span class="math inline">∼</span>指 ATP
分子中的<strong>高能磷酸键</strong>）。</p>
<p>​ ATP 可以发生水解，断裂高能磷酸键：</p>
<div class="sourceCode" id="cb1"><pre class="sourceCode latex"><code class="sourceCode latex"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a><span class="fu">\ce</span>&#123;ATP + H2O &lt;=&gt;[<span class="fu">\text</span>&#123;酶&#125;] ADP + P_i + energy&#125;</span></code></pre></div>
<p>​ ADP（腺苷二磷酸）是 ATP 水解释放能量后转化得到的化合物。</p>
<p>​ ATP
的水解反应是一个可逆反应，两者<strong>动态平衡，不断反应</strong>。</p>
<h3 id="三线粒体与细胞呼吸">三、线粒体与细胞呼吸</h3>
<p>​
细胞呼吸指细胞内的有机物氧化分解释放能量。呼吸作用发生在所有细胞中，可以按照是否需求氧分为有氧呼吸和无氧呼吸。</p>
<h4 id="细胞的有氧呼吸">1. 细胞的有氧呼吸</h4>
<p>​
<strong>有氧呼吸</strong>指细胞<strong>氧的参与</strong>下，通过多种酶的催化作用，把有机物<strong>彻底</strong>氧化分解，产生二氧化碳和水，释放能量，生成<strong>大量</strong>ATP
的过程。</p>
<p>​
简单概括有氧呼吸的全过程，第一阶段是在<strong>细胞质基质中</strong>，葡萄糖分解为丙酮酸并脱去
4 个活化氢，释放少量能量，部分用于合成 ATP：</p>
<div class="sourceCode" id="cb2"><pre class="sourceCode latex"><code class="sourceCode latex"><span id="cb2-1"><a href="#cb2-1" aria-hidden="true" tabindex="-1"></a><span class="fu">\ce</span>&#123;C6H12O6 -&gt;[<span class="fu">\text</span>&#123;酶&#125;] <span class="ss">$</span><span class="sc">\underset</span><span class="ss">&#123;</span><span class="sc">\text</span>&#123;丙酮酸&#125;<span class="ss">&#125;&#123;</span><span class="sc">\ce</span><span class="ss">&#123;2C3H4O3&#125;&#125;$</span> + 4[H] + energy&#125;</span></code></pre></div>
<p>​
第二阶段在<strong>线粒体基质</strong>，是丙酮酸和六个水分子的脱氢反应，氧化生成二氧化碳，释放少量能量，部分用于合成
ATP。</p>
<div class="sourceCode" id="cb3"><pre class="sourceCode latex"><code class="sourceCode latex"><span id="cb3-1"><a href="#cb3-1" aria-hidden="true" tabindex="-1"></a><span class="fu">\ce</span>&#123;2C3H4O3 + 6H2O -&gt;[<span class="fu">\text</span>&#123;酶&#125;] 6CO2 ^ + 20[H] + energy&#125;</span></code></pre></div>
<blockquote>
<h5 id="细胞呼吸中间体歧义">细胞呼吸中间体歧义</h5>
<p>​ 与人教版（2019）生物学必修一指出活化氢均为氧化型辅酶 I-<span class="math inline">$\ce{NADH}$</span> <span class="citation" data-cites="BiologyTextbook_CellRespiration_TCA">[@BiologyTextbook_CellRespiration_TCA]</span>
相异，在线粒体基质发生的丙酮酸脱氢反应中，生成的 20 个活化氢只有 16
个是<span class="math inline">$\ce{NADH}$</span>，还有 2 个<span class="math inline">$\ce{FADH2}$</span> <span class="citation" data-cites="CellBiology_CellRespiration_TCA">[@CellBiology_CellRespiration_TCA]</span>
<span class="citation" data-cites="MedicalCellBiology_CellRespiration_TCA">[@MedicalCellBiology_CellRespiration_TCA]</span>
<span class="citation" data-cites="Wikipedia_CellRespiration">[@Wikipedia_CellRespiration]</span>
<span class="citation" data-cites="Wikipedia_CitricAcidCycle">[@Wikipedia_CitricAcidCycle]</span>
<span class="citation" data-cites="EssentialMicroBiology_CellRespiration_TCA">[@EssentialMicroBiology_CellRespiration_TCA]</span>
<span class="citation" data-cites="MicroBiology_CellRespiration_TCA">[@MicroBiology_CellRespiration_TCA]</span>。在三羧酸循环（柠檬酸循环中，TCA）中，<span class="math inline">$\ce{FAD}$</span>作用使琥珀酸变为延胡素酸，同时自身变为<span class="math inline">$\ce{FADH2}$</span>。</p>
<div class="sourceCode" id="cb4"><pre class="sourceCode latex"><code class="sourceCode latex"><span id="cb4-1"><a href="#cb4-1" aria-hidden="true" tabindex="-1"></a><span class="fu">\schemestart</span></span>
<span id="cb4-2"><a href="#cb4-2" aria-hidden="true" tabindex="-1"></a>  <span class="fu">\chemname</span></span>
<span id="cb4-3"><a href="#cb4-3" aria-hidden="true" tabindex="-1"></a>    &#123;<span class="fu">\chemfig</span>&#123;[2]OH-[4]CH_2-CH(-[0]OH)-CH_2(-[0]OH)&#125;&#125;</span>
<span id="cb4-4"><a href="#cb4-4" aria-hidden="true" tabindex="-1"></a>    &#123;<span class="fu">\text</span>&#123;琥珀酸&#125;&#125;</span>
<span id="cb4-5"><a href="#cb4-5" aria-hidden="true" tabindex="-1"></a>  <span class="fu">\quad\quad\quad</span></span>
<span id="cb4-6"><a href="#cb4-6" aria-hidden="true" tabindex="-1"></a>  <span class="fu">\arrow</span>&#123;-u&gt;[<span class="fu">\ce</span>&#123;FAD&#125;][<span class="fu">\ce</span>&#123;FADH_2&#125;][][.5][]&#125;</span>
<span id="cb4-7"><a href="#cb4-7" aria-hidden="true" tabindex="-1"></a>  <span class="fu">\quad\quad\quad</span></span>
<span id="cb4-8"><a href="#cb4-8" aria-hidden="true" tabindex="-1"></a>  <span class="fu">\chemname</span></span>
<span id="cb4-9"><a href="#cb4-9" aria-hidden="true" tabindex="-1"></a>    &#123;<span class="fu">\chemfig</span>&#123;CH(-[2,.7]COO^&#123;-&#125;)(-[6,.7]CH(-[6,.7]COO^&#123;-&#125;))&#125;&#125;</span>
<span id="cb4-10"><a href="#cb4-10" aria-hidden="true" tabindex="-1"></a>    &#123;<span class="fu">\text</span>&#123;延胡素酸&#125;&#125;</span>
<span id="cb4-11"><a href="#cb4-11" aria-hidden="true" tabindex="-1"></a><span class="fu">\schemestop</span></span></code></pre></div>
<figure>
<img src="https://raw.githubusercontent.com/PassionPenguin/picgo-database/main/image-20220228214924523.png" alt="三羧酸循环 [@MedicalCellBiology_CellRespiration_TCA]">
<figcaption aria-hidden="true">三羧酸循环 <span class="citation" data-cites="MedicalCellBiology_CellRespiration_TCA">[@MedicalCellBiology_CellRespiration_TCA]</span></figcaption>
</figure>
</blockquote>
<p>​ 第三阶段在<strong>线粒体内膜</strong>，前阶段共脱去的 24 个<span class="math inline">$\ce{[H]}$</span>与 6 个<span class="math inline">$\ce{O2}$</span>结合成水，释放大量能量，部分用于合成
ATP。</p>
<div class="sourceCode" id="cb5"><pre class="sourceCode latex"><code class="sourceCode latex"><span id="cb5-1"><a href="#cb5-1" aria-hidden="true" tabindex="-1"></a><span class="fu">\ce</span>&#123;24[H] + 6O2 -&gt;[<span class="fu">\text</span>&#123;酶&#125;] 12H2O + energy&#125;</span></code></pre></div>
<h4 id="细胞的无氧呼吸">2. 细胞的无氧呼吸</h4>
<p>​
<strong>无氧呼吸</strong>指细胞在没有氧气参与的情况下，有机物经过不完全分解，释放少量能量的过程。常见的无氧呼吸有酒精发酵、乳酸发酵两条途径。</p>
<p>​ 细胞行酒精发酵的无氧呼吸途径中，丙酮酸在脱羧过程后不形成乙酰辅酶
A，而形成乙醛，随后乙醛接受还原性氢被还原为酒精，通常发生在酵母菌中，全过程发生在细胞质基质：</p>
<div class="sourceCode" id="cb6"><pre class="sourceCode latex"><code class="sourceCode latex"><span id="cb6-1"><a href="#cb6-1" aria-hidden="true" tabindex="-1"></a><span class="kw">\begin</span>&#123;<span class="ex">align</span>&#125;</span>
<span id="cb6-2"><a href="#cb6-2" aria-hidden="true" tabindex="-1"></a><span class="sc">\ce</span><span class="ss">&#123;C6H12O6 &amp;-&gt;[</span><span class="sc">\text</span>&#123;酶&#125;<span class="ss">] </span><span class="er">$</span><span class="sc">\underset</span><span class="ss">&#123;</span><span class="sc">\text</span>&#123;丙酮酸&#125;<span class="ss">&#125;&#123;</span><span class="sc">\ce</span><span class="ss">&#123;2C3H4O3&#125;&#125;</span><span class="er">$</span><span class="ss"> + 4[H] + energy&#125;</span><span class="sc">\\</span></span>
<span id="cb6-3"><a href="#cb6-3" aria-hidden="true" tabindex="-1"></a><span class="sc">\ce</span><span class="ss">&#123;2C3H4O3 &amp;-&gt;[</span><span class="sc">\text</span>&#123;酶&#125;<span class="ss">] 2CO2 + </span><span class="er">$</span><span class="sc">\underset</span><span class="ss">&#123;</span><span class="sc">\text</span>&#123;乙醛&#125;<span class="ss">&#125;&#123;</span><span class="sc">\ce</span><span class="ss">&#123;2CH3CHO&#125;&#125;</span><span class="er">$</span><span class="ss">&#125;</span><span class="sc">\\</span></span>
<span id="cb6-4"><a href="#cb6-4" aria-hidden="true" tabindex="-1"></a><span class="sc">\ce</span><span class="ss">&#123;2CH3CHO + 4[H] &amp;-&gt;[</span><span class="sc">\text</span>&#123;酶&#125;<span class="ss">] </span><span class="er">$</span><span class="sc">\underset</span><span class="ss">&#123;</span><span class="sc">\text</span>&#123;乙醇&#125;<span class="ss">&#125;&#123;</span><span class="sc">\ce</span><span class="ss">&#123;2CH3CH2OH&#125;&#125;</span><span class="er">$</span><span class="ss">&#125;</span></span>
<span id="cb6-5"><a href="#cb6-5" aria-hidden="true" tabindex="-1"></a><span class="kw">\end</span>&#123;<span class="ex">align</span>&#125;</span></code></pre></div>
<p>​
细胞行乳酸发酵的无氧呼吸途中，丙酮酸直接被活化氢还原为乳酸，通常发生在乳酸菌或人体内，全过程发生在细胞质基质：</p>
<div class="sourceCode" id="cb7"><pre class="sourceCode latex"><code class="sourceCode latex"><span id="cb7-1"><a href="#cb7-1" aria-hidden="true" tabindex="-1"></a><span class="kw">\begin</span>&#123;<span class="ex">align</span>&#125;</span>
<span id="cb7-2"><a href="#cb7-2" aria-hidden="true" tabindex="-1"></a><span class="sc">\ce</span><span class="ss">&#123;C6H12O6 &amp;-&gt;[</span><span class="sc">\text</span>&#123;酶&#125;<span class="ss">] </span><span class="er">$</span><span class="sc">\underset</span><span class="ss">&#123;</span><span class="sc">\text</span>&#123;丙酮酸&#125;<span class="ss">&#125;&#123;</span><span class="sc">\ce</span><span class="ss">&#123;2C3H4O3&#125;&#125;</span><span class="er">$</span><span class="ss"> + 4[H] + energy&#125;</span><span class="sc">\\</span></span>
<span id="cb7-3"><a href="#cb7-3" aria-hidden="true" tabindex="-1"></a><span class="sc">\ce</span><span class="ss">&#123;2C3H4O3 + 4[H] &amp;-&gt;[</span><span class="sc">\text</span>&#123;酶&#125;<span class="ss">] </span><span class="er">$</span><span class="sc">\underset</span><span class="ss">&#123;</span><span class="sc">\text</span>&#123;乳酸&#125;<span class="ss">&#125;&#123;</span><span class="sc">\ce</span><span class="ss">&#123;2C3H6O3&#125;&#125;</span><span class="er">$</span><span class="ss">&#125;</span></span>
<span id="cb7-4"><a href="#cb7-4" aria-hidden="true" tabindex="-1"></a><span class="kw">\end</span>&#123;<span class="ex">align</span>&#125;</span></code></pre></div>
<p>​
类似的，除了糖类存在呼吸作用外，氨基酸、脂质也可以被用于呼吸作用。</p>
<blockquote>
<h3 id="利用或抑制呼吸作用">利用或抑制呼吸作用</h3>
<ol type="1">
<li>现代发酵工业、传统发酵技术对微生物细胞呼吸原理的利用；</li>
<li>中耕松土改善氧气含量，促进作物根系呼吸；</li>
<li>储藏果实蔬菜时，低温少氧，减弱果蔬呼吸作用以减少有机物的消耗；</li>
</ol>
</blockquote>
<h4 id="探究实践探究酵母菌细胞呼吸的方式-exp-探究酵母菌细胞呼吸的方式">3.
探究实践：探究酵母菌细胞呼吸的方式 | #exp-探究酵母菌细胞呼吸的方式</h4>
<h3 id="四叶绿体与光合作用">四、叶绿体与光合作用</h3>
<p>​
在自然界中光合作用是唯一能够捕获和转化光能的生物学途径，依赖与特定物质与结构。光合作用指绿色植物<strong>通过叶绿体</strong>，利用光能将二氧化碳和水转化成储存能量的有机物，并释放氧气的过程。</p>
<h4 id="捕获光能的色素和结构">1. 捕获光能的色素和结构</h4>
<p>​
绿叶中的色素均分布在叶绿体中的<strong>类囊体薄膜</strong>上，可以分为四种并归为两大类：</p>
<ol type="1">
<li>叶绿素（<span class="math inline">$\frac{3}{4}$</span>，叶绿素
a（蓝绿）、叶绿素 b（黄绿））；</li>
<li>类胡萝卜素（<span class="math inline">$\frac{1}{4}$</span>，胡萝卜素（橙黄）、叶黄素（黄色））；</li>
</ol>
<p>​ <strong>叶绿素 a 和叶绿素 b
主要吸收蓝紫光、红光，胡萝卜素和叶黄素主要吸收蓝紫光</strong>，都可以用于光合作用。</p>
<p>​
叶绿体由双层膜包被，里面有囊状结构类囊体堆叠而成，是细胞光合作用的反应场所。</p>
<h4 id="探究实践绿叶中色素的提取和分离-exp-绿叶中色素的提取与分离">2.
探究实践：绿叶中色素的提取和分离 | #exp-绿叶中色素的提取与分离</h4>
<figure>
<img src="https://raw.githubusercontent.com/PassionPenguin/picgo-database/main/49019765d2744ccbde68172e83914b27f6ee2a4c.svg" alt="img">
<figcaption aria-hidden="true">img</figcaption>
</figure>
<h4 id="光合作用的原理">3. 光合作用的原理</h4>
<p>​
光合作用分为两个阶段，光反应阶段和碳反应（暗反应）阶段，高中阶段只考察卡尔文循环。</p>
<blockquote>
<p>​ 高等植物的碳同化有三条途径：卡尔文循环、<span class="math inline">$\ce{C4}$</span>途径和景天酸代谢，其中卡尔文循环是碳同化的基本途径，是唯一能够合成碳类的途径，其他两个途径只能固定、浓缩和转运<span class="math inline">$\ce{CO2}$</span>，最终转运至卡尔文循环，是植物在高温或干旱地区固定低浓度<span class="math inline">$\ce{CO2}$</span>并择机转运至卡尔文循环，维持光合作用的途径。</p>
</blockquote>
<p>​ 在第一个阶段中，叶绿体中光合色素吸收的光能分解水并提供能量生成
ATP，其中氢离子形成 NADPH：</p>
<div class="sourceCode" id="cb8"><pre class="sourceCode latex"><code class="sourceCode latex"><span id="cb8-1"><a href="#cb8-1" aria-hidden="true" tabindex="-1"></a><span class="fu">\ce</span>&#123;2H2O -&gt;[<span class="fu">\text</span>&#123;uv&#125;][<span class="fu">\text</span>&#123;类囊体薄膜&#125;] O2 + 4H+&#125;</span></code></pre></div>
<p>​ 在碳反应阶段中，第一阶段的物质通过卡尔文循环固定<span class="math inline">$\ce{CO2}$</span>形成糖类：</p>
<div class="sourceCode" id="cb9"><pre class="sourceCode latex"><code class="sourceCode latex"><span id="cb9-1"><a href="#cb9-1" aria-hidden="true" tabindex="-1"></a><span class="kw">\begin</span>&#123;<span class="ex">align</span>&#125;</span>
<span id="cb9-2"><a href="#cb9-2" aria-hidden="true" tabindex="-1"></a><span class="sc">\ce</span><span class="ss">&#123;</span><span class="er">$</span><span class="sc">\underset</span><span class="ss">&#123;</span><span class="sc">\ce</span><span class="ss">&#123;CO2&#125;&#125;&#123;</span><span class="sc">\ce</span><span class="ss">&#123;6[1C]&#125;&#125;</span><span class="er">$</span><span class="ss"> + 6[5C] &amp;-&gt; </span><span class="er">$</span><span class="sc">\underset</span><span class="ss">&#123;</span><span class="sc">\text</span>&#123;3-磷酸甘油酸&#125;<span class="ss">&#125;&#123;</span><span class="sc">\ce</span><span class="ss">&#123;12[3C]&#125;&#125;</span><span class="er">$</span><span class="ss">&#125;</span><span class="sc">\\</span></span>
<span id="cb9-3"><a href="#cb9-3" aria-hidden="true" tabindex="-1"></a><span class="sc">\ce</span><span class="ss">&#123;12[3C] &amp;-&gt;[ATP] </span><span class="er">$</span><span class="sc">\underset</span><span class="ss">&#123;</span><span class="sc">\text</span>&#123;1,3-二磷酸甘油酸&#125;<span class="ss">&#125;&#123;</span><span class="sc">\ce</span><span class="ss">&#123;12[3C]&#125;&#125;</span><span class="er">$</span><span class="ss">&#125;</span><span class="sc">\\</span></span>
<span id="cb9-4"><a href="#cb9-4" aria-hidden="true" tabindex="-1"></a><span class="sc">\ce</span><span class="ss">&#123;12[3C] &amp;-&gt;[NaDPH] </span><span class="er">$</span><span class="sc">\underset</span><span class="ss">&#123;</span><span class="sc">\text</span>&#123;3-磷酸甘油醛/二羟丙酮磷酸&#125;<span class="ss">&#125;&#123;</span><span class="sc">\ce</span><span class="ss">&#123;12[3C]&#125;&#125;</span><span class="er">$</span><span class="ss">&#125;</span><span class="sc">\\</span></span>
<span id="cb9-5"><a href="#cb9-5" aria-hidden="true" tabindex="-1"></a><span class="sc">\ce</span><span class="ss">&#123;</span><span class="er">$</span><span class="sc">\underset</span><span class="ss">&#123;3-磷酸甘油醛&#125;&#123;</span><span class="sc">\ce</span><span class="ss">&#123;2[3C]&#125;&#125;</span><span class="er">$</span><span class="ss"> &amp;-&gt;[</span><span class="sc">\text</span>&#123;酶&#125;<span class="ss">] </span><span class="er">$</span><span class="sc">\underset</span><span class="ss">&#123;</span><span class="sc">\text</span>&#123;葡萄糖&#125;<span class="ss">&#125;&#123;</span><span class="sc">\ce</span><span class="ss">&#123;1[6C]&#125;&#125;</span><span class="er">$</span><span class="ss">&#125;</span><span class="sc">\\</span></span>
<span id="cb9-6"><a href="#cb9-6" aria-hidden="true" tabindex="-1"></a><span class="sc">\ce</span><span class="ss">&#123;10[3C] &amp;-&gt;[</span><span class="sc">\text</span>&#123;酶&#125;<span class="ss">][ATP] 6[5C]&#125;</span></span>
<span id="cb9-7"><a href="#cb9-7" aria-hidden="true" tabindex="-1"></a><span class="kw">\end</span>&#123;<span class="ex">align</span>&#125;</span></code></pre></div>
<p>​ 卡尔文净反应（式 1）和光反应的通式（式 2）如下：</p>
<div class="sourceCode" id="cb10"><pre class="sourceCode latex"><code class="sourceCode latex"><span id="cb10-1"><a href="#cb10-1" aria-hidden="true" tabindex="-1"></a><span class="kw">\begin</span>&#123;<span class="ex">align</span>&#125;</span>
<span id="cb10-2"><a href="#cb10-2" aria-hidden="true" tabindex="-1"></a><span class="sc">\ce</span><span class="ss">&#123;6CO2 + 18ATP + 12NADPH &amp;-&gt; C6H12O6 +12NADP+ + 18ADP + 18P_i&#125;</span><span class="sc">\\</span></span>
<span id="cb10-3"><a href="#cb10-3" aria-hidden="true" tabindex="-1"></a><span class="sc">\ce</span><span class="ss">&#123;CO2 + H2O &amp;-&gt;[uv][</span><span class="sc">\text</span>&#123;酶&#125;<span class="ss">] (CH_2O) + O2&#125;</span></span>
<span id="cb10-4"><a href="#cb10-4" aria-hidden="true" tabindex="-1"></a><span class="kw">\end</span>&#123;<span class="ex">align</span>&#125;</span></code></pre></div>
<h4 id="探究实践探究环境因素对光合作用强度的影响-exp-探究环境因素对光合作用强度的影响">4.
探究实践：探究环境因素对光合作用强度的影响 |
#exp-探究环境因素对光合作用强度的影响</h4>
<blockquote>
<h4 id="影响光合作用的因素">影响光合作用的因素</h4>
<ol type="1">
<li>叶片气孔开闭（<span class="math inline">$\ce{CO2}$</span>摄入量）；</li>
<li>环境<span class="math inline">$\ce{CO2}$</span>浓度；</li>
<li>无机营养（叶绿素为以<span class="math inline">$\ce{Mg}$</span>原子为中心原子与卟啉配位形成的配合物）；</li>
<li>光线强度；</li>
<li>环境温度；</li>
<li>环境 pH；</li>
</ol>
</blockquote>
<blockquote>
<h4 id="光补偿点和光饱和点">光补偿点和光饱和点</h4>
<p>​ <strong>光补偿点</strong>指植物净吸收<span class="math inline">$\ce{CO2}$</span>为 0
时候的光强，<strong>光饱和点</strong>指植物光合速率不再升高时的光强。</p>
</blockquote>]]></content>
      <categories>
        <category>High School</category>
        <category>Biology</category>
        <category>Cell Biology</category>
      </categories>
      <tags>
        <tag>School Notes</tag>
        <tag>High School</tag>
        <tag>Biology</tag>
      </tags>
  </entry>
  <entry>
    <title>细胞的物质输入和输出</title>
    <url>/2022/02/26/biology/High%20School/b1%20cell%20biology/P4%20%E7%BB%86%E8%83%9E%E7%9A%84%E7%89%A9%E8%B4%A8%E8%BE%93%E5%85%A5%E5%92%8C%E8%BE%93%E5%87%BA/</url>
    <content><![CDATA[<h2 id="课程标准">课程标准</h2>
<h4 id="物质通过被动运输主动运输等方式进出细胞以维持细胞的正常代谢活动">2.1
物质通过被动运输、主动运输等方式进出细胞，以维持细胞的正常代谢活动</h4>
<p>2.1.1 阐明质膜具有选择透过性。</p>
<p>2.1.2
举例说明有些物质顺浓度梯度进出细胞，不需要额外提供能量；有些物质逆浓度梯度进出细胞，需要能量和载体蛋白。</p>
<p>2.1.3 举例说明大分子物质可以通过胞吞、胞吐进出细胞。</p>
<span id="more"></span>
<h3 id="教学活动要求">教学活动要求</h3>
<ol type="1">
<li><p>通过模拟实验探究膜的透性；</p></li>
<li><p>观察植物细胞的质壁分离和复原；</p></li>
</ol>
<h3 id="学业要求">学业要求</h3>
<p>​
建构并使用细胞模型，阐明细胞各部分结构通过分工与合作，形成相互协调的有机整体，实现细胞水平的各项生命活动（生命观念、科学思维、科学探究）。</p>
<h3 id="内容说明">内容说明</h3>
<h4 id="物质进出细胞的方式">物质进出细胞的方式</h4>
<ol type="1">
<li>通过开展模拟实验研究膜的透性、观察植物细胞质壁分离和复原等学习活动，分析实验现象发生的条件、原因，阐明质膜具有选择透过性。</li>
<li>通过分析相关实践经验和有关生活实践经验和有关自然现象，能够举例说明有些小分子可以顺浓度梯度进出细胞，不需要细胞细胞额外提供能量，即被动运输。</li>
<li>通过分析相关资料，能够举例说明有些物质可以逆浓度梯度进出细胞，需要细胞提供能量和载体蛋白的参与，即主动运输。</li>
<li>能够举例说明大分子物质可以通过胞吞、胞吐方式进出细胞。</li>
</ol>
<h2 id="知识聚焦">知识聚焦</h2>
<h3 id="一被动运输主动运输与胞吞胞吐">一、被动运输、主动运输与胞吞、胞吐</h3>
<table>
<colgroup>
<col style="width: 4%">
<col style="width: 24%">
<col style="width: 24%">
<col style="width: 23%">
<col style="width: 23%">
</colgroup>
<thead>
<tr class="header">
<th>内容</th>
<th>被动运输（协助扩散）</th>
<th>被动运输（自由扩散）</th>
<th>主动运输</th>
<th>胞吞、胞吐</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>方向</td>
<td>物质的高浓度到低浓度</td>
<td>物质的高浓度到低浓度</td>
<td>任何方向</td>
<td>任何方向</td>
</tr>
<tr class="even">
<td>动力</td>
<td>浓度梯度势能或电位差</td>
<td>浓度梯度势能或电位差</td>
<td>细胞自体能量（ATP）</td>
<td>细胞自体能量（ATP）</td>
</tr>
<tr class="odd">
<td>蛋白</td>
<td>载体蛋白、通道蛋白</td>
<td>-</td>
<td>载体蛋白</td>
<td>-</td>
</tr>
</tbody>
</table>
<p>​
<strong>渗透作用</strong>指水分子或其他溶剂分子在半透膜两端因为浓度不同而产生的通过半透膜的扩散的现象。渗透的方向为水分子相对含量低到相对含量高，渗透的动力为浓度梯度势能或电位差，渗透的生物学或物理化学基础为选择透过性。</p>
<p>​
<strong>被动运输</strong>是物质通过细胞膜的选择透过性与渗透作用实现的物质运输，不消耗细胞化学反应释放的能量，分为<strong>自由扩散</strong>（简单扩散）和<strong>协助扩散</strong>（依靠转运蛋白），速度与载体蛋白的数量有关。</p>
<p>​
<strong>主动运输</strong>在选择吸收所需要的物质，排出代谢废物与对细胞有害的物质，保证细胞和个体生命活动的需要上扮演了重要角色。</p>
<p>​
<strong>胞吞胞吐</strong>的存在为生物大分子或离子大量进出细胞膜提供了基础。</p>
<h3 id="二水进出细胞的探究">二、水进出细胞的探究</h3>
<h4 id="细胞的失水与吸水">1. 细胞的失水与吸水</h4>
<p>​
水进出细胞的原理是渗透作用，当外界溶液溶质浓度比原生质层浓度低，细胞吸水膨胀；当外界溶液溶质浓度比原生质层浓度高，细胞失水皱缩（植物中的<strong>原生质层</strong>指细胞膜与液泡膜之间的细胞质，同样对于动物也有相同现象，比较的浓度更改为细胞质浓度）。</p>
<h4 id="探究实践探究植物细胞的吸水和失水-exp-探究植物细胞的吸水和失水">2.
探究实践：探究植物细胞的吸水和失水 | #exp-探究植物细胞的吸水和失水</h4>
<p>​
将有些萎蔫的菜叶浸泡在清水中，不久，菜叶就会变得硬挺。将白菜剥碎做馅时，常常要放一些盐，稍过一会儿就可见到有水分渗出。对农作物施肥过多，会造成“烧苗”现象。这些现象都说明，植物细胞也像动物细胞一样，会发生吸水或失水现象，吸水或失水同样与外界溶液的浓度有关。</p>
<h5 id="提出问题">提出问题</h5>
<p>​
水分进出植物细胞是通过渗透作用吗？原生质层是否相当于一层半透膜？</p>
<h5 id="作出假设">作出假设</h5>
<p>​
假设是对问题所作的尝试性回答。作假设不是凭空猜测，而是根据已有的知识和经验作出合理的推断。诸结合上文介绍的植物细胞的结构特点和自己的生活经验，与本小组同学讨论这个间题的合理答案。</p>
<h5 id="实验设计思路">实验设计思路</h5>
<p>​ 设计实验时可以思考和讨论以下问题。</p>
<ol type="1">
<li><p>如果假设是正确的，当外界溶液的浓度高于细胞液的浓度时，细胞就会
；当外界溶液的浓度低于细胞液的浓度时，细胞就会 。</p></li>
<li><p>如何使细胞外溶液的浓度提高或降低？</p></li>
<li><p>如何看到细胞？需要用到什么材料和器具？</p></li>
<li><p>对实验结果作出预测一细胞失水或吸水后可能出现哪些可观察的变化？</p></li>
</ol>
<h5 id="参考案例">参考案例</h5>
<p>​ 下面是可供参考的实验方案，或许可以
帮你在细节上完善自己的实验设计。当然，
你也可以对这个方案作出适当的修改。</p>
<h5 id="材料用具">材料用具</h5>
<p>​
紫色的洋葱鳞片叶，刀片，镁子，滴管，载玻片，盖玻片，吸水纸，显微镜。质量浓度为0.3
g/mL 的蔗糖溶液，清水。 ##### 方法步骤</p>
<ol type="1">
<li>选取新鲜洋葱鳞片叶，用刀片在外表皮上划一方框，用镂子撕下表皮。在洁净的载玻片上滴一滴清水，将撕下的表皮放在水滴中展平，盖上盖玻片，制成临时装片。</li>
<li>用低倍显微镜观察洋葱鳞片叶外表皮细胞中紫色的中央液泡的大小，以及原生质层的位置。</li>
<li>从盖玻片的一侧滴入蔗糖溶液，在盖玻片的另一侧用吸水纸引流。这样重复几次，洋葱鳞片叶表皮就浸润在蔗糖溶液中。</li>
<li>用低倍显微镜观察，看细胞的中央液泡是否逐渐变小，原生质层在什么位置，细胞大小是否变化。</li>
<li>在盖玻片的一侧滴入清水，在盖玻片的另一侧用吸水纸引流。这样重复儿次，洋葱鳞片叶表皮又浸润在清水中。</li>
<li>用低倍显微镜观察，看中央液泡是否逐渐变大，原生质层的位置有没有变化，细胞的大小有没有变化。</li>
<li>进行实验，记录结果：按照实验方案进行实验，仔细观察，将结果记录在下表内。</li>
</ol>
<table>
<thead>
<tr class="header">
<th>外界溶液</th>
<th>中央液泡大小</th>
<th>原生质层位置</th>
<th>细胞大小</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>蔗糖溶液</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr class="even">
<td>清水</td>
<td></td>
<td></td>
<td></td>
</tr>
</tbody>
</table>
<p>​ 植物细胞的原生质层相当于一层半透膜，依赖渗透作用吸水。</p>
<p>​
<strong>质壁分离</strong>指原生质层与细胞壁因为原生质层失水皱缩而分离，<strong>质壁分离的复原</strong>是质壁分离的逆向现象，指原生质层吸水后扩大恢复成原来状态。</p>]]></content>
      <categories>
        <category>High School</category>
        <category>Biology</category>
        <category>Cell Biology</category>
      </categories>
      <tags>
        <tag>School Notes</tag>
        <tag>High School</tag>
        <tag>Biology</tag>
      </tags>
  </entry>
  <entry>
    <title>细胞的基本结构</title>
    <url>/2022/02/24/biology/High%20School/b1%20cell%20biology/P3%20%E7%BB%86%E8%83%9E%E7%9A%84%E5%9F%BA%E6%9C%AC%E7%BB%93%E6%9E%84/</url>
    <content><![CDATA[<h2 id="课程标准">课程标准</h2>
<h4 id="各种细胞具有相似的基本结构但在形态与功能上有所差异">1.3
各种细胞具有相似的基本结构，但在形态与功能上有所差异</h4>
<p>1.3.1
说明有些生物体只有一个细胞，而有的由很多细胞构成，这些细胞形态和功能多样，但都具有相似的基本结构。</p>
<p>1.3.2
描述原核细胞与真核细胞的最大区别是原核细胞没有由核膜包被的细胞核。</p>
<span id="more"></span>
<h3 id="教学活动要求">教学活动要求</h3>
<ol type="1">
<li><p>尝试制作真核细胞的结构模型；</p></li>
<li><p>使用光学显微镜观察各种细胞，可结合电镜照片分析细胞的亚显微结构；</p></li>
</ol>
<h3 id="学业要求">学业要求</h3>
<p>​
建构并使用细胞模型，阐明细胞各部分结构通过分工与合作，形成相互协调的有机整体，实现细胞水平的各项生命活动（生命观念、科学思维、科学探究）。</p>
<h3 id="内容说明">内容说明</h3>
<h4 id="细胞结构的整体性">细胞结构的整体性</h4>
<p>​
通过观察细胞的基本结构、叶绿体和细胞质流动，观察有关细胞显微图片，概述出细胞的基本结构，获得对细胞结构的粗略认识。在此基础上，分别深入学习细胞膜、细胞质和细胞核的物质组成、结构特点和主要功能。</p>
<ol type="1">
<li>通过对细胞膜的研究资料，分析细胞膜的分子组成、结构特点与功能的统一性，理解其在控制物质进出及参与细胞间信息交流上的作用。</li>
<li>结合图片和细胞结构模型，认识细胞内具有线粒体、叶绿体、内质网、核糖体、溶酶体等相对独立的结构，理解它们各自在物质运输、合成与分解、能量转换和信息传递上的作用。</li>
<li>认识遗传信息主要储存在细胞核中。</li>
<li>通过开展制作真核细胞的结构模型和具体实例的分析，形成细胞各部分结构之间既有分工又有合作，相互联系、协调一致，共同执行细胞各项生命活动的认识。</li>
</ol>
<h2 id="知识聚焦">知识聚焦</h2>
<h3 id="一细胞膜的结构与功能">一、细胞膜的结构与功能</h3>
<h4 id="细胞膜">1. 细胞膜</h4>
<p>​
细胞作为一个基本的生命系统，边界是细胞膜（质膜）。细胞膜由<strong>50%的脂质</strong>（脂质中<strong>磷脂最丰富</strong>，也有<strong>少量胆固醇</strong>），<strong>40%的蛋白质，
2%～ 10%的糖类</strong>组成。</p>
<p>​
<strong>蛋白质在细胞膜行使功能方面起重要作用，功能越复杂的细胞膜，蛋白质的种类和数量越多。</strong></p>
<p>​ 细胞膜的意义如下：</p>
<ol type="1">
<li>分隔细胞与外界环境（细胞膜最重要的功能）；</li>
<li><strong>维持细胞的形态结构</strong>；</li>
<li><strong>保证细胞正常生命活动</strong>；</li>
<li>集中各种生物大分子，<strong>利于细胞的物质和能量代谢，利于细胞生长发育</strong>；</li>
<li>控制物质进出细胞（跨膜运输）；</li>
<li>具有<strong>选择透过性</strong>，为细胞提供物质，也阻止物质从细胞中逃散；</li>
<li>进行细胞间信息交流（信息交流方式：<strong>血液运输受体、生物大分子（糖蛋白/糖脂）、高等植物胞间连丝</strong>）、<strong>信号转导</strong>（膜信号受体蛋白与信号分子结合被激活后，将信号转入胞内，产生特定生物学效应）、<strong>胞间连接与通信</strong>、<strong>胞间识别</strong>（细胞识别是细胞发育与分化的一个非常重要的环节，细胞通过识别和黏着形成不同类型的组织）</li>
</ol>
<h4 id="细胞膜探索历程">2. 细胞膜探索历程</h4>
<p>对细胞膜的探索：</p>
<ol type="1">
<li><p>1895
年，<strong>欧文顿</strong>用化学物质对植物细胞的通透性进行了试验，发现溶于脂质的物质容易穿过膜，<strong>推测细胞膜是由脂质组成的</strong>。</p></li>
<li><p>1925
年，荷兰科学家<strong>戈特</strong>和<strong>格伦德尔</strong>用丙酮从人的红细胞中提取脂质，在空气—水界面上铺成单分子层，测得单分子层面积为红细胞表面积两倍，<strong>推测磷脂分子必然排列为连续的两层</strong>。</p></li>
<li><p>1935
年，英国学者<strong>丹尼利</strong>和<strong>戴维森</strong>研究细胞膜表面张力，发现其明显低于油—水界面的表面张力，<strong>推测细胞膜除了含有脂质分子以外还含有蛋白质</strong>。【双分子片层结构】</p></li>
<li><p>1940
年，<strong>罗伯特森</strong>通过电镜观察到细胞膜暗—亮—暗三层结构，<strong>推测所有细胞膜都是蛋白质—脂质—蛋白质结构，描述为静态的统一结构</strong>。【单位膜结构】</p></li>
<li><p>1970
年，科学家用绿色和红色荧光分别标记人和小鼠的细胞膜，融合细胞膜后发现荧光均匀分布，表明<strong>细胞膜具有流动性</strong>。</p></li>
<li><p>1972
年，<strong>辛格</strong>和<strong>尼科尔森</strong>提出<strong>流动镶嵌模型</strong>。【流动镶嵌模型】</p></li>
<li><p>1975
年，<strong>沃利奇</strong>提出<strong>晶格镶嵌模型</strong>。他在流动镶嵌模型基础上，进一步强调流动性脂质的可逆性变化。这种变化区域呈点状分布在膜上，表现为膜质分子的一种协同效应，即几十个以上的脂分子在温度、本身性质、膜中其他组分、pH
和二价阳离子浓度等因素影响下，同时相变。【晶格镶嵌模型】</p></li>
<li><p>1977
年，<strong>杰恩</strong>和<strong>怀特</strong>提出<strong>板块镶嵌模型</strong>，本质上与晶格镶嵌模型一致，认为流动脂双分子层中存在不同大小的刚度较大的彼此独立运动的脂质板块（有序结构区），板块之间被无序流动的脂质区所分割，且两种区域处于一种动态平衡之中。【板块镶嵌模型】</p></li>
</ol>
<h4 id="流动镶嵌模型">流动镶嵌模型：</h4>
<p>​
流动镶嵌模型指<strong>细胞膜主要由磷脂分子和蛋白子分子构成，磷脂双分子层是膜的基本支架。</strong>在该模型中，<strong>蛋白质分子镶嵌在膜中，在物质运输、信息识别等方面起到重要作用。</strong></p>
<p>​
流动镶嵌模型的生物学基础是细胞膜结构上具有流动性，磷脂分子可以侧向自由移动，蛋白质大多可以运动。这一细胞膜模型的意义在于能够有助于细胞<strong>完成物质运输</strong>（选择透过性）、<strong>生长、分裂、运动</strong>等功能。</p>
<h3 id="二细胞器之间的分工合作">二、细胞器之间的分工合作</h3>
<h4 id="细胞器与细胞骨架">细胞器与细胞骨架</h4>
<p>​
<strong>细胞器</strong>是细胞中<strong>有一定结构</strong>，<strong>负责特定功能</strong>的独立亚细胞结构。细胞质中有溶胶状的<strong>细胞质基质</strong>，<strong>细胞器分布于其中</strong>。<strong>细胞质基质与细胞器、细胞骨架合称细胞质</strong>。</p>
<p>​
<strong>细胞骨架</strong>成分主要是蛋白质纤维，是真核生物的蛋白质纤维网体系，具有以下若干作用：</p>
<ol type="1">
<li><strong>维持细胞形态</strong>（形成一个框架结构）；</li>
<li><strong>支撑细胞器</strong>，为细胞器<strong>提供附着位点</strong>，将细胞器<strong>组成不同体系与区域网络</strong>，<strong>保证</strong>各细胞器<strong>生命活动有序进行</strong>；</li>
<li><strong>为细胞物质、细胞器运输与运动提供机械支撑</strong>（如囊泡运输轨道）；</li>
<li><strong>为细胞运动提供机械动力</strong>（如鞭毛、纤毛主要由细胞骨架构成）；</li>
<li><strong>参与细胞分裂</strong>（核分裂与胞质分裂），纺锤体由微管形成，缢缩环由微丝形成、与细胞<strong>运动、分裂、分化以及物质运输、能量转化、信息传递</strong>等生命活动相关。</li>
</ol>
<h4 id="细胞的亚显微结构">细胞的亚显微结构</h4>
<table>
<thead>
<tr class="header">
<th>名称</th>
<th>是否含有遗传物质</th>
<th>膜结构</th>
<th>细胞类型</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>叶绿体</td>
<td>含 DNA、RNA</td>
<td>双层膜结构</td>
<td>植物特有</td>
</tr>
<tr class="even">
<td>液泡</td>
<td></td>
<td>单层膜结构</td>
<td>植物特有</td>
</tr>
<tr class="odd">
<td>中心体</td>
<td></td>
<td>无膜结构</td>
<td>低等植物、动物特有</td>
</tr>
<tr class="even">
<td>溶酶体</td>
<td></td>
<td>单层膜结构</td>
<td>动物特有</td>
</tr>
<tr class="odd">
<td>线粒体</td>
<td>含 DNA、RNA</td>
<td>双层膜结构</td>
<td></td>
</tr>
<tr class="even">
<td>内质网</td>
<td></td>
<td>单层膜结构</td>
<td></td>
</tr>
<tr class="odd">
<td>高尔基体</td>
<td></td>
<td>单层膜结构</td>
<td></td>
</tr>
<tr class="even">
<td>核糖体</td>
<td>含 RNA</td>
<td>无膜结构</td>
<td>细胞共有</td>
</tr>
</tbody>
</table>
<blockquote>
<h4 id="各类型细胞及其特有细胞器">各类型细胞及其特有细胞器</h4>
<h5 id="植物细胞">植物细胞</h5>
<p>​
<strong>细胞壁</strong>：植物细胞细胞膜外面，<strong>纤维素</strong>和果胶构成，<strong>支撑和保护细胞</strong>，<strong>不具备伸缩性</strong>。</p>
<p>​
<strong>液泡</strong>：主要存在于植物细胞中，内有细胞液，存储糖类、蛋白质、无机盐、色素等，用于<strong>调节细胞内的环境</strong>，<strong>维持植物细胞坚挺</strong>。</p>
<p>​
<strong>叶绿体</strong>：<strong>绿色植物</strong>进行<strong>光合作用</strong>的细胞含有的细胞器。</p>
<h5 id="动物细胞">动物细胞</h5>
<p>​
<strong>中心体</strong>：分布在动物细胞和低等植物细胞中，与细胞<strong>有丝分裂形成纺锤丝</strong>相关。</p>
<p>​
<strong>溶酶体</strong>：主要分布在动物细胞中，内部含有多种<strong>水解酶</strong>，用于<strong>分解衰老、损伤的细胞器</strong>，<strong>吞噬杀死侵入的病菌</strong>。</p>
<h5 id="共有">共有</h5>
<p>​
<strong>线粒体</strong>：细胞进行<strong>有氧呼吸</strong>的<strong>主要</strong>场所，提供细胞生命活动约
95%的能量。</p>
<p>​
<strong>内质网</strong>：蛋白质等大分子物质合成、加工、运输通道，由膜围成管状、泡状或扁平状结构连接而成的一个内腔相通的膜性管道系统。</p>
<p>​
<strong>粗面内质网</strong>：<strong>附有核糖体</strong>，用于<strong>合成蛋白质</strong>。</p>
<p>​
<strong>光面内质网</strong>：无核糖体附着，用于合成各种有机大分子。</p>
<p>​
<strong>高尔基体</strong>：对<strong>内质网蛋白质进行加工、包装</strong>的结构，与<strong>植物细胞有丝分裂形成细胞板（细胞壁）</strong>相关。</p>
<p>​
<strong>核糖体</strong>：<strong>所有细胞</strong>都拥有的负责<strong>蛋白质生成的</strong>单一
RNA-蛋白质结构。</p>
</blockquote>
<h4 id="探究实践用高倍显微镜观察叶绿体和细胞质的流动-exp-用高倍显微镜观察叶绿体和细胞质的流动">2.
探究实践：用高倍显微镜观察叶绿体和细胞质的流动 |
#exp-用高倍显微镜观察叶绿体和细胞质的流动</h4>
<p>​
叶肉细胞中的叶绿体，散布于细胞质中，呈<strong>绿色、扁平的椭球或球形</strong>。可以在高倍显微镜下观察它的形态和分布。</p>
<p>​
活细胞中的细胞质处千不断流动的状态。观察细胞质的流动，可用细胞质基质中的叶绿体的运动作为标志。</p>
<h5 id="目的要求">目的要求</h5>
<ol type="1">
<li><p>使用高倍显微镜观察叶绿体的形态和分布。</p></li>
<li><p>观察细胞质的流动，理解细胞质的流动是一种生命现象。</p></li>
</ol>
<h5 id="材料用具">材料用具</h5>
<p>藓类叶（或菠菜叶、番薯叶等），新鲜的黑藻。
显微镜，载玻片，盖玻片，滴管，镊子，刀片，培养皿，台灯，铅笔。 #####
方法步骤 一、制作薛类叶片的临时装片并观察叶绿体的形态和分布</p>
<ol type="1">
<li><p>用镊子取一片鲜类的小叶（或者取菠菜叶稍带些叶肉的下表皮）放入盛有清水的培养皿中。</p></li>
<li><p>往载玻片中央滴一滴清水，用镊子夹住所取的叶放入水滴中，盖上盖玻片。</p>
<p>注意：临时装片中的叶片不能放干了，要随时 保持有水状态。</p></li>
<li><p>先用低倍镜找到需要观察的叶绿体，再换用高倍镜观察。仔细观察叶绿体的形态和分布情况。</p></li>
</ol>
<p>二、制作黑藻叶片临时装片并观察细胞质的流动</p>
<ol type="1">
<li>供观察用的黑藻，事先应放在光照、室温条件下培养。</li>
<li>将黑藻从水中取出，用摄子从新鲜枝条上取一片幼嫩的小叶，将小叶放在载玻片的水滴中，盖上盖玻片。</li>
<li>先用低倍镜找到黑藻叶肉细胞，然后换用高倍镜观察。注意观察叶绿体随着细胞质流动的情况，仔细看看每个细胞中细胞质流动的方向是否一致。</li>
</ol>
<h3 id="三细胞核的结构和功能">三、细胞核的结构和功能</h3>
<h4 id="细胞核的结构和功能">1. 细胞核的结构和功能</h4>
<p>​
细胞核由<strong>核膜</strong>（<strong>双层膜</strong>）、<strong>核仁</strong>（最内层，<strong>合成、加工与成熟
rRNA，组装核糖体亚单位</strong>）、<strong>染色质</strong>（中间，由<strong>DNA
与蛋白质</strong>组成，<strong>DNA
是遗传物质的载体</strong>）、<strong>核孔</strong>（镶嵌于核膜上，实现核质之间频繁的<strong>物质交换与信息交流</strong>）组成，具有<strong>遗传信息库、控制细胞代谢和遗传</strong>的作用（细胞核是绝大多数遗传信息的存储点、DNA
复制与 RNA 转录的场所）。</p>
<p>​
染色质和染色体两者是<strong>同一物质</strong>在<strong>细胞不同时期</strong>的<strong>两种存在状态</strong>，其容易<strong>被碱性染料染色</strong>，故得名染色体—染色质，其中染色质的组成是
DNA+（非）组蛋白+少量 RNA。</p>
<p>​
==细胞是<strong>生物体结构的基本单位</strong>，也是<strong>生物体代谢和遗传的基本单位</strong>。==</p>
<blockquote>
<h4 id="模型建构">模型建构</h4>
<p>建构模型法分类：模型包括物理模型、概念模型、数学模型。</p>
<ol type="1">
<li>物理模型：实物或图画形式表达认识对象的特征，案例：DNA
双螺旋结构、真核细胞三维结构模型、减数分裂中染色体变化的模型。</li>
<li>概念模型：文字、图线和符号将有联系的名词或过程连接起来，阐述生命现象与活动规律的抽象模型，主要由流程图模型和概念图模型两种分支。</li>
<li>数学模型：字母、数字和符号建立起来的等式或不等式以及图像、图表等描述事物特征及内在联系的数学表达式，用于描述生命现象。案例：种群增长的“J”、“S”型曲线，酶活性受温度、pH
影响关系图、种群密度的计算等。</li>
</ol>
</blockquote>
<h4 id="探究实践尝试制作真核细胞的三维结构模型-exp-尝试制作真核细胞的三维结构模型">2.
探究实践：尝试制作真核细胞的三维结构模型 |
#exp-尝试制作真核细胞的三维结构模型</h4>]]></content>
      <categories>
        <category>High School</category>
        <category>Biology</category>
        <category>Cell Biology</category>
      </categories>
      <tags>
        <tag>School Notes</tag>
        <tag>High School</tag>
        <tag>Biology</tag>
      </tags>
  </entry>
  <entry>
    <title>组成细胞的分子</title>
    <url>/2022/02/22/biology/High%20School/b1%20cell%20biology/P2%20%E7%BB%84%E6%88%90%E7%BB%86%E8%83%9E%E7%9A%84%E5%88%86%E5%AD%90/</url>
    <content><![CDATA[Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
This is pdfTeX, Version 3.141592653-2.6-1.40.23 (TeX Live 2021/W32TeX) (preloaded format=latex)
 restricted \write18 enabled.
entering extended mode
(./input.tex
LaTeX2e &lt;2021-11-15&gt; patch level 1
L3 programming layer &lt;2022-02-24&gt;
(c:/texlive/2022/texmf-dist/tex/latex/standalone/standalone.cls
Document Class: standalone 2018/03/26 v1.3a Class to compile TeX sub-files stan
dalone
(c:/texlive/2022/texmf-dist/tex/latex/tools/shellesc.sty)
(c:/texlive/2022/texmf-dist/tex/generic/iftex/ifluatex.sty
(c:/texlive/2022/texmf-dist/tex/generic/iftex/iftex.sty))
(c:/texlive/2022/texmf-dist/tex/latex/xkeyval/xkeyval.sty
(c:/texlive/2022/texmf-dist/tex/generic/xkeyval/xkeyval.tex
(c:/texlive/2022/texmf-dist/tex/generic/xkeyval/xkvutils.tex
(c:/texlive/2022/texmf-dist/tex/generic/xkeyval/keyval.tex))))
(c:/texlive/2022/texmf-dist/tex/latex/standalone/standalone.cfg)
(c:/texlive/2022/texmf-dist/tex/latex/base/article.cls
Document Class: article 2021/10/04 v1.4n Standard LaTeX document class
(c:/texlive/2022/texmf-dist/tex/latex/base/size12.clo))
(c:/texlive/2022/texmf-dist/tex/latex/preview/preview.sty
(c:/texlive/2022/texmf-dist/tex/latex/preview/prtightpage.def)))
(c:/texlive/2022/texmf-dist/tex/latex/base/inputenc.sty

! LaTeX Error: File `utf8x.def' not found.

Type X to quit or <return> to proceed,
or enter new name. (Default extension: def)

Enter file name: 
! Emergency stop.
<read *=""> 
         
l.165 \endinput
               ^^M
No pages of output.
Transcript written on input.log.
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
<h2 id="课程标准">课程标准</h2>
<h4 id="细胞由多种多样的分子组成包括水无机盐糖类脂质蛋白质和核酸等其中蛋白质和核酸是两类最重要的生物大分子">1.1
细胞由多种多样的分子组成，包括水、无机盐、糖类、脂质、蛋白质和核酸等，其中蛋白质和核酸是两类最重要的生物大分子</h4>
<p>1.1.1 说出细胞主要由 C、H、O、N、P、S
等元素构成，它们以碳链为骨架形成复杂的生物大分子。</p>
<p>1.1.2 指出水大约占细胞重量的 2/3
，以自由水和结合水的形式存在，赋予了细胞许多特性，在生命活动中具有重要作用。</p>
<p>1.1.3 举例说出无机盐在细胞内含量虽少，但与生命活动密切相关。</p>
<p>1.1.4
概述糖类有多种类型，它们既是细胞的重要结构成分，又是生命活动的主要能源物质。</p>
<p>1.1.5 举例说出不同种类的脂质对维持细胞结构和功能有重要作用。</p>
<p>1.1.6 阐明蛋白质通常由 20
种氨基酸分子组成，它的功能取决于氨基酸序列及其形成的空间结构，细胞的功能主要由蛋白质完成。</p>
<p>1.1.7
概述核酸由核苷酸聚合而成，是储存与传递遗传信息的生物大分子。</p>
<span id="more"></span>
<h3 id="教学活动要求">教学活动要求</h3>
<ol type="1">
<li>检测生物组织中的还原糖、脂肪和蛋白质；</li>
</ol>
<h3 id="学业要求">学业要求</h3>
<p>​
从结构与功能相适应这一视角，解释细胞由多种多样的分子组成，这些分子是细胞执行各项生命活动的物质基础（生命观念、科学思维）。</p>
<h3 id="内容说明">内容说明</h3>
<h4 id="生命的物质性">生命的物质性</h4>
<p>通过“检测生物组织中的还原糖、脂肪和蛋白质”等实验活动，借助已有知识与生活经验，分析细胞组成成分研究资料，得出<strong>细胞是由多种多样的分子组成的</strong>，包括<strong>水、盐、糖、脂、蛋白质与核酸</strong>六类化合物构成，初步形成<strong>生命的物质性</strong>的观念，认识它们在细胞结构和生命活动中的<strong>地位与作用</strong>。</p>
<ol type="1">
<li>认识水分子特性和细胞中存在形式的基础上，理解水在生命中的重要作用。</li>
<li>以具体实例说出无机盐在细胞中的含量及其发挥的重要作用。</li>
<li>概述糖类的种类及其在构成细胞结构和提供细胞生命活动能量上的重要作用。</li>
<li>以具体实例说出脂质的种类及其在构成细胞结构和生命活动中的重要作用。</li>
<li>阐明蛋白质是由氨基酸构成的生物大分子，构成蛋白质的氨基酸主要有 20
多种，以特定的种类数目和排列方式构成肽链，进而决定着蛋白质的空间结构和功能，细胞的功能主要是由蛋白质完成的。</li>
<li>概述核酸是有核苷酸聚合而成的，是储存和传递遗传信息的生物大分子。</li>
<li>通过对细胞成分的学习，认识到细胞是由水、无机盐、糖类、脂质、蛋白质和核酸等组成的多分子体系，其中蛋白质和核酸是两类最重要的生物大分子。这些分子通过有序组织而构成细胞的结构，通过动态转变所伴随的能量变化推动生命运行，通过某些物质的转变和运行传递信息，参与生命活动的调控和生命的延续，因此<strong>物质、能量和信息是细胞生命活动的化学基础</strong>。</li>
</ol>
<h2 id="知识聚焦">知识聚焦</h2>
<h3 id="一细胞中的元素和化合物">一、细胞中的元素和化合物</h3>
<h4 id="组成细胞的元素与化合物">1. 组成细胞的元素与化合物</h4>
<p>​ 组成细胞的元素常见有 20 种，其中大量元素是
C、H、O、N、P、S、K、Ca、Mg，少量元素是
Fe、Mn、Zn、Cu、B、Mo。它们大多以化合物的形式存在，主要的化合物是水（70%～
90%）、蛋白质（7%～ 10%）、脂质（1%～
2%）、无机盐（1<sub>1.5%）、糖类和核酸（1</sub>1.5%）。在组成细胞的化合物中，含量最高的是水，含量最高的有机化合物是蛋白质。</p>
<h4 id="探究实践检测生物组织中的还原糖脂肪和蛋白质-exp-检测生物组织中的还原糖脂肪和蛋白质">2.
探究实践：检测生物组织中的还原糖、脂肪和蛋白质 |
#exp-检测生物组织中的还原糖、脂肪和蛋白质</h4>
<h5 id="检验蛋白质">检验蛋白质</h5>
<ol type="1">
<li>配置双缩脲试剂（<strong>A 液 0.01g/mL <span class="math inline">$\ce{NaOH}$</span>，B 液 0.01g/mL <span class="math inline">$\ce{CuSO4}$</span></strong>）。</li>
<li>向试管中注入待测组织样液<strong>2mL</strong>。</li>
<li>向试管中注入双缩脲试剂<strong>A 液 1mL</strong>。</li>
<li>向试管中注入双缩脲试剂<strong>B 液 4
滴</strong>，<strong>摇匀</strong>。</li>
<li>观察试管中的颜色变化。</li>
</ol>
<p>​
上述反应的反应结果为铜离子与肽键配位，配合物成<strong>紫色</strong>。</p>
<h5 id="检验还原糖">检验还原糖</h5>
<blockquote>
<p>### 还原糖种类：</p>
<p>​
还原糖包括如葡萄糖、果糖、甘油醛等的<strong>所有单糖</strong>，以及<strong>乳糖、麦芽糖等二糖</strong>，和寡糖。<strong>蔗糖和海藻糖</strong>不含醛基和酮基，故<strong>不属于还原糖</strong>。具体反应原理见[[High
School, Chemistry], 生物大分子]。</p>
</blockquote>
<ol type="1">
<li>配置斐林试剂（<strong>甲液 0.1g/mL <span class="math inline">$\ce{NaOH}$</span>，乙液 0.05g/mL <span class="math inline">$\ce{CuSO_4}$</span></strong>）。</li>
<li>向试管中注入<strong>2mL</strong>待测组织样液。</li>
<li>向试管中注入<strong>等量混合均匀（现配现用）后</strong>的斐林试剂<strong>1mL</strong>。</li>
<li><strong>50~65 ℃</strong>水浴加热约<strong>2min</strong>。</li>
<li>观察试管中的颜色变化。</li>
</ol>
<p>​
上述反应的反应结果为还原糖与二价铜离子发生氧化还原反应，生成氧化亚铜成<strong>棕红色</strong>。</p>
<blockquote>
<h5 id="注意事项">注意事项</h5>
<p>​
如果溶液中还原糖含量较低，产生的氧化亚铜便会较少，试验后只会有<strong>绿色、混浊的黄色或橙色</strong>等。在酸性环境中，<span class="math inline">$\ce{Cu^{2+}}$</span>会变得<strong>较为稳定</strong>，不容易发生反应，所以不能进行。</p>
<p>​
另外，<strong>醇和醛</strong>在这测试亦会产生砖红色沉淀物，因为两者都具有在这试验中产生作用的官能基。</p>
</blockquote>
<blockquote>
<h3 id="官方方法拓展本尼迪克班式试剂反应">官方方法拓展：<strong>本尼迪克（班式试剂）反应</strong>。</h3>
</blockquote>
<h5 id="检验脂肪">检验脂肪</h5>
<ol type="1">
<li>取材（浸泡 12h 的花生种子颗粒），去种皮。</li>
<li>切片（用刀片在子叶横断面上切下，放入清水培养皿中）。</li>
<li>制片：
<ol type="1">
<li>取最薄切片，用毛笔蘸取放到载玻片中央。</li>
<li>在子叶薄片上滴<strong>2~3
滴菲林Ⅲ</strong>染液，染色<strong>3min</strong>。</li>
<li>用<strong>吸水纸吸去染液</strong>，滴<strong>1~2 滴体积分数
50%的酒精溶液洗去浮色</strong>，再用吸水纸吸去酒精，滴一滴蒸馏水，盖玻片制成临时装片。</li>
</ol></li>
<li>观察：在低倍镜中找到最薄处，移到视野中央，更换高倍镜观察。</li>
</ol>
<p>​
上述观察现象为可以在花生子叶中观察到<strong>黄色颗粒状脂肪</strong>。</p>
<h3 id="二细胞中的无机物">二、细胞中的无机物</h3>
<h4 id="细胞中的水">1. 细胞中的水</h4>
<p>​
水是<strong>构成细胞的重要成分</strong>，也是活细胞中<strong>含量最多的化合物</strong>。水在细胞中的作用非常重要：</p>
<ol type="1">
<li><p>水是<strong>良好的溶剂</strong>，让物质能够溶解。</p></li>
<li><p>水<strong>参与</strong>细胞中的各种<strong>生化反应</strong>。</p></li>
<li><p>水<strong>提供</strong>了以其为基础的<strong>液体环境</strong>，供大多数多细胞生物中的细胞生存。</p></li>
<li><p>水的流动性，能够<strong>运输养料与代谢废物</strong>。</p></li>
<li><p>结合水是细胞结构的重要组成成分。</p></li>
</ol>
<p>​
在细胞中，水的存在形式有两种，分别是结合水与自由水。绝大部分的细胞中水分呈游离状，可以自由流动，称为<strong>自由水</strong>（含量大概
4.5%）；一部分水与细胞中的其他物质相结合，叫作<strong>结合水</strong>（主要形式是蛋白质、多糖结合水）。
​
<strong>自由水越多代谢越旺盛，结合水越多适应环境能力越强。</strong></p>
<h4 id="细胞中的无机盐">2. 细胞中的无机盐</h4>
<p>​
细胞中<strong>大多无机盐以离子的形式存在</strong>，含量较多的是<span class="math inline">$\ce{Na^+, K^+, Ca^{2+}, Mg^{2+}, Fe^{2+},
Fe^{3+}}$</span>，阴离子<span class="math inline">$\ce{Cl^-,SO^{2-}_4,
PO^{2-}_4, HCO^-_3}$</span>。</p>
<table>
<colgroup>
<col style="width: 24%">
<col style="width: 75%">
</colgroup>
<thead>
<tr class="header">
<th>无机盐离子</th>
<th>作用</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><span class="math inline">$\ce{Na+}$</span></td>
<td>体液组成成分，调节体液渗透压，形成膜电位，维持神经和肌肉的正常兴奋性</td>
</tr>
<tr class="even">
<td><span class="math inline">$\ce{K+}$</span></td>
<td>体液组成成分，维持离子浓度平衡，调节体液渗透压，形成膜电位，维持神经和肌肉的正常兴奋性</td>
</tr>
<tr class="odd">
<td><span class="math inline">$\ce{Ca^2+}$</span></td>
<td>促进牙齿和骨骼的生长，调节神经肌肉的敏感性，参与人体的神经调节</td>
</tr>
<tr class="even">
<td><span class="math inline">$\ce{Mg^2+}$</span></td>
<td>参与形成叶绿素，与某些酶的活性相关</td>
</tr>
<tr class="odd">
<td><span class="math inline">$\ce{Fe^2+, Fe^3+}$</span></td>
<td>相互可以转换，<span class="math inline">$\ce{Fe^{2+}}$</span>是血红蛋白以及某些含铁酶类的成分</td>
</tr>
<tr class="even">
<td><span class="math inline">$\ce{Cl-}$</span></td>
<td>体液组成成分，维持离子浓度平衡，胃酸重要成分，参与人体的神经调节</td>
</tr>
<tr class="odd">
<td><span class="math inline">$\ce{SO^2-_4}$</span></td>
<td>体液组成成分，调节体液渗透压；硫元素本身是蛋白质的重要组成成分（如二硫键），也是多种维生素组成成分</td>
</tr>
<tr class="even">
<td><span class="math inline">$\ce{PO^2-_4}$</span></td>
<td>磷元素本身是构成骨骼、牙齿、肌肉及血液的重要元素，促进酶的活动，形成
ATP；<span class="math inline">$\ce{PO^2-_4}$</span>与<span class="math inline">$\ce{H^+}$</span>结合形成的<span class="math inline">$\ce{HPO^{2-}_4,
H_2PO^-_4}$</span>是人体重要的缓冲对</td>
</tr>
<tr class="odd">
<td><span class="math inline">$\ce{HCO^-_3}$</span></td>
<td><span class="math inline">$\ce{HCO^-_3}$</span>以及<span class="math inline">$\ce{H^+}$</span>结合形成的<span class="math inline">$\ce{H_2CO_3}$</span>是血浆中的最重要缓冲对（<span class="math inline">$\ce{H_2CO_3/HCO_3^-}$</span>），对于调节正常血浆 pH
有重要意义，也是保护胃黏膜重要成分</td>
</tr>
</tbody>
</table>
<table>
<colgroup>
<col style="width: 7%">
<col style="width: 44%">
<col style="width: 10%">
<col style="width: 17%">
<col style="width: 20%">
</colgroup>
<thead>
<tr class="header">
<th>无机盐元素</th>
<th>作用</th>
<th>需求量</th>
<th>缺少</th>
<th>过多</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><span class="math inline">$\ce{Fe}$</span></td>
<td>血红蛋白、细胞色素及含铁酶类成分</td>
<td>0.3-29mg</td>
<td>缺铁性贫血</td>
<td>色素性肝硬化，铁质沉着病</td>
</tr>
<tr class="even">
<td><span class="math inline">$\ce{Ca}$</span></td>
<td>促进牙齿和骨骼的生长，凝血作用，调节神经肌肉的敏感性</td>
<td>0.2-1.2g</td>
<td>骨骼畸形，痉挛</td>
<td>白内障，胆结石，动脉粥样硬化</td>
</tr>
<tr class="odd">
<td><span class="math inline">$\ce{P}$</span></td>
<td>构成骨骼、牙齿、肌肉及血液的重要元素，促进酶活，形成 ATP</td>
<td>0.1-0.72g</td>
<td>-</td>
<td>-</td>
</tr>
<tr class="even">
<td><span class="math inline">$\ce{Na}$</span></td>
<td>体液重要组成成分，调节体液渗透压</td>
<td>0.17-1.6g</td>
<td>Addison 病</td>
<td>高血钠</td>
</tr>
<tr class="odd">
<td><span class="math inline">$\ce{K}$</span></td>
<td>是生长正常，保持肌肉功能正常，维持离子浓度平衡，调节体液渗透压</td>
<td>0.35-2.4g</td>
<td>心律失常</td>
<td>Addison 病，高血钾</td>
</tr>
<tr class="even">
<td><span class="math inline">$\ce{I}$</span></td>
<td>是形成甲状腺激素的成分</td>
<td>0.085-0.24mg</td>
<td>甲状腺肿胀</td>
<td>-</td>
</tr>
<tr class="odd">
<td><span class="math inline">$\ce{Mg}$</span></td>
<td>参与构成叶绿素，与酶的活性有关，保持肌肉功能正常</td>
<td>0.02-0.37g</td>
<td>惊厥</td>
<td>麻木症</td>
</tr>
<tr class="even">
<td><span class="math inline">$\ce{Cu}$</span></td>
<td>促进正常生长</td>
<td>0.3-1.4mg</td>
<td>贫血，卷毛综合症</td>
<td>Wilson 病</td>
</tr>
<tr class="odd">
<td><span class="math inline">$\ce{Mn}$</span></td>
<td>正常生长所需</td>
<td>0.01-4.9mg</td>
<td>骨骼畸形</td>
<td>运动失调</td>
</tr>
<tr class="even">
<td><span class="math inline">$\ce{Zn}$</span></td>
<td>是若干跟消化有关的酶结构中心</td>
<td>2.0-12.5mg</td>
<td>侏儒症，生殖腺功能受影响</td>
<td>金属烟雾发烧症</td>
</tr>
<tr class="odd">
<td><span class="math inline">$\ce{Cr}$</span></td>
<td>对胰岛素的生成重要</td>
<td>0.0002-0.037mg</td>
<td>非正常的葡萄糖代谢</td>
<td>-</td>
</tr>
<tr class="even">
<td><span class="math inline">$\ce{F}$</span></td>
<td>维持骨骼的结构，预防蛀牙</td>
<td>0.01-1.5mg</td>
<td>-</td>
<td>氟斑牙，氟骨症</td>
</tr>
</tbody>
</table>
<h3 id="三细胞中的糖类">三、细胞中的糖类</h3>
<p>​ 糖类是<strong>主要的能源物质</strong>，糖类分解供能占
70%以上。它们的一般组成元素为
C、H、O，可以分为单糖、二糖和多糖（与寡糖）。</p>
<ol type="1">
<li><p>单糖：葡萄糖、果糖、半乳糖、核糖与脱氧核糖等。</p>
<ol type="1">
<li>分类依据：<strong>不能水解</strong>。</li>
<li>特征：<strong>能够直接被细胞吸收</strong>。</li>
</ol></li>
<li><p>二糖：蔗糖、麦芽糖、乳糖等。</p>
<ol type="1">
<li>分类依据：<strong>两分子单糖构成</strong>。</li>
<li>一般要<strong>水解后</strong>才能被细胞吸收。</li>
</ol></li>
<li><p>多糖：淀粉、糖原、纤维素、几丁质等。</p>
<ol type="1">
<li>需要进行<strong>分解成为单糖</strong>后才能被细胞吸收利用。</li>
</ol></li>
</ol>
<h3 id="四细胞中的脂质">四、细胞中的脂质</h3>
<p>​
脂质是组成<strong>细胞和生物体的重要有机化合物</strong>，存在于<strong>所有的细胞中</strong>。脂质分子一般组成元素为
C、H、O，有的含 N、P（也有含 S），可分为脂肪、磷脂和固醇。</p>
<ol type="1">
<li><p>脂肪：</p>
<ol type="1">
<li>脂肪是细胞内<strong>良好的储能物质</strong>。</li>
<li>脂肪是良好的绝热体，能够<strong>保温</strong>。</li>
<li>脂肪具有<strong>缓冲减压</strong>作用，能够保护内脏器官。</li>
</ol></li>
<li><p>磷脂：</p>
<ol type="1">
<li>组成成分：<strong>C、H、O、P</strong>，有的含有<strong>N</strong>。</li>
<li>磷脂是<strong>构成细胞膜</strong>的重要成分，也是<strong>构成多种细胞器膜</strong>的重要成分。</li>
</ol></li>
<li><p>固醇：</p>
<ol type="1">
<li>固醇类物质包括胆固醇、性激素和维生素 D 等。</li>
<li>胆固醇是<strong>构成动物细胞膜</strong>的重要成分，也在人体中参与<strong>血液中脂质运输</strong>。</li>
<li>性激素能促进人和动物<strong>生殖器官的发育以及生殖细胞的形成</strong>。</li>
<li>维生素 D 能有效促进人和动物<strong>肠道对钙磷的吸收</strong>。</li>
</ol></li>
</ol>
<blockquote>
<h3 id="脂质和糖类的联系与区别">脂质和糖类的联系与区别：</h3>
<ol type="1">
<li>脂质<strong>氢含量</strong>更高，氧的含量远低于糖，可以<strong>储存更多能量</strong>。</li>
<li>细胞中的糖类和脂质是<strong>可以相互转换</strong>的。血液中葡萄糖除供细胞能量以外，多余部分可以合成糖原存储，如果还有富余，则会转换为脂肪和某些氨基酸。</li>
<li>糖类在供应充足时候可以<strong>大量转换</strong>为脂肪，但是脂肪一般情况下只有在<strong>糖类代谢障碍</strong>时候才能够分解供能，而且<strong>不能大量转换</strong>。</li>
</ol>
</blockquote>
<h3 id="五蛋白质是生命活动的主要承担者">五、蛋白质是生命活动的主要承担者</h3>
<p>​ 氨基酸（结构简式<span class="math inline">$\chemfig{CH(-[2,.5]R)(-[0,.5]COOH)(-[4,.5]H_2N)}$</span>）是组成蛋白质的基本单位，基本元素组成为
C、H、O、N，少部分含有 S、P。人体中，氨基酸共有 21
种，分为必需氨基酸和非必需氨基酸（人体可以自体合成）。</p>
<p>​
蛋白质是由氨基酸脱水缩合形成多肽，多肽折叠弯曲形成空间结构后，由一个或多个氨基酸构成的有机物，是生命活动的主要承担者。蛋白质的主要作用有<strong>组成细胞结构、催化、运输、信息传递、防御</strong>，具体分工如下：</p>
<ol type="1">
<li>组成细胞和生物体结构的重要物质，称为结构蛋白。</li>
<li>调节机体的生命活动，如胰岛素。</li>
<li>为细胞中的化学反应提供催化效果，如酶。</li>
<li>具有运输功能，如血红蛋白运输。</li>
<li>具有免疫、机体防御功能，如抗体蛋白。</li>
<li>具有接收传递信息作用，如膜蛋白。</li>
<li>具有运动的作用，如肌动蛋白。</li>
<li>具有调节控制细胞生长的作用，如阻遏蛋白。</li>
</ol>
<p>​
蛋白质具有多样性，源于<strong>氨基酸的种类</strong>的多样性、<strong>氨基酸的排列顺序</strong>的多样性、肽链的盘曲折叠形成的<strong>空间结构</strong>的多样性。</p>
<p>​
在强烈的生物、物理或化学影响下，蛋白质会发生变性，如强酸强碱、重金属离子、某些弱酸、尿素、酒精、丙酮等（化学因素）；加热（70~100）、剧烈振荡、搅拌、超声波、强磁、紫外照射、X
射线（物理因素）……</p>
<blockquote>
<h3 id="与蛋白质合成水解相关的计算">与蛋白质合成水解相关的计算</h3>
<p>​ 如果肽链之间形成了二硫键（<span class="math inline"> − <em>S</em> − <em>S</em>−</span>），那么蛋白质的相对分子质量是<span class="math inline"><em>n</em><em>a</em> − 18(<em>n</em>−<em>m</em>) − 2<em>k</em></span>，其中<span class="math inline"><em>k</em></span>是二硫键数目。</p>
<table>
<colgroup>
<col style="width: 15%">
<col style="width: 15%">
<col style="width: 18%">
<col style="width: 13%">
<col style="width: 13%">
<col style="width: 24%">
</colgroup>
<thead>
<tr class="header">
<th>形成肽链数</th>
<th>形成肽键数</th>
<th>脱去水分子数</th>
<th>氨基数目</th>
<th>羧基数目</th>
<th>多肽相对分子质量</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><span class="math inline">1</span></td>
<td><span class="math inline"><em>n</em> − 1</span></td>
<td><span class="math inline"><em>n</em> − 1</span></td>
<td>至少<span class="math inline">1</span>个</td>
<td>至少<span class="math inline">1</span>个</td>
<td><span class="math inline"><em>n</em><em>a</em> − 18(<em>n</em>−1)</span></td>
</tr>
<tr class="even">
<td><span class="math inline"><em>m</em></span></td>
<td><span class="math inline"><em>n</em> − <em>m</em></span></td>
<td><span class="math inline"><em>n</em> − <em>m</em></span></td>
<td>至少<span class="math inline"><em>m</em></span>个</td>
<td>至少<span class="math inline"><em>m</em></span>个</td>
<td><span class="math inline"><em>n</em><em>a</em> − 18(<em>n</em>−<em>m</em>)</span></td>
</tr>
</tbody>
</table>
</blockquote>
<blockquote>
<h3 id="形成肽键种类数的计算">形成肽键种类数的计算</h3>
<ol type="1">
<li><p>有<span class="math inline"><em>n</em></span>种数目无限多的氨基酸，形成<span class="math inline"><em>m</em></span>肽的<strong>种类是<span class="math inline"><em>n</em><sup><em>m</em></sup></span></strong>。</p></li>
<li><p>有<span class="math inline"><em>n</em></span>种每种一条的氨基酸，形成<span class="math inline"><em>m</em>(<em>m</em>≤<em>n</em>)</span>肽的<strong>种类为<span class="math inline"><em>C</em><sub><em>n</em></sub><sup><em>m</em></sup></span></strong>。</p></li>
</ol>
</blockquote>
<blockquote>
<h3 id="计算肽链中某一种氨基酸数量的分析思路">计算肽链中某一种氨基酸数量的分析思路</h3>
<p>​
第一步，分析各种氨基酸中间<strong>特殊原子数目</strong>（如<strong>S、Fe、Zn</strong>……）。有些元素<strong>只有一种氨基酸</strong>含有，那么这种<strong>氨基酸数目就等于原子数</strong>。</p>
<p>​ 第二步，观察各基团中<strong>C、H、O、N
的数目</strong>，列方程组。</p>
</blockquote>
<h3 id="六核酸是遗传信息的携带者">六、核酸是遗传信息的携带者</h3>
<p>​
核酸包括两大类，<strong>脱氧核糖核酸（DNA）、核糖核酸（RNA）</strong>。<strong>核苷酸</strong>是核酸的<strong>基本单位</strong>，由一分子五碳糖、一分子磷酸和一分子含氮碱基构成。巨量的核苷酸连接成核酸分子。</p>
<p>​ 构成核苷酸的碱基共有五种，胸腺嘧啶（Thymine - DNA）、尿嘧啶（Uracil
- RNA）、腺嘌呤（Adenine）、鸟嘌呤（Guanine）、胞嘧啶（Cytosine）。</p>
<p>​
<strong>核酸是细胞内携带遗传信息的物质，在生物体的遗传变异以及蛋白质的生物合成中具有极其重要的作用</strong>。<strong>真核细胞</strong>的<strong>DNA</strong>主要分布在<strong>细胞核</strong>中，<strong>叶绿体、线粒体</strong>也有少量。<strong>RNA</strong>则主要分布于<strong>细质</strong>中。</p>
<p>​ DNA 一般是<strong>两条脱氧核苷酸链</strong>构成，RNA
一般是<strong>一条核糖核苷酸链</strong>构成。</p>
<blockquote>
<h3 id="通过生物体碱基核苷酸五碳糖数量判断生物体种类">通过生物体碱基、核苷酸、五碳糖数量判断生物体种类</h3>
<table>
<colgroup>
<col style="width: 9%">
<col style="width: 13%">
<col style="width: 10%">
<col style="width: 11%">
<col style="width: 9%">
<col style="width: 11%">
<col style="width: 9%">
<col style="width: 26%">
</colgroup>
<thead>
<tr class="header">
<th>生物类型</th>
<th>是否细胞生物</th>
<th>核酸种类</th>
<th>核苷酸种类</th>
<th>碱基种类</th>
<th>五碳糖种类</th>
<th>遗传物质</th>
<th>例</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>原核生物</td>
<td>细胞生物</td>
<td>DNA +RNA</td>
<td>8</td>
<td>5</td>
<td>2</td>
<td>DNA</td>
<td>细菌、蓝细菌</td>
</tr>
<tr class="even">
<td>真核生物</td>
<td>细胞生物</td>
<td>DNA + RNA</td>
<td>8</td>
<td>5</td>
<td>2</td>
<td>DNA</td>
<td>动植物</td>
</tr>
<tr class="odd">
<td>DNA 病毒</td>
<td>非细胞生物</td>
<td>DNA</td>
<td>4</td>
<td>4</td>
<td>1</td>
<td>DNA</td>
<td>T2 噬菌体</td>
</tr>
<tr class="even">
<td>RNA 病毒</td>
<td>非细胞生物</td>
<td>RNA</td>
<td>4</td>
<td>4</td>
<td>1</td>
<td>RNA</td>
<td>HIV、烟草花叶病毒、SARS</td>
</tr>
</tbody>
</table>
</blockquote>
<blockquote>
<h4 id="碳链骨架">碳链骨架</h4>
<p>​
生物大分子——多糖、蛋白质、核酸，都有各自的<strong>基本单位</strong>，称为<strong>单体</strong>。大分子本身是由许多单体连接成，称为<strong>多聚体</strong>。</p>
<p>​
每一个单体都以若干个碳原子构成的<strong>碳链为基本骨架</strong>，生物大分子也<strong>以碳链为基本骨架</strong>。</p>
</blockquote>
</read></return>]]></content>
      <categories>
        <category>High School</category>
        <category>Biology</category>
        <category>Cell Biology</category>
      </categories>
      <tags>
        <tag>School Notes</tag>
        <tag>High School</tag>
        <tag>Biology</tag>
      </tags>
  </entry>
  <entry>
    <title>Cell-Biology</title>
    <url>/2022/02/22/biology/High%20School/b1%20cell%20biology/index/</url>
    <content><![CDATA[<h2 id="模块一-分子与细胞">模块一 分子与细胞</h2>
<p>​
本模块包括细胞的分子组成、细胞的结构、细胞的代谢、细胞的增殖以及细胞的分化、衰老和死亡等内容，组织在两大概念中，即生物体结构与生命活动的基本单位、细胞的生存需要能量和营养物质，并通过分裂实现增殖。本模块要求从细胞水平（细胞为独立个体下）、亚细胞水平（细胞器等细胞组成部分为独立个体下）、分子水平认识生命的本质，获得如下认知：生命的物质性与生物界的统一性、生命活动的运行是物质、能量和信息变化的统一，是细胞结构与功能的统一，细胞会经历生长、增殖、分化、衰老和死亡等生命历程。</p>
<span id="more"></span>
<h3 id="序言">序言</h3>
<p>本模块包括细胞的分子组成、细胞的结构、细胞的代谢、细胞的增殖以及细胞的分化、衰老和死亡等内容。</p>
<p>细胞是生物体结构与生命活动的基本单位。细胞生物学是生命科学的重要基础学科，分子生物学的发展促使细胞生物学的研究进入了分子水平。</p>
<p>本模块选取了细胞生物学方面最基本的知识，是学习其他模块的基础。它还反映了细胞生物学研究的新进展及相关的实际应用。通过本模块的学习，学生将在微观层面上，更深入地理解生命的本质。了解生命的物质性和生物界的统一性，细胞生命活动中物质、能量和信息变化的统一，细胞结构与功能的统一，生物体部分和整体的统一等，有助于科学自然观的形成。学习细胞的发现、细胞学说的建立和发展，有助于学生加深对科学研究过程和本质的理解。</p>
<h3 id="目录">目录</h3>
<pre class="template:contents"><code></code></pre>
<h3 id="探究实践">探究·实践</h3>
<pre class="template:experiment"><code>[
    ["使用高倍显微镜观察几种细胞", "[[High School, Biology, Cell Biology], 细胞及其组成]", "1.2"], 
    ["检测生物组织中的糖类、脂肪和蛋白质", "[[High School, Biology, Cell Biology], 组成细胞的分子]", "2.1"], 
    ["用高倍显微镜观察叶绿体和细胞质的流动", "[[High School, Biology, Cell Biology], 细胞的基本结构]", "3.2"], 
    ["尝试制作真核细胞的三维结构模型", "[[High School, Biology, Cell Biology], 细胞的基本结构]", "3.3"], 
    ["探究植物细胞的吸水与失水", "[[High School, Biology, Cell Biology], 细胞的物质输入和输出]", "4.1"], 
    ["比较过氧化氢在不同条件下的分解", "[[High School, Biology, Cell Biology], 细胞的能量供应与利用]", "5.1"], 
    ["淀粉酶对淀粉和蔗糖的水解作用", "[[High School, Biology, Cell Biology], 细胞的能量供应与利用]", "5.1"], 
    ["影响酶活性的条件", "[[High School, Biology, Cell Biology], 细胞的能量供应与利用]", "5.1"], 
    ["探究酵母菌细胞呼吸的方式", "[[High School, Biology, Cell Biology], 细胞的能量供应与利用]", "5.3"], 
    ["绿叶中色素的提取与分离", "[[High School, Biology, Cell Biology], 细胞的能量供应与利用]", "5.4"], 
    ["探究环境因素对光合作用强度的影响", "[[High School, Biology, Cell Biology], 细胞的能量供应与利用]", "5.4"], 
    ["观察根尖分生区组织细胞的有丝分裂", "[[High School, Biology, Cell Biology], 细胞的生命历程]", "6.1"]
]</code></pre>
<table>
<thead>
<tr class="header">
<th>标题</th>
<th>课本</th>
<th>章节</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>使用高倍显微镜观察几种细胞</td>
<td>必修一 分子与细胞</td>
<td>1.2</td>
</tr>
<tr class="even">
<td>检测生物组织中的糖类、脂肪和蛋白质</td>
<td>必修一 分子与细胞</td>
<td>2.1</td>
</tr>
<tr class="odd">
<td>用高倍显微镜观察叶绿体和细胞质的流动</td>
<td>必修一 分子与细胞</td>
<td>3.2</td>
</tr>
<tr class="even">
<td>尝试制作真核细胞的三维结构模型</td>
<td>必修一 分子与细胞</td>
<td>3.3</td>
</tr>
<tr class="odd">
<td>探究植物细胞的吸水与失水</td>
<td>必修一 分子与细胞</td>
<td>4.1</td>
</tr>
<tr class="even">
<td>比较过氧化氢在不同条件下的分解</td>
<td>必修一 分子与细胞</td>
<td>5.1</td>
</tr>
<tr class="odd">
<td>淀粉酶对淀粉和蔗糖的水解作用</td>
<td>必修一 分子与细胞</td>
<td>5.1</td>
</tr>
<tr class="even">
<td>影响酶活性的条件</td>
<td>必修一 分子与细胞</td>
<td>5.1</td>
</tr>
<tr class="odd">
<td>探究酵母菌细胞呼吸的方式</td>
<td>必修一 分子与细胞</td>
<td>5.3</td>
</tr>
<tr class="even">
<td>绿叶中色素的提取与分离</td>
<td>必修一 分子与细胞</td>
<td>5.4</td>
</tr>
<tr class="odd">
<td>探究环境因素对光合作用强度的影响</td>
<td>必修一 分子与细胞</td>
<td>5.4</td>
</tr>
<tr class="even">
<td>观察根尖分生区组织细胞的有丝分裂</td>
<td>必修一 分子与细胞</td>
<td>6.1</td>
</tr>
</tbody>
</table>]]></content>
      <categories>
        <category>High School</category>
        <category>Biology</category>
        <category>Cell Biology</category>
      </categories>
      <tags>
        <tag>School Notes</tag>
        <tag>High School</tag>
        <tag>Biology</tag>
      </tags>
  </entry>
  <entry>
    <title>细胞及其组成</title>
    <url>/2022/02/22/biology/High%20School/b1%20cell%20biology/P1%20%E7%BB%86%E8%83%9E%E5%8F%8A%E5%85%B6%E7%BB%84%E6%88%90/</url>
    <content><![CDATA[<h2 id="课程标准">课程标准</h2>
<h4 id="各种细胞具有相似的基本结构但在形态与功能上有所差异">1.3
各种细胞具有相似的基本结构，但在形态与功能上有所差异</h4>
<p>1.3.1
说明有些生物体只有一个细胞，而有的由很多细胞构成，这些细胞形态和功能多样，但都具有相似的基本结构。</p>
<p>1.3.2
描述原核细胞与真核细胞的最大区别是原核细胞没有由核膜包被的细胞核。</p>
<span id="more"></span>
<h3 id="教学活动要求">教学活动要求</h3>
<ol type="1">
<li><p>尝试制作真核细胞的结构模型；</p></li>
<li><p>使用光学显微镜观察各种细胞，可结合电镜照片分析细胞的亚显微结构；</p></li>
</ol>
<h3 id="学业要求">学业要求</h3>
<p>​
观察多种多样的细胞，说明这些细胞具有多种形态和功能，但同时又都具有相似的基本结构（生命观念、科学探究）。</p>
<h3 id="内容说明">内容说明</h3>
<h4 id="各类细胞的多样性和统一性">各类细胞的多样性和统一性</h4>
<p>​
在学习细胞结构的整体性的基础上，通过光学显微镜刮搽单细胞生物体、简单多细胞生物体和高等动植物的各类组织，认识细胞形态、结构和功能的多样性和统一性；通过相关显微图片的观察和分析，认识原核细胞和真核细胞的异同，认识细胞的发展。</p>
<h2 id="知识聚焦">知识聚焦</h2>
<h3 id="一细胞学说">一、细胞学说</h3>
<h4 id="细胞学说的建立及其内容">1. 细胞学说的建立及其内容</h4>
<p>​
细胞学说的建立：植物学家施莱登、动物学家施旺相应发表细胞学说，并由德国的魏尔肖补充细胞的产生。</p>
<ol type="1">
<li>细胞是一个<strong>有机体</strong>，一切<strong>动植物都由细胞发育</strong>而来，并由<strong>细胞和细胞产物</strong>所构成。</li>
<li>细胞是一个<strong>相对独立的单位</strong>，既<strong>有它自己的生命</strong>，又对与其他细胞共同组成的<strong>整体生命起作用</strong>。</li>
<li>新细胞是由<strong>老细胞分裂</strong>而成。</li>
</ol>
<blockquote>
<p>#### 发展历程</p>
<ol type="1">
<li><p>1543
年，比利时的<strong>维萨里</strong>解剖大量尸体发布《人体构造》，揭示了人体在<strong>器官水平</strong>的结构。</p></li>
<li><p>1801
年，法国的<strong>比夏</strong>经过对器官的解剖观察，指出器官由低一层次的结构<strong>组织</strong>构成。</p></li>
<li><p>1665
年，英国的<strong>胡克</strong>用显微镜观察植物的木栓结构，发现由规则的小室构成。他临摹了下来，并称之为<strong>细胞</strong>。</p></li>
<li><p>荷兰的<strong>列文虎克</strong>用自制显微镜观察了不同形态的细菌、红细胞和精子等。</p></li>
<li><p>意大利的<strong>马尔比基</strong>用显微镜观察了动植物的精细结构，如细胞壁和细胞质。</p></li>
<li><p>德国的<strong>施莱登</strong>观察花粉、胚珠和柱头组织，发现都是<strong>由细胞组成</strong>，细胞中<strong>都有细胞核</strong>。他以此为依据进行了理论归纳提出<strong>植物的</strong>细胞理论学说。</p></li>
<li><p>德国的<strong>施旺</strong>研究了动物细胞的形成机理和个体发育，提出<strong>动物的</strong>细胞理论学说。</p></li>
<li><p><strong>耐克里</strong>观察了植物分生区，发现新细胞是旧细胞分裂而成。</p></li>
<li><p>1858
年，德国的<strong>魏尔肖</strong>总结“细胞通过<strong>分裂产生新细胞</strong>”。</p></li>
</ol>
</blockquote>
<h4 id="细胞学说的意义">2. 细胞学说的意义</h4>
<ol type="1">
<li>细胞学说确立了“<strong>细胞是生物体结构功能基本单位</strong>”这一观点，让<strong>动植物在组成结构</strong>上实现了统一，从而阐明了<strong>生物界的统一性</strong>。</li>
<li>细胞学说揭示了<strong>个体发育</strong>，为<strong>生物统一起源</strong>提供了有力证据，为<strong>生物进化理论</strong>提供了依据，奠定了<strong>生物进化论以及分子水平的理论</strong>，推进了人类对整个大自然的认知，促进了<strong>自然科学和哲学的融合进步</strong>。</li>
<li>细胞学说开辟了<strong>生物学科研究领域</strong>，推动<strong>细胞生物学形成为独立科学</strong>，推动<strong>显微技术和实验技术的进步</strong>。</li>
<li>细胞学说使生物科学转折，由<strong>博物学转变为现代生物学</strong>，并为多种生物学分支提供<strong>共同基础</strong>。</li>
</ol>
<blockquote>
<p>### 归纳与演绎</p>
<p><strong>归纳</strong>法：由一系列具体事实推出一般结论的思维方式。</p>
<p><strong>演绎</strong>法：由一般结论到个别事例的推理方法。</p>
<p><strong>假说演绎</strong>法：提出假说；由假说推出一些结论；设计实验，验证结论（应用：<strong>孟德尔遗传定律</strong>、<strong>DNA
半保留复制原理</strong>）。</p>
</blockquote>
<h2 id="二细胞与生命系统">二、细胞与生命系统</h2>
<h4 id="细胞与生命系统">1. 细胞与生命系统</h4>
<p>细胞是一个由各种组分相互配合而组成的复杂系统，有生命的一个生命系统。</p>
<ol type="1">
<li><strong>病毒的生命活动必须依赖活细胞</strong>。</li>
<li>单细胞的<strong>一个细胞就是一个生物体</strong>，各项生命活动都由单个细胞完成。</li>
<li>多细胞生命活动需要依赖各种高度分化细胞共同完成。
<ol type="1">
<li><strong>生命活动</strong>都以<strong>细胞代谢</strong>为基础。</li>
<li><strong>生长发育</strong>都以<strong>细胞增殖分化</strong>为基础。</li>
<li><strong>遗传变异</strong>都以<strong>细胞基因传递变化</strong>为基础。</li>
</ol></li>
<li><strong>结构和功能</strong>上，细胞属于最基本的生命系统。</li>
<li><strong>物质基础</strong>上，都有蛋白质与核酸。</li>
<li>多细胞生物体中，细胞是构成组织的组分，组织是构成器官的组分，器官是构成个体的组分。</li>
<li>细胞 ⇒ 组织 ⇒ 器官 ⇒ 系统 ⇒ 个体 ⇒ 种群 ⇒ 群落 ⇒ 生态系统 ⇒ 生物圈。
<ol type="1">
<li><strong>系统</strong>是<strong>动物专有</strong>的。</li>
<li><strong>生态系统和生物圈都包含无机环境</strong>。</li>
<li>个体 → 群落是<strong>生物与生物</strong>间的关系，群落 →
生物圈是<strong>生物与环境</strong>之间的关系。</li>
</ol></li>
</ol>
<h4 id="细胞的分类">2. 细胞的分类</h4>
<p>​
<strong>真核细胞</strong>与<strong>原核细胞</strong>是细胞的两种类别，区分依据为<strong>有无以核膜为界限的细胞核</strong>。它们不仅表现了细胞的统一性（共有结构、物质），也表现出了细胞的多样性（更多种细胞器、染色体染色质等不同物质、尺寸差异……）。</p>
<p>​
真核细胞与原核细胞分别构成<strong>真核生物</strong>（动植物、真菌）与<strong>原核生物</strong>（细菌）。我们也根据它们获取营养物质的方式，将它们分为<strong>异养生物</strong>（捕食、腐生和寄生）与<strong>自养生物</strong>能进行光合作用）。</p>
<h3 id="三探究实践使用高倍显微镜观察几种细胞-exp-使用高倍显微镜观察几种细胞">三、探究实践：使用高倍显微镜观察几种细胞
| #exp-使用高倍显微镜观察几种细胞</h3>
<h4 id="光学显微镜的组成部分">1. 光学显微镜的组成部分</h4>
<ol type="1">
<li><p>镜头：放大成像。</p>
<ol type="1">
<li>目镜：目镜越长放大倍数越小。</li>
<li>物镜：物镜越长放大倍数越大。</li>
</ol></li>
<li><p>反光镜：反射光线。</p>
<ol type="1">
<li>平面镜：反光能力弱，用于<strong>光线较强</strong>时。</li>
<li>凹面镜：反光能力强，用于<strong>光线较弱</strong>时。</li>
</ol></li>
<li><p>准焦螺旋：使镜筒上升或下降 。</p>
<ol type="1">
<li>粗准焦螺旋：调整<strong>幅度大</strong>。</li>
<li>细准焦螺旋：调整<strong>幅度小</strong>。</li>
</ol></li>
<li><p>转换器：<strong>转换物镜</strong>。</p></li>
<li><p>遮光器：<strong>调节视野亮度</strong>。</p></li>
</ol>
<h4 id="光学显微镜的使用方法">2. 光学显微镜的使用方法：</h4>
<ol type="1">
<li>找：<strong>低倍镜</strong>找到要观察的物像。</li>
<li>移：移动物像到<strong>视野中央</strong>。</li>
<li>转：转动<strong>转换器</strong>，更换为高倍镜。</li>
<li>调：转动<strong>遮光器</strong>换大光圈（高倍镜下光线较弱）；转动<strong>细准焦螺旋</strong>调节。</li>
</ol>
<blockquote>
<h4 id="光学显微镜操作要点">光学显微镜操作要点</h4>
<ol type="1">
<li>高倍镜要调节反光镜与光圈以增大视野亮度。</li>
<li>低倍镜下物像要先移动到视野中央。</li>
<li>低倍镜转换到高倍镜后，调节焦距不能转动粗准焦螺旋。</li>
</ol>
</blockquote>
<blockquote>
<p>### 光学显微镜放大倍数</p>
<ol type="1">
<li><p>目镜<strong>无螺纹</strong>，越长放大倍数越小。</p></li>
<li><p>物镜<strong>有螺纹</strong>，越长放大倍数越大，与装片距离越短。</p></li>
<li><p>放大倍数 = 目镜倍数 × 物镜倍数。</p></li>
</ol>
</blockquote>
<h4 id="二材料与实验步骤">二、材料与实验步骤</h4>
<p>​
材料选择：常见、容易操作且成本低，便于观察的材料。为了制取观察装片，我们需要按照如下步骤进行操作：</p>
<h5 id="真菌与单细胞藻类">真菌与单细胞藻类</h5>
<ol type="1">
<li>载玻片中央滴一滴培养液。</li>
<li>制作临时装片。</li>
</ol>
<h5 id="多细胞植物">多细胞植物</h5>
<ol type="1">
<li>载玻片中央滴一滴清水。
<ol type="1">
<li>菠菜：下表皮用刀片划一个小口，沿着小口用镊子撕下一小块表皮，浸入水滴中，用镊子展开。</li>
<li>水绵：用镊子挑取少许，放入清水中，轻轻分开到能看见单条为止。</li>
</ol></li>
<li>制成临时装片。</li>
</ol>
<h5 id="单细胞动物草履虫">单细胞动物（草履虫）</h5>
<ol type="1">
<li>可直接滴培养液至载玻片。</li>
<li>制成临时装片。</li>
<li>也可以放少许棉花丝，用滤纸吸去多余水分，以减缓草履虫的运动。</li>
</ol>
<h5 id="多细胞动物">多细胞动物</h5>
<h6 id="口腔上皮细胞">口腔上皮细胞</h6>
<ol type="1">
<li>载玻片中央滴一滴生理盐水。</li>
<li>漱口后用消毒牙签在口腔内侧壁上轻刮几下。</li>
<li>将牙签有碎屑一端放入生理盐水中，轻涂几下。</li>
<li>制成临时装片。</li>
<li>滴少许稀碘液，用滤纸在另一侧吸取水分。</li>
</ol>
<h6 id="鸡血细胞">鸡血细胞</h6>
<ol type="1">
<li>获取鸡血后，先用抗凝剂（草酸盐）处理。</li>
<li>使用生理盐水稀释鸡血溶液。</li>
<li>载玻片中央滴一滴稀释后溶液。</li>
<li>制成临时装片。</li>
</ol>
<blockquote>
<p>##### 注意事项：</p>
<ol type="1">
<li>实验材料尽可能<strong>涉及多种生物类群</strong>，保证观察的细胞的多样性。</li>
<li>选择永久装片时，避免选用细胞种类多、情况复杂的组织切片。</li>
</ol>
</blockquote>]]></content>
      <categories>
        <category>High School</category>
        <category>Biology</category>
        <category>Cell Biology</category>
      </categories>
      <tags>
        <tag>School Notes</tag>
        <tag>High School</tag>
        <tag>Biology</tag>
      </tags>
  </entry>
  <entry>
    <title>遗传因子、基因与染色体的关系</title>
    <url>/2022/02/22/biology/High%20School/b2%20genetics/P1%20%E9%81%97%E4%BC%A0%E5%9B%A0%E5%AD%90%E3%80%81%E5%9F%BA%E5%9B%A0%E4%B8%8E%E6%9F%93%E8%89%B2%E4%BD%93%E7%9A%84%E5%85%B3%E7%B3%BB/</url>
    <content><![CDATA[Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
<h2 id="课程标准">课程标准</h2>
<h4 id="有性生殖中基因的分离和重组导致双亲后代的基因组合有多种可能">3.2
有性生殖中基因的分离和重组导致双亲后代的基因组合有多种可能</h4>
<p>3.2.1 阐明减数分裂产生染色体数量减半的精细胞或卵细胞</p>
<p>3.2.2 说明进行有性生殖的生物体，其遗传信息通过配子传递给子代</p>
<p>3.2.3
阐明有性生殖中基因的分离和自由组合使得子代的基因型和表型有多种可能，并可由此预测子代的遗传性状</p>
<p>3.2.4 概述性染色体上的基因传递和性别相关联</p>
<span id="more"></span>
<h3 id="教学活动要求">教学活动要求</h3>
<ol type="1">
<li>运用模型、装片或视频观察模拟减数分裂过程中染色体的变化；</li>
<li>模拟植物或动物性状分离的杂交实验；</li>
</ol>
<h3 id="学业要求">学业要求</h3>
<p>​
观察处于细胞周期不同阶段的细胞，结合有丝分裂模型，描述细胞增殖的主要特征，并举例说明细胞的分化、衰老、死亡等生命现象（生命观念、科学探究、社会责任）。</p>
<h3 id="内容说明">内容说明</h3>
<h4 id="遗传的细胞基础">遗传的细胞基础</h4>
<ol type="1">
<li>阐述精子（雄配子）或卵细胞（雌配子）形成过程中发生的减数分裂，运用图示、物质模型或视频等方式，观察模拟减数分裂过程中，同源染色体间的交叉互换、同源染色体分离和非同源染色体间的自由组合等现象，由此形成的精子和卵细胞不但染色体数量减半，而且染色体的组合类型呈现出多样性。</li>
<li>简述受精作用的过程，说明进行有性生殖的生物体其遗传信息是通过配子传递给子代的；精子和卵细胞的多样性与结合的随机性，只是同一双亲的后代既相似又不同，是遗传和变异的细胞基础。</li>
</ol>
<h4 id="遗传的基本规律">遗传的基本规律</h4>
<ol type="1">
<li>通过介绍孟德尔豌豆杂交实验，阐明孟德尔发现遗传定律的实验依据，据此作出的解释性假设及推测和验证的方法，以及最终得出的结论。</li>
<li>用性状的杂交实验，以及基因的分离和自由组合规律，由亲代的性状预测子代的性状。</li>
<li>以人类红绿色盲或血友病的研究为例，分析位于性染色体上的基因，在遗传上总是和性别相关联，概括出伴性遗传的概念。</li>
<li>举例说明伴性遗传的类型和遗传特点及在实践中的应用。</li>
</ol>
<h2 id="知识聚焦">知识聚焦</h2>
<h3 id="一遗传的基本规律">一、遗传的基本规律</h3>
<h4 id="性状与各种实验名词">1. 性状与各种实验名词</h4>
<blockquote>
<h4 id="发现背景及实验材料优点">发现背景及实验材料优点</h4>
<p>​
融合遗传（双亲遗传物质在子代体内发生混合，使子代表现出介于双亲之间的性状）是
19
世纪下半叶盛行的观点，孟德尔在修道院一块园地进行杂交实验多年提出了完全不同的理论。</p>
<p>​
豌豆花是两性花，未开放时花粉会落到同一朵花的雌蕊的柱头上，完成传粉（自花传粉，也叫自交），<strong>避免外来花粉的干扰</strong>，一般自然下的豌豆都是纯种，结果可靠易于分析。</p>
<p>​
豌豆有很多易于区分的形状，如高矮茎、圆皱粒、黄绿种子、红白花、未成熟的黄绿豆荚、饱满和不饱满的豆荚、腋生和顶生的花（孟德尔挑选的
7 对相对性状）……</p>
</blockquote>
<p>​
<strong>性状</strong>指生物形态、结构和生理生化等特征的总称。一种生物的同一种性状的不同表现类型称为<strong>相对性状</strong>。</p>
<p>​
<strong>显性性状</strong>是指一个等位基因掩盖了另一等位基因的表现，所显现出来的性状，而隐性性状则是被掩盖的等位基因本该有的表现。后代中同时出现显性性状和隐性性状的现象称为<strong>性状分离</strong>。</p>
<blockquote>
<h4 id="各种实验名词">各种实验名词</h4>
<ol type="1">
<li>自交：同一个体进行交配，符号<span class="math inline">⨂</span>。</li>
<li>杂交：基因型不同的两个个体进行交配，符号<span class="math inline">×</span>。</li>
<li>正反交：两个个体杂交中的顺序，定义某一个体为母本，则以该个体为父本时是反交。</li>
<li>测交：基因型未知的个体与隐性纯合个体杂交。</li>
<li>父本：植物中提供花粉的植株。</li>
<li>母本：植物中接受花粉的植株。</li>
</ol>
</blockquote>
<h4 id="分离定律">2. 分离定律</h4>
<p>​ 孟德尔用纯种高茎豌豆和纯种矮茎豌豆作亲本（<span class="math inline"><em>P</em></span>）进行杂交，不管正反交，杂交后的子一代（<span class="math inline"><em>F</em><sub>1</sub></span>）总是高茎，子二代（<span class="math inline"><em>F</em><sub>2</sub></span>）高茎和矮茎的比例<strong>接近<span class="math inline">3 : 1</span></strong>，其他 6
对相对性状的实验结果也一致。</p>
<p>​ 在观察和统计分析的基础上，提出了孟德尔分离假说：</p>
<ol type="1">
<li>生物性状由<strong>遗传因子</strong>决定，遗传因子分为显隐性，决定显性性状的是显性遗传因子。</li>
<li>体细胞中，遗传因子是<strong>成对出现</strong>的。遗传因子相同的个体是纯合子，遗传因子不同的是杂合子。</li>
<li>生物体形成生殖细胞即配子时，成对的遗传因子<strong>彼此分离</strong>，进入不同的配子中。配子中只含有每对遗传因子中的一个。</li>
<li>受精时，雌雄配子的结合是<strong>随机</strong>的。</li>
</ol>
<p>​ 孟德尔随后设计了测交实验，让<span class="math inline"><em>F</em><sub>1</sub></span>与隐形纯合子杂交，根据假说，测交后代高茎、矮茎的比例应该为<strong><span class="math inline">1 : 1</span></strong>，实验结果也基本符合。</p>
<p>​
孟德尔关于相对性状的实验结果与解释后人将其归纳为孟德尔第一定律，也即<strong>分离定律</strong>：==生物的体细胞中，控制同一性状的遗传因子成对存在，不相融合。在形成配子时，成对的遗传因子发生分离，分离后的遗传因子分别进入不同的配子中，随配子遗传给后代==。</p>
<h4 id="探究实践性状分离比的模拟实验-exp-性状分离比的模拟实验">3.
探究实践：性状分离比的模拟实验 | #exp-性状分离比的模拟实验</h4>
<h4 id="自由组合定律">4. 自由组合定律</h4>
<p>​
在一对相对性状遗传规律的基础上，孟德尔对豌豆两对相对性状的遗传的规律进行了研究。孟德尔选用纯种黄色圆粒豌豆和纯种绿色皱粒豌豆进行杂交，无论正交还是反交，<span class="math inline"><em>F</em><sub>1</sub></span>总是黄色圆粒，表明黄、圆是显性性状，绿、皱是隐性性状。让<span class="math inline"><em>F</em><sub>1</sub></span>自交，<span class="math inline"><em>F</em><sub>2</sub></span>中，出现了四种形状（黄圆、绿圆、黄皱、绿皱，比例<strong>接近<span class="math inline">9 : 3 : 3 : 1</span></strong>），每一对相对性状的遗传都遵循了分离定律。</p>
<p>​ 孟德尔假设豌豆圆粒和皱粒由遗传因子<span class="math inline"><em>R</em>, <em>r</em></span>控制，黄色和绿色由遗传因子<span class="math inline"><em>Y</em>, <em>y</em></span>控制，<span class="math inline"><em>F</em><sub>1</sub></span>在产生配子时，不同对的遗传因子可以自由组合，这样<span class="math inline"><em>F</em><sub>1</sub></span>产生的雌雄配子就有 4
种（数量比<span class="math inline">1 : 1 : 1 : 1</span>）。受精时雌雄配子随机结合，结合方式有
16 种，遗产因子组合形式 9 种，性状表现 4 种（数量比<span class="math inline">9 : 3 : 3 : 1</span>）。</p>
<p>​ 随后孟德尔设计了测交实验，让杂种子一代<span class="math inline"><em>Y</em><em>y</em><em>R</em><em>r</em></span>与隐性纯合子<span class="math inline"><em>y</em><em>y</em><em>r</em><em>r</em></span>杂交，无论正反交性状数量比均为<span class="math inline">1 : 1 : 1 : 1</span>。</p>
<p>​
孟德尔这一遗传规律被后人称为孟德尔第二定律，也即<strong>自由组合定律</strong>：==即控制不同形状的遗传因子的分离和组合是互不干扰的；在形成配子时，决定同一性状的遗传因子彼此分离，决定不同性状的遗传因子自由组合==。</p>
<p>​ 1909
年，丹麦生物学家约翰逊给孟德尔的遗传因子起名<strong>基因</strong>，提出<strong>表型</strong>（个体表现出来的性状）和<strong>基因型</strong>（个体基因的组成）的概念，称控制相对性状的基因为<strong>等位基因</strong>。</p>
<h3 id="二有丝分裂减数分裂和受精作用">二、有丝分裂、减数分裂和受精作用</h3>
<h4 id="有丝分裂和减数分裂">1. 有丝分裂和减数分裂</h4>
<p>​
有丝分裂是指==真核细胞将其细胞核中染色体分配到两个子核之中的过程==。细胞核分裂后通常伴随着细胞质分裂，将细胞质、细胞器与细胞膜等细胞结构均等分配至子细胞中。</p>
<p>​
==减数分裂是一种特殊方式的有丝分裂==，由德国动物学家魏思曼预测（精子卵细胞成熟时染色体数目减半，受精时染色体数目恢复正常）。</p>
<table>
<colgroup>
<col style="width: 5%">
<col style="width: 40%">
<col style="width: 40%">
<col style="width: 14%">
</colgroup>
<thead>
<tr class="header">
<th>时期</th>
<th>有丝分裂</th>
<th>减数分裂</th>
<th></th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><span class="math inline"><em>G</em><sub>1</sub></span></td>
<td><img src="https://raw.githubusercontent.com/PassionPenguin/picgo-database/main/image-20220227160907587.png" alt="image-20220227160907587" style="zoom:50%;"><br>处于细胞生长期，合成细胞生长所需的蛋白质、糖类、脂质，不合成
DNA</td>
<td></td>
<td><span class="math inline"><em>G</em><sub>1</sub></span></td>
</tr>
<tr class="even">
<td><span class="math inline"><em>S</em></span></td>
<td><img src="https://raw.githubusercontent.com/PassionPenguin/picgo-database/main/image-20220227160619094.png" alt="image-20220227160619094" style="zoom:50%;"><br>处于
DNA 合成期，复制 DNA 并合成组蛋白</td>
<td></td>
<td><span class="math inline"><em>S</em></span></td>
</tr>
<tr class="odd">
<td><span class="math inline"><em>G</em><sub>2</sub></span></td>
<td><img src="https://raw.githubusercontent.com/PassionPenguin/picgo-database/main/image-20220227160639940.png" alt="image-20220227160639940" style="zoom:50%;"><br>确认相关条件符合需求（如细胞尺寸、环境因素、DNA
是否完全复制）</td>
<td></td>
<td><span class="math inline"><em>G</em><sub>2</sub></span></td>
</tr>
<tr class="even">
<td>前期</td>
<td><img src="https://raw.githubusercontent.com/PassionPenguin/picgo-database/main/image-20220227160710243.png" alt="image-20220227160710243" style="zoom:50%;"><br>前期是有丝分裂的开始阶段，染色体凝缩、确立细胞分裂极并装配纺锤体<br>动物细胞依赖于中心体的建立，高等植物细胞也要装配无星纺锤体</td>
<td><img src="https://raw.githubusercontent.com/PassionPenguin/picgo-database/main/image-20220227162728329.png" alt="image-20220227162728329" style="zoom:50%;"><img src="https://raw.githubusercontent.com/PassionPenguin/picgo-database/main/image-20220227162816397.png" alt="image-20220227162816397" style="zoom:50%;"><br>减一前期发生==同源染色体联会配对形成<strong>四分体</strong>==，伴随发生==同源染色体非姐妹染色单体之间的重组交换==</td>
<td>减一前期</td>
</tr>
<tr class="odd">
<td>前中期</td>
<td><img src="https://raw.githubusercontent.com/PassionPenguin/picgo-database/main/image-20220227160726756.png" alt="image-20220227160726756" style="zoom:50%;"><br>前中期的标志是核膜的崩解、纺锤体的装配完成和染色体的整列</td>
<td></td>
<td></td>
</tr>
<tr class="even">
<td>中期</td>
<td><img src="https://raw.githubusercontent.com/PassionPenguin/picgo-database/main/image-20220227160746379.png" alt="image-20220227160746379" style="zoom:50%;"><br>中期的标志是染色体整列完成，并且所有染色体排列到赤道面上</td>
<td><img src="https://raw.githubusercontent.com/PassionPenguin/picgo-database/main/image-20220227162805883.png" alt="image-20220227162805883" style="zoom:50%;"><br>与有丝分裂一致，核膜的破裂是减一中期的开始，纺锤体捕获四分体，使之最终排列到赤道面上。</td>
<td>减一中期</td>
</tr>
<tr class="odd">
<td>后期</td>
<td><img src="https://raw.githubusercontent.com/PassionPenguin/picgo-database/main/image-20220227160805770.png" alt="image-20220227160805770" style="zoom:50%;"><br>后期的标志是整列的两条姐妹染色单体分离，向两极运动。</td>
<td><img src="https://raw.githubusercontent.com/PassionPenguin/picgo-database/main/image-20220227162920445.png" alt="image-20220227162920445" style="zoom:50%;"><br>同源染色体对分离并向两极移动标志减一后期的开始。</td>
<td>减一后期</td>
</tr>
<tr class="even">
<td>末期</td>
<td><img src="https://raw.githubusercontent.com/PassionPenguin/picgo-database/main/image-20220227160814196.png" alt="image-20220227160814196" style="zoom:50%;"><br>末期的标志是姐妹染色单体分离到达两极，重新组装核膜形成两个子细胞核</td>
<td>减一末期有两种情况：<br>1. 直接进入减数第二次分裂<br>2.
重新组装核膜，形成两个子细胞核，并分裂细胞质，形成两个间期子细胞，处于减数分裂间期</td>
<td>减一末期<br>胞质分裂</td>
</tr>
<tr class="odd">
<td></td>
<td></td>
<td></td>
<td>减二前期</td>
</tr>
<tr class="even">
<td></td>
<td></td>
<td><img src="https://raw.githubusercontent.com/PassionPenguin/picgo-database/main/image-20220227162941928.png" alt="image-20220227162941928" style="zoom:50%;"><img src="https://raw.githubusercontent.com/PassionPenguin/picgo-database/main/image-20220227162951558.png" alt="image-20220227162951558" style="zoom:50%;"></td>
<td>减二中期</td>
</tr>
<tr class="odd">
<td></td>
<td></td>
<td><img src="https://raw.githubusercontent.com/PassionPenguin/picgo-database/main/image-20220227163009737.png" alt="image-20220227163009737" style="zoom:50%;"><img src="https://raw.githubusercontent.com/PassionPenguin/picgo-database/main/image-20220227163002164.png" alt="image-20220227163002164" style="zoom:50%;"></td>
<td>减二后期</td>
</tr>
<tr class="even">
<td></td>
<td></td>
<td></td>
<td>减二末期</td>
</tr>
<tr class="odd">
<td>胞质分裂</td>
<td><img src="https://raw.githubusercontent.com/PassionPenguin/picgo-database/main/image-20220227160827300.png" alt="image-20220227160827300" style="zoom:50%;"><br>胞质分裂与核分裂相关，开始于细胞分裂后期，完成于细胞分裂末期。<br>动物心包的胞质分裂依赖于收缩环收缩，植物细胞的胞质分裂依赖于细胞板的行程，与高尔基体有关</td>
<td><img src="https://raw.githubusercontent.com/PassionPenguin/picgo-database/main/image-20220227163019527.png" alt="image-20220227163019527" style="zoom:50%;"><br>胞质分裂后，细胞可能会发生变态，如人和其他哺乳动物精细胞变态发育成为精子。<br>需要注意的是卵原细胞的分裂是<strong>不均等分裂</strong>，共形成三个极体（最终裂解)和一个卵细胞。</td>
<td>胞质分裂</td>
</tr>
</tbody>
</table>
<p>​
<strong>减数分裂</strong>是进行有性生殖的生物，在产生成熟生殖细胞时进行的染色体数目减半的细胞分裂，在减数分裂前，染色体复制一次；在减数分裂时，细胞连续分裂两次，形成成熟生殖细胞的染色体数目比原始生殖细胞的减少一半。</p>
<blockquote>
<h5 id="有丝分裂分期歧义">有丝分裂分期歧义</h5>
<p>​ 与人教版（2019）生物学必修一指出有丝分裂分为前中后末四期 <span class="citation" data-cites="BiologyTextbook_Mitosis_Stages">[@BiologyTextbook_Mitosis_Stages]</span>
相异，生物学普遍将有丝分裂分为前、前中、中、后、末五期 <span class="citation" data-cites="CellBiology_Mitosis_Stages">[@CellBiology_Mitosis_Stages]</span>
<span class="citation" data-cites="MedicalCellBiology_Mitosis_Stages">[@MedicalCellBiology_Mitosis_Stages]</span>
<span class="citation" data-cites="Wikipedia_Mitosis_Stages">[@Wikipedia_Mitosis_Stages]</span>
<span class="citation" data-cites="WikipediaZH_Mitosis_Stages">[@WikipediaZH_Mitosis_Stages]</span>。区分的依据在于前期染色质凝集、分裂极确定、纺锤体形成、核仁缩小解体，前中期核膜崩解、完成纺锤体装配、染色体列队，中期由同一条染色体相连的两极动粒微管等长而达到力量平衡，导致所有染色体排列在细胞中央的赤道面上，该状态的染色体是最短粗的，姐妹染色单体的臂较易分离，适合染色体数目、结构等细胞遗传学的研究。</p>
<figure>
<img src="https://raw.githubusercontent.com/PassionPenguin/picgo-database/main/image-20220228224604927.png" alt="高等动物细胞欧丝分裂过程（罗佳博士与张传茂博士提供）[@MedicalCellBiology_Mitosis_Stages]">
<figcaption aria-hidden="true">高等动物细胞欧丝分裂过程（罗佳博士与张传茂博士提供）<span class="citation" data-cites="MedicalCellBiology_Mitosis_Stages">[@MedicalCellBiology_Mitosis_Stages]</span></figcaption>
</figure>
</blockquote>
<h4 id="探究实践观察蝗虫精母细胞减数分裂装片-exp-观察蝗虫精母细胞减数分裂装片">2.
探究实践：观察蝗虫精母细胞减数分裂装片 |
#exp-观察蝗虫精母细胞减数分裂装片</h4>
<h4 id="受精作用">3. 受精作用</h4>
<p>​
经过减数分裂形成的精子和卵细胞需要相互结合经过<strong>受精作用</strong>形成受精卵，才能发育成新的个体。受精作用指卵细胞和精子互相识别，融合成为受精卵的过程。</p>
<p>​ 减数分裂和受精作用对生物的遗传和变异都是非常重要的：</p>
<ol type="1">
<li>保证生物前后代染色体数目恒定，维持生物遗传的稳定性。</li>
<li>配子形成过程中染色体组和具有多样性，导致后代具有多样性。</li>
<li>有利于生物适应多变环境，利于生物在自然选择中进化，体现有性生殖的优越性。</li>
</ol>
<h4 id="探究实践建立减数分裂中染色体变化的模型-exp-建立减数分裂中染色体变化的模型">4.
探究实践：建立减数分裂中染色体变化的模型 |
#exp-建立减数分裂中染色体变化的模型</h4>
<h3 id="二基因在染色体上">二、基因在染色体上</h3>
<p>​ 1903
年美国遗传学家萨顿用蝗虫细胞作材料，研究精子和卵细胞的形成过程，发现孟德尔假设的一对遗传因子（等位基因）的分离与减数分裂中同源染色体的分离非常相似。</p>
<p>​ 由此，萨顿推测，基因就在染色体上（存在明显的平行关系）。</p>
<p>​
美国生物学家摩尔根起先不相信孟德尔遗传规律，怀疑萨顿的学说，在使用果蝇作为材料，设计了红颜雌果蝇与白眼雄果蝇的杂交现象，结果为<span class="math inline"><em>F</em><sub>1</sub></span>全是红眼，<span class="math inline"><em>F</em><sub>2</sub></span>红眼和白眼的数量比<span class="math inline">3 : 1</span><strong>符合分离定律</strong>，但是与性别关联。往后，摩尔根等人通过测交等方法，验证了等位基因-性染色体的假说（白眼基因在
X 上，Y
上没有等位基因），证明了基因在染色体上的学说，也即==基因是由染色体携带着传递到下一代的==。</p>
<p>​
基因分离定律的实质是，==杂合子中的细胞，一对同源染色体上的等位基因具有一定的独立性，在减数分裂形成配子过程中，等位基因随同源染色体的分开而分开，分别进入两个配子中，独立地遗传给后代==。</p>
<p>​
基因自由组合定律的实质是，==非同源染色体上的非等位基因的分离或组合互不感染，在减数分裂过程中，同源染色体上的等位基因彼此分离的同时，非同源染色体上的非等位基因自由组合==。</p>]]></content>
      <categories>
        <category>High School</category>
        <category>Biology</category>
        <category>Genetics</category>
      </categories>
      <tags>
        <tag>School Notes</tag>
        <tag>High School</tag>
        <tag>Biology</tag>
      </tags>
  </entry>
  <entry>
    <title>烃的衍生物</title>
    <url>/2022/02/10/chemistry/BK%2010%20%E7%83%83%E5%8F%8A%E5%85%B6%E8%A1%8D%E7%94%9F%E7%89%A9/P2%20%E7%83%83%E7%9A%84%E8%A1%8D%E7%94%9F%E7%89%A9/</url>
    <content><![CDATA[Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
This is pdfTeX, Version 3.141592653-2.6-1.40.23 (TeX Live 2021/W32TeX) (preloaded format=latex)
 restricted \write18 enabled.
entering extended mode
(./input.tex
LaTeX2e &lt;2021-11-15&gt; patch level 1
L3 programming layer &lt;2022-02-24&gt;
(c:/texlive/2022/texmf-dist/tex/latex/standalone/standalone.cls
Document Class: standalone 2018/03/26 v1.3a Class to compile TeX sub-files stan
dalone
(c:/texlive/2022/texmf-dist/tex/latex/tools/shellesc.sty)
(c:/texlive/2022/texmf-dist/tex/generic/iftex/ifluatex.sty
(c:/texlive/2022/texmf-dist/tex/generic/iftex/iftex.sty))
(c:/texlive/2022/texmf-dist/tex/latex/xkeyval/xkeyval.sty
(c:/texlive/2022/texmf-dist/tex/generic/xkeyval/xkeyval.tex
(c:/texlive/2022/texmf-dist/tex/generic/xkeyval/xkvutils.tex
(c:/texlive/2022/texmf-dist/tex/generic/xkeyval/keyval.tex))))
(c:/texlive/2022/texmf-dist/tex/latex/standalone/standalone.cfg)
(c:/texlive/2022/texmf-dist/tex/latex/base/article.cls
Document Class: article 2021/10/04 v1.4n Standard LaTeX document class
(c:/texlive/2022/texmf-dist/tex/latex/base/size12.clo))
(c:/texlive/2022/texmf-dist/tex/latex/preview/preview.sty
(c:/texlive/2022/texmf-dist/tex/latex/preview/prtightpage.def)))
(c:/texlive/2022/texmf-dist/tex/latex/base/inputenc.sty

! LaTeX Error: File `utf8x.def' not found.

Type X to quit or <return> to proceed,
or enter new name. (Default extension: def)

Enter file name: 
! Emergency stop.
<read *=""> 
         
l.165 \endinput
               ^^M
No pages of output.
Transcript written on input.log.
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
This is pdfTeX, Version 3.141592653-2.6-1.40.23 (TeX Live 2021/W32TeX) (preloaded format=latex)
 restricted \write18 enabled.
entering extended mode
(./input.tex
LaTeX2e &lt;2021-11-15&gt; patch level 1
L3 programming layer &lt;2022-02-24&gt;
(c:/texlive/2022/texmf-dist/tex/latex/standalone/standalone.cls
Document Class: standalone 2018/03/26 v1.3a Class to compile TeX sub-files stan
dalone
(c:/texlive/2022/texmf-dist/tex/latex/tools/shellesc.sty)
(c:/texlive/2022/texmf-dist/tex/generic/iftex/ifluatex.sty
(c:/texlive/2022/texmf-dist/tex/generic/iftex/iftex.sty))
(c:/texlive/2022/texmf-dist/tex/latex/xkeyval/xkeyval.sty
(c:/texlive/2022/texmf-dist/tex/generic/xkeyval/xkeyval.tex
(c:/texlive/2022/texmf-dist/tex/generic/xkeyval/xkvutils.tex
(c:/texlive/2022/texmf-dist/tex/generic/xkeyval/keyval.tex))))
(c:/texlive/2022/texmf-dist/tex/latex/standalone/standalone.cfg)
(c:/texlive/2022/texmf-dist/tex/latex/base/article.cls
Document Class: article 2021/10/04 v1.4n Standard LaTeX document class
(c:/texlive/2022/texmf-dist/tex/latex/base/size12.clo))
(c:/texlive/2022/texmf-dist/tex/latex/preview/preview.sty
(c:/texlive/2022/texmf-dist/tex/latex/preview/prtightpage.def)))
(c:/texlive/2022/texmf-dist/tex/latex/base/inputenc.sty

! LaTeX Error: File `utf8x.def' not found.

Type X to quit or <return> to proceed,
or enter new name. (Default extension: def)

Enter file name: 
! Emergency stop.
<read *=""> 
         
l.165 \endinput
               ^^M
No pages of output.
Transcript written on input.log.
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
This is pdfTeX, Version 3.141592653-2.6-1.40.23 (TeX Live 2021/W32TeX) (preloaded format=latex)
 restricted \write18 enabled.
entering extended mode
(./input.tex
LaTeX2e &lt;2021-11-15&gt; patch level 1
L3 programming layer &lt;2022-02-24&gt;
(c:/texlive/2022/texmf-dist/tex/latex/standalone/standalone.cls
Document Class: standalone 2018/03/26 v1.3a Class to compile TeX sub-files stan
dalone
(c:/texlive/2022/texmf-dist/tex/latex/tools/shellesc.sty)
(c:/texlive/2022/texmf-dist/tex/generic/iftex/ifluatex.sty
(c:/texlive/2022/texmf-dist/tex/generic/iftex/iftex.sty))
(c:/texlive/2022/texmf-dist/tex/latex/xkeyval/xkeyval.sty
(c:/texlive/2022/texmf-dist/tex/generic/xkeyval/xkeyval.tex
(c:/texlive/2022/texmf-dist/tex/generic/xkeyval/xkvutils.tex
(c:/texlive/2022/texmf-dist/tex/generic/xkeyval/keyval.tex))))
(c:/texlive/2022/texmf-dist/tex/latex/standalone/standalone.cfg)
(c:/texlive/2022/texmf-dist/tex/latex/base/article.cls
Document Class: article 2021/10/04 v1.4n Standard LaTeX document class
(c:/texlive/2022/texmf-dist/tex/latex/base/size12.clo))
(c:/texlive/2022/texmf-dist/tex/latex/preview/preview.sty
(c:/texlive/2022/texmf-dist/tex/latex/preview/prtightpage.def)))
(c:/texlive/2022/texmf-dist/tex/latex/base/inputenc.sty

! LaTeX Error: File `utf8x.def' not found.

Type X to quit or <return> to proceed,
or enter new name. (Default extension: def)

Enter file name: 
! Emergency stop.
<read *=""> 
         
l.165 \endinput
               ^^M
No pages of output.
Transcript written on input.log.
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
This is pdfTeX, Version 3.141592653-2.6-1.40.23 (TeX Live 2021/W32TeX) (preloaded format=latex)
 restricted \write18 enabled.
entering extended mode
(./input.tex
LaTeX2e &lt;2021-11-15&gt; patch level 1
L3 programming layer &lt;2022-02-24&gt;
(c:/texlive/2022/texmf-dist/tex/latex/standalone/standalone.cls
Document Class: standalone 2018/03/26 v1.3a Class to compile TeX sub-files stan
dalone
(c:/texlive/2022/texmf-dist/tex/latex/tools/shellesc.sty)
(c:/texlive/2022/texmf-dist/tex/generic/iftex/ifluatex.sty
(c:/texlive/2022/texmf-dist/tex/generic/iftex/iftex.sty))
(c:/texlive/2022/texmf-dist/tex/latex/xkeyval/xkeyval.sty
(c:/texlive/2022/texmf-dist/tex/generic/xkeyval/xkeyval.tex
(c:/texlive/2022/texmf-dist/tex/generic/xkeyval/xkvutils.tex
(c:/texlive/2022/texmf-dist/tex/generic/xkeyval/keyval.tex))))
(c:/texlive/2022/texmf-dist/tex/latex/standalone/standalone.cfg)
(c:/texlive/2022/texmf-dist/tex/latex/base/article.cls
Document Class: article 2021/10/04 v1.4n Standard LaTeX document class
(c:/texlive/2022/texmf-dist/tex/latex/base/size12.clo))
(c:/texlive/2022/texmf-dist/tex/latex/preview/preview.sty
(c:/texlive/2022/texmf-dist/tex/latex/preview/prtightpage.def)))
(c:/texlive/2022/texmf-dist/tex/latex/base/inputenc.sty

! LaTeX Error: File `utf8x.def' not found.

Type X to quit or <return> to proceed,
or enter new name. (Default extension: def)

Enter file name: 
! Emergency stop.
<read *=""> 
         
l.165 \endinput
               ^^M
No pages of output.
Transcript written on input.log.
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
This is pdfTeX, Version 3.141592653-2.6-1.40.23 (TeX Live 2021/W32TeX) (preloaded format=latex)
 restricted \write18 enabled.
entering extended mode
(./input.tex
LaTeX2e &lt;2021-11-15&gt; patch level 1
L3 programming layer &lt;2022-02-24&gt;
(c:/texlive/2022/texmf-dist/tex/latex/standalone/standalone.cls
Document Class: standalone 2018/03/26 v1.3a Class to compile TeX sub-files stan
dalone
(c:/texlive/2022/texmf-dist/tex/latex/tools/shellesc.sty)
(c:/texlive/2022/texmf-dist/tex/generic/iftex/ifluatex.sty
(c:/texlive/2022/texmf-dist/tex/generic/iftex/iftex.sty))
(c:/texlive/2022/texmf-dist/tex/latex/xkeyval/xkeyval.sty
(c:/texlive/2022/texmf-dist/tex/generic/xkeyval/xkeyval.tex
(c:/texlive/2022/texmf-dist/tex/generic/xkeyval/xkvutils.tex
(c:/texlive/2022/texmf-dist/tex/generic/xkeyval/keyval.tex))))
(c:/texlive/2022/texmf-dist/tex/latex/standalone/standalone.cfg)
(c:/texlive/2022/texmf-dist/tex/latex/base/article.cls
Document Class: article 2021/10/04 v1.4n Standard LaTeX document class
(c:/texlive/2022/texmf-dist/tex/latex/base/size12.clo))
(c:/texlive/2022/texmf-dist/tex/latex/preview/preview.sty
(c:/texlive/2022/texmf-dist/tex/latex/preview/prtightpage.def)))
(c:/texlive/2022/texmf-dist/tex/latex/base/inputenc.sty

! LaTeX Error: File `utf8x.def' not found.

Type X to quit or <return> to proceed,
or enter new name. (Default extension: def)

Enter file name: 
! Emergency stop.
<read *=""> 
         
l.165 \endinput
               ^^M
No pages of output.
Transcript written on input.log.
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
This is pdfTeX, Version 3.141592653-2.6-1.40.23 (TeX Live 2021/W32TeX) (preloaded format=latex)
 restricted \write18 enabled.
entering extended mode
(./input.tex
LaTeX2e &lt;2021-11-15&gt; patch level 1
L3 programming layer &lt;2022-02-24&gt;
(c:/texlive/2022/texmf-dist/tex/latex/standalone/standalone.cls
Document Class: standalone 2018/03/26 v1.3a Class to compile TeX sub-files stan
dalone
(c:/texlive/2022/texmf-dist/tex/latex/tools/shellesc.sty)
(c:/texlive/2022/texmf-dist/tex/generic/iftex/ifluatex.sty
(c:/texlive/2022/texmf-dist/tex/generic/iftex/iftex.sty))
(c:/texlive/2022/texmf-dist/tex/latex/xkeyval/xkeyval.sty
(c:/texlive/2022/texmf-dist/tex/generic/xkeyval/xkeyval.tex
(c:/texlive/2022/texmf-dist/tex/generic/xkeyval/xkvutils.tex
(c:/texlive/2022/texmf-dist/tex/generic/xkeyval/keyval.tex))))
(c:/texlive/2022/texmf-dist/tex/latex/standalone/standalone.cfg)
(c:/texlive/2022/texmf-dist/tex/latex/base/article.cls
Document Class: article 2021/10/04 v1.4n Standard LaTeX document class
(c:/texlive/2022/texmf-dist/tex/latex/base/size12.clo))
(c:/texlive/2022/texmf-dist/tex/latex/preview/preview.sty
(c:/texlive/2022/texmf-dist/tex/latex/preview/prtightpage.def)))
(c:/texlive/2022/texmf-dist/tex/latex/base/inputenc.sty

! LaTeX Error: File `utf8x.def' not found.

Type X to quit or <return> to proceed,
or enter new name. (Default extension: def)

Enter file name: 
! Emergency stop.
<read *=""> 
         
l.165 \endinput
               ^^M
No pages of output.
Transcript written on input.log.
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
This is pdfTeX, Version 3.141592653-2.6-1.40.23 (TeX Live 2021/W32TeX) (preloaded format=latex)
 restricted \write18 enabled.
entering extended mode
(./input.tex
LaTeX2e &lt;2021-11-15&gt; patch level 1
L3 programming layer &lt;2022-02-24&gt;
(c:/texlive/2022/texmf-dist/tex/latex/standalone/standalone.cls
Document Class: standalone 2018/03/26 v1.3a Class to compile TeX sub-files stan
dalone
(c:/texlive/2022/texmf-dist/tex/latex/tools/shellesc.sty)
(c:/texlive/2022/texmf-dist/tex/generic/iftex/ifluatex.sty
(c:/texlive/2022/texmf-dist/tex/generic/iftex/iftex.sty))
(c:/texlive/2022/texmf-dist/tex/latex/xkeyval/xkeyval.sty
(c:/texlive/2022/texmf-dist/tex/generic/xkeyval/xkeyval.tex
(c:/texlive/2022/texmf-dist/tex/generic/xkeyval/xkvutils.tex
(c:/texlive/2022/texmf-dist/tex/generic/xkeyval/keyval.tex))))
(c:/texlive/2022/texmf-dist/tex/latex/standalone/standalone.cfg)
(c:/texlive/2022/texmf-dist/tex/latex/base/article.cls
Document Class: article 2021/10/04 v1.4n Standard LaTeX document class
(c:/texlive/2022/texmf-dist/tex/latex/base/size12.clo))
(c:/texlive/2022/texmf-dist/tex/latex/preview/preview.sty
(c:/texlive/2022/texmf-dist/tex/latex/preview/prtightpage.def)))
(c:/texlive/2022/texmf-dist/tex/latex/base/inputenc.sty

! LaTeX Error: File `utf8x.def' not found.

Type X to quit or <return> to proceed,
or enter new name. (Default extension: def)

Enter file name: 
! Emergency stop.
<read *=""> 
         
l.165 \endinput
               ^^M
No pages of output.
Transcript written on input.log.
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
This is pdfTeX, Version 3.141592653-2.6-1.40.23 (TeX Live 2021/W32TeX) (preloaded format=latex)
 restricted \write18 enabled.
entering extended mode
(./input.tex
LaTeX2e &lt;2021-11-15&gt; patch level 1
L3 programming layer &lt;2022-02-24&gt;
(c:/texlive/2022/texmf-dist/tex/latex/standalone/standalone.cls
Document Class: standalone 2018/03/26 v1.3a Class to compile TeX sub-files stan
dalone
(c:/texlive/2022/texmf-dist/tex/latex/tools/shellesc.sty)
(c:/texlive/2022/texmf-dist/tex/generic/iftex/ifluatex.sty
(c:/texlive/2022/texmf-dist/tex/generic/iftex/iftex.sty))
(c:/texlive/2022/texmf-dist/tex/latex/xkeyval/xkeyval.sty
(c:/texlive/2022/texmf-dist/tex/generic/xkeyval/xkeyval.tex
(c:/texlive/2022/texmf-dist/tex/generic/xkeyval/xkvutils.tex
(c:/texlive/2022/texmf-dist/tex/generic/xkeyval/keyval.tex))))
(c:/texlive/2022/texmf-dist/tex/latex/standalone/standalone.cfg)
(c:/texlive/2022/texmf-dist/tex/latex/base/article.cls
Document Class: article 2021/10/04 v1.4n Standard LaTeX document class
(c:/texlive/2022/texmf-dist/tex/latex/base/size12.clo))
(c:/texlive/2022/texmf-dist/tex/latex/preview/preview.sty
(c:/texlive/2022/texmf-dist/tex/latex/preview/prtightpage.def)))
(c:/texlive/2022/texmf-dist/tex/latex/base/inputenc.sty

! LaTeX Error: File `utf8x.def' not found.

Type X to quit or <return> to proceed,
or enter new name. (Default extension: def)

Enter file name: 
! Emergency stop.
<read *=""> 
         
l.165 \endinput
               ^^M
No pages of output.
Transcript written on input.log.
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
This is pdfTeX, Version 3.141592653-2.6-1.40.23 (TeX Live 2021/W32TeX) (preloaded format=latex)
 restricted \write18 enabled.
entering extended mode
(./input.tex
LaTeX2e &lt;2021-11-15&gt; patch level 1
L3 programming layer &lt;2022-02-24&gt;
(c:/texlive/2022/texmf-dist/tex/latex/standalone/standalone.cls
Document Class: standalone 2018/03/26 v1.3a Class to compile TeX sub-files stan
dalone
(c:/texlive/2022/texmf-dist/tex/latex/tools/shellesc.sty)
(c:/texlive/2022/texmf-dist/tex/generic/iftex/ifluatex.sty
(c:/texlive/2022/texmf-dist/tex/generic/iftex/iftex.sty))
(c:/texlive/2022/texmf-dist/tex/latex/xkeyval/xkeyval.sty
(c:/texlive/2022/texmf-dist/tex/generic/xkeyval/xkeyval.tex
(c:/texlive/2022/texmf-dist/tex/generic/xkeyval/xkvutils.tex
(c:/texlive/2022/texmf-dist/tex/generic/xkeyval/keyval.tex))))
(c:/texlive/2022/texmf-dist/tex/latex/standalone/standalone.cfg)
(c:/texlive/2022/texmf-dist/tex/latex/base/article.cls
Document Class: article 2021/10/04 v1.4n Standard LaTeX document class
(c:/texlive/2022/texmf-dist/tex/latex/base/size12.clo))
(c:/texlive/2022/texmf-dist/tex/latex/preview/preview.sty
(c:/texlive/2022/texmf-dist/tex/latex/preview/prtightpage.def)))
(c:/texlive/2022/texmf-dist/tex/latex/base/inputenc.sty

! LaTeX Error: File `utf8x.def' not found.

Type X to quit or <return> to proceed,
or enter new name. (Default extension: def)

Enter file name: 
! Emergency stop.
<read *=""> 
         
l.165 \endinput
               ^^M
No pages of output.
Transcript written on input.log.
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
This is pdfTeX, Version 3.141592653-2.6-1.40.23 (TeX Live 2021/W32TeX) (preloaded format=latex)
 restricted \write18 enabled.
entering extended mode
(./input.tex
LaTeX2e &lt;2021-11-15&gt; patch level 1
L3 programming layer &lt;2022-02-24&gt;
(c:/texlive/2022/texmf-dist/tex/latex/standalone/standalone.cls
Document Class: standalone 2018/03/26 v1.3a Class to compile TeX sub-files stan
dalone
(c:/texlive/2022/texmf-dist/tex/latex/tools/shellesc.sty)
(c:/texlive/2022/texmf-dist/tex/generic/iftex/ifluatex.sty
(c:/texlive/2022/texmf-dist/tex/generic/iftex/iftex.sty))
(c:/texlive/2022/texmf-dist/tex/latex/xkeyval/xkeyval.sty
(c:/texlive/2022/texmf-dist/tex/generic/xkeyval/xkeyval.tex
(c:/texlive/2022/texmf-dist/tex/generic/xkeyval/xkvutils.tex
(c:/texlive/2022/texmf-dist/tex/generic/xkeyval/keyval.tex))))
(c:/texlive/2022/texmf-dist/tex/latex/standalone/standalone.cfg)
(c:/texlive/2022/texmf-dist/tex/latex/base/article.cls
Document Class: article 2021/10/04 v1.4n Standard LaTeX document class
(c:/texlive/2022/texmf-dist/tex/latex/base/size12.clo))
(c:/texlive/2022/texmf-dist/tex/latex/preview/preview.sty
(c:/texlive/2022/texmf-dist/tex/latex/preview/prtightpage.def)))
(c:/texlive/2022/texmf-dist/tex/latex/base/inputenc.sty

! LaTeX Error: File `utf8x.def' not found.

Type X to quit or <return> to proceed,
or enter new name. (Default extension: def)

Enter file name: 
! Emergency stop.
<read *=""> 
         
l.165 \endinput
               ^^M
No pages of output.
Transcript written on input.log.
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
This is pdfTeX, Version 3.141592653-2.6-1.40.23 (TeX Live 2021/W32TeX) (preloaded format=latex)
 restricted \write18 enabled.
entering extended mode
(./input.tex
LaTeX2e &lt;2021-11-15&gt; patch level 1
L3 programming layer &lt;2022-02-24&gt;
(c:/texlive/2022/texmf-dist/tex/latex/standalone/standalone.cls
Document Class: standalone 2018/03/26 v1.3a Class to compile TeX sub-files stan
dalone
(c:/texlive/2022/texmf-dist/tex/latex/tools/shellesc.sty)
(c:/texlive/2022/texmf-dist/tex/generic/iftex/ifluatex.sty
(c:/texlive/2022/texmf-dist/tex/generic/iftex/iftex.sty))
(c:/texlive/2022/texmf-dist/tex/latex/xkeyval/xkeyval.sty
(c:/texlive/2022/texmf-dist/tex/generic/xkeyval/xkeyval.tex
(c:/texlive/2022/texmf-dist/tex/generic/xkeyval/xkvutils.tex
(c:/texlive/2022/texmf-dist/tex/generic/xkeyval/keyval.tex))))
(c:/texlive/2022/texmf-dist/tex/latex/standalone/standalone.cfg)
(c:/texlive/2022/texmf-dist/tex/latex/base/article.cls
Document Class: article 2021/10/04 v1.4n Standard LaTeX document class
(c:/texlive/2022/texmf-dist/tex/latex/base/size12.clo))
(c:/texlive/2022/texmf-dist/tex/latex/preview/preview.sty
(c:/texlive/2022/texmf-dist/tex/latex/preview/prtightpage.def)))
(c:/texlive/2022/texmf-dist/tex/latex/base/inputenc.sty

! LaTeX Error: File `utf8x.def' not found.

Type X to quit or <return> to proceed,
or enter new name. (Default extension: def)

Enter file name: 
! Emergency stop.
<read *=""> 
         
l.165 \endinput
               ^^M
No pages of output.
Transcript written on input.log.
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
This is pdfTeX, Version 3.141592653-2.6-1.40.23 (TeX Live 2021/W32TeX) (preloaded format=latex)
 restricted \write18 enabled.
entering extended mode
(./input.tex
LaTeX2e &lt;2021-11-15&gt; patch level 1
L3 programming layer &lt;2022-02-24&gt;
(c:/texlive/2022/texmf-dist/tex/latex/standalone/standalone.cls
Document Class: standalone 2018/03/26 v1.3a Class to compile TeX sub-files stan
dalone
(c:/texlive/2022/texmf-dist/tex/latex/tools/shellesc.sty)
(c:/texlive/2022/texmf-dist/tex/generic/iftex/ifluatex.sty
(c:/texlive/2022/texmf-dist/tex/generic/iftex/iftex.sty))
(c:/texlive/2022/texmf-dist/tex/latex/xkeyval/xkeyval.sty
(c:/texlive/2022/texmf-dist/tex/generic/xkeyval/xkeyval.tex
(c:/texlive/2022/texmf-dist/tex/generic/xkeyval/xkvutils.tex
(c:/texlive/2022/texmf-dist/tex/generic/xkeyval/keyval.tex))))
(c:/texlive/2022/texmf-dist/tex/latex/standalone/standalone.cfg)
(c:/texlive/2022/texmf-dist/tex/latex/base/article.cls
Document Class: article 2021/10/04 v1.4n Standard LaTeX document class
(c:/texlive/2022/texmf-dist/tex/latex/base/size12.clo))
(c:/texlive/2022/texmf-dist/tex/latex/preview/preview.sty
(c:/texlive/2022/texmf-dist/tex/latex/preview/prtightpage.def)))
(c:/texlive/2022/texmf-dist/tex/latex/base/inputenc.sty

! LaTeX Error: File `utf8x.def' not found.

Type X to quit or <return> to proceed,
or enter new name. (Default extension: def)

Enter file name: 
! Emergency stop.
<read *=""> 
         
l.165 \endinput
               ^^M
No pages of output.
Transcript written on input.log.
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
This is pdfTeX, Version 3.141592653-2.6-1.40.23 (TeX Live 2021/W32TeX) (preloaded format=latex)
 restricted \write18 enabled.
entering extended mode
(./input.tex
LaTeX2e &lt;2021-11-15&gt; patch level 1
L3 programming layer &lt;2022-02-24&gt;
(c:/texlive/2022/texmf-dist/tex/latex/standalone/standalone.cls
Document Class: standalone 2018/03/26 v1.3a Class to compile TeX sub-files stan
dalone
(c:/texlive/2022/texmf-dist/tex/latex/tools/shellesc.sty)
(c:/texlive/2022/texmf-dist/tex/generic/iftex/ifluatex.sty
(c:/texlive/2022/texmf-dist/tex/generic/iftex/iftex.sty))
(c:/texlive/2022/texmf-dist/tex/latex/xkeyval/xkeyval.sty
(c:/texlive/2022/texmf-dist/tex/generic/xkeyval/xkeyval.tex
(c:/texlive/2022/texmf-dist/tex/generic/xkeyval/xkvutils.tex
(c:/texlive/2022/texmf-dist/tex/generic/xkeyval/keyval.tex))))
(c:/texlive/2022/texmf-dist/tex/latex/standalone/standalone.cfg)
(c:/texlive/2022/texmf-dist/tex/latex/base/article.cls
Document Class: article 2021/10/04 v1.4n Standard LaTeX document class
(c:/texlive/2022/texmf-dist/tex/latex/base/size12.clo))
(c:/texlive/2022/texmf-dist/tex/latex/preview/preview.sty
(c:/texlive/2022/texmf-dist/tex/latex/preview/prtightpage.def)))
(c:/texlive/2022/texmf-dist/tex/latex/base/inputenc.sty

! LaTeX Error: File `utf8x.def' not found.

Type X to quit or <return> to proceed,
or enter new name. (Default extension: def)

Enter file name: 
! Emergency stop.
<read *=""> 
         
l.165 \endinput
               ^^M
No pages of output.
Transcript written on input.log.
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
<h2 id="知识聚焦">知识聚焦</h2>
<h3 id="一卤代烃">一、卤代烃</h3>
<p>​
烃分子中的氢原子被卤素原子取代后生成的化合物称为<strong>卤代烃</strong>，分为氟代烃、氯代烃、溴代烃和碘代烃，可以用<span class="math inline">$\ce{R-X}$</span>表示，根据取代卤原子的个数也可以分为单卤代烃和多卤代烃。烷烃可以与卤素单质反应，逐步发生取代反应，如：
<span class="math display">$$
\ce{R-H + Cl_2 -&gt;[\text{光}]RCl + HCl}
$$</span> ​
烯烃与炔烃都可以与溴单质（常用溴的四氯化碳溶液）褪色，而烷烃需要在光照条件下才发生反应，故该反应可以用于验证不饱和键的存在与鉴别烯烃炔烃和烷烃：
<span class="math display">$$
\ce{CH#CH + Br2 -&gt;[CCl4] \chemfig{CH(-[6,.5]Br)=[0,.7]CH(-[6,.5]Br)}}
\\
\ce{CH2=CH2 + Br2 -&gt;[CCl4]
\chemfig{CH_2(-[6,.5]Br)-[0,.7]CH_2(-[6,.5]Br)}}
$$</span> ​
常温下，卤代烃大多为液体或固体（个别为气体），不溶于水，可溶于有机溶剂，某些卤代烃本身是很好的有机溶剂，密度和沸点都高于相应的烃，密度随碳原子的增加而减小，沸点岁碳原子的增加而增加。</p>
<p>​ 卤代烃分子中，卤素原子的电负性比碳大，使<span class="math inline">$\ce{C-X}$</span>的电子向卤素偏移，进而使碳原子带部分正电荷（<span class="math inline"><em>δ</em>+</span>），卤素部分带负电荷（<span class="math inline"><em>δ</em>−</span>），这样就形成了一个极性较强的共价键<span class="math inline">$\ce{C^{\delta+}-X^{\delta-}}$</span>，卤代烃在化学反应在这个键就容易断裂，使卤素原子被其他原子或原子团所取代，生成负离子而离去。
<span class="math display">$$
\ce{C2H5-Br + NaOH -&gt;[H2O][\Delta] C2H5-OH + NaBr}
$$</span> ​
有机化合物在一定条件中，从一个分子中脱去一个或几个小分子（如<span class="math inline">$\ce{H2O,
HX}$</span>），生成含不饱和键的化合物的反应叫做<strong>消去反应</strong>（消除反应）。卤代烃可以与氢氧化钠发生消去反应，并常用于检验碳卤键的存在：
<span class="math display">$$
\ce{\boxed{\ce{H}}-CH2-CH2-\boxed{\ce{Br}} + NaOH -&gt;[C2H5OH][\Delta]
CH2=CH2 ^ + NaBr +H2O}
$$</span> ​ <strong>苯环一般不发生消去反应</strong>。</p>
<p>​
卤代烯烃与烯烃相似，也能发生加成和加聚反应，如聚氯乙烯、聚四氟乙烯。</p>
<h3 id="二醇-酚">二、醇 酚</h3>
<p>​
烃分子中的氢原子被羟基取代可衍生出含羟基的化合物，羟基与饱和碳原子相连的化合物称为醇，羟基与苯环直接相连的化合物称为酚。</p>
<h4 id="醇">1. 醇</h4>
<p>​
根据醇分子所含羟基的数目，可以分为一元醇、二元醇和多元醇。分子中只含有一个羟基的是一元醇，通式<span class="math inline">$\ce{C_nH_{2n+1}OH}$</span>，可以简写为<span class="math inline">$\ce{R-OH}$</span>。</p>
<p>​
甲醇是最简单的醇，是无色具有挥发性的液体，易溶于水，有毒，误服会损伤视神经，严重致人死亡。甲醇广泛用于化工生产，也可作为车用燃料。乙二醇和丙三醇都是无色、粘稠的液体，易溶于水和乙醇，是重要的化工原料。醇在水中的溶解度一般随分子中碳原子数的增加而降低，沸点随碳原子数的增加而升高。相对分子质量相近的醇与烷烃，醇的沸点远高于烷烃的沸点（氢键）。</p>
<p>​ 乙醇可以与金属钠反应生成氢气与乙醇钠<span class="math inline">$\ce{2CH3CH2OH + 2Na -&gt; 2CH3CH2ONa + H2
^}$</span>。</p>
<p>​ 乙醇可以与乙酸反应生成乙酸乙酯<span class="math inline">$\ce{CH3CH2OH + CH3COOH -&gt; CH3CH2COOCH3 +
H2O}$</span>。</p>
<p>​
醇的化学性质主要由羟基官能团决定，氧原子吸引电子能力强与氢原子或碳原子，所以<span class="math inline">$\ce{C-O}$</span>、<span class="math inline">$\ce{O-H}$</span>的电子都偏向氧原子，反应时<span class="math inline">$\ce{O-H}$</span>容易断裂使羟基中的氢原子被取代，或者<span class="math inline">$\ce{C-O}$</span>断裂，让羟基被取代或脱去。</p>
<p>​
醇可以与氢卤酸发生取代反应生成卤代烃和水，如制备溴乙烷的方法之一：<span class="math inline">$\ce{C2H5-\boxed{\ce{OH + H}}-Br -&gt;[\Delta]
C2H5-Br + H2O}$</span>。值得注意的是，<span class="math inline">$\ce{卤代烃 &lt;=&gt;[OH-][H+]醇}$</span>。</p>
<p>​ 乙醇在浓硫酸作用（催化、脱水）下，在<span class="math inline">$170\degree
C$</span>生成乙烯（<strong>苯环接的羟基，即酚一般不发生消去反应</strong>）：<span class="math inline">$\ce{\boxed{\ce{H}}-CH2CH2-\boxed{\ce{OH}} -&gt;[浓
H2SO4][\Delta] CH2=CH2 ^ + H2O}$</span>。</p>
<blockquote>
<h4 id="乙醇的消去反应">乙醇的消去反应</h4>
<ol type="1">
<li>反应产物有多种，有机产物一般有三种；</li>
<li>需要通入 <span class="math inline">$\ce{NaOH}$</span>
溶液除杂（乙醇、<span class="math inline">$\ce{SO2}$</span>）。</li>
</ol>
<h5 id="相关产物">相关产物</h5>
<ol type="1">
<li>170℃ 以上：<span class="math inline">$\ce{C2H5OH + 2H2SO4
-&gt;[\Delta] 2C +2SO2 ^ + 5H2O}$</span>。</li>
<li><span class="math inline">$\ce{C + 2H2SO4 -&gt;[\Delta] CO2 ^ + 2SO2
^ + 2H2O ^}$</span>。</li>
</ol>
</blockquote>
<p>​ 混合物温度在<span class="math inline">$140\degree
C$</span>，乙醇则会生成乙醚：<span class="math inline">$\ce{C2H5-\boxed{\ce{OH + H}}-O-C2H5 -&gt;[浓
H2SO4][\Delta] C2H5-O-C2H5 + H2O}$</span>。</p>
<p>​
乙醚是无色易挥发的液体，有特殊气味与麻醉作用，易溶于有机溶剂，本身是优良溶剂。如同乙醚一样两个烃基通过一个氧原子连接在一起的化合物叫做醚，可用<span class="math inline">$\ce{R-O-R'}$</span>表示，化工中广泛被用作溶剂，有的可用作麻醉剂。</p>
<p>​
乙醇在铜或银作催化剂等条件下，可以被空气中的氧气氧化为乙醛，实现醇到醛的转化。乙醇可以被酸性<span class="math inline">$\ce{K2Cr2O7}$</span>氧化，具体分两个阶段：<span class="math inline">$\ce{CH3CH2OH -&gt; CH3CHO -&gt;
CH3COOH}$</span>。</p>
<h4 id="酚">2. 酚</h4>
<p>​ 苯酚是一元酚，是酚类化合物中最简单的，分子式<span class="math inline">$\ce{C6H6O}$</span>。纯净的苯酚是无色晶体，放置过久为粉红色（部分苯酚被氧气氧化）。苯酚具有特殊气味，易溶于乙醇等有机溶剂，具有毒性，对皮肤有腐蚀性（接触后立即用乙醇冲洗，再用水冲洗），温度高于<span class="math inline">$65\degree C$</span>与水混溶。</p>
<p>​
苯酚中的羟基与苯环直接相连，苯环与羟基之间的相互作用使苯酚在性质上与醇羟基有显著差异，酚羟基中的氢原子更活泼，在水中能部分电离呈弱酸性（故别名石碳酸）。苯酚能与<span class="math inline">$\ce{NaOH}$</span>反应： <span class="math display">$$
\schemestart
\chemfig{*6([0,.5]-=-=(-[2,.5]OH)-=)} + \chemfig{Na-[0,.7]OH} \arrow
\chemfig{*6([0,.5]-=-=(-[2,.5]ONa)-=)} + \chemfig{H-[0,.7]OH}
\schemestop
$$</span> ​ 向苯酚钠中滴加少量稀盐酸，苯酚钠会反应生成苯酚： <span class="math display">$$
\schemestart
\chemfig{*6([0,.5]-=-=(-[2,.5]ONa)-=)} + \chemfig{H-[0,.7]Cl} \arrow
\chemfig{*6([0,.5]-=-=(-[2,.5]OH)-=)} + \ce{NaCl}
\schemestop
$$</span> ​
向澄清苯酚钠溶液中通入二氧化碳气体，溶液会浑浊，苯酚钠在碳酸作用下生成苯酚，即苯酚酸性弱于碳酸：
<span class="math display">$$
\schemestart
\chemfig{*6([0,.5]-=-=(-[2,.5]ONa)-=)} + \ce{CO2 + H2O} \arrow
\chemfig{*6([0,.5]-=-=(-[2,.5]OH)-=)} + \ce{NaHCO3}
\schemestop
$$</span> ​
同样，苯环因为羟基的作用，在羟基的邻、对位的氢原子容易被取代，如苯酚会与溴发生取代反应，生成邻对位取代的产物
2,4,6-三溴苯酚（该反应很灵敏，可用于定性检验或测定苯酚）： <span class="math display">$$
\ce{\chemfig{*6([0,.5]-=-=(-[2,.5]OH)-=)} + 2Br2 &lt;=&gt;
\chemfig{*6([0,.5]-(-[6,.5]Br)=-(-[0,.5]Br)=(-[2,.5]OH)-(-[4,.5]Br)=)} +
HBr v}
$$</span> ​ 苯酚与<span class="math inline">$\ce{FeCl3}$</span>溶液作用显紫色（酚类物质一般都可以与<span class="math inline">$\ce{FeCl3}$</span>作用显色检验存在）。</p>
<h3 id="三醛-酮">三、醛 酮</h3>
<h4 id="醛">1. 醛</h4>
<p>​
羰基是一个碳原子和一个氧原子以双键相连形成的一种原子团，如果羰基的碳原子连着一个氧原子就变成了醛基。醛是由烃基（或氢原子）与羰基相连而构成的化合物，简写<span class="math inline">$\ce{RCHO}$</span>，饱和一元醛的通式为<span class="math inline">$\ce{C_nH_{2n}O}$</span>。</p>
<p>​
甲醛是最简单的醛，又名蚁醛，是一种无色有刺激性气味的气体，易溶于水，用途广泛，水溶液又称福尔马林可以杀菌防腐，用于消毒和制作生物标本。</p>
<p>​
乙醛是无色、具有刺激性气味的液体，密度比水小，易挥发，易燃烧，能与水、乙醇等互溶。乙醛简写为<span class="math inline">$\ce{CH3CHO}$</span>。乙醛分子中的醛基官能团对乙醛的化学性质起决定作用。</p>
<p>​
苯甲醇是最简单的芳香醇，俗称苦杏仁油，是一种有苦杏仁气味的无色液体，是制造染料、香料和药物的重要原料。</p>
<p>​
乙醛蒸汽与氢气混合物通过热的镍催化剂，会发生催化加氢反应，得到乙醇：
<span class="math display">$$
\schemestart
\chemfig{CH_3-[0,.7]C(=[2,.7]O)-H} + \chemfig{H-[0,.7]H}
\arrow{-&gt;[\ce{Catalyst}][\ce{\Delta}]} \chemfig{CH_3CH_2-[0,.7]OH}
\schemestop
$$</span> ​
醛基的碳氧双键中，氧原子电负性较大，碳氧双键中电子偏向氧原子，使醛基有较强极性，乙醛可以与一些极性试剂（如氰化氢）发生加成反应，生成
2-羟基丙腈： <span class="math display">$$
\schemestart
\chemfig{CH_3-[0,.7]C(=[2,.7]O)-[0,.7]H} + \chemfig{H-CN} \arrow
\chemfig{CH_3-[0,.7]CH(-[2,.7]OH)-[0,.7]CN}
\schemestop
$$</span> ​
乙醛在一定温度和催化剂存在的条件下，可以被空气中的氧气氧化为乙酸： <span class="math display">$$
\schemestart
2\chemfig{CH_3-[0,.7]C(=[2,.7]O)-[0,.7]H} + \ce{O2}
\arrow{-&gt;[\ce{Catalyst}][\ce{\Delta}]}
2\chemfig{CH_3-[0,.7]CH(=[2,.7]O)-[0,.7]OH}
\schemestop
$$</span> ​ 如同被氧气氧化，醛基可以被其他氧化剂氧化，如银氨溶液（<span class="math inline">$\ce{[Ag(NH3)2]OH}$</span>氢氧化二氨合银）或新制<span class="math inline">$\ce{Cu(OH)2}$</span>溶液，这两个反应也可以用于检测醛基，反应如下：
<span class="math display">$$
\ce{CH3CHO + 2[Ag(NH3)2]OH -&gt;[\Delta] CH3COONH4 + 2Ag v + 3NH3 +
H2O}\\
\ce{CH3CHO + 2Cu(OH)2 + NaOH -&gt;[\Delta] CH3COONa + Cu2O v + 3H2O}
$$</span></p>
<h4 id="酮">2. 酮</h4>
<p>​ 羰基与两个烃基相连的化合物称作酮，结构可以表示为<span class="math inline">$\ce{R-CO-R'}$</span>。酮是重要的有机溶剂和化工原料，如丙酮可作为化学纤维、钢瓶储存乙炔等的溶剂，可用于生产有机玻璃、农药和涂料等。</p>
<p>​
丙酮是最简单的酮，是无色透明的液体，易挥发，能与水、乙醇等互溶，但不能被银氨溶液或新制<span class="math inline">$\ce{Cu(OH)2}$</span>等弱氧化剂氧化。在催化剂存在下，丙酮可以发生催化加氢反应，生成
2-丙醇： <span class="math display">$$
\schemestart
\chemfig{CH_3-C(=[2,.7]O)-[0,.7]CH_3} + \ce{H2}
\arrow{-&gt;[\ce{Catalyst}][\ce{\Delta}]}
\chemfig{CH_3-[0,.7]CH(-[2,.7]OH)-[0,.7]CH_3}
\schemestop
$$</span></p>
<h3 id="四羧酸-羧酸衍生物">四、羧酸 羧酸衍生物</h3>
<p>​
羧酸是由烃基（或氢原子）与羧基相连而构成的有机化合物。羧酸衍生物是羧酸分子中羧基上的羟基被其他原子或原子团取代后的生成物，如乙酸分子中羧基上的羟基被乙氧基（<span class="math inline">$\ce{-OCH2CH3}$</span>）取代生成乙酸乙酯，被氨基取代生成乙酸铵。</p>
<h4 id="羧酸">1. 羧酸</h4>
<p>​
根据与羧基相连的烃基不同，羧酸可以分为脂肪酸（甲酸、乙酸等）和芳香酸（苯甲酸、苯乙酸等）；根据羧酸分子中的羧基数目，羧酸可以分为一元羧酸、二元羧酸和多元羧酸等。</p>
<p>​
甲酸是最简单的羧酸，又称蚁酸，是一种无色、有刺激性气味的液体，有腐蚀性，能与水、乙醇等互溶。甲酸分子中同时并存羧基和醛基的结构，也具有羧酸和醛的性质。甲酸在工业上可用作还原剂，也是合成医药、农药和染料等的原料。</p>
<p>​
苯甲酸属于芳香酸，是一种无色晶体，易升华，微溶于水，易溶于乙醇，可用于合成香料、药物等，苯甲酸钠（苯甲酸的钠盐）是常用的食品防腐剂。</p>
<p>​
乙二酸（俗称草酸）是最简单的二元羧酸，是无色晶体，通常含两分子结晶水，可溶于水和乙醇。乙二酸是化学分析中常用的还原剂，也是重要的化工原料。</p>
<p>​
甲酸、乙酸等碳原子少的羧酸能够与水互溶，随着碳原子增加，一元羧酸在水中溶解度迅速减小，沸点逐渐升高，高级脂肪酸就是不溶于水的蜡状固体。羧酸与相对分子相当的其他有机物相比沸点较高（分子间氢键）。</p>
<p>​
羧酸的化学性质主要取决于羧酸官能团，氧原子电负性较大，羧酸发生化学反应时，<span class="math inline">$\ce{C-O}$</span>与<span class="math inline">$\ce{O-H}$</span>键容易断裂，前者让<span class="math inline">$\ce{-OH}$</span>被其他基团取代，生成酯、酰、胺等羧酸衍生物，后者会解离<span class="math inline">$\ce{H+}$</span>呈现酸性。</p>
<p>​
通过同位素标记，我们可以证实乙酸与乙醇酯化反应是乙酸分子中羧基与乙醇分子中羟基氢原子结合成水，其他部分结合为酯，反应表示如下：
<span class="math display">$$
\schemestart
\chemfig{CH_3-[0,.7]C(=[2,.7]O)-[0,.7]OH} +
\chemfig{H-[0,.7]^{18}O-C_2H_5} \arrow{&lt;=&gt;[\ce{c
H2SO4}][\ce{\Delta}]} \chemfig{CH_3-[0,.7]C(=[2,.7]O)-^{18}OC_2H_5}
+ce{H2O}
\schemestop
$$</span></p>
<h4 id="羧酸衍生物">2. 羧酸衍生物</h4>
<h4 id="酯">1. 酯</h4>
<p>​ 酯是羧酸分子羧基中的羟基被<span class="math inline">$\ce{-OR'}$</span>取代后的产物，可以简写为<span class="math inline">$\ce{RCOOR'}$</span>。低级酯是具有芳香气味的液体，密度一般比水小，易溶于有机溶剂，许多酯也是常见的有机溶剂。酯的重要化学性质之一就是可以发生水解反应，生成相应的羧酸和醇。酸性条件下酯的水解是酯化反应的逆反应，如乙酸乙酯的水解在稀硫酸和加热条件下是可逆反应，但是碱性条件条件下，由于生成了乙酸钠，水解反应不可逆。</p>
<p>​
油脂是重要的营养物质，日常生活中可食用的油脂，主要成分是高级脂肪酸与甘油形成的酯。油脂结构中的<span class="math inline">$\ce{R}$</span>常用表示高级脂肪酸的烃基，高级脂肪酸的种类有很多，如饱和的硬脂酸、不饱和的油酸。因为油脂是高级脂肪酸的甘油酯，化学性质与乙酸乙酯相似，不饱和的高级脂肪酸又会让其带有烯烃的性质。</p>
<p>​
在酸碱等催化剂条件下，油脂可以发生水解反应，而碱性条件下特称为皂化反应：
<span class="math display">$$
\definesubmol{@}{([0,.7]-O-[0,.7]C(=[2,.7]O)-C_{17}H_{35})}
\schemestart
\chemname{\chemfig{[2,1]CH_2!@-CH_{\phantom 2}!@-CH_2!@}}{硬脂酸甘油酯}
+ \chemname{3NaOH}{} \arrow{-&gt;[\ce{\Delta}]}
\chemname{\chemfig{CH_2OH(-[2,.7]CH_2OH)(-[6,.7]CH_2OH)}}{甘油} +
\chemname{\ce{3C16H35COONa}}{硬脂酸钠}
\schemestop
$$</span> ​
不饱和程度较高、熔点较低的液态油，通过催化加氢可以提高饱和度，转变为半固态的脂肪，即油脂的氢化（硬化），不易被空气氧化变质，便于储存运输，可用于制作肥皂和人造奶油：
<span class="math display">$$
\definesubmol\A{([0,.7]-O-[0,.7]C(=[2,.7]O)-C_{17}H_{33})}
\definesubmol\B{([0,.7]-O-[0,.7]C(=[2,.7]O)-C_{17}H_{35})}
\schemestart
\chemname{\chemfig{[2,1]CH_2!\A-CH_{\phantom 2}!\A-CH_2!\A}}{油酸甘油酯}
+ \chemname{\ce{3H_2}}{} \arrow{-&gt;[\ce{Catalyst}][\ce{\Delta}]}
\chemname{\chemfig{[2,1]CH_2!\B-CH_{\phantom
2}!\B-CH_2!\B}}{硬脂酸甘油酯}
\schemestop
$$</span></p>
<h4 id="酰胺">2. 酰胺</h4>
<p>​ 烃基取代氨分子中的氢原子而形成的化合物称为胺，一般可写作<span class="math inline">$\ce{R-NH2}$</span>，可以看作是烃分子中的氢原子被氨基或取代的氨基所替代得到的化合物，具有碱性，如苯胺可以与盐酸反应，生成可溶于水的苯胺盐酸盐。胺的用途广泛，甲胺和苯胺都是合成医药、农药和燃料等的重要原料。</p>
<p>​
酰胺也是羧酸衍生物，是羧酸分子中羟基被氨基所替代得到的化合物，结构一般表示为<span class="math inline">$\chemfig{C(-[4,.7])(=[2,.7]O)(-[0,.7]NH_2)}$</span>叫做酰胺基。酰胺常被用作溶剂或化工原料，如
N,N-二甲基甲酰胺是良好的溶剂，可以溶解很多有机化合物和无机化合物，是生产多种化学纤维的溶剂，也用于合成农药、医药等。</p>
<p>酰胺在酸或碱存在并加热的条件下可以发生水解反应。如果水解时加入碱，生成的酸会变成盐，并放出氨气。
<span class="math display">$$
\ce{RCONH2 + H2O + HCl -&gt;[\Delta] RCOOH + NH4Cl}\\
\ce{RCONH2 + NaOH -&gt;[\Delta] RCOONa + NH3 ^}
$$</span></p>
<h3 id="五有机合成">五、有机合成</h3>
<p>​
有机合成使用相对简单易得的原料，通过有机化学反应来构建碳骨架、引入官能团，由此合成出具有特定结构和性质的目标分子。</p>
<h4 id="构建碳骨架">1. 构建碳骨架</h4>
<p>​
当原料分子的碳原子数少于目标分子的碳原子数，可以通过引入含碳原子的官能团等方式延长碳链；氧化反应等则可以使烃分子链缩短。</p>
<h4 id="引入官能团">2. 引入官能团</h4>
<p>​
有选择地通过取代、加成、消去、氧化、还原等有机化学反应，可以实现有机化合物类别的转变，引入目标官能团。</p>
<h3 id="六常见有机物或官能团的检验方法">六、常见有机物或官能团的检验方法</h3>
<table>
<colgroup>
<col style="width: 19%">
<col style="width: 28%">
<col style="width: 52%">
</colgroup>
<thead>
<tr class="header">
<th>有机物或官能团</th>
<th>检验试剂</th>
<th>反应现象</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><span class="math inline">$\ce{C=C}$</span>、<span class="math inline">$\ce{C#C}$</span></td>
<td>溴水</td>
<td>褪色</td>
</tr>
<tr class="even">
<td></td>
<td>酸性<span class="math inline">$\ce{KMnO4}$</span>溶液</td>
<td>褪色</td>
</tr>
<tr class="odd">
<td>苯的同系物</td>
<td>酸性<span class="math inline">$\ce{KMnO4}$</span>溶液</td>
<td>褪色</td>
</tr>
<tr class="even">
<td>卤素原子</td>
<td><span class="math inline">$\ce{NaOH}$</span>溶液、硝酸、硝酸银溶液</td>
<td>先加<span class="math inline">$\ce{NaOH}$</span>溶液，振荡后加硝酸酸化，再加硝酸银溶液，观察沉淀颜色</td>
</tr>
<tr class="odd">
<td>醇的<span class="math inline">$\ce{-OH}$</span></td>
<td>金属<span class="math inline">$\ce{Na}$</span></td>
<td>产生无色无味气体，用带火星的木条接近，火焰颜色呈淡蓝色，罩一个干冷烧杯在火焰上方，烧杯内壁出现小液滴</td>
</tr>
<tr class="even">
<td>苯酚</td>
<td>浓溴水</td>
<td>溴水褪色，产生白色沉淀，进而转变为黄色沉淀</td>
</tr>
<tr class="odd">
<td></td>
<td>氯化铁溶液</td>
<td>溶液变为紫色</td>
</tr>
<tr class="even">
<td>醛基</td>
<td>银氨溶液</td>
<td>水浴加热生成银镜</td>
</tr>
<tr class="odd">
<td></td>
<td>新制<span class="math inline">$\ce{Cu(OH)2}$</span></td>
<td>煮沸生成砖红色沉淀</td>
</tr>
<tr class="even">
<td>羧基</td>
<td>酸碱指示剂</td>
<td>变色</td>
</tr>
<tr class="odd">
<td></td>
<td>新制<span class="math inline">$\ce{Cu(OH)2}$</span></td>
<td>常温下沉淀溶解，呈蓝色</td>
</tr>
<tr class="even">
<td></td>
<td><span class="math inline">$\ce{Na2CO3}$</span>或<span class="math inline">$\ce{NaHCO3}$</span>溶液</td>
<td>产生无色无味气体</td>
</tr>
<tr class="odd">
<td>酯基</td>
<td>滴有酚酞的<span class="math inline">$\ce{NaOH}$</span>溶液</td>
<td>加热后红色变浅</td>
</tr>
<tr class="even">
<td>淀粉</td>
<td>碘溶液</td>
<td>呈蓝色</td>
</tr>
<tr class="odd">
<td>蛋白质</td>
<td>浓<span class="math inline">$\ce{HNO3}$</span></td>
<td>微热后呈黄色</td>
</tr>
<tr class="even">
<td></td>
<td>灼烧</td>
<td>有烧焦羽毛气味</td>
</tr>
<tr class="odd">
<td></td>
<td>双缩脲试剂</td>
<td>呈紫色</td>
</tr>
</tbody>
</table>
</read></return></read></return></read></return></read></return></read></return></read></return></read></return></read></return></read></return></read></return></read></return></read></return></read></return>]]></content>
      <categories>
        <category>High School</category>
        <category>Chemistry</category>
      </categories>
      <tags>
        <tag>School Notes</tag>
        <tag>Chemistry</tag>
        <tag>High School</tag>
      </tags>
  </entry>
  <entry>
    <title>烷烃 烯烃 炔烃</title>
    <url>/2022/02/09/chemistry/BK%2010%20%E7%83%83%E5%8F%8A%E5%85%B6%E8%A1%8D%E7%94%9F%E7%89%A9/P1%20%E7%83%83%E7%9A%84%E7%BB%93%E6%9E%84%E4%B8%8E%E6%80%A7%E8%B4%A8/</url>
    <content><![CDATA[Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
This is pdfTeX, Version 3.141592653-2.6-1.40.23 (TeX Live 2021/W32TeX) (preloaded format=latex)
 restricted \write18 enabled.
entering extended mode
(./input.tex
LaTeX2e &lt;2021-11-15&gt; patch level 1
L3 programming layer &lt;2022-02-24&gt;
(c:/texlive/2022/texmf-dist/tex/latex/standalone/standalone.cls
Document Class: standalone 2018/03/26 v1.3a Class to compile TeX sub-files stan
dalone
(c:/texlive/2022/texmf-dist/tex/latex/tools/shellesc.sty)
(c:/texlive/2022/texmf-dist/tex/generic/iftex/ifluatex.sty
(c:/texlive/2022/texmf-dist/tex/generic/iftex/iftex.sty))
(c:/texlive/2022/texmf-dist/tex/latex/xkeyval/xkeyval.sty
(c:/texlive/2022/texmf-dist/tex/generic/xkeyval/xkeyval.tex
(c:/texlive/2022/texmf-dist/tex/generic/xkeyval/xkvutils.tex
(c:/texlive/2022/texmf-dist/tex/generic/xkeyval/keyval.tex))))
(c:/texlive/2022/texmf-dist/tex/latex/standalone/standalone.cfg)
(c:/texlive/2022/texmf-dist/tex/latex/base/article.cls
Document Class: article 2021/10/04 v1.4n Standard LaTeX document class
(c:/texlive/2022/texmf-dist/tex/latex/base/size12.clo))
(c:/texlive/2022/texmf-dist/tex/latex/preview/preview.sty
(c:/texlive/2022/texmf-dist/tex/latex/preview/prtightpage.def)))
(c:/texlive/2022/texmf-dist/tex/latex/base/inputenc.sty

! LaTeX Error: File `utf8x.def' not found.

Type X to quit or <return> to proceed,
or enter new name. (Default extension: def)

Enter file name: 
! Emergency stop.
<read *=""> 
         
l.165 \endinput
               ^^M
No pages of output.
Transcript written on input.log.
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
This is pdfTeX, Version 3.141592653-2.6-1.40.23 (TeX Live 2021/W32TeX) (preloaded format=latex)
 restricted \write18 enabled.
entering extended mode
(./input.tex
LaTeX2e &lt;2021-11-15&gt; patch level 1
L3 programming layer &lt;2022-02-24&gt;
(c:/texlive/2022/texmf-dist/tex/latex/standalone/standalone.cls
Document Class: standalone 2018/03/26 v1.3a Class to compile TeX sub-files stan
dalone
(c:/texlive/2022/texmf-dist/tex/latex/tools/shellesc.sty)
(c:/texlive/2022/texmf-dist/tex/generic/iftex/ifluatex.sty
(c:/texlive/2022/texmf-dist/tex/generic/iftex/iftex.sty))
(c:/texlive/2022/texmf-dist/tex/latex/xkeyval/xkeyval.sty
(c:/texlive/2022/texmf-dist/tex/generic/xkeyval/xkeyval.tex
(c:/texlive/2022/texmf-dist/tex/generic/xkeyval/xkvutils.tex
(c:/texlive/2022/texmf-dist/tex/generic/xkeyval/keyval.tex))))
(c:/texlive/2022/texmf-dist/tex/latex/standalone/standalone.cfg)
(c:/texlive/2022/texmf-dist/tex/latex/base/article.cls
Document Class: article 2021/10/04 v1.4n Standard LaTeX document class
(c:/texlive/2022/texmf-dist/tex/latex/base/size12.clo))
(c:/texlive/2022/texmf-dist/tex/latex/preview/preview.sty
(c:/texlive/2022/texmf-dist/tex/latex/preview/prtightpage.def)))
(c:/texlive/2022/texmf-dist/tex/latex/base/inputenc.sty

! LaTeX Error: File `utf8x.def' not found.

Type X to quit or <return> to proceed,
or enter new name. (Default extension: def)

Enter file name: 
! Emergency stop.
<read *=""> 
         
l.165 \endinput
               ^^M
No pages of output.
Transcript written on input.log.
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
This is pdfTeX, Version 3.141592653-2.6-1.40.23 (TeX Live 2021/W32TeX) (preloaded format=latex)
 restricted \write18 enabled.
entering extended mode
(./input.tex
LaTeX2e &lt;2021-11-15&gt; patch level 1
L3 programming layer &lt;2022-02-24&gt;
(c:/texlive/2022/texmf-dist/tex/latex/standalone/standalone.cls
Document Class: standalone 2018/03/26 v1.3a Class to compile TeX sub-files stan
dalone
(c:/texlive/2022/texmf-dist/tex/latex/tools/shellesc.sty)
(c:/texlive/2022/texmf-dist/tex/generic/iftex/ifluatex.sty
(c:/texlive/2022/texmf-dist/tex/generic/iftex/iftex.sty))
(c:/texlive/2022/texmf-dist/tex/latex/xkeyval/xkeyval.sty
(c:/texlive/2022/texmf-dist/tex/generic/xkeyval/xkeyval.tex
(c:/texlive/2022/texmf-dist/tex/generic/xkeyval/xkvutils.tex
(c:/texlive/2022/texmf-dist/tex/generic/xkeyval/keyval.tex))))
(c:/texlive/2022/texmf-dist/tex/latex/standalone/standalone.cfg)
(c:/texlive/2022/texmf-dist/tex/latex/base/article.cls
Document Class: article 2021/10/04 v1.4n Standard LaTeX document class
(c:/texlive/2022/texmf-dist/tex/latex/base/size12.clo))
(c:/texlive/2022/texmf-dist/tex/latex/preview/preview.sty
(c:/texlive/2022/texmf-dist/tex/latex/preview/prtightpage.def)))
(c:/texlive/2022/texmf-dist/tex/latex/base/inputenc.sty

! LaTeX Error: File `utf8x.def' not found.

Type X to quit or <return> to proceed,
or enter new name. (Default extension: def)

Enter file name: 
! Emergency stop.
<read *=""> 
         
l.165 \endinput
               ^^M
No pages of output.
Transcript written on input.log.
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
This is pdfTeX, Version 3.141592653-2.6-1.40.23 (TeX Live 2021/W32TeX) (preloaded format=latex)
 restricted \write18 enabled.
entering extended mode
(./input.tex
LaTeX2e &lt;2021-11-15&gt; patch level 1
L3 programming layer &lt;2022-02-24&gt;
(c:/texlive/2022/texmf-dist/tex/latex/standalone/standalone.cls
Document Class: standalone 2018/03/26 v1.3a Class to compile TeX sub-files stan
dalone
(c:/texlive/2022/texmf-dist/tex/latex/tools/shellesc.sty)
(c:/texlive/2022/texmf-dist/tex/generic/iftex/ifluatex.sty
(c:/texlive/2022/texmf-dist/tex/generic/iftex/iftex.sty))
(c:/texlive/2022/texmf-dist/tex/latex/xkeyval/xkeyval.sty
(c:/texlive/2022/texmf-dist/tex/generic/xkeyval/xkeyval.tex
(c:/texlive/2022/texmf-dist/tex/generic/xkeyval/xkvutils.tex
(c:/texlive/2022/texmf-dist/tex/generic/xkeyval/keyval.tex))))
(c:/texlive/2022/texmf-dist/tex/latex/standalone/standalone.cfg)
(c:/texlive/2022/texmf-dist/tex/latex/base/article.cls
Document Class: article 2021/10/04 v1.4n Standard LaTeX document class
(c:/texlive/2022/texmf-dist/tex/latex/base/size12.clo))
(c:/texlive/2022/texmf-dist/tex/latex/preview/preview.sty
(c:/texlive/2022/texmf-dist/tex/latex/preview/prtightpage.def)))
(c:/texlive/2022/texmf-dist/tex/latex/base/inputenc.sty

! LaTeX Error: File `utf8x.def' not found.

Type X to quit or <return> to proceed,
or enter new name. (Default extension: def)

Enter file name: 
! Emergency stop.
<read *=""> 
         
l.165 \endinput
               ^^M
No pages of output.
Transcript written on input.log.
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
This is pdfTeX, Version 3.141592653-2.6-1.40.23 (TeX Live 2021/W32TeX) (preloaded format=latex)
 restricted \write18 enabled.
entering extended mode
(./input.tex
LaTeX2e &lt;2021-11-15&gt; patch level 1
L3 programming layer &lt;2022-02-24&gt;
(c:/texlive/2022/texmf-dist/tex/latex/standalone/standalone.cls
Document Class: standalone 2018/03/26 v1.3a Class to compile TeX sub-files stan
dalone
(c:/texlive/2022/texmf-dist/tex/latex/tools/shellesc.sty)
(c:/texlive/2022/texmf-dist/tex/generic/iftex/ifluatex.sty
(c:/texlive/2022/texmf-dist/tex/generic/iftex/iftex.sty))
(c:/texlive/2022/texmf-dist/tex/latex/xkeyval/xkeyval.sty
(c:/texlive/2022/texmf-dist/tex/generic/xkeyval/xkeyval.tex
(c:/texlive/2022/texmf-dist/tex/generic/xkeyval/xkvutils.tex
(c:/texlive/2022/texmf-dist/tex/generic/xkeyval/keyval.tex))))
(c:/texlive/2022/texmf-dist/tex/latex/standalone/standalone.cfg)
(c:/texlive/2022/texmf-dist/tex/latex/base/article.cls
Document Class: article 2021/10/04 v1.4n Standard LaTeX document class
(c:/texlive/2022/texmf-dist/tex/latex/base/size12.clo))
(c:/texlive/2022/texmf-dist/tex/latex/preview/preview.sty
(c:/texlive/2022/texmf-dist/tex/latex/preview/prtightpage.def)))
(c:/texlive/2022/texmf-dist/tex/latex/base/inputenc.sty

! LaTeX Error: File `utf8x.def' not found.

Type X to quit or <return> to proceed,
or enter new name. (Default extension: def)

Enter file name: 
! Emergency stop.
<read *=""> 
         
l.165 \endinput
               ^^M
No pages of output.
Transcript written on input.log.
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
This is pdfTeX, Version 3.141592653-2.6-1.40.23 (TeX Live 2021/W32TeX) (preloaded format=latex)
 restricted \write18 enabled.
entering extended mode
(./input.tex
LaTeX2e &lt;2021-11-15&gt; patch level 1
L3 programming layer &lt;2022-02-24&gt;
(c:/texlive/2022/texmf-dist/tex/latex/standalone/standalone.cls
Document Class: standalone 2018/03/26 v1.3a Class to compile TeX sub-files stan
dalone
(c:/texlive/2022/texmf-dist/tex/latex/tools/shellesc.sty)
(c:/texlive/2022/texmf-dist/tex/generic/iftex/ifluatex.sty
(c:/texlive/2022/texmf-dist/tex/generic/iftex/iftex.sty))
(c:/texlive/2022/texmf-dist/tex/latex/xkeyval/xkeyval.sty
(c:/texlive/2022/texmf-dist/tex/generic/xkeyval/xkeyval.tex
(c:/texlive/2022/texmf-dist/tex/generic/xkeyval/xkvutils.tex
(c:/texlive/2022/texmf-dist/tex/generic/xkeyval/keyval.tex))))
(c:/texlive/2022/texmf-dist/tex/latex/standalone/standalone.cfg)
(c:/texlive/2022/texmf-dist/tex/latex/base/article.cls
Document Class: article 2021/10/04 v1.4n Standard LaTeX document class
(c:/texlive/2022/texmf-dist/tex/latex/base/size12.clo))
(c:/texlive/2022/texmf-dist/tex/latex/preview/preview.sty
(c:/texlive/2022/texmf-dist/tex/latex/preview/prtightpage.def)))
(c:/texlive/2022/texmf-dist/tex/latex/base/inputenc.sty

! LaTeX Error: File `utf8x.def' not found.

Type X to quit or <return> to proceed,
or enter new name. (Default extension: def)

Enter file name: 
! Emergency stop.
<read *=""> 
         
l.165 \endinput
               ^^M
No pages of output.
Transcript written on input.log.
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
This is pdfTeX, Version 3.141592653-2.6-1.40.23 (TeX Live 2021/W32TeX) (preloaded format=latex)
 restricted \write18 enabled.
entering extended mode
(./input.tex
LaTeX2e &lt;2021-11-15&gt; patch level 1
L3 programming layer &lt;2022-02-24&gt;
(c:/texlive/2022/texmf-dist/tex/latex/standalone/standalone.cls
Document Class: standalone 2018/03/26 v1.3a Class to compile TeX sub-files stan
dalone
(c:/texlive/2022/texmf-dist/tex/latex/tools/shellesc.sty)
(c:/texlive/2022/texmf-dist/tex/generic/iftex/ifluatex.sty
(c:/texlive/2022/texmf-dist/tex/generic/iftex/iftex.sty))
(c:/texlive/2022/texmf-dist/tex/latex/xkeyval/xkeyval.sty
(c:/texlive/2022/texmf-dist/tex/generic/xkeyval/xkeyval.tex
(c:/texlive/2022/texmf-dist/tex/generic/xkeyval/xkvutils.tex
(c:/texlive/2022/texmf-dist/tex/generic/xkeyval/keyval.tex))))
(c:/texlive/2022/texmf-dist/tex/latex/standalone/standalone.cfg)
(c:/texlive/2022/texmf-dist/tex/latex/base/article.cls
Document Class: article 2021/10/04 v1.4n Standard LaTeX document class
(c:/texlive/2022/texmf-dist/tex/latex/base/size12.clo))
(c:/texlive/2022/texmf-dist/tex/latex/preview/preview.sty
(c:/texlive/2022/texmf-dist/tex/latex/preview/prtightpage.def)))
(c:/texlive/2022/texmf-dist/tex/latex/base/inputenc.sty

! LaTeX Error: File `utf8x.def' not found.

Type X to quit or <return> to proceed,
or enter new name. (Default extension: def)

Enter file name: 
! Emergency stop.
<read *=""> 
         
l.165 \endinput
               ^^M
No pages of output.
Transcript written on input.log.
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
This is pdfTeX, Version 3.141592653-2.6-1.40.23 (TeX Live 2021/W32TeX) (preloaded format=latex)
 restricted \write18 enabled.
entering extended mode
(./input.tex
LaTeX2e &lt;2021-11-15&gt; patch level 1
L3 programming layer &lt;2022-02-24&gt;
(c:/texlive/2022/texmf-dist/tex/latex/standalone/standalone.cls
Document Class: standalone 2018/03/26 v1.3a Class to compile TeX sub-files stan
dalone
(c:/texlive/2022/texmf-dist/tex/latex/tools/shellesc.sty)
(c:/texlive/2022/texmf-dist/tex/generic/iftex/ifluatex.sty
(c:/texlive/2022/texmf-dist/tex/generic/iftex/iftex.sty))
(c:/texlive/2022/texmf-dist/tex/latex/xkeyval/xkeyval.sty
(c:/texlive/2022/texmf-dist/tex/generic/xkeyval/xkeyval.tex
(c:/texlive/2022/texmf-dist/tex/generic/xkeyval/xkvutils.tex
(c:/texlive/2022/texmf-dist/tex/generic/xkeyval/keyval.tex))))
(c:/texlive/2022/texmf-dist/tex/latex/standalone/standalone.cfg)
(c:/texlive/2022/texmf-dist/tex/latex/base/article.cls
Document Class: article 2021/10/04 v1.4n Standard LaTeX document class
(c:/texlive/2022/texmf-dist/tex/latex/base/size12.clo))
(c:/texlive/2022/texmf-dist/tex/latex/preview/preview.sty
(c:/texlive/2022/texmf-dist/tex/latex/preview/prtightpage.def)))
(c:/texlive/2022/texmf-dist/tex/latex/base/inputenc.sty

! LaTeX Error: File `utf8x.def' not found.

Type X to quit or <return> to proceed,
or enter new name. (Default extension: def)

Enter file name: 
! Emergency stop.
<read *=""> 
         
l.165 \endinput
               ^^M
No pages of output.
Transcript written on input.log.
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
This is pdfTeX, Version 3.141592653-2.6-1.40.23 (TeX Live 2021/W32TeX) (preloaded format=latex)
 restricted \write18 enabled.
entering extended mode
(./input.tex
LaTeX2e &lt;2021-11-15&gt; patch level 1
L3 programming layer &lt;2022-02-24&gt;
(c:/texlive/2022/texmf-dist/tex/latex/standalone/standalone.cls
Document Class: standalone 2018/03/26 v1.3a Class to compile TeX sub-files stan
dalone
(c:/texlive/2022/texmf-dist/tex/latex/tools/shellesc.sty)
(c:/texlive/2022/texmf-dist/tex/generic/iftex/ifluatex.sty
(c:/texlive/2022/texmf-dist/tex/generic/iftex/iftex.sty))
(c:/texlive/2022/texmf-dist/tex/latex/xkeyval/xkeyval.sty
(c:/texlive/2022/texmf-dist/tex/generic/xkeyval/xkeyval.tex
(c:/texlive/2022/texmf-dist/tex/generic/xkeyval/xkvutils.tex
(c:/texlive/2022/texmf-dist/tex/generic/xkeyval/keyval.tex))))
(c:/texlive/2022/texmf-dist/tex/latex/standalone/standalone.cfg)
(c:/texlive/2022/texmf-dist/tex/latex/base/article.cls
Document Class: article 2021/10/04 v1.4n Standard LaTeX document class
(c:/texlive/2022/texmf-dist/tex/latex/base/size12.clo))
(c:/texlive/2022/texmf-dist/tex/latex/preview/preview.sty
(c:/texlive/2022/texmf-dist/tex/latex/preview/prtightpage.def)))
(c:/texlive/2022/texmf-dist/tex/latex/base/inputenc.sty

! LaTeX Error: File `utf8x.def' not found.

Type X to quit or <return> to proceed,
or enter new name. (Default extension: def)

Enter file name: 
! Emergency stop.
<read *=""> 
         
l.165 \endinput
               ^^M
No pages of output.
Transcript written on input.log.
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
This is pdfTeX, Version 3.141592653-2.6-1.40.23 (TeX Live 2021/W32TeX) (preloaded format=latex)
 restricted \write18 enabled.
entering extended mode
(./input.tex
LaTeX2e &lt;2021-11-15&gt; patch level 1
L3 programming layer &lt;2022-02-24&gt;
(c:/texlive/2022/texmf-dist/tex/latex/standalone/standalone.cls
Document Class: standalone 2018/03/26 v1.3a Class to compile TeX sub-files stan
dalone
(c:/texlive/2022/texmf-dist/tex/latex/tools/shellesc.sty)
(c:/texlive/2022/texmf-dist/tex/generic/iftex/ifluatex.sty
(c:/texlive/2022/texmf-dist/tex/generic/iftex/iftex.sty))
(c:/texlive/2022/texmf-dist/tex/latex/xkeyval/xkeyval.sty
(c:/texlive/2022/texmf-dist/tex/generic/xkeyval/xkeyval.tex
(c:/texlive/2022/texmf-dist/tex/generic/xkeyval/xkvutils.tex
(c:/texlive/2022/texmf-dist/tex/generic/xkeyval/keyval.tex))))
(c:/texlive/2022/texmf-dist/tex/latex/standalone/standalone.cfg)
(c:/texlive/2022/texmf-dist/tex/latex/base/article.cls
Document Class: article 2021/10/04 v1.4n Standard LaTeX document class
(c:/texlive/2022/texmf-dist/tex/latex/base/size12.clo))
(c:/texlive/2022/texmf-dist/tex/latex/preview/preview.sty
(c:/texlive/2022/texmf-dist/tex/latex/preview/prtightpage.def)))
(c:/texlive/2022/texmf-dist/tex/latex/base/inputenc.sty

! LaTeX Error: File `utf8x.def' not found.

Type X to quit or <return> to proceed,
or enter new name. (Default extension: def)

Enter file name: 
! Emergency stop.
<read *=""> 
         
l.165 \endinput
               ^^M
No pages of output.
Transcript written on input.log.
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
<h2 id="知识聚焦">知识聚焦</h2>
<h3 id="一烷烃">一、烷烃</h3>
<h4 id="烷烃的结构与性质">1. 烷烃的结构与性质</h4>
<p>​ 烷烃的结构与甲烷相似，分子中的碳原子都采用<span class="math inline">$\ce{sp^3}$</span>杂化，以伸向四面体 4
个顶点方向的<span class="math inline">$\ce{sp^3}$</span>杂化轨道与其他碳原子或氢原子结合，形成<span class="math inline"><em>σ</em></span>键。</p>
<p>​
甲烷是烷烃的代表物，纯净的甲烷是无色无臭的气体，难溶于水，密度比空气小，化学性质稳定，常温下不能被酸性<span class="math inline">$\ce{KMnO4}$</span>溶液氧化，不与强酸、强碱和溴的四氯化碳溶液反应。甲烷可以在空气中燃烧（可燃性）和能在光照下与氯气发生取代反应。甲烷到正丁烷都为气体，正戊烷到十七烷为液体，十八烷以后为固体。</p>
<h4 id="烷烃的命名">2. 烷烃的命名</h4>
<p>​ 对于含 5
个以上碳原子的烷烃，由于其同分异构体数目较多，通常采用系统命名法进行命名。</p>
<ol type="1">
<li>选定分子中最长的碳链为主链，按照主链碳原子数称该烷烃为某烷（甲乙丙丁戊己庚辛壬癸）。连接在主链上的支链作为取代基，出现两条或多条等长的碳链，则选择取代基数目多的为主链。</li>
<li>选定主链中离取代基最近的一端为起点，用阿拉伯数字给主链上的碳原子编号定位，以确定取代基在主链中的位置。</li>
<li>将取代基名称写在主链名称的前面，在取代基的前面用阿拉伯数字注明它在主链上所处的位置，并在数字和名称之间用短线隔开。</li>
<li>如果主链上有相同的取代基，可以将取代基合并，用汉字数字表示取代基的个数（只有一个取代基时省略个数），表示位置的阿拉伯数字之间用逗号隔开。</li>
</ol>
<p>​ 举例：2,3-二甲基已烷： <span class="math display">$$
\definesubmol\MG{-[0, .7]CH_3}
\chemfig{CH_3!\MG(-[2, .7]CH_3)!\MG(-[6,.7]CH_3)!\MG!\MG!\MG}
$$</span></p>
<h3 id="二烯烃">二、烯烃</h3>
<h4 id="烯烃的结构和性质">1. 烯烃的结构和性质</h4>
<p>​
烯烃的官能团是碳碳双键，烯烃只含有一个碳碳双键时，通式一般表示为<span class="math inline">$\ce{C_nH_{2n}}$</span>。</p>
<p>​ 乙烯是最简单的烯烃，分子中的碳原子均采用<span class="math inline">$\ce{sp^2}$</span>杂化，碳原子和氢原子之间都是<span class="math inline"><em>σ</em></span>键，碳原子和碳原子之间为双键，相邻两个键的键角均为<span class="math inline">$120\degree$</span>左右，分子中所有原子共面。纯净的乙烯为无色、稍有气味的气体，难溶于水，密度比空气的略小。乙烯具有可燃性，可以被酸性<span class="math inline">$\ce{KMnO4}$</span>溶液氧化，可以与溴发生加成反应，在一定条件下能发生加聚反应生成聚合物，除了乙烯以外在高温或光照条件下可以与纯卤素蒸汽发生取代反应，取代与不饱和键相邻接的碳原子上的氢才可以（取代
<span class="math inline">$\alpha-\ce{C}$</span> 上的氢原子）。</p>
<h4 id="烯烃的立体异构">2. 烯烃的立体异构</h4>
<p>​
通过碳碳双键连接的原子或原子团不能绕轴旋转会导致其空间排列方式不同，产生顺反异构现象。<strong>相同的原子或原子团位于双键同一侧是顺式结构，位于两侧是反式结构。</strong>如左图为顺-2-丁烯，右图为反-2-丁烯：
<span class="math display">$$
\chemname{\chemfig{C(-[3,.7]CH3)(-[5,.7]H)=C(-[1,.7]CH3)(-[7,.7]H)}}{顺-2-丁烯}\quad\chemname{\chemfig{C(-[3,.7]CH3)(-[5,.7]H)=C(-[1,.7]H)(-[7,.7]CH3)}}{反-2-丁烯}
$$</span></p>
<h3 id="三炔烃">三、炔烃</h3>
<p>​
炔烃的官能团是碳碳三键，炔烃分子中只含有一个碳碳三键时，通式一般表示为<span class="math inline">$\ce{C_nH_{2n-2}}$</span>。</p>
<p>​ 乙炔（俗称电石气）是最简单的炔烃，分子中的碳原子均采用<span class="math inline">$\ce{sp}$</span>杂化，碳原子和氢原子都是<span class="math inline"><em>σ</em></span>键，碳原子和碳原子之间为三键，相邻两个键角均为<span class="math inline">$180\degree$</span>，分子中所有原子共线。纯净的乙炔是无色、无臭的气体，微溶于水，易溶于有机溶剂。</p>
<p>​ 实验室使用电石（<span class="math inline">$\ce{CaC2}$</span>）与水反应制备乙炔，反应方程式<span class="math inline">$\ce{CaC2 + 2H2O -&gt; Ca(OH)2 + CH\bond{3}CH
^}$</span>。</p>
<blockquote>
<h4 id="实验室制备乙炔">实验室制备乙炔</h4>
<ol type="1">
<li>该反应剧烈，为减小反应速率，可用饱和氯化钠溶液代替水作为试剂。</li>
<li>因为电石与水接触后会变成小粉末，所以不能在启谱反应器或带小隔层的试管中随时终止反应。</li>
<li>反应制得的乙炔中常有<strong>硫化氢</strong>等杂质气体，可用硫酸铜溶液吸收，防止其干扰探究乙炔化学性质的实验。</li>
<li>乙炔属于可燃性气体，点燃前要验纯。</li>
</ol>
</blockquote>
<blockquote>
<h4 id="金属与碳化合物-水反应">金属与碳化合物 + 水反应</h4>
<ol type="1">
<li><p>根据金属确定生成的碱；</p></li>
<li><p>根据生成的碱判断需要的水的数量；</p></li>
<li><p>根据水的数量判断生成有机物的结构；</p>
<p>例：<span class="math inline">$\ce{Al4C3 + 12H2O -&gt; C3H12 (3CH4) ^
+ 12Al(OH)3}$</span>。</p></li>
</ol>
</blockquote>
<p>​
乙炔也可以被酸性高锰酸钾溶液氧化，生成与乙烯一样的产物，但乙烯反应速率更快（双键比三键更容易断裂）。同样，由于分子中含有不饱和的三键，乙炔可以和溴发生加成反应，分步如下：</p>
<p><span class="math display">$$
\schemestart
\chemfig{H-[0,.7]C~[0,.7]C-[0,.7]H} + \chemfig{Br-[0,.7]Br} \arrow
\chemname{\chemfig{H-[0,.7]C(-[6,.7]Br)=[0,.7]C(-[6,.7]Br)-[0,.7]H}}{1,2-二溴乙烯}
\schemestop
\newline\newline
\schemestart
\chemfig{H-[0,.7]C(-[6,.7]Br)=[0,.7]C(-[6,.7]Br)-[0,.7]H} +
\chemfig{Br-[0,.7]Br} \arrow
\chemname{\chemfig{H-[0,.7]C(-[2,.7]Br)(-[6,.7]Br)-[0,.7]C(-[2,.7]Br)(-[6,.7]Br)-[0,.7]H}}{1,1,2,2-四溴乙烷}
\schemestop
$$</span></p>
<p>​ 乙炔在一定条件下能与氢气、氯化氢、水等物质发生加成反应：</p>
<p><span class="math display">$$
\schemestart
\chemfig{CH~CH} + \chemfig{H-[0,.7]H} \arrow{-&gt;[\ce{c
H2SO4}][\ce{Delta}]} \chemfig{CH_2=[0,.7]CH_2}
\schemestop
\newline\newline
\schemestart
\chemfig{CH~CH} + \chemfig{H-[0,.7]Cl} \arrow{-&gt;[\ce{c
H2SO4}][\ce{Delta}]} \chemfig{CH_2=[0,.7]CHCl}
\schemestop
\newline\newline
\schemestart
\chemfig{CH~CH} + \chemfig{H-[0,.7]OH} \arrow{-&gt;[\ce{c
H2SO4}][\ce{Delta}]} \chemfig{CH_2=[0,.7]CHO}
\schemestop
\newline\newline
\schemestart
\chemfig{CH_2=[0,.7]CH-[0,.7]OH} \arrow
\chemfig{CH_3-[0,.7]CHO}\text{（乙烯醇不稳定，自动转变为乙醛，方程式合并）}
\schemestop
$$</span></p>
<p>​ 乙炔也可以发生加成反应，生成聚乙炔。</p>
<h3 id="四苯">四、苯</h3>
<p>​
烃类化合物中，分子中含有一个或多个苯环的化合物称为芳香烃，苯是最简单的芳香烃。</p>
<h4 id="苯的分子结构">1. 苯的分子结构</h4>
<p>​
苯是一种无色、有特殊气味的液体，有毒，不溶于水，易挥发，常温下密度小于水，是重要的化工原料和有机溶剂。</p>
<p>​
实验表明，苯不能与溴水或酸性高锰酸钾反应，溴在苯中的溶解度比在水中要大，所以苯能够在水中萃取溴。通过分子式<span class="math inline">$\ce{C6H6}$</span>可推测其分子不饱和程度很大，但是有不同的化学性质，证明苯有不同于烯烃、炔烃结构。</p>
<p>​ 研究表明，苯为平面正六边形结构，所有碳原子均为<span class="math inline">$\ce{sp^2}$</span>杂化，分别与氢原子和相邻的碳原子以<span class="math inline"><em>σ</em></span>键结合，键角均为<span class="math inline">$120\degree$</span>，键长均为<span class="math inline">$139 \ce{pm}$</span>，介于<span class="math inline">$\ce{C-C}$</span>和<span class="math inline">$\ce{C=C}$</span>之间，每个碳原子余下的<span class="math inline">$\ce{p}$</span>轨道垂直于碳、氢原子平面，相互平行重叠形成大<span class="math inline"><em>π</em></span>键，对称均匀分布在苯环平面上下。</p>
<h4 id="苯的化学性质">2. 苯的化学性质</h4>
<p>​ 苯的大<span class="math inline"><em>π</em></span>键比较稳定，通常不易发生加成反应。苯具有可燃性，空气中燃烧会产生浓重的黑烟。</p>
<p>​ 苯与溴在<span class="math inline">$\ce{FeBr3}$</span>催化下可以发生反应，生成溴苯（纯净的溴苯是无色液体，有特殊气味，不溶于水，密度比水大）：
<span class="math display">$$
\ce{\chemfig{*6([0,.5]-=-=-=-=)} + Br2 -&gt;[FeBr3]
\chemfig{*6([0,.5]-=(-[0,.7]Br)-=-=)} + HBr ^}
$$</span> &gt; #### 苯与液溴反应 &gt; &gt; 1. 使用冷凝管，冷凝回流；
&gt; 2. 生成红褐色 <span class="math inline">$\ce{HBr}$</span> 气体；
&gt; 3. 排气导管末端伸至 <span class="math inline">$\ce{AgNO3}$</span>
上方（不伸入，防倒吸），检验生成的 <span class="math inline">$\ce{HBr}$</span> 验证取代反应。 &gt; 4. 可以在
<span class="math inline">$\ce{AgNO3}$</span> 前通入 <span class="math inline">$\ce{CCl4}$</span> 溶液，吸收挥发的 <span class="math inline">$\ce{Br2}$</span> 气体，减少干扰。 &gt; 5.
提取产物时，向圆底烧瓶中加入 <span class="math inline">$\ce{NaOH}$</span> 溶液，分液，取上层油状液体（下层
<span class="math inline">$\ce{NaBr}$</span>）。 &gt; 6.
反应一般加入铁粉（与液溴直接反应）而无需先获取溴化铁。</p>
<p>​ 浓硫酸作用（催化、吸水）下，苯在<span class="math inline">$50-60\ce{°C}$</span>可以与浓硝酸反应，生成硝基苯（纯净的硝基苯是无色液体，有苦杏仁气味，不溶于水，密度比水大）：
<span class="math display">$$
\ce{\chemfig{*6([0,.5]-=-=-=-=)} + HO-NO2 -&gt;[\text{浓硫酸}][\Delta]
\chemfig{*6([0,.5]-=(-[0,.7]NO_2)-=-=)} + H2O}
$$</span> ​ 苯与浓硫酸在<span class="math inline">$70-80\ce{°C}$</span>可以发生磺化反应，生成苯磺酸（苯磺酸易溶于水，是一种强酸，可以看作是硫酸分子一个羟基被苯环取代的产物，可用于制备合成洗涤剂）：
<span class="math display">$$
\ce{\chemfig{*6([0,.5]-=-=-=-=)} + HO-SO3 &lt;=&gt;[\Delta]
\chemfig{*6([0,.5]-=(-[0,.7]SO_3H)-=-=)} + H2O}
$$</span> ​ 在以<span class="math inline">$\ce{Pt,
Ni}$</span>等为催化剂并加热下，苯能与氢气加成生成环己烷（环己烷亦可在一定催化剂如
<span class="math inline">$\ce{Pt}$</span> 的作用下脱氢为苯）： <span class="math display">$$
\ce{\chemfig{*6([0,.5]-=-=-=-=)} + 3H2 &lt;=&gt;[\text{催化剂}][\Delta]
\chemfig{*6([0,.5]------)}}
$$</span></p>
<h4 id="苯的同系物">3. 苯的同系物</h4>
<p>​ 苯环上的氢原子被烷基取代所得到的一系列产物称为苯的同系物，通式<span class="math inline">$\ce{C_nH_{2n-6}}$</span>，一般是具有类似苯的气味的无色液体，不溶于水，易溶于有机溶剂，密度比水小。</p>
<p>​
甲苯分子中有苯环和甲基，化学性质与苯和甲烷类似，又因为甲基与苯环存在相互作用，使苯环上与甲基处于邻、对位关系的氢原子活化而容易被取代，苯环也让甲基活化，所以有不同的化学性质。甲苯与浓硝酸和浓硫酸的混合物可以在加热条件下发生取代反应，生成一硝基取代物、二硝基取代物和三硝基取代物，取代位置均以甲苯的邻、对位为主，其中生成三硝基取代物（2,4,6-三硝基甲苯又名
TNT，是一种淡黄色晶体，不溶于水，是烈性炸药，广泛用于国防、采矿、筑路、水利建设等）的化学方程式为：
<span class="math display">$$
\ce{\chemfig{*6([0,.5]-=-=(-[2,.5]CH_3)-=)} + 3HO-NO2
-&gt;[\text{浓硫酸}][\Delta]
\chemfig{*6([0,.5]-(-[6,.5]NO_2)=-(-[0,.5]NO_2)=(-[2,.5]CH_3)-(-[4,.5]NO_2)=)}
+ 3H2O}
$$</span> ​
对于苯的同系物，如果侧链烃基中与苯环直接相连的碳原子上有氢原子，则能被酸性<span class="math inline">$\ce{KMnO4}$</span>溶液氧化，侧链烃基通常被氧化为羧基，因而鉴定苯的同系物可用酸性高锰酸钾溶液：
<span class="math display">$$
\schemestart
\chemfig{*6([0,.5]-=-(-[1,.5]CH_3)=-=)}\quad\quad\arrow{-&gt;[\ce{KMnO4/H+}]}\quad\chemfig{*6([0,.5]-=-(-[1,.5](=[2,.5]O)-[7,.5]OH)=-=)}
\schemestop
$$</span> ​
<strong>在光照的条件下</strong>，甲苯可以与氯气发生取代反应（发生在甲基上）。</p>
</read></return></read></return></read></return></read></return></read></return></read></return></read></return></read></return></read></return></read></return>]]></content>
      <categories>
        <category>High School</category>
        <category>Chemistry</category>
      </categories>
      <tags>
        <tag>School Notes</tag>
        <tag>Chemistry</tag>
        <tag>High School</tag>
      </tags>
  </entry>
  <entry>
    <title>有机结构</title>
    <url>/2022/02/07/chemistry/BK%209%20%E6%9C%89%E6%9C%BA%E7%BB%93%E6%9E%84/P1%20%E6%9C%89%E6%9C%BA%E7%BB%93%E6%9E%84/</url>
    <content><![CDATA[Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
This is pdfTeX, Version 3.141592653-2.6-1.40.23 (TeX Live 2021/W32TeX) (preloaded format=latex)
 restricted \write18 enabled.
entering extended mode
(./input.tex
LaTeX2e &lt;2021-11-15&gt; patch level 1
L3 programming layer &lt;2022-02-24&gt;
(c:/texlive/2022/texmf-dist/tex/latex/standalone/standalone.cls
Document Class: standalone 2018/03/26 v1.3a Class to compile TeX sub-files stan
dalone
(c:/texlive/2022/texmf-dist/tex/latex/tools/shellesc.sty)
(c:/texlive/2022/texmf-dist/tex/generic/iftex/ifluatex.sty
(c:/texlive/2022/texmf-dist/tex/generic/iftex/iftex.sty))
(c:/texlive/2022/texmf-dist/tex/latex/xkeyval/xkeyval.sty
(c:/texlive/2022/texmf-dist/tex/generic/xkeyval/xkeyval.tex
(c:/texlive/2022/texmf-dist/tex/generic/xkeyval/xkvutils.tex
(c:/texlive/2022/texmf-dist/tex/generic/xkeyval/keyval.tex))))
(c:/texlive/2022/texmf-dist/tex/latex/standalone/standalone.cfg)
(c:/texlive/2022/texmf-dist/tex/latex/base/article.cls
Document Class: article 2021/10/04 v1.4n Standard LaTeX document class
(c:/texlive/2022/texmf-dist/tex/latex/base/size12.clo))
(c:/texlive/2022/texmf-dist/tex/latex/preview/preview.sty
(c:/texlive/2022/texmf-dist/tex/latex/preview/prtightpage.def)))
(c:/texlive/2022/texmf-dist/tex/latex/base/inputenc.sty

! LaTeX Error: File `utf8x.def' not found.

Type X to quit or <return> to proceed,
or enter new name. (Default extension: def)

Enter file name: 
! Emergency stop.
<read *=""> 
         
l.165 \endinput
               ^^M
No pages of output.
Transcript written on input.log.
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
This is pdfTeX, Version 3.141592653-2.6-1.40.23 (TeX Live 2021/W32TeX) (preloaded format=latex)
 restricted \write18 enabled.
entering extended mode
(./input.tex
LaTeX2e &lt;2021-11-15&gt; patch level 1
L3 programming layer &lt;2022-02-24&gt;
(c:/texlive/2022/texmf-dist/tex/latex/standalone/standalone.cls
Document Class: standalone 2018/03/26 v1.3a Class to compile TeX sub-files stan
dalone
(c:/texlive/2022/texmf-dist/tex/latex/tools/shellesc.sty)
(c:/texlive/2022/texmf-dist/tex/generic/iftex/ifluatex.sty
(c:/texlive/2022/texmf-dist/tex/generic/iftex/iftex.sty))
(c:/texlive/2022/texmf-dist/tex/latex/xkeyval/xkeyval.sty
(c:/texlive/2022/texmf-dist/tex/generic/xkeyval/xkeyval.tex
(c:/texlive/2022/texmf-dist/tex/generic/xkeyval/xkvutils.tex
(c:/texlive/2022/texmf-dist/tex/generic/xkeyval/keyval.tex))))
(c:/texlive/2022/texmf-dist/tex/latex/standalone/standalone.cfg)
(c:/texlive/2022/texmf-dist/tex/latex/base/article.cls
Document Class: article 2021/10/04 v1.4n Standard LaTeX document class
(c:/texlive/2022/texmf-dist/tex/latex/base/size12.clo))
(c:/texlive/2022/texmf-dist/tex/latex/preview/preview.sty
(c:/texlive/2022/texmf-dist/tex/latex/preview/prtightpage.def)))
(c:/texlive/2022/texmf-dist/tex/latex/base/inputenc.sty

! LaTeX Error: File `utf8x.def' not found.

Type X to quit or <return> to proceed,
or enter new name. (Default extension: def)

Enter file name: 
! Emergency stop.
<read *=""> 
         
l.165 \endinput
               ^^M
No pages of output.
Transcript written on input.log.
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
This is pdfTeX, Version 3.141592653-2.6-1.40.23 (TeX Live 2021/W32TeX) (preloaded format=latex)
 restricted \write18 enabled.
entering extended mode
(./input.tex
LaTeX2e &lt;2021-11-15&gt; patch level 1
L3 programming layer &lt;2022-02-24&gt;
(c:/texlive/2022/texmf-dist/tex/latex/standalone/standalone.cls
Document Class: standalone 2018/03/26 v1.3a Class to compile TeX sub-files stan
dalone
(c:/texlive/2022/texmf-dist/tex/latex/tools/shellesc.sty)
(c:/texlive/2022/texmf-dist/tex/generic/iftex/ifluatex.sty
(c:/texlive/2022/texmf-dist/tex/generic/iftex/iftex.sty))
(c:/texlive/2022/texmf-dist/tex/latex/xkeyval/xkeyval.sty
(c:/texlive/2022/texmf-dist/tex/generic/xkeyval/xkeyval.tex
(c:/texlive/2022/texmf-dist/tex/generic/xkeyval/xkvutils.tex
(c:/texlive/2022/texmf-dist/tex/generic/xkeyval/keyval.tex))))
(c:/texlive/2022/texmf-dist/tex/latex/standalone/standalone.cfg)
(c:/texlive/2022/texmf-dist/tex/latex/base/article.cls
Document Class: article 2021/10/04 v1.4n Standard LaTeX document class
(c:/texlive/2022/texmf-dist/tex/latex/base/size12.clo))
(c:/texlive/2022/texmf-dist/tex/latex/preview/preview.sty
(c:/texlive/2022/texmf-dist/tex/latex/preview/prtightpage.def)))
(c:/texlive/2022/texmf-dist/tex/latex/base/inputenc.sty

! LaTeX Error: File `utf8x.def' not found.

Type X to quit or <return> to proceed,
or enter new name. (Default extension: def)

Enter file name: 
! Emergency stop.
<read *=""> 
         
l.165 \endinput
               ^^M
No pages of output.
Transcript written on input.log.
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
This is pdfTeX, Version 3.141592653-2.6-1.40.23 (TeX Live 2021/W32TeX) (preloaded format=latex)
 restricted \write18 enabled.
entering extended mode
(./input.tex
LaTeX2e &lt;2021-11-15&gt; patch level 1
L3 programming layer &lt;2022-02-24&gt;
(c:/texlive/2022/texmf-dist/tex/latex/standalone/standalone.cls
Document Class: standalone 2018/03/26 v1.3a Class to compile TeX sub-files stan
dalone
(c:/texlive/2022/texmf-dist/tex/latex/tools/shellesc.sty)
(c:/texlive/2022/texmf-dist/tex/generic/iftex/ifluatex.sty
(c:/texlive/2022/texmf-dist/tex/generic/iftex/iftex.sty))
(c:/texlive/2022/texmf-dist/tex/latex/xkeyval/xkeyval.sty
(c:/texlive/2022/texmf-dist/tex/generic/xkeyval/xkeyval.tex
(c:/texlive/2022/texmf-dist/tex/generic/xkeyval/xkvutils.tex
(c:/texlive/2022/texmf-dist/tex/generic/xkeyval/keyval.tex))))
(c:/texlive/2022/texmf-dist/tex/latex/standalone/standalone.cfg)
(c:/texlive/2022/texmf-dist/tex/latex/base/article.cls
Document Class: article 2021/10/04 v1.4n Standard LaTeX document class
(c:/texlive/2022/texmf-dist/tex/latex/base/size12.clo))
(c:/texlive/2022/texmf-dist/tex/latex/preview/preview.sty
(c:/texlive/2022/texmf-dist/tex/latex/preview/prtightpage.def)))
(c:/texlive/2022/texmf-dist/tex/latex/base/inputenc.sty

! LaTeX Error: File `utf8x.def' not found.

Type X to quit or <return> to proceed,
or enter new name. (Default extension: def)

Enter file name: 
! Emergency stop.
<read *=""> 
         
l.165 \endinput
               ^^M
No pages of output.
Transcript written on input.log.
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
This is pdfTeX, Version 3.141592653-2.6-1.40.23 (TeX Live 2021/W32TeX) (preloaded format=latex)
 restricted \write18 enabled.
entering extended mode
(./input.tex
LaTeX2e &lt;2021-11-15&gt; patch level 1
L3 programming layer &lt;2022-02-24&gt;
(c:/texlive/2022/texmf-dist/tex/latex/standalone/standalone.cls
Document Class: standalone 2018/03/26 v1.3a Class to compile TeX sub-files stan
dalone
(c:/texlive/2022/texmf-dist/tex/latex/tools/shellesc.sty)
(c:/texlive/2022/texmf-dist/tex/generic/iftex/ifluatex.sty
(c:/texlive/2022/texmf-dist/tex/generic/iftex/iftex.sty))
(c:/texlive/2022/texmf-dist/tex/latex/xkeyval/xkeyval.sty
(c:/texlive/2022/texmf-dist/tex/generic/xkeyval/xkeyval.tex
(c:/texlive/2022/texmf-dist/tex/generic/xkeyval/xkvutils.tex
(c:/texlive/2022/texmf-dist/tex/generic/xkeyval/keyval.tex))))
(c:/texlive/2022/texmf-dist/tex/latex/standalone/standalone.cfg)
(c:/texlive/2022/texmf-dist/tex/latex/base/article.cls
Document Class: article 2021/10/04 v1.4n Standard LaTeX document class
(c:/texlive/2022/texmf-dist/tex/latex/base/size12.clo))
(c:/texlive/2022/texmf-dist/tex/latex/preview/preview.sty
(c:/texlive/2022/texmf-dist/tex/latex/preview/prtightpage.def)))
(c:/texlive/2022/texmf-dist/tex/latex/base/inputenc.sty

! LaTeX Error: File `utf8x.def' not found.

Type X to quit or <return> to proceed,
or enter new name. (Default extension: def)

Enter file name: 
! Emergency stop.
<read *=""> 
         
l.165 \endinput
               ^^M
No pages of output.
Transcript written on input.log.
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
This is pdfTeX, Version 3.141592653-2.6-1.40.23 (TeX Live 2021/W32TeX) (preloaded format=latex)
 restricted \write18 enabled.
entering extended mode
(./input.tex
LaTeX2e &lt;2021-11-15&gt; patch level 1
L3 programming layer &lt;2022-02-24&gt;
(c:/texlive/2022/texmf-dist/tex/latex/standalone/standalone.cls
Document Class: standalone 2018/03/26 v1.3a Class to compile TeX sub-files stan
dalone
(c:/texlive/2022/texmf-dist/tex/latex/tools/shellesc.sty)
(c:/texlive/2022/texmf-dist/tex/generic/iftex/ifluatex.sty
(c:/texlive/2022/texmf-dist/tex/generic/iftex/iftex.sty))
(c:/texlive/2022/texmf-dist/tex/latex/xkeyval/xkeyval.sty
(c:/texlive/2022/texmf-dist/tex/generic/xkeyval/xkeyval.tex
(c:/texlive/2022/texmf-dist/tex/generic/xkeyval/xkvutils.tex
(c:/texlive/2022/texmf-dist/tex/generic/xkeyval/keyval.tex))))
(c:/texlive/2022/texmf-dist/tex/latex/standalone/standalone.cfg)
(c:/texlive/2022/texmf-dist/tex/latex/base/article.cls
Document Class: article 2021/10/04 v1.4n Standard LaTeX document class
(c:/texlive/2022/texmf-dist/tex/latex/base/size12.clo))
(c:/texlive/2022/texmf-dist/tex/latex/preview/preview.sty
(c:/texlive/2022/texmf-dist/tex/latex/preview/prtightpage.def)))
(c:/texlive/2022/texmf-dist/tex/latex/base/inputenc.sty

! LaTeX Error: File `utf8x.def' not found.

Type X to quit or <return> to proceed,
or enter new name. (Default extension: def)

Enter file name: 
! Emergency stop.
<read *=""> 
         
l.165 \endinput
               ^^M
No pages of output.
Transcript written on input.log.
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
This is pdfTeX, Version 3.141592653-2.6-1.40.23 (TeX Live 2021/W32TeX) (preloaded format=latex)
 restricted \write18 enabled.
entering extended mode
(./input.tex
LaTeX2e &lt;2021-11-15&gt; patch level 1
L3 programming layer &lt;2022-02-24&gt;
(c:/texlive/2022/texmf-dist/tex/latex/standalone/standalone.cls
Document Class: standalone 2018/03/26 v1.3a Class to compile TeX sub-files stan
dalone
(c:/texlive/2022/texmf-dist/tex/latex/tools/shellesc.sty)
(c:/texlive/2022/texmf-dist/tex/generic/iftex/ifluatex.sty
(c:/texlive/2022/texmf-dist/tex/generic/iftex/iftex.sty))
(c:/texlive/2022/texmf-dist/tex/latex/xkeyval/xkeyval.sty
(c:/texlive/2022/texmf-dist/tex/generic/xkeyval/xkeyval.tex
(c:/texlive/2022/texmf-dist/tex/generic/xkeyval/xkvutils.tex
(c:/texlive/2022/texmf-dist/tex/generic/xkeyval/keyval.tex))))
(c:/texlive/2022/texmf-dist/tex/latex/standalone/standalone.cfg)
(c:/texlive/2022/texmf-dist/tex/latex/base/article.cls
Document Class: article 2021/10/04 v1.4n Standard LaTeX document class
(c:/texlive/2022/texmf-dist/tex/latex/base/size12.clo))
(c:/texlive/2022/texmf-dist/tex/latex/preview/preview.sty
(c:/texlive/2022/texmf-dist/tex/latex/preview/prtightpage.def)))
(c:/texlive/2022/texmf-dist/tex/latex/base/inputenc.sty

! LaTeX Error: File `utf8x.def' not found.

Type X to quit or <return> to proceed,
or enter new name. (Default extension: def)

Enter file name: 
! Emergency stop.
<read *=""> 
         
l.165 \endinput
               ^^M
No pages of output.
Transcript written on input.log.
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
This is pdfTeX, Version 3.141592653-2.6-1.40.23 (TeX Live 2021/W32TeX) (preloaded format=latex)
 restricted \write18 enabled.
entering extended mode
(./input.tex
LaTeX2e &lt;2021-11-15&gt; patch level 1
L3 programming layer &lt;2022-02-24&gt;
(c:/texlive/2022/texmf-dist/tex/latex/standalone/standalone.cls
Document Class: standalone 2018/03/26 v1.3a Class to compile TeX sub-files stan
dalone
(c:/texlive/2022/texmf-dist/tex/latex/tools/shellesc.sty)
(c:/texlive/2022/texmf-dist/tex/generic/iftex/ifluatex.sty
(c:/texlive/2022/texmf-dist/tex/generic/iftex/iftex.sty))
(c:/texlive/2022/texmf-dist/tex/latex/xkeyval/xkeyval.sty
(c:/texlive/2022/texmf-dist/tex/generic/xkeyval/xkeyval.tex
(c:/texlive/2022/texmf-dist/tex/generic/xkeyval/xkvutils.tex
(c:/texlive/2022/texmf-dist/tex/generic/xkeyval/keyval.tex))))
(c:/texlive/2022/texmf-dist/tex/latex/standalone/standalone.cfg)
(c:/texlive/2022/texmf-dist/tex/latex/base/article.cls
Document Class: article 2021/10/04 v1.4n Standard LaTeX document class
(c:/texlive/2022/texmf-dist/tex/latex/base/size12.clo))
(c:/texlive/2022/texmf-dist/tex/latex/preview/preview.sty
(c:/texlive/2022/texmf-dist/tex/latex/preview/prtightpage.def)))
(c:/texlive/2022/texmf-dist/tex/latex/base/inputenc.sty

! LaTeX Error: File `utf8x.def' not found.

Type X to quit or <return> to proceed,
or enter new name. (Default extension: def)

Enter file name: 
! Emergency stop.
<read *=""> 
         
l.165 \endinput
               ^^M
No pages of output.
Transcript written on input.log.
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
This is pdfTeX, Version 3.141592653-2.6-1.40.23 (TeX Live 2021/W32TeX) (preloaded format=latex)
 restricted \write18 enabled.
entering extended mode
(./input.tex
LaTeX2e &lt;2021-11-15&gt; patch level 1
L3 programming layer &lt;2022-02-24&gt;
(c:/texlive/2022/texmf-dist/tex/latex/standalone/standalone.cls
Document Class: standalone 2018/03/26 v1.3a Class to compile TeX sub-files stan
dalone
(c:/texlive/2022/texmf-dist/tex/latex/tools/shellesc.sty)
(c:/texlive/2022/texmf-dist/tex/generic/iftex/ifluatex.sty
(c:/texlive/2022/texmf-dist/tex/generic/iftex/iftex.sty))
(c:/texlive/2022/texmf-dist/tex/latex/xkeyval/xkeyval.sty
(c:/texlive/2022/texmf-dist/tex/generic/xkeyval/xkeyval.tex
(c:/texlive/2022/texmf-dist/tex/generic/xkeyval/xkvutils.tex
(c:/texlive/2022/texmf-dist/tex/generic/xkeyval/keyval.tex))))
(c:/texlive/2022/texmf-dist/tex/latex/standalone/standalone.cfg)
(c:/texlive/2022/texmf-dist/tex/latex/base/article.cls
Document Class: article 2021/10/04 v1.4n Standard LaTeX document class
(c:/texlive/2022/texmf-dist/tex/latex/base/size12.clo))
(c:/texlive/2022/texmf-dist/tex/latex/preview/preview.sty
(c:/texlive/2022/texmf-dist/tex/latex/preview/prtightpage.def)))
(c:/texlive/2022/texmf-dist/tex/latex/base/inputenc.sty

! LaTeX Error: File `utf8x.def' not found.

Type X to quit or <return> to proceed,
or enter new name. (Default extension: def)

Enter file name: 
! Emergency stop.
<read *=""> 
         
l.165 \endinput
               ^^M
No pages of output.
Transcript written on input.log.
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
This is pdfTeX, Version 3.141592653-2.6-1.40.23 (TeX Live 2021/W32TeX) (preloaded format=latex)
 restricted \write18 enabled.
entering extended mode
(./input.tex
LaTeX2e &lt;2021-11-15&gt; patch level 1
L3 programming layer &lt;2022-02-24&gt;
(c:/texlive/2022/texmf-dist/tex/latex/standalone/standalone.cls
Document Class: standalone 2018/03/26 v1.3a Class to compile TeX sub-files stan
dalone
(c:/texlive/2022/texmf-dist/tex/latex/tools/shellesc.sty)
(c:/texlive/2022/texmf-dist/tex/generic/iftex/ifluatex.sty
(c:/texlive/2022/texmf-dist/tex/generic/iftex/iftex.sty))
(c:/texlive/2022/texmf-dist/tex/latex/xkeyval/xkeyval.sty
(c:/texlive/2022/texmf-dist/tex/generic/xkeyval/xkeyval.tex
(c:/texlive/2022/texmf-dist/tex/generic/xkeyval/xkvutils.tex
(c:/texlive/2022/texmf-dist/tex/generic/xkeyval/keyval.tex))))
(c:/texlive/2022/texmf-dist/tex/latex/standalone/standalone.cfg)
(c:/texlive/2022/texmf-dist/tex/latex/base/article.cls
Document Class: article 2021/10/04 v1.4n Standard LaTeX document class
(c:/texlive/2022/texmf-dist/tex/latex/base/size12.clo))
(c:/texlive/2022/texmf-dist/tex/latex/preview/preview.sty
(c:/texlive/2022/texmf-dist/tex/latex/preview/prtightpage.def)))
(c:/texlive/2022/texmf-dist/tex/latex/base/inputenc.sty

! LaTeX Error: File `utf8x.def' not found.

Type X to quit or <return> to proceed,
or enter new name. (Default extension: def)

Enter file name: 
! Emergency stop.
<read *=""> 
         
l.165 \endinput
               ^^M
No pages of output.
Transcript written on input.log.
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
This is pdfTeX, Version 3.141592653-2.6-1.40.23 (TeX Live 2021/W32TeX) (preloaded format=latex)
 restricted \write18 enabled.
entering extended mode
(./input.tex
LaTeX2e &lt;2021-11-15&gt; patch level 1
L3 programming layer &lt;2022-02-24&gt;
(c:/texlive/2022/texmf-dist/tex/latex/standalone/standalone.cls
Document Class: standalone 2018/03/26 v1.3a Class to compile TeX sub-files stan
dalone
(c:/texlive/2022/texmf-dist/tex/latex/tools/shellesc.sty)
(c:/texlive/2022/texmf-dist/tex/generic/iftex/ifluatex.sty
(c:/texlive/2022/texmf-dist/tex/generic/iftex/iftex.sty))
(c:/texlive/2022/texmf-dist/tex/latex/xkeyval/xkeyval.sty
(c:/texlive/2022/texmf-dist/tex/generic/xkeyval/xkeyval.tex
(c:/texlive/2022/texmf-dist/tex/generic/xkeyval/xkvutils.tex
(c:/texlive/2022/texmf-dist/tex/generic/xkeyval/keyval.tex))))
(c:/texlive/2022/texmf-dist/tex/latex/standalone/standalone.cfg)
(c:/texlive/2022/texmf-dist/tex/latex/base/article.cls
Document Class: article 2021/10/04 v1.4n Standard LaTeX document class
(c:/texlive/2022/texmf-dist/tex/latex/base/size12.clo))
(c:/texlive/2022/texmf-dist/tex/latex/preview/preview.sty
(c:/texlive/2022/texmf-dist/tex/latex/preview/prtightpage.def)))
(c:/texlive/2022/texmf-dist/tex/latex/base/inputenc.sty

! LaTeX Error: File `utf8x.def' not found.

Type X to quit or <return> to proceed,
or enter new name. (Default extension: def)

Enter file name: 
! Emergency stop.
<read *=""> 
         
l.165 \endinput
               ^^M
No pages of output.
Transcript written on input.log.
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
This is pdfTeX, Version 3.141592653-2.6-1.40.23 (TeX Live 2021/W32TeX) (preloaded format=latex)
 restricted \write18 enabled.
entering extended mode
(./input.tex
LaTeX2e &lt;2021-11-15&gt; patch level 1
L3 programming layer &lt;2022-02-24&gt;
(c:/texlive/2022/texmf-dist/tex/latex/standalone/standalone.cls
Document Class: standalone 2018/03/26 v1.3a Class to compile TeX sub-files stan
dalone
(c:/texlive/2022/texmf-dist/tex/latex/tools/shellesc.sty)
(c:/texlive/2022/texmf-dist/tex/generic/iftex/ifluatex.sty
(c:/texlive/2022/texmf-dist/tex/generic/iftex/iftex.sty))
(c:/texlive/2022/texmf-dist/tex/latex/xkeyval/xkeyval.sty
(c:/texlive/2022/texmf-dist/tex/generic/xkeyval/xkeyval.tex
(c:/texlive/2022/texmf-dist/tex/generic/xkeyval/xkvutils.tex
(c:/texlive/2022/texmf-dist/tex/generic/xkeyval/keyval.tex))))
(c:/texlive/2022/texmf-dist/tex/latex/standalone/standalone.cfg)
(c:/texlive/2022/texmf-dist/tex/latex/base/article.cls
Document Class: article 2021/10/04 v1.4n Standard LaTeX document class
(c:/texlive/2022/texmf-dist/tex/latex/base/size12.clo))
(c:/texlive/2022/texmf-dist/tex/latex/preview/preview.sty
(c:/texlive/2022/texmf-dist/tex/latex/preview/prtightpage.def)))
(c:/texlive/2022/texmf-dist/tex/latex/base/inputenc.sty

! LaTeX Error: File `utf8x.def' not found.

Type X to quit or <return> to proceed,
or enter new name. (Default extension: def)

Enter file name: 
! Emergency stop.
<read *=""> 
         
l.165 \endinput
               ^^M
No pages of output.
Transcript written on input.log.
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
This is pdfTeX, Version 3.141592653-2.6-1.40.23 (TeX Live 2021/W32TeX) (preloaded format=latex)
 restricted \write18 enabled.
entering extended mode
(./input.tex
LaTeX2e &lt;2021-11-15&gt; patch level 1
L3 programming layer &lt;2022-02-24&gt;
(c:/texlive/2022/texmf-dist/tex/latex/standalone/standalone.cls
Document Class: standalone 2018/03/26 v1.3a Class to compile TeX sub-files stan
dalone
(c:/texlive/2022/texmf-dist/tex/latex/tools/shellesc.sty)
(c:/texlive/2022/texmf-dist/tex/generic/iftex/ifluatex.sty
(c:/texlive/2022/texmf-dist/tex/generic/iftex/iftex.sty))
(c:/texlive/2022/texmf-dist/tex/latex/xkeyval/xkeyval.sty
(c:/texlive/2022/texmf-dist/tex/generic/xkeyval/xkeyval.tex
(c:/texlive/2022/texmf-dist/tex/generic/xkeyval/xkvutils.tex
(c:/texlive/2022/texmf-dist/tex/generic/xkeyval/keyval.tex))))
(c:/texlive/2022/texmf-dist/tex/latex/standalone/standalone.cfg)
(c:/texlive/2022/texmf-dist/tex/latex/base/article.cls
Document Class: article 2021/10/04 v1.4n Standard LaTeX document class
(c:/texlive/2022/texmf-dist/tex/latex/base/size12.clo))
(c:/texlive/2022/texmf-dist/tex/latex/preview/preview.sty
(c:/texlive/2022/texmf-dist/tex/latex/preview/prtightpage.def)))
(c:/texlive/2022/texmf-dist/tex/latex/base/inputenc.sty

! LaTeX Error: File `utf8x.def' not found.

Type X to quit or <return> to proceed,
or enter new name. (Default extension: def)

Enter file name: 
! Emergency stop.
<read *=""> 
         
l.165 \endinput
               ^^M
No pages of output.
Transcript written on input.log.
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
This is pdfTeX, Version 3.141592653-2.6-1.40.23 (TeX Live 2021/W32TeX) (preloaded format=latex)
 restricted \write18 enabled.
entering extended mode
(./input.tex
LaTeX2e &lt;2021-11-15&gt; patch level 1
L3 programming layer &lt;2022-02-24&gt;
(c:/texlive/2022/texmf-dist/tex/latex/standalone/standalone.cls
Document Class: standalone 2018/03/26 v1.3a Class to compile TeX sub-files stan
dalone
(c:/texlive/2022/texmf-dist/tex/latex/tools/shellesc.sty)
(c:/texlive/2022/texmf-dist/tex/generic/iftex/ifluatex.sty
(c:/texlive/2022/texmf-dist/tex/generic/iftex/iftex.sty))
(c:/texlive/2022/texmf-dist/tex/latex/xkeyval/xkeyval.sty
(c:/texlive/2022/texmf-dist/tex/generic/xkeyval/xkeyval.tex
(c:/texlive/2022/texmf-dist/tex/generic/xkeyval/xkvutils.tex
(c:/texlive/2022/texmf-dist/tex/generic/xkeyval/keyval.tex))))
(c:/texlive/2022/texmf-dist/tex/latex/standalone/standalone.cfg)
(c:/texlive/2022/texmf-dist/tex/latex/base/article.cls
Document Class: article 2021/10/04 v1.4n Standard LaTeX document class
(c:/texlive/2022/texmf-dist/tex/latex/base/size12.clo))
(c:/texlive/2022/texmf-dist/tex/latex/preview/preview.sty
(c:/texlive/2022/texmf-dist/tex/latex/preview/prtightpage.def)))
(c:/texlive/2022/texmf-dist/tex/latex/base/inputenc.sty

! LaTeX Error: File `utf8x.def' not found.

Type X to quit or <return> to proceed,
or enter new name. (Default extension: def)

Enter file name: 
! Emergency stop.
<read *=""> 
         
l.165 \endinput
               ^^M
No pages of output.
Transcript written on input.log.
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
<h2 id="知识聚焦">知识聚焦</h2>
<h3 id="一有机化合物的分类方法">一、有机化合物的分类方法</h3>
<h4 id="按照碳骨架分类">1. 按照碳骨架分类</h4>
<p>​
根据碳原子组成的分子骨架，有机化合物可以分成链状化合物和环状化合物。链状化合物可以继续细分为脂肪烃和脂肪烃衍生物，脂环化合物包括脂环烃和脂环烃衍生物，芳香族化合物包括芳香烃和芳香烃衍生物。</p>
<pre class="mermaid">graph LR;
有机化合物 --&gt; 链状化合物
链状化合物 --&gt; 脂肪烃
链状化合物 --&gt; 脂肪烃衍生物
有机化合物 --&gt; 环状化合物
环状化合物 --&gt; 脂环化合物
环状化合物 --&gt; 芳香族化合物
脂环化合物 --&gt; 脂环烃
脂环化合物 --&gt; 脂环烃衍生物
芳香族化合物 --&gt; 芳香烃
芳香族化合物 --&gt; 芳香烃衍生物</pre>
<h4 id="按照官能团分类">2. 按照官能团分类</h4>
<p>​
烃分子中的氢原子可以被其他原子或原子团取代，得到烃的衍生物。像甲醇羟基决定其常温下为液体，与水互溶，与羧酸反应生成酯这样有机化合物特性的原子或原子团叫<strong>官能团</strong>，如下是常见官能团：</p>
<table>
<colgroup>
<col style="width: 5%">
<col style="width: 4%">
<col style="width: 32%">
<col style="width: 26%">
<col style="width: 32%">
</colgroup>
<thead>
<tr class="header">
<th>类别</th>
<th>具体名称</th>
<th>官能团</th>
<th>代表物</th>
<th>鉴别方法</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>烃</td>
<td>烷烃</td>
<td>-</td>
<td>甲烷 <span class="math inline">$\ce{CH4}$</span></td>
<td>-</td>
</tr>
<tr class="even">
<td></td>
<td>烯烃</td>
<td>碳碳双键 <span class="math inline">$\chemfig{C(-[3,0.5])(-[5,0.5])=[0,.7]C(-[7,0.5])(-[9,0.5])}$</span></td>
<td>乙烯 <span class="math inline">$\ce{CH2\bond{=}CH2}$</span></td>
<td><span class="math inline">$\ce{Br2}$</span>
的四氯化碳溶液：红棕色退去；<br>酸性 <span class="math inline">$\ce{KMnO4}$</span> 溶液：紫红色退去。</td>
</tr>
<tr class="odd">
<td></td>
<td>炔烃</td>
<td>碳碳三键 <span class="math inline">$\chemfig{C(-[8,.5])~[4,.7]C(-[4,.5])}$</span></td>
<td>乙炔 <span class="math inline">$\ce{CH\bond{3}CH}$</span></td>
<td><span class="math inline">$\ce{Br2}$</span>
的四氯化碳溶液：红棕色退去<br>酸性 <span class="math inline">$\ce{KMnO4}$</span> 溶液：紫红色退去。</td>
</tr>
<tr class="even">
<td></td>
<td>芳香烃</td>
<td>-</td>
<td>苯<br><span class="math inline">$\chemfig{*6([0,.5]-=-=-=)}$</span></td>
<td></td>
</tr>
<tr class="odd">
<td>烃的衍生物</td>
<td>卤代烃</td>
<td>碳卤键 <span class="math inline">$\chemfig{C(-[8,.7]X)(-[2,.5])(-[6,.5])(-[4,.3])}$</span></td>
<td>溴乙烷 <span class="math inline">$\ce{CH3CH2Br}$</span></td>
<td><span class="math inline">$\ce{NaOH}$</span>
溶液、稀硝酸和硝酸银溶液：生成沉淀。</td>
</tr>
<tr class="even">
<td></td>
<td>醇</td>
<td>羟基 <span class="math inline">$\ce{-OH}$</span></td>
<td>乙醇 <span class="math inline">$\ce{CH3CH2OH}$</span></td>
<td><span class="math inline">$\ce{Na}$</span>：有氢气放出；<br>与乙酸、浓硫酸反应：有水果香味物质生成。</td>
</tr>
<tr class="odd">
<td></td>
<td>酚</td>
<td>羟基 <span class="math inline">$\ce{-OH}$</span></td>
<td>苯酚<br><span class="math inline">$\chemfig{*6([0,.5]-=-=(-[2,.5]OH)-=)}$</span></td>
<td><span class="math inline">$\ce{FeCl3}$</span>
溶液：紫色；<br>与浓溴水反应：生成白色沉淀。</td>
</tr>
<tr class="even">
<td></td>
<td>醚</td>
<td>醚键<br><span class="math inline">$\chemfig{O(-[7,.7]R)(-[5,.7]R)}$</span></td>
<td>乙醚 <span class="math inline">$\ce{CH3CH2OCH2CH3}$</span></td>
<td></td>
</tr>
<tr class="odd">
<td></td>
<td>醛</td>
<td>醛基<br><span class="math inline">$\chemfig{C(-[0,.7]H)(=[2,.7]O)}$</span></td>
<td>乙醛 <span class="math inline">$\ce{CH3CHO}$</span></td>
<td>银氨溶液：有银镜生成；<br>新制 <span class="math inline">$\ce{Cu(OH)2}$</span> 溶液：砖红色沉淀。</td>
</tr>
<tr class="even">
<td></td>
<td>酮</td>
<td>酮羰基<br><span class="math inline">$\chemfig{C(=[2,.7]O)(-[7,.7]C)(-[5,.7]C)}$</span></td>
<td>丙酮 <span class="math inline">$\ce{CH3COCH3}$</span></td>
<td></td>
</tr>
<tr class="odd">
<td></td>
<td>羧酸</td>
<td>羧基<br><span class="math inline">$\chemfig{C(=[2,.7]O)(-[7,.7]OH)(-[5,.7]R)}$</span></td>
<td>乙酸 <span class="math inline">$\ce{CH3COOH}$</span></td>
<td>紫色石蕊试剂：变红；<br><span class="math inline">$\ce{NaHCO3}$</span> 溶液：生成 <span class="math inline">$\ce{CO2}$</span> 气体。</td>
</tr>
<tr class="even">
<td></td>
<td>酯</td>
<td>酯基<br><span class="math inline">$\chemfig{C(=[2,.7]O)(-[7,.7]OR)(-[5,.7]R')}$</span></td>
<td>乙酸乙酯 <span class="math inline">$\ce{CH3COOCH2CH3}$</span></td>
<td></td>
</tr>
<tr class="odd">
<td></td>
<td>胺</td>
<td>氨基<span class="math inline">$\ce{-NH2}$</span></td>
<td>甲胺 <span class="math inline">$\ce{CH3NH2}$</span></td>
<td></td>
</tr>
<tr class="even">
<td></td>
<td>酰胺</td>
<td>酰胺基（酰胺基的胺基可以被取代氢）<br><span class="math inline">$\chemfig{C(=[2,.7]O)(-[7,.7]NH_2)(-[5,.7]R)}$</span></td>
<td>乙酰胺 <span class="math inline">$\ce{CH3CONH2}$</span></td>
<td></td>
</tr>
<tr class="odd">
<td></td>
<td>氰</td>
<td>氰基 <span class="math inline">$\ce{-CN}$</span></td>
<td>氰化钾 <span class="math inline">$\ce{KCN}$</span></td>
<td>稀碱溶液，加热：有 <span class="math inline">$\ce{NH3}$</span>
放出。</td>
</tr>
</tbody>
</table>
<blockquote>
<h4 id="有机化合物结构的表示方法">有机化合物结构的表示方法</h4>
<table>
<colgroup>
<col style="width: 6%">
<col style="width: 24%">
<col style="width: 24%">
<col style="width: 24%">
<col style="width: 19%">
</colgroup>
<thead>
<tr class="header">
<th>表示方法</th>
<th>实例</th>
<th>含义</th>
<th>优点</th>
<th>缺点</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>分子式</td>
<td><span class="math inline">$\ce{C3H8}$</span></td>
<td>用元素符号和数字表示物质组成的式子</td>
<td>反映一个分子中原子的种类和数目</td>
<td>无法体现有机化合物的实际结构</td>
</tr>
<tr class="even">
<td>最简式（实验式）</td>
<td><span class="math inline">$\ce{C3H8}$</span></td>
<td>表示组成物质各元素原子最简整数比的式子</td>
<td>能表明分子组成中原子数目比，用于研究有相同组成的物质</td>
<td>不能真实反映物质的分子组成</td>
</tr>
<tr class="odd">
<td>电子式</td>
<td><img src="https://raw.githubusercontent.com/PassionPenguin/picgo-database/main/%E4%B8%99%E7%83%B7%E7%94%B5%E5%AD%90%E5%BC%8F.png" alt="丙烷电子式" style="width:96px;"></td>
<td>用小黑点或 <span class="math inline">×</span>
等符号代替电子，表示原子最外层电子成键情况的式子</td>
<td>能够表明分子的组成、分子中原子间的成键数目、原子是否能形成稳定的电子层结构</td>
<td>不能表明分子的空间结构</td>
</tr>
<tr class="even">
<td>结构式</td>
<td><span class="math inline">$\chemfig{C(-[3,.5]H)(-[5,.5]H)-[0,.7]C(-[2,.5]H)(-[6,.5]H)-[0,.7]C(-[1,.5]H)(-[7,.5]H)}$</span></td>
<td>用短线代替原子间公用电子对</td>
<td>表示分子的组成以及分子中原子的结合或排列顺序</td>
<td>不能表明分子的空间结构，难以书写复杂的分子结构</td>
</tr>
<tr class="odd">
<td>结构简式</td>
<td><span class="math inline">$\ce{CH3CH2CH3}$</span></td>
<td>将结构式中表示共价键的短线删去，把碳原子连接的氢原子合并为碳氢原子团</td>
<td>书写方便，能够表示出分子结构的情况，适用范围广</td>
<td>无法表示各原子间空间位置关系</td>
</tr>
<tr class="even">
<td>键线式</td>
<td><span class="math inline">$\chemfig{-[1,.5]-[7,.5]}$</span></td>
<td>将碳氢元素符号省略，只保留键的连接情况与官能团。<strong>不能省略碳卤键等键的短线</strong>。</td>
<td>比结构简式更为简单明了</td>
<td>无法表示各原子间空间位置关系</td>
</tr>
<tr class="odd">
<td>球棍模型</td>
<td><img src="https://raw.githubusercontent.com/PassionPenguin/picgo-database/main/%E4%B8%99%E7%83%B7%E7%90%83%E6%A3%8D%E6%A8%A1%E5%9E%8B.png" alt="丙烷球棍模型" style="width:96px;"></td>
<td>用球棍表示原子间的结构。</td>
<td>能够清楚地表示出分子内原子间的化学键和键型</td>
<td>较难绘画</td>
</tr>
<tr class="even">
<td>空间填充模型</td>
<td><img src="https://raw.githubusercontent.com/PassionPenguin/picgo-database/main/%E4%B8%99%E7%83%B7%E7%A9%BA%E9%97%B4%E5%A1%AB%E5%85%85%E6%A8%A1%E5%9E%8B.png" alt="丙烷空间填充模型" style="width:96px;"></td>
<td>用球表示原子间的连接方式</td>
<td>表示出分子内原子的体积相对大小以及原子间的相对位置</td>
<td>较难绘画</td>
</tr>
</tbody>
</table>
</blockquote>
<h3 id="二有机化合物中的共价键">二、有机化合物中的共价键</h3>
<h4 id="共价键的类型">1. 共价键的类型</h4>
<p>​ 有机化合物中的共价键有两种基本类型：<span class="math inline"><em>σ</em></span>键和<span class="math inline"><em>π</em></span>键，有机化合物中不管以何种方式成键，碳原子总是形成
4 条共价键，氢原子只能形成一条，氧原子形成 2 条，氮原子形成 3
条。<em>碳原子成键方式的多样性导致了有机物的结构多样性，是有机物种类繁多、数量巨大的主要原因</em>。</p>
<blockquote>
<h3 id="成键数目">成键数目</h3>
<p>​ 有机物中，<span class="math inline">$\ce{C}$</span>成四个价键，<span class="math inline">$\ce{H,X}$</span>成一个价键，<span class="math inline">$\ce{O}$</span>成两个价键，<span class="math inline">$\ce{N}$</span>成三个价键。</p>
</blockquote>
<blockquote>
<h3 id="共面共线">共面共线</h3>
<p>​ 与碳碳三键直接相连的原子有四个（<span class="math inline">$\ce{R-C\bond{3}C-R}$</span>），共线。</p>
<p>​ 与碳碳双键直接相连的碳原子共面。</p>
</blockquote>
<h4 id="共价键的极性与有机反应">2. 共价键的极性与有机反应</h4>
<p>​
由于不同成键原子间电负性的差异，共用电子对会发生偏移，偏移程度越大，共价键的极性越强，在反应中越容易发生断裂，因此有机化合物的官能团及其邻近的化合键往往是发生化学反应的活性部位。</p>
<p>​
共价键的断裂需要吸收能量，且有机化合物分子中共价键断裂的位置存在多种可能，相比无机反应，有机反应一般速率小，副反应多，产物复杂。</p>
<h3 id="三有机化合物的同系物和同分异构现象">三、有机化合物的同系物和同分异构现象</h3>
<p>​
我们把结构、化学性质相似（<strong>官能团数量种类一致</strong>），通式相同，组成上相差
1 个或若干个<span class="math inline">$\ce{CH2}$</span>原子团，具有相同官能团的化合物称为同系物。</p>
<p>​
化合物具有相同的分子式，但有不同的结构的现象即为<strong>同分异构现象</strong>，具有同分异构现象的化合物互称同分异构体。有机化合物的同分异构现象主要包括<strong>构造异构（碳架异构与位置异构）和立体异构（顺反异构和对映异构）</strong>。同分异构现象在有机化合物中十分普遍，也是有机化合物数量非常庞大的原因之一。</p>
<blockquote>
<h4 id="同分异构现象">同分异构现象</h4>
<h5 id="碳架异构">碳架异构</h5>
<p>​ 由于分子中碳原子排列顺序不同而产生的同分异构体。</p>
<h5 id="位置异构">位置异构</h5>
<p>​ 由于官能团位置不同而产生的同分异构体。</p>
<h5 id="官能团异构">官能团异构</h5>
<p>​ 由于官能团不同而产生的同分异构体。</p>
<h5 id="顺反异构">顺反异构</h5>
<p>​ 当烯烃中<span class="math inline">$\ce{C=C}$</span>两个碳原子都连有两个不同原子或基团，由于双键不能自由旋转而产生的同分异构体。</p>
<h5 id="对映异构">对映异构</h5>
<p>​ 构造相同，构型不同，互成镜像对映关系的立体异构现象。</p>
</blockquote>
<blockquote>
<h3 id="确定同分异构体数量与书写同分异构体的常用方法">确定同分异构体数量与书写同分异构体的常用方法</h3>
<h5 id="取代法等效氢">==1. 取代法==（<strong>等效氢</strong>）</h5>
<p>​
本质是将同分异构体看作是由官能团取代烃中的不同氢而形成的（适用于卤代烃、醇、醛、羧酸等有机物）：</p>
<ol type="1">
<li>写出有机物的碳链结构。</li>
<li>利用等效氢规律判断可以被取代的氢的种类（=取代位置数=同分异构体数）。</li>
</ol>
<hr>
<h5 id="插入法类似">2. 插入法（类似）</h5>
<p>​
适用于酯、醚、酮、烯、炔等官能团镶在碳链中的有机物同分异构体的书写。</p>
<ol type="1">
<li>将官能团取出。</li>
<li>写出剩下部分的碳链结构。</li>
<li>利用对称规律找出可插入官能团的位置（对称位置不重复插入）。</li>
</ol>
<hr>
<h5 id="基团组装法适用于特殊题目">3. 基团组装法（适用于特殊题目）</h5>
<p>​
通常在给出组成有机物的基团，按照题意推出有机物的可能结构种类或结构简式的题目中方便。</p>
<p>​ 首先，先确定基团等级，按游离键多少可将基团分为三类：</p>
<ol type="1">
<li><p>端点基（只含一个游离键 ，如卤原子、<span class="math inline">$\ce{-CH3}$</span>、<span class="math inline">$\ce{-OH}$</span> ……）</p></li>
<li><p>桥梁基（含二个游离键，如<span class="math inline">$\ce{-CH2-}$</span>、<span class="math inline">$\ce{-O-}$</span>、<span class="math inline">$\ce{-⏣-}$</span>……）</p></li>
<li><p>中央基（含三个及以上游离键，如<span class="math inline">$\chemfig{C(-[0,.5]H)(-[2,.5]H)(-[4,.5]H)(-[6,.5]H)}$</span>）</p></li>
</ol>
<p>​
随后构建分子雏形，将所有端点基与中央基连接。若含有多个中央基，则先彼此连接，再接端点基。</p>
<p>​ 第三编号定位，对可插入桥梁基的碳碳键位置进行编号，以示区别。</p>
<p>​
最后插入组合，按一定的方式将桥梁基插入端点基与中央基之间，即得可能的结构。</p>
<hr>
<h5 id="基元法适用于烃的简单衍生物">==4.
基元法==（适用于烃的简单衍生物）</h5>
<p>​ 醇、醛、酸、卤代烃等烃的衍生物，均可以表示为<span class="math inline">$\ce{R-A}$</span>的形式，则其同分异构体就是烃基（<span class="math inline">$\ce{R-}$</span>）变化造成的，烃基的种数就是同分异构体数。</p>
<p>​ 甲基(<span class="math inline">$\ce{-CH3}$</span>)、乙基(<span class="math inline">$\ce{-C2H5}$</span>) 、丙基(<span class="math inline">$\ce{-C3H7}$</span>) 、丁基(<span class="math inline">$\ce{-C4H9}$</span>)、戊基(<span class="math inline">$\ce{-C5H11}$</span>)的同分异构体数目分别为１、１、２、４、８。</p>
<p>​ 例子：判断<span class="math inline">$\ce{C5H11Br}$</span>的同分异构体数目：先分离出戊基，有
8 个同分异构体数，即为<span class="math inline">$\ce{C5H11Br}$</span>的同分异构体数了。</p>
<hr>
<h5 id="定一移二法有序思维">==5.
定一移二法==（<strong>有序思维</strong>）</h5>
<p>​
含有两个或两个以上取代基的同分异构体的书写，只凭想象可能会重、漏，使用定一议二法会更为方便。</p>
<p>​
定一移二法是指当有机物有２个取代基时，先固定一个取代基的位置，再移动另一取代基的位置，从而可确定同分异构体的数目。分析二元取代物时，先写出一元取代物的结构简式，再在一元取代物的基础上移动第二个取代基位置。注意位置不能重复计算。</p>
<hr>
<h5 id="不饱和度法不推荐"><del>6. 不饱和度法</del>（不推荐）</h5>
<p>​ 计算分子不饱和度，根据不饱和度分析可能存在的结构。</p>
<p>​ 不饱和度：对于有机物 <span class="math inline">$\ce{C_xH_yO_m(NH)_n}$</span>，<span class="math inline">$\Omega =
x+1-\dfrac{y}{2}$</span>（不考虑氧，卤素当做 <span class="math inline">$\ce{H}$</span>，氮同时划去 <span class="math inline">$\ce{NH}$</span>）。</p>
<p>​ 同时，对于有机物，<span class="math inline"><em>Ω</em> = <em>x</em> + 2<em>y</em> + <em>z</em></span>，<span class="math inline"><em>x</em></span>：双键数；<span class="math inline"><em>y</em></span>：三键数；<span class="math inline"><em>z</em></span>：环数。</p>
<p>​
==通过不饱和度可以快速计算分子式（用饱和氢数减不饱和度的两倍）==。</p>
<hr>
<h5 id="等价代换法等效替代">7.
等价代换法（<strong>等效替代</strong>）</h5>
<p>​
用相关联的等量关系或对应因子代替，进行推理分析或计算的方法。若有机物分子可被取代的氢原子有<span class="math inline"><em>y</em></span>个，一取代物数量与<span class="math inline">(<em>y</em>−1)</span>取代物的数量相同，<span class="math inline"><em>n</em></span>取代物的数目与<span class="math inline">(<em>y</em>−<em>n</em>)</span>取代物的数目相同。如：<span class="math inline"><em>n</em> = 2</span>，丙烷（<span class="math inline"><em>y</em> = 8</span>）<span class="math inline">$\ce{CH3CH2CH3}$</span>的二氯取代物<span class="math inline">$\ce{C3H6Cl2}$</span>的同分异构体的数目同六氯取代物<span class="math inline">$\ce{C3H2Cl6}$</span>相同。</p>
</blockquote>
</read></return></read></return></read></return></read></return></read></return></read></return></read></return></read></return></read></return></read></return></read></return></read></return></read></return></read></return>]]></content>
      <categories>
        <category>High School</category>
        <category>Chemistry</category>
      </categories>
      <tags>
        <tag>School Notes</tag>
        <tag>Chemistry</tag>
        <tag>High School</tag>
      </tags>
  </entry>
  <entry>
    <title>研究有机化合物的一般方法</title>
    <url>/2022/02/07/chemistry/BK%209%20%E6%9C%89%E6%9C%BA%E7%BB%93%E6%9E%84/P2%20%E7%A0%94%E7%A9%B6%E6%9C%89%E6%9C%BA%E5%8C%96%E5%90%88%E7%89%A9%E7%9A%84%E4%B8%80%E8%88%AC%E6%96%B9%E6%B3%95/</url>
    <content><![CDATA[<h2 id="知识聚焦">知识聚焦</h2>
<h3 id="一研究方法">一、研究方法</h3>
<h4 id="分离提纯">1. 分离提纯</h4>
<p>​
为了研究有机物，首先要获得纯净的有机化合物，我们需要分离、提纯粗品，常见的方法有<strong>蒸馏、萃取和重结晶</strong>。</p>
<p>​
蒸馏是分离和提纯液态有机化合物的常用方法，当液态有机化合物有少量杂质，且该有机化合物热稳定性较高，沸点与杂质的沸点有较大差异时，我们可以用蒸馏法提纯。</p>
<p>​
萃取包括液液萃取和固液萃取。液液萃取是利用待分离组在两种不互溶的溶剂中的溶解度不同，将其从一种溶剂转移到另一种溶剂的过程，可使用有机溶剂从水中萃取有机化合物，萃取用剂称为萃取剂（常用：乙醚、乙酸乙酯、二氯甲烷），将萃取后的两层液体分开的操作称为分液（常用分液漏斗）。固液萃取是用溶剂从固体物质中溶解出待分离组分的过程。</p>
<p>​
重结晶是提纯固体有机化合物常用的方法，是利用被提纯物质与杂质在同一溶剂的溶解度不同而除杂，溶剂要求为杂质在其中的溶解度很小火很大，被提纯的有机化合物在此溶剂中溶解度受温度影响要很大，能够冷却结晶。</p>
<h4 id="确定实验式">2. 确定实验式</h4>
<p>​
实验式也称为最简式，一般通过燃烧转化为简单的无机物，通过测定无机物的质量推算出该有机化合物中各元素的质量分数。</p>
<h4 id="确定分子式">3. 确定分子式</h4>
<p>​
质谱法是快速精确测定相对分子质量的重要方法，通过高速电力流等轰击样品，使有机分子失去电子，形成带正电荷的分子离子和碎片离子，再通过电磁场的运动差异得到质合比与相对丰度的质谱图。</p>
<h4 id="确定分子结构">4. 确定分子结构</h4>
<p>​ 为了确定分子结构，我们需要依靠红外光谱、核磁共振氢谱和 X
射线衍射等分析。</p>]]></content>
      <categories>
        <category>High School</category>
        <category>Chemistry</category>
      </categories>
      <tags>
        <tag>School Notes</tag>
        <tag>Chemistry</tag>
        <tag>High School</tag>
      </tags>
  </entry>
  <entry>
    <title>晶体结构与性质</title>
    <url>/2022/02/05/chemistry/BK%204%20%E5%88%86%E5%AD%90%E7%BB%93%E6%9E%84%20%E6%99%B6%E4%BD%93%E7%BB%93%E6%9E%84/P3%20%E6%99%B6%E4%BD%93%E7%BB%93%E6%9E%84%E4%B8%8E%E6%80%A7%E8%B4%A8/</url>
    <content><![CDATA[Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
<h2 id="知识聚焦">知识聚焦</h2>
<h3 id="一晶体类型">一、晶体类型</h3>
<table>
<colgroup>
<col style="width: 14%">
<col style="width: 23%">
<col style="width: 23%">
<col style="width: 22%">
<col style="width: 15%">
</colgroup>
<thead>
<tr class="header">
<th>比较</th>
<th>分子晶体</th>
<th>共价晶体</th>
<th>金属晶体</th>
<th>离子晶体</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>概念</td>
<td>只含分子的晶体</td>
<td>微观空间中不含分子的晶体</td>
<td>金属（除<span class="math inline">$\ce{Hg}$</span>）在常温下都是晶体</td>
<td>阴阳离子相互结合而形成的晶体</td>
</tr>
<tr class="even">
<td>构成原理</td>
<td>分子间靠分子间作用力结合而形成的晶体</td>
<td>内部原子以共价键的形式连接并形成空间网状结构的晶体</td>
<td>金属阳离子和自由电子以金属键结合而形成的晶体（电子气理论）</td>
<td>阴离子和阳离子通过离子键结合而形成的晶体</td>
</tr>
<tr class="odd">
<td>构成粒子</td>
<td>分子</td>
<td>原子</td>
<td>金属阳离子、自由电子</td>
<td>阴阳离子</td>
</tr>
<tr class="even">
<td>粒子间相互作用力<br>（主要作用力）</td>
<td>分子间作用力</td>
<td>共价键</td>
<td>金属键（粒子的静电作用）</td>
<td>离子键</td>
</tr>
<tr class="odd">
<td>密度</td>
<td>较小</td>
<td>较大</td>
<td>有的很大、有的很小</td>
<td>较大</td>
</tr>
<tr class="even">
<td>硬度</td>
<td>较小</td>
<td>很大</td>
<td>有的很大、有的很小</td>
<td>较大</td>
</tr>
<tr class="odd">
<td>熔沸点</td>
<td>较低</td>
<td>很高</td>
<td>有的很高、有的很低</td>
<td>较高</td>
</tr>
<tr class="even">
<td>溶解性</td>
<td>相似相溶</td>
<td>难溶于任何溶剂</td>
<td>难溶于常见溶剂</td>
<td>大多易溶于水等极性溶剂</td>
</tr>
<tr class="odd">
<td>导电、传热性</td>
<td>一般不导电，溶于水后有的导电</td>
<td>一般不具有导电性</td>
<td>电和热的良导体</td>
<td>晶体不导电，水溶液或熔融态导电</td>
</tr>
<tr class="even">
<td>延展性</td>
<td>无</td>
<td>无</td>
<td>良好</td>
<td>无</td>
</tr>
<tr class="odd">
<td>物质类别</td>
<td>大多数非金属单质、气态氢化物、部分非金属氧化物（如<span class="math inline">$\ce{SO2}$</span>、<span class="math inline">$\ce{CO2}$</span>，<span class="math inline">$\ce{SiO2}$</span>除外）、几乎所有的酸、绝大多数有机物（有机盐除外）</td>
<td>一部分非金属单质（金刚石、硅、晶体硼）、部分氧化物（<span class="math inline">$\ce{SiC}$</span>、<span class="math inline">$\ce{SiO2}$</span>、<span class="math inline">$\ce{Al2O3}$</span>）</td>
<td>金属单质和合金</td>
<td>大部分金属氧化物、强碱、绝大部分盐</td>
</tr>
<tr class="even">
<td>物质举例（一一对应物质类别）</td>
<td>1. <span class="math inline">$\ce{X2}$</span>（卤素）,<span class="math inline">$\ce{O2, S8, N2, P4,
C60}$</span>以及稀有气体<br>2. <span class="math inline">$\ce{H2O,
H2S, NH3, CH4}\cdots$</span><br>3. <span class="math inline">$\ce{CO2,
P4O6, P4O10, SO2}$</span><br>4. -<br>5. -</td>
<td>1. <span class="math inline">$\ce{B, Si, Ge}$</span>以及灰锡<span class="math inline">$\ce{Sn}$</span><br>2. <span class="math inline">$\ce{SiC, SiO2, Si3N4, Al2O3}$</span></td>
<td>-</td>
<td>-</td>
</tr>
</tbody>
</table>
<h3 id="二过渡晶体与混合型晶体">二、过渡晶体与混合型晶体</h3>
<h4 id="过渡晶体">1. 过渡晶体</h4>
<p>​
纯粹的典型晶体在现实中是不多的，大多数晶体是他们之间的<strong>过渡晶体</strong>。</p>
<p>​ 在离子晶体与共价晶体之间的过渡中，从<span class="math inline">$\ce{Na2O -&gt; MgO -&gt; Al2O3 -&gt; SiO2 -&gt;
P2O5 -&gt; SO3 -&gt;
Cl2O7}$</span>，离子键的百分数不断降低，前两者偏向离子晶体的在性质上与纯粹的离子晶体相近，所以我们通常将它们当做离子晶体处理；<span class="math inline">$\ce{Al2O3,
SiO2}$</span>在性质上与共价晶体相近，而最后三个都是分子晶体，它们的离子键百分数更小，共价键也不再贯穿整个晶体了。</p>
<p>​ 四类晶体都有过渡型。</p>
<h4 id="混合型晶体">2. 混合型晶体</h4>
<ol type="1">
<li><p>石墨（<span class="math inline">$\ce{sp^2}$</span>杂化），呈层状结构，层间靠分子间作用力维系，但是<span class="math inline">$\ce{p}$</span>轨道的电子可以在层内自由移动（<span class="math inline">$\ce{p}$</span>轨道相互平行重叠），有类似金属键的非定域键，而在层内则以共价键维系。</p></li>
<li><p>硅酸盐，有环状结构、岛状结构（结构单元间依赖离子来联系），也有以硅氧四面体为结构单元组成的链状骨架（链间依赖离子来联系）。</p></li>
</ol>
<h3 id="三配合物与超分子">三、配合物与超分子</h3>
<h4 id="配合物">1. 配合物</h4>
<p>​
类似铜离子接收水分子的孤电子对形成的这类“电子对给予-接受”键被称为<strong>配位键</strong>。我们通常把金属离子或原子（称为中心离子或原子）与某些分子或离子（称为配体或配位体）以配位键结合形成的化合物称为配位化合物，简称配合物。</p>
<ol type="1">
<li><span class="math inline">$\ce{Cu^2+ + 2NH3\cdot H2O -&gt; Cu(OH)2 +
2NH+4}$</span>、<span class="math inline">$\ce{Cu(OH)2 + 4NH3 -&gt;
[Cu(NH3)4](OH)2}$</span>。</li>
<li><span class="math inline">$\ce{Fe^3+ +3SCN- -&gt;
Fe(SCN)3}$</span>（<span class="math inline">$\ce{SCN-}$</span>形成配离子的血红色用于鉴定三价铁，硫氰化铁的配合物离子为<span class="math inline">$\ce{Fe(SCN)^3-_6}$</span>）。</li>
<li><span class="math inline">$\ce{AgCl + 2NH3 -&gt;
[Ag(NH3)2]Cl}$</span>。</li>
</ol>
<blockquote>
<h3 id="配合物的判断与注意事项">配合物的判断与注意事项</h3>
<p>​ 一般来说，中心离子的化合价与配体的个数之比是 1:2
，且形成配位化合物时电荷守恒。</p>
<p>​
值得注意的是，==配合物内界的中心原子或离子与配体通过配位键结合很牢固，外界与内界之间以离子键结合不够牢固，所以配合物外界的离子可以电离而内界的离子不能电离==。举个例子而言，配位化合物中外界氯离子能与硝酸银溶液沉淀，配体氯离子不能与硝酸应反应生成氯化银沉淀。如配合物<span class="math inline">$\ce{[Co(NH3)4Cl2]Cl}$</span>中只有 1
个氯离子可以与硝酸银反应。</p>
</blockquote>
<h4 id="超分子">2. 超分子</h4>
<p>​
超分子是由两种或两种以上的分子通过分子间相互作用形成的分子聚集体。</p>
<ol type="1">
<li>杯酚与<span class="math inline">$\ce{C60}$</span>聚集，甲苯溶解<span class="math inline">$\ce{C70}$</span>，氯仿溶解杯酚而沉淀<span class="math inline">$\ce{C60}$</span>（分子识别）。</li>
<li>冠醚识别碱金属离子：不同的冠醚（不同尺寸）可以识别不同的离子。</li>
<li>细胞膜（双分子膜，即磷脂双分子层）可以由磷脂分子自行组装而成（自组装）。</li>
</ol>]]></content>
      <categories>
        <category>High School</category>
        <category>Chemistry</category>
      </categories>
      <tags>
        <tag>School Notes</tag>
        <tag>Chemistry</tag>
        <tag>High School</tag>
      </tags>
  </entry>
  <entry>
    <title>物质的聚集状态与晶体结构</title>
    <url>/2022/02/05/chemistry/BK%204%20%E5%88%86%E5%AD%90%E7%BB%93%E6%9E%84%20%E6%99%B6%E4%BD%93%E7%BB%93%E6%9E%84/P2%20%E7%89%A9%E8%B4%A8%E7%9A%84%E8%81%9A%E9%9B%86%E7%8A%B6%E6%80%81%E4%B8%8E%E6%99%B6%E4%BD%93%E7%BB%93%E6%9E%84%E7%9A%84%E5%B8%B8%E8%AF%86/</url>
    <content><![CDATA[Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
<h2 id="知识聚焦">知识聚焦</h2>
<h3 id="一物质的聚集状态">一、物质的聚集状态</h3>
<ol type="1">
<li>物质不止三态，而有更多的聚集状态类别。</li>
<li>许多常见的晶体中并无分子（氯化钠、石墨、二氧化硅、金刚石和各种金属）。</li>
<li>气态和液态物质也不一定都由分子构成（等离子体：电子+阳离子+分子或原子，离子液体：熔点不高的仅由离子构成的液体物质）。</li>
<li>晶态、液晶态、塑晶态、非晶态。</li>
</ol>
<h3 id="二晶体与非晶体">二、晶体与非晶体</h3>
<h4 id="晶体与非晶体">1. 晶体与非晶体</h4>
<table>
<colgroup>
<col style="width: 9%">
<col style="width: 42%">
<col style="width: 48%">
</colgroup>
<thead>
<tr class="header">
<th>固体</th>
<th>自范性</th>
<th>微观结构</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>晶体</td>
<td>有（能自发呈现多面体外形）</td>
<td>原子在三维空间里呈周期性有序排列</td>
</tr>
<tr class="even">
<td>非晶体</td>
<td>无（不能自发呈现多面体外形）</td>
<td>原子排列相对无序</td>
</tr>
</tbody>
</table>
<p>​
晶体的<strong>自范性</strong>指晶体能自发地呈现多面体外形的性质，但是实现可能需要一定条件，如晶体生长的速率适当。晶体在物理性质上也存在各向异性，如石蜡熔化不同方向速度不同。</p>
<p>​
一般来说，得到晶体有三条途径，==熔融态物质凝固、气态物质冷却不经液态直接凝固（凝华）、溶质从溶液中析出==。区分晶体与非晶体最科学可靠的方法是对固体进行<strong>X
射线衍射实验</strong>（使用<strong>X
射线衍射仪</strong>）（除此之外，可以通过是否有固定熔沸点、物理性质的各向异性、是否均一等判断）。</p>
<h4 id="晶胞">2. 晶胞</h4>
<p>​
为了描述晶体在微观空间里原子的排列，我们用<strong>晶胞</strong>即一个基本单元来描述。常见的晶胞都是平行六面体，整块晶体可以看作是数量巨大的晶胞无隙并置而成。在数晶胞内原子时，我们只取一个顶角和三条侧棱以及平行六面体内部的原子数。</p>
<blockquote>
<h3 id="晶胞相关计算">晶胞相关计算</h3>
<p>​ 在计算晶胞中的平均微粒时，我们通常使用均摊法进行计算：若微粒为 n
个晶胞共有，则该微粒有<span class="math inline">$\frac{1}{n}$</span>属于该晶胞。</p>
<p>​
值得注意的是，一定要注意题目给出的物质是晶体还是非晶体，如果给出的是团簇分子或纳米颗粒，则所含微粒是独有的，不与其他分子或颗粒所共用。</p>
<p>​ 如果需要计算晶体的密度，可以按两个思路：计算 1 个晶胞；计算 1mol
晶胞。首先通过一个晶胞拥有的微粒数目计算一个晶胞的平均质量，再根据给出的核间距、键参等计算体积。
<span class="math display">$$
$\rho=\frac{n_0M}{a^3N_A}$
$$</span></p>
</blockquote>]]></content>
      <categories>
        <category>High School</category>
        <category>Chemistry</category>
      </categories>
      <tags>
        <tag>School Notes</tag>
        <tag>Chemistry</tag>
        <tag>High School</tag>
      </tags>
  </entry>
  <entry>
    <title>分子结构</title>
    <url>/2022/02/04/chemistry/BK%204%20%E5%88%86%E5%AD%90%E7%BB%93%E6%9E%84%20%E6%99%B6%E4%BD%93%E7%BB%93%E6%9E%84/P1%20%E5%88%86%E5%AD%90%E7%BB%93%E6%9E%84/</url>
    <content><![CDATA[Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
<h2 id="知识聚焦">知识聚焦</h2>
<h3 id="一化学键与分子间作用力">一、化学键与分子间作用力</h3>
<h4 id="化学键与分子间作用力">1. 化学键与分子间作用力</h4>
<table>
<colgroup>
<col style="width: 14%">
<col style="width: 35%">
<col style="width: 50%">
</colgroup>
<thead>
<tr class="header">
<th></th>
<th>化学键</th>
<th>分子间作用力</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>概念</td>
<td>相邻原子间强烈的相互作用</td>
<td>把分子聚集在一起的力，又称范德华力</td>
</tr>
<tr class="even">
<td>作用范围</td>
<td>分子或晶体内</td>
<td>分子间</td>
</tr>
<tr class="odd">
<td>作用力强弱</td>
<td>较强</td>
<td>比化学键弱得多</td>
</tr>
<tr class="even">
<td>影响的性质</td>
<td>主要影响化学性质</td>
<td>主要影响物理性质（如熔沸点）</td>
</tr>
<tr class="odd">
<td>特征</td>
<td>有方向性，有饱和性</td>
<td>无方向性，无饱和性</td>
</tr>
</tbody>
</table>
<ol type="1">
<li>分子间作用力存在于由共价键形成的多数共价化合物和绝大多数非金属单质及稀有气体之间。</li>
<li>一般来说，组成和结构相似的物质，相对分子质量越大，分子间作用力越大，物质熔沸点越高；分子的极性越大，分子间作用力越大。</li>
</ol>
<h4 id="化学键的分类">2. 化学键的分类</h4>
<table style="width:100%;">
<colgroup>
<col style="width: 8%">
<col style="width: 27%">
<col style="width: 25%">
<col style="width: 38%">
</colgroup>
<thead>
<tr class="header">
<th>化学键类型</th>
<th>离子键</th>
<th>共价键</th>
<th>金属键</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>概念</td>
<td>阴阳离子间通过静电作用形成的化学键</td>
<td>原子间通过共用电子对形成的化学键</td>
<td>金属<strong>阳离子与自由电子</strong>通过相互作用形成的化学键</td>
</tr>
<tr class="even">
<td>成键微粒</td>
<td>阴阳离子</td>
<td>原子</td>
<td>金属阳离子和自由电子</td>
</tr>
<tr class="odd">
<td>成键性质</td>
<td>静电作用</td>
<td>共用电子对</td>
<td>电性作用</td>
</tr>
<tr class="even">
<td>形成条件</td>
<td>活泼金属元素与活泼非金属元素</td>
<td>非金属元素与金属元素</td>
<td>金属内部</td>
</tr>
<tr class="odd">
<td>实例</td>
<td><span class="math inline">$\ce{NaCl, MgO}$</span></td>
<td><span class="math inline">$\ce{HCl, H2SO4}$</span></td>
<td><span class="math inline">$\ce{Fe, Mg}$</span></td>
</tr>
</tbody>
</table>
<blockquote>
<h5 id="有阴离子一定有阳离子有阳离子不一定有阴离子如金属单质或合金">有阴离子一定有阳离子，有阳离子不一定有阴离子（如金属单质或合金）。</h5>
</blockquote>
<h4 id="共价键">3. 共价键</h4>
<table>
<colgroup>
<col style="width: 13%">
<col style="width: 25%">
<col style="width: 25%">
<col style="width: 36%">
</colgroup>
<thead>
<tr class="header">
<th></th>
<th>非极性共价键</th>
<th>极性共价键</th>
<th>配位键（配位共价键）</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>形成微粒</td>
<td>同种原子</td>
<td>不同种原子</td>
<td>不同种原子</td>
</tr>
<tr class="even">
<td>成键方式</td>
<td>双方原子共同提供电子形成共用电子对</td>
<td>双方原子共同提供电子形成共用电子对</td>
<td>一方原子提供孤电子对，一方院子提供空轨道</td>
</tr>
<tr class="odd">
<td>表示</td>
<td><span class="math inline">$\ce{A-B}$</span></td>
<td><span class="math inline">$\ce{A-B}$</span></td>
<td><span class="math inline">$\ce{A:\bond{-&gt;}\square
B}$</span>（<span class="math inline">$\ce{A\bond{-&gt;}B}$</span>）</td>
</tr>
<tr class="even">
<td>原子吸引电子对能力</td>
<td>相同</td>
<td>不同</td>
<td>不同</td>
</tr>
<tr class="odd">
<td>共用电子对位置</td>
<td>不偏向任何一个原子</td>
<td>偏向吸引电子能力强的原子一方</td>
<td>偏向吸引电子能力强的原子一方</td>
</tr>
<tr class="even">
<td>举例</td>
<td><span class="math inline">$\ce{H2, N2, H2O2}$</span></td>
<td><span class="math inline">$\ce{HCl, OH-, H2O}$</span></td>
<td><span class="math inline">$\ce{NH+4, H3O+, H3N-BF3}$</span></td>
</tr>
</tbody>
</table>
<p>​
共价键业可以按照共用电子对的数目分为单键、双键、三键，也可以按照原子轨道的重叠方式分为<span class="math inline"><em>σ</em></span>键和<span class="math inline"><em>π</em></span>键（前者电子云具有轴对称性，后者电子云具有镜像对称性）。</p>
<h4 id="化学键的键参数">4. 化学键的键参数</h4>
<ol type="1">
<li>键能：气态基态原子形成<span class="math inline">$\ce{1mol}$</span>化学键释放的最低能量。键能越大，化学键越稳定。</li>
<li>键长：形成共价键的两个原子之间的核间距。键长越短，化学键越稳定。</li>
<li>键角：在原子数超过 2 的分子中，两个共价键之间的夹角。</li>
</ol>
<pre class="mermaid">graph LR
键能 --决定--&gt; 分子的稳定性
键长 --决定--&gt; 分子的稳定性
键长 --决定--&gt; 分子的空间构型
键角 --决定--&gt; 分子的空间构型
分子的稳定性 --决定--&gt; 分子的性质
分子的空间构型 --决定--&gt; 分子的性质</pre>
<h4 id="离子化合物和共价化合物">5. 离子化合物和共价化合物</h4>
<table>
<colgroup>
<col style="width: 11%">
<col style="width: 44%">
<col style="width: 44%">
</colgroup>
<thead>
<tr class="header">
<th>类别</th>
<th>离子化合物</th>
<th>共价化合物</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>定义</td>
<td>含有离子键的化合物</td>
<td>只含有共价键的化合物</td>
</tr>
<tr class="even">
<td>结构粒子</td>
<td>阴阳离子</td>
<td>原子</td>
</tr>
<tr class="odd">
<td>化学键类型</td>
<td>一定含有离子键，可能含有共价键</td>
<td>只含共价键</td>
</tr>
<tr class="even">
<td>与物质类别的关系</td>
<td>1. 强碱<br>2. 绝大多数盐<br>3. 活泼金属氧化物</td>
<td>1. 所有的酸<br>2. 弱碱<br>3. 气态氢化物<br>4.
非金属氧化物<br>5. 极少数盐</td>
</tr>
<tr class="odd">
<td>主要物理性质</td>
<td>1. 熔沸点较高，硬度较大，通常呈固态<br>2.
固态不导电，熔融态或溶于水后导电</td>
<td>1. 熔沸点、硬度差异较大<br>2. 熔融态不导电，某些溶于水后导电</td>
</tr>
</tbody>
</table>
<h3 id="二分子的极性">二、分子的极性</h3>
<h4 id="非极性分子与极性分子">1. 非极性分子与极性分子</h4>
<table>
<colgroup>
<col style="width: 19%">
<col style="width: 36%">
<col style="width: 44%">
</colgroup>
<thead>
<tr class="header">
<th></th>
<th>非极性分子</th>
<th>极性分子</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>形成原因</td>
<td>整个分子的电荷分布均匀对称</td>
<td>整个分子的电荷分布不均匀、不对称</td>
</tr>
<tr class="even">
<td>存在的共价键</td>
<td>非极性键或极性键</td>
<td>极性键</td>
</tr>
<tr class="odd">
<td>分子内原子排列</td>
<td>对称</td>
<td>不对称</td>
</tr>
</tbody>
</table>
<blockquote>
<h3 id="分子极性的判断">分子极性的判断</h3>
<ol type="1">
<li>除了<span class="math inline">$\ce{O3}$</span>，只含有非极性键的单质分子是非极性分子。</li>
<li>含有极性键的双原子化合物分子都是极性分子。</li>
<li>含有极性键的多原子分子，空间结构对称的是非极性分子，不对称的是极性分子。</li>
<li>使用向量和进行计算，如果分子极性的向量和为 0
，则分子是极性分子。</li>
<li>判断分子是否是极性分子不能只看分子式，需要看具体结构，如<span class="math inline">$\ce{H2O2}$</span>不是平面构象，而是一个具有二面角的构象<span class="citation" data-cites="Why_H2O2_polar_molecules">[@Why_H2O2_polar_molecules]</span>。</li>
</ol>
</blockquote>
<blockquote>
<h4 id="相似相容原理">相似相容原理</h4>
<p>​
相似相容规律：凡是分子结构相似的物质，都是易于互相溶解的。（非极性溶质一般能溶于非极性溶剂，极性溶质一般能溶于极性溶剂；如果存在氢键，溶剂与溶质间氢键作用力越大，溶解效果越好）</p>
</blockquote>
<blockquote>
<h4 id="键的极性对有机酸酸性的影响">键的极性对有机酸酸性的影响</h4>
<p>​
有机酸中羟基可以电离出氢离子，羟基的极性越大，有机酸的酸性越大。</p>
<ol type="1">
<li>因为<span class="math inline">$\ce{F}$</span>的电负性大于<span class="math inline">$\ce{Cl}$</span>，故而三氟乙酸中羟基基团的极性大于三氯乙酸的极性，酸性更强。</li>
<li>烃基是推电子基团，烃基越长推电子效应越大，羟基极性越小，酸性越弱，所以甲酸酸性强于乙酸强于丙酸。</li>
</ol>
</blockquote>
<h4 id="分子的空间构型">2. 分子的空间构型</h4>
<h5 id="vsepr-价层电子对互斥模型">VSEPR 价层电子对互斥模型</h5>
<p>​
价层电子对互斥模型认为，分子的空间结构是中心原子周围的价层电子对相互排斥的结果。价层电子对指分子中的中心原子与结合原子间的<span class="math inline"><em>σ</em></span>键电子对和中心原子上的孤电子对（不计<span class="math inline"><em>π</em></span>键电子对）。</p>
<p>​ 中心原子上的<span class="math inline"><em>σ</em></span>键电子对数可以由化学式确定，而孤电子对数需要用计算式<span class="math inline">0.5(<em>a</em>−<em>x</em><em>b</em>)</span>得出（<span class="math inline"><em>a</em></span>为中心原子的价电子数，<span class="math inline"><em>x</em></span>为与中心原子结合的原子数，<span class="math inline"><em>b</em></span>为与中心原子结合的原子最多能接受的电子数）。</p>
<p>​ 在计算得出价层电子对数后，我们可以构建一个含有孤电子对的分子的
VSEPR
模型，然后略去中心原子的孤电子对，我们就可以得到分子的空间构型。但由于孤电子对有较大斥力，中心原子含孤电子对分子的键角几乎都小于预测值，如<span class="math inline">$\ce{H2O=105\degree, NH3=107\degree,
NO^-2=115\degree}$</span>，虽然 VSEPR
预测少有失误，但它不能用来预测以过渡金属为中心原子的分子。</p>
<h5 id="杂化轨道理论">杂化轨道理论</h5>
<p>​
杂化轨道理论是一种价键理论，是鲍林为了解释分子空间结构而提出的，要点在于，如<span class="math inline">$\ce{CH4}$</span>的碳原子与氢原子成键时，碳原子的<span class="math inline">$\ce{2s}$</span>轨道和 3 个<span class="math inline">$\ce{2p}$</span>轨道会发生混杂，形成四个能量一样，指向正四面体四个顶角的轨道，夹角<span class="math inline">$109\degree28
’$</span>。这种成键中心原子轨道杂化合并形成新的键长、键角、键能完全一致的轨道的理论即为杂化轨道理论。</p>
<blockquote>
<h5 id="判断杂化类型">判断杂化类型</h5>
<p>​ 大多情况可以简化运算为<span class="math inline">$\ce{sp^{lp +
\sigma -
1}}$</span>（一般来说，杂化轨道数=中心原子上的孤电子对数+中心原子的<span class="math inline"><em>σ</em></span>键数）。</p>
</blockquote>
<p><img src="https://raw.githubusercontent.com/PassionPenguin/picgo-database/main/vsepr-chart-table.png" alt="vsepr-chart-table" style="zoom: 50%;"></p>
<table>
<thead>
<tr class="header">
<th>价层电子对数</th>
<th>VSEPR</th>
<th>成键电子对</th>
<th>孤电子对</th>
<th>分子或离子结构</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>2</td>
<td>直线形</td>
<td>2</td>
<td>0</td>
<td>直线形</td>
</tr>
<tr class="even">
<td>3</td>
<td>平面三角形</td>
<td>3</td>
<td>0</td>
<td>平面三角形</td>
</tr>
<tr class="odd">
<td>3</td>
<td>平面三角形</td>
<td>2</td>
<td>1</td>
<td>V 形</td>
</tr>
<tr class="even">
<td>4</td>
<td>四面体形</td>
<td>4</td>
<td>0</td>
<td>正四面体形</td>
</tr>
<tr class="odd">
<td>4</td>
<td>四面体形</td>
<td>3</td>
<td>1</td>
<td>三角锥形</td>
</tr>
<tr class="even">
<td>4</td>
<td>四面体形</td>
<td>2</td>
<td>2</td>
<td>V 形</td>
</tr>
</tbody>
</table>
<h3 id="三氢键">三、氢键</h3>
<h4 id="定义">1. 定义</h4>
<p>​ 当氢与电负性很大而原子半径很小的元素<span class="math inline">$\ce{X}$</span>（如<span class="math inline">$\ce{N,
O,
F}$</span>）以共价键结合时，使共用电子对强烈偏向电负性大的原子一端，使氢原子几乎裸露在外面，这时氢原子核与另一个电负性很大，同时原子半径很小，且带有孤对电子的元素<span class="math inline">$\ce{Y}$</span>接近时产生比较大的吸引力（强度约为一般共价键的
5%~10%），这种原子间作用力称为<strong>氢键</strong>。氢键通常可以表示为<span class="math inline">$\ce{X-H\bond{...}Y}$</span>。</p>
<p>​ 简单来说，就是==氢原子被电负性很高的原子吸走了电子呈<span class="math inline"><em>δ</em><sup>+</sup></span>，此时与另一个电负性很高的原子就能形成氢键==。</p>
<h4 id="特点">2. 特点</h4>
<ol type="1">
<li>氢键具有方向性和饱和性。</li>
<li>氢键只存在于某些含有氢原子的分子之间。</li>
<li>作用力大小：==化学键&gt;氢键&gt;分子间作用力==。</li>
<li>分子中心必须有一个电负性很大的元素形成强极性键的氢原子。</li>
<li>电负性大的元素必须有孤对电子，且半径要小（通常为<span class="math inline">$\ce{F, O, N}$</span>）。</li>
</ol>
<h4 id="影响">3. 影响</h4>
<p>​ 氢键对物质的熔点、沸点、密度、黏度、硬度等均有影响。</p>
<ol type="1">
<li>若分子间存在氢键，晶体熔化或液体汽化时，需要克服的阻力增大，所以熔沸点升高。</li>
<li>若分子内存在氢键，分子间不再缔合而凝聚力小，熔沸点低。</li>
<li>极性溶剂中，如果溶质分子与溶剂分子间形成氢键，会促进分子间的结合，溶解度增大。</li>
<li>极性溶剂中，如果溶质分子内形成氢键，会与水（溶剂）难以形成分子间氢键，进而难溶于水（溶剂），溶解度低。</li>
<li>溶液中形成分子间氢键，使分子间结合更加紧密，进而增加密度与黏度。</li>
</ol>
<h3 id="四分子的手性">四、分子的手性</h3>
<p>​
具有完全相同的组成和原子排列的一对分子，如同左右手一样互为镜像，在三维空间内不能叠合，互称手性异构体（或对映异构体）。有手性异构体的分子叫做<strong>手性分子</strong>。</p>
<blockquote>
<h3 id="判断是否是手性碳原子">判断是否是手性碳原子</h3>
<ol type="1">
<li>手性碳原子必须饱和，连有 4 个不同原子或原子团。</li>
<li><span class="math inline">$\ce{-CH2-,
-CH3-}$</span>一定不是手性碳原子。</li>
<li>双键、三键以及苯环上的碳原子一定不是手性碳原子。</li>
</ol>
</blockquote>
<p>​ 手性分子在生命科学和药物生产中有广泛应用，现今使用的药物有
50%以上是手性药物，它们的一个异构体可能是有效的，另一个异构体可能是无效甚至有害的。使用手性催化剂可以只得到或主要得到一种手性分子，这种合成方式是手性合成。</p>]]></content>
      <categories>
        <category>High School</category>
        <category>Chemistry</category>
      </categories>
      <tags>
        <tag>School Notes</tag>
        <tag>Chemistry</tag>
        <tag>High School</tag>
      </tags>
  </entry>
  <entry>
    <title>原子结构</title>
    <url>/2022/02/02/chemistry/BK%203%20%E5%8E%9F%E5%AD%90%E7%BB%93%E6%9E%84%20%E5%85%83%E7%B4%A0%E5%91%A8%E6%9C%9F%E5%BE%8B/P1%20%E5%8E%9F%E5%AD%90%E7%BB%93%E6%9E%84/</url>
    <content><![CDATA[Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
<h2 id="知识聚焦">知识聚焦</h2>
<h3 id="一原子结构">一、原子结构</h3>
<blockquote>
<h1 id="认识过程">认识过程</h1>
<ol type="1">
<li>公元前 5
世纪，古希腊哲学家德谟克利特提出古代原子学说，认为万物都由间断的、不可分的原子构成。</li>
<li>19
世纪初，英国学者道尔顿的近代原子学说和意大利学者阿伏伽德罗的分子学说。</li>
<li>1904 年英国学者汤姆生的“葡萄干面包式”原子结构模型。</li>
<li>1911 年英国学者卢瑟福的行星式原子结构模型。</li>
<li>1913 年丹麦学者玻尔的轨道原子结构模型。</li>
<li>20 世纪初现代学者的量子力学原子结构模型。</li>
</ol>
</blockquote>
<p>​ 原子组成（<span class="math inline">$\ce{^A_ZX}$</span>）：原子核（质子（Z
个）+中子（A-Z 个））+核外电子（带负电荷，Z 个）。</p>
<p>​
<strong>核素</strong>指具有一定质子数和一定中子数的一种原子；<strong>同位素</strong>指质子数相同且中子数不同的同一元素不同核素。</p>
<h3 id="二能层能级与排布规则">二、能层、能级与排布规则</h3>
<h4 id="能级能层">1. 能级、能层</h4>
<p>​ 核外电子按能量不同分成能层，由内而外排序，对应的符号为<span class="math inline"><em>K</em>、<em>L</em>、<em>M</em>、<em>N</em>、<em>O</em>、<em>P</em>、<em>Q</em></span>。能层越高，电子的能量越高。</p>
<p>​ 在一个能层中，电子被分层不同能级，符号为<span class="math inline"><em>s</em>, <em>p</em>, <em>d</em>, <em>f</em></span>。</p>
<blockquote>
<h5 id="构造原理并不是原理而是规律是原子和电子同时递增时的规律所以失去电子形成离子的时候并不是按照这个来失去的">构造原理并不是<strong>原理</strong>，而是<strong>规律</strong>，是原子和电子同时递增时的规律！所以失去电子形成离子的时候并不是按照这个来失去的！</h5>
</blockquote>
<blockquote>
<h4 id="特殊规律">特殊规律</h4>
<ol type="1">
<li><span class="math inline"><em>d</em>, <em>f</em></span>能层优先半满和全满（如<span class="math inline">$\ce{Cr = [Ar] 3d^5 4s^1, Cu = [Ar] 3d^{10}
4s^1}$</span>，即洪特规则特例）。</li>
<li>构造原理（仅供记忆）。</li>
</ol>
</blockquote>
<h4 id="电子云和电子轨道">2. 电子云和电子轨道</h4>
<p>​
<strong>电子云</strong>是一种核素核外电子在原子核外出现的概率密度的模型，<span class="math inline"><em>s</em></span>电子云呈球形，<span class="math inline"><em>p</em></span>电子云呈哑铃型，<span class="math inline"><em>d</em></span>电子云呈梅花形。</p>
<h4 id="原理规则">3. 原理规则</h4>
<ol type="1">
<li>电子自旋和<strong>泡利原理</strong>：==一个原子轨道里，只能容纳两个电子，自旋相反（也称为泡利不相容原理）==。</li>
<li><strong>洪特规则</strong>：==基态原子中，填入简并轨道的电子总是先单独分占且自旋平行==。</li>
<li><strong>能量最低原理</strong>：==在构建基态原子时，电子会尽可能地占据能量最低的原子轨道，使整个原子的能量最低==。</li>
<li><strong>电子排布的轨道表达式</strong>：</li>
</ol>
<figure>
<img src="https://raw.githubusercontent.com/PassionPenguin/picgo-database/main/201111160957272032773.gif" alt="See the source image">
<figcaption aria-hidden="true">See the source image</figcaption>
</figure>
<ol start="5" type="1">
<li>原子光谱：电子的跃迁会吸收能量或放出能量，表现形式即为吸收光谱和放射光谱。</li>
</ol>]]></content>
      <categories>
        <category>High School</category>
        <category>Chemistry</category>
      </categories>
      <tags>
        <tag>School Notes</tag>
        <tag>Chemistry</tag>
        <tag>High School</tag>
      </tags>
  </entry>
  <entry>
    <title>元素周期律</title>
    <url>/2022/02/02/chemistry/BK%203%20%E5%8E%9F%E5%AD%90%E7%BB%93%E6%9E%84%20%E5%85%83%E7%B4%A0%E5%91%A8%E6%9C%9F%E5%BE%8B/P2%20%E5%85%83%E7%B4%A0%E5%91%A8%E6%9C%9F%E5%BE%8B/</url>
    <content><![CDATA[Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
<h2 id="知识聚焦">知识聚焦</h2>
<h3 id="一元素周期律">一、元素周期律</h3>
<table>
<colgroup>
<col style="width: 23%">
<col style="width: 76%">
</colgroup>
<thead>
<tr class="header">
<th>定义</th>
<th>元素性质随着元素原子序数的递增而是周期性变化。</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>实质</td>
<td>元素性质的周期性递变是核外电子排布周期性变化的必然结果</td>
</tr>
<tr class="even">
<td>核外电子排布</td>
<td>最外层电子数由 1 递增至 8 （若<span class="math inline"><em>K</em></span>层为最外层，则由 1 递增至
2）而现周期性变化。</td>
</tr>
<tr class="odd">
<td>原子半径</td>
<td>原子半径由大到小（稀有气体元素除外）呈周期性变化。<br>原子半径由电子层数和核电荷数决定，它是反映结构的一个参考数据。</td>
</tr>
<tr class="even">
<td>最高正价</td>
<td>由＋ 1 递变到＋ 7 ，从中部开始有负价，从一 4 递变至一 1
（稀有气体元主要化合价素化合价为零），呈周期性变化。<br>元素主要化合价由元素原子的最外层电子数决定，一般存在下列关系：最高正价数＝最外层电子数。</td>
</tr>
<tr class="odd">
<td>元素及化合物的性质</td>
<td>金属性渐弱，非金属性渐强，最高价氧化物对应水化物的碱性渐弱，酸性渐强，呈周期性变化。<br>这是由于在一个周期内的元素，电子层数相同，最外层电子数逐渐增多，核对外层电子引力渐强，使元素原子失电子渐难，得电子渐易，故有此变化规律。</td>
</tr>
</tbody>
</table>
<h3 id="二元素周期表">二、元素周期表</h3>
<ol type="1">
<li>元素周期表的结构：
<ol type="1">
<li>周期：7 个，其中短周期为第一、二和三周期。</li>
<li>族：<span class="math inline">16</span>个，主族 7 个，副族 8 个， 0
族 1 个。</li>
<li>区：分为<span class="math inline"><em>s</em>, <em>p</em>, <em>d</em>, <em>d</em><em>s</em>, <em>f</em></span>五个区。</li>
</ol></li>
<li>主族元素递变规律：</li>
</ol>
<table>
<colgroup>
<col style="width: 6%">
<col style="width: 26%">
<col style="width: 29%">
<col style="width: 37%">
</colgroup>
<thead>
<tr class="header">
<th></th>
<th>内容</th>
<th>同周期元素（从左到右）</th>
<th>同主族元素（从上到下）</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>原子结构</td>
<td>核电荷数</td>
<td>递增</td>
<td>增大</td>
</tr>
<tr class="even">
<td></td>
<td>电子层数</td>
<td>相同</td>
<td>增多</td>
</tr>
<tr class="odd">
<td></td>
<td>最外层电子书</td>
<td>增多</td>
<td>相同</td>
</tr>
<tr class="even">
<td></td>
<td>原子半径</td>
<td>逐渐减小</td>
<td>逐渐增大</td>
</tr>
<tr class="odd">
<td>元素性质</td>
<td>主要化合价</td>
<td>最高正价+1 到+7<br>最低负价-4 到-1</td>
<td>最高正价、最低负价相同<br>最高正价=族序数</td>
</tr>
<tr class="even">
<td></td>
<td>最高价氧化物对应水化物的酸碱性</td>
<td>碱性减弱酸性增强</td>
<td>碱性增强，酸性减弱</td>
</tr>
<tr class="odd">
<td></td>
<td>非金属气态氢化物稳定性</td>
<td>增强</td>
<td>减弱</td>
</tr>
<tr class="even">
<td></td>
<td>非金属气态氢化物形成难度</td>
<td>从难倒易</td>
<td>从易到难</td>
</tr>
<tr class="odd">
<td></td>
<td>单质的氧化还原性</td>
<td>还原性减弱，氧化性增强</td>
<td>还原性增强，氧化性减弱</td>
</tr>
<tr class="even">
<td></td>
<td>元素的金属性和非金属性</td>
<td>金属性逐渐减弱，非金属性逐渐增强</td>
<td>金属性逐渐增强，费金属性逐渐减弱</td>
</tr>
</tbody>
</table>
<blockquote>
<h4 id="寻找特殊物质">寻找特殊物质</h4>
<ol type="1">
<li>半导体：金属和非金属交界。</li>
<li>催化剂、耐高温耐腐蚀材料：过渡元素。</li>
<li>农药：F、Cl、S、P。</li>
</ol>
</blockquote>
<h3 id="三原子结构与元素周期表">三、原子结构与元素周期表</h3>
<h4 id="原子的电子构型和周期的关系">1. 原子的电子构型和周期的关系</h4>
<p>​ 每周期第一种元素的最外层电子排布式<span class="math inline"><em>n</em><em>s</em><sup>1</sup></span>，每周期结尾元素最外层电子排布式除了<span class="math inline">$\ce{He 1s^2}$</span>外都是<span class="math inline">$n\ce{s}^2n\ce{p}^6$</span>。</p>
<h4 id="元素周期表的分区">2. 元素周期表的分区</h4>
<p><img src="https://raw.githubusercontent.com/PassionPenguin/picgo-database/main/image-20220201155918866.png" alt="image-20220201155918866" style="zoom:33%;"></p>
<h3 id="四元素性质">四、元素性质</h3>
<h4 id="微粒半径尺寸">1. 微粒半径尺寸</h4>
<ol type="1">
<li>原子半径：
<ol type="1">
<li>电子层数相同，原子序数增加，原子半径减小。</li>
<li>最外层电子书相同，电子层数增加，原子半径减小。</li>
</ol></li>
<li>离子半径：
<ol type="1">
<li>同种元素的离子半径，阴离子大于原子大于阳离子，低价阳离子大于高价阳离子。</li>
<li>电子层结构相同的离子，核电荷数越大，半径越小。</li>
<li>同主族元素的离子，电子层越多，半径越大。</li>
<li>带电荷、电子层不同的离子可以用一个中间离子作比较。</li>
</ol></li>
</ol>
<h4 id="元素金属性和非金属性">2. 元素金属性和非金属性</h4>
<blockquote>
<h4 id="对角线规则">对角线规则</h4>
<p>在元素周期表中，某些主族元素与右下方的主族元素的有些性质是相似的（如<span class="math inline">$\ce{Li-Mg, Be-Al, B-Si}$</span>）。</p>
</blockquote>
<ol type="1">
<li>金属性：原子越容易失去电子，金属性越强。
<ol type="1">
<li>金属活动顺序表越靠前，金属性越强。</li>
<li>单质与水或非氧化性酸反应越剧烈，金属性越强。</li>
<li>单质还原性越强或离子氧化性越弱，金属性越强。</li>
<li>最高价氧化物对应水化物的碱性越强，金属性越强。</li>
<li>若<span class="math inline">$\ce{X}$</span>金属能置换<span class="math inline">$\ce{Y}$</span>离子，则<span class="math inline">$\ce{X}$</span>金属金属性强于<span class="math inline">$\ce{Y}$</span>金属。</li>
<li>元素原子（或离子）失去（或得到）电子时，吸收能量越少（越多），失电子越难（越容易），金属性越弱（越强）。</li>
<li>原电池中，负极金属和正极金属构成原电池，则负极金属强于正极金属。</li>
<li>电解中，阴极离子放电顺序与金属性相反。</li>
<li>金属电负性越低金属性越强。</li>
</ol></li>
<li>非金属性：原子越容易得到电子，非金属性越强。
<ol type="1">
<li>与<span class="math inline">$\ce{H2}$</span>化合越容易，气态氢化物越稳定，非金属性越强。</li>
<li>单质氧化性越强，阴离子还原性越弱，非金属性越强。</li>
<li>最高价氧化物对应水化物酸性越强，非金属性越强。</li>
<li>若<span class="math inline">$\ce{X}$</span>单质能置换<span class="math inline">$\ce{Y}$</span>阴离子，则<span class="math inline">$\ce{X}$</span>的非金属性强于<span class="math inline">$\ce{Y}$</span>（如<span class="math inline">$\ce{Cl2}$</span>置换<span class="math inline">$\ce{Br-}$</span>）。</li>
<li>元素原子（或离子）失去（或得到）电子时，吸收能量越少（越多），失电子越难（越容易），非金属性越强（越弱）。</li>
<li>非金属电负性越高非金属性越强。</li>
</ol></li>
</ol>
<h4 id="元素电负性">3. 元素电负性</h4>
<p>​
<strong>电负性</strong>是用来衡量元素在化合物中吸引电子能力的物理量，规定<span class="math inline">$\ce{F}$</span>电负性为 4.0
，并以此规定确定其他元素的电负性。</p>
<ol type="1">
<li>同一主族电负性从上到下呈现减小趋势。</li>
<li>同一周期主族元素从左往右电负性逐渐增加。</li>
<li>金属电负性一般小于 1.8 ，非金属电负性一般大于 1.8
。金属元素电负性越低金属越活泼金属性越强，非金属电负性越大非金属越活泼非金属性越强。</li>
<li>电负性数值低的元素在化合物中吸引电子能力弱，呈正价。电负性数值高的在化合物中吸引电子能力强，呈负价。</li>
<li>一般来说，如果两个成键元素电负性差值大于 1.7
，通常是离子键；如果小于 1.7 ，一般是共价键。（值得注意的是，<span class="math inline">$\ce{HF}$</span>是共价化合物）</li>
</ol>
<h4 id="元素第一电离能">4. 元素第一电离能</h4>
<p>​ <strong>第一电离能</strong>指元素气态原子失去一个电子形成<span class="math inline"> + 1</span>价气态阳离子所需要的最低能量，符号<span class="math inline"><em>I</em><sub>1</sub></span>。第一电离能可以用来衡量元素气态原子失电子的难易程度。</p>
<ol type="1">
<li><p>同一主族，随着原子序数的增加，第一电离能减小，自上而下越来越容易失去电子。</p></li>
<li><p>同一周期，随着原子序数的增加，第一电离能增大，从左往右原子越来越失去电子。同周期主族元素，<span class="math inline">$n\ce{s^2}$</span>、<span class="math inline">$n\ce{s^2}p^3$</span>电离能因为<span class="math inline">$\ce{p}$</span>轨道全空或半充满的稳定状态而电离能偏高。</p></li>
<li><p>金属性和电离能不完全挂钩。</p></li>
</ol>]]></content>
      <categories>
        <category>High School</category>
        <category>Chemistry</category>
      </categories>
      <tags>
        <tag>School Notes</tag>
        <tag>Chemistry</tag>
        <tag>High School</tag>
      </tags>
  </entry>
  <entry>
    <title>弱电解质电离平衡</title>
    <url>/2022/01/31/chemistry/BK%207%20%E7%94%B5%E8%A7%A3%E8%B4%A8%E6%BA%B6%E6%B6%B2/P1%20%E5%BC%B1%E7%94%B5%E8%A7%A3%E8%B4%A8%E7%94%B5%E7%A6%BB%E5%B9%B3%E8%A1%A1/</url>
    <content><![CDATA[Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
<h2 id="知识聚焦">知识聚焦</h2>
<h3 id="一电解质与非电解质">一、电解质与非电解质</h3>
<p><img src="https://raw.githubusercontent.com/PassionPenguin/picgo-database/main/image-20220131142628240.png" alt="image-20220131142628240" style="zoom: 25%;"></p>
<blockquote>
<h4 id="电解质的导电能力">电解质的导电能力</h4>
<p>​
电解质强弱是影响溶液导电能力的因素。电解质溶液的导电能力与单位体积中自由移动的离子数目和离子带电量有关。</p>
<h5 id="判断电解质强弱的方法">判断电解质强弱的方法</h5>
<ol type="1">
<li>同浓度同温度下进行导电性对比实验。</li>
<li>同浓度同温度下比较反应速率快慢（如比较酸性，可以投<span class="math inline">$\ce{Zn}$</span>粒到醋酸和盐酸中）。</li>
<li>比较浓度和<span class="math inline">$\ce{pH}$</span>的关系，如<span class="math inline">$\ce{0.1 mol\cdot L^{-1}}$</span>醋酸溶液的<span class="math inline">$\ce{pH&gt;1}$</span>，证明醋酸是弱电解质。</li>
<li>测对应盐的酸碱性，比如<span class="math inline">$\ce{NaAc}$</span>溶液呈碱性，可以证明<span class="math inline">$\ce{HAc}$</span>是弱酸。</li>
<li>通过稀释溶液后<span class="math inline">$\ce{pH}$</span>和稀释倍数的关系，如<span class="math inline">$\ce{pH=2}$</span>的酸溶液稀释<span class="math inline">100</span>倍，<span class="math inline">$\ce{pH&lt;4}$</span>证明酸是弱酸。</li>
<li>实验验证电离平衡，如醋酸溶液加入石蕊呈红色（酸性），加入醋酸铵（<span class="math inline">$\ce{pH}$</span>接近<span class="math inline">7</span>），颜色变浅，证明是弱酸。</li>
<li>利用强酸（碱）制弱酸（碱）的原则，如向苯酚钠中通入<span class="math inline">$\ce{CO2}$</span>，出现浑浊，证明酸性<span class="math inline">$\ce{H2CO3&gt;PhOH}$</span>。</li>
<li>利用元素周期表进行判断（酸碱性），也即使用非金属性、金属性或电负性进行判断。</li>
</ol>
</blockquote>
<h3 id="二弱电解质的电离平衡">二、弱电解质的电离平衡</h3>
<h4 id="意义与特征">1. 意义与特征</h4>
<p>​
在一定条件下，弱电解质离子化速率和分子化速率相等时，达到<strong>电离平衡状态</strong>。电离平衡具有如下特征：</p>
<ol type="1">
<li>弱电解质电离具有可逆性。</li>
<li><span class="math inline"><em>v</em><sub><em>电</em><em>离</em></sub> = <em>v</em><sub><em>结</em><em>合</em></sub> ≠ 0</span>的动态平衡。</li>
<li>条件一定，分子和离子浓度一定。</li>
<li>条件改变，平衡破坏，发生移动。</li>
</ol>
<h4 id="电离平衡常数">2. 电离平衡常数</h4>
<p>​ 对于反应<span class="math inline">$\ce{AB&lt;=&gt;A+
+B-}$</span>，<span class="math inline">$K=\ce{\dfrac{[A+][B-]}{[AB]}}$</span>（均为平衡浓度），其中酸常用<span class="math inline"><em>K</em><sub><em>a</em></sub></span>表示，碱常用<span class="math inline"><em>K</em><sub><em>b</em></sub></span>表示。电离平衡常数可以表示在相同温度下弱电解质的相对强弱（与浓度无关）。==多元弱酸多步水解且<span class="math inline"><em>K</em><sub><em>a</em>1</sub> &gt; <em>K</em><sub><em>a</em>2</sub> &gt; ⋯</span>，多元弱碱一步水解==。</p>
<h3 id="二水的电离ph-与离子积">二、水的电离、pH 与离子积</h3>
<p>​ 标况下，纯水<span class="math inline">$\ce{[H+]=[OH-]=10^{-7}mol\cdot
L^{-1}}$</span>，<span class="math inline">$\ce{pH=7}$</span>，<span class="math inline">$K_w=\ce{[H+]\times[OH-]}=10^{-14}$</span>。<span class="math inline"><em>K</em><sub><em>w</em></sub></span>随温度的升高而增大，不管在哪种水溶液中，<span class="math inline">$\ce{[H+]_{H_2O}=[OH-]_{H_2O}}$</span>。</p>
<p>​ 溶液的酸碱性与 pH 值并不直接挂钩，只取决于<span class="math inline">$\ce{[H+]}$</span>和<span class="math inline">$\ce{[OH-]}$</span>的相对大小。<span class="math inline">$\ce{pH=-\lg[H+], pOH=-\lg[OH-]}$</span>。</p>]]></content>
      <categories>
        <category>High School</category>
        <category>Chemistry</category>
      </categories>
      <tags>
        <tag>School Notes</tag>
        <tag>Chemistry</tag>
        <tag>High School</tag>
      </tags>
  </entry>
  <entry>
    <title>盐类水解平衡</title>
    <url>/2022/01/31/chemistry/BK%207%20%E7%94%B5%E8%A7%A3%E8%B4%A8%E6%BA%B6%E6%B6%B2/P2%20%E7%9B%90%E7%B1%BB%E6%B0%B4%E8%A7%A3%E5%B9%B3%E8%A1%A1/</url>
    <content><![CDATA[Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
<h2 id="知识聚焦">知识聚焦</h2>
<h3 id="一盐类水解">一、盐类水解</h3>
<p>​ 盐类水解的实质是，盐电离出来的一种或多种离子和水电离出来的<span class="math inline">$\ce{H+/OH-}$</span>形成了弱电解质，破坏了水的电离平衡，使溶液呈酸性、中性或碱性，<strong>本质是中和反应的逆反应，即盐+水<span class="math inline">$\ce{&lt;=&gt;}$</span>酸+碱</strong>，属于吸热反应，熵增。</p>
<blockquote>
<h3 id="盐类水解口诀无弱不水解谁弱谁水解越弱越水解谁强显谁性">盐类水解口诀：无弱不水解，谁弱谁水解，越弱越水解，谁强显谁性。</h3>
</blockquote>
<blockquote>
<h5 id="盐类水解离子方程式注意事项">盐类水解离子方程式注意事项</h5>
<ol type="1">
<li>因为盐类水解程度较轻且过程可逆，所以要用<span class="math inline">$\ce{&lt;=&gt;}$</span>；水解产物如果有气体或沉淀，也不标<span class="math inline">$\ce{v / ^}$</span>。</li>
<li>如果是双水解完全反应生成气体沉淀，则要用等号，标<span class="math inline">$\ce{v 、 ^}$</span>。</li>
<li>多元弱酸盐水解分步进行，以第一步为主，不可以合并。</li>
<li>多元弱碱一步水解。</li>
</ol>
</blockquote>
<h3 id="二水解平衡的影响因素">二、水解平衡的影响因素</h3>
<h4 id="本质盐的本性越弱越水解">1. 本质：盐的本性（越弱越水解）</h4>
<h5 id="不同弱酸对应的盐越弱越水解">不同弱酸对应的盐：越弱越水解</h5>
<p>碱性<span class="math inline">$\ce{NaClO&gt;NaHCO3}$</span>，对应的酸<span class="math inline">$\ce{HClO&lt;H2CO3}$</span>。</p>
<h5 id="不同弱碱对应的盐越弱越水解">不同弱碱对应的盐：越弱越水解</h5>
<p>酸性<span class="math inline">$\ce{NH3Cl&lt;MgCl2&lt;AlCl3}$</span>，对应的碱<span class="math inline">$\ce{NH3\cdot
H2O&lt;Mg(OH)2&lt;Al(OH)3}$</span>。</p>
<h5 id="同一弱酸对应的盐正盐水解程度酸式盐水解程度">同一弱酸对应的盐：正盐水解程度&gt;酸式盐水解程度</h5>
<p>碱性<span class="math inline">$\ce{Na2CO3&gt;NaHCO3}$</span>，对应的酸<span class="math inline">$\ce{HCO^-3&lt;H2CO3}$</span>。</p>
<h5 id="多元弱酸对应酸式盐一般水解趋势大于电离趋势">多元弱酸对应酸式盐一般水解趋势大于电离趋势</h5>
<p>同浓度 pH，<span class="math inline">$\ce{Na2SO3&gt;Na2SO4&gt;NaHSO3&gt;NaHSO4}$</span>，<span class="math inline">$\ce{Na3PO4&gt;Na2HPO4&gt;NaH2PO4&gt;H3PO4}$</span>（<span class="math inline">$\ce{NaH2PO4/NaHSO3/NaHC2O4}$</span>除外）。</p>
<h4 id="外因符合勒夏特列原理">2. 外因：符合勒夏特列原理</h4>
<ol type="1">
<li>温度：升温促水解，降温抑水解。</li>
<li>浓度：<span class="math inline">$\ce{Al^3+ + 3H2O &lt;=&gt; Al(OH)3
+ 3H+}$</span>，加水稀释促水解（<span class="math inline">$\ce{[H+]
v}$</span>），加固体<span class="math inline">$\ce{AlCl3}$</span>促水解（<span class="math inline">$\ce{[H+] ^}$</span>）。</li>
</ol>
<blockquote>
<h3 id="盐类水解快捷计算规律">盐类水解快捷计算规律</h3>
<p><span class="math inline">$\ce{K_h=\dfrac{K_w}{K_a}}$</span></p>
</blockquote>
<blockquote>
<h3 id="三大守恒">三大守恒</h3>
<h5 id="物料守恒元素守恒">物料守恒（元素守恒）</h5>
<p>​
电解质溶液中某一组分的原始浓度等于它在溶液中各种存在形式的浓度和（如<span class="math inline">$\ce{0.1 mol\cdot L^{-1}NaHS,
[HS^-]+[S^2-]+[H2S]=0.1mol\cdot L^{-1}}$</span>）。</p>
<h5 id="电荷守恒">电荷守恒</h5>
<p>​ 电解质溶液中所有阳离子带电量和所有阴离子带电量相等（如<span class="math inline">$\ce{NaHCO3, [H+] + [Na+] = [OH-] +[HCO3-] +
2[CO3^2-]}$</span>）。</p>
<h5 id="质子守恒">质子守恒</h5>
<p>​ 电解质溶液中水电离<span class="math inline">$\ce{H2O &lt;=&gt; H+ +
OH-}$</span>，即电解质得氢（如弱酸强碱盐的水解）等于水释放的氢氧根浓度（如<span class="math inline">$\ce{NaHCO3, [H2CO3] + [H+] = [OH-] +
[CO3^2-]}$</span>）。</p>
</blockquote>
<blockquote>
<h5 id="盐溶液蒸发产物">盐溶液蒸发产物</h5>
<ol type="1">
<li>注意是否会发生氧化还原反应或分解反应（如<span class="math inline">$\ce{Fe^{II}, ClO-, HCO3-}$</span>受热反应）。</li>
<li>如果是<span class="math inline">$\ce{AlCl3,
Fe(NO3)3}$</span>这类的盐对应的阴离子会得到氢离子变成易挥发性酸，如<span class="math inline">$\ce{FeCl3}$</span>水解后，铁变成氢氧化物，氯离子得到氢离子变成<span class="math inline">$\ce{HCl}$</span>会挥发。</li>
</ol>
</blockquote>]]></content>
      <categories>
        <category>High School</category>
        <category>Chemistry</category>
      </categories>
      <tags>
        <tag>School Notes</tag>
        <tag>Chemistry</tag>
        <tag>High School</tag>
      </tags>
  </entry>
  <entry>
    <title>难溶电解质的溶解平衡</title>
    <url>/2022/01/31/chemistry/BK%207%20%E7%94%B5%E8%A7%A3%E8%B4%A8%E6%BA%B6%E6%B6%B2/P3%20%E9%9A%BE%E6%BA%B6%E7%94%B5%E8%A7%A3%E8%B4%A8%E7%9A%84%E6%BA%B6%E8%A7%A3%E5%B9%B3%E8%A1%A1/</url>
    <content><![CDATA[Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
<h2 id="知识聚焦">知识聚焦</h2>
<h3 id="一沉淀溶解平衡">一、沉淀溶解平衡</h3>
<p>​
在一定条件下，难溶电解质溶于水，当沉淀溶解的速率和沉淀生成的速率相等时，形成该电解质的饱和溶液，这种平衡称为<strong>沉淀溶解平衡</strong>。</p>
<p>​ 对于难溶强电解质<span class="math inline">$\ce{M_mN_n}$</span>的溶解<span class="math inline">$\ce{M_mN_n&lt;=&gt;mM^{n+}(aq) +
nN^{m-}}$</span>，<span class="math inline">$K_{sp}=\ce{[M^{n+}]^m[N^{m-}]^n}$</span>为该电解质的溶度积常数。</p>
<blockquote>
<h4 id="当溶解在溶液中的离子浓度小于ce10-5molcdot-l-1则说明该离子沉淀完全">当溶解在溶液中的离子浓度小于<span class="math inline">$\ce{10^{-5}mol\cdot
L^{-1}}$</span>则说明该离子沉淀完全。</h4>
</blockquote>
<h3 id="二沉淀溶解的应用">二、沉淀溶解的应用</h3>
<h4 id="沉淀的生成">1. 沉淀的生成</h4>
<p>​ 在工业生产等工艺中，常调整<span class="math inline">$\ce{pH}$</span>到合适值沉淀某一金属以沉淀该金属，或者选择添加沉淀剂，如对应阴离子可以投入氯离子进行沉淀。</p>
<h4 id="沉淀的溶解">2. 沉淀的溶解</h4>
<p>​ 为了溶解难溶性电解质，我们可以添加酸碱调节<span class="math inline">$\ce{pH}$</span>，可以使用氧化还原反应（如<span class="math inline">$\ce{CuS,
HgS}$</span>溶于氧化性酸），可以制成配合物溶解（如<span class="math inline">$\ce{AgCl}$</span>溶解于氨水生成配合物银氨溶液），可以使用溶解能力较强的物质使其转换等。</p>]]></content>
      <categories>
        <category>High School</category>
        <category>Chemistry</category>
      </categories>
      <tags>
        <tag>School Notes</tag>
        <tag>Chemistry</tag>
        <tag>High School</tag>
      </tags>
  </entry>
  <entry>
    <title>化学反应速率、方向</title>
    <url>/2022/01/31/chemistry/BK%206%20%E5%8C%96%E5%AD%A6%E5%8F%8D%E5%BA%94%E9%80%9F%E7%8E%87%E3%80%81%E6%96%B9%E5%90%91%E4%B8%8E%E5%8C%96%E5%AD%A6%E5%B9%B3%E8%A1%A1/P1%20%E5%8C%96%E5%AD%A6%E5%8F%8D%E5%BA%94%E9%80%9F%E7%8E%87%E3%80%81%E6%96%B9%E5%90%91/</url>
    <content><![CDATA[Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
<h2 id="知识聚焦">知识聚焦</h2>
<h3 id="一化学反应速率">一、化学反应速率</h3>
<p>化学反应中的反应速率用<span class="math inline"><em>v</em> = <em>Δ</em><em>c</em>/<em>Δ</em><em>t</em></span>表示，指代反应物浓度减小或生成物浓度增加的速率。</p>
<blockquote>
<h5 id="如果反应体系相分离了其中几种组分是固相或者只有一种是液相而其他都是气相单独的那一种物质的浓度变化近似于不变浓度近似于-1">如果反应体系相分离了，其中几种组分是固相，或者只有一种是液相而其他都是气相，单独的那一种物质的浓度变化近似于不变，浓度近似于
1 。</h5>
</blockquote>
<h4 id="影响化学反应速率的因素">影响化学反应速率的因素</h4>
<ol type="1">
<li><p>内因：反应物的性质是反应速率的主要决定因素。</p></li>
<li><p>有效碰撞理论：</p>
<ol type="1">
<li>反应物分子之间发生碰撞是反应发生的基础，有效的碰撞（较高能量+正确方向）能够使反应物反应。</li>
<li>活化分子能量较高，可以在正确方向上碰撞时克服分子间作用力而断键。</li>
<li>活化分子数越多，有效碰撞次数越多，反应速率越快。</li>
</ol></li>
</ol>
<table>
<colgroup>
<col style="width: 13%">
<col style="width: 23%">
<col style="width: 18%">
<col style="width: 13%">
<col style="width: 15%">
<col style="width: 15%">
</colgroup>
<thead>
<tr class="header">
<th>改变条件</th>
<th>单位体积内分子总数</th>
<th>活化分子百分数</th>
<th>活化分子数</th>
<th>有效碰撞次数</th>
<th>化学反应速率</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>增加浓度</td>
<td>增多</td>
<td>不变</td>
<td>增多</td>
<td>增多</td>
<td>加快</td>
</tr>
<tr class="even">
<td>增大压强</td>
<td>增多</td>
<td>不变</td>
<td>增多</td>
<td>增多</td>
<td>加阔</td>
</tr>
<tr class="odd">
<td>升高温度</td>
<td>不变</td>
<td>增大</td>
<td>增多</td>
<td>增多</td>
<td>加快</td>
</tr>
<tr class="even">
<td>使用催化剂</td>
<td>不变</td>
<td>增大</td>
<td>增多</td>
<td>增多</td>
<td>加快</td>
</tr>
</tbody>
</table>
<ol start="3" type="1">
<li>外因：外界条件在一定范围内影响反应速率。
<ol type="1">
<li>温度：升温使反应物分子能量增高，增加了活化分子数。</li>
<li>浓度：增加反应物浓度，可以让活化分子数增加。</li>
<li>压强：增大压强，等同于增大浓度，使分子间有效碰撞的增加。</li>
<li>催化剂：催化剂可以降低反应的活化能，进而增加活化分子百分数。</li>
<li>光、超声波、激光、放射线、电磁波、反应物尺寸以及形成原电池等也会影响反应速率。</li>
</ol></li>
</ol>
<blockquote>
<h5 id="反应速率判断的注意事项">反应速率判断的注意事项</h5>
<ol type="1">
<li>一定要注意改变条件是否改变了反应，比如升温到一定温度可能会发生其他的反应，或稀硫酸和金属反应变成了浓硫酸和其他金属的反应，改变了反映的本质。</li>
<li>恒容情况，增加与反应无关的气体（气体体系，不与体系反应）或无关的固态电解质（液体体系，不与体系反应），反应物本身并无变化，致使反应速率并不会改变。</li>
<li>恒压情况，增加与反应无关的气体（气体体系，不与体系反应）或无关的液体（液体体系，不与体系反应），反应物本身等同于被稀释，致使反应速率减小。</li>
<li>催化剂会同等程度的改变可逆反应双向的反应速率，不改变平衡状态，不改变反应的热效应。</li>
</ol>
</blockquote>
<blockquote>
<h3 id="不会影响反应速率的因素增减固体加等浓度溶液固液反应改变压强容积一定充入不反应气体">不会影响反应速率的因素：增减固体、加等浓度溶液、固液反应改变压强、容积一定充入不反应气体。</h3>
</blockquote>
<h3 id="二自发反应">二、自发反应</h3>
<p>​
<strong>自发过程</strong>指在一定条件下不借助外部力量就可以自动进行的过程，<strong>自发反应</strong>指在一定条件下无需外接帮助就可以自动进行的反应。</p>
<p>​ <strong>熵</strong>（符号<span class="math inline"><em>S</em></span>，<span class="math inline"><em>S</em>(<em>g</em>) &gt; <em>S</em>(<em>l</em>) &gt; <em>S</em>(<em>s</em>)</span>）和焓是判断自发反应的依据，为了判断反映是否能自发进行，我们使用吉布斯自由能<span class="math inline"><em>Δ</em><em>G</em> = <em>Δ</em><em>H</em> − <em>T</em><em>Δ</em><em>S</em></span>进行判断：</p>
<ol type="1">
<li><span class="math inline"><em>Δ</em><em>G</em> &gt; 0</span>反应不自发进行。</li>
<li><span class="math inline"><em>Δ</em><em>G</em> &lt; 0</span>反应自发进行。</li>
<li><span class="math inline"><em>Δ</em><em>G</em> = 0</span>反应处于平衡状态。</li>
</ol>
<blockquote>
<h5 id="反应能自发反应但反应不一定会发生">反应能自发反应，但反应不一定会发生。</h5>
</blockquote>]]></content>
      <categories>
        <category>High School</category>
        <category>Chemistry</category>
      </categories>
      <tags>
        <tag>School Notes</tag>
        <tag>Chemistry</tag>
        <tag>High School</tag>
      </tags>
  </entry>
  <entry>
    <title>化学平衡</title>
    <url>/2022/01/31/chemistry/BK%206%20%E5%8C%96%E5%AD%A6%E5%8F%8D%E5%BA%94%E9%80%9F%E7%8E%87%E3%80%81%E6%96%B9%E5%90%91%E4%B8%8E%E5%8C%96%E5%AD%A6%E5%B9%B3%E8%A1%A1/P2%20%E5%8C%96%E5%AD%A6%E5%B9%B3%E8%A1%A1/</url>
    <content><![CDATA[Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
<h2 id="知识聚焦">知识聚焦</h2>
<h3 id="一化学平衡状态">一、化学平衡状态</h3>
<p>​
在一定条件下的可逆反应中，正反应速率和逆反应速率相等，反应混合物中各组分的质量分数保持不变的状态称为<strong>化学平衡状态</strong>。</p>
<blockquote>
<h4 id="化学平衡状态特征">化学平衡状态特征</h4>
<ol type="1">
<li><p>化学平衡是一个动态平衡，平衡后正逆反应<em>仍然在进行</em>，并没有停止。</p></li>
<li><p>可逆反应平衡后，反应物中各组分的浓度保持不变。</p></li>
</ol>
</blockquote>
<h3 id="二化学平衡移动">二、化学平衡移动</h3>
<p>​
在反应平衡后，改变外界条件，如果让正逆反应速率不再相同，化学反应就会在新的条件下达到新的平衡，也就是平衡的移动。</p>
<p>​
如果在反应平衡后，改变外界影响了平衡的条件，平衡会向减弱这种改变的方向移动，即<strong>勒夏特列原理</strong>或<strong>平衡移动原理</strong>。</p>
<h4 id="影响化学平衡的因素">1. 影响化学平衡的因素</h4>
<ol type="1">
<li><p>浓度：其他条件不变时，增大反应物浓度或减小生成物浓度会使平衡正移；减小反应物浓度或增大生成物浓度会使平衡逆移。</p></li>
<li><p>压强：其他条件不变时，增大压强会使平衡向气体体积缩小的方向移动；减小压强会使平衡向气体体积增大的方向移动。（如果反应前后气体体积不变，则改变压强可以同时同样程度地改变正逆反应速率，平衡不移动）</p>
<p>==压强的改变等同于浓度的改变，因而考虑压强前需要考虑是否恒压恒容。==</p></li>
<li><p>温度：其他条件不变时，升温会使平衡向吸热反应的方向移动；降温会使平衡向放热反应的方向移动。</p></li>
<li><p>催化剂：催化剂能够同等程度地改变正逆反应速率，不影响化学平衡。</p></li>
</ol>
<blockquote>
<h3 id="不会影响化学平衡的因素增减固体加各组分均等浓度溶液固液反应改变压强体积一定改变压强或充入不反应气体使用催化剂">不会影响化学平衡的因素：增减固体、加各组分均等浓度溶液、固液反应，改变压强、体积一定改变压强或充入不反应气体、使用催化剂。</h3>
</blockquote>
<blockquote>
<h5 id="常见判断错误">常见判断错误</h5>
<ol type="1">
<li>反应<span class="math inline">$\ce{2NO2(g)&lt;=&gt;N2O4(g)}$</span>加压，平衡正向移动，但因为只能抵消变化，所以颜色应该是先变深，随即变浅，平衡在比初始颜色深的平衡点。</li>
<li>反应<span class="math inline">$\ce{H2(g) +I2(g) &lt;=&gt;
2HI(g)}$</span>加压，平衡不移动，但是改变了碘蒸气的浓度，所以会颜色变深。</li>
</ol>
</blockquote>
<h4 id="化学平衡方向的判断">2. 化学平衡方向的判断</h4>
<ol type="1">
<li><p>化学平衡常数（<span class="math inline"><em>K</em></span>）和浓度商（<span class="math inline"><em>Q</em></span>）的大小比较可用于判断平衡的移动方向：</p>
<ol type="1">
<li><p><span class="math inline"><em>Q</em> &lt; <em>K</em></span>，平衡正移。</p>
<ol start="2" type="1">
<li><span class="math inline"><em>Q</em> = <em>K</em></span>，反应平衡。</li>
</ol></li>
<li><p><span class="math inline"><em>Q</em> &gt; <em>K</em></span>，平衡逆移。</p></li>
</ol></li>
<li><p>使用勒夏特列原理可用于判断平衡移动方向：改变平衡的条件，平衡会向减弱这种改变的方向移动（适用于化学平衡、电离平衡、溶解平衡和水解平衡）。</p></li>
<li><p>通过比较正逆反应速率，可以判断平衡的移动方向：</p>
<ol type="1">
<li><span class="math inline"><em>v</em><sub><em>正</em></sub> &gt; <em>v</em><sub><em>逆</em></sub></span>，平衡正移。</li>
<li><span class="math inline"><em>v</em><sub><em>正</em></sub> = <em>v</em><sub><em>逆</em></sub></span>，反应平衡。</li>
<li><span class="math inline"><em>v</em><sub><em>正</em></sub> &lt; <em>v</em><sub><em>逆</em></sub></span>，平衡逆移</li>
</ol></li>
</ol>
<blockquote>
<h3 id="更多的判断平衡状态的方法">更多的判断平衡状态的方法：</h3>
<table>
<colgroup>
<col style="width: 44%">
<col style="width: 44%">
<col style="width: 10%">
</colgroup>
<thead>
<tr class="header">
<th>反应</th>
<th><span class="math inline">$\ce{aA(g) + bB(g) &lt;=&gt; cC(g) +
dD(g)}$</span></th>
<th>是否平衡</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>混合物体系中各成分的含量</td>
<td>各物质的物质的量或各物质的物质的量分数一定</td>
<td>平衡</td>
</tr>
<tr class="even">
<td></td>
<td>各物质的质量或各物质的质量分数一定</td>
<td>平衡</td>
</tr>
<tr class="odd">
<td></td>
<td>各物质的体积或各物质的体积分数一定</td>
<td>平衡</td>
</tr>
<tr class="even">
<td></td>
<td>总体积、总压强、总物质的量一定</td>
<td>不一定平衡</td>
</tr>
<tr class="odd">
<td>压强</td>
<td><span class="math inline"><em>a</em> + <em>b</em> ≠ <em>c</em> + <em>d</em></span>，总压强一定</td>
<td>平衡</td>
</tr>
<tr class="even">
<td></td>
<td><span class="math inline"><em>a</em> + <em>b</em> = <em>c</em> + <em>d</em></span>，总压强一定</td>
<td>不一定平衡</td>
</tr>
<tr class="odd">
<td>混合气体的平均相对分子质量</td>
<td><span class="math inline"><em>a</em> + <em>b</em> ≠ <em>c</em> + <em>d</em></span>，<span class="math inline">$\overline{M_r}$</span>一定</td>
<td>平衡</td>
</tr>
<tr class="even">
<td></td>
<td><span class="math inline"><em>a</em> + <em>b</em> = <em>c</em> + <em>d</em></span>，<span class="math inline">$\overline{M_r}$</span>一定</td>
<td>不一定平衡</td>
</tr>
<tr class="odd">
<td>气体的颜色（反应物或生成物中存在有色气体）</td>
<td><span class="math inline"><em>a</em> + <em>b</em> ≠ <em>c</em> + <em>d</em></span>，颜色一定</td>
<td>平衡</td>
</tr>
<tr class="even">
<td></td>
<td><span class="math inline"><em>a</em> + <em>b</em> = <em>c</em> + <em>d</em></span>，颜色一定</td>
<td>不一定平衡</td>
</tr>
<tr class="odd">
<td>体系的密度</td>
<td>体积不变，密度一定</td>
<td>不一定平衡</td>
</tr>
</tbody>
</table>
</blockquote>
<blockquote>
<h3 id="平衡常数是温度的函数只与温度相关不受其他因素影响">平衡常数是温度的函数，只与温度相关，不受其他因素影响。</h3>
</blockquote>
<blockquote>
<h5 id="平衡常数关系式注意事项">平衡常数关系式注意事项</h5>
<ol type="1">
<li><p>不要把反应体系的纯固体、纯液体以及稀溶液的溶剂浓度写入平衡常数表达式，比如：</p>
<p><span class="math inline">$\ce{Cr2O7^2-(aq) +H2O(l) &lt;=&gt;
2CrO4^2-(aq) + 2H+(aq),
K_c=\dfrac{[CrO4^2-]^2[H+]^2}{Cr2O7^2-}}$</span></p>
<p>==但是在不是以 A 为稀溶剂的反应体系中反应，如果生成了 A 或消耗了
A，那么就要保留 A 的浓度==，比如：</p>
<p><span class="math inline">$\ce{HAc + CH2CH3OH &lt;=&gt; C2H5Ac +
H2O,K_c=\dfrac{[AcC2H5][H2O]}{[HAc][CH3CH2OH]}}$</span>（溶剂水和其他反应物的量相近，不能忽略，所以生成物<span class="math inline">$\ce{H2O}$</span>需要被计入。）</p>
<p>原则：我们规定<strong>稀溶液</strong>中溶剂的浓度为无量纲量<span class="math inline">1</span>（方便计算等工作）。</p></li>
<li><p>平衡常数与反应方程式的化学计量数相关，不同计量数，平衡常数的表达式与数值均不同。</p></li>
</ol>
</blockquote>
<h4 id="化学反应程度的判断">3. 化学反应程度的判断</h4>
<p>​
平衡常数是表明化学反应进行的最大程度（即反应限度）的特征值，不随反应物或生成物的浓度改变而改变，是温度的函数，因而可以用于判断化学反应的程度：</p>
<ol type="1">
<li><span class="math inline"><em>K</em> &gt; 10<sup>5</sup></span>，可以认为正向反应程度很大，完全反应。</li>
<li><span class="math inline"><em>K</em> ∈ [10<sup>−</sup>5,10<sup>5</sup>]</span>，可以认为该反应是典型的可逆反应。</li>
<li><span class="math inline"><em>K</em> &lt; 10<sup>−5</sup></span>，可以认为逆向反应反应程度很大，反应不能进行。</li>
</ol>
<h4 id="化学平衡的计算">4. 化学平衡的计算</h4>
<p>​ 对于反应<span class="math inline">$\ce{aA(g) + bB(g) &lt;=&gt;
cC(g) +
dD(g)}$</span>，可以利用三态（初始、变化、平衡）的量进行计算，格式如下：</p>
<p><img src="https://raw.githubusercontent.com/PassionPenguin/picgo-database/main/image-20220131003834295.png" alt="image-20220131003834295" style="zoom: 33%;"></p>
<h4 id="反应速率和化学平衡图像分析">5. 反应速率和化学平衡图像分析</h4>
<ol type="1">
<li><p>分析反应速度图像</p>
<p><strong>看起点</strong>：分清反应物和生成物，浓度减小的是反应物，浓度增大的是生成物，生成物多数以原点为起点。</p>
<p><strong>看变化趋势</strong>：分清正反应和逆反应，分清放热反应和吸热反应。</p>
<p><strong>看终点</strong>：分清消耗浓度和增加浓度。反应物的消耗浓度与生成物的增生浓度之比等于反应方程式中各物质的计量数之比。</p>
<blockquote>
<h3 id="图像的连续性与变化幅度">图像的连续性与变化幅度：</h3>
<p>对于速度一时间图象，看清曲线是连续的，还是跳跃的。分清“渐变”和“突变”、“大变”和“小变”。</p>
</blockquote>
<blockquote>
<h2 id="增大反应物浓度v_正突变v_逆渐变升高温度v_吸热大增v_放热小增">增大反应物浓度，<span class="math inline"><em>v</em><sub><em>正</em></sub></span>突变，<span class="math inline"><em>v</em><sub><em>逆</em></sub></span>渐变。升高温度，<span class="math inline"><em>v</em><sub><em>吸</em><em>热</em></sub></span>大增，<span class="math inline"><em>v</em><sub><em>放</em><em>热</em></sub></span>小增。</h2>
</blockquote></li>
<li><p>化学平衡图象问题的解答方法</p>
<p><strong>三步分析法</strong>：一看反应速率是增大还是减小；二看<span class="math inline"><em>Δ</em><em>v</em><sub><em>正</em></sub></span>、<span class="math inline"><em>Δ</em><em>v</em><sub><em>逆</em></sub></span>的相对大小；三看化学平衡移动的方向。</p>
<p><strong>四要素分析法</strong>：看曲线的起点；看曲线的变化趋势；看曲线的转折点；看曲线的终点。</p>
<blockquote>
<h3 id="先拐先平">先拐先平：</h3>
<p>对于可逆反应<span class="math inline">$\ce{aA(g) + bB(g) &lt;=&gt;
cC(g) +
dD(g)}$</span>，在转化率-时间曲线中，先出现拐点的曲线先达到平衡，代表的是<strong>温度高、压强大</strong>的条件。这时如果转化率也较高，则反应中<span class="math inline"><em>a</em> + <em>b</em> &gt; <em>c</em> + <em>d</em></span>若转化率降低，则表示<span class="math inline"><em>a</em> + <em>b</em> &lt; <em>c</em> + <em>d</em></span>。</p>
</blockquote>
<blockquote>
<h3 id="定一议二">定一议二：</h3>
<p>图象中有三个量时，先确定一个量不变，再讨论另外两个量的关系。</p>
</blockquote>
<blockquote>
<h3 id="等效平衡">等效平衡</h3>
<p>解决等效平衡问题时，先看是等体积还是不等体积，再看是恒压还是恒容，最后用一边倒的方式解决。</p>
<p>==恒温恒容，一边倒后与原平衡完全一致，则该情况是等同平衡==。 #####
不管是速率图象还是平衡图象，都要搞清纵、横坐标的含义，都要与化学原理相联系，特别是与平衡移动原理相联系。</p>
</blockquote></li>
</ol>]]></content>
      <categories>
        <category>High School</category>
        <category>Chemistry</category>
      </categories>
      <tags>
        <tag>School Notes</tag>
        <tag>Chemistry</tag>
        <tag>High School</tag>
      </tags>
  </entry>
  <entry>
    <title>化学能与电能</title>
    <url>/2022/01/31/chemistry/BK%205%20%E5%8C%96%E5%AD%A6%E5%8F%8D%E5%BA%94%E7%9A%84%E8%83%BD%E9%87%8F%E5%8F%98%E5%8C%96/P2%20%E5%8C%96%E5%AD%A6%E8%83%BD%E4%B8%8E%E7%94%B5%E8%83%BD/</url>
    <content><![CDATA[Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
<h2 id="知识聚焦">知识聚焦</h2>
<h3 id="一原电池">一、原电池</h3>
<h4 id="原电池">1. 原电池</h4>
<p>​ <strong>原电池</strong>指将化学能转变为电能的装置。</p>
<h4 id="原电池的构成">2. 原电池的构成</h4>
<p>​ 构成原电池的条件包括：</p>
<ol type="1">
<li>两个活泼性不同的电极；（一个发生氧化反应，一个发生还原反应）</li>
<li>电解质溶液或熔融电解质作为介质；（阴离子向负极移动，阳离子向正极移动）</li>
<li>形成闭合回路</li>
<li>存在自发的氧化还原反应</li>
<li>原电池可以用<strong>盐桥</strong>连接两个反应池，也可以用<strong>离子膜</strong>隔离两个反应池，以实现反应独立不干扰和反应定向发生等目的。</li>
</ol>
<blockquote>
<h4 id="原电池的分类">原电池的分类</h4>
<p>​ 原电池可以分为一次电池、二次电池，一次电池中包括燃料电池。</p>
<h5 id="普通一次电池">1. 普通一次电池</h5>
<h6 id="zn-mn-碱性电池">Zn-Mn 碱性电池</h6>
<p>​ 负极：<span class="math inline">$\ce{Zn +2OH- - 2e- -&gt;
Zn(OH)2}$</span></p>
<p>​ 正极：<span class="math inline">$\ce{2MnO2 +2H2O +2e- -&gt; 2MnOOH
+2OH-}$</span></p>
<h5 id="燃料电池">2. 燃料电池</h5>
<h6 id="氢氧酸性电池">氢氧酸性电池</h6>
<p>​ 负极：<span class="math inline">$\ce{2H2 - 4e- -&gt;
4H+}$</span></p>
<p>​ 正极：<span class="math inline">$\ce{O2 + 4H+ + 4e- -&gt;
2H2O}$</span></p>
<h6 id="氢氧碱性电池">氢氧碱性电池</h6>
<p>​ 负极：<span class="math inline">$\ce{2H2 + 4OH- - 4e- -&gt;
4H2O}$</span></p>
<p>​ 正极：<span class="math inline">$\ce{O2 + 2H2O + 4e- -&gt;
4OH-}$</span></p>
<h6 id="甲烷酸性电池">甲烷酸性电池</h6>
<p>​ 负极：<span class="math inline">$\ce{CH4 + 2H2O - 8e- -&gt; CO2 +
8H+}$</span></p>
<p>​ 正极：<span class="math inline">$\ce{2O2 + 8H+ + 8e- -&gt;
4H2O}$</span></p>
<h6 id="甲烷碱性电池">甲烷碱性电池</h6>
<p>​ 负极：<span class="math inline">$\ce{CH4 + 10OH- - 8e- -&gt; CO3^2-
+ 7H2O}$</span></p>
<p>​ 正极：<span class="math inline">$\ce{2O2 + 4H2O + 8e- -&gt;
8OH-}$</span></p>
<h5 id="二次电池可充电多次使用">3. 二次电池（可充电、多次使用）</h5>
<h6 id="铅蓄电池">铅蓄电池</h6>
<p>​ 负极放电：<span class="math inline">$\ce{Pb(s) + SO4^2-(aq) - 2e-
-&gt; PbSO4(s)}$</span></p>
<p>​ 正极放电：<span class="math inline">$\ce{PbO2(s) + 4H+(aq) +
SO4^2-(aq) + 2e- -&gt; PbSO4(s) + 2H2O(l)}$</span></p>
<p>​ 阳极充电：<span class="math inline">$\ce{PbSO4(s) + 2H2O(l) - 2e-
-&gt; PbO2(s) + 4H+(aq) + SO4^2-(aq)}$</span></p>
<p>​ 阴极充电：<span class="math inline">$\ce{PbSO4(s) + 2e- -&gt; Pb(s)
+ SO4^2-(aq)}$</span></p>
<h6 id="ni-cd-碱性蓄电池">Ni-Cd 碱性蓄电池</h6>
<p>​ 总反应式：<span class="math inline">$\ce{Cd + 2NiO(OH) + 2H2O
&lt;=&gt;[放电][充电] 2Ni(OH)2 + Cd(OH)2}$</span></p>
</blockquote>
<h3 id="二电解池">二、电解池</h3>
<h4 id="电解原理及其应用">1. 电解原理及其应用</h4>
<p>​
<strong>电解</strong>指电流通过电解质溶液或熔融电解质而在阴阳两极引起氧化还原反应的过程。</p>
<p>​ <strong>电解池</strong>指将电能转变为化学能的装置。</p>
<pre class="mermaid">graph TD;
    电源正极连接--&gt;阳极;
    阴离子移向--&gt;阳极;
    氧化反应--&gt;阳极;
    电源负极连接--&gt;阴极;
    阳离子移向--&gt;阴极;
    还原反应--&gt;阴极;</pre>
<blockquote>
<h3 id="书写原电池电解池反应式的快捷方法">书写原电池、电解池反应式的快捷方法</h3>
<p>​
<strong>加和性原则</strong>：燃料电池一般先写正极反应和总反应式，减去后即可得到较难书写的负极反应式。电解池中同理用电解总反应减去阴极反应式即可得到阳极反应式。</p>
</blockquote>
<blockquote>
<h3 id="原电池和电解池的判断方法">原电池和电解池的判断方法</h3>
<ol type="1">
<li>先分析有无外接电源。存在外接电源的是电解池，无外接电源的是原电池。</li>
<li>再看是否满足电解溶液或熔融电解质供导电，是否是闭合回路，是否有活泼性差异。</li>
<li>多池相连而无外电源时，两极活泼性差异最大的是原电池，其他都可看作是电解池。</li>
</ol>
</blockquote>
<h4 id="电解规律">2. 电解规律</h4>
<h5 id="电极类型">1. 电极类型</h5>
<p>​ 惰性电极：电极只导电不发生反应；</p>
<p>​ 非惰性电极：主要指金属活动顺序表中排在<span class="math inline">$\ce{Pt}$</span>前的金属单质（活泼金属<span class="math inline">$\ce{K, Ca, Na}$</span>之外）。</p>
<h5 id="放电顺序">2. 放电顺序</h5>
<p>​ ==阳极产物：活性阳极金属 ⇒ 无氧酸根离子 ⇒ <span class="math inline">$\ce{OH-}$</span> ⇒ 【熔融电解质下：含氧酸根离子 ⇒
<span class="math inline">$\ce{F-}$</span>】，即：==</p>
<ol type="1">
<li>金属材料做阳极（除了惰性金属<span class="math inline"><em>P</em><em>t</em></span>等）先被氧化成金属离子而溶解。</li>
<li>惰性电极下简单阴离子（<span class="math inline">$\ce{S^{2-}&gt;I^-&gt;Br^-&gt;Cl^-}$</span>）电势虽然比<span class="math inline">$\phi(\ce{H^+/H2})$</span>大，但是因为<span class="math inline">$\ce{OH^-}$</span>浓度及<span class="math inline">$\ce{O_2}$</span>超电势较大，因此阳极可以优先析出这些简单阴离子对应的物质（<span class="math inline">$\ce{S, I2, Br2, Cl2}$</span>）。</li>
<li>惰性电极下，溶液存在含氧酸根离子，电极电势大于<span class="math inline">$\phi(\ce{H^+/H2})$</span>，在阳极不易被氧化。</li>
</ol>
<p>​ ==阴极产物：金属离子【 ⇒ 浓度大（电镀等）下的 <span class="math inline">$\ce{Pb^2+ &gt; Sn^2+ &gt; Fe^2+ &gt;
Zn^2+}$</span>】 ⇒ <span class="math inline">$\ce{H+}$</span> ⇒ 【
熔融电解质下 <span class="math inline">$\ce{Al^3+ &gt; Mg^2+ &gt; Na^+
&gt; Ca^2+ &gt; K^+}$</span>】，即：==</p>
<ol type="1">
<li>电极电势比<span class="math inline">$\phi(\ce{H^+/H2})$</span>大的先被还原。</li>
<li>电极电势比<span class="math inline">$\phi(\ce{H^+/H2})$</span>小的金属阳离子（<span class="math inline">$\ce{Pb^2+ &gt; Sn^2+ &gt; Fe^2+ &gt;
Zn^2+}$</span>）因为<span class="math inline"><em>H</em><sub>2</sub></span>超电势较大，这些阳离子析出电势仍可能大于<span class="math inline">$\ce{H^+}$</span>的析出电势，所以这些金属也会先析出。</li>
<li>电极电势很小的金属离子（<span class="math inline">$\ce{Al^3+ &gt;
Mg^2+ &gt; Na^+ &gt; Ca^2+ &gt; K^+}$</span>）在阴极不易被还原。</li>
</ol>
<blockquote>
<h3 id="电解池产物判断">电解池产物判断</h3>
<ol type="1">
<li><p>阳极产物：</p>
<ol type="1">
<li>阳极为活泼金属（除了<span class="math inline">$\ce{Pt,
Au}$</span>），则活泼金属失电子，电极溶解。</li>
<li>阳极为惰性电极，则看阴离子的还原性，<span class="math inline">$\ce{S^2- &gt; I- &gt; Br- &gt; Cl- &gt; OH-
(H2O)}$</span>，非溶液考虑 <span class="math inline">$\ce{NO3- &gt;
SO4^2- &gt; CO3^2- &gt; F-}$</span>。</li>
</ol></li>
<li><p>阴极产物：</p>
<p>​ 看溶液中阳离子的氧化性强弱，<span class="math inline">$\ce{Ag+
&gt;Hg+ &gt; Fe^3+ &gt; Cu^2+ &gt; Pb^2+ &gt; H+ &gt; Sn^2+ &gt; Fe^2+
&gt; Zn^2+ &gt; H+ (H2O)}$</span>，非溶液考虑 <span class="math inline">$\ce{Al^3+ &gt; Mg^2+ &gt; Na+ &gt; Ca^2+ &gt;
K+}$</span>。</p></li>
</ol>
</blockquote>
<blockquote>
<h4 id="电解原理的应用">电解原理的应用</h4>
<table>
<colgroup>
<col style="width: 25%">
<col style="width: 25%">
<col style="width: 25%">
<col style="width: 25%">
</colgroup>
<thead>
<tr class="header">
<th>电解食盐水</th>
<th>电镀</th>
<th>电解精炼铜</th>
<th>电冶金属</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><span class="math inline">$\ce{2NaCl + 2H2O -&gt;[电解] 2NaOH + H2 ^
+ Cl2 ^}$</span></td>
<td>-</td>
<td>-</td>
<td><span class="math inline">$\ce{2NaCl(熔融) -&gt;[电解] 2Na + Cl2
^}$</span></td>
</tr>
<tr class="even">
<td>1. 阴阳极需要用阳离子交换膜隔离（只允许<span class="math inline">$\ce{Na+}$</span>通过，避免<span class="math inline">$\ce{H2, Cl2}$</span>混合爆炸和<span class="math inline">$\ce{Cl2, NaOH}$</span>反应。<br>2.
食盐水需要纯化，除去<span class="math inline">$\ce{Mg^2+, Ca^2+, Fe^2+,
SO4^2-}$</span>等离子。</td>
<td>1. 镀件作阳极，溶解。<br>2. 用含镀层阳离子的溶液作电镀液。<br>3.
电镀液浓度保持不变。</td>
<td>1. 粗铜作阳极，溶解。<br>2. 精铜作阴极。<br>3. 阳极泥包括<span class="math inline">$\ce{Ag, Au}$</span>等，电解液<span class="math inline">$\ce{[Cu^2+}]$</span>会不断减小，要定期更换。<br>4.
阳极减少<span class="math inline">$\ce{Cu}$</span>的质量小于阴极增加的质量<span class="math inline">$\ce{Cu}$</span></td>
<td>1. 电解含有离子键的金属化合物，如<span class="math inline">$\ce{NaCl}$</span>、<span class="math inline">$\ce{Al2O3}$</span>。<br>2. <span class="math inline">$\ce{AlCl3}$</span>不含有离子键，不能制备金属单质。</td>
</tr>
</tbody>
</table>
</blockquote>
<h3 id="三金属腐蚀与防护">三、金属腐蚀与防护</h3>
<h4 id="金属的腐蚀">1. 金属的腐蚀</h4>
<p>​
金属的腐蚀指金属单质失去电子形成金属阳离子的过程，分为化学腐蚀和电化学腐蚀，两者<strong>同时存在并以电化学腐蚀为主</strong>。</p>
<blockquote>
<h4 id="吸氧腐蚀和析氢腐蚀">吸氧腐蚀和析氢腐蚀</h4>
<p>​ 钢铁的电化学腐蚀包括析氢腐蚀和吸氧腐蚀，均氧化为<span class="math inline">$\ce{Fe^{II}}$</span>，但吸氧腐蚀会进一步转变为氢氧化铁，最后失去一部分水后形成铁锈。</p>
<p>​ 另外，在自然界中一般两者同时存在同时发生，并以吸氧腐蚀为主。</p>
<table>
<colgroup>
<col style="width: 15%">
<col style="width: 46%">
<col style="width: 37%">
</colgroup>
<thead>
<tr class="header">
<th></th>
<th>吸氧腐蚀</th>
<th>析氢腐蚀</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>电解液</td>
<td>碱性、中性或弱酸性</td>
<td>较强酸性</td>
</tr>
<tr class="even">
<td>正极反应式</td>
<td><span class="math inline">$\ce{O2 + 2H2O + 4e- -&gt;
4OH-}$</span></td>
<td><span class="math inline">$\ce{2H+ + 2e- -&gt; H2 ^}$</span></td>
</tr>
</tbody>
</table>
</blockquote>
<h4 id="金属的防护">2. 金属的防护</h4>
<ol type="1">
<li>改变金属的内部结构（如钢中添加<span class="math inline">$\ce{Cr,
Ni}$</span>制成不锈钢）。</li>
<li>在金属表面覆盖镀层：
<ol type="1">
<li>钢铁表面涂矿物性油脂、油漆或覆盖搪瓷、塑料等物质。</li>
<li>电镀、热镀、喷镀等方式镀上一层不易被腐蚀的金属。</li>
<li>用化学方法是钢铁表面钝化生成致密稳定的氧化膜。</li>
</ol></li>
<li>电化学保护法：
<ol type="1">
<li><strong>外加电流</strong>的阴极保护法（向阴极提供电子，即负极接被保护的金属）。</li>
<li><strong>牺牲阳极</strong>的阴极保护法（形成原电池，让被保护的金属成为电池正极）。</li>
</ol></li>
</ol>
<blockquote>
<h6 id="金属腐蚀的规律">金属腐蚀的规律</h6>
<ol type="1">
<li>同一电解质溶液中腐蚀强度：电解原理引起腐蚀&gt;原电池原理引起腐蚀&gt;化学腐蚀&gt;有防护措施的腐蚀。</li>
<li>不同溶液中腐蚀强度：金属在强电解质溶液中的腐蚀&gt;金属在弱电解质溶液中的腐蚀&gt;金属在非电解质溶液中的腐蚀。</li>
<li>有保护措施下的腐蚀强度：无防护措施的腐蚀&gt;一般防护措施下的腐蚀&gt;牺牲阳极法下的腐蚀&gt;外加电流法下的腐蚀。</li>
</ol>
</blockquote>]]></content>
      <categories>
        <category>High School</category>
        <category>Chemistry</category>
      </categories>
      <tags>
        <tag>School Notes</tag>
        <tag>Chemistry</tag>
        <tag>High School</tag>
      </tags>
  </entry>
  <entry>
    <title>化学能与热能</title>
    <url>/2022/01/31/chemistry/BK%205%20%E5%8C%96%E5%AD%A6%E5%8F%8D%E5%BA%94%E7%9A%84%E8%83%BD%E9%87%8F%E5%8F%98%E5%8C%96/P1%20%E5%8C%96%E5%AD%A6%E8%83%BD%E4%B8%8E%E7%83%AD%E8%83%BD/</url>
    <content><![CDATA[Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
Deleting input.tex
Deleting input.aux
Deleting input.dvi
Deleting input.log
Deleting output.svg
<h2 id="知识聚焦">知识聚焦</h2>
<h3 id="一化学反应的焓变">一、化学反应的焓变</h3>
<h4 id="焓和焓变">1. 焓和焓变</h4>
<p>​
<strong>焓</strong>是一个与内能相关的物理量，焓与内能均无法计算绝对值。单位
<span class="math inline"><em>k</em><em>J</em> ⋅ <em>m</em><em>o</em><em>l</em><sup>−1</sup></span>；符号<span class="math inline"><em>H</em></span>。</p>
<p>​ 焓变是恒压条件下，反应的热效应。单位 <span class="math inline"><em>k</em><em>J</em> ⋅ <em>m</em><em>o</em><em>l</em><sup>−1</sup></span>；符号<span class="math inline"><em>Δ</em><em>H</em></span>。</p>
<p>​ 反应体系<strong>放热</strong>，<strong>焓减小</strong>，<span class="math inline"><em>Δ</em><em>H</em> &lt; 0</span>。反应体系<strong>吸热</strong>，<strong>焓增大</strong>，<span class="math inline"><em>Δ</em><em>H</em> &gt; 0</span>。</p>
<p>​ 反应热不转换为电能光能等其他能量下，反应热=焓变。</p>
<p>​ ==判断焓变大小的时候，一定要注意正负号！==</p>
<h4 id="化学反应中能量变化的原因">2. 化学反应中能量变化的原因</h4>
<p>​
化学反应的本质是<em>反应物分子中旧化学键的断裂和生成物生成时新化学键的形成的过程</em>，化学键断裂时需要吸收能量，形成时需要释放能量，故而化学反应都会有能量变化。完整反应过程中吸收或放出的热量即为<strong>反应热</strong>，决定化学反应是放热反应亦或是吸热反应。</p>
<h4 id="反应热模型">3. 反应热模型</h4>
<h5 id="体系能量变化">体系能量变化</h5>
<p><img src="https://raw.githubusercontent.com/PassionPenguin/picgo-database/main/image-20220129185755475.png" alt="image-20220129185755475" style="zoom:67%;"></p>
<h5 id="键能模型">键能模型</h5>
<p><img src="https://raw.githubusercontent.com/PassionPenguin/picgo-database/main/image-20220130142412722.png" alt="image-20220130142412722" style="zoom:25%;"></p>
<p>​
<strong>活化能</strong>（又称壁垒）指一个化学反应中从基态到活跃态（断键）所需的能量，如果一个反应由多个反应构成，则该反应活化能指其中所有子反应中活化能最高的值，该反应的速率由活化能最高的子反应决定。使用<strong>催化剂</strong>可以降低反应的活化能；使用<strong>抑制剂</strong>可以升高反应的活化能。</p>
<h3 id="二热化学方程式">二、热化学方程式</h3>
<p>​
表示<strong>物质变化、状态与反应热</strong>的化学方程式即为<strong>热化学方程式</strong>。</p>
<blockquote>
<h6 id="书写热化学方程式及判断热化学方程式的正误">书写热化学方程式及判断热化学方程式的正误</h6>
<ol type="1">
<li>漏写或错写物质聚集状态</li>
<li>漏写焓变的正负与单位</li>
<li>反应热的数值与方程式的计量数不匹配</li>
<li>反应为化学平衡，反应不充分，焓变书写错误</li>
</ol>
</blockquote>
<h3 id="三中和热">三、中和热</h3>
<p>​ <strong>中和热</strong>表示在稀溶液中，酸与碱反应生成<span class="math inline">$1mol\ce{H2O(l)}$</span>的反应热（表示：<span class="math inline">$\ce{H+(aq) + OH-(aq) -&gt; H2O(l)}, \Delta
H=-57.3kJ\cdot mol^{-1}$</span>）。</p>
<blockquote>
<h5 id="注意事项">注意事项</h5>
<ol type="1">
<li>中和热是稀溶液而非浓溶液，浓溶液中溶质无法得到足够多的水分子而无法全部电离，且离子水化需要放出热量，会导致测定值有所偏差。</li>
<li>弱酸弱碱在溶液中不能完全电离，存在电离平衡，需要吸收一部分热量，会导致中和热偏小。</li>
<li>设备即使用碎泡沫塑料隔热保温，保温性能也较差，会导致一部分热量丧失。另外实验忽略了烧杯、温度计、搅拌器的吸热。</li>
<li>实验将溶液密度、比热容等同于水的密度、比热容，而实际均较大，会导致中和热偏小。</li>
<li>实验需要一种物质过量，以保证完全中和对应的一种物质，生成<span class="math inline">$1mol\ce{H2O(l)}$</span>。</li>
<li>环形玻璃搅拌棒可以使反应更充分更快速完成，搅拌范围更大。使用铁丝等散热快，范围小。</li>
<li>反应若生成沉淀（如<span class="math inline">$\ce{BaSO4}$</span>）或难电离物质，由于其溶解平衡或电离平衡往往会影响测定的热量大小。</li>
</ol>
</blockquote>
<p>​
实验仪器：大烧杯+小烧杯、环形玻璃搅拌棒、温度计、两桶两个、碎泡沫塑料或纸条、泡沫塑料板或硬纸板（中间有两个开孔）。</p>
<p>​
实验步骤：制作简易量热器（见下图）；用量筒精确测量反应溶液并测量温度；迅速混合溶液并记录最高温度；重复实验三次。</p>
<p>​ 数据处理：<span class="math inline">$\Delta
H=-\dfrac{Q}{n\ce{H2O}}$</span>，<span class="math inline"><em>Q</em> = <em>c</em><em>m</em><em>Δ</em><em>t</em></span>。</p>
<p><img src="https://raw.githubusercontent.com/PassionPenguin/picgo-database/main/image-20220129185834400.png" alt="image-20220129185834400" style="zoom:12.5%;"></p>
<h3 id="四燃烧热">四、燃烧热</h3>
<p>​ <strong>燃烧热</strong>表示<span class="math inline">25℃，101<em>k</em><em>P</em><em>a</em>, 1<em>m</em><em>o</em><em>l</em></span>纯物质<strong>完全</strong>燃烧<strong>生成</strong>指定产物<strong>放出的热量</strong>。</p>
<p>​ 指定产物：<span class="math inline">$\ce{C-&gt;CO2(g)}$</span>、<span class="math inline">$\ce{N-&gt;N2(g)}$</span>、<span class="math inline">$\ce{S-&gt;SO2(g)}$</span>、<span class="math inline">$\ce{H-&gt;H2O(l)}$</span>、<span class="math inline">$\ce{Cl-&gt;HCl(aq)}$</span></p>
<h3 id="五盖斯定律">五、盖斯定律</h3>
<p>​
<strong>盖斯定律</strong>的内容为：化学反应的反应热与过程无关。该定律又称为总热量守恒定律。</p>
<blockquote>
<h6 id="反应热的计算">反应热的计算</h6>
<ol type="1">
<li><p>依据：热化学方程式、盖斯定律与反应过程的焓变。</p></li>
<li><p>计算方法：数学上的移项、翻倍；盖斯定律的相加减。</p></li>
</ol>
</blockquote>]]></content>
      <categories>
        <category>High School</category>
        <category>Chemistry</category>
      </categories>
      <tags>
        <tag>School Notes</tag>
        <tag>Chemistry</tag>
        <tag>High School</tag>
      </tags>
  </entry>
  <entry>
    <title>移动应用安全的新标准</title>
    <url>/2021/08/10/computer%20science/backend/a-new-standard-for-mobile-app-security/</url>
    <content><![CDATA[<blockquote>
<ul>
<li>原文地址：<a href="https://security.googleblog.com/2021/04/a-new-standard-for-mobile-app-security.html">A
New Standard for Mobile App Security</a></li>
<li>原文作者：<a href="https://security.googleblog.com/">Brooke Davis
and Eugene Liderman, Android Security and Privacy Team</a></li>
<li>译者：<a href="https://github.com/PassionPenguin">霜羽
Hoarfroster</a></li>
<li>校对者：<a href="https://github.com/Chorer">Chorer</a>、<a href="https://github.com/CarlosChenN">CarlosChenN</a></li>
</ul>
</blockquote>
<p><img src="https://1.bp.blogspot.com/-TNecO7NNDL8/YHdg3EKOL3I/AAAAAAAADsc/EW2Jj7nVYaQxkZSvrxpmXZudgt1yrtwIwCNcBGAsYHQ/s0/Image%2B%23%2B0.png"></p>
<p>面对过去一年带来的所有挑战，用户越来越依赖他们的移动设备来制定健身计划、与亲人保持联系、远程工作以及轻松订购杂货等。根据
<a href="https://www.emarketer.com/content/us-adults-will-spend-over-three-hours-per-day-on-mobile-apps-2020">eMarketer</a>
的数据，2020
年用户每天花费超过三个半小时使用移动应用程序。由于在移动设备上花费了大量时间，因此确保移动应用程序的安全性比以往任何时候都更加重要。尽管数字安全很重要，但并没有一个一致的行业标准来评估移动应用程序。对于普通开发者而言，现有的指南要么太轻量级，要么太繁重，同时也缺乏合规性。这就是为什么我们很高兴与大家分享
<a href="https://www.ioxtalliance.org/news-events-blog/ioxt-alliance-expands-certification-program-for-mobile-and-vpn-security">ioXt
的公告</a> —— 一份新的<a href="https://static1.squarespace.com/static/5c6dbac1f8135a29c7fbb621/t/604aa3fa668a8e3b50630433/1615504379349/Mobile_Application_Profile.pdf">移动应用程序标准</a>。这份标准能够为应用程序提供一组定义的安全性和隐私要求，让开发者们可以根据这些意见验收他们的应用程序。</p>
<p>包括 <strong>Google</strong>、<strong>Amazon</strong> 在内的 20
多个行业利益相关者，以及 <strong>NCC Group</strong> 和
<strong>Dekra</strong> 等多家认证实验室，以及 ** NowSecure**
等自动化移动应用安全测试供应商合作开发了这一新的移动应用安全标准。我们已经看到物联网（IoT）和虚拟专用网络（VPN）开发者对此标准的兴趣，但是该标准还同样适用于任何云连接服务，例如社交、消息传递、健身或生产力应用程序。</p>
<p><a href="http://ioxtalliance.org/">安全物联网联盟 (ioXt)</a>
管理连接设备的安全合规性评估计划。ioXt 在各个行业拥有 300
多个成员，包括谷歌、亚马逊、Facebook、T-Mobile、康卡斯特、Zigbee
联盟、Z-Wave
联盟、罗格朗、Resideo、施耐德电气等。由于涉及的公司如此之多，ioXt
涵盖了广泛的设备类型，包括智能照明、智能扬声器和网络摄像头，并且由于大多数智能设备是通过应用程序管理的，因此随着此标准的发布，它们扩大了覆盖范围以包括移动应用程序。</p>
<p>ioXt 的 <a href="https://static1.squarespace.com/static/5c6dbac1f8135a29c7fbb621/t/604aa3fa668a8e3b50630433/1615504379349/Mobile_Application_Profile.pdf">移动应用程序标准</a>
指出了在所有移动连接设备上运行的最低限度的云连接应用程序商业最佳实践集。此安全标准有助于缓解常见威胁并降低出现重大漏洞的可能性。该标准参考了
<a href="https://mobile-security.gitbook.io/masvs/">OWASP MASVS</a> 和
<strong><a href="https://vpntrust.net/">VPN Trust
Initiative</a></strong>
制定的现有标准和原则，并允许开发人员围绕密码学、身份验证、网络安全和漏洞披露程序质量区分安全功能。该标准还提供了一个框架来评估应用程序类别的特定要求，可以根据应用程序中包含的功能应用这些要求。例如，物联网应用程序只需在<strong>移动应用程序标准</strong>下进行认证，而
VPN 应用程序必须符合<strong>移动应用程序标准以及 VPN
扩展标准</strong>。</p>
<p>认证允许开发人员展示产品安全性，我们很高兴有机会推动该行业向前发展。我们观察到，应用程序开发人员可以非常迅速地解决在黑盒评估期间根据这一新标准发现的任何问题，通常在几天内就能解决问题。在发布时，以下应用程序已通过认证：<a href="https://compliance.ioxtalliance.org/product/157">Comcast</a>、<a href="https://compliance.ioxtalliance.org/product/135">ExpressVPN</a>、<a href="https://compliance.ioxtalliance.org/product/68">GreenMAX</a>、<a href="https://compliance.ioxtalliance.org/product/174">Hubspace</a>、<a href="https://compliance.ioxtalliance.org%20/product/173">McAfee
Innovations</a>、<a href="https://compliance.ioxtalliance.org/product/107">NordVPN</a>、<a href="https://compliance.ioxtalliance.org/product/144">OpenVPN for
Android</a>、<a href="https://compliance.ioxtalliance.org/product/141">Private Internet
Access</a>、<a href="https://compliance.ioxtalliance.org/product/169">VPN
Private</a>，以及 <a href="https://compliance.ioxtalliance.org/product/143">Google One</a>
应用程序，包括 <a href="https://compliance.ioxtalliance.org/product/143">VPN by Google
One</a>。</p>
<p>我们期待看到标准的采用率随着时间的推移而增长，并且那些已经投资于安全最佳实践的应用程序开发人员能够突出他们的努力。该标准会像灯塔一样，激励更多开发人员投入到移动应用程序安全。如果您有兴趣了解有关
ioXt 联盟的更多信息以及如何获得您的应用程序认证，请访问 <a href="https://compliance.ioxtalliance.org/sign-up">https://compliance.ioxtalliance.org/sign-up</a>
并查看 Android 的关于构建安全应用程序的<a href="https://developer.android.com/security">指南</a>。</p>]]></content>
      <categories>
        <category>Computer Science</category>
        <category>Backend</category>
      </categories>
      <tags>
        <tag>Computer Science</tag>
        <tag>Backend</tag>
        <tag>iOS</tag>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>缓存踩踏事件是如何导致 Facebook 最大的宕机事件之一发生的</title>
    <url>/2021/07/28/computer%20science/cloud/how-a-cache-stampede-caused-one-of-facebooks-biggest-outages/</url>
    <content><![CDATA[<blockquote>
<ul>
<li>原文地址：<a href="https://medium.com/better-programming/how-a-cache-stampede-caused-one-of-facebooks-biggest-outages-dbb964ffc8ed">How
A Cache Stampede Caused One Of Facebook’s Biggest Outages</a></li>
<li>原文作者：<a href="https://medium.com/@SunnyB">Sun-Li
Beatteay</a></li>
<li>译者：<a href="https://github.com/PassionPenguin">霜羽
Hoarfroster</a></li>
<li>校对者：<a href="https://github.com/kamly">kamly</a>、<a href="https://github.com/JalanJiang">JalanJiang</a></li>
</ul>
</blockquote>
<figure>
<img src="https://cdn-images-1.medium.com/max/10368/0*FGGy038B4etUbHdm" alt="由 Susan Yin 上传至 Unsplash(https://unsplash.com)">
<figcaption aria-hidden="true">由 <a href="https://unsplash.com/@syinq">Susan Yin</a> 上传至 <a href="https://unsplash.com">Unsplash</a>(https://unsplash.com)</figcaption>
</figure>
<p>2010 年 9 月 23 日，Facebook
发生了迄今为止最严重的宕机事件之一。在这次事件中，Facebook
关闭了四个小时。情况如此严重，以至于工程师不得不让 Facebook
下线才能恢复。</p>
<p>虽然 Facebook 那时候还没有现在那么庞大，但它仍然拥有超过 10
亿的用户，并且它的宕机并没有被忽视。人们只是在 Twitter
上抱怨或开玩笑这件事。</p>
<figure>
<img src="https://cdn-images-1.medium.com/max/2000/0*_-dYSO7eL_K9Qypi" alt="图片来源：https://www.businessinsider.com/how-we-weathered-the-great-facebook-outage-of-2010-2010-9#the-outage-had-far-reaching-consequences-7">
<figcaption aria-hidden="true">图片来源：<a href="https://www.businessinsider.com/how-we-weathered-the-great-facebook-outage-of-2010-2010-9#the-outage-had-far-reaching-consequences-7">https://www.businessinsider.com/how-we-weathered-the-great-facebook-outage-of-2010-2010-9#the-outage-had-far-reaching-consequences-7</a></figcaption>
</figure>
<p>那么，究竟是什么导致了 Facebook 的停运呢？<a href="https://www.facebook.com/notes/facebook-engineering/more-details-on-todays-outage/431441338919">根据事件发生后的官方分析</a>：</p>
<blockquote>
<p>今天我们误改了一个配置。这意味着每个客户端都能看到这个错误配置并尝试修复它。由于修复操作涉及对数据库集群进行查询，因此该集群很快就被每秒数十万个查询所淹没。</p>
</blockquote>
<hr>
<p>错误的配置更改导致大量请求被传送到他们的数据库。这种请求踩踏被恰当地称为
<a href="https://en.wikipedia.org/wiki/Cache_stampede"><strong>缓存踩踏</strong></a>。这是困扰科技行业的一个普遍问题，它已经导致许多公司出现故障，例如
2016 年的 <a href="https://archive.org/index.php">Internet
Archive</a>。许多大型应用程序每天都在与它作斗争，如 Instagram 和
DoorDash 。</p>
<h2 id="什么是缓存踩踏">什么是缓存踩踏？</h2>
<p>当多个线程尝试并行访问一个缓存时，会发生缓存踩踏事件。如果缓存值不存在，线程将同时尝试从源获取数据。源通常是一个数据库，但也可以是
Web 服务器、第三方 API 或任何其他返回数据的东西。</p>
<p>缓存踩踏之所以如此具有破坏性的主要原因之一是因为它可能导致恶性故障循环：</p>
<ol type="1">
<li>大量并发线程缓存未命中，导致它们都请求数据库。</li>
<li>由于 CPU 峰值过大导致数据库崩溃，并且导致超时错误。</li>
<li>收到超时，所有线程重试他们的请求 —— 导致另一次踩踏。</li>
<li>循环往复。</li>
</ol>
<p>并不需要拥有 Facebook
那样规模的用户，你一样会遭其折磨。缓存踩踏与用户规模无关，因此它同时困扰着初创公司和科技巨头。</p>
<hr>
<figure>
<img src="https://cdn-images-1.medium.com/max/2000/0*PYCftRvef9KfysGE.gif" alt="图片来源：https://engineering.fb.com/2015/12/03/ios/under-the-hood-broadcasting-live-video-to-millions/">
<figcaption aria-hidden="true">图片来源：<a href="https://engineering.fb.%20com/2015/12/03/ios/under-the-hood-broadcasting-live-video-to-millions/">https://engineering.fb.com/2015/12/03/ios/under-the-hood-broadcasting-live-video-to-millions/</a></figcaption>
</figure>
<h2 id="如何防止缓存踩踏">如何防止缓存踩踏？</h2>
<p>这是一个很好的问题，也是在我了解 Facebook
宕机后询问自己的问题。不出所料，自 2010
年以来，开发者们已经进行了大量防止缓存踩踏的研究。我通读了所有的这些研究。</p>
<hr>
<p>在本文中，我们将探讨防止和减轻缓存踩踏的不同策略。毕竟，我们可不想亡羊补牢。</p>
<h2 id="添加更多缓存">添加更多缓存</h2>
<p>一个简单的解决方案是添加更多缓存。虽然这似乎违反直觉，但这与操作系统的工作方式类似。</p>
<p>操作系统采用了 <a href="https://en.wikipedia.org/wiki/Cache_hierarchy">缓存层次结构</a>，其中每个组件都缓存自己的数据，因此访问速度被加快。</p>
<figure>
<img src="http://cdn-images-1.medium.com/max/2000/0*nhc5wYwVVERwqxlv.jpeg" alt="操作系统缓存（图片来源：https://www.sciencedirect.com）">
<figcaption aria-hidden="true">操作系统缓存（图片来源：<a href="https://www.sciencedirect.com/topics/computer-science/disks-and-data">https://www.sciencedirect.com</a>）</figcaption>
</figure>
<p>我们可以在我们的应用程序中通过合并内存缓存（第 1
层（L1）缓存）采用类似的模式。任何远程缓存都将被视为第 2 层（L2）。</p>
<p>！<a href="https://cdn-images-1.medium.com/max/2000/0*_uJf2mjpAbCLw9hp">图片来源：[https://medium.com/<span class="citation" data-cites="DoorDash/avoiding-cache-stampede-at-doordash-55bbf596d94b">@DoorDash/avoiding-cache-stampede-at-doordash-55bbf596d94b</span>](https://medium.com/<span class="citation" data-cites="DoorDash/avoiding-cache-stampede-at-doordash">@DoorDash/avoiding-cache-stampede-at-doordash</span>
-55bbf596d94b)</a></p>
<p>这对于防止频繁访问数据时发生踩踏事件特别有用。即使第 2
层缓存上的键过期，一些第 1
层缓存可能仍存储该值。这将限制需要重新计算缓存值的线程数。</p>
<p>但是，这种方法有一些方面需要注意权衡。如果您不小心，在应用程序服务器上缓存内存中的数据可能会导致
<a href="https://en.wikipedia.org/wiki/Out_of_memory">内存不足</a>
问题，尤其是在缓存大量数据时。</p>
<p>此外，这种缓存策略仍然容易受到我所说的追随者踩踏的影响。</p>
<figure>
<img src="https://cdn-images-1.medium.com/max/3060/1*NBJp5l3dOMXcwNT7KCoZfg.gif" alt="图片来源：https://engineering.fb.com/2015/12/03/ios/under-the-hood-broadcasting-live-video-to-millions/">
<figcaption aria-hidden="true">图片来源：<a href="https://engineering.fb.com/2015/12/03/ios/under-the-hood-broadcasting-live-video-to-millions/">https://engineering.fb.com/2015/12/03/ios/under-the-hood-broadcasting-live-video-to-millions/</a></figcaption>
</figure>
<p>追随者踩踏的一个例子是当名人将新照片或视频上传到他们的社交媒体帐户。当所有关注者都收到新内容的通知时，他们会争先恐后地查看。由于内容太新，还没有被缓存，就会导致可怕的缓存踩踏事件。</p>
<hr>
<p>那么，对于追随者踩踏事件，我们能做些什么呢？</p>
<h2 id="锁-和-promise">锁 和 Promise</h2>
<p>从本质上讲，缓存踩踏是一种竞争状态 ——
多个线程争夺共享资源。在这种情况下，共享的资源是缓存。</p>
<figure>
<img src="https://cdn-images-1.medium.com/max/2000/0*KThIA3rqDvhQLXHp" alt="图片来源：https://instagram-engineering.com/thundering-herds-promises-82191c8af57d">
<figcaption aria-hidden="true">图片来源：<a href="https://instagram-engineering.com/thundering-herds-promises-82191c8af57d">https://instagram-engineering.com/thundering-herds-promises-82191c8af57d</a></figcaption>
</figure>
<p>在高并发系统中很常见，一种防止共享资源竞争条件的方法是使用<strong>锁</strong>。虽然锁通常用于同一台机器上的线程，但也有一些方法可以使用
<a href="https://redis.io/topics/distlock">分布式锁</a>
用于远程缓存。</p>
<p>通过在缓存键上加锁，限制一次只有一个调用者能够访问缓存。如果缓存键丢失或过期，调用者就可以生成并缓存数据，同时持有锁。任何其他尝试从同一个缓存键读取的进程都必须等到锁空闲。</p>
<figure>
<img src="https://cdn-images-1.medium.com/max/2000/0*7DqZBIsf7BByzB3q.gif" alt="图片来源：https://engineering.fb.com/2015/12/03/ios/under-the-hood-broadcasting-live-video-to-millions/">
<figcaption aria-hidden="true">图片来源：<a href="https://engineering.fb.%20com/2015/12/03/ios/under-the-hood-broadcasting-live-video-to-millions/">https://engineering.fb.com/2015/12/03/ios/under-the-hood-broadcasting-live-video-to-millions/</a></figcaption>
</figure>
<p>使用锁解决了竞争状态问题，但它会产生另一个问题。你如何处理所有等待锁释放的线程？</p>
<p>不知道你是否使用过 <a href="https://en.wikipedia.org/wiki/Spinlock">自旋锁</a>
模式并让线程不断轮询锁？这将创建一个 <a href="https://en.wikipedia.org/wiki/Busy_waiting">忙等待</a> 场景。</p>
<p>在检查锁是否空闲之前，你是否让线程休眠了任意时间？这样你就会遇到 <a href="https://en.wikipedia.org/wiki/Thundering_herd_problem">惊群效应问题</a>。</p>
<p>你是否引入了 <a href="https://www.baeldung.com/resilience4j-backoff-jitter">退避和抖动机制</a>
以防止惊群效应问题？这可能有效，但还有一个更普遍的问题。拥有锁的线程必须在释放锁之前重新计算值并更新缓存键。</p>
<p>这个过程可能需要一段时间。特别是如果该值的计算成本很高或存在网络问题。如果缓存耗尽其可用连接池并且用户请求被丢弃，这仍然可能导致宕机。</p>
<p>幸运的是，一些顶级公司正在使用一种更简单的解决方案：<strong>Promise</strong>。</p>
<h4 id="promise-如何防止自旋锁">Promise 如何防止自旋锁</h4>
<p>引用 <strong><a href="https://instagram-engineering.com/thundering-herds-promises-82191c8af57d">惊群效应问题与
Promise</a></strong> 来自 Instagram 的工程博客：</p>
<blockquote>
<p>在 Instagram
上，当建立一个新集群时，我们会遇到<strong>缓存踩踏</strong>问题，因为集群的缓存是空的。然后我们使用
Promise
来帮助解决这个问题：<strong>我们没有缓存实际值，而是缓存了一个最终会提供值的
Promise</strong>。当我们以原子方式使用我们的缓存并出现未命中时，我们不会立即进入后端，而是会创建一个
Promise 并将其插入缓存中。然后这个新的 Promise
开始针对后端的工作。这样做的好处是其他并发请求不会错过，因为它们会找到现有的
Promise —— 并且所有这些并发工作人员将等待单个后端请求。</p>
</blockquote>
<figure>
<img src="https://cdn-images-1.medium.com/max/2000/0*I28DPoMELLUV4QWN" alt="图片来源：https://instagram-engineering.com/thundering-herds-promises-82191c8af57d">
<figcaption aria-hidden="true">图片来源：<a href="https://instagram-engineering.com/thundering-herds-promises-82191c8af57d">https://instagram-engineering.com/thundering-herds-promises-82191c8af57d</a></figcaption>
</figure>
<p>通过缓存 Promise
而不是实际值，不需要自旋锁。获取缓存未命中的第一个线程将使用原子操作（例如
Java 的 <a href="https://docs.oracle.com/javase/8/docs/api/java/util/Map.html#computeIfAbsent-K-java.util.function.Function-"><code>computeIfAbsent</code></a>）。所有顺序获取请求将立即返回
Promise 。</p>
<p>我们仍然需要使用锁来防止多个线程访问缓存键。但是假设创建一个 Promise
是一个近乎即时的操作，线程在自旋锁中停留的时间长度可以忽略不计。</p>
<p><a href="https://medium.com/@DoorDash/avoiding-cache-stampede-at-doordash-55bbf596d94b">这正是
DoorDash 避免缓存踩踏的方式</a>。</p>
<p>但是如果重新计算缓存值需要相对较长的时间呢？即使线程能够立即获取缓存的
Promise，它们仍然需要等待异步进程完成才能返回值。</p>
<hr>
<p>虽然这种情况不一定算作中断，但它会影响尾部延迟和整体用户体验。如果保持较低的尾部延迟对您的应用程序很重要，那么还有另一种策略需要考虑。</p>
<h2 id="提前重新计算">提前重新计算</h2>
<p>提前重新计算（Early Re-Computation，也称为提前到期 Early
Expiration）背后的想法很简单。在缓存键正式过期之前，重新计算值并延长过期时间。这确保缓存始终是最新的，并且永远不会发生缓存未命中。</p>
<p>早期重新计算的最简单实现是后台进程或定时任务。例如，假设有一个缓存键，其过期时间在一小时内到期，计算该值需要两分钟。定时任务可以在一个小时结束前运行五分钟，并在更新后将过期时间再延长一个小时。</p>
<p>虽然这个想法在理论上很简单，但有一个明显的缺点。除非我们确切知道将使用哪些缓存键，否则我们需要重新计算缓存中的每个键。这可能是一个非常费力且成本高昂的过程。它还需要维护另一个活动部件，如果出现故障，则无法轻松追索。</p>
<p>由于这些原因，我无法在生产环境中找到任何此类早期重新计算的示例。但是也有例外。</p>
<h4 id="概率早期重新计算">概率早期重新计算</h4>
<p>2015 年，一组研究人员发表了名为 「Optimal Probabilistic Cache
Stampede Prevention」 的 <a href="https://cseweb.ucsd.edu/~avattani/papers/cache_stampede.pdf">白皮书</a>。在其中，他们描述了一种算法，用于优化预测何时在缓存过期之前重新计算缓存值。</p>
<p>研究论文中有很多数学理论，但算法归结为：</p>
<div class="sourceCode" id="cb1"><pre class="sourceCode javascript"><code class="sourceCode javascript"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a>currentTime <span class="op">-</span> ( timeToCompute <span class="op">*</span> beta <span class="op">*</span> <span class="fu">log</span>(<span class="fu">rand</span>()) ) <span class="op">&gt;</span> expiry</span></code></pre></div>
<ul>
<li><code>currentTime</code> 是当前时间戳。</li>
<li><code>timeToCompute</code> 是重新计算缓存值所需的时间。</li>
<li><code>beta</code> 是一个大于 0 的非负值。它默认为
1，但可以配置。</li>
<li><code>rand()</code> 是一个返回 0 到 1 之间随机数的函数。</li>
<li><code>expiry</code> 是缓存值设置为过期的未来时间戳。</li>
</ul>
<p>这个想法是每次线程从缓存中获取时，它都会运行这个算法。如果它返回
<code>true</code>，那么该线程将自愿重新计算该值。越接近到期时间，此算法返回
<code>true</code> 的几率就会显着增加。</p>
<p>虽然这个策略不是最容易理解的，但它实施起来相当简单，不需要任何额外的移动部件。它也不需要重新计算缓存中的每个值。</p>
<p><a href="https://archive.org/index.php">互联网档案馆</a> 在 2016
年总统辩论的一次宕机后开始使用这种方法。这个 <a href="https://www.youtube.com/watch?v=1sKn4gWesTw">RedisConf17
的演讲</a>
更深入地讲述了这个故事，并很好地概述了概率早期重新计算的工作原理。我<strong>强烈</strong>推荐<a href="https://youtu.be/1sKn4gWesTw">看看这个视频</a></p>
<hr>
<p>然而，早期重新计算假设有重新计算的价值 ——
它不会单独阻止追随者踩踏。为此，我们需要将它与锁和 Promise
结合起来。</p>
<h2 id="如何阻止正在进行的踩踏事件">如何阻止正在进行的踩踏事件</h2>
<p>Facebook
的缓存踩踏事件如此具有破坏性的原因之一是，即使工程师找到了解决方案，他们也无法部署它，因为踩踏事件仍在继续。</p>
<p>来自 <a href="https://www.facebook.com/notes/facebook-engineering/more-details-on-todays-outage/431441338919">事后分析</a>：</p>
<blockquote>
<p>更糟糕的是，每次客户端在尝试查询其中一个数据库时出错，它都会将其解释为无效值，并删除相应的缓存键。这意味着即使在解决了原始问题之后，查询流仍在继续。只要数据库无法为某些请求提供服务，它们就会对自己造成更多请求。我们进入了一个不允许数据库恢复的反馈循环。</p>
</blockquote>
<p>现实情况是，无法保证预防永远有效 —— 我们还需要缓解。<a href="https://en.wikipedia.org/wiki/Defensive_programming">防御性编程</a>
规定应该制定一个计划，以防踩踏事件绕过我们设置的限制。</p>
<p>幸运的是，有一个已知的模式来处理这个问题。</p>
<h4 id="熔断器">熔断器</h4>
<p>在编程中使用熔断器的想法并不新鲜。在 Michael Nygard 于 2007 年发表 <a href="https://www.amazon.com/gp/product/0978739213"><strong>Release
It!</strong></a> 后，它开始流行。正如 Martin Fowler 在他的文章
<strong><a href="https://www.martinfowler.com/bliki/CircuitBreaker.html">CircuitBreaker</a></strong>
所写的那样：</p>
<blockquote>
<p>熔断器背后的基本思想非常简单。您将受保护的函数调用包装在熔断器对象中，该对象监视故障。一旦故障达到某个阈值，熔断器就会熔断，并且所有对熔断器的进一步调用都会返回错误，而不会调用到受到熔断器保护的地方。</p>
</blockquote>
<figure>
<img src="https://cdn-images-1.medium.com/max/2000/0*2Jn_bNJ6Vh2-Lwla.png" alt="图片来源：https://www.martinfowler.com/bliki/CircuitBreaker.html">
<figcaption aria-hidden="true">图片来源：<a href="https://www.martinfowler.com/bliki/CircuitBreaker.html">https://www.martinfowler.com/bliki/CircuitBreaker.html</a></figcaption>
</figure>
<p>熔断器是被动的，这意味着它们不会阻止宕机，但它们将防止级联故障。当事情失控时，它提供了一个终止开关。如果
Facebook 使用熔断器，他们本可以避免让整个网站脱机。</p>
<hr>
<p>诚然，熔断器在 2010 年并不那么流行。如今，有几个带有熔断器的库，例如
<a href="https://resilience4j.readme.io/">Resilience4j</a>、<a href="https://istio.io/">Istio</a> 和 <a href="https://www.envoyproxy.io/">Envoy</a>。一些组织在生产中使用这些服务，例如
<a href="https://netflixtechblog.com/making-the-netflix-api-more-resilient-a8ec62159c2d">Netflix</a>
和 [Lyft](https://www.getambassador.io
/resources/mechanics-deploying-envoy-lyft-matt-klein/）。</p>
<h2 id="facebook-买来了什么教训">Facebook 买来了什么教训？</h2>
<p>我在这篇文章中谈了很多关于解决缓存踩踏的不同策略以及其他科技公司如何使用它们。但是
Facebook 本身呢？</p>
<p>他们从故障中吸取了哪些教训，他们采取了哪些保护措施来防止再次发生这种情况？</p>
<p>他们的工程帖子，<a href="https://engineering.fb.com/2015/12/03/ios/under-the-hood-broadcasting-live-video-to-millions/"><strong>幕后：向数百万人广播直播视频</strong></a>，讨论他们对架构所做的改进。它讨论了我们已经讨论过的内容，例如缓存层次结构，但也包括一些新颖的方法，例如
HTTP 请求合并。这篇文章值得一读，但如果你时间不够，这个 <a href="https://www.facebook.com/Engineering/videos/10153675295382200/?t=0">视频提供了一个全面的概述</a>。</p>
<p>可以说 Facebook 从他们过去的错误中吸取了教训。</p>
<hr>
<figure>
<img src="https://cdn-images-1.medium.com/max/3076/1*8aT7_UKqYmXxdEkoMZBx4g.gif" alt="图片来源：https://engineering.fb.com/2015/12/03/ios/under-the-hood-broadcasting-live-video-to-millions/">
<figcaption aria-hidden="true">图片来源：<a href="https://engineering.fb.%20com/2015/12/03/ios/under-the-hood-broadcasting-live-video-to-millions/">https://engineering.fb.com/2015/12/03/ios/under-the-hood-broadcasting-live-video-to-millions/</a></figcaption>
</figure>
<h2 id="部分感想">部分感想</h2>
<p>虽然我相信了解缓存踩踏事件如何对系统造成严重破坏，但我不认为每个技术团队都必须立即添加这些措施。我们选择如何处理缓存踩踏将取决于我们项目的用例、架构和流量负载。</p>
<p>但是，当我们发现自己正在与惊群效应问题作斗争，那么了解缓存踩踏事件并了解可能的解决方案将使我们在未来受益。</p>]]></content>
      <categories>
        <category>Computer Science</category>
        <category>Cloud</category>
      </categories>
      <tags>
        <tag>Computer Science</tag>
        <tag>Backend</tag>
        <tag>Cloud</tag>
      </tags>
  </entry>
  <entry>
    <title>Rust 与 C 的速度比较</title>
    <url>/2021/07/19/computer%20science/backend/speed-of-rust-vs-c/</url>
    <content><![CDATA[<blockquote>
<ul>
<li>原文地址：<a href="https://kornel.ski/rust-c-speed">Speed of Rust
vs.&nbsp;C</a></li>
<li>原文作者：<a href="https://twitter.com/kornelski">kornelski</a></li>
<li>译者：<a href="https://github.com/PassionPenguin">霜羽
Hoarfroster</a></li>
<li>校对者：<a href="https://github.com/PingHGao">PingHGao</a>、<a href="https://github.com/zenblofe">Z招锦</a></li>
</ul>
</blockquote>
<p>Rust 程序的运行速度和内存使用量应该与 C
程序大致相同，不过由于这些语言的整体编程风格差异很大，我们很难准确地概括它们的速度。这就是我对于
Rust 和 C 运行速度的总结：有时它们相同，有时 C 语言更快，有时 Rust
更快。</p>
<p>免责声明：这并不意味着成为揭示这些语言无可争辩的真相的客观基准。这些语言在理论上可以实现的目标与它们在实践中的使用方式之间存在显着差异。这个对比基于我自己的主观经验，包括有时间上的匆忙、编写错误和我自己的惰性。Rust
作为我的主要编程语言的时间已经长达 4
年多了，而在此之前的十年里，我一直在使用着 C 语言。我在这里专门将 Rust
与 C 进行比较，因为如果改成其与 C++ 比较，会有更多我不想涉及的细节。</p>
<p>简而言之：</p>
<ul>
<li>Rust
的抽象是一把双刃剑。它们可以隐藏次优代码，但也可以更轻松地进行算法改进，也能更好利用经过高度优化的库。</li>
<li>我从不担心我会在 Rust 中遇到性能死局。总是有一些 <code>unsafe</code>
的应急出口，允许我们进行一些非常低级的优化（当然，并不经常需要进行低级优化）。</li>
<li>不需要担心并发这一件事是真实的。偶尔跳出来的让我们感觉笨拙的检查器让我们在并行编程方面更加有效。</li>
</ul>
<p>我的总体感觉是，如果我可以花费无限的时间和精力，我的 C 程序将可以与
Rust 一样快或更快。因为从理论上讲，没有什么是 C 无法做到而 Rust
可以做到的。但在实践中，C
的抽象较少，标准库原始，依赖情况可怕，而且我也没有时间每次都重新造轮子。</p>
<h2 id="两者都是便携式汇编器">两者都是“便携式汇编器”</h2>
<p>Rust 和 C
都可以控制数据结构的布局、整数大小、栈与堆的内存分配、指针间接引用，并且通常能转换为可理解的机器代码，而编译器很少插入奇怪的东西。Rust
甚至允许 8 位字节长度的有符号整数报可能溢出的错误！</p>
<p>尽管 Rust
具有更高级别的构造，比如说迭代器、特征和智能指针，但它们都旨在可预测地优化为简单的机器代码（也被称为“零成本抽象”）。Rust
类型的内存布局很简单，例如可增长的字符串和矢量正好是
<code>&#123;byte*, capacity, length&#125;</code>。Rust
没有任何类似移动或复制构造函数的概念，因此它能保证对象的传递不会比传递指针或
<code>memcpy</code> 复杂。</p>
<p>借用检查只会在编译时进行一次静态分析。它不会<strong>做任何事情</strong>，甚至在代码生成之前就完全去除了生命周期信息。它不会自动打包，也不会干其他所谓聪明的事。</p>
<p>Rust 不符合“愚蠢”代码生成器判定的一种情况是 <a href="https://github.com/rust-lang/project-ffi-unwind">展开
unwinding</a>。虽然 Rust 不使用 exception 进行正常的错误处理，但
panic（未处理的致命错误）可能表现得像 C++ 的
exception。这可以在编译时被禁用（panic = abort），但即便如此，Rust
也不会与 C++ exception 或 <code>longjmp</code> 混淆在一起。</p>
<h2 id="相同的旧-llvm-后端">相同的旧 LLVM 后端</h2>
<p>Rust 很好的集成了 LLVM，因此 Rust 支持链接时优化，包括
ThinLTO，甚至跨 C/C++/Rust 语言边界内联，还有配置文件引导的优化。即使
<code>rustc</code> 会生成比 <code>clang</code> 更冗长的 LLVM
IR，优化器仍然可以很好地处理它。</p>
<p>我的一些 C 代码在用 GCC 编译时比用 LLVM 快一点，但 <a href="https://github.com/Rust-GCC/gccrs">GCC</a> 还没有针对 Rust
的前端，不得不说 Rust 错过了 GCC。</p>
<p>理论上，由于更严格的不变性和别名规则，Rust 能有比 C
更好的优化，但实际上并没有实现。超出 C 语言以外的优化是 LLVM
中正在进行的工作，因此 Rust 仍未发挥其全部潜力。</p>
<h2 id="两者都允许手动调整只有少数例外">两者都允许手动调整，只有少数例外</h2>
<p>Rust 代码是低级和可预测的，我可以手动调整它将优化到的程序集。Rust
支持 SIMD 内置函数，对内联、调用约定等有很好的控制。Rust 与 C
非常相似，以至于 C 分析器通常对 Rust 而言是开箱即用（例如，我可以在一个
Rust-C-Swift 互联互通的程序上使用 Xcode 的 Instruments）。</p>
<p>一般来说，在性能绝对关键并且需要手动优化到极致的地方，优化 Rust 与 C
没有太大区别。</p>
<p>有一些低层功能 Rust 没有适当的替代品：</p>
<ul>
<li><strong>计算的</strong> <code>goto</code>： <code>goto</code>
的“无聊”用法可以用 Rust 中的其他构造替换，例如
<code>loop &#123;break&#125;</code>。在 C 中，goto 的许多用途是为了清理。但由于
Rust 的 RAII/destructors，Rust 不需要这些。不过有一个非标准的
<code>goto *addr</code> 扩展名，对解释器非常有用。Rust
不能直接做到这一点（你可以写一个 <code>match</code>
并<strong>希望</strong>它会优化），但如果我需要一个解释器，我会尝试利用
<a href="https://lib.rs/crates/cranelift">Cranelift JIT</a> 代替。</li>
<li><code>alloca</code> 和 C99 的变长数组：即使在 C 中，这些也是 <a href="https://www.phoronix.com/scan.php?page=news_item&amp;px=Linux-Kills-The-VLA">有争议的</a>，所以
Rust 远离了这两特性。</li>
</ul>
<p>值得注意的是，Rust 目前仅支持一种 16 位架构。Rust 的 <a href="https://forge.rust-lang.org/platform-support.html">一级支持</a>
专注于 32 位和 64 位平台。</p>
<h2 id="rust-的小开销">Rust 的小开销</h2>
<p>然而，在 Rust 非手动调整的地方，一些低效率的事件可能会蔓延：</p>
<ul>
<li><p>Rust 缺乏隐式类型转换，并且索引只使用 <code>usize</code>
会使用户只使用这种类型，即使是较小的类型也够用。这与 C 形成了对比，其中
32 位 <code>int</code> 是通常选择。在不依赖未定义行为的情况下，通过
<code>usize</code> 索引更容易在 64
位平台上进行优化，但额外的位可能会给寄存器和内存带来更大的消耗。</p></li>
<li><p>一般来说 Rust
总会为字符串和切片传递指针<strong>和它们的大小</strong>。直到我将几个代码库从
C 移植到 Rust，我才意识到有多少 C
函数只使用指向内存的指针而没有大小并且期望（大小可以从上下文间接知道，或者只是假设对于任务来说足够大）。</p></li>
<li><p>并不是所有的边界检查都被优化了。<code>for item in arr</code> 或
<code>arr.iter().for_each(...)</code> 是尽可能高效的。但如果我们需要
<code>for i in 0..len &#123;arr[i]&#125;</code> 形式的循环，则性能取决于 LLVM
优化器是否能够证明长度匹配。有时它不能，并且边界检查会禁止自动矢量化。当然，对此有多种变通方法，包括安全的和不安全的。</p></li>
<li><p>在 Rust 中不提倡“聪明”的内存使用。在 C
中，任何事情都会发生。例如，在 C
中，我很倾向于重用为其它目的分配的缓冲区（一种称为 HEARTBLEED
的技术）。为可变大小的数据（例如
<code>PATH_MAX</code>）使用固定大小的缓冲区以避免因为缓冲区的增长导致的（重新）分配是很方便的。但一般而言
Rust
仍然可以对内存分配进行很多控制，并且可以执行诸如内存池、将多个分配合而为一、预分配空间等基础操作。但总的来说，它会将用户引向去“无聊”地使用或内存。</p></li>
<li><p>在借用检查规则使事情变得困难的情况下，简单的方法是进行额外的复制或使用引用计数。随着时间的推移，我学会了一堆借用检查器的技巧，并将我的编码风格调整为对借用检查器友好，所以这不再经常出现。这永远不会成为<strong>主要</strong>问题，因为如果有必要，总会有一个兼容可以回退到“原始”指针。</p>
<p>Rust 的借用检查器 <a href="https://rust-unofficial.github.io/too-many-lists/">因讨厌双向链表而臭名昭著</a>，但幸运的是，无论如何，链表在
21 世纪的硬件上都是很慢的（缓存局部性差，没有矢量化）。Rust
的标准库有链表以及可供选择的更快且对借用检查器友好的容器。</p>
<p>还有两种情况是借用检查器不能容忍的：内存映射文件（来自进程外部的神奇更改违反了引用的不可变^独占语义）和自引用结构（按值传递结构会使它的内部指针悬垂）。这些情况要么使用与
C
中的每个指针一样安全的原始指针来解决，要么使用头脑风暴来围绕它们进行安全抽象。</p></li>
<li><p>对 Rust 来说，单线程程序只是不存在的概念。Rust
允许单个数据结构对于性能来说是非线程安全的，但是任何允许在线程之间共享的东西（包括全局变量）都必须同步或标记为
<code>unsafe</code>。</p></li>
<li><p>我总会忘记 Rust 的字符串支持一些低成本的直接操作，例如
<code>make_ascii_lowercase()</code>（与我在 C
中所做的直接等效），并且不必要地使用基于 Unicode 的复制操作来实现
<code>.to_lowercase()</code>。说到字符串，UTF-8
编码的问题并不像看起来那么大，因为字符串有 <code>.as_bytes()</code>
视图。所以如果需要，它们可以以 Unicode 无关的方式处理。</p></li>
<li><p>libc 向后兼容以使 <code>stdout</code> 和 <code>putc</code>
相当快。Rust 的 libstd 没有那么神奇，所以 I/O
不会被缓冲，除非被包裹在一个 <code>BufWriter</code>
中。我见过有人抱怨他们的 Rust 比 Python 慢，这是因为 Rust 花费了 99%
的时间逐字节刷新结果，正如所说的那样。</p></li>
</ul>
<h2 id="可执行文件大小">可执行文件大小</h2>
<p>每个操作系统都附带一些内置的标准 C 库。这些库让 C
可执行文件“免费”获得的大约 30MB 的代码，例如一个小的 “Hello World” C
可执行文件实际上不能打印任何东西，它只能调用操作系统附带的
<code>printf</code> 接口。Rust 不能指望操作系统内置了
<strong>Rust</strong> 的标准库，因此 Rust
可执行文件捆绑了自己的标准库（300KB
或更大尺寸）。幸运的是，这是一次性开销并且<a href="https://github.com/johnthagen/min-sized-rust">可以减少</a>。对于嵌入式开发，我们可以关闭标准库，而
Rust 将会生成“裸”代码。</p>
<p>在单个函数的角度来说，Rust 代码的大小与 C
大致相同，但存在“泛型膨胀”的问题。泛型函数会针对它们所使用的每种类型获得优化版本，因此最终可能会有
8 个版本的相同函数。 使用 <a href="https://lib.rs/cargo-bloat"><code>cargo-bloat</code></a>
有助于帮助我们找到这些函数。</p>
<p>在 Rust 中使用依赖项非常容易。与 JS/npm 类似，Rust
有一种制作小型单一用途库的文化，但确实综合考虑衡量过。最终，我所有的可执行文件都包含了一张
Unicode 规范化表、7 个不同的随机数生成器和一个支持 Brotli 的 HTTP/2
客户端。我们可使用 <code>cargo-tree</code> 以去重。</p>
<h2 id="rust-的小胜利">Rust 的小胜利</h2>
<p>我已经谈了很多关于开销的问题，但 Rust
也有一些地方可以让它变得更高效、更快：</p>
<ul>
<li>C
库通常返回指向其数据结构的不透明指针，以隐藏实现细节并确保结构的每个实例只有一个副本，不过这会消耗堆分配和指针间接。Rust
内置的隐私、单一所有权规则和编码约定让库可以在没有间接的情况下公开它们的对象，以便调用者可以决定是将它们放在堆上还是堆栈上。堆栈上的对象可以非常积极地被优化，甚至可以完全优化。</li>
<li>默认情况下，Rust 可以内联标准库、依赖项和其他编译单元中的函数。在 C
中，我有时不愿意拆分文件或使用库，因为它会影响内联并需要对标头和符号可见性进行微观管理。</li>
<li>结构域被重新排序以最小化填充。用 <code>Wpadding</code> 编译 C
表明我经常忘记这个细节。</li>
<li>字符串的大小编码在它们的“胖”指针中。这使得长度检查足够快速，也消除了
<a href="https://nee.lv/2021/02/28/How-I-cut-GTA-Online-loading-times-by-70/">意外的
O(n²)</a> 的字符串循环的风险，并允许我们在不修改内存或添加
<code>\0</code>
终止符的情况下，就地创建子字符串（例如，将字符串拆分为标记）。</li>
<li>与 C++ 模板一样，Rust 为它们使用的每种类型生成通用代码的副本，因此像
<code>sort()</code>
这样的函数和像哈希表这样的容器总是会针对它们的类型进行优化。在 C
中，我必须在使用宏的 hack 或处理 <code>void*</code>
和运行时变量大小的效率较低的函数之间进行选择。</li>
<li>Rust
迭代器可以组合成链，以作为一个单元一起优化。所以，相比一系列的调用
<code>buy(it);use(it);break(it);change(it);mail(upgrade(it));</code>
可能会多次重写同一个缓冲区的行为，我可以调用被编译为一个
<code>buy_use_break_change_mail_upgrade(it)</code> 函数的
<code>it.buy().use().break().change().upgrade().mail()</code>
。再经过优化，我们可以在单个组合通道中完成所有这些操作。<code>(0..1000).map(|x| x*2).sum()</code>
会直接被编译为 <code>return 999000</code>。</li>
<li>类似地，还有 <code>Read</code> 和<code>Write</code>
接口允许函数流式传输未缓冲的数据。它们结合得很好，所以我可以将数据写入一个流，动态计算数据的
CRC。如果我们需要添加帧/转义，压缩它，然后将它写入网络，我们只需在一次调用中完成。我可以将这样的组合流作为输出流传递给我的
HTML 模板引擎，所以现在每个 HTML
标签都足够智能，可以将自己压缩。底层机制只是简单的
<code>next_stream.write(bytes)</code>
调用的金字塔，所以从技术上讲，没有什么能阻止我在 C 中做同样的事情，除了
C
中缺乏特征和泛型意味着在实践中很难真正做到这一点，除了在运行时需要设置回调，效率不高。</li>
<li>在 C
中过度使用线性搜索和链表是完全合理的，因为没有好的有人维护的哈希表实现。没有内置容器，依赖是一种痛苦，所以我总会偷工减料来完成工作。除非绝对必要，否则我不会费心编写
B 树的复杂实现。我将使用 <code>qsort</code> + <code>bisect</code>
并称它为一天的成果。Rust 中的 OTOH 只需要 1 或 2
行代码即可获得各种容器的高质量实现。这意味着我的 Rust
程序可以负担得起<strong>每次</strong>都使用正确的、非常优化的数据结构。</li>
<li>现在一切似乎都需要 JSON。Rust 的 <code>serde</code> 是世界上最快的
JSON 解析器之一。它支持直接解析 JSON 为 Rust
结构，因此解析数据的使用也非常快速和高效。</li>
</ul>
<h2 id="rust-的巨大胜利">Rust 的巨大胜利</h2>
<p>Rust
强制所有代码和数据的线程安全，即使是在第三方库中，即使该代码的作者没有注意线程安全也依旧如此。一切要么坚持特定的线程安全保证，要么不允许跨线程使用。如果我编写任何不是线程安全的代码，编译器会准确指出它不安全的地方。</p>
<p>这与 C
的情况截然不同。通常没有库函数可以被信任为线程安全的，除非它们以其他方式明确记录。由程序员来确保所有代码都是正确的，而编译器通常对此无能为力。多线程
C 代码承担了更多的责任，更多的风险，所以假装多核 CPU
只是一种时尚，并想象用户可以用剩下的 7 或 15
个内核做更好的事情是很有吸引力的。</p>
<p>Rust
可以保证免于数据竞争和内存不安全（例如，释放后使用错误，甚至跨线程）。不仅仅是一些可以通过启发式方法或在运行时在检测构建中找到的竞争，而是无处不在的<strong>所有</strong>数据竞争。这是救命的，因为数据竞争是最严重的并发错误。这些问题可能会发生在我们用户的机器上，但不会发生在我们自己的调试器中。还有其他类型的并发错误，例如锁定原语使用不当导致更高级别的逻辑竞争条件或死锁，Rust
无法消除它们，但它们通常更容易被重现和修复。</p>
<p>在 C 中，我不敢在简单的 <code>for</code> 循环上做超过几个 OpenMP
编译指示。我尝试过在任务和线程上更激进，但每次我都很是后悔。</p>
<p>Rust
有很好的数据并行库、线程池、队列、任务、无锁数据结构等。借助这些构建块和类型系统的强大安全网，我可以很容易地并行化
Rust 程序。比如说，在某些情况下，将 <code>iter()</code> 替换为
<code>par_iter()</code>
就足够了。如果它可以编译，它就可以正常工作！它并不总是线性加速（阿姆达尔定律是残酷的），但对于相对较少的工作，通常能有
2-3 倍的提速。</p>
<p>Rust 和 C 库在记录线程安全方面有一个有趣的区别。 Rust
为线程安全的特定方面提供了词汇表，例如 <code>Send</code> 和
<code>Sync</code>、<code>guard</code> 和 <code>cell</code>。在 C
中，没有“你可以在一个线程上分配它，并在另一个线程上释放它，但你不能同时从两个线程使用它”的说法。Rust
用数据类型来描述线程安全，所以这可以推广到所有使用它们的函数。在 C
中，线程安全是在单个函数和配置标志的上下文中讨论的。Rust
的保证往往是编译时的，或者至少是无条件的。而在 C 中，通常会发现“仅当
turboblub 选项设置为 7 时是线程安全的”。</p>
<h2 id="小结">小结</h2>
<p>Rust 足够低级，如有必要，它可以像 C
一样被优化以获得最大性能。更高级别的抽象、简单的内存管理和丰富的可用库往往使
Rust
程序能拥有更多代码，能做更多事情，并且如果任其发展，可能会导致程序的臃肿。然而，Rust
程序也被优化得很好，有时甚至能比 C 更好。虽然 C
适合在逐字节逐个指针级别编写最少的代码，但 Rust
具有强大的功能，可以有效地将多个函数甚至整个库组合在一起。</p>
<p>但最大的潜力在于能够无畏地并行化大多数 Rust 代码，即使等效的 C
代码风险太大而无法并行化。在这方面，Rust 是一种比 C 成熟得多的语言。</p>]]></content>
      <categories>
        <category>Computer Science</category>
        <category>Backend</category>
        <category>Rust</category>
      </categories>
      <tags>
        <tag>Computer Science</tag>
        <tag>Backend</tag>
        <tag>Rust</tag>
        <tag>C</tag>
      </tags>
  </entry>
  <entry>
    <title>HEX vs RGB vs HSL：设置 CSS 颜色属性的最佳方法是什么</title>
    <url>/2021/07/14/computer%20science/frontend/hex-vs-rgb-vs-hsl-what-is-the-best-method-to-set-css-color-property/</url>
    <content><![CDATA[<blockquote>
<ul>
<li>原文地址：<a href="https://blog.bitsrc.io/hex-vs-rgb-vs-hsl-what-is-the-best-method-to-set-css-color-property-f45d2debeee">HEX
vs RGB vs HSL: What is the Best Method to set CSS Color
Property</a></li>
<li>原文作者：<a href="https://medium.com/@wnethmi96">Nethmi
Wijesinghe</a></li>
<li>译者：<a href="https://github.com/PassionPenguin">霜羽
Hoarfroster</a></li>
<li>校对者：<a href="https://github.com/Chorer">Chorer</a>、<a href="https://github.com/nia3y">nia3y</a>、<a href="https://github.com/CarlosChenN">CarlosChenN</a></li>
</ul>
</blockquote>
<p><img src="https://cdn-images-1.medium.com/max/5760/1*fjzP30im_c--lgsIKqhj0g.jpeg"></p>
<p>不知道你是否了解 HEX、RGB 和 HSL
之间的区别，以及其中任意一种的各种优势？</p>
<hr>
<p>在深入探讨这个问题之前，让我们简要了解每种颜色方法的含义。</p>
<h2 id="颜色方法的定义">颜色方法的定义</h2>
<p><strong>Hex</strong> 颜色值是最流行的设置 CSS
颜色属性的方法之一，尤其是在开发人员中。几乎所有浏览器都支持它。</p>
<p>我们可以在十六进制颜色代码中定义紫色，如下所示：</p>
<pre class="text"><code>#800080</code></pre>
<p>这里的颜色的格式规定是 <code>#RRGGBB</code>，其中
<code>RR</code>（红色）、<code>GG</code>（绿色）和
<code>BB</code>（蓝色）是介于 <code>00</code> 和 <code>FF</code>
之间的<strong>十六进制整数</strong>，表示色彩强度。</p>
<h2 id="hex-和-rgb-的区别">HEX 和 RGB 的区别</h2>
<p><strong>RGB</strong> 或
<strong>Red/Green/Blue</strong>（即红/绿/蓝）也被用于在 CSS
中定义颜色，是另一种广受欢迎的方法。RGB 配色方案是一种三通道格式，其中
r、g、b 三色的数值是 0 到 255 之间的整数。以下是 RGB 颜色的示例：</p>
<pre class="text"><code>rgb(128, 0, 128)</code></pre>
<p>上述 RGB 颜色代码的实现与上文中 HEX
颜色一致。你可能想知道，明明十六进制颜色代码更容易记住和输入，为什么我们还要使用
RGB 呢？</p>
<blockquote>
<p>嗯，每种颜色方法都有自己的好处。RGB
的美妙之处在于它允许你为颜色添加不透明度。</p>
</blockquote>
<p>这就是 <strong>RGBA</strong> 的强处了 😎。在 CSS3 中，RGB
配色方案新增了一个额外的 <strong>alpha</strong>
通道，以指示颜色的不透明度。</p>
<blockquote>
<p>译者注：其实嘛，Hex 也支持，比如说 50% 黑色就是
<code>#00000088</code>，最后两位数为十六进制的透明度，范围也是
<code>00</code> 到 <code>FF</code>。</p>
</blockquote>
<h2 id="新人hsl">新人，HSL！</h2>
<p><strong>HSL</strong> 代表色相 Hue、饱和度 Saturation 和亮度
Lightness，是另一种在 CSS 中声明颜色的方式。紫色的 HSL
颜色值可以指定如下：</p>
<pre class="text"><code>hsl(300, 100%, 25.1%)</code></pre>
<p>如你所见，第一个参数用于定义色相，它是实际纯色的值，例如红色、黄色、绿色、蓝色、洋红色等。色相是一个颜色轮，取值为
0 到 360 的度数。这里 0 和 360 度代表红色，120 度代表绿色，240
度代表蓝色。</p>
<p>与 RGB 不同，在 HSL 中，颜色的饱和度和亮度都可以改变。</p>
<p>这些颜色可以是暗淡的，也可以是鲜艳的。颜色越少，它变成灰色的阴影就越多。<strong>饱和度</strong>指代混合色中存在多少颜色，它能控制颜色的<strong>鲜艳或暗淡</strong>程度。</p>
<figure>
<img src="https://cdn-images-1.medium.com/max/2044/1*-eXO8dohWa8I60_Qo-AKyQ.gif" alt="使用 Brandon Mathis 的 HSL 颜色选择器(https://hslpicker.com/#ff5100)">
<figcaption aria-hidden="true">使用 Brandon Mathis 的 <a href="https://hslpicker.com/#ff5100">HSL
颜色选择器</a>(https://hslpicker.com/#ff5100)</figcaption>
</figure>
<p>如你所见，当饱和度值沿线从 100% 变为 0%
时，颜色会从纯色调变为暗色调。</p>
<p>此外，还有第三个参数代表亮度。这玩意也是一个百分比值，数值范围也是 0%
到 100%，用于描述颜色中黑色或白色的占比。</p>
<figure>
<img src="https://cdn-images-1.medium.com/max/2000/1*1s0MaASIXSV9vJw6oFvjgg.gif" alt="使用 Brandon Mathis 的 HSL 颜色选择器">
<figcaption aria-hidden="true">使用 Brandon Mathis 的 <a href="https://hslpicker.com/#ff5100">HSL 颜色选择器</a></figcaption>
</figure>
<p>这类似于水彩在绘画中的使用。如果你想让颜色更亮，你可以添加白色，如果你想让颜色更深，你可以添加黑色。因此，100%
的亮度表示完全的白色，50% 表示实际色调颜色，0% 表示纯黑色。</p>
<p><strong>HSLA</strong> 与 RGBA 类似，是 HSL
的扩展。第四个通道表示颜色的不透明度，与 RGBA 和 Hex-alpha
并无二致。不透明度以十进制值指定，就像在 RGBA 中一样，其中 1
表示完全不透明，0 表示完全透明，中间的所有取值都是部分不透明的。</p>
<p>然而，尽管大多数浏览器支持 RGB 和 Hex 颜色代码，HSL
颜色主要还是在基于 HTML5 的浏览器中得到支持。</p>
<hr>
<p>你可能已经在 CSS 中设置颜色属性时使用过所有或部分的这些颜色方法。Hex
是我个人的最爱，但是他们之间究竟有什么区别，各自又有着怎样的优势？话不多说，一起来了解一下吧！</p>
<h2 id="在-css-中指定颜色的最佳方法是什么">在 CSS
中指定颜色的最佳方法是什么？</h2>
<p>如果你习惯了 HTML，你可能更习惯使用 Hex 颜色值，因为 Hex 颜色值在
HTML 中被大量使用。但如果你学过设计，你可能会使用 RGB
表示法，因为它是大多数设计软件（如 Photoshop、Corel 和
Illustrator）中最常用的格式。</p>
<p>我的建议是，如果你是一名纯粹的开发人员并且只想完成你的项目，请继续使用你最熟悉的颜色方式。</p>
<blockquote>
<p>因为浏览器并不真正关心你使用的是哪种颜色格式，即使不同方法之间有细微的性能变化，但性能差异可以忽略不计。</p>
</blockquote>
<p>除此之外，如果你担心可用性、决策对开发人员的影响等，让我们看看哪种方法最适合你的情况。</p>
<p>让我们从十六进制表示法开始。由于其简短的符号，十六进制非常有吸引力。许多开发人员发现，与
RGB 和 HSL 相比，Hex
值非常易于阅读，而且更容易复制到他们喜欢的文本编辑器中。</p>
<p>RGB 在较旧版本的 Internet Explorer（9
及更早版本）中广为人知并受支持。</p>
<h3 id="hsl-旨在让人类更容易理解">HSL 旨在让人类更容易理解！</h3>
<p>RGB 和 Hex 等格式的机器可读性比人类可读性强。相反，HSL
旨在让人类更好地理解。HSL 是一种更新且自然的颜色处理方式。</p>
<blockquote>
<p>与在 Hex 和 RGBA 中你必须通过一些数字来获得你想要的颜色不同，在 HSL
中，我们可以使用 Hue
定义颜色并使用第二和第三个参数百分比来获得你想要的饱和度和亮度级别。</p>
</blockquote>
<p>如果我告诉你网页标题需要是 <code>#578557</code> 或
<code>rgb(87, 133, 87)</code>，你能猜出是什么颜色吗？ 😵
不，除非你是电脑。但是，与此同时，如果我给你 HSL
中的颜色：<code>hsl(120, 21%, 43%)</code>？现在猜测有点容易了吧？ Hue
值为 120°，表示它是纯绿色。接下来，它的饱和度为
61%，表明它距离暗灰色（一种非常不饱和的绿色）还有 21%。最后，亮度 43%
意味着颜色从纯色到较暗的一面有 7%。</p>
<p>好的，假设你想让按钮颜色在悬停时更亮，单击时更暗。使用 HSL 轻而易举
—— 只需要增加和减少亮度值，仅此而已，是不是非常吃惊！！ 😎
但是在不使用工具或设计师的帮助下用十六进制或 RGB
来做到这一点是不可能的。</p>
<blockquote>
<p>HSL 是一种模仿现实世界的直观颜色符号。</p>
</blockquote>
<p>例如，让我们考虑一张浅蓝色的色纸。它的三种格式的颜色值分别是：</p>
<table>
<thead>
<tr class="header">
<th>Hex</th>
<th>RGB</th>
<th>HSL</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>#ADD8E6</td>
<td>rgb(173, 216, 230)</td>
<td>hsl(195, 53.3%, 79%)</td>
</tr>
</tbody>
</table>
<p>好的，现在把你的手握在离表面几英寸的地方。你手的影子让表面变暗了一点，对吧？在不改变颜色本身的情况下，我们是无法使用
RGB 或十六进制表示法表示这种颜色变化的。但是在 HSL
中，我们仅仅需要稍微调整亮度值，然后就 <strong>大功告成 💥</strong>
了！我们根本不需要对原始颜色进行任何更改，是不是真的很酷？</p>
<table>
<thead>
<tr class="header">
<th></th>
<th>Hex</th>
<th>RGB</th>
<th>HSL</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>原值</td>
<td>#4f2017</td>
<td>rgb(79, 32, 23)</td>
<td>hsl(195, 53.3%, 79%)</td>
</tr>
<tr class="even">
<td>新值</td>
<td>#2F819D</td>
<td>rgb(47, 129, 157)</td>
<td>hsl(195, 53.3%, 50%)</td>
</tr>
</tbody>
</table>
<p>如你所见，Hex 和 RGB 值已经被改到面目全非了，而对于
HSL，只有一个值发生了变化。毫无疑问，在构建配色方案时，HSL
是最有用的。以底色为基础，根据需要调整饱和度和亮度，就是这样！有了
HSL，建立一个配色方案，简直就是小菜一碟。 😋</p>
<h3 id="最后这一切都取决于个人喜好">最后，这一切都取决于个人喜好！</h3>
<p>现在你可能认为 HSL
是最好的颜色表示法。但是，正如我上面提到的，旧版本的 Internet Explorer
不支持 HSL。同样，每种颜色格式都有其优点和缺点。问题是，这并不重要。</p>
<blockquote>
<p>最重要的是尽可能保持在项目中使用到的类型的一致性，因为它有助于提高生产力。</p>
</blockquote>
<ul>
<li><s>和其他两种颜色相比 Hex 有不支持透明度的限制</s>（译者注：Hex
是支持的……）</li>
<li>不使用特定工具来调整 RGBA 颜色是很很困难的</li>
<li>旧浏览器不支持 HSLA
<ul>
<li>如果你所服务的浏览器支持 HSLA
那就忽略这条吧！你可以选择使用任何格式！</li>
</ul></li>
</ul>
<p>在选择在项目中设置 CSS 颜色属性的最佳方法时，你可以考虑以下因素。</p>
<ol type="1">
<li>使用与开发团队其他成员相同的格式来提高可维护性。</li>
<li>如果你已经熟悉 RGB 格式，请使用它。</li>
<li>如果你的目标访问者使用严重过时的浏览器访问你的网站，请使用
Hex，或者使用如下后备代码：</li>
</ol>
<div class="sourceCode" id="cb4"><pre class="sourceCode css"><code class="sourceCode css"><span id="cb4-1"><a href="#cb4-1" aria-hidden="true" tabindex="-1"></a>p &#123;</span>
<span id="cb4-2"><a href="#cb4-2" aria-hidden="true" tabindex="-1"></a>    <span class="kw">color</span>: <span class="cn">#FF0000</span><span class="op">;</span></span>
<span id="cb4-3"><a href="#cb4-3" aria-hidden="true" tabindex="-1"></a>    <span class="kw">color</span>: <span class="fu">hsla(</span><span class="dv">0</span><span class="op">,</span> <span class="dv">100</span><span class="dt">%</span><span class="op">,</span> <span class="dv">50</span><span class="dt">%</span><span class="op">,</span> <span class="dv">1</span><span class="fu">)</span><span class="op">;</span></span>
<span id="cb4-4"><a href="#cb4-4" aria-hidden="true" tabindex="-1"></a>&#125;</span></code></pre></div>
<ol start="4" type="1">
<li>如果以上三点还是没能让你决定使用哪一种，请使用 HSLA。HSLA 允许你像
RGBA 一样使用透明度，而且更具备可访问性。</li>
</ol>
<h3 id="有哪些替代方案">有哪些替代方案？</h3>
<p>除了上面提到的方法，还有一些其他方法可以用来在 CSS
中设置颜色属性。</p>
<ul>
<li><strong>使用颜色名称</strong>：所有现代浏览器都支持 140 个标准 CSS
颜色名称。颜色名称是代表特定颜色的关键字，如 <code>coral</code>。</li>
<li><code>currentcolor</code>
<strong>关键字</strong>：如果需要引用一个元素的颜色，可以使用这个关键字。</li>
<li><strong>HWB 值：</strong> HWB 代表色相、白度、黑度。虽然目前 HTML
不支持它，但它被建议作为 CSS4 的新标准。</li>
<li><strong>CMYK 值</strong>：CMYK
是青色、洋红色、黄色和黑色的组合。尽管计算机屏幕使用 RGB
值来显示颜色，但打印机通常使用 CMYK 颜色值来显示颜色。与 HWB 类似，CMYK
在 HTML 中尚不支持，不过也是被建议作为 CSS4 中的新标准。</li>
</ul>
<h3 id="最后">最后</h3>
<p>颜色在网页中起着至关重要的作用。在 CSS 中，我们能使用 RGB、Hex 和 HSL
等方法来定义颜色。在本文中，我们了解了用于在 CSS
中设置颜色属性的三种主要方法，以及它们的区别和各自的优缺点，还有可用于在
CSS 中定义颜色属性的其他替代方法。</p>
<blockquote>
<p>尽管 HSLA
由于其人类可读性而比其他两种方法略有优势，但如果不是针对特定情况，则无关紧要。你可以使用任何你觉得舒服的方式。</p>
</blockquote>
<p>看看不同的优缺点，每种方法都优于其他方法，总而言之，决定使用哪种方式在
CSS 中设置颜色属性应取决于以下三个因素：</p>
<ul>
<li>偏好</li>
<li>可维护性</li>
<li>性能与效果</li>
</ul>
<p>那么，你更喜欢用什么来设置 CSS 中的颜色？Hex、RGBA、HSLA
或其他什么？原因又是什么？在评论区告诉我吧。 😃</p>
<hr>
<p>希望能在另一篇令人兴奋的文章中再次遇见你。祝你编码愉快！ 💻</p>]]></content>
      <categories>
        <category>Computer Science</category>
        <category>Frontend</category>
        <category>Styling</category>
      </categories>
      <tags>
        <tag>Computer Science</tag>
        <tag>UI</tag>
        <tag>Frontend</tag>
        <tag>CSS</tag>
      </tags>
  </entry>
  <entry>
    <title>纯 CSS 创建五彩斑斓的智能阴影</title>
    <url>/2021/07/06/computer%20science/frontend/creating-colorful-smart-shadows/</url>
    <content><![CDATA[<blockquote>
<ul>
<li>原文地址：<a href="https://www.kirupa.com/html5/creating_colorful_smart_shadows.htm">Creating
Colorful, Smart Shadows</a></li>
<li>原文作者：<a href="https://www.kirupa.com/me/index.htm">kirupa</a></li>
<li>译者：<a href="https://github.com/PassionPenguin">霜羽
Hoarfroster</a></li>
<li>校对者：<a href="https://github.com/CarlosChenN">CarlosChenN</a>、<a href="https://github.com/KimYangOfCat">Kim Yang</a></li>
</ul>
</blockquote>
<p>几天前，我在 Home Depot（也就是大孩子的<a href="http://en.wikipedia.org/wiki/Toys_R_Us">玩具反斗城</a>）处发现，他们有一个巨大的显示器来展示所有这些彩色的供销售的电灯泡！其中一项是一组在电视后面的智能灯泡。它们会在电视的后面投影近似于电视在播出的内容的彩色阴影，与以下内容
<a href="https://www.philips-hue.com/en-us/p/hue-play-hdmi-sync-box-/046677555221">类似</a>：</p>
<p><img src="https://www.kirupa.com/html5/images/lighting_behind_tv.png"></p>
<p>注意电视后面发生的事情。屏幕中所显示的颜色会被灯泡投影为电视机身后面的彩色阴影。随着屏幕上的颜色发生变化，投射在背景中的颜色也会发生变化。真的很酷，对吧？</p>
<p>自然，看到这个之后，我的第一个想法是，我们是否可以使用 Web
技术创建一个足够智能以模仿前景色的彩色阴影。事实证明，我们完全可以只使用
CSS 构建出这个案例。在本文中，我们将了解如何创建这种效果。</p>
<p>走起！</p>
<h2 id="让它变成真的">让它变成真的！</h2>
<p>正如您将在以下部分中看到的，使用 CSS
创建这种彩色阴影似乎是一项艰巨的任务（当然，只是就刚开始而言）。当我们开始进入它并将这个困难的任务的核心分割成一个个小任务时，我们其实能够发现，要实现这个效果，其实蛮简单的。在接下来的几个小节中，我们将创建以下示例：</p>
<p><img src="https://user-images.githubusercontent.com/5164225/122199432-9bf35d80-cecc-11eb-9150-28c7b09c595e.gif"></p>
<p>你应该看到的是一张后面有一个五颜六色的阴影的寿司的图片。（只是为了强调我们正在做这一切，我们为阴影添加了脉冲的动画效果）抛开示例，让我们深入了解实现，看看
HTML 和 CSS 如何让这一切变为现实！</p>
<h3 id="展示我们的照片">展示我们的照片</h3>
<p>用来展示我们寿司图片的 HTML 其实没什么特别的：</p>
<div class="sourceCode" id="cb1"><pre class="sourceCode html"><code class="sourceCode html"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a><span class="kw">&lt;div</span> <span class="er">class</span><span class="ot">=</span><span class="st">"parent"</span><span class="kw">&gt;</span></span>
<span id="cb1-3"><a href="#cb1-3" aria-hidden="true" tabindex="-1"></a>    <span class="kw">&lt;div</span> <span class="er">class</span><span class="ot">=</span><span class="st">"colorfulShadow sushi"</span><span class="kw">&gt;&lt;/div&gt;</span></span>
<span id="cb1-4"><a href="#cb1-4" aria-hidden="true" tabindex="-1"></a><span class="kw">&lt;/div&gt;</span></span></code></pre></div>
<p>我们有一个父 div 元素，包含一个负责显示寿司的子 div
元素。我们显示寿司的方式是将其指定为背景图像，并由以下
<strong>.sushi</strong> 样式规则处理：</p>
<div class="sourceCode" id="cb2"><pre class="sourceCode css"><code class="sourceCode css"><span id="cb2-1"><a href="#cb2-1" aria-hidden="true" tabindex="-1"></a><span class="fu">.sushi</span> &#123;</span>
<span id="cb2-2"><a href="#cb2-2" aria-hidden="true" tabindex="-1"></a>    <span class="kw">margin</span>: <span class="dv">100</span><span class="dt">px</span><span class="op">;</span></span>
<span id="cb2-3"><a href="#cb2-3" aria-hidden="true" tabindex="-1"></a>    <span class="kw">width</span>: <span class="dv">150</span><span class="dt">px</span><span class="op">;</span></span>
<span id="cb2-4"><a href="#cb2-4" aria-hidden="true" tabindex="-1"></a>    <span class="kw">height</span>: <span class="dv">150</span><span class="dt">px</span><span class="op">;</span></span>
<span id="cb2-5"><a href="#cb2-5" aria-hidden="true" tabindex="-1"></a>    <span class="kw">background-image</span>: <span class="fu">url(</span><span class="st">"https://www.kirupa.com/icon/1f363.svg"</span><span class="fu">)</span><span class="op">;</span></span>
<span id="cb2-6"><a href="#cb2-6" aria-hidden="true" tabindex="-1"></a>    <span class="kw">background-repeat</span>: <span class="dv">no-repeat</span><span class="op">;</span></span>
<span id="cb2-7"><a href="#cb2-7" aria-hidden="true" tabindex="-1"></a>    <span class="kw">background-size</span>: <span class="dv">contain</span><span class="op">;</span></span>
<span id="cb2-8"><a href="#cb2-8" aria-hidden="true" tabindex="-1"></a>&#125;</span></code></pre></div>
<p>在此样式规则中，我们将 div 的大小指定为 150 x 150 像素，并在其上设置
<code>background-image</code> 和相关的其他属性。就目前而言，我们所看到的
HTML 和 CSS 会给我们提供如下所示的内容：</p>
<p><img src="https://www.kirupa.com/html5/images/chrome_sushi_only.png"></p>
<h2 id="现在是阴影时间">现在是阴影时间</h2>
<p>现在我们的图像出现了，剩下的就是我们定义阴影这一有趣的部分。我们要定义阴影的方法是指定一个子伪元素（使用
<code>::after</code>），它将做三件事：</p>
<ol type="1">
<li>直接定位在我们的图片后面；</li>
<li>继承与父元素相同的背景图片；</li>
<li>依靠滤镜实现多彩的阴影效果；</li>
</ol>
<p>这三件事是通过以下两条样式规则完成的：</p>
<div class="sourceCode" id="cb3"><pre class="sourceCode css"><code class="sourceCode css"><span id="cb3-1"><a href="#cb3-1" aria-hidden="true" tabindex="-1"></a><span class="fu">.colorfulShadow</span> &#123;</span>
<span id="cb3-2"><a href="#cb3-2" aria-hidden="true" tabindex="-1"></a>    <span class="kw">position</span>: <span class="dv">relative</span><span class="op">;</span></span>
<span id="cb3-3"><a href="#cb3-3" aria-hidden="true" tabindex="-1"></a>&#125;</span>
<span id="cb3-4"><a href="#cb3-4" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb3-5"><a href="#cb3-5" aria-hidden="true" tabindex="-1"></a><span class="fu">.colorfulShadow</span><span class="in">::after</span> &#123;</span>
<span id="cb3-6"><a href="#cb3-6" aria-hidden="true" tabindex="-1"></a>    <span class="kw">content</span>: <span class="st">""</span><span class="op">;</span></span>
<span id="cb3-7"><a href="#cb3-7" aria-hidden="true" tabindex="-1"></a>    <span class="kw">width</span>: <span class="dv">100</span><span class="dt">%</span><span class="op">;</span></span>
<span id="cb3-8"><a href="#cb3-8" aria-hidden="true" tabindex="-1"></a>    <span class="kw">height</span>: <span class="dv">100</span><span class="dt">%</span><span class="op">;</span></span>
<span id="cb3-9"><a href="#cb3-9" aria-hidden="true" tabindex="-1"></a>    <span class="kw">position</span>: <span class="dv">absolute</span><span class="op">;</span></span>
<span id="cb3-10"><a href="#cb3-10" aria-hidden="true" tabindex="-1"></a>    <span class="kw">background</span>: <span class="bu">inherit</span><span class="op">;</span></span>
<span id="cb3-11"><a href="#cb3-11" aria-hidden="true" tabindex="-1"></a>    <span class="kw">background-position</span>: <span class="dv">center</span> <span class="dv">center</span><span class="op">;</span></span>
<span id="cb3-12"><a href="#cb3-12" aria-hidden="true" tabindex="-1"></a>    <span class="kw">filter</span>: <span class="fu">drop-shadow(</span><span class="dv">0</span><span class="dt">px</span> <span class="dv">0</span><span class="dt">px</span> <span class="dv">10</span><span class="dt">px</span> rgba(<span class="dv">0</span><span class="op">,</span> <span class="dv">0</span><span class="op">,</span> <span class="dv">0</span><span class="op">,</span> <span class="dv">0.50</span><span class="fu">)</span>) <span class="fu">blur(</span><span class="dv">20</span><span class="dt">px</span><span class="fu">)</span><span class="op">;</span></span>
<span id="cb3-13"><a href="#cb3-13" aria-hidden="true" tabindex="-1"></a>    <span class="kw">z-index</span>: <span class="dv">-1</span><span class="op">;</span></span>
<span id="cb3-14"><a href="#cb3-14" aria-hidden="true" tabindex="-1"></a>&#125;</span></code></pre></div>
<p>让我们花一点时间来看看这里发生了些什么：先注意每一个属性和对应的值，有一些值得注意的属性
—— <code>background</code> 和
<code>filter</code>。<code>background</code> 属性使用了
<code>inherit</code> 继承父元素，意味着能够继承父元素的背景：</p>
<div class="sourceCode" id="cb4"><pre class="sourceCode css"><code class="sourceCode css"><span id="cb4-1"><a href="#cb4-1" aria-hidden="true" tabindex="-1"></a><span class="fu">.colorfulShadow</span><span class="in">::after</span> &#123;</span>
<span id="cb4-2"><a href="#cb4-2" aria-hidden="true" tabindex="-1"></a>    <span class="kw">content</span>: <span class="st">""</span><span class="op">;</span></span>
<span id="cb4-3"><a href="#cb4-3" aria-hidden="true" tabindex="-1"></a>    <span class="kw">width</span>: <span class="dv">100</span><span class="dt">%</span><span class="op">;</span></span>
<span id="cb4-4"><a href="#cb4-4" aria-hidden="true" tabindex="-1"></a>    <span class="kw">height</span>: <span class="dv">100</span><span class="dt">%</span><span class="op">;</span></span>
<span id="cb4-5"><a href="#cb4-5" aria-hidden="true" tabindex="-1"></a>    <span class="kw">position</span>: <span class="dv">absolute</span><span class="op">;</span></span>
<span id="cb4-6"><a href="#cb4-6" aria-hidden="true" tabindex="-1"></a>    <span class="kw">background</span>: <span class="bu">inherit</span><span class="op">;</span></span>
<span id="cb4-7"><a href="#cb4-7" aria-hidden="true" tabindex="-1"></a>    <span class="kw">background-position</span>: <span class="dv">center</span> <span class="dv">center</span><span class="op">;</span></span>
<span id="cb4-8"><a href="#cb4-8" aria-hidden="true" tabindex="-1"></a>    <span class="kw">filter</span>: <span class="fu">drop-shadow(</span><span class="dv">0</span><span class="dt">px</span> <span class="dv">0</span><span class="dt">px</span> <span class="dv">10</span><span class="dt">px</span> rgba(<span class="dv">0</span><span class="op">,</span> <span class="dv">0</span><span class="op">,</span> <span class="dv">0</span><span class="op">,</span> <span class="dv">0.50</span><span class="fu">)</span>) <span class="fu">blur(</span><span class="dv">20</span><span class="dt">px</span><span class="fu">)</span><span class="op">;</span></span>
<span id="cb4-9"><a href="#cb4-9" aria-hidden="true" tabindex="-1"></a>    <span class="kw">z-index</span>: <span class="dv">-1</span><span class="op">;</span></span>
<span id="cb4-10"><a href="#cb4-10" aria-hidden="true" tabindex="-1"></a>&#125;</span></code></pre></div>
<p>我们为 <code>filter</code> 属性定义了两个过滤的属性，分别是
<strong>drop-shadow</strong> 和 <strong>blur</strong>：</p>
<div class="sourceCode" id="cb5"><pre class="sourceCode css"><code class="sourceCode css"><span id="cb5-1"><a href="#cb5-1" aria-hidden="true" tabindex="-1"></a><span class="fu">.colorfulShadow</span><span class="in">::after</span> &#123;</span>
<span id="cb5-2"><a href="#cb5-2" aria-hidden="true" tabindex="-1"></a>    <span class="kw">content</span>: <span class="st">""</span><span class="op">;</span></span>
<span id="cb5-3"><a href="#cb5-3" aria-hidden="true" tabindex="-1"></a>    <span class="kw">width</span>: <span class="dv">100</span><span class="dt">%</span><span class="op">;</span></span>
<span id="cb5-4"><a href="#cb5-4" aria-hidden="true" tabindex="-1"></a>    <span class="kw">height</span>: <span class="dv">100</span><span class="dt">%</span><span class="op">;</span></span>
<span id="cb5-5"><a href="#cb5-5" aria-hidden="true" tabindex="-1"></a>    <span class="kw">position</span>: <span class="dv">absolute</span><span class="op">;</span></span>
<span id="cb5-6"><a href="#cb5-6" aria-hidden="true" tabindex="-1"></a>    <span class="kw">background</span>: <span class="bu">inherit</span><span class="op">;</span></span>
<span id="cb5-7"><a href="#cb5-7" aria-hidden="true" tabindex="-1"></a>    <span class="kw">background-position</span>: <span class="dv">center</span> <span class="dv">center</span><span class="op">;</span></span>
<span id="cb5-8"><a href="#cb5-8" aria-hidden="true" tabindex="-1"></a>    <span class="kw">filter</span>: <span class="fu">drop-shadow(</span><span class="dv">0</span><span class="dt">px</span> <span class="dv">0</span><span class="dt">px</span> <span class="dv">10</span><span class="dt">px</span> rgba(<span class="dv">0</span><span class="op">,</span> <span class="dv">0</span><span class="op">,</span> <span class="dv">0</span><span class="op">,</span> <span class="dv">0.50</span><span class="fu">)</span>) <span class="fu">blur(</span><span class="dv">20</span><span class="dt">px</span><span class="fu">)</span><span class="op">;</span></span>
<span id="cb5-9"><a href="#cb5-9" aria-hidden="true" tabindex="-1"></a>    <span class="kw">z-index</span>: <span class="dv">-1</span><span class="op">;</span></span>
<span id="cb5-10"><a href="#cb5-10" aria-hidden="true" tabindex="-1"></a>&#125;</span></code></pre></div>
<p>我们的 <strong>drop-shadow</strong> 过滤器设置为显示不透明度为 50%
的黑色阴影，而我们的 <strong>blur</strong> 过滤器会将我们的伪元素模糊
20px。
这两个过滤器的组合最终创建了彩色的阴影，当应用这两个样式规则时，该阴影现在将出现在我们的寿司图像后面：</p>
<p><img src="https://www.kirupa.com/html5/images/chrome_sushi_shadow.png"></p>
<p>至此，我们已经实现了智能阴影。为完整起见，如果我们想要彩色阴影缩放的动画，如下
CSS 代码的添加能够助力我们实现目标：</p>
<div class="sourceCode" id="cb6"><pre class="sourceCode css"><code class="sourceCode css"><span id="cb6-1"><a href="#cb6-1" aria-hidden="true" tabindex="-1"></a><span class="fu">.colorfulShadow</span> &#123;</span>
<span id="cb6-2"><a href="#cb6-2" aria-hidden="true" tabindex="-1"></a>    <span class="kw">position</span>: <span class="dv">relative</span><span class="op">;</span></span>
<span id="cb6-3"><a href="#cb6-3" aria-hidden="true" tabindex="-1"></a>&#125;</span>
<span id="cb6-4"><a href="#cb6-4" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb6-5"><a href="#cb6-5" aria-hidden="true" tabindex="-1"></a><span class="fu">.colorfulShadow</span><span class="in">::after</span> &#123;</span>
<span id="cb6-6"><a href="#cb6-6" aria-hidden="true" tabindex="-1"></a>    <span class="kw">content</span>: <span class="st">""</span><span class="op">;</span></span>
<span id="cb6-7"><a href="#cb6-7" aria-hidden="true" tabindex="-1"></a>    <span class="kw">width</span>: <span class="dv">100</span><span class="dt">%</span><span class="op">;</span></span>
<span id="cb6-8"><a href="#cb6-8" aria-hidden="true" tabindex="-1"></a>    <span class="kw">height</span>: <span class="dv">100</span><span class="dt">%</span><span class="op">;</span></span>
<span id="cb6-9"><a href="#cb6-9" aria-hidden="true" tabindex="-1"></a>    <span class="kw">position</span>: <span class="dv">absolute</span><span class="op">;</span></span>
<span id="cb6-10"><a href="#cb6-10" aria-hidden="true" tabindex="-1"></a>    <span class="kw">background</span>: <span class="bu">inherit</span><span class="op">;</span></span>
<span id="cb6-11"><a href="#cb6-11" aria-hidden="true" tabindex="-1"></a>    <span class="kw">background-position</span>: <span class="dv">center</span> <span class="dv">center</span><span class="op">;</span></span>
<span id="cb6-12"><a href="#cb6-12" aria-hidden="true" tabindex="-1"></a>    <span class="kw">filter</span>: <span class="fu">drop-shadow(</span><span class="dv">0</span><span class="dt">px</span> <span class="dv">0</span><span class="dt">px</span> <span class="dv">10</span><span class="dt">px</span> rgba(<span class="dv">0</span><span class="op">,</span> <span class="dv">0</span><span class="op">,</span> <span class="dv">0</span><span class="op">,</span> <span class="dv">0.50</span><span class="fu">)</span>) <span class="fu">blur(</span><span class="dv">20</span><span class="dt">px</span><span class="fu">)</span><span class="op">;</span></span>
<span id="cb6-13"><a href="#cb6-13" aria-hidden="true" tabindex="-1"></a>    <span class="kw">z-index</span>: <span class="dv">-1</span><span class="op">;</span></span>
<span id="cb6-14"><a href="#cb6-14" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb6-15"><a href="#cb6-15" aria-hidden="true" tabindex="-1"></a>    <span class="co">/* animation time! */</span></span>
<span id="cb6-16"><a href="#cb6-16" aria-hidden="true" tabindex="-1"></a>    <span class="kw">animation</span>: oscillate <span class="dv">1</span><span class="dt">s</span> <span class="fu">cubic-bezier(</span><span class="dv">.17</span><span class="op">,</span> <span class="dv">.67</span><span class="op">,</span> <span class="dv">.45</span><span class="op">,</span> <span class="dv">1.32</span><span class="fu">)</span> <span class="dv">infinite</span> <span class="dv">alternate</span><span class="op">;</span></span>
<span id="cb6-17"><a href="#cb6-17" aria-hidden="true" tabindex="-1"></a>&#125;</span>
<span id="cb6-18"><a href="#cb6-18" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb6-19"><a href="#cb6-19" aria-hidden="true" tabindex="-1"></a><span class="im">@keyframes</span> oscillate &#123;</span>
<span id="cb6-20"><a href="#cb6-20" aria-hidden="true" tabindex="-1"></a>    <span class="dv">from</span> &#123;</span>
<span id="cb6-21"><a href="#cb6-21" aria-hidden="true" tabindex="-1"></a>        <span class="kw">transform</span>: <span class="fu">scale(</span><span class="dv">1</span><span class="op">,</span> <span class="dv">1</span><span class="fu">)</span><span class="op">;</span></span>
<span id="cb6-22"><a href="#cb6-22" aria-hidden="true" tabindex="-1"></a>    &#125;</span>
<span id="cb6-23"><a href="#cb6-23" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb6-24"><a href="#cb6-24" aria-hidden="true" tabindex="-1"></a>    <span class="dv">to</span> &#123;</span>
<span id="cb6-25"><a href="#cb6-25" aria-hidden="true" tabindex="-1"></a>        <span class="kw">transform</span>: <span class="fu">scale(</span><span class="dv">1.3</span><span class="op">,</span> <span class="dv">1.3</span><span class="fu">)</span><span class="op">;</span></span>
<span id="cb6-26"><a href="#cb6-26" aria-hidden="true" tabindex="-1"></a>    &#125;</span>
<span id="cb6-27"><a href="#cb6-27" aria-hidden="true" tabindex="-1"></a>&#125;</span></code></pre></div>
<p>如果您想要一些交互性而没有不断循环的动画，您还可以使用 CSS
过渡来更改阴影在某些动作（如悬停）上的行为方式。困难的部分是像对待在
HTML 中明确定义或使用 JavaScript
动态创建的任何其他元素一样对待伪元素。其唯一的区别是伪元素是完全使用 CSS
创建的！</p>
<h2 id="结论">结论</h2>
<p>伪元素允许我们使用 CSS 来完成一些历史上属于 HTML 和 JavaScript
领域的元素创建任务。对于我们多彩而智能的阴影，我们能够依靠父元素来设置背景图像。这使我们能够轻松定义一个既继承了父元素的背景图像细节，又允许我们为其设置一系列属性以实现模糊和阴影效果的子伪元素。尽管这一切都很好，我们也最大限度地减少了大量复制和粘贴，但这种方法不是很灵活。</p>
<p>如果我想将这样的阴影应用到一个不只是带有背景图像的空元素上怎么办？如果我有一个像
<strong>Button</strong> 或 <strong>ComboBox</strong> 这样的 HTML
元素想要应用这种阴影效果怎么办？一种解决方案是依靠 JavaScript 在 DOM
中复制适当的元素，将它们放置在前景元素下方，应用过滤器，然后就可以了。虽然可行，但考虑到该过程的复杂程度，实在是有些不寒而栗。可惜
JavaScript 没有等效的 <a href="https://docs.microsoft.com/en-us/dotnet/api/system.windows.media.imaging.rendertargetbitmap?view=net-5.0">renderTargetBitmap</a>
这种能够把我们的视觉效果渲染成位图，然后你可以做任何你想做的事的 API……
🥶</p>]]></content>
      <categories>
        <category>Computer Science</category>
        <category>Frontend</category>
        <category>Styling</category>
      </categories>
      <tags>
        <tag>Computer Science</tag>
        <tag>UI</tag>
        <tag>Frontend</tag>
        <tag>CSS</tag>
      </tags>
  </entry>
  <entry>
    <title>下一代 CSS：@container</title>
    <url>/2021/07/06/computer%20science/frontend/next-gen-css-container/</url>
    <content><![CDATA[<blockquote>
<ul>
<li>原文地址：<a href="https://css-tricks.com/next-gen-css-container/">Next Gen CSS:
<span class="citation" data-cites="container">@container</span></a></li>
<li>原文作者：<a href="https://css-tricks.com/author/unakravets/">Una
Kravets</a></li>
<li>译者：<a href="https://github.com/PassionPenguin">霜羽
Hoarfroster</a></li>
<li>校对者：<a href="https://github.com/Chorer">Chorer</a>、<a href="https://github.com/KimYangOfCat">Kim Yang</a></li>
</ul>
</blockquote>
<p>Chrome 正在试验 CSS <code>@container</code> 查询器功能，这是由 <a href="https://css.oddbird.net/rwd/query/">Oddbird</a> 的 <a href="https://twitter.com/TerribleMia">Miriam Suzanne</a>
和一群网络平台开发者支持的 CSS 工作组 <a href="https://github.com/w3c/csswg-drafts/issues?q=is%3Aissue+label%3Acss-contain-3+">Containment
Level 3 规范</a>。<code>@container</code>
查询器使我们能够<strong>根据父容器的大小来设置元素的样式</strong>。</p>
<blockquote>
<p><code>@container</code> API
不稳定，会受到语法变化的影响。如果你想要自己尝试一下，可能会遇到一些错误。请将这些错误报告给相应的浏览器引擎！<strong>报告错误的链接如下：</strong></p>
<ul>
<li><a href="https://bugs.chromium.org/p/chromium/issues/list">Chrome</a></li>
<li><a href="https://bugzilla.mozilla.org/home">Firefox</a></li>
<li><a href="https://bugs.webkit.org/query.cgi?format=specific&amp;product=WebKit">Safari</a></li>
</ul>
</blockquote>
<p>你可以把这些想象成一个媒体查询（<code>@media</code>），但不是依靠
<strong>viewport</strong>
来调整样式，而是你的目标元素的父容器会调整这些样式。</p>
<h2 id="容器查询将是自-css3-以来-web-样式的最大变化将会改变我们对响应式设计含义的看法">容器查询将是自
CSS3 以来 Web
样式的最大变化，将会改变我们对“响应式设计”含义的看法。</h2>
<p>viewport 和用户代理不再是我们创建响应式布局和 UI
样式的唯一目标。通过容器查询，元素将能够定位自己的父元素并相应地应用自己的样式。这意味着存在于侧边栏、主体或头图中的相同元素可能会根据其可用大小和动态看起来完全不同。</p>
<h2 id="container-实例"><code>@container</code> 实例</h2>
<p>在<a href="https://codepen.io/una/pen/LYbvKpK">本示例</a>中，我在父级中使用了两张带有以下标记的卡片：</p>
<div class="sourceCode" id="cb1"><pre class="sourceCode html"><code class="sourceCode html"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a><span class="kw">&lt;div</span> <span class="er">class</span><span class="ot">=</span><span class="st">"card-container"</span><span class="kw">&gt;</span></span>
<span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a>    <span class="kw">&lt;div</span> <span class="er">class</span><span class="ot">=</span><span class="st">"card"</span><span class="kw">&gt;</span></span>
<span id="cb1-3"><a href="#cb1-3" aria-hidden="true" tabindex="-1"></a>        <span class="kw">&lt;figure&gt;</span> ...<span class="kw">&lt;/figure&gt;</span></span>
<span id="cb1-4"><a href="#cb1-4" aria-hidden="true" tabindex="-1"></a>        <span class="kw">&lt;div&gt;</span></span>
<span id="cb1-5"><a href="#cb1-5" aria-hidden="true" tabindex="-1"></a>            <span class="kw">&lt;div</span> <span class="er">class</span><span class="ot">=</span><span class="st">"meta"</span><span class="kw">&gt;</span></span>
<span id="cb1-6"><a href="#cb1-6" aria-hidden="true" tabindex="-1"></a>                <span class="kw">&lt;h2&gt;</span>...<span class="kw">&lt;/h2&gt;</span></span>
<span id="cb1-7"><a href="#cb1-7" aria-hidden="true" tabindex="-1"></a>                <span class="kw">&lt;span</span> <span class="er">class</span><span class="ot">=</span><span class="st">"time"</span><span class="kw">&gt;</span>...<span class="kw">&lt;/span&gt;</span></span>
<span id="cb1-8"><a href="#cb1-8" aria-hidden="true" tabindex="-1"></a>            <span class="kw">&lt;/div&gt;</span></span>
<span id="cb1-9"><a href="#cb1-9" aria-hidden="true" tabindex="-1"></a>            <span class="kw">&lt;div</span> <span class="er">class</span><span class="ot">=</span><span class="st">"notes"</span><span class="kw">&gt;</span></span>
<span id="cb1-10"><a href="#cb1-10" aria-hidden="true" tabindex="-1"></a>                <span class="kw">&lt;p</span> <span class="er">class</span><span class="ot">=</span><span class="st">"desc"</span><span class="kw">&gt;</span>...<span class="kw">&lt;/p&gt;</span></span>
<span id="cb1-11"><a href="#cb1-11" aria-hidden="true" tabindex="-1"></a>                <span class="kw">&lt;div</span> <span class="er">class</span><span class="ot">=</span><span class="st">"links"</span><span class="kw">&gt;</span>...<span class="kw">&lt;/div&gt;</span></span>
<span id="cb1-12"><a href="#cb1-12" aria-hidden="true" tabindex="-1"></a>            <span class="kw">&lt;/div&gt;</span></span>
<span id="cb1-13"><a href="#cb1-13" aria-hidden="true" tabindex="-1"></a>            <span class="kw">&lt;button&gt;</span>...<span class="kw">&lt;/button&gt;</span></span>
<span id="cb1-14"><a href="#cb1-14" aria-hidden="true" tabindex="-1"></a>        <span class="kw">&lt;/div&gt;</span></span>
<span id="cb1-15"><a href="#cb1-15" aria-hidden="true" tabindex="-1"></a>    <span class="kw">&lt;/div&gt;</span></span>
<span id="cb1-16"><a href="#cb1-16" aria-hidden="true" tabindex="-1"></a><span class="kw">&lt;/div&gt;</span></span></code></pre></div>
<p>然后，我在将查询容器样式的父级（<code>.card-container</code>）上设置
Containment（<a href="https://css-tricks.com/almanac/properties/c/contain/"><code>contain</code>
属性</a>）。我还在 <code>.card-container</code>
的父级上设置了一个相对网格布局，因此它的 <code>inline-size</code>
将根据该网格而改变。这就是我使用 <code>@container</code>
查询的内容：</p>
<div class="sourceCode" id="cb2"><pre class="sourceCode css"><code class="sourceCode css"><span id="cb2-1"><a href="#cb2-1" aria-hidden="true" tabindex="-1"></a><span class="fu">.card-container</span> &#123;</span>
<span id="cb2-2"><a href="#cb2-2" aria-hidden="true" tabindex="-1"></a>  <span class="kw">contain</span>: layout inline-size<span class="op">;</span></span>
<span id="cb2-3"><a href="#cb2-3" aria-hidden="true" tabindex="-1"></a>  <span class="kw">width</span>: <span class="dv">100</span><span class="dt">%</span><span class="op">;</span></span>
<span id="cb2-4"><a href="#cb2-4" aria-hidden="true" tabindex="-1"></a>&#125;</span></code></pre></div>
<p>现在，我可以查询容器样式来调整样式！这与使用基于宽度的媒体查询设置样式的方式非常相似，当元素<strong>小于指定尺寸</strong>时使用
<code>max-width</code>
设置样式，当元素<strong>大于指定尺寸</strong>时使用
<code>min-width</code>。</p>
<div class="sourceCode" id="cb3"><pre class="sourceCode css"><code class="sourceCode css"><span id="cb3-1"><a href="#cb3-1" aria-hidden="true" tabindex="-1"></a><span class="co">/* 当父容器宽度小于 850px，</span></span>
<span id="cb3-2"><a href="#cb3-2" aria-hidden="true" tabindex="-1"></a><span class="co">不再显示 .links</span></span>
<span id="cb3-3"><a href="#cb3-3" aria-hidden="true" tabindex="-1"></a><span class="co">并且减小 .time 字体尺寸 */</span></span>
<span id="cb3-4"><a href="#cb3-4" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb3-5"><a href="#cb3-5" aria-hidden="true" tabindex="-1"></a><span class="im">@container</span> (<span class="kw">max-width</span>: <span class="dv">850</span><span class="dt">px</span>) &#123;</span>
<span id="cb3-6"><a href="#cb3-6" aria-hidden="true" tabindex="-1"></a>  <span class="fu">.links</span> &#123;</span>
<span id="cb3-7"><a href="#cb3-7" aria-hidden="true" tabindex="-1"></a>    <span class="kw">display</span>: <span class="dv">none</span><span class="op">;</span></span>
<span id="cb3-8"><a href="#cb3-8" aria-hidden="true" tabindex="-1"></a>  &#125;</span>
<span id="cb3-9"><a href="#cb3-9" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb3-10"><a href="#cb3-10" aria-hidden="true" tabindex="-1"></a>  <span class="fu">.time</span> &#123;</span>
<span id="cb3-11"><a href="#cb3-11" aria-hidden="true" tabindex="-1"></a>    <span class="kw">font-size</span>: <span class="dv">1.25</span><span class="dt">rem</span><span class="op">;</span></span>
<span id="cb3-12"><a href="#cb3-12" aria-hidden="true" tabindex="-1"></a>  &#125;</span>
<span id="cb3-13"><a href="#cb3-13" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb3-14"><a href="#cb3-14" aria-hidden="true" tabindex="-1"></a>  <span class="co">/* ... */</span></span>
<span id="cb3-15"><a href="#cb3-15" aria-hidden="true" tabindex="-1"></a>&#125;</span>
<span id="cb3-16"><a href="#cb3-16" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb3-17"><a href="#cb3-17" aria-hidden="true" tabindex="-1"></a><span class="co">/* 当父容器宽度小于 650px 时，</span></span>
<span id="cb3-18"><a href="#cb3-18" aria-hidden="true" tabindex="-1"></a><span class="co">减小 .card 元素之间的网格间距到 1rem */</span></span>
<span id="cb3-19"><a href="#cb3-19" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb3-20"><a href="#cb3-20" aria-hidden="true" tabindex="-1"></a><span class="im">@container</span> (<span class="kw">max-width</span>: <span class="dv">650</span><span class="dt">px</span>) &#123;</span>
<span id="cb3-21"><a href="#cb3-21" aria-hidden="true" tabindex="-1"></a>  <span class="fu">.card</span> &#123;</span>
<span id="cb3-22"><a href="#cb3-22" aria-hidden="true" tabindex="-1"></a>    <span class="kw">gap</span>: <span class="dv">1</span><span class="dt">rem</span><span class="op">;</span></span>
<span id="cb3-23"><a href="#cb3-23" aria-hidden="true" tabindex="-1"></a>  &#125;</span>
<span id="cb3-24"><a href="#cb3-24" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb3-25"><a href="#cb3-25" aria-hidden="true" tabindex="-1"></a>  <span class="co">/* ... */</span></span>
<span id="cb3-26"><a href="#cb3-26" aria-hidden="true" tabindex="-1"></a>&#125;</span></code></pre></div>
<figure>
<img src="https://user-images.githubusercontent.com/5164225/120361018-f670b380-c33b-11eb-8c42-38fdbb1b5a8a.gif" alt="1">
<figcaption aria-hidden="true">1</figcaption>
</figure>
<h2 id="容器查询-媒体查询">容器查询 + 媒体查询</h2>
<p>容器查询的最佳功能之一是能够将 <strong>微观上的布局</strong> 与
<strong>宏观上的布局</strong>
分开。我们可以使用容器查询设置单个元素的样式，创建细微的微观布局，并使用媒体查询（宏布局）设置整个页面布局的样式。这创造了一个新的控制水平，使界面更具响应性。</p>
<p>这是<a href="https://codepen.io/una/pen/RwodQZw">另一个示例</a>。它展示了使用媒体查询进行宏观布局（即日历从单面板到多面板）和微观布局（即日期布局/大小和事件边距/大小移动），以创建一个漂亮的和谐的查询。</p>
<figure>
<img src="https://user-images.githubusercontent.com/5164225/120361024-f8d30d80-c33b-11eb-8bed-4b367965f7be.gif" alt="2">
<figcaption aria-hidden="true">2</figcaption>
</figure>
<h2 id="容器查询-css-网格">容器查询 + CSS 网格</h2>
<p>我个人最喜欢的查看容器查询影响的方法之一是查看它们在网格中的工作方式。以下面的植物贸易
UI 为例：</p>
<figure>
<img src="https://user-images.githubusercontent.com/5164225/120361028-fa9cd100-c33b-11eb-8328-148977357c44.gif" alt="3">
<figcaption aria-hidden="true">3</figcaption>
</figure>
<p>本网站根本没有使用媒体查询。相反，我们只使用容器查询和 CSS
网格来在不同的视图中显示购物卡组件。</p>
<p>在产品网格中，布局使用了
<code>grid-template-columns: repeat(auto-fit, minmax(230px, 1fr));</code>
标记创建。这将创建一个布局，告诉卡片占用可用的小数空间，直到它们的大小达到
<code>230px</code>，然后下一格切换到下一行。你可以在 <a href="http://1linelayouts.glitch.me">1linelayouts.com</a>
上查看更多网格技巧。</p>
<p>然后，我们有一个容器查询，当卡片宽度小于 <code>350px</code>
时，它会将卡片样式设置为采用垂直块布局，并通过应用
<code>display: flex</code>（默认情况下具有内联流）转换为水平内联布局。</p>
<div class="sourceCode" id="cb4"><pre class="sourceCode css"><code class="sourceCode css"><span id="cb4-1"><a href="#cb4-1" aria-hidden="true" tabindex="-1"></a><span class="im">@container</span> (<span class="kw">min-width</span>: <span class="dv">350</span><span class="dt">px</span>) &#123;</span>
<span id="cb4-2"><a href="#cb4-2" aria-hidden="true" tabindex="-1"></a>  <span class="fu">.product-container</span> &#123;</span>
<span id="cb4-3"><a href="#cb4-3" aria-hidden="true" tabindex="-1"></a>    <span class="kw">padding</span>: <span class="dv">0.5</span><span class="dt">rem</span> <span class="dv">0</span> <span class="dv">0</span><span class="op">;</span></span>
<span id="cb4-4"><a href="#cb4-4" aria-hidden="true" tabindex="-1"></a>    <span class="kw">display</span>: flex<span class="op">;</span></span>
<span id="cb4-5"><a href="#cb4-5" aria-hidden="true" tabindex="-1"></a>  &#125;</span>
<span id="cb4-6"><a href="#cb4-6" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb4-7"><a href="#cb4-7" aria-hidden="true" tabindex="-1"></a>  <span class="co">/* ... */</span></span>
<span id="cb4-8"><a href="#cb4-8" aria-hidden="true" tabindex="-1"></a>&#125;</span></code></pre></div>
<p>这意味着每张卡片<strong>拥有自己的响应式样式</strong>。这是我们使用产品网格创建宏观布局以及使用产品卡片创建微观布局的另一个示例，酷毙了！</p>
<h2 id="用法">用法</h2>
<p>为了使用<code>@container</code>，首先需要创建一个具有 <a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/contain">Containment</a>
的父元素。为此，我们需要在父级上设置
<code>contain: layout inline-size</code>。因为我们目前只能将容器查询应用于内联轴，所以我们只可以使用
<code>inline-size</code>。这也可以防止我们的布局在块方向上中断。</p>
<p>设置 <code>contain: layout inline-size</code> 会创建一个新的 <a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/Containing_block">Containment
块</a> 和新的<a href="https://developer.mozilla.org/zh-CN/docs/Web/Guide/CSS/Block_formatting_context">块格式上下文</a>，让浏览器将其与布局的其余部分分开，现在我们就可以使用容器查询了！</p>
<h2 id="限制">限制</h2>
<p>目前，您不能使用基于高度的容器查询，只能使用块轴方向上的查询。为了让网格子元素与
<code>@container</code>
一起工作，我们需要添加一个容器元素。尽管如此，添加容器仍可让我们获得所需的效果。</p>
<h2 id="试试看">试试看</h2>
<p>您现在可以在 Chromium 中试验 <code>@container</code>
属性，方法是导航到：<a href="https://www.google.com/chrome/canary/">Chrome Canary</a> 中的
<code>chrome://flags</code> 页面并打开
<strong>#experimental-container-queries</strong> 标志。</p>
<p><img src="https://i2.wp.com/css-tricks.com/wp-content/uploads/2021/05/chrome-canary-conatiner-query-flag.png?resize=1902%2C1510&amp;ssl=1"></p>]]></content>
      <categories>
        <category>Computer Science</category>
        <category>Frontend</category>
        <category>Styling</category>
      </categories>
      <tags>
        <tag>Computer Science</tag>
        <tag>UI</tag>
        <tag>Frontend</tag>
        <tag>CSS</tag>
      </tags>
  </entry>
  <entry>
    <title>对角线分割的圆锥渐变式可变长宽比卡片</title>
    <url>/2021/06/19/computer%20science/frontend/variable-aspect-ratio-card-with-conic-gradients-meeting-along-the-diagonal/</url>
    <content><![CDATA[<blockquote>
<ul>
<li>原文地址：<a href="https://css-tricks.com/variable-aspect-ratio-card-with-conic-gradients-meeting-along-the-diagonal/">Variable
Aspect Ratio Card With Conic Gradients Meeting Along the
Diagonal</a></li>
<li>原文作者：<a href="https://css-tricks.com/author/thebabydino/">Ana
Tudor</a></li>
<li>译者：<a href="https://github.com/PassionPenguin">霜羽
Hoarfroster</a></li>
<li>校对者：<a href="https://github.com/CarlosChenN">CarlosChenN</a>、<a href="https://github.com/Usualminds">Usualminds</a></li>
</ul>
</blockquote>
<p>我最近遇到了一个有趣的问题 ——
我需要实现一个具有可变纵横比（由用户决定）的卡片，且纵横比值定义在了
<code>--ratio</code> 这个自定义属性中。具有特定纵横比的卡片是 CSS
中的一个经典问题，也是近年来变得容易解决的问题，尤其是有了 <a href="https://css-tricks.com/almanac/properties/a/aspect-ratio/"><code>aspect-ratio</code></a>
之后，但这里棘手的部分是我们需要在每张卡片沿对角线交点处分别添加一个圆锥渐变，如图：</p>
<figure>
<img src="https://i1.wp.com/css-tricks.com/wp-content/uploads/2021/05/var_cards.png?resize=799%2C571&amp;ssl=1" alt="一个 3 x 3 的正方形卡片网格，带有由圆锥渐变制成的彩色背景。渐变看起来像从卡片的对角延伸的条纹。每张卡片都以精美的字体展示 Hello Gorgeous 的名言。">
<figcaption aria-hidden="true">一个 3 x 3
的正方形卡片网格，带有由圆锥渐变制成的彩色背景。渐变看起来像从卡片的对角延伸的条纹。每张卡片都以精美的字体展示
Hello Gorgeous 的名言。</figcaption>
</figure>
<p><small>用户设置的纵横比卡片。</small></p>
<p>这里的挑战是，用 <code>linear-gradient()</code>
对沿着可变纵横比框的对角线做唐突的改变，比较容易，例如使用像“向左上角”这样的方向随纵横比变化，但
<code>conic-gradient()</code>
需要一个角度或一个百分比来表示它绕了一整圈走了多远的渐变并不好构建。</p>
<blockquote>
<p>查看 <a href="https://css-tricks.com/a-complete-guide-to-css-gradients/#h-conic-gradients">本指南</a>
以了解圆锥渐变的工作原理。</p>
</blockquote>
<h2 id="简单的解决方案">简单的解决方案</h2>
<p>CSS 规范现在包括了 <a href="https://drafts.csswg.org/css-values-4/#trig-funcs">三角函数和反三角函数</a>，它<em>可以</em>在这里帮助我们
—— 对角线与垂直线的角度是纵横比 <code>atan(var(--ratio))</code>
的反正切（矩形的左边缘和上边缘与对角线形成直角三角形，其中对角线与垂直线形成的角度的切线是宽度超过高度
—— 正是我们的纵横比）。</p>
<figure>
<img src="https://css-tricks.com/wp-content/uploads/2021/04/ang_diag.svg" alt="插图：显示一个宽度为 w 和高度为 h 的矩形，从左下角到右上角绘制一条对角线。这条对角线是直角三角形的斜边，直角三角形的斜边是矩形的左边缘和上边缘。在这个直角三角形中，斜边（原始矩形的对角线）与垂直（原始矩形的左边缘）之间的夹角的切线是左边缘 (h) 上方的上边缘 (w)。">
<figcaption aria-hidden="true">插图：显示一个宽度为 w 和高度为 h
的矩形，从左下角到右上角绘制一条对角线。这条对角线是直角三角形的斜边，直角三角形的斜边是矩形的左边缘和上边缘。在这个直角三角形中，斜边（原始矩形的对角线）与垂直（原始矩形的左边缘）之间的夹角的切线是左边缘
(h) 上方的上边缘 (w)。</figcaption>
</figure>
<p><small>对角线与垂直线（边）的夹角。</small></p>
<p>把它写成代码，我们有：</p>
<pre class="scss"><code>--ratio: 3/ 2;
aspect-ratio: var(--ratio);
--angle: atan(var(--ratio));
background:
    /* below the diagonal */
    conic-gradient(from var(--angle) at 0 100%,
        #319197, #ff7a18, #af002d  calc(90deg - var(--angle)), transparent 0%),
    /* above the diagonal */
    conic-gradient(from calc(.5turn + var(--angle)) at 100% 0,
        #ff7a18, #af002d, #319197 calc(90deg - var(--angle)));</code></pre>
<p>然而，目前没有浏览器实现三角函数和反三角函数，所以这个简单的解决方案我们也只能想想，留着未来实现。</p>
<h2 id="javascript-解决方案">JavaScript 解决方案</h2>
<p>我们当然可以使用 JavaScript 中的 <code>--ratio</code> 值来计算
<code>--angle</code>。</p>
<div class="sourceCode" id="cb2"><pre class="sourceCode javascript"><code class="sourceCode javascript"><span id="cb2-1"><a href="#cb2-1" aria-hidden="true" tabindex="-1"></a><span class="kw">let</span> angle <span class="op">=</span> <span class="bu">Math</span><span class="op">.</span><span class="fu">atan</span>(<span class="dv">1</span> <span class="op">/</span> ratio<span class="op">.</span><span class="fu">split</span>(<span class="st">'/'</span>)<span class="op">.</span><span class="fu">map</span>(c <span class="kw">=&gt;</span> <span class="op">+</span>c<span class="op">.</span><span class="fu">trim</span>())<span class="op">.</span><span class="fu">reduce</span>((a<span class="op">,</span> c) <span class="kw">=&gt;</span> c <span class="op">/</span> a<span class="op">,</span> <span class="dv">1</span>))<span class="op">;</span></span>
<span id="cb2-2"><a href="#cb2-2" aria-hidden="true" tabindex="-1"></a><span class="bu">document</span><span class="op">.</span><span class="at">body</span><span class="op">.</span><span class="at">style</span><span class="op">.</span><span class="fu">setProperty</span>(<span class="st">'--angle'</span><span class="op">,</span> <span class="vs">`</span><span class="sc">$&#123;</span><span class="op">+</span>(<span class="dv">180</span> <span class="op">*</span> angle <span class="op">/</span> <span class="bu">Math</span><span class="op">.</span><span class="cn">PI</span>)<span class="op">.</span><span class="fu">toFixed</span>(<span class="dv">2</span>)<span class="sc">&#125;</span><span class="vs">deg`</span>)</span></code></pre></div>
<p>但是如果使用 JavaScript 不行呢？如果我们真的需要一个纯 CSS
解决方案怎么办？好吧，这有点麻烦，但我们还是可以做到！</p>
<h2 id="hacky-css-解决方案">hacky CSS 解决方案</h2>
<p>这是我从 SVG 渐变的特殊性中得到的一个想法，老实说，当我<a href="https://css-tricks.com/state-css-reflections/#the-svg-gradient-problem">第一次看到这个问题</a>
时，我发现它非常令人沮丧.</p>
<p>假设我们有一个从底部到顶部的 <code>50%</code> 的渐变（因为在 CSS
中，这是一个角度为 <code>0°</code> 的渐变）。现在假设我们在 SVG
中有相同的渐变，我们将两个渐变的角度更改为相同的值。</p>
<p>在 CSS 中，这是：</p>
<div class="sourceCode" id="cb3"><pre class="sourceCode css"><code class="sourceCode css"><span id="cb3-1"><a href="#cb3-1" aria-hidden="true" tabindex="-1"></a>linear-gradient(45deg<span class="op">,</span> var(--stop-list));</span></code></pre></div>
<p>在 SVG 中，我们有：</p>
<div class="sourceCode" id="cb4"><pre class="sourceCode html"><code class="sourceCode html"><span id="cb4-1"><a href="#cb4-1" aria-hidden="true" tabindex="-1"></a><span class="kw">&lt;linearGradient</span> <span class="er">id</span><span class="ot">=</span><span class="st">'g'</span> <span class="er">y1</span><span class="ot">=</span><span class="st">'100%'</span> <span class="er">x2</span><span class="ot">=</span><span class="st">'0%'</span> <span class="er">y2</span><span class="ot">=</span><span class="st">'0%'</span></span>
<span id="cb4-2"><a href="#cb4-2" aria-hidden="true" tabindex="-1"></a><span class="ot">                gradientTransform=</span><span class="st">'rotate(45 .5 .5)'</span><span class="kw">&gt;</span></span>
<span id="cb4-3"><a href="#cb4-3" aria-hidden="true" tabindex="-1"></a>    <span class="co">&lt;!-- 渐变停止 --&gt;</span></span>
<span id="cb4-4"><a href="#cb4-4" aria-hidden="true" tabindex="-1"></a><span class="kw">&lt;/linearGradient&gt;</span></span></code></pre></div>
<p>如下所示，这两个不会给我们相同的结果。虽然 CSS 渐变实际上是在
<code>45°</code>，旋转了相同 <code>45°</code> 的 SVG
渐变沿着对角线在橙色和红色之间有明显的过渡，即使我们的盒子不是方形的，所以对角线不是在
<code>45°</code>！</p>
<figure>
<img src="https://i2.wp.com/css-tricks.com/wp-content/uploads/2021/04/css_vs_svg_grad.png?resize=999%2C556&amp;ssl=1" alt="屏幕截图：显示 CSS 渐变为 45°（左）的矩形与从下到上 SVG 渐变旋转 45°（右）的矩形。该角度可通过底部的滑块进行调节。CSS 渐变实际上是 45°，但 SVG 渐变的线垂直于矩形的对角线。">
<figcaption aria-hidden="true">屏幕截图：显示 CSS 渐变为
45°（左）的矩形与从下到上 SVG 渐变旋转
45°（右）的矩形。该角度可通过底部的滑块进行调节。CSS 渐变实际上是
45°，但 SVG 渐变的线垂直于矩形的对角线。</figcaption>
</figure>
<p><small><code>45°</code> CSS 与 SVG 渐变（<a href="https://codepen.io/thebabydino/full/pbVdPx">例子</a>）。</small></p>
<p>这是因为我们的 SVG 渐变被绘制在一个 <code>1x1</code> 方形框内，旋转了
<code>45°</code>，这使得沿着方形对角线从橙色突然变为红色。然后这个正方形被拉伸以适应矩形，这基本上改变了对角线的角度。</p>
<blockquote>
<p>请注意，只有当我们不会将 <code>linearGradient</code> 的
<code>gradientUnits</code> 属性从其默认值 <code>objectBoundingBox</code>
更改为 <code>userSpaceOnUse</code> 时，才会发生 SVG 渐变失真。</p>
</blockquote>
<h3 id="基本思路">基本思路</h3>
<p>我们不能在这里使用
SVG，因为它只有线性和径向渐变，而没有圆锥渐变。但是，我们可以将 CSS
圆锥渐变放在一个方形框中，并使用 <code>45°</code>
角使它们沿对角线相交：</p>
<div class="sourceCode" id="cb5"><pre class="sourceCode css"><code class="sourceCode css"><span id="cb5-1"><a href="#cb5-1" aria-hidden="true" tabindex="-1"></a>aspect-ratio<span class="in">: 1/ 1;</span></span>
<span id="cb5-2"><a href="#cb5-2" aria-hidden="true" tabindex="-1"></a>width<span class="in">: 19em;</span></span>
<span id="cb5-3"><a href="#cb5-3" aria-hidden="true" tabindex="-1"></a>background<span class="in">: </span></span>
<span id="cb5-4"><a href="#cb5-4" aria-hidden="true" tabindex="-1"></a>  <span class="co">/* 对角线之下 */</span></span>
<span id="cb5-5"><a href="#cb5-5" aria-hidden="true" tabindex="-1"></a>  conic-gradient(from 45deg at 0 100%<span class="op">,</span> </span>
<span id="cb5-6"><a href="#cb5-6" aria-hidden="true" tabindex="-1"></a>      #319197<span class="op">,</span> <span class="pp">#ff7a18</span><span class="op">,</span> <span class="pp">#af002d</span> 45deg<span class="op">,</span> transparent 0%)<span class="op">,</span> </span>
<span id="cb5-7"><a href="#cb5-7" aria-hidden="true" tabindex="-1"></a>  <span class="co">/* 对角线之上 */</span></span>
<span id="cb5-8"><a href="#cb5-8" aria-hidden="true" tabindex="-1"></a>  conic-gradient(from calc(<span class="fu">.5turn</span> <span class="op">+</span> 45deg) at 100% 0<span class="op">,</span> </span>
<span id="cb5-9"><a href="#cb5-9" aria-hidden="true" tabindex="-1"></a>      <span class="pp">#ff7a18</span><span class="op">,</span> <span class="pp">#af002d</span><span class="op">,</span> #319197 45deg);</span></code></pre></div>
<p>然后我们可以使用缩放 <code>transform</code> 来拉伸这个方框 —— 诀窍是
<code>3/2</code> 中的 <code>/</code> 在用作 <code>aspect-ratio</code>
值时是一个分隔符，但在 <code>calc()</code> 中被解析为除法：</p>
<div class="sourceCode" id="cb6"><pre class="sourceCode css"><code class="sourceCode css"><span id="cb6-1"><a href="#cb6-1" aria-hidden="true" tabindex="-1"></a>--ratio<span class="in">: 3/ 2;</span></span>
<span id="cb6-2"><a href="#cb6-2" aria-hidden="true" tabindex="-1"></a>transform<span class="in">: scaley(calc(1/(var(--ratio)</span>)));</span></code></pre></div>
<p>我们可以在下面嵌入的可编辑代码中更改 <code>--ratio</code>
的值来查看，这样，两个圆锥渐变总是沿对角线相交：<a href="https://codepen.io/thebabydino/pen/QWdzOVg">CodePen</a></p>
<blockquote>
<p>请注意，此演示仅适用于 <a href="https://caniuse.com/mdn-css_properties_aspect-ratio">支持
<code>aspect-ratio</code></a> 的浏览器。此属性在 Chrome 88+
中支持开箱即用，但 Firefox 仍需要在 about:config 中将
<code>layout.css.aspect-ratio.enabled</code> 标志设置为
<code>true</code>。如果你使用的是 Safari……好吧，对不起！</p>
</blockquote>
<figure>
<img src="https://i2.wp.com/css-tricks.com/wp-content/uploads/2021/04/flag_enable_firefox.png?resize=999%2C206&amp;ssl=1" alt="显示如何启用 Firefox 标志的屏幕截图。转到 about:config（在地址栏中键入该内容 —— 系统可能会询问您是否确定要在允许进入之前弄乱这些内容）。使用搜索栏查找“aspect” —— 这应该足以显示标志。将其值设置为 true。">
<figcaption aria-hidden="true">显示如何启用 Firefox 标志的屏幕截图。转到
about:config（在地址栏中键入该内容 ——
系统可能会询问您是否确定要在允许进入之前弄乱这些内容）。使用搜索栏查找“aspect”
—— 这应该足以显示标志。将其值设置为 true。</figcaption>
</figure>
<p><small>在 Firefox 中启用标志。</small></p>
<h3 id="这种方法的问题以及如何解决这些问题">这种方法的问题以及如何解决这些问题</h3>
<p>不过，缩放实际的 <code>.card</code>
元素很少是一个好主意。对于我的用例，卡片位于网格上并且在它们上设置方向比例会弄乱布局（网格单元仍然是方形的，即使我们已经缩放了其中的
<code>.card</code> 元素）。它们也有被 <code>scaley()</code>
函数奇怪地拉伸的文本内容。</p>
<figure>
<img src="https://i1.wp.com/css-tricks.com/wp-content/uploads/2021/04/issues_scaling_card_hlight_firefox.png?resize=999%2C367&amp;ssl=1" alt="屏幕截图：显示卡片元素如何垂直缩小，但它们占据的网格单元仍然保持方形，就像定向缩放之前的卡片一样。">
<figcaption aria-hidden="true">屏幕截图：显示卡片元素如何垂直缩小，但它们占据的网格单元仍然保持方形，就像定向缩放之前的卡片一样。</figcaption>
</figure>
<p><small>缩放实际卡片的问题（<a href="https://codepen.io/thebabydino/pen/BapvOvr">例子</a>）</small></p>
<p>解决方案是为实际卡片提供所需的
<code>aspect-ratio</code>，并使用绝对定位的 <code>::before</code>
放置在文本内容后面（<code>z-index: -1</code>）以创建我们的
<code>background</code>。这个伪元素获得它的 <code>.card</code> 父元素的
<code>width</code>
并且最初是正方形的。我们还设置了之前的方向缩放和圆锥梯度。请注意，由于我们绝对定位的
<code>::before</code> 与它的 <code>.card</code>
父级的上边缘顶部对齐，我们也应该相对于这条边缘缩放它（<code>transform-origin</code>
需要有一个值沿 y 轴为 <code>0</code>，而 x
轴值无关紧要，可以是任何值）。</p>
<pre class="scss"><code>body &#123;
    --ratio: 3/ 2;
    /* 其他装饰用的布局样式 */
&#125;

.card &#123;
    position: relative;
    aspect-ratio: var(--ratio);

    &amp;::before &#123;
        position: absolute;
        z-index: -1; /* 移到文字下方 */

        aspect-ratio: 1/ 1; /* 让卡片成为正方形 */
        width: 100%;

        /* 让它缩放到它所对其的顶部边缘 */
        transform-origin: 0 0;
        /* 使用 Transform 给他指定的缩放比 */
        transform: scaley(calc(1 / (var(--ratio))));
        /* 设置背景 */
        background: /* 对角线之下 */
                conic-gradient(from 45deg at 0 100%,
                        #319197, #af002d, #ff7a18 45deg, transparent 0%),
                    /* 对角线之上 */
                conic-gradient(from calc(.5turn + 45deg) at 100% 0,
                        #ff7a18, #af002d, #319197 45deg);
        content: '';
    &#125;
&#125;</code></pre>
<blockquote>
<p>请注意，在此示例中，我们已将样式从原生 CSS 修改为使用 SCSS。</p>
</blockquote>
<p>这要好得多，因为它可以在下面的嵌入中看到，它也是可编辑的，因此我们可以修改
<code>--ratio</code> 并查看当我们更改其值时一切将如何完美地适应。</p>
<p><a href="https://codepen.io/thebabydino/pen/MWJZPLe">CodePen</a>
供代码参考与效果预览。</p>
<h3 id="内边距问题">内边距问题</h3>
<p>由于我们没有在卡片上设置
<code>padding</code>，文本可能会一直延伸到边缘，甚至稍微超出边界，因为它有点倾斜。</p>
<figure>
<img src="https://i1.wp.com/css-tricks.com/wp-content/uploads/2021/04/need_for_padding.png?resize=799%2C117&amp;ssl=1" alt="屏幕截图：显示了这样一种情况，其中文本一直延伸到卡片的边缘，甚至出现了一点点，从而产生了丑陋的结果。">
<figcaption aria-hidden="true">屏幕截图：显示了这样一种情况，其中文本一直延伸到卡片的边缘，甚至出现了一点点，从而产生了丑陋的结果。</figcaption>
</figure>
<p><small>缺少 <code>padding</code> 会导致问题。</small></p>
<p>这应该不会太难修复，对吧？我们只是添加了一个
<code>padding</code>，对吧？好吧，当我们这样做时，我们发现布局失效了！</p>
<figure>
<img src="https://i1.wp.com/css-tricks.com/wp-content/uploads/2021/04/padding_issue.gif?resize=800%2C324&amp;ssl=1" alt="GIF：显示开发工具网格覆盖突出显示，虽然背景（使用缩放的伪创建）仍然具有所需的纵横比，但网格单元和其中的实际卡片更高。">
<figcaption aria-hidden="true">GIF：显示开发工具网格覆盖突出显示，虽然背景（使用缩放的伪创建）仍然具有所需的纵横比，但网格单元和其中的实际卡片更高。</figcaption>
</figure>
<p><small>添加 <code>padding</code> 会破坏布局。（<a href="https://codepen.io/thebabydino/pen/MWJZxdV">例子</a>）</small></p>
<p>这是因为我们在 <code>.card</code> 元素上设置的
<code>aspect-ratio</code> 是由 <code>box-sizing</code> 指定的
<code>.card</code> 框的纵横比。由于我们没有明确设置任何
<code>box-sizing</code> 值，它的当前值是默认值也就是
<code>content-box</code>。在这个框周围添加一个相同值的
<code>padding</code> 会给我们一个不同纵横比的
<code>padding-box</code>，让它不再与其它的元素的 <code>::before</code>
重合。</p>
<p>为了更好地理解这一点，假设我们的 <code>aspect-ratio</code> 为
<code>4/1</code>，<code>content-box</code> 的宽度为
<code>16rem</code>（<code>256px</code>）。这意味着
<code>content-box</code> 的高度是这个宽度的四分之一，计算得出结果是
<code>4rem</code> (<code>64px</code>)。所以 <code>content-box</code>
是一个 <code>16rem×4rem</code>（<code>256px×64px</code>）大的矩形。</p>
<p>现在假设我们沿着每条边添加一个
<code>1rem</code>（<code>16px</code>）的
<code>padding</code>。现在，<code>padding-box</code> 的宽度为
<code>18rem</code>（<code>288px</code>，如上面的动画 GIF 所示）——
计算得出 <code>content-box</code> 的宽度为
<code>16rem</code>（<code>256px</code>) ，再加上左侧的 <code>1rem</code>
(<code>16px</code>) 和来自 <code>padding</code> 的右侧的
<code>1rem</code>。类似地，<code>padding-box</code> 的高度为
<code>6rem</code>（<code>96px</code>）—— 计算得出
<code>content-box</code> 的高度，即
<code>4rem</code>（<code>64px</code>），再加上顶部的
<code>1rem</code>（<code>16px</code>）和底部的 <code>1rem</code>
<code>padding</code>。</p>
<p>这意味着 <code>padding-box</code> 是一个
<code>18rem×6rem</code>（<code>288px×96px</code>）的矩形，并且由于
<code>18 = 3⋅6</code>，它的纵横比为 <code>3/1</code>，与我们为
<code>aspect-ratio</code> 属性设置的 <code>4/1</code>
值不一样！同时，<code>::before</code> 伪元素的宽度等于其父元素
<code>padding-box</code> 的宽度（我们计算为 <code>18rem</code> 或
<code>288px</code>），而且它的纵横比（通过缩放设置的）仍然是
<code>4/1</code>，所以它的视觉高度计算可得是
<code>4.5rem</code>（<code>72px</code>）。这就解释了为什么用这个伪元素创建的
<code>background</code> —— 垂直缩小到一个
<code>18rem×4.5rem</code>（<code>288px×72px</code>）的矩形 ——
现在却比实际的卡片 —— 一个带有 <code>padding</code> 的
<code>18rem×6rem</code>（<code>288px× 96px</code>) 矩形 —— 要小。</p>
<p>因此，看起来解决方案非常简单 —— 我们只需要将 <code>box-sizing</code>
设置为 <code>border-box</code>
就可以解决我们的问题，因为这会在这个盒子上应用
<code>aspect-ratio</code>（与 <code>padding-box</code> 当我们没有
<code>border</code> 时一致）。</p>
<p>果然，这可以解决问题……但仅限于 Firefox！</p>
<figure>
<img src="https://i2.wp.com/css-tricks.com/wp-content/uploads/2021/04/box_sizing_fix_collage.png?resize=799%2C459&amp;ssl=1" alt="屏幕截图：显示文本如何在 Chromium 浏览器（上图）中不居中对齐，而 Firefox（下图）则正确。">
<figcaption aria-hidden="true">屏幕截图：显示文本如何在 Chromium
浏览器（上图）中不居中对齐，而 Firefox（下图）则正确。</figcaption>
</figure>
<p><small>显示 Chromium（上图）和
Firefox（下图）之间的区别。</small></p>
<p>文本应该垂直居中对齐，因为我们给了 <code>.card</code>
元素一个网格布局，并在它们上设置了
<code>place-content: center</code>。然而，这不会发生在 Chromium
浏览器中。当我们删除最后一个声明时，这变得更加明显 ——
不知何故，卡片网格中的单元格也获得了 <code>3/1</code>
的纵横比，并溢出了卡片的 <code>content-box</code>：</p>
<figure>
<img src="https://i0.wp.com/css-tricks.com/wp-content/uploads/2021/04/place_content_hint.gif?resize=800%2C300&amp;ssl=1" alt="GIF：由于某种原因，卡片内的网格单元获得设置的纵横比并溢出卡片的内容框。">
<figcaption aria-hidden="true">GIF：由于某种原因，卡片内的网格单元获得设置的纵横比并溢出卡片的内容框。</figcaption>
</figure>
<p><small>使用 <code>place-content: center</code>
与否来检查卡片的网格。（<a href="https://codepen.io/thebabydino/pen/vYgvwBJ">例子</a>）</small></p>
<p>幸运的是，这是一个 <a href="https://bugs.chromium.org/p/chromium/issues/detail?id=1166875">已知的
Chromium 错误</a>，并且<a href="https://twitter.com/bfgeek/status/1385704283643932672">应该可以在未来几个月内得到修复</a>。</p>
<p>与此同时，我们可以做的就是从 <code>.card</code> 元素中移除
<code>box-sizing</code>、<code>padding</code> 和
<code>place-content</code> 声明，移动子元素（或用 <code>::after</code>
伪元素 ——
我指的是，如果只需要一行代码，不过我们很懒惰。当然如果我们希望文本保持可以被选择，则实际的子元素应该是更好的主意）并使其成为带有
<code>padding</code> 的 <code>grid</code>。</p>
<pre class="scss"><code>.card &#123;
    /* 和以前一致，
       减去 box-sizing、place-content 和内边距定义
       最后两个我们移动的子元素 */

    &amp;__content &#123;
        place-content: center;
        padding: 1em
    &#125;
&#125;</code></pre>
<p><a href="https://codepen.io/thebabydino/pen/gOgqewy">CodePen</a>
供代码参考与效果预览。</p>
<h3 id="添加圆角">添加圆角</h3>
<p>假设我们也希望我们的卡片有圆角。由于像 <code>::before</code>
伪元素上我们用 <code>scaley</code> 这样的定向的 <code>transform</code>
创建的 <code>background</code>
<em>也会扭曲圆角</em>，因此实现这一点的最简单方法是设置一个
<code>border- radius</code> 在实际的 <code>.card</code> 元素上，并使用
<code>overflow: hidden</code> 切掉卡片之外的所有内容。</p>
<figure>
<img src="https://i0.wp.com/css-tricks.com/wp-content/uploads/2021/04/scaling_altering_corner_rad.png?resize=799%2C391&amp;ssl=1" alt="屏幕截图：左图是一个有一个完美的圆形边界半径没有缩放的元素。右图有一个不均匀缩放的元素 —— 它的边界半径不再是完美的圆形，而是被缩放扭曲了。">
<figcaption aria-hidden="true">屏幕截图：左图是一个有一个完美的圆形边界半径没有缩放的元素。右图有一个不均匀缩放的元素
—— 它的边界半径不再是完美的圆形，而是被缩放扭曲了。</figcaption>
</figure>
<p><small>非均匀缩放会扭曲圆角。（<a href="https://codepen.io/thebabydino/pen/VJQMmJ">例子</a>）</small></p>
<p>但是，如果在某些时候我们希望我们的 <code>.card</code>
的其他子代在它之外可见，这就会成为问题。所以，我们要做的是直接在创建卡片背景的
<code>::before</code> 伪元素上设置 <code>border-radius</code>，并在这个
<code>border-radius</code> 上沿 y 轴反转方向缩放
<code>transform</code>：</p>
<pre class="scss"><code>$r: .5rem;

.card &#123;
    /* 和之前一致 */

    &amp;::before &#123;
        border-radius: #&#123;$r&#125;/ calc(#&#123;$r&#125;*var(--ratio));
        transform: scaley(calc(1 / (var(--ratio))));
        /* 和之前一致 */
    &#125;
&#125;</code></pre>
<p><a href="https://codepen.io/thebabydino/pen/RwKdKMv">CodePen</a>
供代码参考与效果预览。</p>
<h2 id="最终效果">最终效果</h2>
<p>把上面的代码合并起来，这是一个交互式演示，允许通过拖动滑块来更改纵横比
—— 每次滑块值更改时，<code>--ratio</code> 变量都会更新：<a href="https://codepen.io/thebabydino/pen/XWpyowX">CodePen</a>。</p>]]></content>
      <categories>
        <category>Computer Science</category>
        <category>Frontend</category>
        <category>Styling</category>
      </categories>
      <tags>
        <tag>Computer Science</tag>
        <tag>UI</tag>
        <tag>Frontend</tag>
        <tag>CSS</tag>
      </tags>
  </entry>
  <entry>
    <title>Kotlin Multiplatform Mobile 的三模块问题</title>
    <url>/2021/06/15/computer%20science/backend/three-framework-problem-with-kotlin-multiplatform-mobile/</url>
    <content><![CDATA[<blockquote>
<ul>
<li>原文地址：<a href="https://medium.com/xorum-io/three-framework-problem-with-kotlin-multiplatform-mobile-16267c5afa53">Three-framework
problem with Kotlin Multiplatform Mobile</a></li>
<li>原文作者：<a href="https://medium.com/@yev-kanivets">Yev
Kanivets</a></li>
<li>译者：<a href="https://github.com/PassionPenguin">霜羽
Hoarfroster</a></li>
<li>校对者：<a href="https://github.com/Kimhooo">Kimhooo</a>、<a href="https://github.com/HumanBeingXenon">HumanBeingXenon</a></li>
</ul>
</blockquote>
<p>Kotlin Multiplatform Mobile
正在日趋成熟，越来越多的团队使用该平台同时在 Android 和 iOS
端上开发应用程序。但随着越来越多的项目采纳它，新的问题出现了。</p>
<p><img src="https://cdn-images-1.medium.com/max/2880/1*UXiMJrLOUiwSziIcXUsSLA.png"></p>
<p>今天，我们将讨论一个模块化应用程序中可能发生的问题。这些应用使用了多个
KMP（Kotlin 多平台）框架，它们会在 iOS 应用中被共享和使用。这些 KMP
框架都使用了来自第三方模块或 iOS 程序可见的库中的通用代码。</p>
<h2 id="实际示例">实际示例</h2>
<p>想象一个简单的应用程序，它可以跟踪所有经过身份验证的用户的最爱作家和书籍。所有的数据都存留在后端，因此我们希望使用
Kotlin Multiplatform
技术在移动应用程序中共享关系网、业务以及表示逻辑。</p>
<p>在接下来的几个月中，该应用程序的使用量会不断增长，因此我们希望从一个可扩展的架构开始开发。我们决定将代码库分为三个模块（一个模块对应一个功能），包括：<strong>认证</strong>、<strong>作者</strong>、<strong>书籍</strong>。</p>
<p><img src="https://cdn-images-1.medium.com/max/2364/1*XKTLMLfs2CTW7vPrB4BR4g.png"></p>
<p>Android 应用程序中的每个模块都由 2 个子模块表示：共享 KMP 模块和
Android 特定模块。在 iOS 中，共享的 KMP 模块则会被编译为 iOS 框架，并在
iOS 应用中重复使用，架构与 Android 应用相同（每个功能一个模块）。</p>
<p>值得一提的是，“作者”和“书”模块依赖于“身份验证”模块来服务经过身份验证的用户实体，以便后端可以返回个性化响应
—— 作家和书籍。</p>
<h2 id="实际问题">实际问题</h2>
<p>这种方法在 Android 应用程序中效果很好，但是一旦将其应用于导入了 KMP
驱动的框架的 iOS 应用程序中，就会产生繁琐的问题。</p>
<p>实际的问题是，在 iOS 模块的编译过程中，Kotlin/Native
插件包含了当前已编译的模块中全部的依赖关系，因此它是内置的。此外，为防止冲突，它会在所有显式的依赖项名的前面加上对应的库名。</p>
<p><img src="https://cdn-images-1.medium.com/max/2348/1*8Ne4eMYHJS2OZ4uYtv0QFw.png"></p>
<p>这对于单个模块或一组独立模块非常方便。但是，一旦两个或多个模块使用了
iOS 应用程序可见的相同依赖项，你就复制出了多个版本的相同依赖项。</p>
<p>在我们的示例中，来自作者模块的用户实体和来自图书模块的用户实体在
Android 应用程序中将是相同的，但在 iOS
应用程序中将是两个不同的实体，即使它们是相同的。</p>
<p>换句话说，我们在 iOS
应用程序中会有两个截然不同的身份验证模块，而且它们之间不共享任何内容，毫无关联
—— 不共享类、状态等一切东西！</p>
<h2 id="实际解决方案">实际解决方案</h2>
<p>我有幸与一个 KMP 团队探讨了这个问题，他们推荐的解决方案（至少这是 6
个月前的最优解）是使用 Umbrella 模块，它包含了所有共享的 KMP
模块。这是一个会被导入到 iOS 应用程序中的框架。</p>
<p><img src="https://cdn-images-1.medium.com/max/2348/1*ornbj_vtf61Bak0WaKkgBw.png"></p>
<p>这显然是一个缺点，破坏了 iOS 端的模块性。但是，只要 iOS 模块与
Android 模块相匹配，我们便不太可能在错误的地方使用来自 Umbrella
框架的越界类。</p>
<p>良好的架构在这里也有很大帮助。例如使用 Clean 架构，仅会暴露共享 KMP
模块的最顶层。在我们的例子中，它是一个表示层，很难在目标模块之外的任何地方使用。</p>
<h2 id="结论">结论</h2>
<p>没有完美的技术或解决方案。你应该做好处理问题的准备，因为它们会在开发的全过程中出现，特别如果是你够胆使用
alpha 或 beta 版本的软件。</p>
<p>Kotlin Multiplatform
使得你可以使用模块化架构，不过还是有一些重要的制约。在我们规划共有部分的实现及其在
iOS 应用程序中的使用时，必须考虑这些制约。</p>]]></content>
      <categories>
        <category>Computer Science</category>
        <category>Backend</category>
        <category>Kotlin</category>
      </categories>
      <tags>
        <tag>Computer Science</tag>
        <tag>Backend</tag>
        <tag>Kotlin</tag>
        <tag>Kotlin Multiplatform</tag>
      </tags>
  </entry>
  <entry>
    <title>如何提出有用的反馈</title>
    <url>/2021/05/25/computer%20science/frontend/How-to-give-helpful-feedback/</url>
    <content><![CDATA[<blockquote>
<ul>
<li>原文地址：<a href="https://github.com/tc39/how-we-work/blob/master/feedback.md">How
to give helpful feedback</a></li>
<li>原文作者：<a href="https://github.com/tc39/how-we-work">Ecma
TC39</a></li>
<li>译者：<a href="https://github.com/PassionPenguin">霜羽
Hoarfroster</a></li>
<li>校对者：<a href="https://github.com/KimYangOfCat">Kim Yang</a>、<a href="https://github.com/Miigon">Miigon</a></li>
</ul>
</blockquote>
<p>不管是借助在线渠道或是在 TC39
会议中出席，我们始终会就提案提供反馈。以下的这些建议能够确保您的反馈意见是可行的和有帮助的。</p>
<ul>
<li>在所有提案反馈中遵循 TC39 <a href="https://tc39.es/code-of-conduct/">行为准则</a></li>
<li>保持反馈的礼貌性、建设性和可行性。
<ul>
<li>当您发现问题时，请尽可能详细地解释该问题。提出一个解决方案可能会有所帮助，但有时过于轻易地制定并坚持自己的方案则会适得其反。
<ul>
<li>尝试说明提案为何给具体使用场景带来问题、提案为何无法完全满足使用场景，或者为何不同或经过修改的提案对具体使用场景而言效果很好。</li>
<li>如果您有修改的想法，请解释修改动机，但请记住，不同的约束条件之间，以及不同使用场景之间是一个取舍求平衡的关系。</li>
</ul></li>
<li>具体说明哪些约束被打破了，比如说向后不兼容、提案的目标之一无效或无法被满足、抽象可能以不可预知的方式泄漏状态、不遵守对象模型或由于语义改变而阻止未来的工作。请尝试弄清楚如何解决被打破的约束以及约束为何重要的原因。不同的观点可能产生冲突的约束，需要加以验证和权衡。</li>
<li>从一个角度来看，缺乏可取性本身并不会引起问题。请尝试具体解释此问题如何影响提案本身或语言其他部分的可用性。保持反馈的可行性，以便讨论如何提高整个语言的可取性和凝聚力。</li>
<li>尝试以具有可行动性的方式表达任何有关约束的反馈，不要让其阻止某些特定的设计选择。说明由该选择引起的具体问题，而不是解释为什么提案不应该作出某个设计选择。以说明具体影响的方式提出问题，更有可能在提案推进者同意需要采取行动时直接表达。</li>
<li>我们鼓励大家讨论替代方案，但请保持灵活的思路，尤其是在一些表面上的问题（“琐碎定律”，即人们往往会对琐碎的事情报以轻微的关注度）上。命名这样的事情是很难的
——
可能需要付出巨大的努力（甚至是无法克服的努力）来研究每种可能的替代方案，或者可能存在其他目前仍然不那么显而易见的约束。最终，即使不可能找到一个毫无争议的名称，我们仍将继续前进并做出具体选择，从而使所有人都受益。解释您所面临的问题以及替代方案与问题之间的联系，比单纯对某种替代方案的口头支持更有价值。</li>
</ul></li>
<li>如果您不了解提案的动机，那么一个好的策略是提出一个问题，而不是假设它的设计不当。
<ul>
<li>根据要解决的问题来锚定您的探索性问题可以帮助您自己或原始作者（或两者兼而有之）提供激励性的清晰说明。过去的说明中，包括但不限于提供其他语言的问题空间示例、深入讨论提案的性能影响、讨论与语言中现有语义的一致性等等。</li>
<li>认识到语言要在各种各样的场景中使用，单单一个人对提案的反感还不足以作为有价值的反馈。在提出贡献前，了解提案如何使其他人受益，并围绕提案本身（而不是个人对其的期望或个人使用情况）提出反馈。</li>
<li>有许多的决定是基于某些限制而作出的，这些限制在仅查看公开问题的情况下并不那么显而易见。当遇到这些决定时，若关于决定动机的文档不清晰或缺失，可考虑请求决定者澄清动机。</li>
</ul></li>
<li>我们都是从不同的角度出发，并且对该领域都仅有部分的理解。无论你的立足点是什么，都可以提出你的反馈。例如，可以无需用正式语言来修饰您的反馈，除非您的思维过程与之相符。</li>
<li>尽可能在 TC39 会议之前就提案的 GitHub 仓库中的问题提供反馈。</li>
<li>在发布新主题之前，搜索涵盖某个主题的现有问题。</li>
<li>提出正面的反馈、赞同先前批评意见的反馈以及新的批评意见都很有帮助。</li>
<li>除 GitHub 以及会议讨论以外的渠道（例如 Twitter 的 Topic
中）中给出的反馈更可能会被遗忘。</li>
<li>在会议中，请使用排队举手工具，而不要在演示中途打断。有关详细信息，请参见
<a href="https://github.com/tc39/how-we-work/blob/master/how-to-participate-in-meetings.md">how-to-participate-in-meetings.md</a>
一文。</li>
</ul>
<p>提案小组负责仔细考查并总结所有反馈，在考虑了以上所有要求之后向委员会提出建议。提案发起人不一定总能在表达意见的所有人之间取得绝对共识，但他们应尽力认真聆听并做出平衡的判断。</p>]]></content>
      <categories>
        <category>Computer Science</category>
        <category>Frontend</category>
        <category>tc39</category>
      </categories>
      <tags>
        <tag>Computer Science</tag>
        <tag>JavaScript</tag>
        <tag>Frontend</tag>
        <tag>tc39</tag>
      </tags>
  </entry>
  <entry>
    <title>16px 或更大的字体大小可以避免 iOS 的表单缩放问题</title>
    <url>/2021/05/24/computer%20science/frontend/16px-or-larger-text-prevents-ios-form-zoom/</url>
    <content><![CDATA[<blockquote>
<ul>
<li>原文地址：<a href="https://css-tricks.com/16px-or-larger-text-prevents-ios-form-zoom/">16px
or Larger Text Prevents iOS Form Zoom</a></li>
<li>原文作者：<a href="https://css-tricks.com/author/chriscoyier/">Chris
Coyier</a></li>
<li>译者：<a href="https://github.com/PassionPenguin">霜羽
Hoarfroster</a></li>
<li>校对者：<a href="https://github.com/KimYangOfCat">Kim Yang</a>、<a href="https://github.com/Chorer">Chorer</a></li>
</ul>
</blockquote>
<p><a href="https://twitter.com/joshwcomeau/status/1379782931116351490?s=12">“今天我已经学到的”
—— 我从乔什·科莫（Josh W. Comeau）的推特中学习到</a>
的东西真的是太棒了！！！如果 <code>&lt;input&gt;</code> 的
<code>font-size</code> 被设定为 <code>16px</code> 或更大，那么 iOS 上的
Safari 将正常聚焦到输入表单中。但是，一旦 <code>font-size</code>
等于或小于 <code>15px</code>，视图窗口就会放大并聚焦到该
<code>&lt;input&gt;</code>（或许是因为苹果认为字体太小，因此它会放大以帮助你更清楚地看到自己在做什么）。这个设计是用来增强可访问性的，如果你不想要，请确保
<code>&lt;input&gt;</code> 的字体足够大。</p>
<p>如果你想自己试试，请打开<a href="https://codepen.io/joshwcomeau/pen/VwPMPZo">乔什的
<code>codepen</code></a>。</p>
<p>总的来说，我还挺喜欢这个功能。它可以帮助人们了解自己在做什么，并且也表了态
—— 苹果不建议开发者在 UI
中使用过小的字体。让人略感遗憾的是（我在这里并没责怪任何人），在不同字体大小的可读性上，并非所有字体都是一样的。比如说，下图是字体大小为
16px 的 <em>San Francisco</em> 与 <em>Caveat</em> 的对比：</p>
<p><img src="https://i2.wp.com/css-tricks.com/wp-content/uploads/2021/04/Screen-Shot-2021-04-30-at-9.11.55-AM.png?resize=558％2C344&amp;ssl=1"></p>
<p><small>左边是 <em>San Francisco</em>，右边是 <em>Caveat</em>。即使
<code>font-size</code> 相同，<em>Caveat</em>
在外观上看起来也要小得多。</small></p>
<p>你可以在 Safari 浏览器中打开<a href="https://cdpn.io/chriscoyier/debug/MWJxXWz">调试模式</a> ，查看<a href="https://codepen.io/chriscoyier/pen/MWJxXWz">该示例</a>，并更改字体大小以查看会自动放大聚焦与不会放大聚焦的具体表现。</p>
<hr>
<blockquote>
<p>🔥 将表单输入设置为 1rem（16px）或更大的字体，以防止在点击时 iOS
Safari 浏览器自动放大并聚焦到 <code>input</code> 元素上。</p>
<p>从用户体验的角度来看有很大的不同！</p>
<p><img src="https://github.com/PassionPenguin/picgo-database/blob/main/16px-or-larger-text-prevents-ios-form-zoom-EyX2MSaXMAExyQA.gif?raw=true"></p>
<p>—— Josh W. Comeau <span class="citation" data-cites="JoshWComeau">@JoshWComeau</span> 9:07, Apr 7, 2021</p>
<hr>
<p>当 Safari 放大时，它似乎希望让该 input 控件的实际字体大小为
16px。在下面两张图中，用户在输入文本时看到的字体大小其实都是
16px。因此更改后，输入文本的阅读体验实际上并没有变得更差！！</p>
<p>另外，人们始终可以根据需要手动放大。</p>
<p><img src="https://pbs.twimg.com/media/EyX5HAlXEAErIj6?format=png&amp;name=small"></p>
<p><img src="https://pbs.twimg.com/media/EyX5IBWWUAA8Sis?format=png&amp;name=small"></p>
<p>—— Josh W. Comeau <span class="citation" data-cites="JoshWComeau">@JoshWComeau</span> 9:07, Apr 7, 2021</p>
</blockquote>]]></content>
      <categories>
        <category>Computer Science</category>
        <category>Frontend</category>
        <category>Styling</category>
      </categories>
      <tags>
        <tag>Computer Science</tag>
        <tag>UI</tag>
        <tag>Frontend</tag>
        <tag>CSS</tag>
      </tags>
  </entry>
  <entry>
    <title>都 2021 年了，你还不知道这 10 个 CSS 功能？</title>
    <url>/2021/05/23/computer%20science/frontend/new-css-features-2021/</url>
    <content><![CDATA[<blockquote>
<ul>
<li>原文地址：<a href="https://torquemag.io/2021/03/new-css-features/">10 New CSS
Features You Might Not Know About (2021 Edition)</a></li>
<li>原文作者：<a href="https://torquemag.io/author/NSchaferhoff1234/">Nick
Schäferhoff</a></li>
<li>译者：<a href="https://github.com/PassionPenguin">霜羽
Hoarfroster</a></li>
<li>校对者：<a href="https://github.com/Baddyo">Baddyo</a>、<a href="https://github.com/nia3y">nia3y</a></li>
</ul>
</blockquote>
<p>没有 CSS，现代 Web
应用程序将无法实现。标记语言（译者注：这是样式表语言……）负责让网站有良好的视觉体验、令人愉悦的布局，并且每个元素都各居其位。但是，你知道新的
CSS 特性一直在出现吗？</p>
<p>多年来，CSS 已经超越了单纯设置背景色、边框、文本样式、边距和<a href="https://torquemag.io/2018/06/css-box-model/"><strong>盒模型</strong></a>的范畴。现代的
CSS 现在能够提供过去需要 JavaScript 或其他解决方法才能实现的功能！</p>
<p>为了庆祝 CSS 的发展，在这篇文章中，我们想看看 CSS 在 2021
年推出的一些令人惊奇而大家可能还不知道的功能（译者注：准确来说，2021
年比较有用但又不热门的功能）。我们将重点介绍 <a href="https://torquemag.io/2017/10/web-designer-vs-web-developer-difference/"><strong>Web
设计师和开发者</strong></a>可以使用的现代 CSS
的出色功能，讨论一下用例和浏览器支持，并为大家提供一个简单的示例。</p>
<p>让我们开始吧！</p>
<h2 id="新的-css-功能现在-css-可以做什么">新的 CSS 功能：现在 CSS
可以做什么</h2>
<p>这是 CSS 如今具有的一些令人惊奇的功能。</p>
<h3 id="自定义属性与变量">自定义属性与变量</h3>
<p>译者注：这里的自定义属性（Custom
Properties）和我们所说的变量是一个东西，见 <a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/--*">MDN Web
Doc</a></p>
<p>自定义属性基本上允许我们定义 CSS
属性的替代品以用于我们的设计。一个例子就能让你理解为什么说这个功能有用：</p>
<p>通常，在构建主题时，我们会选择一种<a href="https://websitesetup.org/website-color-schemes/"><strong>配色方案</strong></a>，然后在必要时声明这些颜色。</p>
<div class="sourceCode" id="cb1"><pre class="sourceCode css"><code class="sourceCode css"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a>a &#123;</span>
<span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a>    <span class="kw">color</span>: <span class="cn">#cd2653</span><span class="op">;</span></span>
<span id="cb1-3"><a href="#cb1-3" aria-hidden="true" tabindex="-1"></a>&#125;</span>
<span id="cb1-4"><a href="#cb1-4" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-5"><a href="#cb1-5" aria-hidden="true" tabindex="-1"></a><span class="fu">.social-icons</span> a &#123;</span>
<span id="cb1-6"><a href="#cb1-6" aria-hidden="true" tabindex="-1"></a>    <span class="kw">background</span>: <span class="cn">#cd2653</span><span class="op">;</span></span>
<span id="cb1-7"><a href="#cb1-7" aria-hidden="true" tabindex="-1"></a>&#125;</span>
<span id="cb1-8"><a href="#cb1-8" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-9"><a href="#cb1-9" aria-hidden="true" tabindex="-1"></a><span class="fu">.wp-block-button.is-style-outline</span> &#123;</span>
<span id="cb1-10"><a href="#cb1-10" aria-hidden="true" tabindex="-1"></a>    <span class="kw">color</span>: <span class="cn">#cd2653</span><span class="op">;</span></span>
<span id="cb1-11"><a href="#cb1-11" aria-hidden="true" tabindex="-1"></a>&#125;</span></code></pre></div>
<p>这种方法的问题是，如果我们想要更改一种颜色，则必须在每一处使用了这个颜色的地方做出对应的修改。尽管<a href="https://torquemag.io/2015/12/17-best-code-editors-wordpress-developers-users/"><strong>代码编辑器</strong></a>可以通过搜索和替换轻松地做到这一点，但这仍然很烦人。尤其是如果我们只是想进行快速测试，并且必须再次撤消所有操作。</p>
<h4 id="更好的解决方案">更好的解决方案</h4>
<p>自定义属性就解决了这个问题。在它们的帮助下，我们可以轻松地将刚才所说的配色分配给一个变量，然后每次使用该颜色时，只需将其作为
CSS 属性输入即可，如下所示：</p>
<div class="sourceCode" id="cb2"><pre class="sourceCode css"><code class="sourceCode css"><span id="cb2-1"><a href="#cb2-1" aria-hidden="true" tabindex="-1"></a><span class="in">:root</span> &#123;</span>
<span id="cb2-2"><a href="#cb2-2" aria-hidden="true" tabindex="-1"></a>    <span class="va">--global--color-primary</span>: <span class="cn">#28303d</span><span class="op">;</span></span>
<span id="cb2-3"><a href="#cb2-3" aria-hidden="true" tabindex="-1"></a>&#125;</span>
<span id="cb2-4"><a href="#cb2-4" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb2-5"><a href="#cb2-5" aria-hidden="true" tabindex="-1"></a>a &#123;</span>
<span id="cb2-6"><a href="#cb2-6" aria-hidden="true" tabindex="-1"></a>    <span class="kw">color</span>: <span class="fu">var(</span><span class="va">--global--color-primary</span><span class="fu">)</span><span class="op">;</span></span>
<span id="cb2-7"><a href="#cb2-7" aria-hidden="true" tabindex="-1"></a>&#125;</span>
<span id="cb2-8"><a href="#cb2-8" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb2-9"><a href="#cb2-9" aria-hidden="true" tabindex="-1"></a><span class="fu">.social-icons</span> a &#123;</span>
<span id="cb2-10"><a href="#cb2-10" aria-hidden="true" tabindex="-1"></a>    <span class="kw">background</span>: <span class="fu">var(</span><span class="va">--global--color-primary</span><span class="fu">)</span><span class="op">;</span></span>
<span id="cb2-11"><a href="#cb2-11" aria-hidden="true" tabindex="-1"></a>&#125;</span></code></pre></div>
<p>这样，每当我们想要对配色进行更改时，只需要在一个地方进行更改即可。太酷了吧？过去，我们还需要使用
<a href="https://torquemag.io/2017/06/start-using-sass-wordpress-npm-scripts/">Sass</a>
之类的预处理器来使用变量，而现在它是 CSS 的原生功能。</p>
<p>正如您在上面看到的，自定义属性也非常易于使用。在 <code>:root</code>
选择器下的文档开始处定义变量（请注意，变量前面应使用双连字符
<code>--</code>，这是将变量称为自定义属性的原因，它们也区分大小写！）。之后我们就可以通过
<code>var()</code> 函数在整个文档中使用它们。</p>
<p>如果要更改变量，只需更改 <code>:root</code> 下面的声明就可以了。</p>
<p>此 CSS 功能的兼容性如何，<a href="https://caniuse.com/css-variables"><strong>浏览器支持</strong></a>非常好：</p>
<figure>
<img src="https://s3-torquehhvm-wpengine.netdna-ssl.com/uploads/2021/02/css-variables-custom-properties-browser-support-1024x376.jpg" alt="Can I Use">
<figcaption aria-hidden="true">Can I Use</figcaption>
</figure>
<h3 id="supports"><span class="citation" data-cites="supports">@supports</span></h3>
<p>接下来，有一个类似于媒体查询的 CSS
规则。不过我们不是用它基于屏幕大小或设备类型编写特定的样式，而是根据用户浏览器支持的
CSS 属性和值，应用特定的样式。</p>
<p>这有什么用？</p>
<p>正如你将在本文中看到的那样，并非所有的浏览器和设备都支持所有 CSS
功能。尽管我们通常可以使用优雅降级来处理此问题，但在某些情况下，如果我们不专门包括对最新的技术的支持，则使用这些技术可能会严重破坏我们的网站的样式结构。</p>
<p>此外，我们还可以使用 <code>@supports</code>
为支持特定功能的更现代的浏览器添加额外的功能或样式（这就是为什么使用的查询
<code>@supports</code> 也称为“功能查询”的原因）。</p>
<h4 id="如何使用功能查询">如何使用功能查询</h4>
<p>如果您熟悉媒体查询，则使用支持检查将非常容易。使用方法如下：</p>
<div class="sourceCode" id="cb3"><pre class="sourceCode css"><code class="sourceCode css"><span id="cb3-1"><a href="#cb3-1" aria-hidden="true" tabindex="-1"></a><span class="im">@supports</span> (<span class="kw">display</span>: <span class="dv">grid</span>) &#123;</span>
<span id="cb3-2"><a href="#cb3-2" aria-hidden="true" tabindex="-1"></a>    <span class="fu">.site-content</span> &#123;</span>
<span id="cb3-3"><a href="#cb3-3" aria-hidden="true" tabindex="-1"></a>        <span class="kw">display</span>: grid<span class="op">;</span></span>
<span id="cb3-4"><a href="#cb3-4" aria-hidden="true" tabindex="-1"></a>    &#125;</span>
<span id="cb3-5"><a href="#cb3-5" aria-hidden="true" tabindex="-1"></a>&#125;</span></code></pre></div>
<p>如你所见，其实不过就是规则的声明后跟要在方括号中检查的属性或属性 —
值对，再加上我们平时用的 CSS
声明用于说明满足条件时要应用哪些样式规则。</p>
<p>上面的示例指出，如果浏览器支持 CSS
网格功能（稍后将对此进行详细介绍），则应用 <code>display: grid;</code>
样式到 <code>.site-content</code> 的元素。</p>
<p>同样重要的是要注意 <code>@supports</code> 支持使用运算符
<code>not</code>、<code>and</code> 和
<code>or</code>（也可以结合使用）以创建更具体的规则，例如对不支持该特定功能的浏览器的优雅降级：</p>
<div class="sourceCode" id="cb4"><pre class="sourceCode css"><code class="sourceCode css"><span id="cb4-1"><a href="#cb4-1" aria-hidden="true" tabindex="-1"></a><span class="im">@supports</span> <span class="kw">not</span> (<span class="kw">display</span>: <span class="dv">grid</span>) &#123;</span>
<span id="cb4-2"><a href="#cb4-2" aria-hidden="true" tabindex="-1"></a>    <span class="fu">.site-content</span> &#123;</span>
<span id="cb4-3"><a href="#cb4-3" aria-hidden="true" tabindex="-1"></a>        <span class="kw">float</span>: <span class="dv">left</span><span class="op">;</span></span>
<span id="cb4-4"><a href="#cb4-4" aria-hidden="true" tabindex="-1"></a>    &#125;</span>
<span id="cb4-5"><a href="#cb4-5" aria-hidden="true" tabindex="-1"></a>&#125;</span></code></pre></div>
<p>为了能够正常使用 <code>@supports</code>
功能，你需要知道哪些浏览器支持它（我知道，这是一种元数据）。好消息是<strong><a href="https://caniuse.com/css-featurequeries">所有的现代浏览器都支持</a></strong>。</p>
<figure>
<img src="https://s3-torquehhvm-wpengine.netdna-ssl.com/uploads/2021/02/css-feature-queries-browser-support-1024x368.jpg" alt="Can I Use">
<figcaption aria-hidden="true">Can I Use</figcaption>
</figure>
<p>但是，由于这些查询的目的是启用或禁用旧版浏览器无法处理的功能，因此请确保正确编写它们。即如果要使用功能查询，请为支持功能查询的浏览器创建功能查询条件。让浏览器以它无法理解的方式忽略某些内容是没有用的。</p>
<h3 id="flexbox-间隙">Flexbox 间隙</h3>
<p>Flexbox 是另一种 CSS 布局模块，而我们<a href="https://torquemag.io/2020/02/flexbox-tutorial/"><strong>已经讨论过它</strong></a>。长期以来，Flexbox
的缺点是它不支持间隙，我说的是，不支持定义行和列之间的间隔。</p>
<p>幸运的是，浏览器对此 CSS 功能的支持正在改善。现在，我们可以开始使用
<a href="https://caniuse.com/flexbox-gap"><code>gap</code></a>、<a href="https://caniuse.com/?search=row-gap"><code>row-gap</code></a> 和
<a href="https://caniuse.com/?search=column-gap"><code>column-gap</code></a>
属性，在网格布局、Flexbox 布局和 Multi-Column 布局中创建间隙。</p>
<p>这是一个在 Flexbox 中创建间隙的快速示例：</p>
<pre><code>.flex-gap-test &#123;
    display: inline-flex;
    flex-wrap: wrap;
    gap: 16px;
&#125;

&lt;div class="flex-gap-test"&gt;
    &lt;div&gt;1&lt;/div&gt;
    &lt;div&gt;2&lt;/div&gt;
    &lt;div&gt;3&lt;/div&gt;
    &lt;div&gt;4&lt;/div&gt;
    &lt;div&gt;5&lt;/div&gt;
    &lt;div&gt;6&lt;/div&gt;
&lt;/div&gt;</code></pre>
<p>这就是效果：</p>
<figure>
<img src="https://s3-torquehhvm-wpengine.netdna-ssl.com/uploads/2021/02/new-css-features-flexbox-gaps-example.jpg" alt="Result">
<figcaption aria-hidden="true">Result</figcaption>
</figure>
<p>尽管我们可以通过 <code>margin</code>
实现相同的布局，但是与简单地声明间隙大小相比，它需要更多的标记和解决方法。</p>
<h3 id="内容可见性">内容可见性</h3>
<p><code>content-visibility</code> 是 CSS
中一个非常酷的新功能，能够有效<a href="https://torquemag.io/2015/08/ways-to-speed-up-wordpress-decrease-page-load-time/">提高网站性能</a>。它基本上像<a href="https://torquemag.io/2018/01/lazy-load-wordpress/">延迟加载</a>一样工作，而且不仅适用于图像，还适用于任何
HTML 元素。我们可以使用它来实现网站的懒加载。</p>
<p>使用也超级容易。只需将其应用于我们选择的元素，如下所示：</p>
<div class="sourceCode" id="cb6"><pre class="sourceCode css"><code class="sourceCode css"><span id="cb6-1"><a href="#cb6-1" aria-hidden="true" tabindex="-1"></a><span class="fu">.content-below-fold</span> &#123;</span>
<span id="cb6-2"><a href="#cb6-2" aria-hidden="true" tabindex="-1"></a>    content-visibility: <span class="bu">auto</span><span class="op">;</span></span>
<span id="cb6-3"><a href="#cb6-3" aria-hidden="true" tabindex="-1"></a>&#125;</span></code></pre></div>
<p><code>content-visibility</code> 支持三个值。默认情况下为
<code>visible</code>，此时元素将照常加载。我们可以将其设置为
<code>hidden</code>，即无论元素是否可见都不会呈现该元素。设置为
<code>auto</code>
时，则会跳过可见区域之外的元素，然后在它们出现在屏幕上时才开始进行渲染。</p>
<p>这可是很酷的东西，对不对？</p>
<p>在这种情况下可能也很重要的一件事是考虑一下
<code>contain-intrinsic-size</code>。由于设置为
<code>content-visibility: hidden;</code>
的元素的大小实际上为零，因此我们可以将理论高度和宽度应用于隐藏的元素，以便浏览器可以从一开始就将其考虑在内，而不是在渲染元素时考虑。这样，我们可以避免在滚动过程中布局被突然改变。</p>
<p><a href="(https://caniuse.com/css-content-visibility)">浏览器支持方面</a>，<a href="https://caniuse.com/css-content-visibility"><code>content-visibility</code></a>
仍然有些差劲，不过正在朝着那个方向前进着，<a href="https://caniuse.com/mdn-css_properties_contain-intrinsic-size"><code>contain-intrinsic-size</code></a>
同理。</p>
<figure>
<img src="https://s3-torquehhvm-wpengine.netdna-ssl.com/uploads/2021/02/css-content-visibility-browser-support-1024x370.jpg" alt="Can I Use">
<figcaption aria-hidden="true">Can I Use</figcaption>
</figure>
<p>我预计一旦它被更广泛地采用，它将成为加速渲染过程的最有效工具之一。</p>
<h3 id="过渡变换动画">过渡，变换，动画</h3>
<p>在过去，如果我们想在网站上移动某些内容，通常必须求助于
JavaScript（对于 MySpace 一代的用户来说则需要求助 GIF
动画）。但是你可能不知道的是，CSS
早就能够做到这一点。实现这种目标的三种主要方式是：</p>
<ul>
<li><a href="https://www.w3schools.com/css/css3_transitions.asp"><code>transition</code></a>
——
支持平滑地从一个属性值更改为另一个属性值（例如，悬停效果），而不是突然更改。</li>
<li><a href="https://www.w3schools.com/css/css3_2dtransforms.asp"><code>transform</code></a>
—— 支持在 <a href="https://www.w3schools.com/css/css3_2dtransforms.asp"><strong>2D</strong></a>
和 <a href="https://www.w3schools.com/css/css3_3dtransforms.asp"><strong>3D</strong></a>
空间中移动、旋转和缩放元素。</li>
<li><a href="https://www.w3schools.com/css/css3_animations.asp"><code>animation</code></a>
—— 在 CSS 中设置简单或复杂的动画，并配置它们的运行方式和运行时间。</li>
</ul>
<p>自然，在这里我们没有空间详细讨论所有这三个部分。如果您想了解更多信息，请务必查看上面的链接。但是，让我们为每个示例做一些快速练习示例，以便您对可能的效果有一个印象。</p>
<h4 id="css-transition">CSS Transition</h4>
<p>这是 CSS 过渡的快速示例：</p>
<div class="sourceCode" id="cb7"><pre class="sourceCode css"><code class="sourceCode css"><span id="cb7-1"><a href="#cb7-1" aria-hidden="true" tabindex="-1"></a>div &#123;</span>
<span id="cb7-2"><a href="#cb7-2" aria-hidden="true" tabindex="-1"></a>    <span class="kw">width</span>: <span class="dv">100</span><span class="dt">px</span><span class="op">;</span></span>
<span id="cb7-3"><a href="#cb7-3" aria-hidden="true" tabindex="-1"></a>    <span class="kw">height</span>: <span class="dv">100</span><span class="dt">px</span><span class="op">;</span></span>
<span id="cb7-4"><a href="#cb7-4" aria-hidden="true" tabindex="-1"></a>    <span class="kw">transition</span>: height <span class="dv">3</span><span class="dt">s</span><span class="op">;</span></span>
<span id="cb7-5"><a href="#cb7-5" aria-hidden="true" tabindex="-1"></a>&#125;</span>
<span id="cb7-6"><a href="#cb7-6" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb7-7"><a href="#cb7-7" aria-hidden="true" tabindex="-1"></a>div<span class="in">:hover</span> &#123;</span>
<span id="cb7-8"><a href="#cb7-8" aria-hidden="true" tabindex="-1"></a>    <span class="kw">height</span>: <span class="dv">500</span><span class="dt">px</span><span class="op">;</span></span>
<span id="cb7-9"><a href="#cb7-9" aria-hidden="true" tabindex="-1"></a>&#125;</span></code></pre></div>
<p>当有人将鼠标悬停在 <code>div</code>
元素上时，上述的代码会将这个元素高度在三秒内增加到
<code>500px</code>。</p>
<h4 id="css-transform">CSS Transform</h4>
<p>以下是 CSS 转换的示例 ——
当有人将鼠标悬停在元素上方时，它将使元素顺时针旋转 30 度：</p>
<div class="sourceCode" id="cb8"><pre class="sourceCode css"><code class="sourceCode css"><span id="cb8-1"><a href="#cb8-1" aria-hidden="true" tabindex="-1"></a>div<span class="in">:hover</span> &#123;</span>
<span id="cb8-2"><a href="#cb8-2" aria-hidden="true" tabindex="-1"></a>    <span class="kw">transform</span>: <span class="fu">rotate(</span><span class="dv">30</span><span class="dt">deg</span><span class="fu">)</span><span class="op">;</span></span>
<span id="cb8-3"><a href="#cb8-3" aria-hidden="true" tabindex="-1"></a>&#125;</span></code></pre></div>
<h4 id="css-animation">CSS Animation</h4>
<p>最后，是展示 CSS 动画使用方式的简短代码段：</p>
<div class="sourceCode" id="cb9"><pre class="sourceCode css"><code class="sourceCode css"><span id="cb9-1"><a href="#cb9-1" aria-hidden="true" tabindex="-1"></a><span class="im">@keyframes</span> color-change &#123;</span>
<span id="cb9-2"><a href="#cb9-2" aria-hidden="true" tabindex="-1"></a>    <span class="dv">from</span> &#123;</span>
<span id="cb9-3"><a href="#cb9-3" aria-hidden="true" tabindex="-1"></a>        <span class="kw">background-color</span>: <span class="cn">blue</span><span class="op">;</span></span>
<span id="cb9-4"><a href="#cb9-4" aria-hidden="true" tabindex="-1"></a>    &#125;</span>
<span id="cb9-5"><a href="#cb9-5" aria-hidden="true" tabindex="-1"></a>    <span class="dv">to</span> &#123;</span>
<span id="cb9-6"><a href="#cb9-6" aria-hidden="true" tabindex="-1"></a>        <span class="kw">background-color</span>: <span class="cn">yellow</span><span class="op">;</span></span>
<span id="cb9-7"><a href="#cb9-7" aria-hidden="true" tabindex="-1"></a>    &#125;</span>
<span id="cb9-8"><a href="#cb9-8" aria-hidden="true" tabindex="-1"></a>&#125;</span>
<span id="cb9-9"><a href="#cb9-9" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb9-10"><a href="#cb9-10" aria-hidden="true" tabindex="-1"></a>div<span class="in">:hover</span> &#123;</span>
<span id="cb9-11"><a href="#cb9-11" aria-hidden="true" tabindex="-1"></a>    <span class="kw">animation-name</span>: color-change<span class="op">;</span></span>
<span id="cb9-12"><a href="#cb9-12" aria-hidden="true" tabindex="-1"></a>    <span class="kw">animation-duration</span>: <span class="dv">3</span><span class="dt">s</span><span class="op">;</span></span>
<span id="cb9-13"><a href="#cb9-13" aria-hidden="true" tabindex="-1"></a>&#125;</span></code></pre></div>
<p>请注意我们使用 <code>@keyframes</code>
命名动画并定义其功能，然后我们需要使用 <code>animation-name</code>
将该动画应用于元素。<code>animation-duration</code>
则控制完成所需的时间，然后还有不少其他类似的属性～</p>
<p>如果你想尝试所有这些方式，那么有个好消息，浏览器对它们的支持非常好（请参见
<a href="https://caniuse.com/css-transitions"><strong>Transition</strong></a>、<a href="https://caniuse.com/transforms2d"><strong>2D
Transform</strong></a>、<a href="https://caniuse.com/transforms3d"><strong>3D
Transform</strong></a> 和 <a href="https://caniuse.com/css-animation"><strong>Animation</strong></a>）。因此，没有任何障碍可以让您随意玩转
CSS 过渡、转换和动画。</p>
<h3 id="滚动捕捉">滚动捕捉</h3>
<p>滚动捕捉让我们可以选择将用户的视口锁定到站点的某些部分或元素。对于创建很酷的过渡效果并在向下滚动页面帮助用户专注于最重要的页面元素的场景而言，这个功能非常有用。我们可以<a href="https://codepen.io/tutsplus/pen/qpJYaK">在这里</a>找到一个简单的演示。</p>
<p>这种效果在移动设备的应用程序中很明显，但是，通过滚动捕捉，我们也可以将其带到网站上。</p>
<p>在最基本的情况上用法也相对简单。我们只需将滚动捕捉的类型应用于容器并定义其子对象应捕捉到的位置。</p>
<div class="sourceCode" id="cb10"><pre class="sourceCode css"><code class="sourceCode css"><span id="cb10-1"><a href="#cb10-1" aria-hidden="true" tabindex="-1"></a><span class="fu">.container</span> &#123;</span>
<span id="cb10-2"><a href="#cb10-2" aria-hidden="true" tabindex="-1"></a>    scroll-snap-type: y mandatory<span class="op">;</span></span>
<span id="cb10-3"><a href="#cb10-3" aria-hidden="true" tabindex="-1"></a>&#125;</span>
<span id="cb10-4"><a href="#cb10-4" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb10-5"><a href="#cb10-5" aria-hidden="true" tabindex="-1"></a><span class="fu">.container</span> div &#123;</span>
<span id="cb10-6"><a href="#cb10-6" aria-hidden="true" tabindex="-1"></a>    scroll-snap-align: start<span class="op">;</span></span>
<span id="cb10-7"><a href="#cb10-7" aria-hidden="true" tabindex="-1"></a>&#125;</span></code></pre></div>
<p>当然还有更多有关它的使用特色。如果你想了解它，CSS Tricks
已经有了一篇<a href="https://css-tricks.com/practical-css-scroll-snapping/"><strong>很完美的文章</strong></a>了。</p>
<p>然后是<a href="https://caniuse.com/css-snappoints">浏览器的兼容性</a>，这是相当不错的。</p>
<figure>
<img src="https://s3-torquehhvm-wpengine.netdna-ssl.com/uploads/2021/02/css-scroll-snap-browser-support-1024x378.jpg" alt="Can I Use">
<figcaption aria-hidden="true">Can I Use</figcaption>
</figure>
<p>但是请注意，<code>scroll-snap</code>
属性之间的支持会有些许不同。因此，请确保检查你的特定用例。</p>
<h3 id="is-和-where">:is 和 :where</h3>
<p>你可能不知道的新 CSS 功能列表中的最后一个条目是 <code>:is</code> 和
<code>:where</code> 伪类，它们允许我们通过缩短 CSS 选择器列表来减少 CSS
样式中的重复代码。</p>
<p>例如：</p>
<div class="sourceCode" id="cb11"><pre class="sourceCode css"><code class="sourceCode css"><span id="cb11-1"><a href="#cb11-1" aria-hidden="true" tabindex="-1"></a><span class="fu">.main</span> a<span class="in">:hover</span><span class="op">,</span></span>
<span id="cb11-2"><a href="#cb11-2" aria-hidden="true" tabindex="-1"></a><span class="fu">.sidebar</span> a<span class="in">:hover</span><span class="op">,</span></span>
<span id="cb11-3"><a href="#cb11-3" aria-hidden="true" tabindex="-1"></a><span class="fu">.site-footer</span> a<span class="in">:hover</span> &#123;</span>
<span id="cb11-4"><a href="#cb11-4" aria-hidden="true" tabindex="-1"></a>    <span class="co">/* 样式 */</span></span>
<span id="cb11-5"><a href="#cb11-5" aria-hidden="true" tabindex="-1"></a>&#125;</span></code></pre></div>
<p>还有这个：</p>
<div class="sourceCode" id="cb12"><pre class="sourceCode css"><code class="sourceCode css"><span id="cb12-1"><a href="#cb12-1" aria-hidden="true" tabindex="-1"></a><span class="in">:is(.main, .sidebar, .site-footer)</span> a<span class="in">:hover</span> &#123;</span>
<span id="cb12-2"><a href="#cb12-2" aria-hidden="true" tabindex="-1"></a>    <span class="co">/* 样式 */</span></span>
<span id="cb12-3"><a href="#cb12-3" aria-hidden="true" tabindex="-1"></a>&#125;</span></code></pre></div>
<p>同理 <code>:where</code>:</p>
<div class="sourceCode" id="cb13"><pre class="sourceCode css"><code class="sourceCode css"><span id="cb13-1"><a href="#cb13-1" aria-hidden="true" tabindex="-1"></a><span class="in">:where(.main, .sidebar, .site-footer)</span> a<span class="in">:hover</span> &#123;</span>
<span id="cb13-2"><a href="#cb13-2" aria-hidden="true" tabindex="-1"></a>    <span class="co">/* 样式 */</span></span>
<span id="cb13-3"><a href="#cb13-3" aria-hidden="true" tabindex="-1"></a>&#125;</span></code></pre></div>
<p>如果包含的样式标记相同，那又会有什么区别？区别在于 <code>:is</code>
更加具体。它采用括号中最具体元素的针对性级别。与此相反，<code>:where</code>
的针对性始终为零。因此更容易按照案例进行覆盖。</p>
<p>浏览器支持方面 <a href="https://caniuse.com/mdn-css_selectors_is">:is</a> 和 <a href="https://caniuse.com/mdn-css_selectors_where">:where</a>
仍然是有些不完全，但正在逐渐变好起来。因此我们随时开始尝试它们。</p>
<h2 id="还有其他值得一看的-css-新功能吗">还有其他值得一看的 CSS
新功能吗？</h2>
<p>像所有其他 Web 技术一样，CSS 也在不断发展。这意味着总会有新的 CSS
功能出现，有新的东西让我们尝试。</p>
<p>本文我们主要讲了一些我们可能没注意到的现代 CSS
所具有的功能，并且还有更多的类似功能等待着我们的发掘。——
如果你还有其他想要分享的，请告诉我们，我们会很开心的。除此之外，祝你编程愉快！</p>
<p><em>你最喜欢的现代 CSS
功能是什么？在下面的评论部分中分享它！</em></p>]]></content>
      <categories>
        <category>Computer Science</category>
        <category>Frontend</category>
        <category>Styling</category>
      </categories>
      <tags>
        <tag>Computer Science</tag>
        <tag>UI</tag>
        <tag>Frontend</tag>
        <tag>CSS</tag>
      </tags>
  </entry>
  <entry>
    <title>JavaScript 类型化数组</title>
    <url>/2021/05/18/computer%20science/frontend/javascript-typed-arrays/</url>
    <content><![CDATA[<blockquote>
<ul>
<li>原文地址：<a href="https://blog.bitsrc.io/javascript-typed-arrays-ccfa5ae8838d">JavaScript
Typed Arrays</a></li>
<li>原文作者：<a href="https://medium.com/@mahdhirezvi">Mahdhi
Rezvi</a></li>
<li>译者：<a href="https://github.com/PassionPenguin">霜羽
Hoarfroster</a></li>
<li>校对者：<a href="https://github.com/KimYangOfCat">KimYang</a>、<a href="https://github.com/Kimhooo">Kimhooo</a></li>
</ul>
</blockquote>
<figure>
<img src="https://cdn-images-1.medium.com/max/10992/0*u7yLuqz5vOYfScJQ" alt="图源 Pierre Bamin，出自 Unsplash">
<figcaption aria-hidden="true">图源 <a href="https://unsplash.com/@bamin?utm_source=juejin&amp;utm_medium=referral">Pierre
Bamin</a>，出自 <a href="https://unsplash.com?utm_source=juejin&amp;utm_medium=referral">Unsplash</a></figcaption>
</figure>
<p>在 JavaScript
这门语言中，我们所有人都必须对数组足够熟悉，知晓数组本质上是动态的，并且可以容纳任何
JavaScript 对象。不过，如果你曾经使用过类似于 C
语言这样的其他语言，你应该知道其数组本质上不是动态的。而且你只能在该数组中存储特定的数据类型，毕竟从性能角度来看，这可以确保数组效率更高。但数组的动态化与存储信息类型的多样化其实并没有使
JavaScript 数组效率低下。在 JavaScript 引擎优化的帮助下，JavaScript
中数组的执行速度其实非常快。</p>
<p>随着 Web 应用程序功能越来越强大，我们开始需要让 Web
应用程序处理和操纵原始二进制数据。JavaScript
数组无法处理这些原始二进制数据，也因此我们引入了 JavaScript
的类型化数组。</p>
<h2 id="类型化数组">类型化数组</h2>
<p>类型化数组是与数组非常相似的对象，但是它提供了一种将原始二进制数据写入内存缓冲区的机制。所有主要浏览器均很好地支持此功能，并且
ES6 已将其集成到 JavaScript 核心框架中，也可以访问诸如
<code>map()</code>、<code>filter()</code> 等 Array
方法。我强烈建议你浏览本文结尾处提到的资源，以更深入了解类型化数组。</p>
<h3 id="组成">组成</h3>
<p>类型化数组由两个主要部分组成，<code>Buffer</code> 和
<code>View</code>。</p>
<h4 id="缓冲区">缓冲区</h4>
<p><code>Buffer</code> 是 <code>ArrayBuffer</code>
类型的对象，表示一个数据块。此原始二进制数据块无法被单独访问或修改。你可能好奇，无法访问或修改的数据对象的能有什么用途。实际上视图是缓冲区的读写接口。</p>
<h4 id="视图">视图</h4>
<p><code>View</code> 是一个对象，允许你访问和修改存储在
<code>ArrayBuffer</code> 中的原始二进制内容。一般来说有两种视图。</p>
<h4 id="typedarray-对象的实例"><code>TypedArray</code> 对象的实例</h4>
<p>这些类型的对象与普通数组非常相似，但是仅存储单一类型的数值数据。诸如
<code>Int8</code>、<code>Uint8</code>、<code>Int16</code>、<code>Float32</code>
就是类型化数组的数据类型。类型中的数字表示为数据类型分配的位数。例如，<code>Int8</code>
表示 8 位的整数。</p>
<blockquote>
<p>你可以阅读 <a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Typed_arrays#%E7%B1%BB%E5%9E%8B%E6%95%B0%E7%BB%84%E8%A7%86%E5%9B%BE">参考文档</a>
来详细了解类型化数组的数据类型。</p>
</blockquote>
<h4 id="dataview-对象的实例"><code>DataView</code> 对象的实例</h4>
<p><code>DataView</code> 是一个低级接口，提供了一个 <code>getter</code>
/ <code>setter</code> API
来读取和写入任意数据到缓冲区。这很大程度上方便了我们的开发，尤其是需要在单个类型化数组中处理多种数据类型时。</p>
<p>使用 <code>DataView</code> 的另一个好处是，它可以让你控制数据的字节序
——
类型化数组使用平台的字节序。当然如果你的程序运行在本地，这将不是问题，因为你的设备将使用与输入数组相同的字节序。在大多数情况下，你的类型化数组将为低端字节序，因为英特尔采取的是小端字节序。由于英特尔在计算机处理器中非常普遍，因此大多数时候不会出现问题。但是，如果将小端字节序编码的数据传输到使用大端字节序编码的设备，则会导致读取时候的错误，最终可能导致数据的丢失。由于
<code>DataView</code>
使你可以控制字节序的方向，因此你可以在必要时使用它。</p>
<h2 id="是什么使它们与普通数组不同">是什么使它们与普通数组不同</h2>
<p>如前所述，普通的 JavaScript 数组已通过 JavaScript
引擎进行了优化，你没必要为了提升性能而使用类型化数组，因为这不会给你带来太多升级。但是有些特性使类型化数组不同于普通数组，这才可能是你选择它们的原因。</p>
<ul>
<li>让你能够处理原始二进制数据</li>
<li>由于它们处理的数据类型是有限的，因此与普通数组相比，你的引擎更易优化类型化数组，因为普通数组的优化其实是一个非常复杂的过程。</li>
<li>不能保证普通数组永远都能得到优化，因为你的引擎可能因各种原因决定不进行优化。</li>
</ul>
<h2 id="在-web-开发中的用途">在 Web 开发中的用途</h2>
<h3 id="xmlhttprequest-api">XMLHttpRequest API</h3>
<p>你可以根据你的响应类型以 <code>ArrayBuffer</code>
形式接收数据响应。</p>
<div class="sourceCode" id="cb1"><pre class="sourceCode js"><code class="sourceCode javascript"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a><span class="kw">const</span> xhr <span class="op">=</span> <span class="kw">new</span> <span class="bu">XMLHttpRequest</span>()<span class="op">;</span></span>
<span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a>xhr<span class="op">.</span><span class="fu">open</span>(<span class="st">'GET'</span><span class="op">,</span> exampleUrl)<span class="op">;</span></span>
<span id="cb1-3"><a href="#cb1-3" aria-hidden="true" tabindex="-1"></a>xhr<span class="op">.</span><span class="at">responseType</span> <span class="op">=</span> <span class="st">'arraybuffer'</span><span class="op">;</span></span>
<span id="cb1-4"><a href="#cb1-4" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-5"><a href="#cb1-5" aria-hidden="true" tabindex="-1"></a>xhr<span class="op">.</span><span class="at">onload</span> <span class="op">=</span> <span class="kw">function</span> () &#123;</span>
<span id="cb1-6"><a href="#cb1-6" aria-hidden="true" tabindex="-1"></a>    <span class="kw">const</span> arrayBuffer <span class="op">=</span> xhr<span class="op">.</span><span class="at">response</span><span class="op">;</span></span>
<span id="cb1-7"><a href="#cb1-7" aria-hidden="true" tabindex="-1"></a>    <span class="co">// 处理数据</span></span>
<span id="cb1-8"><a href="#cb1-8" aria-hidden="true" tabindex="-1"></a>&#125;<span class="op">;</span></span>
<span id="cb1-9"><a href="#cb1-9" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-10"><a href="#cb1-10" aria-hidden="true" tabindex="-1"></a>xhr<span class="op">.</span><span class="fu">send</span>()<span class="op">;</span></span></code></pre></div>
<h3 id="fetch-api">Fetch API</h3>
<p>类似于 XMLHttpRequest API，Fetch API 还允许你在
<code>ArrayBuffer</code> 中接收响应。你只需在 fetch API 响应中使用
<code>arrayBuffer()</code> 方法，你就能够收到一个使用
<code>ArrayBuffer</code> 解析的 <code>Promise</code>。</p>
<div class="sourceCode" id="cb2"><pre class="sourceCode js"><code class="sourceCode javascript"><span id="cb2-1"><a href="#cb2-1" aria-hidden="true" tabindex="-1"></a><span class="fu">fetch</span>(url)</span>
<span id="cb2-2"><a href="#cb2-2" aria-hidden="true" tabindex="-1"></a><span class="op">.</span><span class="fu">then</span>(response <span class="kw">=&gt;</span> response<span class="op">.</span><span class="fu">arrayBuffer</span>())</span>
<span id="cb2-3"><a href="#cb2-3" aria-hidden="true" tabindex="-1"></a><span class="op">.</span><span class="fu">then</span>(arrayBuffer <span class="kw">=&gt;</span> &#123;</span>
<span id="cb2-4"><a href="#cb2-4" aria-hidden="true" tabindex="-1"></a>   <span class="co">// 处理数据</span></span>
<span id="cb2-5"><a href="#cb2-5" aria-hidden="true" tabindex="-1"></a>&#125;)<span class="op">;</span></span></code></pre></div>
<h3 id="html-canvas">HTML Canvas</h3>
<p>HTML5 Canvas 元素使你可以渲染动态的 2D
形状和位图图像。该元素仅充当图形的容器，而图形则是在 JavaScript
的帮助下绘制。</p>
<p>canvas 的 2D Context 使你可以将位图数据作为
<code>Uint8ClampedArray</code> 的实例进行检索。让我们看一下 Axel
博士提供的示例代码：</p>
<div class="sourceCode" id="cb3"><pre class="sourceCode js"><code class="sourceCode javascript"><span id="cb3-1"><a href="#cb3-1" aria-hidden="true" tabindex="-1"></a><span class="kw">const</span> canvas <span class="op">=</span> <span class="bu">document</span><span class="op">.</span><span class="fu">getElementById</span>(<span class="st">'my_canvas'</span>)<span class="op">;</span></span>
<span id="cb3-2"><a href="#cb3-2" aria-hidden="true" tabindex="-1"></a><span class="kw">const</span> context <span class="op">=</span> canvas<span class="op">.</span><span class="fu">getContext</span>(<span class="st">'2d'</span>)<span class="op">;</span></span>
<span id="cb3-3"><a href="#cb3-3" aria-hidden="true" tabindex="-1"></a><span class="kw">const</span> imageData <span class="op">=</span> context<span class="op">.</span><span class="fu">getImageData</span>(<span class="dv">0</span><span class="op">,</span> <span class="dv">0</span><span class="op">,</span> canvas<span class="op">.</span><span class="at">width</span><span class="op">,</span> canvas<span class="op">.</span><span class="at">height</span>)<span class="op">;</span></span>
<span id="cb3-4"><a href="#cb3-4" aria-hidden="true" tabindex="-1"></a><span class="kw">const</span> uint8ClampedArray <span class="op">=</span> imageData<span class="op">.</span><span class="at">data</span><span class="op">;</span></span></code></pre></div>
<h3 id="webgl">WebGL</h3>
<p>WebGL 允许你渲染高性能的交互式 3D 和 2D
图形。它在很大程度上依赖于类型化数组，因为它会处理原始像素数据以在画布上输出必要的图形。</p>
<p>你可以在 <a href="https://blog.bitsrc.io/understanding-webgl-51ab81ccb48c">这篇文章</a>
中阅读有关 WebGL 基础的更多信息。</p>
<h3 id="web-socket">Web Socket</h3>
<p>Web Socket 允许你以 Blob
或数组缓冲区的形式发送和接收原始二进制数据。</p>
<div class="sourceCode" id="cb4"><pre class="sourceCode js"><code class="sourceCode javascript"><span id="cb4-1"><a href="#cb4-1" aria-hidden="true" tabindex="-1"></a><span class="kw">const</span> socket <span class="op">=</span> <span class="kw">new</span> <span class="bu">WebSocket</span>(<span class="st">"ws://localhost:8080"</span>)<span class="op">;</span></span>
<span id="cb4-2"><a href="#cb4-2" aria-hidden="true" tabindex="-1"></a>socket<span class="op">.</span><span class="at">binaryType</span> <span class="op">=</span> <span class="st">"arraybuffer"</span><span class="op">;</span></span>
<span id="cb4-3"><a href="#cb4-3" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb4-4"><a href="#cb4-4" aria-hidden="true" tabindex="-1"></a><span class="co">// 监听 message</span></span>
<span id="cb4-5"><a href="#cb4-5" aria-hidden="true" tabindex="-1"></a>socket<span class="op">.</span><span class="fu">addEventListener</span>(<span class="st">"message"</span><span class="op">,</span> <span class="kw">function</span> (<span class="bu">event</span>) &#123;</span>
<span id="cb4-6"><a href="#cb4-6" aria-hidden="true" tabindex="-1"></a>    <span class="kw">const</span> view <span class="op">=</span> <span class="kw">new</span> <span class="bu">DataView</span>(<span class="bu">event</span><span class="op">.</span><span class="at">data</span>)<span class="op">;</span></span>
<span id="cb4-7"><a href="#cb4-7" aria-hidden="true" tabindex="-1"></a>    <span class="co">// 处理接收数据</span></span>
<span id="cb4-8"><a href="#cb4-8" aria-hidden="true" tabindex="-1"></a>&#125;)<span class="op">;</span></span>
<span id="cb4-9"><a href="#cb4-9" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb4-10"><a href="#cb4-10" aria-hidden="true" tabindex="-1"></a><span class="co">// 发送二进制数据</span></span>
<span id="cb4-11"><a href="#cb4-11" aria-hidden="true" tabindex="-1"></a>socket<span class="op">.</span><span class="fu">addEventListener</span>(<span class="st">'open'</span><span class="op">,</span> <span class="kw">function</span> (<span class="bu">event</span>) &#123;</span>
<span id="cb4-12"><a href="#cb4-12" aria-hidden="true" tabindex="-1"></a>    <span class="kw">const</span> typedArray <span class="op">=</span> <span class="kw">new</span> <span class="bu">Uint16Array</span>(<span class="dv">7</span>)<span class="op">;</span></span>
<span id="cb4-13"><a href="#cb4-13" aria-hidden="true" tabindex="-1"></a>    socket<span class="op">.</span><span class="fu">send</span>(typedArray<span class="op">.</span><span class="at">buffer</span>)<span class="op">;</span></span>
<span id="cb4-14"><a href="#cb4-14" aria-hidden="true" tabindex="-1"></a>&#125;)<span class="op">;</span></span></code></pre></div>
<p>尽管初学者可能不需要详细了解类型化数组，但是当你进入中高级 JavaScript
开发的时候，它们是必不可少的。这主要是因为你可能要开发需要使用类型化数组的更复杂的应用程序。</p>
<p>要深入了解类型化数组，请浏览下面附带的资源链接。</p>
<p>感谢你的阅读，祝你编程愉快！！</p>
<h2 id="资源">资源</h2>
<ul>
<li><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Typed_arrays">JavaScript
类型化数组 - MDN 文档</a></li>
<li><a href="https://exploringjs.com/es6/ch_typed-arrays.html">Exploring
JS by Dr.&nbsp;Axel</a></li>
</ul>]]></content>
      <categories>
        <category>Computer Science</category>
        <category>Frontend</category>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>Computer Science</tag>
        <tag>JavaScript</tag>
        <tag>Frontend</tag>
      </tags>
  </entry>
  <entry>
    <title>快停止在 CSS 中使用像素单位</title>
    <url>/2021/05/18/computer%20science/frontend/stop-using-the-pixel-unit-in-css/</url>
    <content><![CDATA[<blockquote>
<ul>
<li>原文地址：<a href="https://betterprogramming.pub/stop-using-the-pixel-unit-in-css-8b8788a1301f">Stop
Using the Pixel Unit in CSS</a></li>
<li>原文作者：<a href="https://medium.com/@dioxmio">Jose Granja</a></li>
<li>译者：<a href="https://github.com/PassionPenguin">霜羽
Hoarfroster</a></li>
<li>校对者：<a href="https://github.com/KimYangOfCat">KimYangOfCat</a>，<a href="https://github.com/Kimhooo">Kimhooo</a>、<a href="https://github.com/Li-saltair">Li-saltair</a></li>
</ul>
</blockquote>
<figure>
<img src="https://cdn-images-1.medium.com/max/12450/0*5eX8OB4YTWwqM1RV" alt="图源 Alexander Andrews，出自 Unsplash.">
<figcaption aria-hidden="true">图源 <a href="https://unsplash.com/@alex_andrews?utm_source=medium&amp;utm_medium=referral">Alexander
Andrews</a>，出自 <a href="https://unsplash.com?utm_source=medium&amp;utm_medium=referral">Unsplash</a>.</figcaption>
</figure>
<p>为什么 Web 开发者如此盲目地使用 px
单位？这只是一个坏习惯吗？是因为缺乏其他单位的知识吗？也许是因为设计团队的模拟依赖于
px 和 pt？目前我们也无法明白为什么像素是大多数团队当前的首选单位。</p>
<p>也许，主要原因是它看起来简单方便。凭直觉，我们认为我们了解此单位，因为它看起来好像在映射像素屏幕。</p>
<p>px
单位可以使你轻松上手，但是后来却变成了一个问题。在本文中，我将介绍避免像素单位的最有力的三个原因。我们将讨论其使用方面的问题以及一些可能的解决方案。</p>
<h2 id="它们只是光学参考单位">1. 它们只是光学参考单位</h2>
<p>如今像素值不再基于硬件像素，会在许多屏幕和分辨率下不生效，而且看起来都非常不同。它们只是基于光学单位，因此，我们发现对该单元更直观的部分不再存在。</p>
<p>硬件每天都在变化，像素密度也在增长。我们不能依靠这样的假设，即设备的像素密度为
96dpi —— 这不再是一个稳定的参考值。</p>
<blockquote>
<p>“请注意，如果锚点单位是像素单位，则物理单位可能与它们的物理尺寸不匹配。或者，如果锚点单元是物理单元，则像素单元可能不会映射到设备像素的总数。</p>
<p>请注意，像素单位和物理单位的定义与CSS的早期版本不同。特别是，在 CSS
的早期版本中，像素单位和物理单位不是以固定比率关联的：物理单位始终与物理尺寸相关联，而像素单位会发生变化以最紧密地匹配参考像素。（进行此更改是因为现有内容过多取决于
96dpi 的假设，而打破该假设会破坏内容。）” —— <a href="https://www.w3.org/TR/2011/WD-css3-values-20110906/">W3C</a></p>
</blockquote>
<p>总之，这意味着像素不可靠。由于其不可靠的特性，可能无法实现像素完美的布局。</p>
<p>让我们看一下每英寸点数不同的像素等效于 1mm 的像素：</p>
<figure>
<img src="https://cdn-images-1.medium.com/max/2000/1*xgFl-SLMot8k2KR0HEn4mQ.png" alt="Pixelcalculator：MacBook 平均 dpi 转换 —— 毫米 to 像素">
<figcaption aria-hidden="true">Pixelcalculator：MacBook 平均 dpi 转换 ——
毫米 to 像素</figcaption>
</figure>
<figure>
<img src="https://cdn-images-1.medium.com/max/2000/1*qBVYc5fFUBNnzgTMJYHtoQ.png" alt="Pixelcalculator：iPhone 平均 dpi 转换 —— 毫米 to 像素">
<figcaption aria-hidden="true">Pixelcalculator：iPhone 平均 dpi 转换 ——
毫米 to 像素</figcaption>
</figure>
<p>可以区分屏幕上像素的日子已经一去不复返了。我们已经习惯了这种限制，这是一个我们需要放弃的想法。随着时间的流逝，“像素”一词的含义已失去其含义，现在该停止在我们的
CSS 代码中将其设为默认单位了。</p>
<h2 id="它们是绝对的值">2. 它们是绝对的值</h2>
<p>看着上面的问题，为什么会发生？为什么我们的布局无法达到像素完美？因为像素单位是绝对的。这意味着它将无法适应我们浏览器的像素比率、分辨率、大小等。</p>
<p>如果要满足广大受众的需求，绝对的值通常不是很有用。px
是唯一的绝对单位吗？不，CSS 中还有另外六个绝对单位，如下图：</p>
<figure>
<img src="https://cdn-images-1.medium.com/max/2000/1*aXVUdpRMgeFox_6uHkR_SA.png" alt="CSS 支持的绝对单位列表">
<figcaption aria-hidden="true">CSS 支持的绝对单位列表</figcaption>
</figure>
<p>这意味着，如果你使用这些单位，网站的访问着就会看到各种各样的布局，而让你的页面进行任何可能显示的分辨率进行适配都会是不合理的。</p>
<p>我们如何解决这个问题？我们如何才能使布局具有响应性？——
使用“相对单位”。那到底是什么？</p>
<blockquote>
<p>“相对长度单位是相对于其他单位的，也许是父元素字体的大小或视口的大小。”
— <a href="https://developer.mozilla.org/zh-CN/docs/Learn/CSS/Building_blocks/Values_and_units">MDN
Web 文档</a></p>
</blockquote>
<p>让我们检查一下我们可以使用的相对单位：</p>
<figure>
<img src="https://cdn-images-1.medium.com/max/2000/1*4AZByHrtdOwFI_bDnfMKmQ.png" alt="CSS 中可用的相关相对单位列表">
<figcaption aria-hidden="true">CSS 中可用的相关相对单位列表</figcaption>
</figure>
<p>你会看到相对单位的列表大于绝对单位列表。为什么会有那么多的相对单位？</p>
<p>这些中的每一个都有一些更适合使用的特定方案。有很多方案可选是个好消息，因为我们知道我们可以涵盖很多不同的用例。这就是为什么了解它们每个单位变得很重要。</p>
<p>假设我们要显示一列每行最多 20 个字符的内容。</p>
<p>大多数的开发者会想干什么？通过字符的字体、字体、大小和粗细来测量字符的平均长度，并将其乘以
20。</p>
<p>该方法会导致我们需要一个硬编码的像素值，也意味着，如果字体大小更改，你将不得不再次进行计算。这种方法只是一种近似，无法在所有设备上始终如一地工作。</p>
<p>有什么更好的解决方案？使用 <code>ch</code> 单位。你可以将目标列宽基于
<code>ch</code> 单位的倍数</p>
<p>让我们看一下代码，以更好地理解这一点：</p>
<div class="sourceCode" id="cb1"><pre class="sourceCode html"><code class="sourceCode html"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a><span class="dt">&lt;!DOCTYPE </span>html<span class="dt">&gt;</span></span>
<span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a><span class="kw">&lt;html&gt;</span></span>
<span id="cb1-3"><a href="#cb1-3" aria-hidden="true" tabindex="-1"></a><span class="kw">&lt;head&gt;</span></span>
<span id="cb1-4"><a href="#cb1-4" aria-hidden="true" tabindex="-1"></a>    <span class="kw">&lt;title&gt;</span>Units Playground<span class="kw">&lt;/title&gt;</span></span>
<span id="cb1-5"><a href="#cb1-5" aria-hidden="true" tabindex="-1"></a>    <span class="kw">&lt;meta</span> <span class="er">charset</span><span class="ot">=</span><span class="st">"UTF-8"</span><span class="kw">/&gt;</span></span>
<span id="cb1-6"><a href="#cb1-6" aria-hidden="true" tabindex="-1"></a><span class="kw">&lt;/head&gt;</span></span>
<span id="cb1-7"><a href="#cb1-7" aria-hidden="true" tabindex="-1"></a><span class="kw">&lt;body&gt;</span></span>
<span id="cb1-8"><a href="#cb1-8" aria-hidden="true" tabindex="-1"></a><span class="kw">&lt;style</span> <span class="er">type</span><span class="ot">=</span><span class="st">"text/css"</span><span class="kw">&gt;</span></span>
<span id="cb1-9"><a href="#cb1-9" aria-hidden="true" tabindex="-1"></a>    body &#123;</span>
<span id="cb1-10"><a href="#cb1-10" aria-hidden="true" tabindex="-1"></a>        <span class="kw">color</span>: <span class="cn">white</span><span class="op">;</span></span>
<span id="cb1-11"><a href="#cb1-11" aria-hidden="true" tabindex="-1"></a>        <span class="kw">text-align</span>: <span class="dv">center</span><span class="op">;</span></span>
<span id="cb1-12"><a href="#cb1-12" aria-hidden="true" tabindex="-1"></a>        <span class="kw">box-sizing</span>: <span class="dv">content-box</span><span class="op">;</span></span>
<span id="cb1-13"><a href="#cb1-13" aria-hidden="true" tabindex="-1"></a>        <span class="kw">margin</span>: <span class="dv">1</span><span class="dt">em</span><span class="op">;</span></span>
<span id="cb1-14"><a href="#cb1-14" aria-hidden="true" tabindex="-1"></a>    &#125;</span>
<span id="cb1-15"><a href="#cb1-15" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-16"><a href="#cb1-16" aria-hidden="true" tabindex="-1"></a>    <span class="pp">#container</span> &#123;</span>
<span id="cb1-17"><a href="#cb1-17" aria-hidden="true" tabindex="-1"></a>        <span class="kw">color</span>: <span class="cn">white</span><span class="op">;</span></span>
<span id="cb1-18"><a href="#cb1-18" aria-hidden="true" tabindex="-1"></a>        <span class="kw">display</span>: grid<span class="op">;</span></span>
<span id="cb1-19"><a href="#cb1-19" aria-hidden="true" tabindex="-1"></a>        <span class="kw">gap</span>: <span class="dv">1</span><span class="dt">rem</span><span class="op">;</span></span>
<span id="cb1-20"><a href="#cb1-20" aria-hidden="true" tabindex="-1"></a>        <span class="kw">grid-template-columns</span>: max-content <span class="dv">1</span>fr<span class="op">;</span></span>
<span id="cb1-21"><a href="#cb1-21" aria-hidden="true" tabindex="-1"></a>    &#125;</span>
<span id="cb1-22"><a href="#cb1-22" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-23"><a href="#cb1-23" aria-hidden="true" tabindex="-1"></a>    <span class="pp">#content</span> &#123;</span>
<span id="cb1-24"><a href="#cb1-24" aria-hidden="true" tabindex="-1"></a>        <span class="kw">padding</span>: <span class="dv">1</span><span class="dt">em</span><span class="op">;</span></span>
<span id="cb1-25"><a href="#cb1-25" aria-hidden="true" tabindex="-1"></a>        <span class="kw">margin</span>: <span class="dv">0</span><span class="op">;</span></span>
<span id="cb1-26"><a href="#cb1-26" aria-hidden="true" tabindex="-1"></a>        <span class="kw">background-color</span>: <span class="cn">#5B2E48</span><span class="op">;</span></span>
<span id="cb1-27"><a href="#cb1-27" aria-hidden="true" tabindex="-1"></a>        <span class="kw">color</span>: <span class="cn">white</span><span class="op">;</span></span>
<span id="cb1-28"><a href="#cb1-28" aria-hidden="true" tabindex="-1"></a>        <span class="kw">max-width</span>: <span class="dv">20</span><span class="dt">ch</span><span class="op">;</span></span>
<span id="cb1-29"><a href="#cb1-29" aria-hidden="true" tabindex="-1"></a>    &#125;</span>
<span id="cb1-30"><a href="#cb1-30" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-31"><a href="#cb1-31" aria-hidden="true" tabindex="-1"></a>    <span class="pp">#photo</span> &#123;</span>
<span id="cb1-32"><a href="#cb1-32" aria-hidden="true" tabindex="-1"></a>        <span class="kw">background-color</span>: <span class="cn">#CEB992</span><span class="op">;</span></span>
<span id="cb1-33"><a href="#cb1-33" aria-hidden="true" tabindex="-1"></a>    &#125;</span>
<span id="cb1-34"><a href="#cb1-34" aria-hidden="true" tabindex="-1"></a><span class="kw">&lt;/style&gt;</span></span>
<span id="cb1-35"><a href="#cb1-35" aria-hidden="true" tabindex="-1"></a><span class="kw">&lt;div</span> <span class="er">id</span><span class="ot">=</span><span class="st">"container"</span><span class="kw">&gt;</span></span>
<span id="cb1-36"><a href="#cb1-36" aria-hidden="true" tabindex="-1"></a>    <span class="kw">&lt;p</span> <span class="er">id</span><span class="ot">=</span><span class="st">"content"</span><span class="kw">&gt;</span></span>
<span id="cb1-37"><a href="#cb1-37" aria-hidden="true" tabindex="-1"></a>        Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum</span>
<span id="cb1-38"><a href="#cb1-38" aria-hidden="true" tabindex="-1"></a>    <span class="kw">&lt;/p&gt;</span></span>
<span id="cb1-39"><a href="#cb1-39" aria-hidden="true" tabindex="-1"></a>    <span class="kw">&lt;div</span> <span class="er">id</span><span class="ot">=</span><span class="st">"photo"</span><span class="kw">&gt;</span></span>
<span id="cb1-40"><a href="#cb1-40" aria-hidden="true" tabindex="-1"></a>    <span class="kw">&lt;/div&gt;</span></span>
<span id="cb1-41"><a href="#cb1-41" aria-hidden="true" tabindex="-1"></a><span class="kw">&lt;/div&gt;</span></span>
<span id="cb1-42"><a href="#cb1-42" aria-hidden="true" tabindex="-1"></a><span class="kw">&lt;/body&gt;</span></span>
<span id="cb1-43"><a href="#cb1-43" aria-hidden="true" tabindex="-1"></a><span class="kw">&lt;/html&gt;</span></span></code></pre></div>
<figure>
<img src="https://cdn-images-1.medium.com/max/2000/1*1K2l3CJ41vA1UMqLOVbp_Q.png" alt="使用 ch 单位构建动态内容宽度的例子">
<figcaption aria-hidden="true">使用 <code>ch</code>
单位构建动态内容宽度的例子</figcaption>
</figure>
<p>如你所见，我们限制了我们内容的 <code>max-width</code> 为
<code>20ch</code>。</p>
<div class="sourceCode" id="cb2"><pre class="sourceCode css"><code class="sourceCode css"><span id="cb2-1"><a href="#cb2-1" aria-hidden="true" tabindex="-1"></a><span class="pp">#content</span> &#123;</span>
<span id="cb2-2"><a href="#cb2-2" aria-hidden="true" tabindex="-1"></a>    <span class="kw">max-width</span>: <span class="dv">20</span><span class="dt">ch</span><span class="op">;</span></span>
<span id="cb2-3"><a href="#cb2-3" aria-hidden="true" tabindex="-1"></a>&#125;</span></code></pre></div>
<p>以上仅是示例。像素单元有很多替代品。有时，你不需要相对单位。你可以使用
flex 和 grid
布局的功能来相应地调整布局。不依赖绝对单位能够让你的布局保持一致。切记，始终首先依靠浏览器帮助我们完成这些繁重的工作。</p>
<h2 id="可访问性它们不适应用户的默认字体大小">3.
可访问性：它们不适应用户的默认字体大小</h2>
<p>可访问性是一个被遗忘的主题，我们大家都应该更加关注它。像素单位的使用如何影响可访问性？</p>
<p>浏览器可让你配置默认的基本字体大小。默认情况下，它设置为
<code>16px</code>，但可以轻松更改。这对于视力障碍的人非常有用。然后，浏览器通过将基本字体大小设置为该值，向我们提示有关首选用户的字体大小。</p>
<p>但是，如果开发者使用绝对像素值，则该信息将被忽略。基本的“字体大小”不会对我们的应用程序布局产生任何影响。所有用户的字体大小都将相同。这是一件坏事，因为你忽略了用户的偏好设置并损害了页面的可访问性。</p>
<p>我们如何尊重基本字体大小？通过使用相对单位，例如 <code>rem</code> 和
<code>em</code>。什么是 <code>rem</code> 和 <code>em</code>？
<code>rem</code> 和 <code>em</code>
单位表示相对于基本字体的字体大小（从框到文本）。简而言之，这意味着你的文本字体大小将是用户首选字体大小的倍数。两者有什么区别？</p>
<ul>
<li><code>rem</code> 的大小由根元素（<code>:root</code>）的
<code>font-size</code> 决定。</li>
<li><code>em</code> 的大小由父元素的 <code>font-size</code> 决定。</li>
</ul>
<p>你不仅限于仅在 <code>font-size</code> 属性上使用这些单位。它们可以在
CSS
元素中的任何位置使用。这意味着你可以根据用户设置创建自适应布局。你可以确保为用户提供适当的体验。</p>
<p>让我们看一个示例，在该示例中，我们将根据用户的基本字体大小来调整整个布局。对于此特定示例，我们将依靠
<code>rem</code> 设计自适应布局：</p>
<div class="sourceCode" id="cb3"><pre class="sourceCode html"><code class="sourceCode html"><span id="cb3-1"><a href="#cb3-1" aria-hidden="true" tabindex="-1"></a><span class="dt">&lt;!DOCTYPE </span>html<span class="dt">&gt;</span></span>
<span id="cb3-2"><a href="#cb3-2" aria-hidden="true" tabindex="-1"></a><span class="kw">&lt;html&gt;</span></span>
<span id="cb3-3"><a href="#cb3-3" aria-hidden="true" tabindex="-1"></a><span class="kw">&lt;head&gt;</span></span>
<span id="cb3-4"><a href="#cb3-4" aria-hidden="true" tabindex="-1"></a>    <span class="kw">&lt;title&gt;</span>Units Playground<span class="kw">&lt;/title&gt;</span></span>
<span id="cb3-5"><a href="#cb3-5" aria-hidden="true" tabindex="-1"></a>    <span class="kw">&lt;meta</span> <span class="er">charset</span><span class="ot">=</span><span class="st">"UTF-8"</span><span class="kw">/&gt;</span></span>
<span id="cb3-6"><a href="#cb3-6" aria-hidden="true" tabindex="-1"></a><span class="kw">&lt;/head&gt;</span></span>
<span id="cb3-7"><a href="#cb3-7" aria-hidden="true" tabindex="-1"></a><span class="kw">&lt;body&gt;</span></span>
<span id="cb3-8"><a href="#cb3-8" aria-hidden="true" tabindex="-1"></a><span class="kw">&lt;style</span> <span class="er">type</span><span class="ot">=</span><span class="st">"text/css"</span><span class="kw">&gt;</span></span>
<span id="cb3-9"><a href="#cb3-9" aria-hidden="true" tabindex="-1"></a>    body &#123;</span>
<span id="cb3-10"><a href="#cb3-10" aria-hidden="true" tabindex="-1"></a>        <span class="kw">color</span>: <span class="cn">white</span><span class="op">;</span></span>
<span id="cb3-11"><a href="#cb3-11" aria-hidden="true" tabindex="-1"></a>        <span class="kw">text-align</span>: <span class="dv">center</span><span class="op">;</span></span>
<span id="cb3-12"><a href="#cb3-12" aria-hidden="true" tabindex="-1"></a>        <span class="kw">box-sizing</span>: <span class="dv">content-box</span><span class="op">;</span></span>
<span id="cb3-13"><a href="#cb3-13" aria-hidden="true" tabindex="-1"></a>    &#125;</span>
<span id="cb3-14"><a href="#cb3-14" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb3-15"><a href="#cb3-15" aria-hidden="true" tabindex="-1"></a>    h1 &#123;</span>
<span id="cb3-16"><a href="#cb3-16" aria-hidden="true" tabindex="-1"></a>        <span class="kw">font-size</span>: <span class="dv">1.9</span><span class="dt">rem</span><span class="op">;</span></span>
<span id="cb3-17"><a href="#cb3-17" aria-hidden="true" tabindex="-1"></a>    &#125;</span>
<span id="cb3-18"><a href="#cb3-18" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb3-19"><a href="#cb3-19" aria-hidden="true" tabindex="-1"></a>    h2 &#123;</span>
<span id="cb3-20"><a href="#cb3-20" aria-hidden="true" tabindex="-1"></a>        <span class="kw">font-size</span>: <span class="dv">1.5</span><span class="dt">rem</span><span class="op">;</span></span>
<span id="cb3-21"><a href="#cb3-21" aria-hidden="true" tabindex="-1"></a>    &#125;</span>
<span id="cb3-22"><a href="#cb3-22" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb3-23"><a href="#cb3-23" aria-hidden="true" tabindex="-1"></a>    p &#123;</span>
<span id="cb3-24"><a href="#cb3-24" aria-hidden="true" tabindex="-1"></a>        <span class="kw">font-size</span>: <span class="dv">1.2</span><span class="dt">rem</span><span class="op">;</span></span>
<span id="cb3-25"><a href="#cb3-25" aria-hidden="true" tabindex="-1"></a>        <span class="kw">color</span>: <span class="cn">#5B2E48</span><span class="op">;</span></span>
<span id="cb3-26"><a href="#cb3-26" aria-hidden="true" tabindex="-1"></a>    &#125;</span>
<span id="cb3-27"><a href="#cb3-27" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb3-28"><a href="#cb3-28" aria-hidden="true" tabindex="-1"></a>    <span class="fu">.main-article</span> &#123;</span>
<span id="cb3-29"><a href="#cb3-29" aria-hidden="true" tabindex="-1"></a>        <span class="kw">padding</span>: <span class="dv">1</span><span class="dt">em</span><span class="op">;</span></span>
<span id="cb3-30"><a href="#cb3-30" aria-hidden="true" tabindex="-1"></a>        <span class="kw">margin</span>: <span class="dv">0</span><span class="op">;</span></span>
<span id="cb3-31"><a href="#cb3-31" aria-hidden="true" tabindex="-1"></a>        <span class="kw">background-color</span>: <span class="cn">#5B2E48</span><span class="op">;</span></span>
<span id="cb3-32"><a href="#cb3-32" aria-hidden="true" tabindex="-1"></a>        <span class="kw">color</span>: <span class="cn">white</span><span class="op">;</span></span>
<span id="cb3-33"><a href="#cb3-33" aria-hidden="true" tabindex="-1"></a>        <span class="kw">width</span>: <span class="dv">30</span><span class="dt">em</span><span class="op">;</span></span>
<span id="cb3-34"><a href="#cb3-34" aria-hidden="true" tabindex="-1"></a>    &#125;</span>
<span id="cb3-35"><a href="#cb3-35" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb3-36"><a href="#cb3-36" aria-hidden="true" tabindex="-1"></a>    <span class="fu">.sub-article</span> &#123;</span>
<span id="cb3-37"><a href="#cb3-37" aria-hidden="true" tabindex="-1"></a>        <span class="kw">padding</span>: <span class="dv">1</span><span class="dt">em</span><span class="op">;</span></span>
<span id="cb3-38"><a href="#cb3-38" aria-hidden="true" tabindex="-1"></a>        <span class="kw">margin</span>: <span class="dv">0</span><span class="op">;</span></span>
<span id="cb3-39"><a href="#cb3-39" aria-hidden="true" tabindex="-1"></a>        <span class="kw">background-color</span>: <span class="cn">#CEB992</span><span class="op">;</span></span>
<span id="cb3-40"><a href="#cb3-40" aria-hidden="true" tabindex="-1"></a>        <span class="kw">color</span>: <span class="cn">white</span><span class="op">;</span></span>
<span id="cb3-41"><a href="#cb3-41" aria-hidden="true" tabindex="-1"></a>        <span class="kw">margin-bottom</span>: <span class="dv">1</span><span class="dt">em</span><span class="op">;</span></span>
<span id="cb3-42"><a href="#cb3-42" aria-hidden="true" tabindex="-1"></a>    &#125;</span>
<span id="cb3-43"><a href="#cb3-43" aria-hidden="true" tabindex="-1"></a><span class="kw">&lt;/style&gt;</span></span>
<span id="cb3-44"><a href="#cb3-44" aria-hidden="true" tabindex="-1"></a><span class="kw">&lt;article</span> <span class="er">class</span><span class="ot">=</span><span class="st">"main-article"</span><span class="kw">&gt;</span></span>
<span id="cb3-45"><a href="#cb3-45" aria-hidden="true" tabindex="-1"></a>    <span class="kw">&lt;h1&gt;</span>Weather forecast for Barcelona<span class="kw">&lt;/h1&gt;</span></span>
<span id="cb3-46"><a href="#cb3-46" aria-hidden="true" tabindex="-1"></a>    <span class="kw">&lt;article</span> <span class="er">class</span><span class="ot">=</span><span class="st">"sub-article"</span><span class="kw">&gt;</span></span>
<span id="cb3-47"><a href="#cb3-47" aria-hidden="true" tabindex="-1"></a>        <span class="kw">&lt;h2&gt;</span>10 May 2021<span class="kw">&lt;/h2&gt;</span></span>
<span id="cb3-48"><a href="#cb3-48" aria-hidden="true" tabindex="-1"></a>        <span class="kw">&lt;p&gt;</span>Cloudy<span class="kw">&lt;/p&gt;</span></span>
<span id="cb3-49"><a href="#cb3-49" aria-hidden="true" tabindex="-1"></a>    <span class="kw">&lt;/article&gt;</span></span>
<span id="cb3-50"><a href="#cb3-50" aria-hidden="true" tabindex="-1"></a>    <span class="kw">&lt;article</span> <span class="er">class</span><span class="ot">=</span><span class="st">"sub-article"</span><span class="kw">&gt;</span></span>
<span id="cb3-51"><a href="#cb3-51" aria-hidden="true" tabindex="-1"></a>        <span class="kw">&lt;h2&gt;</span>11 May 2021<span class="kw">&lt;/h2&gt;</span></span>
<span id="cb3-52"><a href="#cb3-52" aria-hidden="true" tabindex="-1"></a>        <span class="kw">&lt;p&gt;</span>Sunny<span class="kw">&lt;/p&gt;</span></span>
<span id="cb3-53"><a href="#cb3-53" aria-hidden="true" tabindex="-1"></a>    <span class="kw">&lt;/article&gt;</span></span>
<span id="cb3-54"><a href="#cb3-54" aria-hidden="true" tabindex="-1"></a>    <span class="kw">&lt;article</span> <span class="er">class</span><span class="ot">=</span><span class="st">"sub-article"</span><span class="kw">&gt;</span></span>
<span id="cb3-55"><a href="#cb3-55" aria-hidden="true" tabindex="-1"></a>        <span class="kw">&lt;h2&gt;</span>12 May 2021<span class="kw">&lt;/h2&gt;</span></span>
<span id="cb3-56"><a href="#cb3-56" aria-hidden="true" tabindex="-1"></a>        <span class="kw">&lt;p&gt;</span>Sunny<span class="kw">&lt;/p&gt;</span></span>
<span id="cb3-57"><a href="#cb3-57" aria-hidden="true" tabindex="-1"></a>    <span class="kw">&lt;/article&gt;</span></span>
<span id="cb3-58"><a href="#cb3-58" aria-hidden="true" tabindex="-1"></a><span class="kw">&lt;/article&gt;</span></span>
<span id="cb3-59"><a href="#cb3-59" aria-hidden="true" tabindex="-1"></a><span class="kw">&lt;/body&gt;</span></span>
<span id="cb3-60"><a href="#cb3-60" aria-hidden="true" tabindex="-1"></a><span class="kw">&lt;/html&gt;</span></span></code></pre></div>
<figure>
<img src="https://cdn-images-1.medium.com/max/2400/1*OHY0OQ7_MXRAbx9J5mmFTg.png" alt="使用不同字体大小的并排可访问组件">
<figcaption aria-hidden="true">使用不同字体大小的并排可访问组件</figcaption>
</figure>
<p>请注意，我们已将 <code>rem</code> 应用于
<code>padding</code>、<code>width</code> 和 <code>font-size</code>
三个属性。</p>
<div class="sourceCode" id="cb4"><pre class="sourceCode css"><code class="sourceCode css"><span id="cb4-1"><a href="#cb4-1" aria-hidden="true" tabindex="-1"></a>p &#123;</span>
<span id="cb4-2"><a href="#cb4-2" aria-hidden="true" tabindex="-1"></a>    <span class="kw">font-size</span>: <span class="dv">1.2</span><span class="dt">rem</span><span class="op">;</span></span>
<span id="cb4-3"><a href="#cb4-3" aria-hidden="true" tabindex="-1"></a>    <span class="kw">color</span>: <span class="cn">#5B2E48</span><span class="op">;</span></span>
<span id="cb4-4"><a href="#cb4-4" aria-hidden="true" tabindex="-1"></a>&#125;</span>
<span id="cb4-5"><a href="#cb4-5" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb4-6"><a href="#cb4-6" aria-hidden="true" tabindex="-1"></a><span class="fu">.main-article</span> &#123;</span>
<span id="cb4-7"><a href="#cb4-7" aria-hidden="true" tabindex="-1"></a>    <span class="kw">padding</span>: <span class="dv">1</span><span class="dt">em</span><span class="op">;</span></span>
<span id="cb4-8"><a href="#cb4-8" aria-hidden="true" tabindex="-1"></a>    <span class="kw">margin</span>: <span class="dv">0</span><span class="op">;</span></span>
<span id="cb4-9"><a href="#cb4-9" aria-hidden="true" tabindex="-1"></a>    <span class="kw">background-color</span>: <span class="cn">#5B2E48</span><span class="op">;</span></span>
<span id="cb4-10"><a href="#cb4-10" aria-hidden="true" tabindex="-1"></a>    <span class="kw">color</span>: <span class="cn">white</span><span class="op">;</span></span>
<span id="cb4-11"><a href="#cb4-11" aria-hidden="true" tabindex="-1"></a>    <span class="kw">width</span>: <span class="dv">30</span><span class="dt">em</span><span class="op">;</span></span>
<span id="cb4-12"><a href="#cb4-12" aria-hidden="true" tabindex="-1"></a>&#125;</span></code></pre></div>
<p>我们可以在上方看到布局如何适应用户的浏览器设置。字体会更大一些，但
article 也会变大一些 ——
它们会变大以保留比例。即使针对不同用户的大小不同，它们的形状也保持一致。</p>
<h2 id="额外提示">额外提示</h2>
<p>当使用 <code>rem</code> 和 <code>rem</code> 单位时，使用默认的
<code>16px</code>
基本字体来表达所有内容可能会很麻烦。在这种情况下，有一个非常流行的技巧：</p>
<div class="sourceCode" id="cb5"><pre class="sourceCode css"><code class="sourceCode css"><span id="cb5-1"><a href="#cb5-1" aria-hidden="true" tabindex="-1"></a>html &#123;</span>
<span id="cb5-2"><a href="#cb5-2" aria-hidden="true" tabindex="-1"></a>    <span class="kw">font-size</span>: <span class="dv">62.5</span><span class="dt">%</span><span class="op">;</span> <span class="co">/* 基于默认浏览器字体大小，让 font-size 1em = 10px */</span></span>
<span id="cb5-3"><a href="#cb5-3" aria-hidden="true" tabindex="-1"></a>&#125;</span></code></pre></div>
<p>使用此技巧，现在所有字体大小都将基于默认像素 <code>16px</code> 的
<code>10px</code>
因子。它能使你的代码少一点混乱，也并不会损害可访问性。它将使你的工作更加轻松。</p>
<h2 id="最后的想法">最后的想法</h2>
<p>我们已经看到了为什么我们应该放弃像素单位的三个有力理由。依靠相对单位或布局功能将确保你的布局在设备和分辨率之间保持一致。</p>
<p>幸运的是，相对单位如 <code>rem</code> 和 <code>em</code>
的使用正在不断扩大。同时，浏览器正在尽力提供一些解决方案。当使用绝对值时，如果用户正在缩放，则浏览器单元将缩放以匹配用户应用的适当缩放。这虽不是完美的体验，也是个不错的后备。</p>
<p>我希望本文能为你提供最后的推动力，使你尽可能远离像素单位。</p>]]></content>
      <categories>
        <category>Computer Science</category>
        <category>Frontend</category>
        <category>Styling</category>
      </categories>
      <tags>
        <tag>Computer Science</tag>
        <tag>UI</tag>
        <tag>Frontend</tag>
        <tag>CSS</tag>
      </tags>
  </entry>
  <entry>
    <title>JavaScript 中哪一种循环最快呢？</title>
    <url>/2021/05/17/computer%20science/frontend/which-type-of-loop-is-fastest-in-javascript/</url>
    <content><![CDATA[<blockquote>
<ul>
<li>原文地址：<a href="https://medium.com/javascript-in-plain-english/which-type-of-loop-is-fastest-in-javascript-ec834a0f21b9">Which
type of loop is fastest in JavaScript?</a></li>
<li>原文作者：<a href="https://kushsavani.medium.com/">kushsavani</a></li>
<li>译者：<a href="https://github.com/PassionPenguin">霜羽
Hoarfroster</a></li>
<li>校对者：<a href="https://github.com/Chorer">Chorer</a>、<a href="https://github.com/HumanBeingXenon">HumanBeing</a>、<a href="https://juejin.cn/user/2840793777440296">yoghurt</a></li>
</ul>
</blockquote>
<p>了解哪一种 <code>for</code>
循环或迭代器适合我们的需求，防止我们犯下一些影响应用性能的低级错误。</p>
<figure>
<img src="https://miro.medium.com/max/10944/0*FjGuCxH-seN1PrRF" alt="由 Artem Sapegin 上传至 Unsplash">
<figcaption aria-hidden="true">由 <a href="https://unsplash.com/@sapegin?utm_source=medium&amp;utm_medium=referral">Artem
Sapegin</a> 上传至 <a href="https://unsplash.com/?utm_source=medium&amp;utm_medium=referral">Unsplash</a></figcaption>
</figure>
<p>JavaScript 是 Web 开发领域的“常青树”。无论是 JavaScript 框架（如
Node.js、React、Angular、Vue 等），还是原生
JavaScript，都拥有非常庞大的粉丝基础。我们来谈谈现代 JavaScript
吧。循环一直是大多数编程语言的重要组成部分，而现代 JavaScript
为我们提供了许多迭代或循环值的方法。</p>
<p>但问题在于，我们是否真的知道哪种循环或迭代最适合我们的需求。<code>for</code>
循环有很多变形，例如
<code>for</code>、<code>for</code>（倒序）、<code>for…of</code>、<code>forEach</code>、<code>for…in</code>、<code>for…await</code>。本文将围绕这些展开讨论。</p>
<h2 id="究竟哪一种循环更快"><strong>究竟哪一种循环更快？</strong></h2>
<p><strong>答案其实是：</strong> <code>for</code>（倒序）</p>
<p>最让我感到惊讶的事情是，当我在本地计算机上进行测试之后，我不得不接受
<code>for</code>（倒序）是所有 <code>for</code>
循环中最快的这一事实。下面我会举个对一个包含超过一百万项元素的数组执行一次循环遍历的例子。</p>
<p><strong>声明</strong>：<code>console.time()</code>
结果的准确度在很大程度上取决于我们运行测试的系统配置。你可以在<a href="https://johnresig.com/blog/accuracy-of-javascript-time/">此处</a>对准确度作进一步了解。</p>
<div class="sourceCode" id="cb1"><pre class="sourceCode javascript"><code class="sourceCode javascript"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a><span class="kw">const</span> million <span class="op">=</span> <span class="dv">1000000</span><span class="op">;</span> </span>
<span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a><span class="kw">const</span> arr <span class="op">=</span> <span class="bu">Array</span>(million)<span class="op">;</span></span>
<span id="cb1-3"><a href="#cb1-3" aria-hidden="true" tabindex="-1"></a><span class="bu">console</span><span class="op">.</span><span class="fu">time</span>(<span class="st">'⏳'</span>)<span class="op">;</span></span>
<span id="cb1-4"><a href="#cb1-4" aria-hidden="true" tabindex="-1"></a><span class="cf">for</span> (<span class="kw">let</span> i <span class="op">=</span> arr<span class="op">.</span><span class="at">length</span><span class="op">;</span> i <span class="op">&gt;</span> <span class="dv">0</span><span class="op">;</span> i<span class="op">--</span>) &#123;&#125; <span class="co">// for(倒序)  :- 1.5ms</span></span>
<span id="cb1-5"><a href="#cb1-5" aria-hidden="true" tabindex="-1"></a><span class="cf">for</span> (<span class="kw">let</span> i <span class="op">=</span> <span class="dv">0</span><span class="op">;</span> i <span class="op">&lt;</span> arr<span class="op">.</span><span class="at">length</span><span class="op">;</span> i<span class="op">++</span>) &#123;&#125; <span class="co">// for          :- 1.6ms</span></span>
<span id="cb1-6"><a href="#cb1-6" aria-hidden="true" tabindex="-1"></a>arr<span class="op">.</span><span class="fu">forEach</span>(v <span class="kw">=&gt;</span> v)                     <span class="co">// foreach      :- 2.1ms</span></span>
<span id="cb1-7"><a href="#cb1-7" aria-hidden="true" tabindex="-1"></a><span class="cf">for</span> (<span class="kw">const</span> v <span class="kw">of</span> arr) &#123;&#125;                 <span class="co">// for...of     :- 11.7ms</span></span>
<span id="cb1-8"><a href="#cb1-8" aria-hidden="true" tabindex="-1"></a><span class="bu">console</span><span class="op">.</span><span class="fu">timeEnd</span>(<span class="st">'⏳'</span>)<span class="op">;</span></span></code></pre></div>
<p>造成这样结果的原因很简单，在代码中，正序和倒序的 <code>for</code>
循环几乎花费一样的时间，仅仅相差了 0.1
毫秒。原因是，<code>for</code>（倒序）只需要计算一次起始变量
<code>let i = arr.length</code>，而在正序的 <code>for</code>
循环中，它在每次变量增加后都会检查条件
<code>i&lt;arr.length</code>。这个细微的差别不是很重要，你可以忽略它。（译者注：在数据量小或对时间不敏感的代码上，我们大可忽略它，但是根据译者的测试，当数据量扩大，例如十亿，千亿等的数量级，差距就显著提升，我们就需要考虑时间对应用程序性能的影响了。）</p>
<p>而 <code>forEach</code> 是 <code>Array</code>
原型的一个方法，与普通的 <code>for</code> 循环相比，<code>forEach</code>
和 <code>for…of</code>
需要花费更多的时间进行数组迭代。（译者注：但值得注意的是，<code>for…of</code>
和 <code>forEach</code>
都从对象中获取了数据，而原型并没有，因此没有可比性。）</p>
<h2 id="循环的类型以及我们应该在何处使用它们"><strong>循环的类型，以及我们应该在何处使用它们</strong></h2>
<h3 id="for-循环正序和倒序"><strong>1. For
循环（正序和倒序）</strong></h3>
<p>我想，也许大家都应该对这个基础循环非常熟悉了。我们可以在任何我们需要的地方使用
<code>for</code> 循环，按照核定的次数运行一段代码。最基础的
<code>for</code>
循环运行最迅速的，那我们每一次都应该使用它，对吗？并不然，性能不仅仅只是唯一尺度，代码可读性往往更加重要，就让我们选择适合我们应用程序的变形即可。</p>
<h3 id="foreach"><strong>2. <code>forEach</code></strong></h3>
<p>这个方法需要接受一个回调函数作为输入参数，遍历数组的每一个元素，并执行我们的回调函数（以元素本身和它的索引（可选参数）作为参数赋予给回调函数）。<code>forEach</code>
还允许在回调函数中使用一个可选参数 <code>this</code>。</p>
<div class="sourceCode" id="cb2"><pre class="sourceCode javascript"><code class="sourceCode javascript"><span id="cb2-1"><a href="#cb2-1" aria-hidden="true" tabindex="-1"></a><span class="kw">const</span> things <span class="op">=</span> [<span class="st">'have'</span><span class="op">,</span> <span class="st">'fun'</span><span class="op">,</span> <span class="st">'coding'</span>]<span class="op">;</span></span>
<span id="cb2-2"><a href="#cb2-2" aria-hidden="true" tabindex="-1"></a><span class="kw">const</span> callbackFun <span class="op">=</span> (item<span class="op">,</span> idex) <span class="kw">=&gt;</span> &#123;</span>
<span id="cb2-3"><a href="#cb2-3" aria-hidden="true" tabindex="-1"></a>    <span class="bu">console</span><span class="op">.</span><span class="fu">log</span>(<span class="vs">`</span><span class="sc">$&#123;</span>item<span class="sc">&#125;</span><span class="vs"> - </span><span class="sc">$&#123;</span>index<span class="sc">&#125;</span><span class="vs">`</span>)<span class="op">;</span></span>
<span id="cb2-4"><a href="#cb2-4" aria-hidden="true" tabindex="-1"></a>&#125;</span>
<span id="cb2-5"><a href="#cb2-5" aria-hidden="true" tabindex="-1"></a>things<span class="op">.</span><span class="fu">foreach</span>(callbackFun)<span class="op">;</span> </span>
<span id="cb2-6"><a href="#cb2-6" aria-hidden="true" tabindex="-1"></a><span class="co">/* 输出   have - 0</span></span>
<span id="cb2-7"><a href="#cb2-7" aria-hidden="true" tabindex="-1"></a><span class="co">        fun - 1</span></span>
<span id="cb2-8"><a href="#cb2-8" aria-hidden="true" tabindex="-1"></a><span class="co">        coding - 2 */</span></span></code></pre></div>
<p>需要注意的是，如果我们要使用 <code>forEach</code>，我们不能使用
JavaScript
的短路运算符（||、&amp;&amp;……），即不能在每一次循环中跳过或结束循环。</p>
<h3 id="forof"><strong>3. <code>for…of</code></strong></h3>
<p><code>for…of</code> 是在 ES6（ECMAScript
6）中实现标准化的。它会对一个可迭代的对象（例如
<code>array</code>、<code>map</code>、<code>set</code>、<code>string</code>
等）创建一个循环，并且有一个突出的优点，即优秀的可读性。</p>
<div class="sourceCode" id="cb3"><pre class="sourceCode javascript"><code class="sourceCode javascript"><span id="cb3-1"><a href="#cb3-1" aria-hidden="true" tabindex="-1"></a><span class="kw">const</span> arr <span class="op">=</span> [<span class="dv">3</span><span class="op">,</span> <span class="dv">5</span><span class="op">,</span> <span class="dv">7</span>]<span class="op">;</span></span>
<span id="cb3-2"><a href="#cb3-2" aria-hidden="true" tabindex="-1"></a><span class="kw">const</span> str <span class="op">=</span> <span class="st">'hello'</span><span class="op">;</span></span>
<span id="cb3-3"><a href="#cb3-3" aria-hidden="true" tabindex="-1"></a><span class="cf">for</span> (<span class="kw">let</span> i <span class="kw">of</span> arr) &#123;</span>
<span id="cb3-4"><a href="#cb3-4" aria-hidden="true" tabindex="-1"></a>   <span class="bu">console</span><span class="op">.</span><span class="fu">log</span>(i)<span class="op">;</span> <span class="co">// 输出 3, 5, 7</span></span>
<span id="cb3-5"><a href="#cb3-5" aria-hidden="true" tabindex="-1"></a>&#125;</span>
<span id="cb3-6"><a href="#cb3-6" aria-hidden="true" tabindex="-1"></a><span class="cf">for</span> (<span class="kw">let</span> i <span class="kw">of</span> str) &#123;</span>
<span id="cb3-7"><a href="#cb3-7" aria-hidden="true" tabindex="-1"></a>   <span class="bu">console</span><span class="op">.</span><span class="fu">log</span>(i)<span class="op">;</span> <span class="co">// 输出 'h', 'e', 'l', 'l', 'o'</span></span>
<span id="cb3-8"><a href="#cb3-8" aria-hidden="true" tabindex="-1"></a>&#125;</span></code></pre></div>
<p>需要注意的是，请不要在生成器中使用 <code>for……of</code>，即便
<code>for……of</code>
循环提前终止。在退出循环后，生成器被关闭，并尝试再次迭代，不会产生任何进一步的结果。</p>
<h3 id="for-in"><strong>4. <code>for</code>
<code>in</code></strong></h3>
<p><code>for…in</code>
会在对象的所有可枚举属性上迭代指定的变量。对于每个不同的属性，<code>for…in</code>
语句除返回数字索引外，还将返回用户定义的属性的名称。
因此，在遍历数组时最好使用带有数字索引的传统 <code>for</code> 循环。
因为 <code>for…in</code>
语句还会迭代除数组元素之外的用户定义属性，就算我们修改了数组对象（例如添加自定义属性或方法），依然如此。</p>
<div class="sourceCode" id="cb4"><pre class="sourceCode javascript"><code class="sourceCode javascript"><span id="cb4-1"><a href="#cb4-1" aria-hidden="true" tabindex="-1"></a><span class="kw">const</span> details <span class="op">=</span> &#123;<span class="dt">firstName</span><span class="op">:</span> <span class="st">'john'</span><span class="op">,</span> <span class="dt">lastName</span><span class="op">:</span> <span class="st">'Doe'</span>&#125;<span class="op">;</span></span>
<span id="cb4-2"><a href="#cb4-2" aria-hidden="true" tabindex="-1"></a><span class="kw">let</span> fullName <span class="op">=</span> <span class="st">''</span><span class="op">;</span></span>
<span id="cb4-3"><a href="#cb4-3" aria-hidden="true" tabindex="-1"></a><span class="cf">for</span> (<span class="kw">let</span> i <span class="kw">in</span> details) &#123;</span>
<span id="cb4-4"><a href="#cb4-4" aria-hidden="true" tabindex="-1"></a>    fullName <span class="op">+=</span> details[i] <span class="op">+</span> <span class="st">' '</span><span class="op">;</span> <span class="co">// fullName: john doe</span></span>
<span id="cb4-5"><a href="#cb4-5" aria-hidden="true" tabindex="-1"></a>&#125;</span></code></pre></div>
<h3 id="forof-和-forin"><code>for…of</code> 和 <code>for…in</code></h3>
<p><code>for…of</code> 和 <code>for…in</code>
之间的主要区别是它们迭代的内容。<code>for…in</code>
循环遍历对象的属性，而 <code>for…of</code> 循环遍历可迭代对象的值。</p>
<div class="sourceCode" id="cb5"><pre class="sourceCode javascript"><code class="sourceCode javascript"><span id="cb5-1"><a href="#cb5-1" aria-hidden="true" tabindex="-1"></a><span class="kw">let</span> arr<span class="op">=</span> [<span class="dv">4</span><span class="op">,</span> <span class="dv">5</span><span class="op">,</span> <span class="dv">6</span>]<span class="op">;</span></span>
<span id="cb5-2"><a href="#cb5-2" aria-hidden="true" tabindex="-1"></a><span class="cf">for</span> (<span class="kw">let</span> i <span class="kw">in</span> arr) &#123;</span>
<span id="cb5-3"><a href="#cb5-3" aria-hidden="true" tabindex="-1"></a>   <span class="bu">console</span><span class="op">.</span><span class="fu">log</span>(i)<span class="op">;</span> <span class="co">// '0', '1', '2'</span></span>
<span id="cb5-4"><a href="#cb5-4" aria-hidden="true" tabindex="-1"></a>&#125;</span>
<span id="cb5-5"><a href="#cb5-5" aria-hidden="true" tabindex="-1"></a><span class="cf">for</span> (<span class="kw">let</span> i <span class="kw">of</span> arr) &#123;</span>
<span id="cb5-6"><a href="#cb5-6" aria-hidden="true" tabindex="-1"></a>   <span class="bu">console</span><span class="op">.</span><span class="fu">log</span>(i)<span class="op">;</span> <span class="co">// '4', '5', '6'</span></span>
<span id="cb5-7"><a href="#cb5-7" aria-hidden="true" tabindex="-1"></a>&#125;</span></code></pre></div>
<figure>
<img src="https://miro.medium.com/max/12000/0*E9FPH2LFeFnTGWF5" alt="由 Tine Ivanič 上传至 Unsplash">
<figcaption aria-hidden="true">由 <a href="https://unsplash.com/@tine999?utm_source=medium&amp;utm_medium=referral">Tine
Ivanič</a> 上传至 <a href="https://unsplash.com/?utm_source=medium&amp;utm_medium=referral">Unsplash</a></figcaption>
</figure>
<h3 id="结论"><strong>结论</strong></h3>
<ul>
<li><code>for</code> 最快，但可读性比较差</li>
<li><code>foreach</code> 比较快，能够控制内容</li>
<li><code>for...of</code> 比较慢，但香</li>
<li><code>for...in</code> 比较慢，没那么方便</li>
</ul>
<p>最后，给你一条明智的建议 ——
优先考虑可读性。尤其是当我们开发复杂的结构程序时，更需要这样做。当然，我们也应该专注于性能。尽量避免增添不必要的、多余的花哨代码，因为这有时可能对你的程序性能造成严重影响。祝你编码愉快。</p>]]></content>
      <categories>
        <category>Computer Science</category>
        <category>Frontend</category>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>Computer Science</tag>
        <tag>JavaScript</tag>
        <tag>Frontend</tag>
      </tags>
  </entry>
  <entry>
    <title>有关 ECMAScript 最新版本的所有信息｜ECMAScript 2021</title>
    <url>/2021/05/17/computer%20science/backend/everything-about-the-latest-ecmascript-release-ecmascript-2021/</url>
    <content><![CDATA[<blockquote>
<ul>
<li>原文地址：<a href="https://levelup.gitconnected.com/everything-about-the-latest-ecmascript-release-ecmascript-2021-c011e817f41a">Everything
about the latest ECMAScript release | ECMAScript 2021</a></li>
<li>原文作者：<a href="https://medium.com/@kritikasharmablog">Kritika
Sharma</a></li>
<li>译者：<a href="https://github.com/Hoarfroster">霜羽
Hoarfroster</a></li>
<li>校对者：<a href="https://github.com/KimYangOfCat">KimYang</a>、<a href="https://github.com/Tong-H">Tong-H</a></li>
</ul>
</blockquote>
<p>在本文中，我们将通过一些示例代码向大家介绍 ECMAScript 2021
最新版本的功能。</p>
<p><img src="https://cdn-images-1.medium.com/max/2000/1*ex1pND6jnzW3Hj2vjRjaDA.jpeg"></p>
<h2 id="新的功能">新的功能</h2>
<h3 id="string.replaceall">1. String.replaceAll( )</h3>
<p>将查找到的目标字符串的所有实例替换为所需的字符串：</p>
<div class="sourceCode" id="cb1"><pre class="sourceCode js"><code class="sourceCode javascript"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a><span class="kw">const</span> fact <span class="op">=</span> <span class="st">"JavaScript is the best web scripting language. JavaScript can be used for both front end and backend"</span><span class="op">;</span></span>
<span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a> </span>
<span id="cb1-3"><a href="#cb1-3" aria-hidden="true" tabindex="-1"></a><span class="bu">console</span><span class="op">.</span><span class="fu">log</span>(fact<span class="op">.</span><span class="fu">replaceAll</span>(<span class="st">"JavaScript"</span><span class="op">,</span> <span class="st">"TypeScript"</span>))<span class="op">;</span></span>
<span id="cb1-4"><a href="#cb1-4" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-5"><a href="#cb1-5" aria-hidden="true" tabindex="-1"></a><span class="co">// 输出：</span></span>
<span id="cb1-6"><a href="#cb1-6" aria-hidden="true" tabindex="-1"></a><span class="co">// "TypeScript is the best web scripting language. TypeScript can be used for both front end and backend";</span></span></code></pre></div>
<p>与之前的 <code>replace()</code>
方法（仅将目标字符串的第一个匹配项替换为所需的字符串）相比：</p>
<div class="sourceCode" id="cb2"><pre class="sourceCode js"><code class="sourceCode javascript"><span id="cb2-1"><a href="#cb2-1" aria-hidden="true" tabindex="-1"></a><span class="kw">const</span> fact <span class="op">=</span> <span class="st">"JavaScript is the best web scripting language. JavaScript can be used for both front end and backend"</span><span class="op">;</span></span>
<span id="cb2-2"><a href="#cb2-2" aria-hidden="true" tabindex="-1"></a> </span>
<span id="cb2-3"><a href="#cb2-3" aria-hidden="true" tabindex="-1"></a><span class="bu">console</span><span class="op">.</span><span class="fu">log</span>(fact<span class="op">.</span><span class="fu">replace</span>(<span class="st">"JavaScript"</span><span class="op">,</span> <span class="st">"TypeScript"</span>))<span class="op">;</span></span>
<span id="cb2-4"><a href="#cb2-4" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb2-5"><a href="#cb2-5" aria-hidden="true" tabindex="-1"></a><span class="co">// 输出：</span></span>
<span id="cb2-6"><a href="#cb2-6" aria-hidden="true" tabindex="-1"></a><span class="co">// "TypeScript is the best web scripting language. JavaScript can be used for both front end and backend";</span></span></code></pre></div>
<h3 id="promise.any">2. Promise.any( )</h3>
<p>只要所提供的<code>Promise</code>
中的任何一个得到解决，<code>Promise.any()</code> 就会直接被解决，而
<code>Promise.all()</code> 则等待所有的 <code>Promise</code>
都得到解决后才会标记为解决，基本上与 <code>Promise.all()</code>
相反。</p>
<p>如果 <strong>“兑现了一个 <code>Promise</code>”</strong>：</p>
<div class="sourceCode" id="cb3"><pre class="sourceCode js"><code class="sourceCode javascript"><span id="cb3-1"><a href="#cb3-1" aria-hidden="true" tabindex="-1"></a><span class="kw">const</span> promises <span class="op">=</span> [   </span>
<span id="cb3-2"><a href="#cb3-2" aria-hidden="true" tabindex="-1"></a>          <span class="bu">Promise</span><span class="op">.</span><span class="fu">reject</span>(<span class="st">'错误 A'</span>)<span class="op">,</span>           </span>
<span id="cb3-3"><a href="#cb3-3" aria-hidden="true" tabindex="-1"></a>          <span class="bu">Promise</span><span class="op">.</span><span class="fu">reject</span>(<span class="st">'错误 B'</span>)<span class="op">,</span>   </span>
<span id="cb3-4"><a href="#cb3-4" aria-hidden="true" tabindex="-1"></a>          <span class="bu">Promise</span><span class="op">.</span><span class="fu">resolve</span>(<span class="st">'结果'</span>)<span class="op">,</span> </span>
<span id="cb3-5"><a href="#cb3-5" aria-hidden="true" tabindex="-1"></a>]<span class="op">;</span> </span>
<span id="cb3-6"><a href="#cb3-6" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb3-7"><a href="#cb3-7" aria-hidden="true" tabindex="-1"></a><span class="bu">Promise</span></span>
<span id="cb3-8"><a href="#cb3-8" aria-hidden="true" tabindex="-1"></a>  <span class="op">.</span><span class="fu">any</span>(promises)</span>
<span id="cb3-9"><a href="#cb3-9" aria-hidden="true" tabindex="-1"></a>  <span class="op">.</span><span class="fu">then</span>((result) <span class="kw">=&gt;</span> assert<span class="op">.</span><span class="fu">equal</span>(result<span class="op">,</span> <span class="st">'结果'</span>))<span class="op">;</span> <span class="co">//true</span></span></code></pre></div>
<p>如果 <strong>“所有 <code>Promise</code> 都是被拒绝的”</strong>：</p>
<div class="sourceCode" id="cb4"><pre class="sourceCode js"><code class="sourceCode javascript"><span id="cb4-1"><a href="#cb4-1" aria-hidden="true" tabindex="-1"></a><span class="kw">const</span> promises <span class="op">=</span> [   </span>
<span id="cb4-2"><a href="#cb4-2" aria-hidden="true" tabindex="-1"></a>          <span class="bu">Promise</span><span class="op">.</span><span class="fu">reject</span>(<span class="st">'错误 A'</span>)<span class="op">,</span>  </span>
<span id="cb4-3"><a href="#cb4-3" aria-hidden="true" tabindex="-1"></a>          <span class="bu">Promise</span><span class="op">.</span><span class="fu">reject</span>(<span class="st">'错误 B'</span>)<span class="op">,</span>   </span>
<span id="cb4-4"><a href="#cb4-4" aria-hidden="true" tabindex="-1"></a>          <span class="bu">Promise</span><span class="op">.</span><span class="fu">reject</span>(<span class="st">'错误 C'</span>)<span class="op">,</span> </span>
<span id="cb4-5"><a href="#cb4-5" aria-hidden="true" tabindex="-1"></a>]<span class="op">;</span> </span>
<span id="cb4-6"><a href="#cb4-6" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb4-7"><a href="#cb4-7" aria-hidden="true" tabindex="-1"></a><span class="bu">Promise</span></span>
<span id="cb4-8"><a href="#cb4-8" aria-hidden="true" tabindex="-1"></a>  <span class="op">.</span><span class="fu">any</span>(promises)   </span>
<span id="cb4-9"><a href="#cb4-9" aria-hidden="true" tabindex="-1"></a>  <span class="op">.</span><span class="fu">catch</span>((aggregateError) <span class="kw">=&gt;</span> &#123;</span>
<span id="cb4-10"><a href="#cb4-10" aria-hidden="true" tabindex="-1"></a>            assert<span class="op">.</span><span class="fu">deepEqual</span>(aggregateError<span class="op">.</span><span class="at">errors</span><span class="op">,</span> </span>
<span id="cb4-11"><a href="#cb4-11" aria-hidden="true" tabindex="-1"></a>            [<span class="st">'错误 A'</span><span class="op">,</span> <span class="st">'错误 B'</span><span class="op">,</span> <span class="st">'错误 C'</span>])<span class="op">;</span> <span class="co">//true</span></span>
<span id="cb4-12"><a href="#cb4-12" aria-hidden="true" tabindex="-1"></a>   &#125;)<span class="op">;</span></span></code></pre></div>
<h3 id="逻辑赋值操作符">3. 逻辑赋值操作符</h3>
<figure>
<img src="https://cdn-images-1.medium.com/max/2972/1*WS3OZEp_hEv0_zLaihk6-Q.png" alt="来源: https://exploringjs.com/impatient-js/ch_operators.html#logical-assignment-operators">
<figcaption aria-hidden="true">来源: <a href="https://exploringjs.com/impatient-js/ch_operators.html#logical-assignment-operators">https://exploringjs.com/impatient-js/ch_operators.html#logical-assignment-operators</a></figcaption>
</figure>
<p><code>a ||= b</code> 等同于
<code>a || (a = b)</code>（短路运算符）</p>
<p>为何不是 <code>a = a || b</code>？</p>
<p>好吧，因为对于前一个表达式，只有在 <code>a</code> 计算为
<code>false</code>
时，赋值才会被执行。因此，前者仅在必要时才会被赋值。相反，后一个表达式始终执行赋值。</p>
<p><code>a ||= b</code> 的一个例子：</p>
<div class="sourceCode" id="cb5"><pre class="sourceCode js"><code class="sourceCode javascript"><span id="cb5-1"><a href="#cb5-1" aria-hidden="true" tabindex="-1"></a><span class="kw">var</span> a <span class="op">=</span> <span class="dv">1</span><span class="op">;</span>  </span>
<span id="cb5-2"><a href="#cb5-2" aria-hidden="true" tabindex="-1"></a><span class="kw">var</span> b <span class="op">=</span> <span class="dv">2</span><span class="op">;</span>  </span>
<span id="cb5-3"><a href="#cb5-3" aria-hidden="true" tabindex="-1"></a> </span>
<span id="cb5-4"><a href="#cb5-4" aria-hidden="true" tabindex="-1"></a>a <span class="op">||=</span> b<span class="op">;</span>   </span>
<span id="cb5-5"><a href="#cb5-5" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb5-6"><a href="#cb5-6" aria-hidden="true" tabindex="-1"></a><span class="bu">console</span><span class="op">.</span><span class="fu">log</span>(a)<span class="op">;</span> <span class="co">// 1</span></span></code></pre></div>
<p><code>a &amp;&amp;= b</code> 的一个例子：</p>
<div class="sourceCode" id="cb6"><pre class="sourceCode js"><code class="sourceCode javascript"><span id="cb6-1"><a href="#cb6-1" aria-hidden="true" tabindex="-1"></a><span class="kw">var</span> a <span class="op">=</span> <span class="dv">1</span><span class="op">;</span> </span>
<span id="cb6-2"><a href="#cb6-2" aria-hidden="true" tabindex="-1"></a><span class="kw">var</span> b <span class="op">=</span> <span class="dv">2</span><span class="op">;</span> </span>
<span id="cb6-3"><a href="#cb6-3" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb6-4"><a href="#cb6-4" aria-hidden="true" tabindex="-1"></a>a <span class="op">&amp;&amp;=</span> b<span class="op">;</span> </span>
<span id="cb6-5"><a href="#cb6-5" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb6-6"><a href="#cb6-6" aria-hidden="true" tabindex="-1"></a><span class="bu">console</span><span class="op">.</span><span class="fu">log</span>(a)<span class="op">;</span> <span class="co">// 2</span></span></code></pre></div>
<p><code>a ??= b</code> 的一个例子：</p>
<div class="sourceCode" id="cb7"><pre class="sourceCode js"><code class="sourceCode javascript"><span id="cb7-1"><a href="#cb7-1" aria-hidden="true" tabindex="-1"></a><span class="kw">var</span> a<span class="op">;</span>  </span>
<span id="cb7-2"><a href="#cb7-2" aria-hidden="true" tabindex="-1"></a><span class="kw">var</span> b <span class="op">=</span> <span class="dv">2</span><span class="op">;</span>   </span>
<span id="cb7-3"><a href="#cb7-3" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb7-4"><a href="#cb7-4" aria-hidden="true" tabindex="-1"></a>a <span class="op">??=</span> b<span class="op">;</span>   </span>
<span id="cb7-5"><a href="#cb7-5" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb7-6"><a href="#cb7-6" aria-hidden="true" tabindex="-1"></a><span class="bu">console</span><span class="op">.</span><span class="fu">log</span>(a)<span class="op">;</span> <span class="co">// 2</span></span></code></pre></div>
<h3 id="数字分隔符">4. 数字分隔符</h3>
<p>现在，我们可以使用 <strong>下划线（<code>_</code>）</strong>
作为数字文字和 bigInt
文字的分隔符。这将帮助开发人员提高其数字文字的可读性（“下划线”基本上会充当我们平日生活中书写数字时候所用的“逗号”（用于在不同的数字组之间提供分隔））。</p>
<div class="sourceCode" id="cb8"><pre class="sourceCode js"><code class="sourceCode javascript"><span id="cb8-1"><a href="#cb8-1" aria-hidden="true" tabindex="-1"></a><span class="kw">let</span> budget <span class="op">=</span> <span class="dv">1000000000000</span><span class="op">;</span> <span class="co">// 可以这样写：</span></span>
<span id="cb8-2"><a href="#cb8-2" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb8-3"><a href="#cb8-3" aria-hidden="true" tabindex="-1"></a><span class="kw">let</span> budget <span class="op">=</span> <span class="dv">1_000_000_000_000</span><span class="op">;</span> </span>
<span id="cb8-4"><a href="#cb8-4" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb8-5"><a href="#cb8-5" aria-hidden="true" tabindex="-1"></a><span class="bu">console</span><span class="op">.</span><span class="fu">log</span>(budget)<span class="op">;</span> <span class="co">// 会打印正常数字：</span></span>
<span id="cb8-6"><a href="#cb8-6" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb8-7"><a href="#cb8-7" aria-hidden="true" tabindex="-1"></a><span class="co">// 输出：</span></span>
<span id="cb8-8"><a href="#cb8-8" aria-hidden="true" tabindex="-1"></a><span class="co">// 1000000000000</span></span></code></pre></div>
<p>希望本文能帮助您了解 ECMAScript
的最新版本。感谢您的阅读，如有任何疑问，请随时发表评论。</p>
<p>参考资料：</p>
<ul>
<li><a href="https://dev.to/faithfulojebiyi/new-features-in-ecmascript-2021-with-code-examples-302h">https://dev.to/faithfulojebiyi/new-features-in-ecmascript-2021-with-code-examples-302h</a></li>
<li><a href="https://2ality.com/2020/09/ecmascript-2021.html">https://2ality.com/2020/09/ecmascript-2021.html</a></li>
</ul>]]></content>
      <categories>
        <category>Computer Science</category>
        <category>Backend</category>
        <category>ECMAScript</category>
      </categories>
      <tags>
        <tag>Computer Science</tag>
        <tag>Backend</tag>
        <tag>ECMAScript</tag>
      </tags>
  </entry>
  <entry>
    <title>Web 开发者应该避免的 5 个 CSS 的做法</title>
    <url>/2021/05/17/computer%20science/frontend/5-css-practices-to-avoid-as-a-web-developer/</url>
    <content><![CDATA[<blockquote>
<ul>
<li>原文地址：<a href="https://betterprogramming.pub/5-css-practices-to-avoid-as-a-web-developer-1b7553c05131">5
CSS Practices To Avoid as a Web Developer</a></li>
<li>原文作者：<a href="https://medium.com/@alexey-shepelev">Alexey
Shepelev</a></li>
<li>译者：<a href="https://github.com/PassionPenguin">霜羽
Hoarfroster</a></li>
<li>校对者：<a href="https://github.com/KimYangOfCat">KimYang</a>、<a href="https://github.com/Chorer">Chorer</a></li>
</ul>
</blockquote>
<figure>
<img src="https://cdn-images-1.medium.com/max/9874/1*0Ca38BL7C5MRI0qsdAQT3Q.jpeg" alt="图源 Pankaj Patel，上传至 Unsplash.">
<figcaption aria-hidden="true">图源 <a href="https://unsplash.com/@pankajpatel">Pankaj Patel</a>，上传至 <a href="https://unsplash.com/?utm_source=medium&amp;utm_medium=referral">Unsplash</a>.</figcaption>
</figure>
<p>有人认为 CSS 很难学习，觉得 CSS
有很多的坑，甚至还有一点儿魔幻，难以理解，很容易会搬起石头砸自己的脚。对此我感到难过，毕竟，我可不这么认为。</p>
<p>在考虑了可以做什么之后，我提出了五个我挺讨厌的 CSS
的做法，希望帮助大家避免这些习惯。</p>
<h2 id="设置内外边距然后将其重置">1. 设置内外边距，然后将其重置</h2>
<p>我经常看到人们为所有元素设置内外边距，然后为第一个元素或者最后一个元素清除刚刚写的边距。我不知道为什么你非要在一条规则就可以解决问题的情况下写两条规则。一次为所有必需的元素设置边距明显容易得多！</p>
<p>为简化 CSS，你可以选用以下几种选择器：<code>nth-child</code> 或
<code>nth-of-type</code> 选择器，还有 <code>:not()</code>
伪类或相邻元素组合器（即 <code>+</code>）。</p>
<p>不要这么写：</p>
<div class="sourceCode" id="cb1"><pre class="sourceCode css"><code class="sourceCode css"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a><span class="fu">.item</span> &#123;</span>
<span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a>    <span class="kw">margin-right</span>: <span class="dv">1.6</span><span class="dt">rem</span><span class="op">;</span></span>
<span id="cb1-3"><a href="#cb1-3" aria-hidden="true" tabindex="-1"></a>&#125;</span>
<span id="cb1-4"><a href="#cb1-4" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-5"><a href="#cb1-5" aria-hidden="true" tabindex="-1"></a><span class="fu">.item</span><span class="in">:last-child</span> &#123;</span>
<span id="cb1-6"><a href="#cb1-6" aria-hidden="true" tabindex="-1"></a>    <span class="kw">margin-right</span>: <span class="dv">0</span><span class="op">;</span></span>
<span id="cb1-7"><a href="#cb1-7" aria-hidden="true" tabindex="-1"></a>&#125;</span></code></pre></div>
<p>你可以这么写：</p>
<div class="sourceCode" id="cb2"><pre class="sourceCode css"><code class="sourceCode css"><span id="cb2-1"><a href="#cb2-1" aria-hidden="true" tabindex="-1"></a><span class="fu">.item</span><span class="in">:not(</span>:last-child<span class="in">)</span> &#123;</span>
<span id="cb2-2"><a href="#cb2-2" aria-hidden="true" tabindex="-1"></a>    <span class="kw">margin-right</span>: <span class="dv">1.6</span><span class="dt">rem</span><span class="op">;</span></span>
<span id="cb2-3"><a href="#cb2-3" aria-hidden="true" tabindex="-1"></a>&#125;</span></code></pre></div>
<p>或这样写：</p>
<div class="sourceCode" id="cb3"><pre class="sourceCode css"><code class="sourceCode css"><span id="cb3-1"><a href="#cb3-1" aria-hidden="true" tabindex="-1"></a><span class="fu">.item</span><span class="in">:nth-child(n+2)</span> &#123;</span>
<span id="cb3-2"><a href="#cb3-2" aria-hidden="true" tabindex="-1"></a>    <span class="kw">margin-left</span>: <span class="dv">1.6</span><span class="dt">rem</span><span class="op">;</span></span>
<span id="cb3-3"><a href="#cb3-3" aria-hidden="true" tabindex="-1"></a>&#125;</span></code></pre></div>
<p>或者用：</p>
<div class="sourceCode" id="cb4"><pre class="sourceCode css"><code class="sourceCode css"><span id="cb4-1"><a href="#cb4-1" aria-hidden="true" tabindex="-1"></a><span class="fu">.item</span> <span class="op">+</span> <span class="fu">.item</span> &#123;</span>
<span id="cb4-2"><a href="#cb4-2" aria-hidden="true" tabindex="-1"></a>    <span class="kw">margin-left</span>: <span class="dv">1.6</span><span class="dt">rem</span><span class="op">;</span></span>
<span id="cb4-3"><a href="#cb4-3" aria-hidden="true" tabindex="-1"></a>&#125;</span></code></pre></div>
<h2 id="为-position-为-fixed-或-absolute-的元素添加-displayblock">2. 为
<code>position</code> 为 <code>fixed</code> 或 <code>absolute</code>
的元素添加 <code>display:block</code></h2>
<p>你知道吗？其实你无需为 <code>position</code> 为 <code>fixed</code> 或
<code>absolute</code> 的元素添加
<code>display:block</code>，因为这是默认发生的。</p>
<p>另外，如果你在这些元素上使用 <code>inline-*</code>
值，它们将按以下方式更改：</p>
<ul>
<li><code>inline</code>、<code>inline-block</code> -&gt;
<code>block</code></li>
<li><code>inline-flex</code> -&gt; <code>flex</code></li>
<li><code>inline-grid</code> -&gt; <code>grid</code></li>
<li><code>inline-table</code> -&gt; <code>table</code></li>
</ul>
<p>因此，对于 <code>position</code> 为 <code>fixed</code> 或
<code>absolute</code> 的元素，你只需在要使用 flex 布局或者 grid
布局的时候设置 <code>display</code>。</p>
<p>不要这样写：</p>
<div class="sourceCode" id="cb5"><pre class="sourceCode css"><code class="sourceCode css"><span id="cb5-1"><a href="#cb5-1" aria-hidden="true" tabindex="-1"></a><span class="fu">.button</span><span class="in">::before</span> &#123;</span>
<span id="cb5-2"><a href="#cb5-2" aria-hidden="true" tabindex="-1"></a>    <span class="kw">content</span>: <span class="st">""</span><span class="op">;</span></span>
<span id="cb5-3"><a href="#cb5-3" aria-hidden="true" tabindex="-1"></a>    <span class="kw">position</span>: <span class="dv">absolute</span><span class="op">;</span></span>
<span id="cb5-4"><a href="#cb5-4" aria-hidden="true" tabindex="-1"></a>    <span class="kw">display</span>: <span class="dv">block</span><span class="op">;</span></span>
<span id="cb5-5"><a href="#cb5-5" aria-hidden="true" tabindex="-1"></a>&#125;</span></code></pre></div>
<p>或者不要这样写：</p>
<div class="sourceCode" id="cb6"><pre class="sourceCode css"><code class="sourceCode css"><span id="cb6-1"><a href="#cb6-1" aria-hidden="true" tabindex="-1"></a><span class="fu">.button</span><span class="in">::before</span> &#123;</span>
<span id="cb6-2"><a href="#cb6-2" aria-hidden="true" tabindex="-1"></a>    <span class="kw">content</span>: <span class="st">""</span><span class="op">;</span></span>
<span id="cb6-3"><a href="#cb6-3" aria-hidden="true" tabindex="-1"></a>    <span class="kw">position</span>: <span class="dv">fixed</span><span class="op">;</span></span>
<span id="cb6-4"><a href="#cb6-4" aria-hidden="true" tabindex="-1"></a>    <span class="kw">display</span>: <span class="dv">block</span><span class="op">;</span></span>
<span id="cb6-5"><a href="#cb6-5" aria-hidden="true" tabindex="-1"></a>&#125;</span></code></pre></div>
<p>直接这样：</p>
<div class="sourceCode" id="cb7"><pre class="sourceCode css"><code class="sourceCode css"><span id="cb7-1"><a href="#cb7-1" aria-hidden="true" tabindex="-1"></a><span class="fu">.button</span><span class="in">::before</span> &#123;</span>
<span id="cb7-2"><a href="#cb7-2" aria-hidden="true" tabindex="-1"></a>    <span class="kw">content</span>: <span class="st">""</span><span class="op">;</span></span>
<span id="cb7-3"><a href="#cb7-3" aria-hidden="true" tabindex="-1"></a>    <span class="kw">position</span>: <span class="dv">absolute</span><span class="op">;</span></span>
<span id="cb7-4"><a href="#cb7-4" aria-hidden="true" tabindex="-1"></a>&#125;</span></code></pre></div>
<p>或者这样写：</p>
<div class="sourceCode" id="cb8"><pre class="sourceCode css"><code class="sourceCode css"><span id="cb8-1"><a href="#cb8-1" aria-hidden="true" tabindex="-1"></a><span class="fu">.button</span><span class="in">::before</span> &#123;</span>
<span id="cb8-2"><a href="#cb8-2" aria-hidden="true" tabindex="-1"></a>    <span class="kw">content</span>: <span class="st">""</span><span class="op">;</span></span>
<span id="cb8-3"><a href="#cb8-3" aria-hidden="true" tabindex="-1"></a>    <span class="kw">position</span>: <span class="dv">fixed</span><span class="op">;</span></span>
<span id="cb8-4"><a href="#cb8-4" aria-hidden="true" tabindex="-1"></a>&#125;</span></code></pre></div>
<h2 id="使用-transform-translate-50--50-实现居中">3. 使用
<code>transform: translate(-50%, -50%)</code> 实现居中</h2>
<p>曾几何时，有一个非常普遍的问题让开发者们烦恼不已。这种情况一直持续到
2015 年，而在此之前，该问题的所有解决方案或多或少都有毛病。这个问题就是
—— 将未指定高度的元素在水平和竖直方向居中。</p>
<p>特别地，一种解决方案是结合使用绝对定位和 <code>transform</code>
属性。此技术在基于 Chromium 的浏览器中会导致文本的模糊问题。</p>
<p>但是在引入 <code>flexbox</code>
之后，我认为这个解决方法已不再适用，毕竟这个方法存在文本模糊的问题，而且我们还得使用五个属性才能实现居中。现在我想向大家分享一个技巧，缩减代码为两个属性。</p>
<p>我们可以在 <code>flex</code> 容器内使用
<code>margin: auto</code>（只有这两个属性，仅此而已！）。浏览器会自动将元素居中。</p>
<p>不要这样写：</p>
<div class="sourceCode" id="cb9"><pre class="sourceCode css"><code class="sourceCode css"><span id="cb9-1"><a href="#cb9-1" aria-hidden="true" tabindex="-1"></a><span class="fu">.parent</span> &#123;</span>
<span id="cb9-2"><a href="#cb9-2" aria-hidden="true" tabindex="-1"></a>    <span class="kw">position</span>: <span class="dv">relative</span><span class="op">;</span></span>
<span id="cb9-3"><a href="#cb9-3" aria-hidden="true" tabindex="-1"></a>&#125;</span>
<span id="cb9-4"><a href="#cb9-4" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb9-5"><a href="#cb9-5" aria-hidden="true" tabindex="-1"></a><span class="fu">.child</span> &#123;</span>
<span id="cb9-6"><a href="#cb9-6" aria-hidden="true" tabindex="-1"></a>    <span class="kw">position</span>: <span class="dv">absolute</span><span class="op">;</span></span>
<span id="cb9-7"><a href="#cb9-7" aria-hidden="true" tabindex="-1"></a>    <span class="kw">top</span>: <span class="dv">50</span><span class="dt">%</span><span class="op">;</span></span>
<span id="cb9-8"><a href="#cb9-8" aria-hidden="true" tabindex="-1"></a>    <span class="kw">left</span>: <span class="dv">50</span><span class="dt">%</span><span class="op">;</span></span>
<span id="cb9-9"><a href="#cb9-9" aria-hidden="true" tabindex="-1"></a>    <span class="kw">transform</span>: <span class="fu">translate(</span><span class="dv">-50</span><span class="dt">%</span><span class="op">,</span> <span class="dv">-50</span><span class="dt">%</span><span class="fu">)</span><span class="op">;</span></span>
<span id="cb9-10"><a href="#cb9-10" aria-hidden="true" tabindex="-1"></a>&#125;</span></code></pre></div>
<p>直接这样写：</p>
<div class="sourceCode" id="cb10"><pre class="sourceCode css"><code class="sourceCode css"><span id="cb10-1"><a href="#cb10-1" aria-hidden="true" tabindex="-1"></a><span class="fu">.parent</span> &#123;</span>
<span id="cb10-2"><a href="#cb10-2" aria-hidden="true" tabindex="-1"></a>    <span class="kw">display</span>: flex<span class="op">;</span></span>
<span id="cb10-3"><a href="#cb10-3" aria-hidden="true" tabindex="-1"></a>&#125;</span>
<span id="cb10-4"><a href="#cb10-4" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb10-5"><a href="#cb10-5" aria-hidden="true" tabindex="-1"></a><span class="fu">.child</span> &#123;</span>
<span id="cb10-6"><a href="#cb10-6" aria-hidden="true" tabindex="-1"></a>    <span class="kw">margin</span>: <span class="bu">auto</span><span class="op">;</span></span>
<span id="cb10-7"><a href="#cb10-7" aria-hidden="true" tabindex="-1"></a>&#125;</span></code></pre></div>
<h2 id="为块状元素使用-width-100">4. 为块状元素使用
<code>width: 100%</code></h2>
<p>我们经常使用 <code>flexbox</code>
创建一个多列网格，然后转换为单列网格。</p>
<p>为了将多列网格转换为单列网格，开发人员使用了
<code>width：100％</code>。我不明白他们为什么这么做 ——
网格元素是块元素，默认情况下的宽度就是
<code>100%</code>，而无需使用其他属性。</p>
<p>因此，我们不需要使用
<code>width：100％</code>，而是应该编写媒体查询，以便
<code>flexbox</code> 仅用于创建多列网格。</p>
<p>不要这样写：</p>
<div class="sourceCode" id="cb11"><pre class="sourceCode html"><code class="sourceCode html"><span id="cb11-1"><a href="#cb11-1" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb11-2"><a href="#cb11-2" aria-hidden="true" tabindex="-1"></a><span class="kw">&lt;div</span> <span class="er">class</span><span class="ot">=</span><span class="st">"parent"</span><span class="kw">&gt;</span></span>
<span id="cb11-3"><a href="#cb11-3" aria-hidden="true" tabindex="-1"></a>    <span class="kw">&lt;div</span> <span class="er">class</span><span class="ot">=</span><span class="st">"child"</span><span class="kw">&gt;</span>Item 1<span class="kw">&lt;/div&gt;</span></span>
<span id="cb11-4"><a href="#cb11-4" aria-hidden="true" tabindex="-1"></a>    <span class="kw">&lt;div</span> <span class="er">class</span><span class="ot">=</span><span class="st">"child"</span><span class="kw">&gt;</span>Item 2<span class="kw">&lt;/div&gt;</span></span>
<span id="cb11-5"><a href="#cb11-5" aria-hidden="true" tabindex="-1"></a>    <span class="kw">&lt;div</span> <span class="er">class</span><span class="ot">=</span><span class="st">"child"</span><span class="kw">&gt;</span>Item 3<span class="kw">&lt;/div&gt;</span></span>
<span id="cb11-6"><a href="#cb11-6" aria-hidden="true" tabindex="-1"></a>    <span class="kw">&lt;div</span> <span class="er">class</span><span class="ot">=</span><span class="st">"child"</span><span class="kw">&gt;</span>Item 4<span class="kw">&lt;/div&gt;</span></span>
<span id="cb11-7"><a href="#cb11-7" aria-hidden="true" tabindex="-1"></a><span class="kw">&lt;/div&gt;</span></span></code></pre></div>
<div class="sourceCode" id="cb12"><pre class="sourceCode css"><code class="sourceCode css"><span id="cb12-1"><a href="#cb12-1" aria-hidden="true" tabindex="-1"></a><span class="fu">.parent</span> &#123;</span>
<span id="cb12-2"><a href="#cb12-2" aria-hidden="true" tabindex="-1"></a>    <span class="kw">display</span>: flex<span class="op">;</span></span>
<span id="cb12-3"><a href="#cb12-3" aria-hidden="true" tabindex="-1"></a>    <span class="kw">flex-wrap</span>: wrap<span class="op">;</span></span>
<span id="cb12-4"><a href="#cb12-4" aria-hidden="true" tabindex="-1"></a>&#125;</span>
<span id="cb12-5"><a href="#cb12-5" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb12-6"><a href="#cb12-6" aria-hidden="true" tabindex="-1"></a><span class="fu">.child</span> &#123;</span>
<span id="cb12-7"><a href="#cb12-7" aria-hidden="true" tabindex="-1"></a>    <span class="kw">width</span>: <span class="dv">100</span><span class="dt">%</span><span class="op">;</span></span>
<span id="cb12-8"><a href="#cb12-8" aria-hidden="true" tabindex="-1"></a>&#125;</span>
<span id="cb12-9"><a href="#cb12-9" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb12-10"><a href="#cb12-10" aria-hidden="true" tabindex="-1"></a><span class="im">@media</span> (<span class="kw">min-width</span>: <span class="dv">1024</span><span class="dt">px</span>) &#123;</span>
<span id="cb12-11"><a href="#cb12-11" aria-hidden="true" tabindex="-1"></a>    <span class="fu">.child</span> &#123;</span>
<span id="cb12-12"><a href="#cb12-12" aria-hidden="true" tabindex="-1"></a>        <span class="kw">width</span>: <span class="dv">25</span><span class="dt">%</span><span class="op">;</span></span>
<span id="cb12-13"><a href="#cb12-13" aria-hidden="true" tabindex="-1"></a>    &#125;</span>
<span id="cb12-14"><a href="#cb12-14" aria-hidden="true" tabindex="-1"></a>&#125;</span></code></pre></div>
<p>直接这样写：</p>
<div class="sourceCode" id="cb13"><pre class="sourceCode html"><code class="sourceCode html"><span id="cb13-1"><a href="#cb13-1" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb13-2"><a href="#cb13-2" aria-hidden="true" tabindex="-1"></a><span class="kw">&lt;div</span> <span class="er">class</span><span class="ot">=</span><span class="st">"parent"</span><span class="kw">&gt;</span></span>
<span id="cb13-3"><a href="#cb13-3" aria-hidden="true" tabindex="-1"></a>    <span class="kw">&lt;div</span> <span class="er">class</span><span class="ot">=</span><span class="st">"child"</span><span class="kw">&gt;</span>Item 1<span class="kw">&lt;/div&gt;</span></span>
<span id="cb13-4"><a href="#cb13-4" aria-hidden="true" tabindex="-1"></a>    <span class="kw">&lt;div</span> <span class="er">class</span><span class="ot">=</span><span class="st">"child"</span><span class="kw">&gt;</span>Item 2<span class="kw">&lt;/div&gt;</span></span>
<span id="cb13-5"><a href="#cb13-5" aria-hidden="true" tabindex="-1"></a>    <span class="kw">&lt;div</span> <span class="er">class</span><span class="ot">=</span><span class="st">"child"</span><span class="kw">&gt;</span>Item 3<span class="kw">&lt;/div&gt;</span></span>
<span id="cb13-6"><a href="#cb13-6" aria-hidden="true" tabindex="-1"></a>    <span class="kw">&lt;div</span> <span class="er">class</span><span class="ot">=</span><span class="st">"child"</span><span class="kw">&gt;</span>Item 4<span class="kw">&lt;/div&gt;</span></span>
<span id="cb13-7"><a href="#cb13-7" aria-hidden="true" tabindex="-1"></a><span class="kw">&lt;/div&gt;</span></span></code></pre></div>
<div class="sourceCode" id="cb14"><pre class="sourceCode css"><code class="sourceCode css"><span id="cb14-1"><a href="#cb14-1" aria-hidden="true" tabindex="-1"></a><span class="im">@media</span> (<span class="kw">min-width</span>: <span class="dv">1024</span><span class="dt">px</span>) &#123;</span>
<span id="cb14-2"><a href="#cb14-2" aria-hidden="true" tabindex="-1"></a>    <span class="fu">.parent</span> &#123;</span>
<span id="cb14-3"><a href="#cb14-3" aria-hidden="true" tabindex="-1"></a>        <span class="kw">display</span>: flex<span class="op">;</span></span>
<span id="cb14-4"><a href="#cb14-4" aria-hidden="true" tabindex="-1"></a>        <span class="kw">flex-wrap</span>: wrap<span class="op">;</span></span>
<span id="cb14-5"><a href="#cb14-5" aria-hidden="true" tabindex="-1"></a>    &#125;</span>
<span id="cb14-6"><a href="#cb14-6" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb14-7"><a href="#cb14-7" aria-hidden="true" tabindex="-1"></a>    <span class="fu">.child</span> &#123;</span>
<span id="cb14-8"><a href="#cb14-8" aria-hidden="true" tabindex="-1"></a>        <span class="kw">width</span>: <span class="dv">25</span><span class="dt">%</span><span class="op">;</span></span>
<span id="cb14-9"><a href="#cb14-9" aria-hidden="true" tabindex="-1"></a>    &#125;</span>
<span id="cb14-10"><a href="#cb14-10" aria-hidden="true" tabindex="-1"></a>&#125;</span></code></pre></div>
<h2 id="为-flex-项目设置-display-block">5. 为 flex 项目设置
<code>display: block</code></h2>
<p>使用 flexbox 时，请务必记住，当创建一个 flex
容器（<code>display: flex</code>）时，所有子项（<code>flex</code>
项目）都会被转化为 <code>block</code>。</p>
<p>这意味着所有子项的 <code>display</code> 都会被默认设置为
<code>block</code>。</p>
<ul>
<li><code>inline</code>、<code>inline-block</code> -&gt;
<code>block</code></li>
<li><code>inline-flex</code> -&gt; <code>flex</code></li>
<li><code>inline-grid</code> -&gt; <code>grid</code></li>
<li><code>inline-table</code> -&gt; <code>table</code></li>
</ul>
<p>因此，无需在 <code>flex</code> 项目中添加
<code>display：block</code>，浏览器将为你完成此操作。</p>
<p>不要这样做：</p>
<div class="sourceCode" id="cb15"><pre class="sourceCode css"><code class="sourceCode css"><span id="cb15-1"><a href="#cb15-1" aria-hidden="true" tabindex="-1"></a><span class="fu">.parent</span> &#123;</span>
<span id="cb15-2"><a href="#cb15-2" aria-hidden="true" tabindex="-1"></a>    <span class="kw">display</span>: flex<span class="op">;</span></span>
<span id="cb15-3"><a href="#cb15-3" aria-hidden="true" tabindex="-1"></a>&#125;</span>
<span id="cb15-4"><a href="#cb15-4" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb15-5"><a href="#cb15-5" aria-hidden="true" tabindex="-1"></a><span class="fu">.child</span> &#123;</span>
<span id="cb15-6"><a href="#cb15-6" aria-hidden="true" tabindex="-1"></a>    <span class="kw">display</span>: <span class="dv">block</span><span class="op">;</span></span>
<span id="cb15-7"><a href="#cb15-7" aria-hidden="true" tabindex="-1"></a>&#125;</span></code></pre></div>
<p>你可以直接这样：</p>
<div class="sourceCode" id="cb16"><pre class="sourceCode css"><code class="sourceCode css"><span id="cb16-1"><a href="#cb16-1" aria-hidden="true" tabindex="-1"></a><span class="fu">.parent</span> &#123;</span>
<span id="cb16-2"><a href="#cb16-2" aria-hidden="true" tabindex="-1"></a>    <span class="kw">display</span>: flex<span class="op">;</span></span>
<span id="cb16-3"><a href="#cb16-3" aria-hidden="true" tabindex="-1"></a>&#125;</span></code></pre></div>
<h2 id="小结">小结</h2>
<p>希望在阅读本文后，你能够学会如何避免这些简单的错误并接受我的建议。感谢阅读！</p>]]></content>
      <categories>
        <category>Computer Science</category>
        <category>Frontend</category>
        <category>Styling</category>
      </categories>
      <tags>
        <tag>Computer Science</tag>
        <tag>UI</tag>
        <tag>Frontend</tag>
        <tag>CSS</tag>
      </tags>
  </entry>
  <entry>
    <title>构建和 Telegram 一样的上传动画</title>
    <url>/2021/05/16/computer%20science/android/telegram-like-uploading-animation/</url>
    <content><![CDATA[<blockquote>
<ul>
<li>原文地址：<a href="https://proandroiddev.com/telegram-like-uploading-animation-e284f1404f63">Telegram-like
uploading animation</a></li>
<li>原文作者：<a href="https://programmerr47.medium.com">Michael
Spitsin</a></li>
<li>译者：<a href="https://github.com/PassionPenguin">霜羽
Hoarfroster</a></li>
<li>校对者：<a href="https://github.com/Kimhooo">Kimhooo</a>、<a href="https://github.com/greycodee">greycodee</a></li>
</ul>
</blockquote>
<p><img src="https://miro.medium.com/max/1656/1*Fkn89gxEsTWWefUu1dV0UA.png"></p>
<p>前段时间，我研究了一个新功能：在 app
内部聊天中发送图片。这个功能本身很大，包括了多种东西，但实际上，最初并没有设计上传动画与取消上传的功能。当我用到这部分的时候，我决定增加图片上传动画，所以我们就给他们这个功能吧：)</p>
<p><img src="https://miro.medium.com/max/1528/1*La8YF7kI31hvmawzNVHN6g.gif"></p>
<h2 id="view-vs.-drawable">View vs.&nbsp;Drawable</h2>
<p>其实，这是个好问题。因为如果我们<a href="https://proandroiddev.com/sonar-like-animation-c1e7c5b291bd">看看我的其他一篇关于声纳类动画的文章</a>，我在那里用了一个
<code>Drawable</code>。在我个人看来，<a href="https://stackoverflow.com/questions/12445045/android-custom-drawable-vs-custom-view">StackOverflow</a>
这里就有个很好的简洁的答案。</p>
<blockquote>
<p><code>Drawable</code> 只响应绘制操作，而 View
响应绘制和用户界面，比如触摸事件和关闭屏幕等等。</p>
</blockquote>
<p>现在我们来分析一下，我们想要做什么。我们希望有一条无限旋转的弧线做圆形动画，并且弧线的圆心角不断增加直到圆心角等于
2π。我觉得一个 Drawable
应该能够帮上我的忙，而且实际上我也应该那样做，但我没有。</p>
<p>我没有这样做的原因在上面示例图片中的文字右边那三个小的点点的动画上。我已经用自定义
View
完成了这个动画，并且我已经为无限循环的动画准备了背景。对我来说把动画准备逻辑提取到父
View 中重用，而不是把所有东西都重写成
Drawable，应该是更简单的。所以我并不是说我的解决方案是正确的（其实没有什么是正确的），而是它满足了我的需求。</p>
<h2 id="base-infiniteanimationview">Base InfiniteAnimationView</h2>
<p>为了自己的需要，我将把想要的进度视图分成两个视图：</p>
<ol type="1">
<li><code>ProgressView</code> —— 负责绘制所需的进度 View</li>
<li><code>InfiniteAnimateView</code> —— 抽象
View，它负责动画的准备、启动和停止。由于进度中包含了无限旋转的部分，我们需要了解什么时候需要启动这个动画，什么时候需要停止这个动画</li>
</ol>
<p>在查看了 Android 的 <code>ProgressBar</code> 的<a href="https://android.googlesource.com/platform/frameworks/base/+/master/core/java/android/widget/ProgressBar.java">源代码</a>后，我们可以最终得到这样的结果：</p>
<div class="sourceCode" id="cb1"><pre class="sourceCode kotlin"><code class="sourceCode kotlin"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a><span class="co">// InfiniteAnimateView.kt</span></span>
<span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-3"><a href="#cb1-3" aria-hidden="true" tabindex="-1"></a>abstract <span class="kw">class</span> InfiniteAnimateView @JvmOverloads <span class="kw">constructor</span><span class="op">(</span></span>
<span id="cb1-4"><a href="#cb1-4" aria-hidden="true" tabindex="-1"></a>    <span class="va">context</span><span class="op">:</span> <span class="dt">Context</span><span class="op">,</span> <span class="va">attrs</span><span class="op">:</span> <span class="dt">AttributeSet</span><span class="op">?</span> <span class="op">=</span> null<span class="op">,</span> <span class="va">defStyleAttr</span><span class="op">:</span> <span class="dt">Int</span> <span class="op">=</span> <span class="dv">0</span></span>
<span id="cb1-5"><a href="#cb1-5" aria-hidden="true" tabindex="-1"></a><span class="op">)</span> <span class="op">:</span> <span class="dt">View</span><span class="op">(</span><span class="va">context</span><span class="op">,</span> <span class="va">attrs</span><span class="op">,</span> <span class="va">defStyleAttr</span><span class="op">)</span> <span class="op">&#123;</span></span>
<span id="cb1-6"><a href="#cb1-6" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-7"><a href="#cb1-7" aria-hidden="true" tabindex="-1"></a>    <span class="kw">private</span> <span class="kw">var</span> <span class="va">isAggregatedVisible</span><span class="op">:</span> <span class="kw">Boolean</span> <span class="op">=</span> <span class="kw">false</span></span>
<span id="cb1-8"><a href="#cb1-8" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-9"><a href="#cb1-9" aria-hidden="true" tabindex="-1"></a>    <span class="kw">private</span> <span class="kw">var</span> <span class="va">animation</span><span class="op">:</span> Animator<span class="op">?</span> <span class="op">=</span> <span class="kw">null</span></span>
<span id="cb1-10"><a href="#cb1-10" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-11"><a href="#cb1-11" aria-hidden="true" tabindex="-1"></a>    <span class="kw">override</span> <span class="kw">fun</span> <span class="fu">onVisibilityAggregated</span><span class="op">(</span><span class="va">isVisible</span><span class="op">:</span> <span class="dt">Boolean</span><span class="op">)</span> <span class="op">&#123;</span></span>
<span id="cb1-12"><a href="#cb1-12" aria-hidden="true" tabindex="-1"></a>        <span class="kw">super</span><span class="op">.</span>onVisibilityAggregated<span class="op">(</span>isVisible<span class="op">)</span></span>
<span id="cb1-13"><a href="#cb1-13" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-14"><a href="#cb1-14" aria-hidden="true" tabindex="-1"></a>        <span class="cf">if</span> <span class="op">(</span>isAggregatedVisible <span class="op">!=</span> isVisible<span class="op">)</span> <span class="op">&#123;</span></span>
<span id="cb1-15"><a href="#cb1-15" aria-hidden="true" tabindex="-1"></a>            isAggregatedVisible <span class="op">=</span> isVisible</span>
<span id="cb1-16"><a href="#cb1-16" aria-hidden="true" tabindex="-1"></a>            <span class="cf">if</span> <span class="op">(</span>isVisible<span class="op">)</span> startAnimation<span class="op">()</span> <span class="cf">else</span> stopAnimation<span class="op">()</span></span>
<span id="cb1-17"><a href="#cb1-17" aria-hidden="true" tabindex="-1"></a>        <span class="op">&#125;</span></span>
<span id="cb1-18"><a href="#cb1-18" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#125;</span></span>
<span id="cb1-19"><a href="#cb1-19" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-20"><a href="#cb1-20" aria-hidden="true" tabindex="-1"></a>    <span class="kw">override</span> <span class="kw">fun</span> <span class="fu">onAttachedToWindow</span><span class="op">()</span> <span class="op">&#123;</span></span>
<span id="cb1-21"><a href="#cb1-21" aria-hidden="true" tabindex="-1"></a>        <span class="kw">super</span><span class="op">.</span>onAttachedToWindow<span class="op">()</span></span>
<span id="cb1-22"><a href="#cb1-22" aria-hidden="true" tabindex="-1"></a>        startAnimation<span class="op">()</span></span>
<span id="cb1-23"><a href="#cb1-23" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#125;</span></span>
<span id="cb1-24"><a href="#cb1-24" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-25"><a href="#cb1-25" aria-hidden="true" tabindex="-1"></a>    <span class="kw">override</span> <span class="kw">fun</span> <span class="fu">onDetachedFromWindow</span><span class="op">()</span> <span class="op">&#123;</span></span>
<span id="cb1-26"><a href="#cb1-26" aria-hidden="true" tabindex="-1"></a>        stopAnimation<span class="op">()</span></span>
<span id="cb1-27"><a href="#cb1-27" aria-hidden="true" tabindex="-1"></a>        <span class="kw">super</span><span class="op">.</span>onDetachedFromWindow<span class="op">()</span></span>
<span id="cb1-28"><a href="#cb1-28" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#125;</span></span>
<span id="cb1-29"><a href="#cb1-29" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-30"><a href="#cb1-30" aria-hidden="true" tabindex="-1"></a>    <span class="kw">private</span> <span class="kw">fun</span> <span class="fu">startAnimation</span><span class="op">()</span> <span class="op">&#123;</span></span>
<span id="cb1-31"><a href="#cb1-31" aria-hidden="true" tabindex="-1"></a>        <span class="cf">if</span> <span class="op">(!</span>isVisible <span class="op">||</span> windowVisibility <span class="op">!=</span> VISIBLE<span class="op">)</span> <span class="kw">return</span></span>
<span id="cb1-32"><a href="#cb1-32" aria-hidden="true" tabindex="-1"></a>        <span class="cf">if</span> <span class="op">(</span>animation <span class="op">==</span> <span class="kw">null</span><span class="op">)</span> animation <span class="op">=</span> createAnimation<span class="op">().</span>apply <span class="op">&#123;</span> start<span class="op">()</span> <span class="op">&#125;</span></span>
<span id="cb1-33"><a href="#cb1-33" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#125;</span></span>
<span id="cb1-34"><a href="#cb1-34" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-35"><a href="#cb1-35" aria-hidden="true" tabindex="-1"></a>    <span class="kw">protected</span> abstract <span class="kw">fun</span> <span class="fu">createAnimation</span><span class="op">():</span> <span class="dt">Animator</span></span>
<span id="cb1-36"><a href="#cb1-36" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-37"><a href="#cb1-37" aria-hidden="true" tabindex="-1"></a>    <span class="kw">private</span> <span class="kw">fun</span> <span class="fu">stopAnimation</span><span class="op">()</span> <span class="op">&#123;</span></span>
<span id="cb1-38"><a href="#cb1-38" aria-hidden="true" tabindex="-1"></a>        animation<span class="op">?.</span>cancel<span class="op">()</span></span>
<span id="cb1-39"><a href="#cb1-39" aria-hidden="true" tabindex="-1"></a>        animation <span class="op">=</span> <span class="kw">null</span></span>
<span id="cb1-40"><a href="#cb1-40" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#125;</span></span>
<span id="cb1-41"><a href="#cb1-41" aria-hidden="true" tabindex="-1"></a><span class="op">&#125;</span></span></code></pre></div>
<p>遗憾的是，主要出于 <code>onVisibilityAggregated</code>
方法的原因，它并无法工作 —— 因为[这个方法在 API 24
以上才被支持](https://developer.android.com/reference/android/view/View#onVisibilityAggregated(boolean%29)。此外，我还遇到了
<code>!isVisible || windowVisibility != VISIBLE</code>
上的问题，当视图是可见的，但它的容器却不可见。所以我决定重写这个：</p>
<div class="sourceCode" id="cb2"><pre class="sourceCode kotlin"><code class="sourceCode kotlin"><span id="cb2-1"><a href="#cb2-1" aria-hidden="true" tabindex="-1"></a><span class="co">// InfiniteAnimateView.kt</span></span>
<span id="cb2-2"><a href="#cb2-2" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb2-3"><a href="#cb2-3" aria-hidden="true" tabindex="-1"></a>abstract <span class="kw">class</span> InfiniteAnimateView @JvmOverloads <span class="kw">constructor</span><span class="op">(</span></span>
<span id="cb2-4"><a href="#cb2-4" aria-hidden="true" tabindex="-1"></a>    <span class="va">context</span><span class="op">:</span> <span class="dt">Context</span><span class="op">,</span> <span class="va">attrs</span><span class="op">:</span> <span class="dt">AttributeSet</span><span class="op">?</span> <span class="op">=</span> null<span class="op">,</span> <span class="va">defStyleAttr</span><span class="op">:</span> <span class="dt">Int</span> <span class="op">=</span> <span class="dv">0</span></span>
<span id="cb2-5"><a href="#cb2-5" aria-hidden="true" tabindex="-1"></a><span class="op">)</span> <span class="op">:</span> <span class="dt">View</span><span class="op">(</span><span class="va">context</span><span class="op">,</span> <span class="va">attrs</span><span class="op">,</span> <span class="va">defStyleAttr</span><span class="op">)</span> <span class="op">&#123;</span></span>
<span id="cb2-6"><a href="#cb2-6" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb2-7"><a href="#cb2-7" aria-hidden="true" tabindex="-1"></a>    <span class="kw">private</span> <span class="kw">var</span> <span class="va">animation</span><span class="op">:</span> Animator<span class="op">?</span> <span class="op">=</span> <span class="kw">null</span></span>
<span id="cb2-8"><a href="#cb2-8" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb2-9"><a href="#cb2-9" aria-hidden="true" tabindex="-1"></a>    <span class="co">/**</span></span>
<span id="cb2-10"><a href="#cb2-10" aria-hidden="true" tabindex="-1"></a><span class="co">     * 我们不可以使用 `onVisibilityAggregated` 方法，因为它只在 SDK 24 以上被支持，而我们的最低 SDK 是 21</span></span>
<span id="cb2-11"><a href="#cb2-11" aria-hidden="true" tabindex="-1"></a><span class="co">     */</span></span>
<span id="cb2-12"><a href="#cb2-12" aria-hidden="true" tabindex="-1"></a>    <span class="kw">override</span> <span class="kw">fun</span> <span class="fu">onVisibilityChanged</span><span class="op">(</span><span class="va">changedView</span><span class="op">:</span> <span class="dt">View</span><span class="op">,</span> <span class="va">visibility</span><span class="op">:</span> <span class="dt">Int</span><span class="op">)</span> <span class="op">&#123;</span></span>
<span id="cb2-13"><a href="#cb2-13" aria-hidden="true" tabindex="-1"></a>        <span class="kw">super</span><span class="op">.</span>onVisibilityChanged<span class="op">(</span>changedView<span class="op">,</span> visibility<span class="op">)</span></span>
<span id="cb2-14"><a href="#cb2-14" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb2-15"><a href="#cb2-15" aria-hidden="true" tabindex="-1"></a>        <span class="cf">if</span> <span class="op">(</span>isShown<span class="op">)</span> startAnimation<span class="op">()</span> <span class="cf">else</span> stopAnimation<span class="op">()</span></span>
<span id="cb2-16"><a href="#cb2-16" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#125;</span></span>
<span id="cb2-17"><a href="#cb2-17" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb2-18"><a href="#cb2-18" aria-hidden="true" tabindex="-1"></a>    <span class="kw">override</span> <span class="kw">fun</span> <span class="fu">onAttachedToWindow</span><span class="op">()</span> <span class="op">&#123;</span></span>
<span id="cb2-19"><a href="#cb2-19" aria-hidden="true" tabindex="-1"></a>        <span class="kw">super</span><span class="op">.</span>onAttachedToWindow<span class="op">()</span></span>
<span id="cb2-20"><a href="#cb2-20" aria-hidden="true" tabindex="-1"></a>        startAnimation<span class="op">()</span></span>
<span id="cb2-21"><a href="#cb2-21" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#125;</span></span>
<span id="cb2-22"><a href="#cb2-22" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb2-23"><a href="#cb2-23" aria-hidden="true" tabindex="-1"></a>    <span class="kw">override</span> <span class="kw">fun</span> <span class="fu">onDetachedFromWindow</span><span class="op">()</span> <span class="op">&#123;</span></span>
<span id="cb2-24"><a href="#cb2-24" aria-hidden="true" tabindex="-1"></a>        stopAnimation<span class="op">()</span></span>
<span id="cb2-25"><a href="#cb2-25" aria-hidden="true" tabindex="-1"></a>        <span class="kw">super</span><span class="op">.</span>onDetachedFromWindow<span class="op">()</span></span>
<span id="cb2-26"><a href="#cb2-26" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#125;</span></span>
<span id="cb2-27"><a href="#cb2-27" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb2-28"><a href="#cb2-28" aria-hidden="true" tabindex="-1"></a>    <span class="kw">private</span> <span class="kw">fun</span> <span class="fu">startAnimation</span><span class="op">()</span> <span class="op">&#123;</span></span>
<span id="cb2-29"><a href="#cb2-29" aria-hidden="true" tabindex="-1"></a>        <span class="cf">if</span> <span class="op">(!</span>isShown<span class="op">)</span> <span class="kw">return</span></span>
<span id="cb2-30"><a href="#cb2-30" aria-hidden="true" tabindex="-1"></a>        <span class="cf">if</span> <span class="op">(</span>animation <span class="op">==</span> <span class="kw">null</span><span class="op">)</span> animation <span class="op">=</span> createAnimation<span class="op">().</span>apply <span class="op">&#123;</span> start<span class="op">()</span> <span class="op">&#125;</span></span>
<span id="cb2-31"><a href="#cb2-31" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#125;</span></span>
<span id="cb2-32"><a href="#cb2-32" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb2-33"><a href="#cb2-33" aria-hidden="true" tabindex="-1"></a>    <span class="kw">protected</span> abstract <span class="kw">fun</span> <span class="fu">createAnimation</span><span class="op">():</span> <span class="dt">Animator</span></span>
<span id="cb2-34"><a href="#cb2-34" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb2-35"><a href="#cb2-35" aria-hidden="true" tabindex="-1"></a>    <span class="kw">private</span> <span class="kw">fun</span> <span class="fu">stopAnimation</span><span class="op">()</span> <span class="op">&#123;</span></span>
<span id="cb2-36"><a href="#cb2-36" aria-hidden="true" tabindex="-1"></a>        animation<span class="op">?.</span>cancel<span class="op">()</span></span>
<span id="cb2-37"><a href="#cb2-37" aria-hidden="true" tabindex="-1"></a>        animation <span class="op">=</span> <span class="kw">null</span></span>
<span id="cb2-38"><a href="#cb2-38" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#125;</span></span>
<span id="cb2-39"><a href="#cb2-39" aria-hidden="true" tabindex="-1"></a><span class="op">&#125;</span></span></code></pre></div>
<p>不幸的是，这也没有用（虽然我觉得它应该能够正常工作的）。说实话，我不知道问题的具体原因。可能在普通的情况下会有效，但是对于
<code>RecyclerView</code> 就不行了。前段时间我就遇到了这个问题：如果使用
<code>isShown</code> 来跟踪一些东西是否在 <code>RecyclerView</code>
中显示。因此可能我的最终解决方案并不正确，但至少在我的方案中，它能按照我的期望工作：</p>
<div class="sourceCode" id="cb3"><pre class="sourceCode kotlin"><code class="sourceCode kotlin"><span id="cb3-1"><a href="#cb3-1" aria-hidden="true" tabindex="-1"></a><span class="co">// InfiniteAnimateView.kt</span></span>
<span id="cb3-2"><a href="#cb3-2" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb3-3"><a href="#cb3-3" aria-hidden="true" tabindex="-1"></a>abstract <span class="kw">class</span> InfiniteAnimateView @JvmOverloads <span class="kw">constructor</span><span class="op">(</span></span>
<span id="cb3-4"><a href="#cb3-4" aria-hidden="true" tabindex="-1"></a>    <span class="va">context</span><span class="op">:</span> <span class="dt">Context</span><span class="op">,</span> <span class="va">attrs</span><span class="op">:</span> <span class="dt">AttributeSet</span><span class="op">?</span> <span class="op">=</span> null<span class="op">,</span> <span class="va">defStyleAttr</span><span class="op">:</span> <span class="dt">Int</span> <span class="op">=</span> <span class="dv">0</span></span>
<span id="cb3-5"><a href="#cb3-5" aria-hidden="true" tabindex="-1"></a><span class="op">)</span> <span class="op">:</span> <span class="dt">View</span><span class="op">(</span><span class="va">context</span><span class="op">,</span> <span class="va">attrs</span><span class="op">,</span> <span class="va">defStyleAttr</span><span class="op">)</span> <span class="op">&#123;</span></span>
<span id="cb3-6"><a href="#cb3-6" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb3-7"><a href="#cb3-7" aria-hidden="true" tabindex="-1"></a>    <span class="kw">private</span> <span class="kw">var</span> <span class="va">animation</span><span class="op">:</span> Animator<span class="op">?</span> <span class="op">=</span> <span class="kw">null</span></span>
<span id="cb3-8"><a href="#cb3-8" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb3-9"><a href="#cb3-9" aria-hidden="true" tabindex="-1"></a>    <span class="co">/**</span></span>
<span id="cb3-10"><a href="#cb3-10" aria-hidden="true" tabindex="-1"></a><span class="co">     * 我们不可以使用 `onVisibilityAggregated` 方法，因为它只在 SDK 24 以上被支持，而我们的最低 SDK 是 21</span></span>
<span id="cb3-11"><a href="#cb3-11" aria-hidden="true" tabindex="-1"></a><span class="co">     */</span></span>
<span id="cb3-12"><a href="#cb3-12" aria-hidden="true" tabindex="-1"></a>    <span class="kw">override</span> <span class="kw">fun</span> <span class="fu">onVisibilityChanged</span><span class="op">(</span><span class="va">changedView</span><span class="op">:</span> <span class="dt">View</span><span class="op">,</span> <span class="va">visibility</span><span class="op">:</span> <span class="dt">Int</span><span class="op">)</span> <span class="op">&#123;</span></span>
<span id="cb3-13"><a href="#cb3-13" aria-hidden="true" tabindex="-1"></a>        <span class="kw">super</span><span class="op">.</span>onVisibilityChanged<span class="op">(</span>changedView<span class="op">,</span> visibility<span class="op">)</span></span>
<span id="cb3-14"><a href="#cb3-14" aria-hidden="true" tabindex="-1"></a>        <span class="cf">if</span> <span class="op">(</span>isDeepVisible<span class="op">())</span> startAnimation<span class="op">()</span> <span class="cf">else</span> stopAnimation<span class="op">()</span></span>
<span id="cb3-15"><a href="#cb3-15" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#125;</span></span>
<span id="cb3-16"><a href="#cb3-16" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb3-17"><a href="#cb3-17" aria-hidden="true" tabindex="-1"></a>    <span class="kw">override</span> <span class="kw">fun</span> <span class="fu">onAttachedToWindow</span><span class="op">()</span> <span class="op">&#123;</span></span>
<span id="cb3-18"><a href="#cb3-18" aria-hidden="true" tabindex="-1"></a>        <span class="kw">super</span><span class="op">.</span>onAttachedToWindow<span class="op">()</span></span>
<span id="cb3-19"><a href="#cb3-19" aria-hidden="true" tabindex="-1"></a>        startAnimation<span class="op">()</span></span>
<span id="cb3-20"><a href="#cb3-20" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#125;</span></span>
<span id="cb3-21"><a href="#cb3-21" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb3-22"><a href="#cb3-22" aria-hidden="true" tabindex="-1"></a>    <span class="kw">override</span> <span class="kw">fun</span> <span class="fu">onDetachedFromWindow</span><span class="op">()</span> <span class="op">&#123;</span></span>
<span id="cb3-23"><a href="#cb3-23" aria-hidden="true" tabindex="-1"></a>        stopAnimation<span class="op">()</span></span>
<span id="cb3-24"><a href="#cb3-24" aria-hidden="true" tabindex="-1"></a>        <span class="kw">super</span><span class="op">.</span>onDetachedFromWindow<span class="op">()</span></span>
<span id="cb3-25"><a href="#cb3-25" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#125;</span></span>
<span id="cb3-26"><a href="#cb3-26" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb3-27"><a href="#cb3-27" aria-hidden="true" tabindex="-1"></a>    <span class="kw">private</span> <span class="kw">fun</span> <span class="fu">startAnimation</span><span class="op">()</span> <span class="op">&#123;</span></span>
<span id="cb3-28"><a href="#cb3-28" aria-hidden="true" tabindex="-1"></a>        <span class="cf">if</span> <span class="op">(!</span>isAttachedToWindow <span class="op">||</span> <span class="op">!</span>isDeepVisible<span class="op">())</span> <span class="kw">return</span></span>
<span id="cb3-29"><a href="#cb3-29" aria-hidden="true" tabindex="-1"></a>        <span class="cf">if</span> <span class="op">(</span>animation <span class="op">==</span> <span class="kw">null</span><span class="op">)</span> animation <span class="op">=</span> createAnimation<span class="op">().</span>apply <span class="op">&#123;</span> start<span class="op">()</span> <span class="op">&#125;</span></span>
<span id="cb3-30"><a href="#cb3-30" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#125;</span></span>
<span id="cb3-31"><a href="#cb3-31" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb3-32"><a href="#cb3-32" aria-hidden="true" tabindex="-1"></a>    <span class="kw">protected</span> abstract <span class="kw">fun</span> <span class="fu">createAnimation</span><span class="op">():</span> <span class="dt">Animator</span></span>
<span id="cb3-33"><a href="#cb3-33" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb3-34"><a href="#cb3-34" aria-hidden="true" tabindex="-1"></a>    <span class="kw">private</span> <span class="kw">fun</span> <span class="fu">stopAnimation</span><span class="op">()</span> <span class="op">&#123;</span></span>
<span id="cb3-35"><a href="#cb3-35" aria-hidden="true" tabindex="-1"></a>        animation<span class="op">?.</span>cancel<span class="op">()</span></span>
<span id="cb3-36"><a href="#cb3-36" aria-hidden="true" tabindex="-1"></a>        animation <span class="op">=</span> <span class="kw">null</span></span>
<span id="cb3-37"><a href="#cb3-37" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#125;</span></span>
<span id="cb3-38"><a href="#cb3-38" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb3-39"><a href="#cb3-39" aria-hidden="true" tabindex="-1"></a>    <span class="co">/**</span></span>
<span id="cb3-40"><a href="#cb3-40" aria-hidden="true" tabindex="-1"></a><span class="co">     * 可能这个函数上实现了 View.isShown，但我发觉到它有一些问题。</span></span>
<span id="cb3-41"><a href="#cb3-41" aria-hidden="true" tabindex="-1"></a><span class="co">     * 我在 Lottie lib 中也遇到了这些问题。不过因为我们总是没有时间去深入研究</span></span>
<span id="cb3-42"><a href="#cb3-42" aria-hidden="true" tabindex="-1"></a><span class="co">     * 我决定使用了这个简单的方法暂时解决这个问题，只为确保它能够正常运转</span></span>
<span id="cb3-43"><a href="#cb3-43" aria-hidden="true" tabindex="-1"></a><span class="co">     * 我到底需要什么 = =</span></span>
<span id="cb3-44"><a href="#cb3-44" aria-hidden="true" tabindex="-1"></a><span class="co">     *</span></span>
<span id="cb3-45"><a href="#cb3-45" aria-hidden="true" tabindex="-1"></a><span class="co">     * 更新：尝试使用 isShown 代替这个方法，但没有成功。所以如果你知道</span></span>
<span id="cb3-46"><a href="#cb3-46" aria-hidden="true" tabindex="-1"></a><span class="co">     * 如何改进，欢迎评论区讨论一下</span></span>
<span id="cb3-47"><a href="#cb3-47" aria-hidden="true" tabindex="-1"></a><span class="co">     */</span></span>
<span id="cb3-48"><a href="#cb3-48" aria-hidden="true" tabindex="-1"></a>    <span class="kw">private</span> <span class="kw">fun</span> <span class="fu">isDeepVisible</span><span class="op">():</span> <span class="dt">Boolean</span> <span class="op">&#123;</span></span>
<span id="cb3-49"><a href="#cb3-49" aria-hidden="true" tabindex="-1"></a>        <span class="kw">var</span> <span class="va">isVisible</span> <span class="op">=</span> isVisible</span>
<span id="cb3-50"><a href="#cb3-50" aria-hidden="true" tabindex="-1"></a>        <span class="kw">var</span> <span class="va">parent</span> <span class="op">=</span> parentView</span>
<span id="cb3-51"><a href="#cb3-51" aria-hidden="true" tabindex="-1"></a>        <span class="cf">while</span> <span class="op">(</span>parent <span class="op">!=</span> <span class="kw">null</span> <span class="op">&amp;&amp;</span> isVisible<span class="op">)</span> <span class="op">&#123;</span></span>
<span id="cb3-52"><a href="#cb3-52" aria-hidden="true" tabindex="-1"></a>            isVisible <span class="op">=</span> isVisible <span class="op">&amp;&amp;</span> parent<span class="op">.</span>isVisible</span>
<span id="cb3-53"><a href="#cb3-53" aria-hidden="true" tabindex="-1"></a>            parent <span class="op">=</span> parent<span class="op">.</span>parentView</span>
<span id="cb3-54"><a href="#cb3-54" aria-hidden="true" tabindex="-1"></a>        <span class="op">&#125;</span></span>
<span id="cb3-55"><a href="#cb3-55" aria-hidden="true" tabindex="-1"></a>        <span class="kw">return</span> isVisible</span>
<span id="cb3-56"><a href="#cb3-56" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#125;</span></span>
<span id="cb3-57"><a href="#cb3-57" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb3-58"><a href="#cb3-58" aria-hidden="true" tabindex="-1"></a>    <span class="kw">private</span> <span class="kw">val</span> <span class="va">View</span><span class="op">.</span>parentView<span class="op">:</span> ViewGroup<span class="op">?</span> <span class="kw">get</span><span class="op">()</span> <span class="op">=</span> parent <span class="kw">as</span><span class="op">?</span> ViewGroup</span>
<span id="cb3-59"><a href="#cb3-59" aria-hidden="true" tabindex="-1"></a><span class="op">&#125;</span></span></code></pre></div>
<h2 id="进度动画">进度动画</h2>
<h3 id="准备">准备</h3>
<p>那么首先我们来谈谈我们 View
的结构。它应该包含哪些绘画组件？在当前情境下最好的表达方式就是声明不同的
<code>Paint</code>。</p>
<div class="sourceCode" id="cb4"><pre class="sourceCode kotlin"><code class="sourceCode kotlin"><span id="cb4-1"><a href="#cb4-1" aria-hidden="true" tabindex="-1"></a><span class="co">// progress_paints.kt</span></span>
<span id="cb4-2"><a href="#cb4-2" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb4-3"><a href="#cb4-3" aria-hidden="true" tabindex="-1"></a><span class="kw">private</span> <span class="kw">val</span> <span class="va">bgPaint</span> <span class="op">=</span> Paint<span class="op">(</span>Paint<span class="op">.</span>ANTI_ALIAS_FLAG<span class="op">).</span>apply <span class="op">&#123;</span></span>
<span id="cb4-4"><a href="#cb4-4" aria-hidden="true" tabindex="-1"></a>    style <span class="op">=</span> Paint<span class="op">.</span>Style<span class="op">.</span>FILL</span>
<span id="cb4-5"><a href="#cb4-5" aria-hidden="true" tabindex="-1"></a>    color <span class="op">=</span> defaultBgColor</span>
<span id="cb4-6"><a href="#cb4-6" aria-hidden="true" tabindex="-1"></a><span class="op">&#125;</span></span>
<span id="cb4-7"><a href="#cb4-7" aria-hidden="true" tabindex="-1"></a><span class="kw">private</span> <span class="kw">val</span> <span class="va">bgStrokePaint</span> <span class="op">=</span> Paint<span class="op">(</span>Paint<span class="op">.</span>ANTI_ALIAS_FLAG<span class="op">).</span>apply <span class="op">&#123;</span></span>
<span id="cb4-8"><a href="#cb4-8" aria-hidden="true" tabindex="-1"></a>    style <span class="op">=</span> Paint<span class="op">.</span>Style<span class="op">.</span>STROKE</span>
<span id="cb4-9"><a href="#cb4-9" aria-hidden="true" tabindex="-1"></a>    color <span class="op">=</span> defaultBgStrokeColor</span>
<span id="cb4-10"><a href="#cb4-10" aria-hidden="true" tabindex="-1"></a>    strokeWidth <span class="op">=</span> context<span class="op">.</span>resources<span class="op">.</span>getDimension<span class="op">(</span>R<span class="op">.</span>dimen<span class="op">.</span>chat_progress_bg_stroke_width<span class="op">)</span></span>
<span id="cb4-11"><a href="#cb4-11" aria-hidden="true" tabindex="-1"></a><span class="op">&#125;</span></span>
<span id="cb4-12"><a href="#cb4-12" aria-hidden="true" tabindex="-1"></a><span class="kw">private</span> <span class="kw">val</span> <span class="va">progressPaint</span> <span class="op">=</span> Paint<span class="op">(</span>Paint<span class="op">.</span>ANTI_ALIAS_FLAG<span class="op">).</span>apply <span class="op">&#123;</span></span>
<span id="cb4-13"><a href="#cb4-13" aria-hidden="true" tabindex="-1"></a>    style <span class="op">=</span> Paint<span class="op">.</span>Style<span class="op">.</span>STROKE</span>
<span id="cb4-14"><a href="#cb4-14" aria-hidden="true" tabindex="-1"></a>    strokeCap <span class="op">=</span> Paint<span class="op">.</span>Cap<span class="op">.</span>BUTT</span>
<span id="cb4-15"><a href="#cb4-15" aria-hidden="true" tabindex="-1"></a>    strokeWidth <span class="op">=</span> context<span class="op">.</span>resources<span class="op">.</span>getDimension<span class="op">(</span>R<span class="op">.</span>dimen<span class="op">.</span>chat_progress_stroke_width<span class="op">)</span></span>
<span id="cb4-16"><a href="#cb4-16" aria-hidden="true" tabindex="-1"></a>    color <span class="op">=</span> defaultProgressColor</span>
<span id="cb4-17"><a href="#cb4-17" aria-hidden="true" tabindex="-1"></a><span class="op">&#125;</span></span></code></pre></div>
<p>为了展示我将改变笔触的宽度和其他东西，所以你会看到某些方面的不同。这
3 个 <code>Paint</code> 就与 3 个关键部分的进度相关联：</p>
<p><img src="https://miro.medium.com/max/1200/1*UnoyHSg3xYZzyRNwYm35HA.gif"></p>
<p><strong>左：</strong> background; <strong>中：</strong> stroke;
<strong>右：</strong> progress</p>
<p>你可能想知道为什么我要用
<code>Paint.Cap.BUTT</code>。好吧，为了让这个进度更 “Telegram”（至少在
iOS 设备上是这样），你应该使用
<code>Paint.Cap.ROUND</code>。让我来演示一下这三种可能的样式之间的区别（这里增加了描边宽度以让差异更明显）。</p>
<p><img src="https://miro.medium.com/max/1200/1*lh_H6Nv_1ixygHP6q8k6Lw.gif"></p>
<p><strong>左：</strong> <code>Cap.BUTT</code>，<strong>中：</strong>
<code>Cap.ROUND</code>，<strong>右：</strong>
<code>Cap.SQUARE</code></p>
<p>因此，主要的区别是，<code>Cap.ROUND</code> 给笔画的角以特殊的圆角，而
<code>Cap.BUTT</code> 和 <code>Cap.SQUARE</code>
只是切割。<code>Cap.SQUARE</code> 也和 <code>Cap.ROUND</code>
一样预留了额外的空间，但没有圆角效果。这可能导致 <code>Cap.SQUARE</code>
显示的角度与 <code>Cap.BUTT</code> 相同但预留了额外的空间。</p>
<p><img src="https://miro.medium.com/max/1364/1*auxY8ZqofcNmZMsezh0DkA.png"></p>
<p>试图用 <code>Cap.BUTT</code> 和 <code>Cap.SQUARE</code> 来显示 90
度。</p>
<p>考虑到所有这些情况，我们最好使用 <code>Cap.BUTT</code>，因为它比
<code>Cap.SQUARE</code> 显示的角度表示更恰当。</p>
<blockquote>
<p>顺便说一下 <code>Cap.BUTT</code>
是画笔默认的笔刷类型。这里有一个官方的<a href="https://developer.android.com/reference/android/graphics/Paint.Cap">文档链接</a>。但我想向你展示真正的区别，因为最初我想让它变成
<code>ROUND</code>，然后我开始使用
<code>SQUARE</code>，但我注意到了一些特性。</p>
</blockquote>
<h3 id="base-spinning">Base Spinning</h3>
<p>动画本身其实很简单，因为我们有 <code>InfiniteAnimateView</code>：</p>
<div class="sourceCode" id="cb5"><pre class="sourceCode kotlin"><code class="sourceCode kotlin"><span id="cb5-1"><a href="#cb5-1" aria-hidden="true" tabindex="-1"></a>ValueAnimator<span class="op">.</span>ofFloat<span class="op">(</span>currentAngle<span class="op">,</span> currentAngle <span class="op">+</span> MAX_ANGLE<span class="op">)</span></span>
<span id="cb5-2"><a href="#cb5-2" aria-hidden="true" tabindex="-1"></a>    <span class="op">.</span>apply <span class="op">&#123;</span></span>
<span id="cb5-3"><a href="#cb5-3" aria-hidden="true" tabindex="-1"></a>        interpolator <span class="op">=</span> LinearInterpolator<span class="op">()</span></span>
<span id="cb5-4"><a href="#cb5-4" aria-hidden="true" tabindex="-1"></a>        duration <span class="op">=</span> SPIN_DURATION_MS</span>
<span id="cb5-5"><a href="#cb5-5" aria-hidden="true" tabindex="-1"></a>        repeatCount <span class="op">=</span> ValueAnimator<span class="op">.</span>INFINITE</span>
<span id="cb5-6"><a href="#cb5-6" aria-hidden="true" tabindex="-1"></a>        addUpdateListener <span class="op">&#123;</span> </span>
<span id="cb5-7"><a href="#cb5-7" aria-hidden="true" tabindex="-1"></a>            currentAngle <span class="op">=</span> normalize<span class="op">(</span>it<span class="op">.</span>animatedValue <span class="kw">as</span> <span class="kw">Float</span><span class="op">)</span></span>
<span id="cb5-8"><a href="#cb5-8" aria-hidden="true" tabindex="-1"></a>        <span class="op">&#125;</span></span>
<span id="cb5-9"><a href="#cb5-9" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#125;</span></span></code></pre></div>
<p>其中 <code>normalize</code> 是一种简单的方法用于将任意角缩小回 [0,
2π) 区间内。例如，对于角度 <code>400.54</code> <code>normalize</code>
后就是 <code>40.54</code>。</p>
<div class="sourceCode" id="cb6"><pre class="sourceCode kotlin"><code class="sourceCode kotlin"><span id="cb6-1"><a href="#cb6-1" aria-hidden="true" tabindex="-1"></a><span class="kw">private</span> <span class="kw">fun</span> <span class="fu">normalize</span><span class="op">(</span><span class="va">angle</span><span class="op">:</span> <span class="dt">Float</span><span class="op">):</span> <span class="dt">Float</span> <span class="op">&#123;</span></span>
<span id="cb6-2"><a href="#cb6-2" aria-hidden="true" tabindex="-1"></a>    <span class="kw">val</span> <span class="va">decimal</span> <span class="op">=</span> angle <span class="op">-</span> angle<span class="op">.</span>toInt<span class="op">()</span></span>
<span id="cb6-3"><a href="#cb6-3" aria-hidden="true" tabindex="-1"></a>    <span class="kw">return</span> <span class="op">(</span>angle<span class="op">.</span>toInt<span class="op">()</span> <span class="op">%</span> MAX_ANGLE<span class="op">)</span> <span class="op">+</span> decimal</span>
<span id="cb6-4"><a href="#cb6-4" aria-hidden="true" tabindex="-1"></a><span class="op">&#125;</span></span></code></pre></div>
<h3 id="测量与绘制">测量与绘制</h3>
<p>我们将依靠由父视图提供的测量尺寸或使用在 xml 中定义的精确的
<code>layout_width</code>、<code>layout_height</code>
值进行绘制。因此，我们在 View
的测量方面不需要任何事情，但我们会使用测量的尺寸来准备进度矩形并在其中绘制
View。</p>
<p>嗯，这并不难，但我们需要记住一些事情：</p>
<p><img src="https://miro.medium.com/max/692/1*x0X1dP0bxHg-Z-iU0p-JhA.png"></p>
<ul>
<li>我们不能只拿 <code>measuredWidth</code>、<code>measuredHeight</code>
来画圆圈背景、进度、描边（主要是描边的原因）。如果我们不考虑描边的宽度，也不从尺寸计算中减去它的一半，我们最终会得到看起来像切开的边界：</li>
</ul>
<p><img src="https://miro.medium.com/max/680/1*pQhNsv1OWffDnraP6njZgA.png"></p>
<ul>
<li>如果我们不考虑笔触的宽度，我们可能最终会在绘图阶段将其重叠。（这对于不透明的颜色来说是可以的）</li>
</ul>
<p>但是，如果你将使用半透明的颜色，你就会看到很奇怪的重叠（我增加了笔触宽度以更清晰地展示问题所在）。</p>
<h3 id="扫描动画的角度">扫描动画的角度</h3>
<p>好了，最后是进度本身。假设我们可以把它从 0 改成 1：</p>
<div class="sourceCode" id="cb7"><pre class="sourceCode kotlin"><code class="sourceCode kotlin"><span id="cb7-1"><a href="#cb7-1" aria-hidden="true" tabindex="-1"></a><span class="at">@FloatRange</span><span class="op">(</span>from <span class="op">=</span> <span class="fl">.0</span><span class="op">,</span> to <span class="op">=</span> <span class="fl">1.0</span><span class="op">,</span> toInclusive <span class="op">=</span> <span class="kw">false</span><span class="op">)</span></span>
<span id="cb7-2"><a href="#cb7-2" aria-hidden="true" tabindex="-1"></a><span class="kw">var</span> <span class="va">progress</span><span class="op">.</span><span class="kw">Float</span> <span class="op">=</span> <span class="fl">0f</span> <span class="kw">Float</span> <span class="op">=</span> <span class="fl">0f</span></span></code></pre></div>
<p>为了绘制弧线，我们需要计算一个特殊的扫描动画的角度，而它就是绘图部分的一个特殊角度。360
—— 一个完整的圆将被绘制。90 —— 将画出圆的四分之一。</p>
<p>所以我们需要将进度转换为度数，同时，我们需要保持扫描角不为
0。也就是说即便 <code>progress</code> 值等于
0，我们也要绘制一小块的进度。</p>
<div class="sourceCode" id="cb8"><pre class="sourceCode kotlin"><code class="sourceCode kotlin"><span id="cb8-1"><a href="#cb8-1" aria-hidden="true" tabindex="-1"></a><span class="kw">private</span> <span class="kw">fun</span> <span class="fu">convertToSweepAngle</span><span class="op">(</span><span class="va">progress</span><span class="op">:</span> <span class="dt">Float</span><span class="op">):</span> <span class="dt">Float</span> <span class="op">=</span></span>
<span id="cb8-2"><a href="#cb8-2" aria-hidden="true" tabindex="-1"></a>    MIN_SWEEP_ANGLE <span class="op">+</span> progress <span class="op">*</span> <span class="op">(</span>MAX_ANGLE <span class="op">-</span> MIN_SWEEP_ANGLE<span class="op">)</span></span></code></pre></div>
<p>其中
<code>MAX_ANGLE = 360</code>（当然你可以自定义为任何角度），<code>MIN_SWEEP_ANGLE</code>
是最小的进度，以度数为单位。最小进度会在 <code>progress = 0</code>
就会代替 <code>progress</code> 值。</p>
<h2 id="代码放一起">代码放一起！</h2>
<p>现在将所有的代码合并一起，我们就可以构建完整的 View 了：</p>
<div class="sourceCode" id="cb9"><pre class="sourceCode kotlin"><code class="sourceCode kotlin"><span id="cb9-1"><a href="#cb9-1" aria-hidden="true" tabindex="-1"></a><span class="co">// ChatProgressView.kt</span></span>
<span id="cb9-2"><a href="#cb9-2" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb9-3"><a href="#cb9-3" aria-hidden="true" tabindex="-1"></a><span class="kw">class</span> ChatProgressView @JvmOverloads <span class="kw">constructor</span><span class="op">(</span></span>
<span id="cb9-4"><a href="#cb9-4" aria-hidden="true" tabindex="-1"></a>    <span class="va">context</span><span class="op">:</span> <span class="dt">Context</span><span class="op">,</span> <span class="va">attrs</span><span class="op">:</span> <span class="dt">AttributeSet</span><span class="op">?</span> <span class="op">=</span> null<span class="op">,</span> <span class="va">defStyleAttr</span><span class="op">:</span> <span class="dt">Int</span> <span class="op">=</span> <span class="dv">0</span></span>
<span id="cb9-5"><a href="#cb9-5" aria-hidden="true" tabindex="-1"></a><span class="op">)</span> <span class="op">:</span> <span class="dt">InfiniteAnimateView</span><span class="op">(</span><span class="va">context</span><span class="op">,</span> <span class="va">attrs</span><span class="op">,</span> <span class="va">defStyleAttr</span><span class="op">)</span> <span class="op">&#123;</span></span>
<span id="cb9-6"><a href="#cb9-6" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb9-7"><a href="#cb9-7" aria-hidden="true" tabindex="-1"></a>    <span class="kw">private</span> <span class="kw">val</span> <span class="va">defaultBgColor</span><span class="op">:</span> <span class="kw">Int</span> <span class="op">=</span> context<span class="op">.</span>getColorCompat<span class="op">(</span>R<span class="op">.</span>color<span class="op">.</span>chat_progress_bg<span class="op">)</span></span>
<span id="cb9-8"><a href="#cb9-8" aria-hidden="true" tabindex="-1"></a>    <span class="kw">private</span> <span class="kw">val</span> <span class="va">defaultBgStrokeColor</span><span class="op">:</span> <span class="kw">Int</span> <span class="op">=</span> context<span class="op">.</span>getColorCompat<span class="op">(</span>R<span class="op">.</span>color<span class="op">.</span>chat_progress_bg_stroke<span class="op">)</span></span>
<span id="cb9-9"><a href="#cb9-9" aria-hidden="true" tabindex="-1"></a>    <span class="kw">private</span> <span class="kw">val</span> <span class="va">defaultProgressColor</span><span class="op">:</span> <span class="kw">Int</span> <span class="op">=</span> context<span class="op">.</span>getColorCompat<span class="op">(</span>R<span class="op">.</span>color<span class="op">.</span>white<span class="op">)</span></span>
<span id="cb9-10"><a href="#cb9-10" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb9-11"><a href="#cb9-11" aria-hidden="true" tabindex="-1"></a>    <span class="kw">private</span> <span class="kw">val</span> <span class="va">progressPadding</span> <span class="op">=</span> context<span class="op">.</span>resources<span class="op">.</span>getDimension<span class="op">(</span>R<span class="op">.</span>dimen<span class="op">.</span>chat_progress_padding<span class="op">)</span></span>
<span id="cb9-12"><a href="#cb9-12" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb9-13"><a href="#cb9-13" aria-hidden="true" tabindex="-1"></a>    <span class="kw">private</span> <span class="kw">val</span> <span class="va">bgPaint</span> <span class="op">=</span> Paint<span class="op">(</span>Paint<span class="op">.</span>ANTI_ALIAS_FLAG<span class="op">).</span>apply <span class="op">&#123;</span></span>
<span id="cb9-14"><a href="#cb9-14" aria-hidden="true" tabindex="-1"></a>        style <span class="op">=</span> Paint<span class="op">.</span>Style<span class="op">.</span>FILL</span>
<span id="cb9-15"><a href="#cb9-15" aria-hidden="true" tabindex="-1"></a>        color <span class="op">=</span> defaultBgColor</span>
<span id="cb9-16"><a href="#cb9-16" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#125;</span></span>
<span id="cb9-17"><a href="#cb9-17" aria-hidden="true" tabindex="-1"></a>    <span class="kw">private</span> <span class="kw">val</span> <span class="va">bgStrokePaint</span> <span class="op">=</span> Paint<span class="op">(</span>Paint<span class="op">.</span>ANTI_ALIAS_FLAG<span class="op">).</span>apply <span class="op">&#123;</span></span>
<span id="cb9-18"><a href="#cb9-18" aria-hidden="true" tabindex="-1"></a>        style <span class="op">=</span> Paint<span class="op">.</span>Style<span class="op">.</span>STROKE</span>
<span id="cb9-19"><a href="#cb9-19" aria-hidden="true" tabindex="-1"></a>        color <span class="op">=</span> defaultBgStrokeColor</span>
<span id="cb9-20"><a href="#cb9-20" aria-hidden="true" tabindex="-1"></a>        strokeWidth <span class="op">=</span> context<span class="op">.</span>resources<span class="op">.</span>getDimension<span class="op">(</span>R<span class="op">.</span>dimen<span class="op">.</span>chat_progress_bg_stroke_width<span class="op">)</span></span>
<span id="cb9-21"><a href="#cb9-21" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#125;</span></span>
<span id="cb9-22"><a href="#cb9-22" aria-hidden="true" tabindex="-1"></a>    <span class="kw">private</span> <span class="kw">val</span> <span class="va">progressPaint</span> <span class="op">=</span> Paint<span class="op">(</span>Paint<span class="op">.</span>ANTI_ALIAS_FLAG<span class="op">).</span>apply <span class="op">&#123;</span></span>
<span id="cb9-23"><a href="#cb9-23" aria-hidden="true" tabindex="-1"></a>        style <span class="op">=</span> Paint<span class="op">.</span>Style<span class="op">.</span>STROKE</span>
<span id="cb9-24"><a href="#cb9-24" aria-hidden="true" tabindex="-1"></a>        strokeWidth <span class="op">=</span> context<span class="op">.</span>resources<span class="op">.</span>getDimension<span class="op">(</span>R<span class="op">.</span>dimen<span class="op">.</span>chat_progress_stroke_width<span class="op">)</span></span>
<span id="cb9-25"><a href="#cb9-25" aria-hidden="true" tabindex="-1"></a>        color <span class="op">=</span> defaultProgressColor</span>
<span id="cb9-26"><a href="#cb9-26" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#125;</span></span>
<span id="cb9-27"><a href="#cb9-27" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb9-28"><a href="#cb9-28" aria-hidden="true" tabindex="-1"></a>    <span class="at">@FloatRange</span><span class="op">(</span>from <span class="op">=</span> <span class="fl">.0</span><span class="op">,</span> to <span class="op">=</span> <span class="fl">1.0</span><span class="op">,</span> toInclusive <span class="op">=</span> <span class="kw">false</span><span class="op">)</span></span>
<span id="cb9-29"><a href="#cb9-29" aria-hidden="true" tabindex="-1"></a>    <span class="kw">var</span> <span class="va">progress</span><span class="op">:</span> <span class="kw">Float</span> <span class="op">=</span> <span class="fl">0f</span></span>
<span id="cb9-30"><a href="#cb9-30" aria-hidden="true" tabindex="-1"></a>        <span class="kw">set</span><span class="op">(</span>value<span class="op">)</span> <span class="op">&#123;</span></span>
<span id="cb9-31"><a href="#cb9-31" aria-hidden="true" tabindex="-1"></a>            field <span class="op">=</span> <span class="cf">when</span> <span class="op">&#123;</span></span>
<span id="cb9-32"><a href="#cb9-32" aria-hidden="true" tabindex="-1"></a>                value <span class="op">&lt;</span> <span class="fl">0f</span> <span class="op">-&gt;</span> <span class="fl">0f</span></span>
<span id="cb9-33"><a href="#cb9-33" aria-hidden="true" tabindex="-1"></a>                value <span class="op">&gt;</span> <span class="fl">1f</span> <span class="op">-&gt;</span> <span class="fl">1f</span></span>
<span id="cb9-34"><a href="#cb9-34" aria-hidden="true" tabindex="-1"></a>                <span class="cf">else</span> <span class="op">-&gt;</span> value</span>
<span id="cb9-35"><a href="#cb9-35" aria-hidden="true" tabindex="-1"></a>            <span class="op">&#125;</span></span>
<span id="cb9-36"><a href="#cb9-36" aria-hidden="true" tabindex="-1"></a>            sweepAngle <span class="op">=</span> convertToSweepAngle<span class="op">(</span>field<span class="op">)</span></span>
<span id="cb9-37"><a href="#cb9-37" aria-hidden="true" tabindex="-1"></a>            invalidate<span class="op">()</span></span>
<span id="cb9-38"><a href="#cb9-38" aria-hidden="true" tabindex="-1"></a>        <span class="op">&#125;</span></span>
<span id="cb9-39"><a href="#cb9-39" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb9-40"><a href="#cb9-40" aria-hidden="true" tabindex="-1"></a>    <span class="co">// [0, 360)</span></span>
<span id="cb9-41"><a href="#cb9-41" aria-hidden="true" tabindex="-1"></a>    <span class="kw">private</span> <span class="kw">var</span> <span class="va">currentAngle</span><span class="op">:</span> <span class="kw">Float</span> <span class="kw">by</span> observable<span class="op">(</span><span class="fl">0f</span><span class="op">)</span> <span class="op">&#123;</span> _<span class="op">,</span> _<span class="op">,</span> _ <span class="op">-&gt;</span> invalidate<span class="op">()</span> <span class="op">&#125;</span></span>
<span id="cb9-42"><a href="#cb9-42" aria-hidden="true" tabindex="-1"></a>    <span class="kw">private</span> <span class="kw">var</span> <span class="va">sweepAngle</span><span class="op">:</span> <span class="kw">Float</span> <span class="kw">by</span> observable<span class="op">(</span>MIN_SWEEP_ANGLE<span class="op">)</span> <span class="op">&#123;</span> _<span class="op">,</span> _<span class="op">,</span> _ <span class="op">-&gt;</span> invalidate<span class="op">()</span> <span class="op">&#125;</span></span>
<span id="cb9-43"><a href="#cb9-43" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb9-44"><a href="#cb9-44" aria-hidden="true" tabindex="-1"></a>    <span class="kw">private</span> <span class="kw">val</span> <span class="va">progressRect</span><span class="op">:</span> RectF <span class="op">=</span> RectF<span class="op">()</span></span>
<span id="cb9-45"><a href="#cb9-45" aria-hidden="true" tabindex="-1"></a>    <span class="kw">private</span> <span class="kw">var</span> <span class="va">bgRadius</span><span class="op">:</span> <span class="kw">Float</span> <span class="op">=</span> <span class="fl">0f</span></span>
<span id="cb9-46"><a href="#cb9-46" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb9-47"><a href="#cb9-47" aria-hidden="true" tabindex="-1"></a>    init <span class="op">&#123;</span></span>
<span id="cb9-48"><a href="#cb9-48" aria-hidden="true" tabindex="-1"></a>        attrs<span class="op">?.</span>parseAttrs<span class="op">(</span>context<span class="op">,</span> R<span class="op">.</span>styleable<span class="op">.</span>ChatProgressView<span class="op">)</span> <span class="op">&#123;</span></span>
<span id="cb9-49"><a href="#cb9-49" aria-hidden="true" tabindex="-1"></a>            bgPaint<span class="op">.</span>color <span class="op">=</span> getColor<span class="op">(</span>R<span class="op">.</span>styleable<span class="op">.</span>ChatProgressView_bgColor<span class="op">,</span> defaultBgColor<span class="op">)</span></span>
<span id="cb9-50"><a href="#cb9-50" aria-hidden="true" tabindex="-1"></a>            bgStrokePaint<span class="op">.</span>color <span class="op">=</span> getColor<span class="op">(</span>R<span class="op">.</span>styleable<span class="op">.</span>ChatProgressView_bgStrokeColor<span class="op">,</span> defaultBgStrokeColor<span class="op">)</span></span>
<span id="cb9-51"><a href="#cb9-51" aria-hidden="true" tabindex="-1"></a>            progressPaint<span class="op">.</span>color <span class="op">=</span> getColor<span class="op">(</span>R<span class="op">.</span>styleable<span class="op">.</span>ChatProgressView_progressColor<span class="op">,</span> defaultProgressColor<span class="op">)</span></span>
<span id="cb9-52"><a href="#cb9-52" aria-hidden="true" tabindex="-1"></a>        <span class="op">&#125;</span></span>
<span id="cb9-53"><a href="#cb9-53" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#125;</span></span>
<span id="cb9-54"><a href="#cb9-54" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb9-55"><a href="#cb9-55" aria-hidden="true" tabindex="-1"></a>    <span class="kw">override</span> <span class="kw">fun</span> <span class="fu">onMeasure</span><span class="op">(</span><span class="va">widthMeasureSpec</span><span class="op">:</span> <span class="dt">Int</span><span class="op">,</span> <span class="va">heightMeasureSpec</span><span class="op">:</span> <span class="dt">Int</span><span class="op">)</span> <span class="op">&#123;</span></span>
<span id="cb9-56"><a href="#cb9-56" aria-hidden="true" tabindex="-1"></a>        <span class="kw">super</span><span class="op">.</span>onMeasure<span class="op">(</span>widthMeasureSpec<span class="op">,</span> heightMeasureSpec<span class="op">)</span></span>
<span id="cb9-57"><a href="#cb9-57" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb9-58"><a href="#cb9-58" aria-hidden="true" tabindex="-1"></a>        <span class="kw">val</span> <span class="va">horizHalf</span> <span class="op">=</span> <span class="op">(</span>measuredWidth <span class="op">-</span> padding<span class="op">.</span>horizontal<span class="op">)</span> <span class="op">/</span> <span class="fl">2f</span></span>
<span id="cb9-59"><a href="#cb9-59" aria-hidden="true" tabindex="-1"></a>        <span class="kw">val</span> <span class="va">vertHalf</span> <span class="op">=</span> <span class="op">(</span>measuredHeight <span class="op">-</span> padding<span class="op">.</span>vertical<span class="op">)</span> <span class="op">/</span> <span class="fl">2f</span></span>
<span id="cb9-60"><a href="#cb9-60" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb9-61"><a href="#cb9-61" aria-hidden="true" tabindex="-1"></a>        <span class="kw">val</span> <span class="va">progressOffset</span> <span class="op">=</span> progressPadding <span class="op">+</span> progressPaint<span class="op">.</span>strokeWidth <span class="op">/</span> <span class="fl">2f</span></span>
<span id="cb9-62"><a href="#cb9-62" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb9-63"><a href="#cb9-63" aria-hidden="true" tabindex="-1"></a>        <span class="co">// 由于笔画在线的中心，我们需要为它留出一半的安全空间，否则它将被截断的界限</span></span>
<span id="cb9-64"><a href="#cb9-64" aria-hidden="true" tabindex="-1"></a>        bgRadius <span class="op">=</span> min<span class="op">(</span>horizHalf<span class="op">,</span> vertHalf<span class="op">)</span> <span class="op">-</span> bgStrokePaint<span class="op">.</span>strokeWidth <span class="op">/</span> <span class="fl">2f</span></span>
<span id="cb9-65"><a href="#cb9-65" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb9-66"><a href="#cb9-66" aria-hidden="true" tabindex="-1"></a>        <span class="kw">val</span> <span class="va">progressRectMinSize</span> <span class="op">=</span> <span class="dv">2</span> <span class="op">*</span> <span class="op">(</span>min<span class="op">(</span>horizHalf<span class="op">,</span> vertHalf<span class="op">)</span> <span class="op">-</span> progressOffset<span class="op">)</span></span>
<span id="cb9-67"><a href="#cb9-67" aria-hidden="true" tabindex="-1"></a>        progressRect<span class="op">.</span>apply <span class="op">&#123;</span></span>
<span id="cb9-68"><a href="#cb9-68" aria-hidden="true" tabindex="-1"></a>            left <span class="op">=</span> <span class="op">(</span>measuredWidth <span class="op">-</span> progressRectMinSize<span class="op">)</span> <span class="op">/</span> <span class="fl">2f</span></span>
<span id="cb9-69"><a href="#cb9-69" aria-hidden="true" tabindex="-1"></a>            top <span class="op">=</span> <span class="op">(</span>measuredHeight <span class="op">-</span> progressRectMinSize<span class="op">)</span> <span class="op">/</span> <span class="fl">2f</span></span>
<span id="cb9-70"><a href="#cb9-70" aria-hidden="true" tabindex="-1"></a>            right <span class="op">=</span> <span class="op">(</span>measuredWidth <span class="op">+</span> progressRectMinSize<span class="op">)</span> <span class="op">/</span> <span class="fl">2f</span></span>
<span id="cb9-71"><a href="#cb9-71" aria-hidden="true" tabindex="-1"></a>            bottom <span class="op">=</span> <span class="op">(</span>measuredHeight <span class="op">+</span> progressRectMinSize<span class="op">)</span> <span class="op">/</span> <span class="fl">2f</span></span>
<span id="cb9-72"><a href="#cb9-72" aria-hidden="true" tabindex="-1"></a>        <span class="op">&#125;</span></span>
<span id="cb9-73"><a href="#cb9-73" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#125;</span></span>
<span id="cb9-74"><a href="#cb9-74" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb9-75"><a href="#cb9-75" aria-hidden="true" tabindex="-1"></a>    <span class="kw">override</span> <span class="kw">fun</span> <span class="fu">onDraw</span><span class="op">(</span><span class="va">canvas</span><span class="op">:</span> <span class="dt">Canvas</span><span class="op">)</span> <span class="op">&#123;</span></span>
<span id="cb9-76"><a href="#cb9-76" aria-hidden="true" tabindex="-1"></a>        <span class="kw">super</span><span class="op">.</span>onDraw<span class="op">(</span>canvas<span class="op">)</span></span>
<span id="cb9-77"><a href="#cb9-77" aria-hidden="true" tabindex="-1"></a>        with<span class="op">(</span>canvas<span class="op">)</span> <span class="op">&#123;</span></span>
<span id="cb9-78"><a href="#cb9-78" aria-hidden="true" tabindex="-1"></a>            <span class="co">//(radius - strokeWidth) - because we don't want to overlap colors (since they by default translucent)</span></span>
<span id="cb9-79"><a href="#cb9-79" aria-hidden="true" tabindex="-1"></a>            drawCircle<span class="op">(</span>progressRect<span class="op">.</span>centerX<span class="op">(),</span> progressRect<span class="op">.</span>centerY<span class="op">(),</span> bgRadius <span class="op">-</span> bgStrokePaint<span class="op">.</span>strokeWidth <span class="op">/</span> <span class="fl">2f</span><span class="op">,</span> bgPaint<span class="op">)</span></span>
<span id="cb9-80"><a href="#cb9-80" aria-hidden="true" tabindex="-1"></a>            drawCircle<span class="op">(</span>progressRect<span class="op">.</span>centerX<span class="op">(),</span> progressRect<span class="op">.</span>centerY<span class="op">(),</span> bgRadius<span class="op">,</span> bgStrokePaint<span class="op">)</span></span>
<span id="cb9-81"><a href="#cb9-81" aria-hidden="true" tabindex="-1"></a>            drawArc<span class="op">(</span>progressRect<span class="op">,</span> currentAngle<span class="op">,</span> sweepAngle<span class="op">,</span> <span class="kw">false</span><span class="op">,</span> progressPaint<span class="op">)</span></span>
<span id="cb9-82"><a href="#cb9-82" aria-hidden="true" tabindex="-1"></a>        <span class="op">&#125;</span></span>
<span id="cb9-83"><a href="#cb9-83" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#125;</span></span>
<span id="cb9-84"><a href="#cb9-84" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb9-85"><a href="#cb9-85" aria-hidden="true" tabindex="-1"></a>    <span class="kw">override</span> <span class="kw">fun</span> <span class="fu">createAnimation</span><span class="op">():</span> <span class="dt">Animator</span> <span class="op">=</span> ValueAnimator<span class="op">.</span>ofFloat<span class="op">(</span>currentAngle<span class="op">,</span> currentAngle <span class="op">+</span> MAX_ANGLE<span class="op">).</span>apply <span class="op">&#123;</span></span>
<span id="cb9-86"><a href="#cb9-86" aria-hidden="true" tabindex="-1"></a>        interpolator <span class="op">=</span> LinearInterpolator<span class="op">()</span></span>
<span id="cb9-87"><a href="#cb9-87" aria-hidden="true" tabindex="-1"></a>        duration <span class="op">=</span> SPIN_DURATION_MS</span>
<span id="cb9-88"><a href="#cb9-88" aria-hidden="true" tabindex="-1"></a>        repeatCount <span class="op">=</span> ValueAnimator<span class="op">.</span>INFINITE</span>
<span id="cb9-89"><a href="#cb9-89" aria-hidden="true" tabindex="-1"></a>        addUpdateListener <span class="op">&#123;</span> currentAngle <span class="op">=</span> normalize<span class="op">(</span>it<span class="op">.</span>animatedValue <span class="kw">as</span> <span class="kw">Float</span><span class="op">)</span> <span class="op">&#125;</span></span>
<span id="cb9-90"><a href="#cb9-90" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#125;</span></span>
<span id="cb9-91"><a href="#cb9-91" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb9-92"><a href="#cb9-92" aria-hidden="true" tabindex="-1"></a>    <span class="co">/**</span></span>
<span id="cb9-93"><a href="#cb9-93" aria-hidden="true" tabindex="-1"></a><span class="co">     * 将任意角转换至 [0, 360)</span></span>
<span id="cb9-94"><a href="#cb9-94" aria-hidden="true" tabindex="-1"></a><span class="co">     * 比如说 angle = 400.54 =&gt; return 40.54</span></span>
<span id="cb9-95"><a href="#cb9-95" aria-hidden="true" tabindex="-1"></a><span class="co">     * angle = 360 =&gt; return 0</span></span>
<span id="cb9-96"><a href="#cb9-96" aria-hidden="true" tabindex="-1"></a><span class="co">     */</span></span>
<span id="cb9-97"><a href="#cb9-97" aria-hidden="true" tabindex="-1"></a>    <span class="kw">private</span> <span class="kw">fun</span> <span class="fu">normalize</span><span class="op">(</span><span class="va">angle</span><span class="op">:</span> <span class="dt">Float</span><span class="op">):</span> <span class="dt">Float</span> <span class="op">&#123;</span></span>
<span id="cb9-98"><a href="#cb9-98" aria-hidden="true" tabindex="-1"></a>        <span class="kw">val</span> <span class="va">decimal</span> <span class="op">=</span> angle <span class="op">-</span> angle<span class="op">.</span>toInt<span class="op">()</span></span>
<span id="cb9-99"><a href="#cb9-99" aria-hidden="true" tabindex="-1"></a>        <span class="kw">return</span> <span class="op">(</span>angle<span class="op">.</span>toInt<span class="op">()</span> <span class="op">%</span> MAX_ANGLE<span class="op">)</span> <span class="op">+</span> decimal</span>
<span id="cb9-100"><a href="#cb9-100" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#125;</span></span>
<span id="cb9-101"><a href="#cb9-101" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb9-102"><a href="#cb9-102" aria-hidden="true" tabindex="-1"></a>    <span class="kw">private</span> <span class="kw">fun</span> <span class="fu">convertToSweepAngle</span><span class="op">(</span><span class="va">progress</span><span class="op">:</span> <span class="dt">Float</span><span class="op">):</span> <span class="dt">Float</span> <span class="op">=</span></span>
<span id="cb9-103"><a href="#cb9-103" aria-hidden="true" tabindex="-1"></a>        MIN_SWEEP_ANGLE <span class="op">+</span> progress <span class="op">*</span> <span class="op">(</span>MAX_ANGLE <span class="op">-</span> MIN_SWEEP_ANGLE<span class="op">)</span></span>
<span id="cb9-104"><a href="#cb9-104" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb9-105"><a href="#cb9-105" aria-hidden="true" tabindex="-1"></a>    <span class="kw">private</span> <span class="kw">companion</span> <span class="kw">object</span> <span class="op">&#123;</span></span>
<span id="cb9-106"><a href="#cb9-106" aria-hidden="true" tabindex="-1"></a>        const <span class="kw">val</span> <span class="va">SPIN_DURATION_MS</span> <span class="op">=</span> <span class="dv">2_000L</span></span>
<span id="cb9-107"><a href="#cb9-107" aria-hidden="true" tabindex="-1"></a>        const <span class="kw">val</span> <span class="va">MIN_SWEEP_ANGLE</span> <span class="op">=</span> <span class="fl">10f</span> <span class="co">//in degrees</span></span>
<span id="cb9-108"><a href="#cb9-108" aria-hidden="true" tabindex="-1"></a>        const <span class="kw">val</span> <span class="va">MAX_ANGLE</span> <span class="op">=</span> <span class="dv">360</span> <span class="co">//in degrees</span></span>
<span id="cb9-109"><a href="#cb9-109" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#125;</span></span>
<span id="cb9-110"><a href="#cb9-110" aria-hidden="true" tabindex="-1"></a><span class="op">&#125;</span></span></code></pre></div>
<h3 id="补充">补充！</h3>
<p>补充一下，我们可以在 <code>drawArc</code>
这个方法上拓展一下。你看我们有一个 <code>currentAngle</code>
代表了绘制圆弧的起始点的角度，还有一个 <code>sweepAngle</code>
代表了我们需要绘制多少度数的圆弧。</p>
<p>当进度增加时，我们只改变 <code>sweepAngle</code>，也就是说，如果
<code>currentAngle</code>
是静态值（不变），那么我们将看到增加的圆弧只有一个方向。我们可以试着修改一下。考虑一下三种情况并看看结果分别是怎样的：</p>
<div class="sourceCode" id="cb10"><pre class="sourceCode kotlin"><code class="sourceCode kotlin"><span id="cb10-1"><a href="#cb10-1" aria-hidden="true" tabindex="-1"></a><span class="co">// 1. 在这种情况下，弧线只在一个方向上 "增加"</span></span>
<span id="cb10-2"><a href="#cb10-2" aria-hidden="true" tabindex="-1"></a>drawArc<span class="op">(</span>progressRect<span class="op">,</span> currentAngle<span class="op">,</span> sweepAngle<span class="op">,</span> <span class="kw">false</span><span class="op">,</span> progressPaint<span class="op">)</span></span>
<span id="cb10-3"><a href="#cb10-3" aria-hidden="true" tabindex="-1"></a><span class="co">// 2. 在这种情况下，弧线在两个方向上 "增加"</span></span>
<span id="cb10-4"><a href="#cb10-4" aria-hidden="true" tabindex="-1"></a>drawArc<span class="op">(</span>progressRect<span class="op">,</span> currentAngle <span class="op">-</span> sweepAngle <span class="op">/</span> <span class="fl">2f</span><span class="op">,</span> sweepAngle<span class="op">,</span> <span class="kw">false</span><span class="op">,</span> progressPaint<span class="op">)</span></span>
<span id="cb10-5"><a href="#cb10-5" aria-hidden="true" tabindex="-1"></a><span class="co">// 3. 在这种情况下，弧线向另一个方向 "增加"</span></span>
<span id="cb10-6"><a href="#cb10-6" aria-hidden="true" tabindex="-1"></a>drawArc<span class="op">(</span>progressRect<span class="op">,</span> currentAngle <span class="op">-</span> sweepAngle<span class="op">,</span> sweepAngle<span class="op">,</span> <span class="kw">false</span><span class="op">,</span> progressPaint<span class="op">)</span></span></code></pre></div>
<p>而结果是：</p>
<p><img src="https://miro.medium.com/max/1200/1*fbLfs0wImFm_GzMyJYWJCA.gif"></p>
<p><strong>左：</strong>第一种情况；<strong>中：</strong>第二种情况；<strong>右</strong>：第三种情况</p>
<p>如你所见，左边和右边的动画（方案一、三）在速度上并不一致。第一个给人的感觉是旋转速度加快，进度增加，而最后一个则相反，给人的感觉是旋转速度变慢。而反之则是进度递减。</p>
<p>不过中间的动画在旋转速度上是一致的。所以，如果你不是增加进度（比如上传文件），或者只是减少进度（比如倒计时），那么我建议使用第二个方案。</p>
<h2 id="后记">后记</h2>
<p>动画是伟大的。像素是伟大的。形状是伟大的。我们只需要用爱仔细对待它们。因为细节是产品中最有价值的东西;)</p>
<p><img src="https://miro.medium.com/max/292/0*19Qsjr8oaWOKrhLk.gif"></p>
<p>如果你喜欢这篇文章，别忘了点赞关注收藏一键三连！如果你有什么问题，可以评论我，我们来讨论一下。祝你编程愉快!</p>]]></content>
      <categories>
        <category>Computer Science</category>
        <category>Android</category>
        <category>Kotlin</category>
      </categories>
      <tags>
        <tag>Computer Science</tag>
        <tag>Android</tag>
        <tag>Kotlin</tag>
        <tag>UI</tag>
      </tags>
  </entry>
  <entry>
    <title>现代 Web 应用程序中的 Web 分享</title>
    <url>/2021/05/16/computer%20science/frontend/web-share-for-modern-web-apps/</url>
    <content><![CDATA[<blockquote>
<ul>
<li>原文地址：<a href="https://blog.bitsrc.io/web-share-for-modern-web-apps-43c3e2329093">Web
Share for Modern Web Apps</a></li>
<li>原文作者：<a href="https://medium.com/@clickforjanaka">Janaka
Ekanayake</a></li>
<li>译者：<a href="https://github.com/PassionPenguin">霜羽
Hoarfroster</a></li>
<li>校对者：<a href="https://github.com/Chorer">Chorer</a>、<a href="https://github.com/Usualminds">Usualminds</a></li>
</ul>
</blockquote>
<p><img src="https://cdn-images-1.medium.com/max/5760/1*QXEz4H_A4nons0JRZmblhQ.png"></p>
<blockquote>
<p>最近，Windows 和 Chrome OS（译者注：其实还有 macOS）开始支持 Web 分享
和 Web Share API，这吸引了不少 Web 开发者的目光。</p>
</blockquote>
<p>不知道你有没有接触过 Web Share
API？我想你们中的很多人应该都听说过这个词吧！Web Share API
其实已经出现一段时间了，只不过最初只有移动设备支持 Web Share API。</p>
<h2 id="web-share-api-快速演示">Web Share API —— 快速演示</h2>
<p>我们可以按照以下步骤，对 Web Share API 进行快速测试 ——
在网页与其他应用程序之间进行数据分享。</p>
<figure>
<img src="https://cdn-images-1.medium.com/max/2000/1*sHKOD8KJJxktrFqgPyAQwA.png" alt="来源: https://web-share.glitch.me/">
<figcaption aria-hidden="true">来源: <a href="https://web-share.glitch.me/">https://web-share.glitch.me/</a></figcaption>
</figure>
<ol type="1">
<li>首先，确保你使用的是最新版本的谷歌浏览器。</li>
<li>打开浏览器，打开<a href="https://web-share.glitch.me/">这个链接</a>，点击<strong>分享</strong>按钮。</li>
<li>你可以打开任何允许分享的应用程序。此外，它还支持与附近的设备分享。</li>
<li>点击分享后，你就可以在目标应用程序中查看分享的数据。我这里使用<strong>邮件</strong>作为应用程序。如图所示，应用程序会将
Web Share API 传递过来的文本数据添加到电子邮件正文中。</li>
</ol>
<p><img src="https://cdn-images-1.medium.com/max/2000/1*YSWUxwngdvAWwQOtAHYzvg.png"></p>
<p><strong>我希望你在尝试以后会感到高兴！</strong> ——
至少这是我在浏览器中查看 Web Share 功能演示时的第一印象。</p>
<h2 id="在实践中使用-web-share">在实践中使用 Web Share</h2>
<h3 id="分享链接和文本">分享链接和文本</h3>
<p>你可以使用一个简单的 <code>share()</code>
方法来分享你想要的链接和文本。下面给出的代码片段可以帮助你完成 Web
Share：</p>
<div class="sourceCode" id="cb1"><pre class="sourceCode javascript"><code class="sourceCode javascript"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a><span class="cf">if</span> (<span class="bu">navigator</span><span class="op">.</span><span class="at">share</span>) &#123;</span>
<span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a>    <span class="bu">navigator</span><span class="op">.</span><span class="fu">share</span>(&#123;</span>
<span id="cb1-3"><a href="#cb1-3" aria-hidden="true" tabindex="-1"></a>        <span class="dt">title</span><span class="op">:</span> <span class="st">'juejin.cn'</span><span class="op">,</span></span>
<span id="cb1-4"><a href="#cb1-4" aria-hidden="true" tabindex="-1"></a>        <span class="dt">text</span><span class="op">:</span> <span class="st">'访问掘金开发者社区'</span><span class="op">,</span></span>
<span id="cb1-5"><a href="#cb1-5" aria-hidden="true" tabindex="-1"></a>        <span class="dt">url</span><span class="op">:</span> <span class="st">'https://www.juejin.com/'</span><span class="op">,</span></span>
<span id="cb1-6"><a href="#cb1-6" aria-hidden="true" tabindex="-1"></a>    &#125;)<span class="op">.</span><span class="fu">then</span>(() <span class="kw">=&gt;</span> <span class="bu">console</span><span class="op">.</span><span class="fu">log</span>(<span class="st">'分享成功！'</span>))</span>
<span id="cb1-7"><a href="#cb1-7" aria-hidden="true" tabindex="-1"></a>        <span class="op">.</span><span class="fu">catch</span>((error) <span class="kw">=&gt;</span> <span class="bu">console</span><span class="op">.</span><span class="fu">log</span>(<span class="st">'分享时候遇到了错误……'</span><span class="op">,</span> error))<span class="op">;</span></span>
<span id="cb1-8"><a href="#cb1-8" aria-hidden="true" tabindex="-1"></a>&#125;</span></code></pre></div>
<h3 id="分享文件">分享文件</h3>
<p>文件分享与 URL 分享有些不同 —— 你必须先调用
<code>navigator.canShare()</code> 确认是否可以分享文件，然后才可以在调用
<code>navigator.share()</code> 时添加一个文件数组。</p>
<div class="sourceCode" id="cb2"><pre class="sourceCode js"><code class="sourceCode javascript"><span id="cb2-1"><a href="#cb2-1" aria-hidden="true" tabindex="-1"></a><span class="cf">if</span> (<span class="bu">navigator</span><span class="op">.</span><span class="at">canShare</span> <span class="op">&amp;&amp;</span> <span class="bu">navigator</span><span class="op">.</span><span class="fu">canShare</span>(&#123;<span class="dt">files</span><span class="op">:</span> fileArr&#125;)) &#123;</span>
<span id="cb2-2"><a href="#cb2-2" aria-hidden="true" tabindex="-1"></a>    <span class="bu">navigator</span><span class="op">.</span><span class="fu">share</span>(&#123;</span>
<span id="cb2-3"><a href="#cb2-3" aria-hidden="true" tabindex="-1"></a>        <span class="dt">files</span><span class="op">:</span> fileArr<span class="op">,</span></span>
<span id="cb2-4"><a href="#cb2-4" aria-hidden="true" tabindex="-1"></a>        <span class="dt">title</span><span class="op">:</span> <span class="st">'我的相片集'</span><span class="op">,</span></span>
<span id="cb2-5"><a href="#cb2-5" aria-hidden="true" tabindex="-1"></a>        <span class="dt">text</span><span class="op">:</span> <span class="st">'北极de假期'</span><span class="op">,</span></span>
<span id="cb2-6"><a href="#cb2-6" aria-hidden="true" tabindex="-1"></a>    &#125;)<span class="op">.</span><span class="fu">then</span>(() <span class="kw">=&gt;</span> <span class="bu">console</span><span class="op">.</span><span class="fu">log</span>(<span class="st">'分享成功！'</span>))</span>
<span id="cb2-7"><a href="#cb2-7" aria-hidden="true" tabindex="-1"></a>        <span class="op">.</span><span class="fu">catch</span>((error) <span class="kw">=&gt;</span> <span class="bu">console</span><span class="op">.</span><span class="fu">log</span>(<span class="st">'分享时候遇到了错误……'</span><span class="op">,</span> error))<span class="op">;</span></span>
<span id="cb2-8"><a href="#cb2-8" aria-hidden="true" tabindex="-1"></a>&#125; <span class="cf">else</span> &#123;</span>
<span id="cb2-9"><a href="#cb2-9" aria-hidden="true" tabindex="-1"></a>    <span class="bu">console</span><span class="op">.</span><span class="fu">log</span>(<span class="vs">`你的浏览器不支持分享这些文件……`</span>)<span class="op">;</span></span>
<span id="cb2-10"><a href="#cb2-10" aria-hidden="true" tabindex="-1"></a>&#125;</span></code></pre></div>
<h3 id="分享目标">分享目标</h3>
<p>要成为分享目标，应用程序需要满足 Chrome
设置的一些标准。你可以浏览一下<a href="https://developers.google.com/web/fundamentals/app-install-banners/#criteria">这篇帮助文档</a>来查看这些条件。</p>
<p>要在网络应用清单中注册，你必须添加一个
<code>share_target</code>。这会提醒浏览器将该应用视为一个可能的分享选项，如下文所示：</p>
<ol type="1">
<li>接收基本信息</li>
<li>接收文件</li>
<li>接收应用程序变更</li>
</ol>
<p>你必须使用 Web Share Target API
来声明分享目标。它可以明确与其他应用程序分享的文件和内容：</p>
<div class="sourceCode" id="cb3"><pre class="sourceCode json"><code class="sourceCode json"><span id="cb3-1"><a href="#cb3-1" aria-hidden="true" tabindex="-1"></a><span class="fu">&#123;</span></span>
<span id="cb3-2"><a href="#cb3-2" aria-hidden="true" tabindex="-1"></a>  <span class="dt">"share_target"</span><span class="fu">:</span> <span class="fu">&#123;</span></span>
<span id="cb3-3"><a href="#cb3-3" aria-hidden="true" tabindex="-1"></a>    <span class="dt">"action"</span><span class="fu">:</span> <span class="st">"/?share-target"</span><span class="fu">,</span></span>
<span id="cb3-4"><a href="#cb3-4" aria-hidden="true" tabindex="-1"></a>    <span class="dt">"method"</span><span class="fu">:</span> <span class="st">"POST"</span><span class="fu">,</span></span>
<span id="cb3-5"><a href="#cb3-5" aria-hidden="true" tabindex="-1"></a>    <span class="dt">"enctype"</span><span class="fu">:</span> <span class="st">"multipart/form-data"</span><span class="fu">,</span></span>
<span id="cb3-6"><a href="#cb3-6" aria-hidden="true" tabindex="-1"></a>    <span class="dt">"params"</span><span class="fu">:</span> <span class="fu">&#123;</span></span>
<span id="cb3-7"><a href="#cb3-7" aria-hidden="true" tabindex="-1"></a>      <span class="dt">"files"</span><span class="fu">:</span> <span class="ot">[</span></span>
<span id="cb3-8"><a href="#cb3-8" aria-hidden="true" tabindex="-1"></a>        <span class="fu">&#123;</span></span>
<span id="cb3-9"><a href="#cb3-9" aria-hidden="true" tabindex="-1"></a>          <span class="dt">"name"</span><span class="fu">:</span> <span class="st">"file"</span><span class="fu">,</span></span>
<span id="cb3-10"><a href="#cb3-10" aria-hidden="true" tabindex="-1"></a>          <span class="dt">"accept"</span><span class="fu">:</span> <span class="ot">[</span></span>
<span id="cb3-11"><a href="#cb3-11" aria-hidden="true" tabindex="-1"></a>            <span class="st">"image/*"</span></span>
<span id="cb3-12"><a href="#cb3-12" aria-hidden="true" tabindex="-1"></a>          <span class="ot">]</span></span>
<span id="cb3-13"><a href="#cb3-13" aria-hidden="true" tabindex="-1"></a>        <span class="fu">&#125;</span></span>
<span id="cb3-14"><a href="#cb3-14" aria-hidden="true" tabindex="-1"></a>      <span class="ot">]</span></span>
<span id="cb3-15"><a href="#cb3-15" aria-hidden="true" tabindex="-1"></a>    <span class="fu">&#125;</span></span>
<span id="cb3-16"><a href="#cb3-16" aria-hidden="true" tabindex="-1"></a>  <span class="fu">&#125;</span></span>
<span id="cb3-17"><a href="#cb3-17" aria-hidden="true" tabindex="-1"></a><span class="fu">&#125;</span></span></code></pre></div>
<p>不过在已安装的应用程序之间传输文件会比较容易。你可以分享链接、文件等多种类型。</p>
<div class="sourceCode" id="cb4"><pre class="sourceCode js"><code class="sourceCode javascript"><span id="cb4-1"><a href="#cb4-1" aria-hidden="true" tabindex="-1"></a><span class="kw">async</span> <span class="kw">function</span> <span class="fu">share</span>(title<span class="op">,</span> text<span class="op">,</span> url) &#123;</span>
<span id="cb4-2"><a href="#cb4-2" aria-hidden="true" tabindex="-1"></a>    <span class="cf">try</span> &#123;</span>
<span id="cb4-3"><a href="#cb4-3" aria-hidden="true" tabindex="-1"></a>        <span class="cf">await</span> <span class="bu">navigator</span><span class="op">.</span><span class="fu">share</span>(&#123;title<span class="op">,</span> text<span class="op">,</span> url&#125;)<span class="op">;</span></span>
<span id="cb4-4"><a href="#cb4-4" aria-hidden="true" tabindex="-1"></a>        <span class="cf">return</span> <span class="kw">true</span><span class="op">;</span></span>
<span id="cb4-5"><a href="#cb4-5" aria-hidden="true" tabindex="-1"></a>    &#125; <span class="cf">catch</span> (ex) &#123;</span>
<span id="cb4-6"><a href="#cb4-6" aria-hidden="true" tabindex="-1"></a>        <span class="bu">console</span><span class="op">.</span><span class="fu">error</span>(<span class="st">'分享失败……'</span><span class="op">,</span> ex)<span class="op">;</span></span>
<span id="cb4-7"><a href="#cb4-7" aria-hidden="true" tabindex="-1"></a>        <span class="cf">return</span> <span class="kw">false</span><span class="op">;</span></span>
<span id="cb4-8"><a href="#cb4-8" aria-hidden="true" tabindex="-1"></a>    &#125;</span>
<span id="cb4-9"><a href="#cb4-9" aria-hidden="true" tabindex="-1"></a>&#125;</span></code></pre></div>
<h2 id="web-share-api-功能和局限性">Web Share API —— 功能和局限性</h2>
<h3 id="功能">功能</h3>
<ul>
<li>使用 Web Share，你的 Web
应用程序可以像特定平台的原生应用程序那样使用系统提供的分享功能。</li>
<li>开发者可以获得更全面的分享选项。</li>
<li>可以在设备中自定义分享目标和设备。因此，你可以提高页面加载速度。</li>
<li>Web Share API 有助于分享文本、URL 和文件。此外，Web Share
也扩展来其支持分享的范围。</li>
<li>它适用于 Chrome OS、Windows 平台的 Chrome、Safari 和 Android 的
Chromium 内核浏览器。</li>
</ul>
<h3 id="局限性">局限性</h3>
<p>然而，无论这个功能有多好，它也有不少缺点和局限性。</p>
<ul>
<li><p>首先，只有通过 https 访问的网站才能使用 Web Share。</p></li>
<li><p>还有一点就是，你不能用类似于 <code>onload</code>
的操作来调用它，它必须通过用户的交互行为进行调用。比如说，用户可以通过点击调用它。</p></li>
<li><p>另外，Mac 平台的 Chrome 的这个功能还在开发中。</p></li>
</ul>
<h2 id="小结">小结</h2>
<p>Web Share API 是一个现代化的 Web
平台功能，它有助于我们在社交网络、短信和注册目标应用之间更轻松地分享内容。</p>
<p>Chrome 是支持 Web Share Target API 的主要浏览器之一。此外，Safari
也支持它。</p>
<p><img src="https://cdn-images-1.medium.com/max/2000/1*CtRllCb7OzXfmPxJk4eaew.png"></p>
<blockquote>
<p>但是，Web Share API
应该由用户主动操作触发，这样做是为了减少不便和滥用。</p>
</blockquote>
<p>谢谢你的阅读。欢迎在下方留言，分享你的经验。</p>
<h2 id="译者补充翻译-mdn">译者补充翻译 —— MDN</h2>
<p><a href="https://developer.mozilla.org/en-US/docs/Web/API/Web_Share_API">网络共享
API</a> 的 <code>navigator.share()</code>
方法可以用于调用设备的本地共享机制来共享数据，如文本、URL
或文件。可用的_共享接受者_取决于设备，可能会包括剪贴板、联系人和电子邮件应用程序、网站、蓝牙等。</p>
<p>这个方法要求当前文档有 <a href="/en-US/docs/Web/HTTP/Headers/Feature-Policy/web-share"><code>web-share</code></a>
权限策略，并且该方法必须由一个 UI
事件触发，比如点击按钮，而不能由脚本自行调用。此外，该方法必须指定有效的数据，并由本地实现支持共享。</p>
<p>该方法会用 <code>undefined</code> 来 <code>resolve</code> 一个 <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise"><code>Promise</code></a>。在
Windows 上，<code>resolve</code> 会发生在启动共享弹出窗口的时候，而在
Android 上，一旦数据被成功传递到_共享接受者_，<code>Promise</code>
就会被 <code>resolve</code>。</p>
<h3 id="语法">语法</h3>
<pre><code>navigator.share(data)</code></pre>
<h4 id="参数">参数</h4>
<p><code>data</code></p>
<p>一个包含要分享的数据的对象。</p>
<p>User Agent
会忽略它无法解析的数据对象，并且也只会基于对象的属性进行判断。所有属性都是可选的，但必须至少指定一个已知的数据属性。</p>
<p>可能的值是。</p>
<ul>
<li><code>url</code>: 一个 <a href="https://developer.mozilla.org/en-US/docs/Web/API/USVString"><code>USVString</code></a>
代表一个要共享的URL。</li>
<li><code>text</code>: 一个 <a href="https://developer.mozilla.org/en-US/docs/Web/API/USVString"><code>USVString</code></a>
代表要分享的文本。</li>
<li><code>title</code>: 一个 <a href="https://developer.mozilla.org/en-US/docs/Web/API/USVString"><code>USVString</code></a>
代表要共享的标题（可能会被传递接受者忽略）。</li>
<li><code>files</code>: 一个 <a href="https://developer.mozilla.org/en-US/docs/Web/API/File"><code>File</code></a>
对象的数组，指代要共享的文件。关于可共享的文件类型详见下文。</li>
</ul>
<h4 id="返回值">返回值</h4>
<p>一个 <code>resolve</code> 结果为 <code>undefined</code>的 <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise"><code>Promise</code></a>。如果遇到错误，则会返回一个
<code>rejected</code> 的 <code>Promise</code>。</p>
<h3 id="exceptions">Exceptions</h3>
<p><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise"><code>Promise</code></a>
可能会被以下 <code>DOMException</code> 值之一拒绝。</p>
<p><code>NotAllowedError</code></p>
<p>产生该错误的原因是用户没有授予 <a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Feature-Policy/web-share">web-share</a>
权限，或者这一次调用不是由用户行为调用的（不是 UI
等调用的函数所调用的），或者由于安全考虑，文件共享被阻止了。</p>
<p><code>TypeError</code></p>
<p>指定的共享数据不合法，可能的原因包括:</p>
<ul>
<li><code>data</code>
参数被完全省略或只包含未知值的属性。请注意，任何无法被 User Agent
识别的属性都会被忽略。</li>
<li>一个不合规的 <code>URL</code>。</li>
<li>指定了一个文件但是浏览器在该平台上的 implement 不支持文件共享。</li>
<li>分享指定的数据会被 User Agent 认为是 “恶意的分享”。</li>
</ul>
<p><code>AbortError</code></p>
<p>用户取消了共享操作或没有可用的共享目标。</p>
<p><code>DataError</code></p>
<p>启动共享目标或传输数据时出现了问题。</p>
<h3 id="可共享文件类型">可共享文件类型</h3>
<p>下面是一个通常可共享的文件类型的列表。然而，你应该总是在调用这个 API
之前先用 <a href="https://developer.mozilla.org/en-US/docs/Web/API/Navigator/canShare"><code>navigator.canShare()</code></a>
测试共享是否会成功。</p>
<ul>
<li>应用程序文件
<ul>
<li><code>.pdf</code> - <code>application/pdf</code>。</li>
</ul></li>
<li>音频
<ul>
<li><code>.flac</code> - <code>audio/flac</code>。</li>
<li><code>.m4a</code> - <code>audio/x-m4a</code>。</li>
<li><code>.mp3</code> - <code>audio/mpeg</code> (也接受
<code>audio/mp3</code>)</li>
<li><code>.oga</code> - <code>audio/ogg</code>。</li>
<li><code>.ogg</code> - <code>audio/ogg</code>。</li>
<li><code>.opus</code> - <code>audio/ogg</code>。</li>
<li><code>.wav</code> - <code>audio/wav</code>。</li>
<li><code>.weba</code> - <code>audio/webm</code>。</li>
</ul></li>
<li>图像
<ul>
<li><code>.bmp</code> - <code>image/bmp</code>。</li>
<li><code>.gif</code> - <code>image/gif</code>。</li>
<li><code>.ico</code> - <code>image/x-icon</code>。</li>
<li><code>.jfif</code> - <code>image/jpeg</code>。</li>
<li><code>.jpeg</code> - <code>image/jpeg</code>。</li>
<li><code>.jpg</code> - <code>image/jpeg</code>。</li>
<li><code>.pjp</code> - <code>image/jpeg</code>。</li>
<li><code>.pjpeg</code> - <code>image/jpeg</code>。</li>
<li><code>.png</code> - <code>image/png</code>。</li>
<li><code>.svg</code> - <code>image/svg+xml</code>。</li>
<li><code>.svgz</code> - <code>image/svg+xml</code>。</li>
<li><code>.tif</code> - <code>image/tiff</code>。</li>
<li><code>.tiff</code> - <code>image/tiff</code>。</li>
<li><code>.webp</code> - <code>image/webp</code>。</li>
<li><code>.xbm</code> - <code>image/x-xbitmap</code>。</li>
</ul></li>
<li>文本
<ul>
<li><code>.css</code> - <code>text/css</code>。</li>
<li><code>.csv</code> - <code>text/csv</code>。</li>
<li><code>.ehtml</code> - <code>text/html</code>。</li>
<li><code>.htm</code> - <code>text/html</code>。</li>
<li><code>.html</code> - <code>text/html</code>。</li>
<li><code>.shtm</code> - <code>text/html</code>。</li>
<li><code>.shtml</code> - <code>text/html</code>。</li>
<li><code>.text</code> - <code>text/plain</code>。</li>
<li><code>.txt</code> - <code>text/plain</code>。</li>
</ul></li>
<li>视频
<ul>
<li><code>.m4v</code> - <code>video/mp4</code>。</li>
<li><code>.mp4</code> - <code>video/mp4</code>。</li>
<li><code>.mpeg</code> - <code>video/mpeg</code>。</li>
<li><code>.mpg</code> - <code>video/mpeg</code>。</li>
<li><code>.ogm</code> - <code>video/ogg</code>。</li>
<li><code>.ogv</code> - <code>video/ogg</code>。</li>
<li><code>.webm</code> - <code>video/webm</code>。</li>
</ul></li>
</ul>
<h3 id="示例">示例</h3>
<p>如下例子为分享网页链接：一个监测点击按钮行为，调用 Web Share API 分享
MDN 的 URL 的例子。这是从我们的 <a href="https://mdn.github.io/dom-examples/web-share/">Web Share
Test</a>（<a href="https://github.com/mdn/dom-examples/blob/master/web-share/index.html">见源代码</a>）中复制过来的。</p>
<h4 id="html">HTML</h4>
<p>HTML 代码仅仅只包括一个按钮供触发事件以及一个 <code>&lt;p&gt;</code>
标签用于显示测试结果。</p>
<div class="sourceCode" id="cb6"><pre class="sourceCode html"><code class="sourceCode html"><span id="cb6-1"><a href="#cb6-1" aria-hidden="true" tabindex="-1"></a><span class="kw">&lt;p&gt;&lt;button&gt;</span>Share MDN!<span class="kw">&lt;/button&gt;&lt;/p&gt;</span></span>
<span id="cb6-2"><a href="#cb6-2" aria-hidden="true" tabindex="-1"></a><span class="kw">&lt;p</span> <span class="er">class</span><span class="ot">=</span><span class="st">"result"</span><span class="kw">&gt;&lt;/p&gt;</span></span></code></pre></div>
<h3 id="javascript">JavaScript</h3>
<div class="sourceCode" id="cb7"><pre class="sourceCode js"><code class="sourceCode javascript"><span id="cb7-1"><a href="#cb7-1" aria-hidden="true" tabindex="-1"></a><span class="kw">const</span> shareData <span class="op">=</span> &#123;</span>
<span id="cb7-2"><a href="#cb7-2" aria-hidden="true" tabindex="-1"></a>    <span class="dt">title</span><span class="op">:</span> <span class="st">'MDN'</span><span class="op">,</span></span>
<span id="cb7-3"><a href="#cb7-3" aria-hidden="true" tabindex="-1"></a>    <span class="dt">text</span><span class="op">:</span> <span class="st">'在 MDN 上学习技术！'</span><span class="op">,</span></span>
<span id="cb7-4"><a href="#cb7-4" aria-hidden="true" tabindex="-1"></a>    <span class="dt">url</span><span class="op">:</span> <span class="st">'https://developer.mozilla.org'</span></span>
<span id="cb7-5"><a href="#cb7-5" aria-hidden="true" tabindex="-1"></a>&#125;<span class="op">;</span></span>
<span id="cb7-6"><a href="#cb7-6" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb7-7"><a href="#cb7-7" aria-hidden="true" tabindex="-1"></a><span class="kw">const</span> btn <span class="op">=</span> <span class="bu">document</span><span class="op">.</span><span class="fu">querySelector</span>(<span class="st">'button'</span>)<span class="op">;</span></span>
<span id="cb7-8"><a href="#cb7-8" aria-hidden="true" tabindex="-1"></a><span class="kw">const</span> resultPara <span class="op">=</span> <span class="bu">document</span><span class="op">.</span><span class="fu">querySelector</span>(<span class="st">'.result'</span>)<span class="op">;</span></span>
<span id="cb7-9"><a href="#cb7-9" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb7-10"><a href="#cb7-10" aria-hidden="true" tabindex="-1"></a><span class="co">// 分享操作必须由用户行为触发</span></span>
<span id="cb7-11"><a href="#cb7-11" aria-hidden="true" tabindex="-1"></a>btn<span class="op">.</span><span class="fu">addEventListener</span>(<span class="st">'click'</span><span class="op">,</span> <span class="kw">async</span> () <span class="kw">=&gt;</span> &#123;</span>
<span id="cb7-12"><a href="#cb7-12" aria-hidden="true" tabindex="-1"></a>  <span class="cf">try</span> &#123;</span>
<span id="cb7-13"><a href="#cb7-13" aria-hidden="true" tabindex="-1"></a>    <span class="cf">await</span> <span class="bu">navigator</span><span class="op">.</span><span class="fu">share</span>(shareData)<span class="op">;</span></span>
<span id="cb7-14"><a href="#cb7-14" aria-hidden="true" tabindex="-1"></a>    resultPara<span class="op">.</span><span class="at">textContent</span> <span class="op">=</span> <span class="st">'MDN 链接被成功分享了'</span></span>
<span id="cb7-15"><a href="#cb7-15" aria-hidden="true" tabindex="-1"></a>  &#125; <span class="cf">catch</span>(err) &#123;</span>
<span id="cb7-16"><a href="#cb7-16" aria-hidden="true" tabindex="-1"></a>    resultPara<span class="op">.</span><span class="at">textContent</span> <span class="op">=</span> <span class="st">'Error: '</span> <span class="op">+</span> err</span>
<span id="cb7-17"><a href="#cb7-17" aria-hidden="true" tabindex="-1"></a>  &#125;</span>
<span id="cb7-18"><a href="#cb7-18" aria-hidden="true" tabindex="-1"></a>&#125;)<span class="op">;</span></span></code></pre></div>
<h3 id="规范">规范</h3>
<p>相关规范：<a href="https://w3c.github.io/web-share/#share-method">Web
Share API #share-method</a></p>]]></content>
      <categories>
        <category>Computer Science</category>
        <category>Frontend</category>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>Computer Science</tag>
        <tag>JavaScript</tag>
        <tag>Frontend</tag>
      </tags>
  </entry>
  <entry>
    <title>使用 Flutter 构建一个名言名句应用程序</title>
    <url>/2021/05/01/computer%20science/dart/flutter-quote-app/</url>
    <content><![CDATA[<blockquote>
<ul>
<li>原文地址：<a href="https://medium.com/flutterdevs/flutter-quotes-app-bb30ef27b255">Flutter
Quotes App</a></li>
<li>原文作者：<a href="https://medium.com/@danubhav">Anubhav
Gupta</a></li>
<li>译者：<a href="https://github.com/PassionPenguin">霜羽
Hoarfroster</a></li>
<li>校对者：<a href="https://github.com/5Reasons">5Reasons</a>、<a href="https://github.com/greycodee">greycodee</a></li>
</ul>
</blockquote>
<p><img src="https://miro.medium.com/max/3600/1*WGJ7_7_EXkJwzf1mVTyjrA.png"></p>
<h2 id="引言">引言</h2>
<p>在过去的 8 个月里，我一直在探索
Flutter。今天我将带着大家开始一段旅程，制作一个属于自己的简单而又漂亮的应用，并同时学会进行
API 请求。</p>
<h2 id="目录-toc">目录 TOC</h2>
<blockquote>
<p>从互联网上获取数据。 设计应用程序的用户界面。 为文本设计样式。</p>
</blockquote>
<p>让我们开始……</p>
<h2 id="初步设置">初步设置</h2>
<p>在我们深入研究之前，不要忘记将这些包添加到你的项目中：</p>
<div class="sourceCode" id="cb1"><pre class="sourceCode yaml"><code class="sourceCode yaml"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a><span class="fu">animated_text_kit</span><span class="kw">:</span><span class="at"> ^3.1.0</span></span>
<span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a><span class="fu">google_fonts</span><span class="kw">:</span><span class="at"> ^1.1.1</span></span>
<span id="cb1-3"><a href="#cb1-3" aria-hidden="true" tabindex="-1"></a><span class="fu">http</span><span class="kw">:</span><span class="at"> ^0.12.2</span></span></code></pre></div>
<h2 id="创建一个新的-flutter-项目">创建一个新的 Flutter 项目</h2>
<p>打开你最喜欢的 IDE（VScode 或 Android Studio），创建一个新的 Flutter
应用，并给它取一个你喜欢的名字，保存在本地磁盘的某个地方。</p>
<p>首先我们删除掉默认生成的计数器应用代码，并创建一个主函数来运行我们的
Material 应用程序。</p>
<pre class="dart"><code>// main.dart

import 'package:flutter/material.dart';
import 'package:flutter_quote_app/screens/home.dart';

void main() &#123;
  runApp(MyApp());
&#125;

class MyApp extends StatelessWidget &#123;
  // 你的应用程序 Widget 树的根 Widget
  @override
  Widget build(BuildContext context) &#123;
    return MaterialApp(
        title: '名言名句应用程序',
        theme: ThemeData(
          primarySwatch: Colors.amber,
          visualDensity: VisualDensity.adaptivePlatformDensity,
        ),
        debugShowCheckedModeBanner: false,
        home: HomeScreen());
  &#125;
&#125;</code></pre>
<h2 id="通过-api-获取数据">通过 API 获取数据</h2>
<p>为了获得数据，我们需要一个 API 以获得名言名句的 JSON
格式的原始数据。</p>
<p>获取数据的 API 是 <a href="https://zenquotes.io/api/quotes"><strong>https://zenquotes.io/api/quotes</strong></a>。当你打开这个链接时，它会向你显示名言名句的原始数据。选择所有的文本复制一下，然后在另一个标签页中打开
<a href="https://app.quicktype.io/"><strong>quicktype</strong></a>
并粘贴进去，我们就可以立即生成我们的<strong>Dart Model</strong>。</p>
<p><img src="https://miro.medium.com/max/3840/1*zp9nqjB8poJ2Lb8gS-Zw3A.png"></p>
<p>将原始数据复制到左侧栏中，并给模型类命名：</p>
<pre class="dart"><code>// quotesmodel.dart

import 'dart:convert';

List&lt;Quotes&gt; quotesFromJson(String str) =&gt;
  List&lt;Quotes&gt;.from(json.decode(str).map((x) =&gt; Quotes.fromJson(x)));

String quotesToJson(List&lt;Quotes&gt; data) =&gt;
  json.encode(List&lt;dynamic&gt;.from(data.map((x) =&gt; x.toJson())));

class Quotes &#123;
  Quotes(&#123;
    this.q,
    this.a,
    this.h,
  &#125;);

  String q;
  String a;
  String h;

  factory Quotes.fromJson(Map&lt;String, dynamic&gt; json) =&gt; Quotes(
      q: json["q"],
      a: json["a"],
      h: json["h"],
    );

  Map&lt;String, dynamic&gt; toJson() =&gt; &#123;
      "q": q,
      "a": a,
      "h": h,
    &#125;;
&#125;</code></pre>
<p>以上是生成的 Dart 模型类。</p>
<h3 id="让我们创建一个函数来请求-api-获取数据">让我们创建一个函数来请求
API 获取数据</h3>
<pre class="dart"><code>// home.dart

static Future&lt;List&lt;Quotes&gt;&gt; fetchQuotes() async &#123;
  final response = await http.get('https://zenquotes.io/api/quotes');
  if (response.statusCode == 200) &#123;
    print(quotesFromJson(response.body).length);
    return quotesFromJson(response.body);
  &#125; else &#123;
    throw Exception('失败加载名言名句');
  &#125;
&#125;</code></pre>
<p>在上面的代码中，我们有一个异步方法，作出一个 GET
请求。如果响应的状态码是
<code>200</code>，它就会返回<strong>名言名句</strong>的列表，否则就抛出一个异常。</p>
<h2 id="设计-ui">设计 UI</h2>
<p>现在我们已经准备好了所有的东西，让我们做一个漂亮的 UI
来显示我们的名言名句。</p>
<p>所以，首先要创建一个有状态的 Widget 作为 <strong>HomeScreen</strong>
界面。它将有一个 <strong>Widget</strong> 构建方法（返回一个
<code>Scaffold</code>）。</p>
<pre class="dart"><code>// home.dart

import 'package:animated_text_kit/animated_text_kit.dart';
import 'package:flutter/material.dart';
import 'package:flutter_quote_app/models/qoutemodel.dart';
import 'package:google_fonts/google_fonts.dart';
import 'package:http/http.dart' as http;

class HomeScreen extends StatefulWidget &#123;
  @override
  _HomeScreenState createState() =&gt; _HomeScreenState();
&#125;

PageController pageController = PageController(keepPage: true);

class _HomeScreenState extends State&lt;HomeScreen&gt; &#123;
  // 调用 API 并获取数据
  static Future&lt;List&lt;Quotes&gt;&gt; fetchQuotes() async &#123;
    final response = await http.get('https://zenquotes.io/api/quotes');
    if (response.statusCode == 200) &#123;
      print(quotesFromJson(response.body).length);
      return quotesFromJson(response.body);
    &#125; else &#123;
      throw Exception('获取名言名句失败');
    &#125;
  &#125;

  @override
  void initState() &#123;
    super.initState();
    fetchQuotes();
  &#125;

  @override
  Widget build(BuildContext context) &#123;
    return Scaffold(
      body: Column(
        children: [
          Expanded(
            flex: 8,
            child: /* TODO */
          ),
          Expanded(
            child: Container(
              alignment: Alignment.center,
            ),
          ),
        ],
      ),
    );
  &#125;
&#125;</code></pre>
<p>在这里，我们使用 <code>Column</code> 作为 <code>Scaffold</code> 的
<code>body</code> 属性值，包含两个 <code>Expanded</code> 子
Widget，一个有 <code>flex: 8</code>，另一个没有 <code>flex</code>
不过有一个 <code>Container</code> 作为子 Widget。</p>
<p>另外，如果你看到上面的代码，我们有一个 <code>void</code> 返回值的
<code>initState</code>。它将在我们导航到 <code>HomeScreen</code>
时运行。它有我们的 <code>fetchQuotes</code> 方法，在 Widget
被插入到树中之前被调用。</p>
<blockquote>
<p>由于我们使用的是API，所以我们将使用 <code>FutureBuilder</code>。</p>
</blockquote>
<blockquote>
<p>为什么要用这个东西呢？</p>
</blockquote>
<p>由于我们的 UI 会在应用运行后立即构建，但我们却无法立刻获取到来自 API
的<strong><em>响应</em></strong>，因此如果你的 UI 依赖于 API
响应值，那么它将会抛出很多的 <code>null</code> 错误。</p>
<h3 id="让我们投奔-future">让我们投奔 Future</h3>
<p><code>FutureBuilder</code> 也是一个 Widget，因此我们可以直接在我们的
<code>Scaffold</code> 上使用它，或者也可以把它作为一个子 Widget
连接到任何你喜欢的 Widget 上。在这里我将使用 <code>Expanded</code>
Widget 作为 <code>FutureBuilder</code> 的父 Widget。</p>
<pre class="dart"><code>// home.dart

import 'package:animated_text_kit/animated_text_kit.dart';
import 'package:flutter/material.dart';
import 'package:flutter_quote_app/models/qoutemodel.dart';
import 'package:google_fonts/google_fonts.dart';
import 'package:http/http.dart' as http;

class HomeScreen extends StatefulWidget &#123;
  @override
  _HomeScreenState createState() =&gt; _HomeScreenState();
&#125;

PageController pageController = PageController(keepPage: true);

class _HomeScreenState extends State&lt;HomeScreen&gt; &#123;
  // 调用 API 并获取数据
  static Future&lt;List&lt;Quotes&gt;&gt; fetchQuotes() async &#123;
    final response = await http.get('https://zenquotes.io/api/quotes');
    if (response.statusCode == 200) &#123;
      print(quotesFromJson(response.body).length);
      return quotesFromJson(response.body);
    &#125; else &#123;
      throw Exception('失败加载名言名句');
    &#125;
  &#125;

  @override
  void initState() &#123;
    super.initState();
    fetchQuotes();
  &#125;

  @override
  Widget build(BuildContext context) &#123;
    return Scaffold(
      body: Column(
        children: [
          Expanded(
            flex: 8,
            child: FutureBuilder&lt;List&lt;Quotes&gt;&gt;(
              future: fetchQuotes(),
              builder:
                  (BuildContext context, AsyncSnapshot&lt;List&lt;Quotes&gt;&gt; snapshot) &#123;
                if (snapshot.connectionState == ConnectionState.done &amp;&amp;
                    snapshot.hasData) &#123;
                  return buildPageView(snapshot);
                &#125; else &#123;
                  return Center(child: CircularProgressIndicator());
                &#125;
              &#125;,
            ),
          ),
          Expanded(
            child: Container(
              alignment: Alignment.center,
            ),
          ),
        ],
      ),
    );
  &#125;</code></pre>
<p><code>FutureBuilder</code> 有两个主要属性：<code>future</code> 和
<code>builder</code>。这里我们将 <code>future</code> 赋值为
<code>fetchQuotes()</code> 方法以运行获取数据的函数并将结果返回给
<code>builder</code> 的
<code>snapshot</code>。现在只要用给出的结果创建任何你喜欢的 Widget
即可。</p>
<p>现在我想要的是这样的行为：当我在等待结果的时候，我想向用户显示一个
<code>CircularProgressIndicator</code>。而一旦有了返回的数据就立即显示名言名句页面。</p>
<p><code>FutureBuilder</code> 能帮助我们轻松实现：</p>
<pre class="dart"><code>future: fetchQuotes(),          
builder: (BuildContext context, AsyncSnapshot&lt;List&lt;Quotes&gt;&gt; snapshot) &#123;
    if (snapshot.connectionState == ConnectionState.done &amp;&amp; snapshot.hasData) &#123;
       return buildPageView(snapshot);
    &#125; else &#123;
       return Center(child: CircularProgressIndicator());
    &#125;
&#125;</code></pre>
<p>在这里，我们已经创建了我的 <code>PageView</code> Widget 构造器
<code>buildPageView()</code>，并将其传递给子 Widget。</p>
<h2 id="样式化文本">样式化文本</h2>
<pre class="dart"><code>// home.dart

PageView buildPageView(AsyncSnapshot&lt;List&lt;Quotes&gt;&gt; snapshot) &#123;
    return PageView.builder(
      controller: pageController,
      itemCount: snapshot.data.length,
      scrollDirection: Axis.vertical,
      itemBuilder: (BuildContext context, int index) &#123;
        return Container(
          // height: MediaQuery.of(context).size.height * 0.87,
          width: double.infinity,
          decoration: BoxDecoration(
            color: Colors.amberAccent[700],
            borderRadius: BorderRadius.only(
              topLeft: Radius.circular(20),
              bottomLeft: Radius.circular(60),
            ),
          ),
          padding: EdgeInsets.symmetric(horizontal: 20, vertical: 30),
          margin: EdgeInsets.only(bottom: 10),

          child: Stack(
            children: [
              Text(
                '名言名句应用程序',
                style: GoogleFonts.lobster(fontSize: 45, color: Colors.white),
              ),
              Align(
                alignment: Alignment.center,
                child: TyperAnimatedTextKit(
                  isRepeatingAnimation: false,
                  repeatForever: false,
                  displayFullTextOnTap: true,
                  speed: const Duration(milliseconds: 150),
                  onFinished: () &#123;
                    pageController.nextPage(
                      duration: Duration(seconds: 1),
                      curve: Curves.easeInOutCirc,
                    );
                  &#125;,
                  text: ['"' + snapshot.data[index].q + '"'],
                  textStyle: GoogleFonts.montserratAlternates(
                      fontSize: 30.0, color: Colors.white),
                ),
              ),
              Align(
                alignment: Alignment.bottomRight,
                child: Text(
                  snapshot.data[index].a,
                  style: GoogleFonts.lora(fontSize: 14),
                ),
              ),
            ],
          ),
        );
      &#125;,
    );
  &#125;
&#125;</code></pre>
<p>在 PageView 构造器中，我们使用了
<code>TyperAnimatedTextKit</code>，而你也需要导入这个包。在
<code>TyperAnimatedTextKit</code>
里面有一个函数，可以帮助我们在屏幕上输入完整的字符串时跳到下一页。另外，我们使用了
<strong>Google Fonts</strong>，你也需要导入同样的包。</p>
<p><img src="https://miro.medium.com/max/1200/1*PvXgGVrBtx31_HFm_mcWtg.gif"></p>
<p>瞧! 您已经创建了第一个名言名句应用程序。</p>
<p>本文代码：<a href="https://github.com/flutter-devs/flutter_quote_app.git"><strong>flutter-devs/flutter_quote_app</strong></a></p>]]></content>
      <categories>
        <category>Computer Science</category>
        <category>Dart</category>
        <category>Flutter</category>
      </categories>
      <tags>
        <tag>Computer Science</tag>
        <tag>UI</tag>
        <tag>Dart</tag>
        <tag>Flutter</tag>
      </tags>
  </entry>
  <entry>
    <title>Page Shield：保护浏览器中的用户数据</title>
    <url>/2021/05/01/computer%20science/frontend/introducing-page-shield/</url>
    <content><![CDATA[<blockquote>
<ul>
<li>原文地址：<a href="https://blog.cloudflare.com/introducing-page-shield/">Page Shield:
Protect User Data In-Browser</a></li>
<li>原文作者：<a href="https://blog.cloudflare.com/author/justin-zhou">Justin
Zhou</a></li>
<li>译者：<a href="https://github.com/PassionPenguin">霜羽
Hoarfroster</a></li>
<li>校对者：</li>
</ul>
</blockquote>
<p><img src="https://blog.cloudflare.com/content/images/2021/03/image3-31.png"></p>
<p>今天我们很高兴为大家介绍 Page
Shield，一款客户端安全产品，用于检测终端用户浏览器中的攻击。</p>
<p>从 2015 年开始，一个名为 <a href="https://sansec.io/what-is-magecart">Magecart</a>
的黑客组织通过用恶意代码感染第三方依赖关系来窃取在线商店的支付凭证。受感染的代码会被浏览器调用，会在浏览器上被执行以获取网页上的用户信息。在抓取信息后，受感染的代码会将这些信息发送给黑客，用于转售或用于发起额外的攻击，譬如说信用卡欺诈和身份盗窃。</p>
<p>此后，此类<a href="https://en.wikipedia.org/wiki/Supply_chain_attack">供应链攻击</a>的其他目标还包括
Ticketmaster、Newegg、英国航空等。英航的攻击源于他们的一个内置的泄露的
JavaScript 文件，使近 50 万客户的数据暴露在黑客面前。这次攻击导致了 GDPR
的罚款和<a href="https://www.bloomberg.com/news/articles/2021-01-12/british-airways-faces-biggest-class-action-suit-over-data-breach">「英国历史上最大的集体诉讼隐私案」</a>。总共有数百万用户受到了这些攻击的影响。</p>
<p>在组织或企业内部不用担心第三方插件之类的工具，编写安全代码已经够有挑战性了。许多的
SaaS
平台为数百万个网站提供第三方代码，意味着一次的泄密都有可能会带来毁灭性的结果。Page
Shield
帮助客户监控这些潜在的攻击载体，防止用户的机密信息落入黑客之手。</p>
<p>本周早些时候，<a href="https://blog.cloudflare.com/browser-isolation-for-teams-of-all-sizes/">我们宣布为所有人提供远程浏览器隔离工具</a>，以此来减轻员工浏览器中的客户端攻击。Page
Shield 正在继承 Cloudflare
对客户端安全问题的保护战略，帮助减轻针对客户的攻击。</p>
<h2 id="背景信息">背景信息</h2>
<p>Magecart
式攻击是一种在用户浏览器中进行的软件供应链攻击。攻击者的目标是第三方
JavaScript
依赖的主机，并且这些主机都获得了提供给浏览器的源代码的控制权。当受感染的代码执行时，它通常会试图窃取终端用户输入网站的敏感数据，如结账流程中的信用卡细节。</p>
<p>检测这些攻击富有挑战性，因为许多应用程序所有者都信任第三方的代码，相信这些
JavaScript
能够按照预期的方式运行。出于这种信任，第三方代码很少被应用程序所有者审核。在许多情况下，Magecart
攻击在检测之前已经持续了几个月。</p>
<p>数据泄露并不是唯一源自软件供应链的风险。近年来，我们还看到黑客修改第三方代码，向用户展示欺诈性广告。用户通过点击这些广告，进入钓鱼网站，他们的个人信息被黑客窃取。其他
JavaScript
恶意软件则利用终端用户资源为攻击者挖掘加密货币，破坏网站性能。</p>
<p>那么应用程序所有者可以做些什么来保护自己呢？现有的浏览器技术，如内容安全策略（CSP）和子资源完整性（SRI），可以对客户端威胁提供一些保护，但也仍然存在着一些缺点。</p>
<p>CSP
使应用程序所有者能够向浏览器发送一个允许列表，防止列表之外的任何资源被执行。虽然这可以防止某些跨站脚本攻击（XSS），但它无法检测到现有资源从良性状态变为恶意状态。管理
CSP
在操作上也具有挑战性，因为它要求开发人员在每次向网站添加新脚本时更新允许列表。</p>
<p>SRI 使应用程序所有者能够为 JavaScript
和其他资源指定一个预期的文件哈希。如果获取的文件与哈希值不匹配，就会被阻止执行。但
SRI 面对着一个很大的问题 ——
供应商经常更新他们的代码，并且在某些情况下向不同的终端用户提供不同的文件。我们还发现，JavaScript
厂商有时会因为间距等小的差异，向最终用户提供不同哈希值的版本文件。这可能会导致
SRI 阻止合法文件的执行，而不是应用程序所有者的过错。</p>
<h2 id="script-monitor-是第一个可用的-page-shield-功能">Script Monitor
是第一个可用的 Page Shield 功能。</h2>
<p>脚本监视器是 Cloudflare 对 Page Shield
野心的开始。开启后，它会随时间记录您网站的 JavaScript
依赖关系。当出现新的 JavaScript
依赖关系时，我们会向您发出警报，以便您可以调查它们是否是对您的网站的预期更改。这可以帮助您识别坏人是否修改了您的应用程序以请求新的恶意
JavaScript
文件。一旦测试版完成，这个初始功能集将免费提供给商业和企业客户。</p>
<h2 id="脚本监控如何工作">脚本监控如何工作？</h2>
<p>由于 Cloudflare
在应用程序源服务器和终端用户之间的独特位置，我们可以在响应到达终端用户之前对其进行修改。在这种情况下，我们会在页面通过我们的边缘时，向页面添加一个额外的内容-安全-政策-报告-只读头。当JavaScript文件试图在页面上执行时，浏览器将向
Cloudflare
发送报告。由于我们使用的是纯报告头，因此不需要应用程序所有者维护允许列表以获得相关的见解。</p>
<p>对于我们看到的每一份报告，我们会将 JavaScript
文件与该区域的历史依赖性进行比较，并检查该文件是否是新的。如果是，我们会发出警报，以便客户可以调查并确定是否是预期的变化。</p>
<figure>
<img src="https://blog.cloudflare.com/content/images/2021/03/image1-40.png" alt="位于 Firewall -> Page Shield 下的 Script Monitor 用户界面">
<figcaption aria-hidden="true">位于 Firewall -&gt; Page Shield 下的
Script Monitor 用户界面</figcaption>
</figure>
<p>脚本监控界面位于防火墙-&gt;页面屏蔽下。</p>
<p>作为测试版参与者，您将在您的 zone 仪表板的防火墙部分下看到 Page
Shield 标签。在那里，您可以找到脚本监控表，跟踪您区域的 JavaScript
依赖性。对于每个依赖项，你可以查看首次看到的日期、最后看到的日期以及检测到它的主机域。</p>
<figure>
<img src="https://blog.cloudflare.com/content/images/2021/03/image2-34.png" alt="发现新的 JavaScript 依赖关系的电子邮件通知示例">
<figcaption aria-hidden="true">发现新的 JavaScript
依赖关系的电子邮件通知示例</figcaption>
</figure>
<p>您还可以在仪表板中配置脚本监视器通知。每当您的网站请求一个新的
JavaScript 文件时，这些通知就会向电子邮件或 PagerDuty 发送警报。</p>
<h2 id="未来期望">未来期望</h2>
<p>我们的使命是帮助建立一个更好的互联网。这延伸到终端用户浏览器，在过去的几年里，我们已经看到浏览器的攻击次数惊人地增加。有了
Page
Shield，我们将帮助应用程序检测并减轻这些难以捉摸的攻击，以保证用户敏感信息的安全。</p>
<p>我们已经在 Script Monitor
中构建了代码更改检测功能。代码更改检测将定期获取您的应用程序的
JavaScript
依赖关系并分析其行为。当检测到现有文件有新的代码行为时，我们会向您发出警报，这样您就可以查看变化，并确定新代码是良性更新还是受感染的代码。</p>
<p>在代码更改检测之后，即将到来的是对 JavaScript
文件的智能分析。虽然当应用程序所有者的依赖关系发生变化时提醒他们，可以深入了解感兴趣的文件，但我们可以做得更好。我们已经与安全合作伙伴合作，获取了
Magecart JavaScript 的样本，并证明我们可以准确地对恶意 JavaScript
样本进行分类。我们计划进一步完善我们的技术，并最终开始在我们认为他们的依赖关系是恶意的时候向
Page Shield 客户发出警报。</p>
<p>我们已经与客户进行了交流，了解到维护 CSP
允许列表在操作上具有挑战性。如果新的客户端 JavaScript
在没有被添加到允许列表中的情况下部署，那么这些新代码将被浏览器阻止。这就是为什么我们会利用我们作为反向代理的地位来运负安全模型屏蔽。这将允许应用程序所有者阻止单个脚本，而无需维护允许列表，确保客户可以在没有繁琐开销的情况下发布新代码。</p>
<h2 id="报名参加测试版">报名参加测试版</h2>
<p>从今天开始，所有商业和企业客户都可以在<a href="https://www.cloudflare.com/waf/page-shield/">这里</a>注册，加入
Page Shield
的封闭测试版。通过加入测试版，客户将能够激活脚本监视器，并开始监控其网站的
JavaScript。</p>]]></content>
      <categories>
        <category>Computer Science</category>
        <category>Frontend</category>
      </categories>
      <tags>
        <tag>Computer Science</tag>
        <tag>Frontend</tag>
      </tags>
  </entry>
  <entry>
    <title>假如浏览器支持原生的&quot;跳至内容&quot;链接……</title>
    <url>/2021/04/23/computer%20science/frontend/imagining-native-skip-link/</url>
    <content><![CDATA[<blockquote>
<ul>
<li>原文地址：<a href="https://kittygiraudel.com/2021/03/07/imagining-native-skip-links/">Imagining
native skip links</a></li>
<li>原文作者：<a href="https://kittygiraudel.com/">kittygiraudel.com</a></li>
<li>译者：<a href="https://github.com/PassionPenguin">霜羽
Hoarfroster</a></li>
<li>校对者：<a href="https://github.com/chzh9311">chzh9311</a>、<a href="https://github.com/Kimhooo">Kimhooo</a></li>
</ul>
</blockquote>
<p>我们最近在 <a href="https://kittygiraudel.com/2020/12/01/a11y-advent-calendar/">A11y
Advent calendar</a> 话题中谈到了<a href="https://kittygiraudel.com/2020/12/06/a11y-advent-skip-to-content/">“跳至内容”链接</a>。如果你不熟悉这个概念，我引用一下那里的原文：</p>
<blockquote>
<p>当点击一个链接时，页面会被重新加载，焦点会恢复到页面顶部。而如果在这时候使用无障碍辅助功能在页面中导航，在访问主要内容之前，必须先逐一跳过整个页眉、导航，有时甚至包括侧边栏。这体验太糟糕了！为了解决这个问题，一个常见的设计模式是实现一个跳过链接，也就是发送至主要内容区域的锚链接。</p>
</blockquote>
<h2 id="存在的问题">存在的问题</h2>
<p>所以这一切都很好。只是跳至内容链接的实现并不那么简单。仅列出几个它应该满足的约束条件：</p>
<ul>
<li>它应该是第一个能够被辅助功能识别的链接。</li>
<li>它应该被<a href="https://kittygiraudel.com/2021/02/17/hiding-content-responsibly/">小心地隐藏起来</a>，以让其对特定用户而言仍然可以使用。</li>
<li>当聚焦到它上面时它应该变得可见。</li>
<li>它的内容应该以 “跳过” 开头，以便于让用户识别。</li>
<li>它应该导航到页面的主要内容。</li>
</ul>
<p>这并不复杂，但也很容易搞砸。既然每个网站都需要这样做，那么问题就来了
—— <strong>为什么浏览器不原生支持呢？</strong> —— 这是12月时<a href="https://github.com/WebWeWant/webwewant.fyi/discussions/233">我向
Web We Want</a>提议的。</p>
<h2 id="浏览器的功能">浏览器的功能？</h2>
<p>不难想象，为了给使用辅助技术的人提供更好、更一致的体验，浏览器可以在原生的情况下处理这个问题，几乎不需要网页开发人员进行控制。</p>
<p>在浏览器的用户界面中跳出一个标签（或使用专用的快捷键切换），进入另一个网页时，浏览器会立即显示跳过链接，并且清楚：</p>
<ol type="1">
<li>它将作为标签顺序中的第一个元素被插入。</li>
<li>它将使用浏览器的语言，这不一定是网页的语言。</li>
<li>从技术上讲，它将是浏览器界面的一部分，而不是网站的一部分。因此，这将根据浏览器的主题进行样式设计。</li>
<li>它不会被网页故意访问（严格意义上的）。</li>
<li>它将被渲染在页面的顶部，以避免破坏布局的风险。</li>
</ol>
<h2 id="一个-html-api">一个 HTML API</h2>
<p>中心思想是尽量减少对它的控制权。就像开发者对浏览器的标签或地址栏的外观和行为没有发言权一样。也就是说，链接的目标应该是可以配置的。</p>
<p>一个合理的默认值是指向 <code>&lt;main&gt;</code>
元素，因为它在每个页面中都是唯一的，并且明确地要包含主要内容。</p>
<blockquote>
<p><code>&lt;main&gt;</code>
是文档或应用程序正文的主要内容。主要内容区域由与文档的中心主题或应用程序的中心功能直接相关或扩展的内容组成。
- <a href="https://html.spec.whatwg.org/multipage/grouping-content.html#the-main-element">W3C
HTML 编辑草案</a></p>
</blockquote>
<p>但并不是所有的网站都使用 <code>&lt;main&gt;</code>
元素。我认为浏览器可能会有一些内置的启发式方法来找出什么是主要的内容容器，但恐怕这不在该功能讨论的范围内。</p>
<p>因此，为了给 Web
开发者提供一种方法来精确定义哪个容器才是真正的主容器，可以使用一个
<code>&lt;meta&gt;</code> 标签。它将接受一个 CSS
选择器（复杂程度由需求决定），当使用跳过链接时，浏览器将查询该 DOM
节点，将滚动并聚焦它。</p>
<div class="sourceCode" id="cb1"><pre class="sourceCode html"><code class="sourceCode html"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a><span class="kw">&lt;meta</span> <span class="er">name</span><span class="ot">=</span><span class="st">"skip-link"</span> <span class="er">value</span><span class="ot">=</span><span class="st">"#content"</span><span class="kw">/&gt;</span></span></code></pre></div>
<p>另一种方法是使用带有 <code>rel</code> 属性的
<code>&lt;link&gt;</code> 标签，如 <a href="https://github.com/WebWeWant/webwewant.fyi/discussions/233#discussioncomment-146471">Aaron
Gustafson 所提示的</a>。</p>
<div class="sourceCode" id="cb2"><pre class="sourceCode html"><code class="sourceCode html"><span id="cb2-1"><a href="#cb2-1" aria-hidden="true" tabindex="-1"></a><span class="kw">&lt;link</span> <span class="er">rel</span><span class="ot">=</span><span class="st">"skip-link"</span> <span class="er">href</span><span class="ot">=</span><span class="st">"#content"</span><span class="kw">/&gt;</span></span></code></pre></div>
<p>浏览器是否应该监听这个元素的变化（不管是什么）是一个开放性的问题。我认为是的，只是为了安全起见。</p>
<h2 id="现有的跳转内容链接应该怎么处理">现有的跳转内容链接应该怎么处理？</h2>
<p>浏览器是否会在本地实现跳过链接，我们现有的自定义链接又会怎样？他们很可能不会有太大的困扰。</p>
<p>在网页内容区域中的标签将显示原生的跳转链接。如果使用，它将绕过整个导航，包括自定义跳转链接。如果不使用，下一个标签将是网站的跳转链接，这将是多余的，但也无关紧要。</p>
<p>理想的情况是，浏览器提供一种方法来知道是否支持该功能，这样跳转链接就可以为还不支持跳转链接的浏览器进行多重填充。不过这很可能需要
JavaScript。</p>
<div class="sourceCode" id="cb3"><pre class="sourceCode js"><code class="sourceCode javascript"><span id="cb3-1"><a href="#cb3-1" aria-hidden="true" tabindex="-1"></a><span class="cf">if</span> (<span class="op">!</span>windows<span class="op">.</span><span class="at">navigator</span><span class="op">.</span><span class="at">skipLink</span>) &#123;</span>
<span id="cb3-2"><a href="#cb3-2" aria-hidden="true" tabindex="-1"></a>    <span class="kw">const</span> skipLink <span class="op">=</span> <span class="bu">document</span><span class="op">.</span><span class="fu">createElement</span>(<span class="st">'a'</span>)</span>
<span id="cb3-3"><a href="#cb3-3" aria-hidden="true" tabindex="-1"></a>    skipLink<span class="op">.</span><span class="at">href</span><span class="op">=</span><span class="st">'#main'</span></span>
<span id="cb3-4"><a href="#cb3-4" aria-hidden="true" tabindex="-1"></a>    skipLink<span class="op">.</span><span class="at">innerHTML</span> <span class="op">=</span> <span class="st">'跳转到主要内容'</span></span>
<span id="cb3-5"><a href="#cb3-5" aria-hidden="true" tabindex="-1"></a>    <span class="bu">document</span><span class="op">.</span><span class="at">body</span><span class="op">.</span><span class="fu">prepend</span>(skipLink)</span>
<span id="cb3-6"><a href="#cb3-6" aria-hidden="true" tabindex="-1"></a>&#125;</span></code></pre></div>
<h2 id="收尾">收尾</h2>
<p>这绝不是完美的，我也没有一个万无一失的解决方案可以提供。如果有的话，我相信比我更聪明、更有见识的人早就提出来了。</p>
<p>不过，缺乏跳转链接对使用辅助技术浏览网页的人来说是一个很大的障碍。而且考虑到每个网站都需要一个，不同网站之间几乎没有差异，这确实感觉像是浏览器在原生上该做的事情。</p>]]></content>
      <categories>
        <category>Computer Science</category>
        <category>Frontend</category>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>Computer Science</tag>
        <tag>JavaScript</tag>
        <tag>Frontend</tag>
      </tags>
  </entry>
  <entry>
    <title>7 个最能用于构造更整洁的 Flutter 应用的 Dart 小贴士和小技巧</title>
    <url>/2021/04/23/computer%20science/dart/top-7-dart-tips-and-tricks-for-cleaner-flutter-apps/</url>
    <content><![CDATA[<blockquote>
<ul>
<li>原文地址：<a href="https://betterprogramming.pub/top-7-dart-tips-and-tricks-for-cleaner-flutter-apps-562664a15826">Top
7 Dart Tips and Tricks for Cleaner Flutter Apps</a></li>
<li>原文作者：<a href="https://medium.com/@educative-inc">The Educative
Team</a></li>
<li>译者：<a href="https://github.com/PassionPenguin">霜羽
Hoarfroster</a></li>
<li>校对者：<a href="https://github.com/5Reasons">5Reasons</a>、<a href="https://github.com/greycodee">greycodee</a></li>
</ul>
</blockquote>
<figure>
<img src="https://cdn-images-1.medium.com/max/10368/1*UkUGENyS23H0pweg_EdyNg.jpeg" alt="由 Lucie Hošová 上传至 Unsplash">
<figcaption aria-hidden="true">由 <a href="https://unsplash.com/@marjorylucabaxter?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText">Lucie
Hošová</a> 上传至 <a href="https://unsplash.com/s/photos/dart?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText">Unsplash</a></figcaption>
</figure>
<p><a href="https://www.educative.io/blog/dart-2-language-features">Dart</a>
是一门针对客户端进行了优化的编程语言，专门用于快速地构建移动端、桌面端和服务端应用程序。Dart
由 Google 开发，并与 Google 的跨平台框架 Flutter 相互搭配。借助 Flutter
和 Dart，我们可以构建具有流畅 UI 和原生性能的应用程序。</p>
<p>今天，我们总结并分享了七个我们认为最实用的 Dart
技巧，来帮助大家改善应用程序的开发。我们可以使用这些技巧来编写简洁的代码，并充分利用上
Dart 所提供的许多特性。</p>
<p><strong>速览 —— 贴士和技巧：</strong></p>
<ol type="1">
<li>使用匿名函数作为参数</li>
<li>使用 <code>call</code> 方法让类可以像是个函数一样被调用</li>
<li>使用 <code>.entries</code> 来在一个 map 上遍历</li>
<li>如何使用 getter 和 setter</li>
<li>用 <code>Set</code> 存储唯一值</li>
<li>使用 Inspect 功能</li>
<li>使用 sync 和 async 生成器</li>
</ol>
<h2 id="使用匿名函数作为参数">1. 使用匿名函数作为参数</h2>
<p>在 Dart 语言中，我们可以将函数作为参数传递给其他函数，而 Dart
语言本身还支持无需命名即可调用的匿名函数。</p>
<p>以下是 Dart
中使用匿名函数的示例。在本例中，我们将一个匿名的求立方函数传递给内置方法
<code>forEach</code>，尝试获取 <code>list</code>
数组中每一项的立方。</p>
<pre class="dart"><code>main() &#123;
  var list = [1, 2, 3];
  list.forEach((item) &#123;
    print(item * item * item);
  &#125;);
&#125;</code></pre>
<h2 id="使用-call-方法让类可以像是个函数一样被调用">2. 使用
<code>call</code> 方法让类可以像是个函数一样被调用</h2>
<p>使用 Dart
语言我们可以构造一个可调用的类，允许将该类的实例作为函数调用。我们可以用
<code>call()</code> 方法做到这一点,请参见下面的语法：</p>
<pre class="dart"><code>class class_name &#123;
  ... // class 

  return_type call ( parameters ) &#123;
    ... // 调用这个函数内容
  &#125;

&#125;</code></pre>
<p>让我们来看一个例子：</p>
<pre class="dart"><code>class EducativeIntro &#123;

  // 定义 call 方法 
  String call(String a, String b, String c) =&gt; 'Welcome to $a$b$c';
&#125;

// 主函数  
void main() &#123;
  var educative_input = EducativeIntro();

  // 借助实例调用这个类
  var educative_output = educative_input('our ', 'Dart ', 'tutorial');

  print(educative_output);
&#125;</code></pre>
<blockquote>
<p><strong>注意：</strong> Dart 不支持多个可调用方法</p>
</blockquote>
<h2 id="使用-.entries-来在一个-map-上遍历">3. 使用 <code>.entries</code>
来在一个 map 上遍历</h2>
<p>在 Dart 中我们可以使用 <code>entries()</code>
方法以空安全的方式遍历一张 map。假设我们现在有一张 map
用于追踪在不同产品上花费的金额（通常我们会使用 <code>!</code> 运算符在此
map 中进行遍历）：</p>
<pre class="dart"><code>for (var key in moneySpent.keys) &#123;
  final value = moneySpent[key]!;
  print('$key: $value');
&#125;</code></pre>
<p>我们可以改进此代码，并使用循环使其更安全。当我们使用
<code>entries</code>
变量进行遍历时，我们可以用空安全的方式访问键值对。</p>
<pre class="dart"><code>for (var entry in moneySpent.entries) &#123;
  // 使用键值对做一些事情
  print('$&#123;entry.key&#125;: $&#123;entry.value&#125;');
&#125;</code></pre>
<h2 id="如何使用-getter-和-setter">4. 如何使用 getter 和 setter</h2>
<p>getter 和 setter
是一对特殊的方法，它们能够对一个对象的属性进行读、写操作。我们对 getter
和 setter
的调用类似于实例变量：点运算符（<code>.</code>）后面紧跟函数的名称。</p>
<p>getter 是用于获取对象属性值的函数，使用 <code>get</code>
关键字定义。</p>
<p>在下面的示例中，我们在第 13 行创建了一个 getter 函数，返回当前实例的
<code>name</code> 属性的值。而在第 21 行，我们调用了 getter
函数，这里的输出应是 <code>Sarah</code>。</p>
<pre class="dart"><code>class Person &#123;
  String name;
  String gender;
  int age;

  Person(this.name, this.gender, this.age);

  Person.newBorn()&#123;
    this.age = 0;
  &#125;

    // getter 函数，获取 name 的值
  String get personName =&gt; name;

  walking() =&gt; print('$name is walking');

  talking() =&gt; print('$name is talking');
&#125;

int main() &#123;
  var firstPerson = Person("Sarah", "Female", 25);
  print(firstPerson.personName);
&#125;</code></pre>
<p>setter 则是用于写入一个对象的属性的函数，使用 <code>set</code>
关键词：</p>
<pre class="dart"><code>class Person &#123;
  String name;
  String gender;
  int age;

  String get personName =&gt; name;

    // setter 函数用于设置 age 的值
  void set personAge(num val) &#123;
    if (val &lt; 0) &#123;
      print("Age cannot be negative");
    &#125; else &#123;
      this.age = val;
    &#125;
  &#125;

  walking() =&gt; print('$name is walking');

  talking() =&gt; print('$name is talking');
&#125;

int main() &#123;
  var firstPerson = Person();
  firstPerson.personAge = -5;
  print(firstPerson.age);
&#125;</code></pre>
<p>第 9 行到第 15 行代码中我们创建了一个 setter 函数用于设置
<code>age</code>
的值。该函数还被添加了一个条件判断，让我们不能输入负的年龄。在第 23
行，我们使用 <code>personAge</code> setter 函数为
<code>firstPerson</code> 设置了年龄值。</p>
<h2 id="用-set-存储唯一值">用 <code>Set</code> 存储唯一值</h2>
<p>列表是 Dart
中最常见的集合类型之一，但是列表可以容纳重复项。有时我们只想要唯一值的集合，这就是
<code>Set</code> 用武之处。</p>
<pre class="dart"><code>
final countriesSet = &#123;
  'USA',
  'India',
  'Iceland',
  'USA',
&#125;;</code></pre>
<p>在一个 <code>Set</code> 中两个元素不能相同，因此上面的代码会有一个
warning 并且无法被编译。同理使用 <code>const set</code>
也无法被编译。</p>
<h2 id="使用-inspect-功能">6. 使用 Inspect 功能</h2>
<p>在网络开发中我们经常会需要用到 Inspect 功能，因为它能够告诉我们应用于
HTML 标记的所有属性。Dart 也提供了类似的功能，我们称之为 Flutter
Inspect。这个功能可以有效简化 Flutter
应用程序的开发，用于找到屏幕上的任何控件并查看应用于它的属性。</p>
<p>Inspect 还可以帮助我们可视化 Flutter
控件树以了解布局或确定布局问题。</p>
<p>要使用它，请按照下列步骤操作：</p>
<ul>
<li>单击 <code>Flutter Inspector</code>。</li>
<li>单击 <code>启用选择 Widget 模式</code>。</li>
<li>选择屏幕上的控件以获取更多信息</li>
</ul>
<p><img src="https://cdn-images-1.medium.com/max/4920/1*8HtnC_I_iMewckScC92stA.png"></p>
<h2 id="使用-sync-和-async-生成器">7. 使用 Sync 和 Async 生成器</h2>
<p>在 Dart 中，生成器可以生成一系列值。而 Dart
一共有两个生成器函数：</p>
<ul>
<li><strong>同步生成器：</strong> 返回一个可迭代的对象</li>
<li><strong>异步生成器：</strong> 返回 <code>Stream</code> 对象</li>
</ul>
<p>换句话说，同步生成器返回可以顺序访问的值的集合。为此，我们将函数体标记为
<code>sync*</code>。我们会以 <code>yield</code> 语句用作值。</p>
<pre class="dart"><code>Iterable&lt;int&gt; count(int n) sync* &#123;
  for (var i = 1; i &lt;= n; i++) &#123;
    yield i;
  &#125;
&#125;</code></pre>
<p>异步生成器则会返回一个 <code>Stream</code>
对象，让接收一系列事件成为可能。我们可以通过将函数体标记为
<code>async*</code> 来做到这一点。我们会以 <code>yield</code>
语句用作值。</p>
<pre class="dart"><code>Stream&lt;int&gt; countStream(int n) async* &#123;
  for (var i = 1; i &lt;= n; i++) &#123;
    yield i;
  &#125;
&#125;</code></pre>
<h2 id="你下一步将学习什么">你下一步将学习什么？</h2>
<p>我们希望这些技巧能帮助您充分利用 Dart 及其提供的所有特性。Flutter 和
Dart
是一套强大的工具，用于构建具有原生感和流畅感的应用程序。接下来要研究的其他高级的
Dart 特性应该是：</p>
<ul>
<li>嵌套 <code>if</code> 语句的传播运算符</li>
<li>命名构造函数和初始化列表</li>
<li>Dart 库</li>
<li>枚举类型</li>
</ul>
<p>学习愉快！</p>]]></content>
      <categories>
        <category>Computer Science</category>
        <category>Dart</category>
        <category>Flutter</category>
      </categories>
      <tags>
        <tag>Computer Science</tag>
        <tag>Dart</tag>
        <tag>Flutter</tag>
      </tags>
  </entry>
  <entry>
    <title>是时候该罢黜 JPEG，独尊新编码了</title>
    <url>/2021/04/15/computer%20science/backend/time-for-next-gen-codecs-to-dethrone-jpeg/</url>
    <content><![CDATA[<blockquote>
<ul>
<li>原文地址：<a href="https://cloudinary.com/blog/time_for_next_gen_codecs_to_dethrone_jpeg">Time
for Next-Gen Codecs to Dethrone JPEG</a></li>
<li>原文作者：<a href="https://cloudinary.com/blog/author/jon_sneyers">Jon
Sneyers</a></li>
<li>译者：<a href="https://github.com/PassionPenguin">霜羽
Hoarfroster</a></li>
<li>校对者：<a href="https://github.com/Kimhooo">Kimhooo</a>、<a href="https://github.com/PingHGao">PingHGao</a></li>
</ul>
</blockquote>
<figure>
<img src="https://res.cloudinary.com/cloudinary-marketing/image/upload/c_fill,w_770/dpr_2.0,f_auto,fl_lossy,q_auto/v1/Web_Assets/blog/jxl-compare-codecs.png" alt="是时候用新一代图像编码格式替换 JPEG 编码格式了">
<figcaption aria-hidden="true">是时候用新一代图像编码格式替换 JPEG
编码格式了</figcaption>
</figure>
<p>我对图像编码十分狂热。如今，一场“图像编码之战”正在酝酿之中，而我并不是唯一<a href="https://codecs.multimedia.cx/2020/11/an-upcoming-image-format-war/">对此有想法</a>的人。显然，作为
JPEG 委员会 JPEG XL
特设小组的主席，我坚定地致力于多年的图像编码的工作。但是，在本文中，我将努力做到公平和中立。</p>
<p>目标很明确：罢黜 JPEG 这位在 <code>&lt;img&gt;</code> 标签诞生的 25
年以来（其实就是在网络上存在图片以来），一直居于统治地位的
<em>明智却年老的照片压缩大师</em>。JPEG
这个极度出色的图像编码现在已经达到了他的极限。为什么？仅仅提到他缺少对
alpha 透明度的支持，就足以让人烦恼许久，更不用说那色彩深度的 8
位的限制（也是他不支持 HDR
的原因），还有那和与现有技术相比相对薄弱的压缩。显然，进行谋权篡位的时候到了！</p>
<figure>
<img src="https://res.cloudinary.com/cloudinary-marketing/image/upload/w_700,c_fill,f_auto,q_auto,dpr_2.0/Web_Assets/blog/chess-board-competition.jpg" title="一张棋盘" alt="一张棋盘">
<figcaption aria-hidden="true">一张棋盘</figcaption>
</figure>
<p>六名选手正在进入战场，请做好准备 —— 全军出击：</p>
<ul>
<li><strong>JPEG 2000</strong> —— JPEG 小组，这是 JPEG
编码继承者中最早初露头角的一位，不过仅被 Safari 5+ 支持</li>
<li><strong>WebP</strong> —— Google，支持在所有现代浏览器中使用</li>
<li><strong>HEIC</strong> —— MPEG 小组，基于 HEVC，支持在 iOS
原生应用程序使用，但是不被任何一个包括 Safari 在内的浏览器支持</li>
<li><strong>AVIF</strong> —— 开源媒体协会，支持在 Chrome 和 Opera
浏览器中使用，可在 Firefox 中通过开启 <code>image.avif.enabled</code>
使用</li>
<li><strong>JPEG XL</strong> —— JPEG
小组，下一代编码但不被任何浏览器支持</li>
<li><strong>WebP2</strong> —— Google，一个针对 WebP
的实验性质的成功尝试，主要目标是达到与 AVIF
相似的压缩率，同时保持更快的编码和解码速度。</li>
</ul>
<p>由于 <a href="https://chromium.googlesource.com/codecs/libwebp2/">WebP2</a>
仍处于试验阶段，并且将是与 WebP
不兼容的全新格式，因此对他进行评估尚为时过早。其他图像编码则早已完成，不过完成时间有所不同：JPEG
2000 已经有了 20 年的历史，而 JPEG XL 项目才刚成立一个月。</p>
<p>坦率地说，基于 HEVC 的 HEIC 不是免费，或者说，不是开源的。即使得到了
Apple 的支持，HEIC 也不大可能成为替代 JPEG 的通用编码。</p>
<p>因此，本文重点关注将其余的新的编码（JPEG 2000、WebP、AVIF 和 JPEG
XL）与掌控旧政权的 JPEG 和 PNG 比较。</p>
<h2 id="压缩">压缩</h2>
<p>显然压缩是图像编码的重要指标，快来看看数据吧：</p>
<figure>
<img src="https://github.com/PassionPenguin/picgo-database/blob/main/time-for-next-gen-codecs-to-dethrone-jpeg-compression-benchmark.png?raw=true" title="压缩比较" alt="压缩比较">
<figcaption aria-hidden="true">压缩比较</figcaption>
</figure>
<ul>
<li>JPEG 是为了对相片进行有损压缩而创建，而 PNG
则专用于无损压缩，并在非摄影图像上表现最佳。在某种程度上，这两个编码是互补的，适用于我们实际应用中的各种用例和图像类型。</li>
<li>JPEG 2000 不仅优于
JPEG，而且还可以进行无损压缩。但是在非摄影图像上他落后于 PNG。</li>
<li>WebP 是专为替代 JPEG 和 PNG
所设计的，他在压缩结果上确实击败了两者，不过差距较小。对于高保真、有损压缩来说，WebP
有时甚至会比 JPEG 表现差。</li>
<li>相比 JPEG，HEIC 和 AVIF
更能有效地处理相片的有损压缩。虽然有时他们会在无损压缩方面落后于
PNG，但对于有损的非摄影图像来说会产生更好的结果。</li>
<li>JPEG XL 在压缩效果上突飞猛进，远胜过 JPEG 和 PNG。</li>
</ul>
<p>当有损压缩足够好（比如说针对 Web 图像而言）时，AVIF 和 JPEG XL
都有着比包括 WebP 在内的现有 Web 图像编码有着明显更好的结果。通常，AVIF
在<a href="https://cloudinary.com/blog/what_to_focus_on_in_image_compression_fidelity_or_appeal">低保真高吸引力</a>的压缩方面处于领先地位，而
JPEG XL
在中保真到高保真方面表现出色。目前尚不清楚这是两种图像格式的固有属性，还是开发编码器的一个关注点。不过无论如何，他们俩都远超
JPEG，领先着几英里。</p>
<h3 id="低保真度下的编码比较">低保真度下的编码比较</h3>
<ol type="1">
<li>原图 - PNG 1799446 bytes</li>
</ol>
<p><img src="https://res.cloudinary.com/cloudinary-marketing/image/upload/v1613766717/Web_Assets/blog/original.png"></p>
<ol start="2" type="1">
<li>JPEG - 68303 bytes</li>
</ol>
<p><img src="https://res.cloudinary.com/cloudinary-marketing/image/upload/v1613766730/Web_Assets/blog/full-jpeg.jpg"></p>
<ol start="3" type="1">
<li>JPEG 2000 - 67611 bytes</li>
</ol>
<p><img src="https://res.cloudinary.com/cloudinary-marketing/image/upload/v1613766747/Web_Assets/blog/011.jp2"></p>
<ol start="4" type="1">
<li>WEBP - 67760 bytes</li>
</ol>
<p><img src="https://res.cloudinary.com/cloudinary-marketing/image/upload/v1613767103/Web_Assets/blog/011webp.webp"></p>
<ol start="5" type="1">
<li>HEIC - 69798 bytes</li>
</ol>
<p><img src="https://res.cloudinary.com/cloudinary-marketing/image/upload/v1613766802/Web_Assets/blog/full-heic.png"></p>
<ol start="6" type="1">
<li>AVIF - 67629 bytes</li>
</ol>
<p><img src="https://res.cloudinary.com/cloudinary-marketing/image/upload/v1613767134/Web_Assets/blog/011avif.avif"></p>
<ol start="7" type="1">
<li>JXL - 67077 bytes</li>
</ol>
<p><img src="https://res.cloudinary.com/cloudinary-marketing/image/upload/v1613767179/Web_Assets/blog/011jxl.jxl"></p>
<h2 id="速率">速率</h2>
<p>对一张全屏的 JPEG 或 PNG 进行解码仅需极短的时间 ——
几乎只在眨眼瞬间。较新的编码能够做到更好地压缩，但这也会增加复杂性。例如，限制
JPEG 2000 的主要因素之一，就是其过高的计算复杂性。</p>
<figure>
<img src="https://github.com/PassionPenguin/picgo-database/blob/main/time-for-next-gen-codecs-to-dethrone-jpeg-speed-benchmark.png?raw=true" title="速率比较" alt="速率比较">
<figcaption aria-hidden="true">速率比较</figcaption>
</figure>
<p>如果图像压缩的主要目标是加快传送速度，那请顺带考虑解码速度。因为通常解码速度比编码速度更重要，毕竟在许多用例中，我们只需编码一次即可，而这一过程可以在强大的机器上离线进行。相反，解码则需要在包括低端设备在内的各种设备上进行多次。</p>
<p>由于 CPU
速度在单核性能方面一直处于停滞状态，因此并行化多核处理变得越来越重要。毕竟，硬件的发展趋势是拥有更多的
CPU
内核，而不是更高的时钟速度。由于在多核处理器成为现实之前设计完成，JPEG
和 PNG
等较旧的编码本质上是顺序的，也就是说，多核对单图像解码没有任何好处。在这方面，JPEG
2000、HEIC、AVIF 和 JPEG XL 都更具前瞻性。</p>
<h2 id="局限性">局限性</h2>
<p>JPEG（至少是事实上的 JPEG）和 WebP 的主要缺点是他们只支持最大的 8
位色彩深度。虽然说对于具有标准动态范围（SDR）和有限色域（如
sRGB）的图像，这个深度就足够了。但对于高动态范围（HDR）和广色域图像，那需要更高的深度。</p>
<p>目前，10 位的色彩深度足以满足图像传送的需要，而其他所有图像编码都支持
10
位的深度。不过对于创作工作流（可能仍需要连续的图像转换）则可能需要更高的深度。</p>
<figure>
<img src="https://github.com/PassionPenguin/picgo-database/blob/main/time-for-next-gen-codecs-to-dethrone-jpeg-limitations-benchmark.png?raw=true" title="局限性比较" alt="局限性比较">
<figcaption aria-hidden="true">局限性比较</figcaption>
</figure>
<p>WebP 和 HEIC
不支持没有色度二次采样的图像则是另一种限制。对于许多照片，色度二次采样已经足够了。在其他情况下，比如说那些具有精细细节或具有彩色外观的纹理或彩色文本图像上，WebP
和 HEIC 图像的表现可能就差强人意了。</p>
<p>当前，最大尺寸限制对 Web
部署几乎没有问题。但是，对于摄影和图像创作，基于视频编码的格式的限制可能会令人望而却步。请注意，即使
HEIC 和 AVIF 允许在 HEIF
容器级别进行切片，即实际图像尺寸实际上是不受限制的，但在切片边界处可能会出现伪像。例如，Apple
的 HEIC 实现使用大小为 512x512 的独立编码的图块，这意味着在例如另存为
HEIC 时，编码解码器会将原本 1586x752
的图像被切成八个较小的图像块，如下所示：</p>
<figure>
<img src="https://res.cloudinary.com/cloudinary-marketing/image/upload/w_700,c_fill,f_auto,q_auto,dpr_2.0/Web_Assets/blog/013b.png" title="编码的分块" alt="编码的分块">
<figcaption aria-hidden="true">编码的分块</figcaption>
</figure>
<p>如果你放大去关注一下那些独立编码的图块之间的边界，那你肯定能够很清晰地看到图块之间的不连续：</p>
<figure>
<img src="https://res.cloudinary.com/cloudinary-marketing/image/upload/w_700,c_fill,f_auto,q_auto,dpr_2.0/Web_Assets/blog/013heic.png" title="放大" alt="放大">
<figcaption aria-hidden="true">放大</figcaption>
</figure>
<p>为避免此类图块边界伪像，在使用 HEIC 和 AVIF
的时候我们应该避免让图像超过最大每块尺寸（即 8K 视频帧的大小）。</p>
<h2 id="动画">动画</h2>
<p>最初，GIF、JPEG 和 PNG 都只能表示静态图像。但 GIF 于 1989
年首先支持动画 ——
甚至在其他编码还没有出现之前，这可能是他尽管有其局限性和较差的压缩效果，但在今天仍在被广泛地使用的唯一原因。现在所有主流浏览器还支持动画
PNG（APNG）编码，这是一个<a href="https://caniuse.com/apng">相对较新的状况</a>。</p>
<p>在大多数情况下，最好使用视频编码而不是为静止图像设计的图像编码对动画进行编码。HEIC
和 AVIF 分别基于 HEVC 和 AV1，是真正的视频编码。尽管 JPEG XL
也支持动画，但他仅执行帧内编码，而没有运动矢量和视频编码提供的其他高级帧间编码工具的功能。即使对于仅运行几秒钟的短视频片段，视频编码的压缩效果也要比所谓的动画静止图像编码（如
GIF 和 APNG 甚至 WebP 动画或 JPEG XL）明显更好。</p>
<blockquote>
<p>注；如果浏览器在 <code>&lt;img&gt;</code> 标签中接受他们可以在
<code>&lt;video&gt;</code>
标签中播放的所有视频编码那会好极了！不过唯一的区别是在
<code>&lt;img&gt;</code>
标签中视频是自动播放、静音且循环播放的。借此这些新的精巧的视频编码格式（例如
VP9 和
AV1），就会被自动地应用于我们的动画之中，让我们最终能够摆脱那古老的 GIF
格式了～</p>
</blockquote>
<h2 id="功能">功能</h2>
<p>让我们谈回静止的图像。除了快速压缩 RGB
图片（没有大小或色彩深度限制）外，图像编码还必须提供其他所需功能。</p>
<figure>
<img src="https://github.com/PassionPenguin/picgo-database/blob/main/time-for-next-gen-codecs-to-dethrone-jpeg-features-benchmark.png?raw=true" title="功能对比" alt="功能对比">
<figcaption aria-hidden="true">功能对比</figcaption>
</figure>
<p>对于 Web 图像尤其是大的图像来说，慢慢加载的图像，即<a href="https://cloudinary.com/blog/improve_the_web_experience_with_progressive_image_decoding">渐进式解码</a>可是一项出色的功能。JPEG
编码系列在这方面最为强大。</p>
<p>此外所有新的编码均支持 Alpha
透明度。最新的还支持深度图，比如说我们可以使用深度图将效果应用于前景和背景。</p>
<p>具有多层的图像（称为叠加层）可以增强 Web
交付。一个典型的例子是我们可以为照片添加清晰的文字叠加层，从而具有更强的压缩效果和更少的伪影。不过，他在创作工作流程中最有用。此外，对于这些工作流程，JPEG
XL 还提供了诸如图层名称、选择蒙版、专色通道以及对 16 位整数和 16 位、24
位或 32 位浮点图像进行快速无损编码的功能。</p>
<p>在抵御世代丢失的弹性方面，视频编码不能完全发挥出色的性能。不过对于
Web
交付，这种缺陷并不重要，我指的是在图像变成例如模因，而最终被重新编码多次的情况下除外。</p>
<figure>
<img src="https://res.cloudinary.com/cloudinary-marketing/image/upload/w_700,c_fill,f_auto,q_auto,dpr_2.0/Web_Assets/blog/frame-2000.png" title="2000 代" alt="2000 代">
<figcaption aria-hidden="true">2000 代</figcaption>
</figure>
<p>最后，JPEG XL 的独特过渡功能是他可以有效地重新压缩<a href="https://cloudinary.com/blog/legacy_and_transition_creating_a_new_universal_image_codec">旧版
JPEG 文件</a>，而不会产生内容的丢失。</p>
<h2 id="希望与策略">希望与策略</h2>
<p>最新一代的图像编码尤其是 AVIF 和 JPEG XL，是对旧 JPEG 和 PNG
编码的重大改进。可以肯定的是，JPEG 2000 和 WebP
还可以更有效地压缩并提供更多功能，不过总体效果并不显着且不够稳定，不足以保证快速广泛地采用。AVIF
和 JPEG XL 会做得更好 —— 至少我是这么希望的。</p>
<p>在未来的几十年中，会不会有一个赢家成为主导的编码？如果会有，那会是
AVIF、JPEG XL 还是即将推出的 WebP2？还是
WebP，毕竟他有着广泛的浏览器支持？会不会有多个获胜者，例如 AVIF
是低保真高吸引力的首选编码，而 JPEG XL
是高保真的首选编码？那些新的编码会不会输掉这场战斗，而旧的 JPEG
又能再次在被罢黜的尝试中存活吗？我想回答这些问题为时尚早。</p>
<p>就目前而言，一个好的事件策略可能是同时使用几种不同的图像编码方法。不仅要利用他们的独特优势，还要降低任何一种方法成为<a href="https://www.sisvel.com/licensing-programs/audio-and-video-coding-decoding/video-coding-platform/license-terms/av1-license-terms">专利巨魔</a>攻击目标的可能性。磁盘空间在这里是无关紧要的，因为相对于存储它们的巨大存储空间，图像编码占用的空间微不足道。</p>
<p>此外，考虑到许多因素在起作用，但并非所有因素都是技术性的，因此很难预测编码采用的成功。我们只是希望新的编码能在这场战斗中取胜，这主要是与惯性和现状的“轻松”相对立的。最终，除非
JPEG
占主导地位，否则无论采用哪种新编码，我们都将受益于更强的压缩、更高的图像保真度和色彩准确性，从而能够使用更具吸引力且加载速度更快的图像。那将是每个人的胜利！</p>
<figure>
<img src="https://github.com/PassionPenguin/picgo-database/blob/main/time-for-next-gen-codecs-to-dethrone-jpeg-battle-of-codecs.png?raw=true" title="编码对比" alt="编码对比">
<figcaption aria-hidden="true">编码对比</figcaption>
</figure>
<blockquote>
<h3 id="注">注：</h3>
<p>同时，需要注意的是，上面列出的 AVIF 限制适用于当前定义的最高 AVIF
配置文件（“高级”配置文件），实际上有三个规则，像素数不得大于
35651584，宽度不得大于 16384 且高度不得大于
8704。也可以使用不带配置文件的 AVIF，然后适用 AV1 限制：色彩深度最高为
12 位，最大尺寸最高为
65535x65535（如果你选择使用网格，那还能够更大）。对于 HEIC
来说，可以将容器与具有高达 16 位色彩深度和 4:4:4 的压缩率的 HEVC
有效载荷一起使用，尽管大多数硬件实现均不支持该容器。</p>
</blockquote>]]></content>
      <categories>
        <category>Computer Science</category>
        <category>Backend</category>
        <category>Codecs</category>
      </categories>
      <tags>
        <tag>Computer Science</tag>
        <tag>Backend</tag>
        <tag>Codecs</tag>
        <tag>JPEG</tag>
      </tags>
  </entry>
  <entry>
    <title>Flutter 动画：构建一个和 Medium 一样的鼓掌动画</title>
    <url>/2021/04/11/computer%20science/dart/flutter-animation-creating-mediums-clap-animation-in-flutter/</url>
    <content><![CDATA[<blockquote>
<ul>
<li>原文地址：<a href="https://proandroiddev.com/flutter-animation-creating-mediums-clap-animation-in-flutter-3168f047421e">Flutter
Animation : Creating medium’s clap animation in flutter</a></li>
<li>原文作者：<a href="https://medium.com/@Kartik1607">Kartik
Sharma</a></li>
<li>译者：<a href="https://github.com/PassionPenguin">霜羽
Hoarfroster</a></li>
<li>校对者：<a href="https://github.com/greycodee">greycodee</a>、<a href="https://github.com/HumanBeingXenon">HumanBeingXenon</a></li>
</ul>
</blockquote>
<p>在这篇文章中，我们将从零开始探索 Flutter 动画。我们将通过在 Flutter
中模仿制作 Medium 的鼓掌动画，学习一些关于动画的核心概念。</p>
<p>正如标题所说，这篇文章将更多地关注动画，而不是 Flutter
的基础知识。</p>
<h2 id="入门">入门</h2>
<p>我们会从新建一个 Flutter 项目开始。每当我们新建一个 Flutter
项目，我们就会看到这段代码：</p>
<pre class="dart"><code>// main.dart

import 'package:flutter/material.dart';

void main() =&gt; runApp(new MyApp());

class MyApp extends StatelessWidget &#123;
  @override
  Widget build(BuildContext context) &#123;
    return new MaterialApp(
      title: 'Flutter Demo',
      theme: new ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: new MyHomePage(title: 'Flutter Demo Home Page'),
    );
  &#125;
&#125;

class MyHomePage extends StatefulWidget &#123;
  MyHomePage(&#123;Key key, this.title&#125;) : super(key: key);
  final String title;

  @override
  _MyHomePageState createState() =&gt; new _MyHomePageState();
&#125;

class _MyHomePageState extends State&lt;MyHomePage&gt; &#123;
  int _counter = 0;

  void _incrementCounter() &#123;
    setState(() &#123;
      _counter++;
    &#125;);
  &#125;

  @override
  Widget build(BuildContext context) &#123;
    return new Scaffold(
      appBar: new AppBar(
        title: new Text(widget.title),
      ),
      body: new Center(
        child: new Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: &lt;Widget&gt;[
            new Text(
              'You have pushed the button this many times:',
            ),
            new Text(
              '$_counter',
              style: Theme.of(context).textTheme.display1,
            ),
          ],
        ),
      ),
      floatingActionButton: new FloatingActionButton(
        onPressed: _incrementCounter,
        tooltip: 'Increment',
        child: new Icon(Icons.add),
      ),
    );
  &#125;
&#125;</code></pre>
<p>Flutter
为我们提供了一份免费的入门代码午餐～它已经管理了点击次数的状态，并为我们创建了一个浮动的动作按钮。</p>
<figure>
<img src="https://miro.medium.com/max/110/1*TpeTkSaUBAfKctD802YCtA.png" alt="我们目前有的按钮">
<figcaption aria-hidden="true">我们目前有的按钮</figcaption>
</figure>
<p>下面是我们想要达到的最终效果：</p>
<figure>
<img src="https://miro.medium.com/max/1600/1*Hnkdb5BSXFmjVitdYQiirQ.gif" alt="我们将会创建的动画。作者：Thuy Gia Nguyen">
<figcaption aria-hidden="true">我们将会创建的动画。作者：<a href="https://dribbble.com/shots/4294768-Medium-Claps-Made-in-Flinto"><strong>Thuy
Gia Nguyen</strong></a></figcaption>
</figure>
<p>在添加动画之前，我们先来快速浏览并解决一些简单的问题。</p>
<ol type="1">
<li>改变按钮图标和背景。</li>
<li>当我们按住按钮时，按钮应该继续添加计数。</li>
</ol>
<p>让我们添加这 2 个快速修复，然后开始制作动画：</p>
<pre class="dart"><code>// main.dart

class _MyHomePageState extends State&lt;MyHomePage&gt; &#123;
  int _counter = 0;
  final duration = new Duration(milliseconds: 300);
  Timer timer;


  initState() &#123;
    super.initState();
  &#125;

  dispose() &#123;
   super.dispose();
  &#125;

  void increment(Timer t) &#123;
    setState(() &#123;
      _counter++;
    &#125;);
  &#125;

  void onTapDown(TapDownDetails tap) &#123;
    // User pressed the button. This can be a tap or a hold.
    increment(null); // Take care of tap
    timer = new Timer.periodic(duration, increment); // Takes care of hold
  &#125;

  void onTapUp(TapUpDetails tap) &#123;
    // User removed his finger from button.
    timer.cancel();
  &#125;

  Widget getScoreButton() &#123;

    return new Positioned(
        child: new Opacity(opacity: 1.0, child: new Container(
            height: 50.0 ,
            width: 50.0 ,
            decoration: new ShapeDecoration(
              shape: new CircleBorder(
                  side: BorderSide.none
              ),
              color: Colors.pink,
            ),
            child: new Center(child:
            new Text("+" + _counter.toString(),
              style: new TextStyle(color: Colors.white,
                  fontWeight: FontWeight.bold,
                  fontSize: 15.0),))
        )),
        bottom: 100.0
    );
  &#125;

  Widget getClapButton() &#123;
    // Using custom gesture detector because we want to keep increasing the claps
    // when user holds the button.
    return new GestureDetector(
        onTapUp: onTapUp,
        onTapDown: onTapDown,
        child: new Container(
          height: 60.0 ,
          width: 60.0 ,
          padding: new EdgeInsets.all(10.0),
          decoration: new BoxDecoration(
              border: new Border.all(color: Colors.pink, width: 1.0),
              borderRadius: new BorderRadius.circular(50.0),
              color: Colors.white,
              boxShadow: [
                new BoxShadow(color: Colors.pink, blurRadius: 8.0)
              ]
          ),
          child: new ImageIcon(
              new AssetImage("images/clap.png"), color: Colors.pink,
              size: 40.0),
        )
    );
  &#125;

  @override
  Widget build(BuildContext context) &#123;
    return new Scaffold(
      appBar: new AppBar(
        title: new Text(widget.title),
      ),
      body: new Center(
        child: new Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: &lt;Widget&gt;[
            new Text(
              'You have pushed the button this many times:',
            ),
            new Text(
              '$_counter',
              style: Theme
                  .of(context)
                  .textTheme
                  .display1,
            ),
          ],
        ),
      ),
      floatingActionButton: new Padding(
          padding: new EdgeInsets.only(right: 20.0),
          child: new Stack(
            alignment: FractionalOffset.center,
            overflow: Overflow.visible,
            children: &lt;Widget&gt;[
              getScoreButton(),
              getClapButton(),
            ],
          )
      ),
    );
  &#125;
&#125;</code></pre>
<p>从最终的产品来看，我们需要补充 3 点。</p>
<ol type="1">
<li>改变 Widget 的大小</li>
<li>当按钮被按下时，显示那个展示鼓掌次数的
Widget，并在按钮释放时隐藏这个 Widget</li>
<li>添加那些很小的向四周撒花的 Widget，并将它们做成动画</li>
</ol>
<p>让我们一个一个来，慢慢推进学习进度。开始之前，我们需要了解 Flutter
中一些关于动画的基本知识。</p>
<h2 id="了解-flutter-中基本动画的-widget">了解 Flutter 中基本动画的
Widget</h2>
<p>一个动画无非是一些随时间变化的数值。例如，当我们点击按钮时，我们想让显示鼓掌次数的
Widget
从底部逐步上移。当按钮释放的时候它应该已经上移了不少，这时候我们应该把它隐藏起来。</p>
<p>将焦点关注在显示鼓掌次数的 Widget
上，我们需要<strong>在一段时间内改变</strong>它的位置和不透明度。</p>
<pre class="dart"><code>// 显示鼓掌次数的 Widget

new Positioned(
  child: new Opacity(opacity: 1.0, 
    child: new Container(
      // ……
    )),
  bottom: 100.0
);</code></pre>
<p>比方说，我们想让显示鼓掌次数的 Widget 在 150
毫秒后才从底部向上淡入。让我们在时间轴上思索一下，如下所示：</p>
<p><img src="https://miro.medium.com/max/974/1*KZuvwwIIH-YDxiHpMr9FqA.png"></p>
<p>这是一幅简单的二维图像，位置随着时间推移而改变。</p>
<p>请注意这是一条斜线，不过如果你喜欢的话，这其实也可以是一条曲线。</p>
<p>你可以让位置随着时间慢慢增加，然后越来越快。或者你也可以让它以超高速进来，然后在最后慢下来。</p>
<p>这就是我们要介绍的第一个 Widget
<code>AnimationController</code>。</p>
<p><code>AnimationController</code> 构造器是这样的：</p>
<pre class="dart"><code>scoreInAnimationController = new AnimationController(duration: new Duration(milliseconds: 150), vsync: this);</code></pre>
<p>在这里，我们已经为动画创建了一个简单的控制器，并指定了要运行动画的持续时间为
150ms。不过那个 <code>vsync</code> 是什么？</p>
<p>移动设备每隔几毫秒就会刷新一次屏幕。这就是我们如何将一组图像感知为一个连续的流或一部影片。</p>
<p>屏幕刷新的速度可以因设备而异。比方说，手机每秒刷新屏幕 60 次（60
帧/秒），那就是每隔 16.67
毫秒之后设备会绘制一个新的界面。有时图像可能会发生错位（我们在屏幕刷新时发送了不同的图像），我们就会看到屏幕撕裂。<code>vsync</code>
可以解决这个问题。</p>
<p>让我们在控制器上添加一个监听器然后运行动画：</p>
<pre class="dart"><code>scoreInAnimationController.addListener(() &#123;
  print(scoreInAnimationController.value);
&#125;);
scoreInAnimationController.forward(from: 0.0);

/* OUTPUT
I/flutter ( 1913): 0.0
I/flutter ( 1913): 0.0
I/flutter ( 1913): 0.22297333333333333
I/flutter ( 1913): 0.3344533333333333
I/flutter ( 1913): 0.4459333333333334
I/flutter ( 1913): 0.5574133333333334
I/flutter ( 1913): 0.6688933333333335
I/flutter ( 1913): 0.7803666666666668
I/flutter ( 1913): 0.8918466666666668
I/flutter ( 1913): 1.0
*/</code></pre>
<p><strong>控制器在 150 毫秒内产生了从 0.0 到 1.0 的数字</strong> ——
请注意，产生的数值几乎是线性的（0.2, 0.3,
0.4……）。我们如何改变这种行为？这将由第二个 Widget
<code>CurvedAnimation</code> 来完成：</p>
<pre class="dart"><code>bounceInAnimation = new CurvedAnimation(parent: scoreInAnimationController, curve: Curves.bounceIn);
bounceInAnimation.addListener(() &#123;
  print(bounceInAnimation.value);
&#125;);

/* OUTPUT
I/flutter ( 5221): 0.0
I/flutter ( 5221): 0.0
I/flutter ( 5221): 0.24945376519722218
I/flutter ( 5221): 0.16975716286388898
I/flutter ( 5221): 0.17177866222222238
I/flutter ( 5221): 0.6359024059750003
I/flutter ( 5221): 0.9119433941222221
I/flutter ( 5221): 1.0
*/</code></pre>
<p>我们通过将 <code>parent</code>
设置为我们的控制器并提供我们想要跟随的曲线，创建了一个曲线动画。在 <a href="https://docs.flutter.io/flutter/animation/Curves-class.html">Flutter
Curves 类参考文档页面</a>我们可以看到一系列我们可以使用的曲线。控制器在
150 毫秒的时间内向曲线动画 Widget 提供 0.0 到 1.0 的数值，而曲线动画
Widget 就会按照我们设置的曲线对这些值进行插值。</p>
<p>现在我们得到了从 0.0 到 1.0 的值，而我们希望我们的展示点赞次数的
Widget 的动画值的范围是
<code>[0.0, 100.0]</code>。我们可以简单地将上一步得到的值乘以 100
来得到结果。或者我们可以使用第三种部件 <code>Tween</code> 类。</p>
<pre class="dart"><code>tweenAnimation = new Tween(begin: 0.0, end: 100.0).animate(scoreInAnimationController);
tweenAnimation.addListener(() &#123;
  print(tweenAnimation.value);
&#125;);

/* Output 
I/flutter ( 2639): 0.0
I/flutter ( 2639): 0.0
I/flutter ( 2639): 33.452000000000005
I/flutter ( 2639): 44.602000000000004
I/flutter ( 2639): 55.75133333333334
I/flutter ( 2639): 66.90133333333334
I/flutter ( 2639): 78.05133333333333
I/flutter ( 2639): 89.20066666666668
I/flutter ( 2639): 100.0
*/</code></pre>
<p><code>Tween</code> 类生成了从 <code>begin</code> 到 <code>end</code>
的值。我们使用了前面的 <code>scoreInAnimationController</code>
，它使用了一条线性曲线。（当然我们也可以使用我们的反弹曲线来获得不同的值）。<code>Tween</code>
的优势并不止于此 —— 你还可以 <code>Tween</code> 其他东西。<a href="https://docs.flutter.io/flutter/animation/Tween-class.html">你可以直接
<code>Tween</code> 颜色、偏移、位置以及其他继承了 <code>Tween</code>
基类的 Widget 属性</a>。</p>
<p><strong>展示鼓掌次数的 Widget 的位置动画</strong></p>
<p>在这一点上，我们已经有足够的知识让我们的展示鼓掌次数的 Widget
在我们按下按钮时从底部弹出，而在我们释放按钮的时候隐藏。</p>
<pre class="dart"><code>initState() &#123;
  super.initState();
  scoreInAnimationController = new AnimationController(duration: new Duration(milliseconds: 150), vsync: this);
  scoreInAnimationController.addListener(()&#123;
    setState(() &#123;&#125;); // 调用渲染函数（译者注：其实是更新状态）
  &#125;);
&#125;

void onTapDown(TapDownDetails tap) &#123;
  scoreInAnimationController.forward(from: 0.0);
  ...    
&#125;
Widget getScoreButton() &#123;
  var scorePosition = scoreInAnimationController.value * 100;
  var scoreOpacity = scoreInAnimationController.value;
  return new Positioned(
    child: new Opacity(opacity: scoreOpacity, 
      child: new Container(/* …… */)
    ),
    bottom: scorePosition
  );
&#125;</code></pre>
<figure>
<img src="https://miro.medium.com/max/748/1*SG72TWaiaHNspnOUmPityQ.gif" alt="动画的现状">
<figcaption aria-hidden="true">动画的现状</figcaption>
</figure>
<p>点开后弹出展示鼓掌次数的 Widget，不过还是有一个问题：</p>
<p>当我们多次点击按钮时，展示鼓掌次数的 Widget
会不断地弹出。这是因为上面代码中的一个小错误。我们告诉控制器在每次点击按钮时从
0 开始前进。</p>
<p>现在，让我们为展示鼓掌次数的 Widget 添加输出动画。</p>
<p>首先，我们添加一个枚举来更容易地管理展示鼓掌次数的 Widget
的状态。</p>
<pre class="dart"><code>enum ScoreWidgetStatus &#123;
  HIDDEN,
  BECOMING_VISIBLE,
  BECOMING_INVISIBLE
&#125;</code></pre>
<p>然后，我们创建一个动画控制器，对 Widget 的位置值在
<code>[100, 150]</code>
范围内进行非线性动画。我们还为动画添加了一个状态监听器，一旦动画结束，我们就将展示鼓掌次数的
Widget 的状态设置为隐藏。</p>
<pre class="dart"><code>scoreOutAnimationController = new AnimationController(vsync: this, duration: duration);
scoreOutPositionAnimation = new Tween(begin: 100.0, end: 150.0).animate(
  new CurvedAnimation(parent: scoreOutAnimationController, curve: Curves.easeOut)
);
scoreOutPositionAnimation.addListener(()&#123;
  setState(() &#123;&#125;);
&#125;);
scoreOutAnimationController.addStatusListener((status) &#123;
  if (status == AnimationStatus.completed) &#123;
    _scoreWidgetStatus = ScoreWidgetStatus.HIDDEN;
  &#125;
&#125;);</code></pre>
<p>当用户将手指从 Widget 上移开时，我们将设置相应的状态，并启动一个 300
毫秒的计时器。300 毫秒后，我们将对 Widget
的位置和不透明度进行动画处理：</p>
<pre class="dart"><code>void onTapUp(TapUpDetails tap) &#123;
  // 用户移开了他的手指
  scoreOutETA = new Timer(duration, () &#123;
    scoreOutAnimationController.forward(from: 0.0);
    _scoreWidgetStatus = ScoreWidgetStatus.BECOMING_INVISIBLE;
  &#125;);
  holdTimer.cancel();
&#125;</code></pre>
<p>当用户将手指点按 Widget 时，我们将设置相应的状态，并启动一个 300
毫秒的计时器：</p>
<pre class="dart"><code>void onTapDown(TapDownDetails tap) &#123;
  // 用户点按了按钮 —— 不管是长按还是点按
  if (scoreOutETA != null) scoreOutETA.cancel(); // 我们不希望次数消失！
  if (_scoreWidgetStatus == ScoreWidgetStatus.HIDDEN) &#123;
    scoreInAnimationController.forward(from: 0.0);
    _scoreWidgetStatus = ScoreWidgetStatus.BECOMING_VISIBLE;
  &#125;
  increment(null); // 关注点按
  holdTimer = new Timer.periodic(duration, increment); // 关注长按
&#125;</code></pre>
<p>我们还修改了 <code>TapDown</code>
事件，以处理一些特殊情况。最后，我们需要选择我们需要使用哪个控制器的值来处理我们的展示鼓掌次数的
Widget 的位置和不透明度。一个简单的 <code>switch</code>
就可以完成这项工作：</p>
<pre class="dart"><code>Widget getScoreButton() &#123;
  var scorePosition = 0.0;
  var scoreOpacity = 0.0;
  switch(_scoreWidgetStatus) &#123;
    case ScoreWidgetStatus.HIDDEN:
      break;
    case ScoreWidgetStatus.BECOMING_VISIBLE:
      scorePosition = scoreInAnimationController.value * 100;
      scoreOpacity = scoreInAnimationController.value;
      break;
    case ScoreWidgetStatus.BECOMING_INVISIBLE:
      scorePosition = scoreOutPositionAnimation.value;
      scoreOpacity = 1.0 - scoreOutAnimationController.value;
  &#125;
  return ……
&#125;</code></pre>
<p>当前输出：</p>
<p><img src="https://miro.medium.com/max/732/1*RNvj1meQIy6nCn5d-S74qQ.gif"></p>
<p>最后，我们需要选择我们需要使用哪个控制器的值来设置展示鼓掌次数的
Widget 的位置和不透明度 —— 它应该弹出+淡出。</p>
<p><strong>展示鼓掌次数的 Widget 大小动画</strong></p>
<p>在这一点上，当次数增加时我们也知道如何改变大小。让我们快速添加大小动画，然后我们转到撒花动画上。</p>
<p>我更新了 <code>ScoreWidgetStatus</code> 枚举，以持有一个额外的
<code>VISIBLE</code> 值。现在，我们为大小属性添加一个新的控制器。</p>
<pre class="dart"><code>scoreSizeAnimationController = new AnimationController(vsync: this, duration: new Duration(milliseconds: 150));
scoreSizeAnimationController.addStatusListener((status) &#123;
  if(status == AnimationStatus.completed) &#123;
    scoreSizeAnimationController.reverse();
  &#125;
&#125;);
scoreSizeAnimationController.addListener(()&#123;
  setState(() &#123;&#125;);
&#125;);</code></pre>
<p>控制器在 150 毫秒内产生从 0 到 1 的数值，一旦完成，我们就产生从 1 到
0 的数值，这样就有了很好的放大和缩小的效果。</p>
<p>我们还更新了我们的 <code>increment</code> 函数 ——
当数字递增时就会开始动画。</p>
<pre class="dart"><code>void increment(Timer t) &#123;
  scoreSizeAnimationController.forward(from: 0.0);
  setState(() &#123;
    _counter++;
  &#125;);
&#125;</code></pre>
<p>我们需要处理枚举的 <code>Visible</code> 属性的情况。为此，我们需要在
<code>TouchDown</code> 事件中添加一些判断：</p>
<pre class="dart"><code>void onTapDown(TapDownDetails tap) &#123;
  // 用户点按了按钮 —— 不管是长按还是点按
  if (scoreOutETA != null) scoreOutETA.cancel(); // 我们不希望次数消失！
  if(_scoreWidgetStatus == ScoreWidgetStatus.BECOMING_INVISIBLE) &#123;
    // 在 Widget 向上飞入的时候点击了按钮，把那玩意暂停掉！
    scoreOutAnimationController.stop(canceled: true);
    _scoreWidgetStatus = ScoreWidgetStatus.VISIBLE;
  &#125;
  else if (_scoreWidgetStatus == ScoreWidgetStatus.HIDDEN ) &#123;
    _scoreWidgetStatus = ScoreWidgetStatus.BECOMING_VISIBLE;
    scoreInAnimationController.forward(from: 0.0);
  &#125;
  increment(null); // 关注点按
  holdTimer = new Timer.periodic(duration, increment); // 关注长按
&#125;</code></pre>
<p>最后，我们在 Widget 中使用控制器的值。</p>
<pre class="dart"><code>extraSize = scoreSizeAnimationController.value * 10;
...
height: 50.0 + extraSize,
width: 50.0  + extraSize,
...</code></pre>
<p>完整的代码可以在 <a href="https://gist.github.com/Kartik1607/52c882194e3119e0d176fb15e6c6b913">GitHub
Gist</a>
处找到。这里我们同时运行的大小和位置的动画。尺寸放缩动画还需要一点点调整，最后再说。</p>
<figure>
<img src="https://miro.medium.com/max/716/1*5ttrTDWNuApskZBCIX1zrQ.gif" alt="尺寸和位置动画一起工作">
<figcaption aria-hidden="true">尺寸和位置动画一起工作</figcaption>
</figure>
<h2 id="撒花动画">撒花动画</h2>
<p>在做撒花动画之前，我们需要对尺寸放缩动画做一些调整。目前来看，按钮的放大幅度太大。解决方法很简单，将
<code>extrasize</code> 系数从 <code>10</code> 改为小一点的数字。</p>
<p>现在来看撒花动画。我们可以观察到，<strong>撒出来的花只是 5
个变化着位置的图像。</strong></p>
<p>我在微软的 Paint 软件中制作了一个三角形和一个圆形的图像，并将其保存到
Flutter 资源中。现在我们就可以将该图像作为 Image Asset 素材。</p>
<p>在制作动画之前，我们先来思考一下定位和一些我们需要完成的任务。</p>
<ol type="1">
<li>我们需要定位 5 张图片，每张图片呈现不同角度，围成一个完整的圆。</li>
<li>我们需要根据角度旋转图像。</li>
<li>我们需要随着时间增加圆的半径。</li>
<li>我们需要根据角度和半径找到坐标。</li>
</ol>
<p>简单的三角学给我们提供了根据角度的正弦和余弦得到 x 和 y
坐标的公式。</p>
<pre class="dart"><code>var sparklesWidget =
  new Positioned(child: new Transform.rotate(
    angle: currentAngle - pi/2,
    child: new Opacity(opacity: sparklesOpacity,
      child : new Image.asset("images/sparkles.png", width: 14.0, height: 14.0, ))
    ),
    left:(sparkleRadius*cos(currentAngle)) + 20,
    top: (sparkleRadius* sin(currentAngle)) + 20 ,
  );</code></pre>
<p>现在，我们需要创建 5 个这样的 Widget，而每个 Widget
都应该有不同的角度。一个简单的 <code>for</code> 循环就可以了。</p>
<pre class="dart"><code>for(int i = 0;i &lt; 5; ++i) &#123;
  var currentAngle = (firstAngle + ((2*pi)/5)*(i));
  var sparklesWidget = ...
  stackChildren.add(sparklesWidget);
&#125;</code></pre>
<p>我们只需将 <code>2*pi</code>（360 度）分成 5 份，并据此创建一个
Widget。然后，我们将这些 Widget
添加到一个数组中，这个数组将作为栈的孩子。</p>
<p>现在，在这一点上，大部分的工作已经完成。我们只需要对
<code>sparkleRadius</code> 进行动画处理，并在分数递增时生成一个新的
<code>firstAngle</code>。</p>
<pre class="dart"><code>sparklesAnimationController = new AnimationController(vsync: this, duration: duration);
sparklesAnimation = new CurvedAnimation(parent: sparklesAnimationController, curve: Curves.easeIn);
sparklesAnimation.addListener(()&#123;
  setState(() &#123; &#125;);
&#125;);

void increment(Timer t) &#123;
  sparklesAnimationController.forward(from: 0.0);
  ...
  setState(() &#123;
  ...
  _sparklesAngle = random.nextDouble() * (2*pi);
&#125;);
     
Widget getScoreButton() &#123;
  ...
  var firstAngle = _sparklesAngle;
  var sparkleRadius = (sparklesAnimationController.value * 50) ;
  var sparklesOpacity = (1 - sparklesAnimation.value);
  ...
&#125;</code></pre>
<figure>
<img src="https://miro.medium.com/max/788/1*O5FNILFgN18aAbfbTVfsDA.gif" alt="最终结果">
<figcaption aria-hidden="true">最终结果</figcaption>
</figure>
<p>这就是我们对 Flutter
中<strong>基本动画的介绍</strong>。我们未来还会继续探索更多的 Flutter
知识，以学习创建更高级的 UI。</p>
<p>你可以在我的 <a href="https://github.com/Kartik1607/FlutterUI/tree/master/MediumClapAnimation/medium_clap">Git
仓库</a>找到完整的代码。</p>]]></content>
      <categories>
        <category>Computer Science</category>
        <category>Dart</category>
        <category>Flutter</category>
      </categories>
      <tags>
        <tag>Computer Science</tag>
        <tag>UI</tag>
        <tag>Dart</tag>
        <tag>Flutter</tag>
      </tags>
  </entry>
  <entry>
    <title>当 Android 的 Compat 库不能拯救你的时候</title>
    <url>/2021/04/11/computer%20science/android/when-compat-libraries-do-not-save-you/</url>
    <content><![CDATA[<blockquote>
<ul>
<li>原文地址：<a href="https://proandroiddev.com/when-compat-libraries-do-not-save-you-dc55f16b4160">When
“Compat” libraries won’t save you</a></li>
<li>原文作者：<a href="https://dpreussler.medium.com">Danny
Preussler</a></li>
<li>译者：<a href="https://github.com/PassionPenguin">霜羽
Hoarfroster</a></li>
<li>校对者：<a href="https://github.com/Kimhooo">Kimhooo</a>、<a href="https://github.com/greycodee">greycodee</a></li>
</ul>
</blockquote>
<p>—— 还有为什么你应该避免使用 <code>NewApi</code> 抑制警告！</p>
<figure>
<img src="https://miro.medium.com/max/12000/1*_UZ7BojQmk2vRCTx6XIdLA.jpeg" alt="图源 Unsplash">
<figcaption aria-hidden="true">图源 <a href="https://unsplash.com/photos/EgGIPA68Nwo">Unsplash</a></figcaption>
</figure>
<p>Compat 支持库的概念可能是 Android 主导手机领域的重要方面之一。不像是
iOS，Android
用户往往因为他们的手机不允许更新而在新版本推出后不能更新他们的操作系统，而这就是
Android 的<a href="https://www.androidauthority.com/android-fragmentation-linux-kernel-1057450/">碎片化</a>问题。不过开发者们还是希望在他们的应用程序中使用最新的功能来竞争，而解决方法很简单：我们不需要在操作系统中添加新的
API，而是可以直接通过使用谷歌向我们提供的 “回溯” 版本，直接将这些 API
和你的应用一起打包部署。</p>
<p>这一切都始于 <a href="https://medium.com/u/8ddd94878165">Jake
Wharton</a> 开发的 <a href="https://github.com/JakeWharton/ActionBarSherlock">ActionBar
Sherlock</a> 项目。这个项目后来被 Google 采纳，放到了他们的
<strong>支持库</strong> 中。再后来，这个支持库被镜像为
<strong>Jetpack</strong> 下的 <strong>AndroidX</strong> 项目。</p>
<h2 id="相同但也不同">相同，但也不同</h2>
<p>从表面上看，并不是所有的 Compat API 都是以同样的方式构建的。有些
API，比如 Fragment 的，是由完整的代码拷贝构建的。你要么使用操作系统中的
<code>android.app.Fragment</code>（实际上已经废弃）类，要么使用
<code>androidx.fragment.app.Fragment</code>
类。两者都不互相共享任何代码，也没有共同的基类（这就是为什么我们有两个版本的
<code>FragmentManager</code>）。</p>
<p>另一方面，例如 <code>AppCompatActivity</code>
这个类就是简单地扩展了原来的 <code>Activity</code> 类。另外
<code>AppCompatImageButton</code> 仍然是一个
<code>ImageButton</code>!</p>
<p>我们可以看到，有时这些 Compat
类只是起到一个桥梁的作用，用来添加缺失的功能，而有时它们甚至是完全一样的。</p>
<h2 id="让我们看看另一个例子">让我们看看另一个例子！</h2>
<p>不过有一个领域随着时间的推移发生了很大的变化，那就是 Android 的通知
API。曾经有一段时间，每一次 Google I/O 大会都会宣布一个新的 API
方面的变化。</p>
<p>好在我们有 <code>NotificationManagerCompat</code>
来拯救我们！！！</p>
<p>比如说当我们需要获取通知通道组（<code>NotificationChannelGroup</code>）的时候：</p>
<div class="sourceCode" id="cb1"><pre class="sourceCode kotlin"><code class="sourceCode kotlin"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a><span class="kw">val</span> <span class="va">groups</span> <span class="op">=</span> notificationManagerCompat<span class="op">.</span>notificationChannelGroups</span></code></pre></div>
<p>我们不需要担心通道组是否被所有操作系统版本支持，因为它实际上会被在
Compat 类中处理掉：</p>
<div class="sourceCode" id="cb2"><pre class="sourceCode kotlin"><code class="sourceCode kotlin"><span id="cb2-1"><a href="#cb2-1" aria-hidden="true" tabindex="-1"></a><span class="kw">public</span> List<span class="op">&lt;</span>NotificationChannelGroup<span class="op">&gt;</span> getNotificationChannelGroups<span class="op">()</span> <span class="op">&#123;</span></span>
<span id="cb2-2"><a href="#cb2-2" aria-hidden="true" tabindex="-1"></a>    <span class="cf">if</span> <span class="op">(</span>Build<span class="op">.</span>VERSION<span class="op">.</span>SDK_INT <span class="op">&gt;=</span> <span class="dv">26</span><span class="op">)</span> <span class="op">&#123;</span></span>
<span id="cb2-3"><a href="#cb2-3" aria-hidden="true" tabindex="-1"></a>        <span class="kw">return</span> mNotificationManager<span class="op">.</span>getNotificationChannelGroups<span class="op">()</span></span>
<span id="cb2-4"><a href="#cb2-4" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#125;</span></span>
<span id="cb2-5"><a href="#cb2-5" aria-hidden="true" tabindex="-1"></a>    <span class="kw">return</span> Collections<span class="op">.</span>emptyList<span class="op">()</span></span>
<span id="cb2-6"><a href="#cb2-6" aria-hidden="true" tabindex="-1"></a><span class="op">&#125;</span></span></code></pre></div>
<p>如果我们是在 API 26
之前，我们只会得到一个空的列表，如果不是我们就会得到在 API 26
中引入的新通道组。</p>
<p>你可以在 <a href="https://github.com/androidx/androidx/blob/androidx-main/core/core/src/main/java/androidx/core/app/NotificationManagerCompat.java#L230">NotificationManagerCompat</a>
代码处找到更复杂的检查。</p>
<p>但如果你仔细观察，<code>NotificationManagerCompat</code>
会返回我们实际的 API 类。在上面的示例代码中列出了
<code>NotificationChannelGroup</code>，这并不是一个复制的 Compat
版本，不过因为它检查了 API 的可用性，我们可以安全使用它。</p>
<div class="sourceCode" id="cb3"><pre class="sourceCode kotlin"><code class="sourceCode kotlin"><span id="cb3-1"><a href="#cb3-1" aria-hidden="true" tabindex="-1"></a><span class="kw">val</span> <span class="va">groups</span> <span class="op">=</span> notificationManagerCompat<span class="op">.</span>notificationChannelGroups</span>
<span id="cb3-2"><a href="#cb3-2" aria-hidden="true" tabindex="-1"></a><span class="kw">val</span> <span class="va">channels</span> <span class="op">=</span> groups<span class="op">.</span>flatMap <span class="op">&#123;</span></span>
<span id="cb3-3"><a href="#cb3-3" aria-hidden="true" tabindex="-1"></a>    it<span class="op">.</span>channels<span class="op">.</span>filter <span class="op">&#123;</span> it<span class="op">.</span>shouldShowLights<span class="op">()</span> <span class="op">&#125;</span></span>
<span id="cb3-4"><a href="#cb3-4" aria-hidden="true" tabindex="-1"></a><span class="op">&#125;</span></span></code></pre></div>
<p>这里我们只需要那些正在触发灯光的渠道组，也就是 API 26
及以上。由于我们使用的是比最低 SDK 级别更高的 API
级别的类，编译器会在这里警告我们：</p>
<p><img src="https://miro.medium.com/max/1692/1*WWdcZVLzzaXduUd1RT0vBg.png"></p>
<p>编译器并不在意我们使用 <code>NotificationManagerCompat</code>
来达到目的。</p>
<p>我们有多种方法来解决这个问题。</p>
<p><img src="https://miro.medium.com/max/1816/1*L_wx_xAhVMYE0SVzE7_AJw.png"></p>
<p>将 <code>RequiresApi</code>
注解添加到我们的方法中并没有什么意义，因为我们会简单地将警告移到调用函数中。用检查包围似乎已经过时了，因为这个检查已经由
<code>NotificationManagerCompat</code> 完成，如上图所示。</p>
<p>看来最好的选择是选择抑制这个警告。</p>
<div class="sourceCode" id="cb4"><pre class="sourceCode kotlin"><code class="sourceCode kotlin"><span id="cb4-1"><a href="#cb4-1" aria-hidden="true" tabindex="-1"></a><span class="at">@SuppressLint</span><span class="op">(</span><span class="st">"NewApi"</span><span class="op">)</span></span>
<span id="cb4-2"><a href="#cb4-2" aria-hidden="true" tabindex="-1"></a><span class="kw">private</span> <span class="kw">fun</span> <span class="fu">checkChannels</span><span class="op">()</span> <span class="op">&#123;</span></span>
<span id="cb4-3"><a href="#cb4-3" aria-hidden="true" tabindex="-1"></a>   <span class="kw">val</span> <span class="va">groups</span> <span class="op">=</span> notificationManagerCompat<span class="op">.</span>notificationChannelGroups</span>
<span id="cb4-4"><a href="#cb4-4" aria-hidden="true" tabindex="-1"></a>   <span class="kw">val</span> <span class="va">channels</span> <span class="op">=</span> groups<span class="op">.</span>flatMap <span class="op">&#123;</span></span>
<span id="cb4-5"><a href="#cb4-5" aria-hidden="true" tabindex="-1"></a>        it<span class="op">.</span>channels<span class="op">.</span>filter <span class="op">&#123;</span> it<span class="op">.</span>shouldShowLights<span class="op">()</span> <span class="op">&#125;</span></span>
<span id="cb4-6"><a href="#cb4-6" aria-hidden="true" tabindex="-1"></a>   <span class="op">&#125;</span></span>
<span id="cb4-7"><a href="#cb4-7" aria-hidden="true" tabindex="-1"></a>   <span class="op">...</span></span>
<span id="cb4-8"><a href="#cb4-8" aria-hidden="true" tabindex="-1"></a><span class="op">&#125;</span></span></code></pre></div>
<h2 id="新的需求即将到来">新的需求即将到来</h2>
<p>假设我们得到了额外的要求，我们需要过滤掉被屏蔽的组。我们可以为此添加一个简单的检查：</p>
<div class="sourceCode" id="cb5"><pre class="sourceCode kotlin"><code class="sourceCode kotlin"><span id="cb5-1"><a href="#cb5-1" aria-hidden="true" tabindex="-1"></a><span class="at">@SuppressLint</span><span class="op">(</span><span class="st">"NewApi"</span><span class="op">)</span></span>
<span id="cb5-2"><a href="#cb5-2" aria-hidden="true" tabindex="-1"></a><span class="kw">private</span> <span class="kw">fun</span> <span class="fu">checkChannels</span><span class="op">()</span> <span class="op">&#123;</span></span>
<span id="cb5-3"><a href="#cb5-3" aria-hidden="true" tabindex="-1"></a>    <span class="kw">val</span> <span class="va">groups</span> <span class="op">=</span> notificationManager<span class="op">.</span>notificationChannelGroups</span>
<span id="cb5-4"><a href="#cb5-4" aria-hidden="true" tabindex="-1"></a>    <span class="kw">val</span> <span class="va">channels</span> <span class="op">=</span> groups<span class="op">.</span>filterNot <span class="op">&#123;</span> it<span class="op">.</span>isBlocked <span class="op">&#125;.</span>flatMap <span class="op">&#123;</span></span>
<span id="cb5-5"><a href="#cb5-5" aria-hidden="true" tabindex="-1"></a>        it<span class="op">.</span>channels<span class="op">.</span>filter <span class="op">&#123;</span> it<span class="op">.</span>shouldShowLights<span class="op">()&#125;</span></span>
<span id="cb5-6"><a href="#cb5-6" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#125;</span></span>
<span id="cb5-7"><a href="#cb5-7" aria-hidden="true" tabindex="-1"></a>    <span class="op">...</span></span>
<span id="cb5-8"><a href="#cb5-8" aria-hidden="true" tabindex="-1"></a><span class="op">&#125;</span></span></code></pre></div>
<p>一切看起来都很好，对吗？</p>
<h2 id="你完了">你完了！</h2>
<p>但我们刚刚引入了一个<strong>崩溃</strong>!</p>
<p>原因是：<code>isBlocked</code> 是在 API 28
才引入的，而我们没有进行检查! 尽管我们使用了
<code>NotificationManagerCompat</code>，但我们还是遇到了 API
级别上的问题!</p>
<p>而且因为我们抑制了 <code>NewApi</code>
的警告，所以我们在这个问题上没有收到任何警告!</p>
<p>所以当涉及到抑制警告的时候，我们就应该<strong>更加审慎</strong>!</p>
<h2 id="解决方案">解决方案？</h2>
<p>由于只有在方法级别上才能解决这个问题（不适用单个语句），最好的方法是编写能满足我们需求的单行的方法。</p>
<p>多亏了扩展函数，这可以非常容易地实现：</p>
<div class="sourceCode" id="cb6"><pre class="sourceCode kotlin"><code class="sourceCode kotlin"><span id="cb6-1"><a href="#cb6-1" aria-hidden="true" tabindex="-1"></a><span class="at">@SuppressLint</span><span class="op">(</span><span class="st">"NewApi"</span><span class="op">)</span> <span class="co">// SDK 26</span></span>
<span id="cb6-2"><a href="#cb6-2" aria-hidden="true" tabindex="-1"></a><span class="kw">fun</span> <span class="fu">NotificationChannelGroup</span><span class="op">.</span><span class="fu">lightingChannels</span><span class="op">()</span> <span class="op">=</span> </span>
<span id="cb6-3"><a href="#cb6-3" aria-hidden="true" tabindex="-1"></a>   channels<span class="op">.</span>filterLightingOnes<span class="op">()</span></span>
<span id="cb6-4"><a href="#cb6-4" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb6-5"><a href="#cb6-5" aria-hidden="true" tabindex="-1"></a><span class="at">@SuppressLint</span><span class="op">(</span><span class="st">"NewApi"</span><span class="op">)</span> <span class="co">// SDK 26</span></span>
<span id="cb6-6"><a href="#cb6-6" aria-hidden="true" tabindex="-1"></a><span class="kw">private</span> <span class="kw">fun</span> <span class="fu">List</span><span class="op">&lt;</span><span class="dt">NotificationChannel</span><span class="op">&gt;.</span><span class="fu">filterLightingOnes</span><span class="op">()</span> <span class="op">=</span> </span>
<span id="cb6-7"><a href="#cb6-7" aria-hidden="true" tabindex="-1"></a>   filter <span class="op">&#123;</span> it<span class="op">.</span>shouldShowLights<span class="op">()</span> <span class="op">&#125;</span></span></code></pre></div>
<p>如果我们在上面的例子中使用这种方法，我们在添加 <code>isBlocked</code>
的时候就会得到警告：</p>
<p><img src="https://miro.medium.com/max/3032/1*OpkxXOXSGueoW_TyJyXw3A.png"></p>
<p>当然，这对于我们开发者来说多了很多工作，但是我们的用户会很喜欢一个无崩溃的应用。</p>
<h2 id="the-linter">The Linter</h2>
<p>上述例子不是 Compat 库的
Bug，而是被抑制隐藏了。这种情况也可能发生在许多其他 API 上。</p>
<ul>
<li>不要掉进这个陷阱!<br>
</li>
<li>使用 Compat
库可能会给我们带来虚假的安全感，并欺骗我们相信我们不必考虑这些问题。</li>
</ul>
<p>而且再次强调，尽量<strong>避免抑制</strong> <code>NewApi</code>
<strong>警告</strong>！</p>
<p>相反，我们应该使用直接的版本检查，比如：</p>
<div class="sourceCode" id="cb7"><pre class="sourceCode kotlin"><code class="sourceCode kotlin"><span id="cb7-1"><a href="#cb7-1" aria-hidden="true" tabindex="-1"></a><span class="cf">if</span> <span class="op">(</span>Build<span class="op">.</span>VERSION<span class="op">.</span>SDK_INT <span class="op">&gt;=</span> Build<span class="op">.</span>VERSION_CODES<span class="op">.</span>P<span class="op">)</span></span></code></pre></div>
<p>不幸的是，lint
在这里不是很智能。它不会理解一些变型的版本检查，比如说：</p>
<div class="sourceCode" id="cb8"><pre class="sourceCode kotlin"><code class="sourceCode kotlin"><span id="cb8-1"><a href="#cb8-1" aria-hidden="true" tabindex="-1"></a><span class="op">.</span>filter <span class="op">&#123;</span> Build<span class="op">.</span>VERSION<span class="op">.</span>SDK_INT <span class="op">&gt;=</span> Build<span class="op">.</span>VERSION_CODES<span class="op">.</span>P <span class="op">&#125;</span></span></code></pre></div>
<h2 id="求助">求助？</h2>
<p>也许你们中的一些人想更多地研究这个，用一些自定义的 lint
规则。基本上，我们需要这样的东西：</p>
<div class="sourceCode" id="cb9"><pre class="sourceCode kotlin"><code class="sourceCode kotlin"><span id="cb9-1"><a href="#cb9-1" aria-hidden="true" tabindex="-1"></a><span class="at">@CheckedUpTo</span><span class="op">(</span>Build<span class="op">.</span>VERSION_CODES<span class="op">.</span>P<span class="op">)</span></span></code></pre></div>
<p>这将在内部完成类似于 <code>SuppressLint("NewApi")</code>
的工作，但只会针对不需要高于 P 版本的 API 调用。</p>
<p>目前，你可以让现有的 lint
功能为你工作。例如也可以在你自己的代码中添加
<code>@RequiresApi(Build.VERSION_CODES.P)</code>，强制让你处理这些问题。</p>
<p>记住，这些注释也被认为是你的代码读者的文档。</p>
<p>PS: 最新的 NotificationCompat alpha 版本将为我们带来
<code>NotificationChannel</code> 和
<code>NotificationChannelGroup</code> 的兼容版本。🥳</p>]]></content>
      <categories>
        <category>Computer Science</category>
        <category>Android</category>
        <category>Kotlin</category>
      </categories>
      <tags>
        <tag>Computer Science</tag>
        <tag>Android</tag>
        <tag>Kotlin</tag>
      </tags>
  </entry>
  <entry>
    <title>我们是怎么做到的：Google I/O Photo Booth</title>
    <url>/2021/04/10/computer%20science/dart/how-its-made-i-o-photo-booth/</url>
    <content><![CDATA[<blockquote>
<ul>
<li>原文地址：<a href="https://medium.com/flutter/how-its-made-i-o-photo-booth-3b8355d35883">How
It’s Made: I/O Photo Booth</a></li>
<li>原文作者：<a href="https://medium.com/@vgv_team">Very Good Ventures
Team</a></li>
<li>译者：<a href="https://github.com/PassionPenguin">霜羽
Hoarfroster</a></li>
<li>校对者：<a href="https://github.com/Chorer">Chorer</a></li>
</ul>
</blockquote>
<p><img src="https://miro.medium.com/max/2800/0*diM5YKjX2b2OgNvD"></p>
<p>我们（Very Good Ventures 开发者们）与 Google 合作，为今年的 Google
I/O 带来了互动体验：<a href="https://photobooth.flutter.dev/">Photo
Booth</a>！你现在可以与知名的谷歌吉祥物 <a href="https://flutter.dev/dash">Flutter’s Dash</a>、Android
Jetpack、Chrome 的 Dino 和 Firebase 的 Sparky
合影，并用诸如派对帽、披萨、时髦眼镜等等的贴纸装饰照片！最后，你还可以在社交媒体上分享照片，或者选择下载照片以更新你的个人资料照片！</p>
<p><img src="https://miro.medium.com/max/2800/0*OQnK58irOAv-Pjzq"></p>
<p><small>Flutter Dash、Firebase Sparky、Android Jetpack 和 Chrome
Dino</small></p>
<p>我们使用 <a href="https://flutter.dev/web">Flutter Web</a> 和 <a href="https://firebase.google.com/">Firebase</a> 构建了 I/O Photo Booth
这个软件，因为 <a href="https://medium.com/flutter/whats-new-in-flutter-2-0-fe8e95ecc65">Flutter
现在提供了对 Web 应用程序的支持</a>，我们认为这将是让今年虚拟 Google I/O
的来自全球各地的与会者轻松访问此应用程序的好方法。Flutter
的网络支持消除了我们必须从应用程序商店安装应用程序的限制，还使我们可以灵活地在指定的设备上运行它：移动端、桌面端或平板电脑端。这让我们可以无需下载，只需使用任何设备上的任何适当的浏览器，浏览我们给出的页面即可体验
I/O Photo Booth！</p>
<p>尽管 I/O Photo Booth 旨在提供 Web
体验，但所有代码都是使用与平台无关的架构编写的。当对相机插件等元素的原生支持可用于各自的平台时，相同的代码适用于所有平台（桌面端、网络端和移动端）。</p>
<h2 id="使用-flutter-制作虚拟照相亭">使用 Flutter 制作虚拟照相亭</h2>
<h3 id="为-web-构建-flutter-相机插件">为 Web 构建 Flutter 相机插件</h3>
<p>第一个挑战是在 Web 上为 Flutter 构建一个相机插件。最初，我们联系了 <a href="https://www.baseflow.com/">Baseflow</a>
团队，因为他们维护着现有的开源 <a href="https://github.com/Baseflow/flutter-plugins">Flutter
相机插件</a>。虽然 Baseflow 致力于为 iOS 和 Android
构建一流的相机插件支持，但我们很高兴使用 <a href="https://flutter.dev/docs/development/packages-and-plugins/developing-packages#federated-plugins">联合插件</a>。我们尽可能贴近官方插件界面，以便我们可以在准备好时将其合并回官方插件。</p>
<p>我们确定了两个对于在 Flutter 中构建 I/O Photo Booth
相机体验至关重要的 API。</p>
<ol type="1">
<li><strong>初始化相机：</strong>
该应用程序首先需要访问我们设备上的相机。在台式机上，这可能是网络摄像头，而在移动设备上，我们选择了前置摄像头。我们还指定分辨率为
1080p，以根据我们的设备最大限度地提高相机质量。</li>
<li><strong>拍照：</strong> 我们使用了内置的 <a href="https://api.flutter.dev/flutter/widgets/HtmlElementView-class.html"><code>HtmlElementView</code></a>。它可以使用平台视图来渲染原生
Web 元素作为 Flutter 小部件。在这个项目中，我们渲染了一个 <a href="https://api.flutter.dev/flutter/dart-html/VideoElement-class.html"><code>VideoElement</code></a>
作为原生 HTML 元素 ——
也就是我们之前在屏幕上看到的你拍你的照片。我们还使用了 <a href="https://api.flutter.dev/flutter/dart-html/CanvasElement-class.html"><code>CanvasElement</code></a>
作为另一个 HTML
元素呈现方式，让我们可以在单击拍照按钮时从媒体流中捕获图像。</li>
</ol>
<pre class="dart"><code>Future&lt;CameraImage&gt; takePicture() async &#123;  
 final videoWidth = videoElement.videoWidth;  
 final videoHeight = videoElement.videoHeight;  
 final canvas = html.CanvasElement(  
   width: videoWidth,  
   height: videoHeight,  
 );  
 canvas.context2D  
   ..translate(videoWidth, 0)  
   ..scale(-1, 1)  
   ..drawImageScaled(videoElement, 0, 0, videoWidth, videoHeight);  
 final blob = await canvas.toBlob();  
 return CameraImage(  
   data: html.Url.createObjectUrl(blob),  
   width: videoWidth,  
   height: videoHeight,  
 );  
&#125;</code></pre>
<h3 id="相机权限">相机权限</h3>
<p>在我们让 Flutter Camera 插件可以在 Web
上运行后，我们创建了一个抽象来根据相机权限显示不同的
UI。例如，在等待选择是否允许使用浏览器摄像头时，或者如果没有可用的摄像头可供访问，我们可以显示一条说明性消息。</p>
<pre class="dart"><code>Camera(  
 controller: _controller,  
 placeholder: (_) =&gt; const SizedBox(),  
 preview: (context, preview) =&gt; PhotoboothPreview(  
   preview: preview,  
   onSnapPressed: _onSnapPressed,  
 ),  
 error: (context, error) =&gt; PhotoboothError(error: error), 
)</code></pre>
<p>在此抽象中，<code>placeholder</code>
在应用程序等待我们授予相机权限时返回初始
UI（<code>const SizedBox()</code>）。<code>preview</code> 授予权限后返回
UI，并提供摄像机的实时视频流。错误构建器允许我们在发生错误时捕获错误并呈现相应的错误消息。</p>
<h3 id="镜像照片">镜像照片</h3>
<p>我们的下一个挑战是镜像照片。如果我们保留原样使用相机拍摄照片，那么我们看到的将不是平时在照镜子时所看到的那样，而<a href="https://9to5mac.com/2020/07/09/iphone-mirror-selfie-photos/">有些设备开放了接口如反转按钮来处理这个</a>。所以如果你用前置摄像头拍照，拍摄照片时，我们会看到镜像版本。</p>
<p>在我们的第一种方法中，我们尝试捕捉默认的相机视图，然后围绕 y 轴应用
180 度变换。这似乎有效，但后来我们遇到了<a href="https://github.com/flutter/flutter/issues/79519">一个问题</a>，即
Flutter 偶尔会覆盖转换，导致视频恢复到未镜像的版本.</p>
<p>在 Flutter 团队的帮助下，我们通过将 <code>VideoElement</code> 包装在
<a href="https://api.flutter.dev/flutter/dart-html/DivElement-class.html"><code>DivElement</code></a>
中并更新 <code>VideoElement</code> 元素，让 <code>VideoElement</code>
填满 <code>DivElement</code>
的宽度和高度，解决了这个问题。这允许我们将镜像应用到视频元素，而无需
Flutter 覆盖变换效果，因为父元素是一个
<code>div</code>。这种方法为我们提供了所需的镜像相机视图！</p>
<p><img src="https://miro.medium.com/max/2800/0*Zd9s-7LFN9u17Ouo"></p>
<p><small>非镜像视图</small></p>
<p><img src="https://miro.medium.com/max/2800/0*kkxXNd0m-t4sjCAo"></p>
<p><small>镜像视图</small></p>
<h3 id="坚持严格的纵横比">坚持严格的纵横比</h3>
<p>对大屏幕执行严格的 4:3 宽高比，对小屏幕执行严格的 3:4
宽高比，这比看起来更难！强制执行此比例非常重要，既要遵守 Web
应用程序的整体设计，又要确保照片在社交媒体上分享时看起来像素完美。这是一项具有挑战性的任务，因为设备上内置摄像头的纵横比差异很大。</p>
<p>为了强制执行严格的纵横比，应用程序首先使用 JavaScript <a href="https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia"><code>getUserMedia</code>
API</a>。我们使用这个 API，提供给 <code>VideoElement</code>
流，也就是我们在相机视图中看到的（当然是镜像的）。我们还应用了 <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/object-fit"><code>object-fit</code></a>
CSS 属性来确保视频元素覆盖其父容器。我们使用 Flutter 的内置
<code>AspectRatio</code>
小部件设置纵横比。因此，相机不会对显示的纵横比做出任何假设；它始终返回支持的最大分辨率，然后符合
Flutter 提供的约束（在本例中为 4:3 或 3:4）。</p>
<pre class="dart"><code>final orientation = MediaQuery.of(context).orientation;  
final aspectRatio = orientation == Orientation.portrait  
   ? PhotoboothAspectRatio.portrait  
   : PhotoboothAspectRatio.landscape;  
return Scaffold(  
 body: _PhotoboothBackground(  
   aspectRatio: aspectRatio,  
   child: Camera(  
     controller: _controller,  
     placeholder: (_) =&gt; const SizedBox(),  
     preview: (context, preview) =&gt; PhotoboothPreview(  
       preview: preview,  
       onSnapPressed: () =&gt; _onSnapPressed(  
         aspectRatio: aspectRatio,  
       ),  
     ),  
     error: (context, error) =&gt; PhotoboothError(error: error),  
   ),  
 ),  
);</code></pre>
<h3 id="通过拖放添加朋友和贴纸">通过拖放添加朋友和贴纸</h3>
<p>I/O Photo Booth 体验的很大一部分是与我们最喜欢的 Google
朋友合影并添加道具。我们可以在照片中拖放好友和道具，也可以调整大小和旋转它们，直到获得我们喜欢的图像。不难注意到，将朋友添加到屏幕时，我们可以拖动它们并调整其大小。朋友们也有动画
—— 我们使用了雪碧图来实现这种效果。</p>
<pre class="dart"><code>for (final character in state.characters)  
 DraggableResizable(     
   canTransform: character.id == state.selectedAssetId,  
   onUpdate: (update) &#123;  
     context.read&lt;PhotoboothBloc&gt;().add(  
       PhotoCharacterDragged(  
         character: character,   
         update: update,  
       ),  
     );  
   &#125;,  
   child: _AnimatedCharacter(name: character.asset.name),  
 ),</code></pre>
<p>为了调整对象的大小，我们创建了一个可拖动、可调整大小的小部件，它可以包裹在任何
Flutter 小部件上，在本例中，这是朋友和道具。这个小部件使用了 <a href="https://api.flutter.dev/flutter/widgets/LayoutBuilder-class.html"><code>LayoutBuilder</code></a>
根据视口的约束来处理小部件的缩放。在其中，我们使用 <a href="https://api.flutter.dev/flutter/widgets/GestureDetector-class.html"><code>GestureDetectors</code></a>
连接到 <code>onScaleStart</code>、<code>onScaleUpdate</code> 和
<code>onScaleEnd</code>
回调。这些回调提供有关反映我们对朋友和道具所做更改所需的手势的详细信息。</p>
<p><a href="https://api.flutter.dev/flutter/widgets/Transform-class.html"><code>Transform</code></a>
小部件和 4D
矩阵转换将根据我们所做的各种手势处理缩放和旋转朋友和道具，如由多个
<code>GestureDetector</code> 报告。</p>
<pre class="dart"><code>Transform(  
 alignment: Alignment.center,  
 transform: Matrix4.identity()  
   ..scale(scale)  
   ..rotateZ(angle),  
 child: _DraggablePoint(...),  
)</code></pre>
<p>最后，我们创建了一个单独的包来确定我们的设备是否支持触摸输入。可拖动、可调整大小的小部件会根据触摸功能进行调整。在具有触摸输入的设备上，可调整大小的锚点和旋转图标不可见，因为我们可以通过捏和平移来直接操纵图像，而在没有触摸输入的设备（例如我们的桌面设备）上，添加了锚点和旋转图标以适应单击和拖动。</p>
<p><img src="https://miro.medium.com/max/3200/0*MVI3wAXUfJdGls5X"></p>
<h2 id="优先考虑网络上的-flutter">优先考虑网络上的 Flutter</h2>
<h3 id="使用-flutter-进行-web-优先开发">使用 Flutter 进行 Web
优先开发</h3>
<p>这是我们使用 Flutter 构建的首批纯 Web
项目之一，它与移动应用程序具有不同的特性。</p>
<p>我们需要确保该应用程序对任何设备上的任何浏览器都具有<a href="https://flutter.dev/docs/development/ui/layout/adaptive-responsive">响应性和自适应性</a>。也就是说，我们必须确保
I/O Photo Booth 可以根据浏览器大小进行缩放，并且能够处理移动和 Web
输入。我们通过几种方式做到了这一点：</p>
<ul>
<li><strong>响应式调整大小：</strong>
我们应该能够将浏览器的大小调整为所需的大小，并且 UI
应相应地做出响应。如果我们的浏览器窗口为纵向，则相机将从具有 4:3
纵横比的横向视图翻转为具有 3:4 纵横比的纵向视图。</li>
<li><strong>响应式设计：</strong> 桌面浏览器的设计在右侧显示
Dash、Android Jetpack、Dino 和
Sparky，对于移动设备，它们显示在顶部。桌面设计也使用了摄像头右侧的抽屉，移动端使用了
BottomSheet 类。</li>
<li><strong>自适应输入：</strong> 如果从桌面访问 I/O Photo
Booth，则鼠标点击被视为输入设备。而如果使用的是平板电脑或手机，则使用触摸作为输入。在调整贴纸大小并将其放置在照片中时，这一点尤其重要。移动设备端支持捏合和平移，桌面端支持单击和拖动。</li>
</ul>
<h3 id="可扩展架构">可扩展架构</h3>
<p>我们还使用了自己的方法为此应用程序构建可扩展的移动应用程序。我们以强大的基础开始
I/O Photo Booth，包括声音空值安全性、国际化以及从第一次提交开始的 100%
单元和小部件测试覆盖率。我们使用了 <a href="https://pub.dev/packages/flutter_bloc">flutter_bloc</a>
进行状态管理，因为它允许轻松测试业务逻辑并观察应用程序中的所有状态变化。这对于开发人员日志和可追溯性特别有用，因为我们可以准确地看到状态之间的变化并更快地隔离问题。</p>
<p>我们还实现了一个功能驱动的 monorepo
结构。例如，贴纸、分享和实时相机预览都在它们自己的文件夹中实现，其中每个文件夹包含其各自的
UI
组件和业务逻辑。这些与外部依赖项集成，例如位于包子目录中的相机插件。这种架构允许我们的团队并行处理多个功能，而不会中断其他人的工作，最大限度地减少合并冲突，并使我们能够有效地重用代码。例如，UI
组件库是一个单独的包，名为 <a href="https://github.com/flutter/photobooth/tree/main/packages/photobooth_ui"><code>photobooth_ui</code></a>，相机插件也是单独的。</p>
<p>通过将组件分成独立的包，我们可以提取和开源与此特定项目无关的各个组件。甚至
UI 组件库包也可以为 Flutter 社区开源，类似于 <a href="https://flutter.dev/docs/development/ui/widgets/material">Material</a>
和 <a href="https://flutter.dev/docs/development/ui/widgets/cupertino">Cupertino</a>
组件库。</p>
<h2 id="firebase-flutter-完美匹配">Firebase + Flutter = 完美匹配</h2>
<h3 id="firebase-身份验证存储托管等">Firebase
身份验证、存储、托管等</h3>
<p>Photo Booth 利用 Firebase 生态系统进行各种后端集成。<a href="https://pub.dev/packages/firebase_auth"><code>firebase_auth</code>
包</a> 支持在应用启动后立即匿名登录用户。每个会话都使用 Firebase
身份验证来创建一个具有唯一 ID 的匿名用户。</p>
<p>当我们打开共享页面时，Firebase
就能够起作用了。我们可以下载照片以保存为个人资料图片，也可以直接分享到社交媒体。如果我们选择下载照片，它会本地存储在我们的设备上。如果选择分享照片，应用会使用
<a href="https://pub.dev/packages/firebase_storage"><code>firebase_storage</code></a>
<a href="https://pub.dev/packages/firebase_storage">package</a>
将照片存储在 Firebase 中，以便我们可以稍后检索它，以填充社交帖子。</p>
<p>我们在 Firebase 存储桶上定义了 <a href="https://firebase.google.com/docs/rules">Firebase 安全规则</a>
以使照片在创建后不可变。这可以防止其他用户修改或删除存储桶中的照片。此外，我们使用
Google Cloud 提供的 <a href="https://cloud.google.com/storage/docs/lifecycle">对象生命周期管理</a>
来定义删除所有 30
天前的对象的规则，但我们也可以请求按照应用程序中列出的说明尽快删除自己的照片。</p>
<p>此应用程序还使用了 <a href="https://firebase.google.com/docs/hosting">Firebase Hosting</a>
来快速安全地托管网络应用程序。<a href="https://github.com/FirebaseExtended/action-hosting-deploy">action-hosting-deploy</a>
GitHub Action 允许我们根据目标分支自动部署到 Firebase
托管。当我们将更改合并到主分支时，该操作会触发一个工作流，该工作流构建应用程序的开发风格并将其部署到
Firebase
托管。类似地，当我们将更改合并到发布分支时，该操作会触发生产部署。GitHub
Action 与 Firebase Hosting
的结合使我们的团队能够快速迭代并始终预览最新版本。</p>
<p>最后，我们使用 <a href="https://firebase.google.com/products/performance">Firebase
Performance Monitoring</a> 来监控关键的 Web 性能指标。</p>
<h3 id="使用-cloud-functions-进行社交">使用 Cloud Functions
进行社交</h3>
<p>在生成自己的社交帖子之前，我们首先需要确保照片每一个像素都看起来足够完美。最终图像包括一个漂亮的框架以纪念
I/O Photo Booth，并被裁剪为 4:3 或 3:4
的纵横比，以便在社交帖子上看起来很棒。</p>
<p>我们使用 <a href="https://developer.mozilla.org/en-US/docs/Web/API/OffscreenCanvas"><code>OffscreenCanvas</code></a>
API 或 <a href="https://developer.mozilla.org/%20en-US/docs/Web/HTML/Element/canvas"><code>CanvasElement</code></a>
作为 polyfill
合成原始照片以及包含我们的朋友和道具的图层，并生成可以下载的单个图像。<a href="https://github.com/flutter/photobooth/tree/main/packages/image_compositor"><code>image_compositor</code></a>
<a href="https://github.com/flutter/photobooth/tree/main/packages/image_compositor">包</a>
处理此处理步骤。</p>
<p>然后，我们利用 Firebase 强大的 <a href="https://firebase.google.com/docs/functions">Cloud Functions</a>
来协助将照片分享到社交媒体。当我们单击共享按钮时，我们将被带到所选平台上的一个新选项卡，其中包含一个预先填充的帖子。该帖子有一个重定向到我们编写的云函数的
URL。浏览器在分析 URL
时，会检测到云函数生成的动态元信息。此信息允许浏览器在我们的社交帖子中显示照片的精美预览图像以及指向共享页面的链接，我们的关注者可以在其中查看照片并导航回
I/O Photo Booth 应用程序以获取他们自己的照片。</p>
<pre class="dart"><code>function renderSharePage(imageFileName: string, baseUrl: string): string &#123;  
 const context = Object.assign(&#123;&#125;, BaseHTMLContext, &#123;  
   appUrl: baseUrl,  
   shareUrl: `$&#123;baseUrl&#125;/share/$&#123;imageFileName&#125;`,  
   shareImageUrl: bucketPathForFile(`$&#123;UPLOAD_PATH&#125;/$&#123;imageFileName&#125;`),  
 &#125;);  
 return renderTemplate(shareTmpl, context);  
&#125;</code></pre>
<p>最终产品看起来像这样：</p>
<p><img src="https://miro.medium.com/max/2800/0*tXpB_n44hmjGxHXf"></p>
<p>有关如何在 Flutter 项目中使用 Firebase 的更多信息，请查看此 <a href="https://firebase.google.com/codelabs/firebase-get-to-know-flutter#0">codelab</a>。</p>
<h2 id="成品效果">成品效果</h2>
<p>这个项目是构建应用程序的网络优先方法的一个很好的例子。与我们使用
Flutter 构建移动应用程序的经验相比，我们构建这个 Web
应用程序的工作流程是如此相似，这让我们感到惊喜。我们必须考虑诸如视口大小、响应能力、触摸与鼠标输入、图像加载时间、浏览器兼容性以及为
Web
构建所带来的所有其他考虑因素等元素。但是，我们仍然使用相同的模式、架构和编码标准编写
Flutter 代码。我们在为 Web 构建时感到宾至如归。Flutter
软件包的工具和不断发展的生态系统，包括 Firebase 工具套件，使 I/O Photo
Booth 成为可能。</p>
<p><img src="https://miro.medium.com/max/3200/0*CN8nNM1HaOjg9SfQ"></p>
<p><small>在 I/O Photo Booth 工作的非常好的 Ventures 团队</small></p>
<p>我们已经开源了所有代码。查看 GitHub 上的 <a href="https://github.com/flutter/photobooth">photo_booth</a> 项目！</p>]]></content>
      <categories>
        <category>Computer Science</category>
        <category>Dart</category>
        <category>Flutter</category>
      </categories>
      <tags>
        <tag>Computer Science</tag>
        <tag>UI</tag>
        <tag>Dart</tag>
        <tag>Flutter</tag>
      </tags>
  </entry>
  <entry>
    <title>使用 CDN 构建直读式缓存</title>
    <url>/2021/04/10/computer%20science/cloud/building-a-read-through-cache-using-cdn/</url>
    <content><![CDATA[<blockquote>
<ul>
<li>原文地址：<a href="https://levelup.gitconnected.com/building-a-read-through-cache-using-cdn-59988a3d75ce">Building
a read-through cache using CDN</a></li>
<li>原文作者：<a href="https://medium.com/@dev.aritradas">Aritra
Das</a></li>
<li>译者：<a href="https://github.com/PassionPenguin">霜羽
Hoarfroster</a></li>
<li>校对者：<a href="https://github.com/Chorer">Chorer</a>、<a href="https://github.com/zaviertang">zaviertang</a></li>
</ul>
</blockquote>
<figure>
<img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/666a1136a4f24df5a94d1f1896c8c82e~tplv-k3u1fbpfcp-zoom-1.image" alt="由 Pikisuperstar / Freepik 设计">
<figcaption aria-hidden="true">由 Pikisuperstar / Freepik
设计</figcaption>
</figure>
<p>当你为需要高吞吐量的系统构建 API
时，缓存几乎是不可避免的。在分布式系统上工作的每个开发者多多少少都在某些时候使用了一些缓存机制。在本文中，我们将了解使用
CDN 构建直读式缓存的设计。这种做法不仅优化了
API，还能降低基础架构成本。</p>
<blockquote>
<p>拥有一些关于缓存和 CDN
的了解将有助于理解这篇文章。如果你完全没有了解过这些知识的话，我希望你先稍微了解一点这些知识，然后再回来阅读这篇文章。</p>
</blockquote>
<h2 id="一点背景">一点背景</h2>
<p>在撰写本文时，我正与 <a href="https://www.glance.com/">Glance</a>
合作。Glance 是世界上最大的基于锁屏的内容发现平台，在这一领域上有大约
1.4
亿个活跃的用户。所以你可以想象我们需要运行的服务的规模之大。而且在这种规模中，即使是最简单的事情也能变得超级复杂。作为后端开发者，我们始终努力建立高度优化的
API，为用户提供良好的体验。故事从这里开始，讲述我们如何面对确切的问题，然后我们又是如何解决这些问题的。我希望在阅读本文后，你能在大规模的系统设计上学有所成。</p>
<h2 id="问题">问题</h2>
<p>我们需要开发一些具有以下特征的 API：</p>
<ol type="1">
<li>数据不会经常变化。</li>
<li>所有用户的响应是相同的，没有意外的查询参数，简单直接获取 API。</li>
<li>最大响应数据量为 600 kB。</li>
<li>我们预计 API 会有预期非常高的吞吐量（大约每秒 5～6 万次请求）。</li>
</ol>
<p>那么你起初看到这个问题时，你想到了什么？对我来说，只要在节点上（由于数据量低）往
API 中添加内存缓存（可能是 Google Guava），使用 Kafka
发送无效消息（因为我喜欢 Kafka 😆
并且它是可靠的），设置为服务实例启动规模自动调节（因为整个日间的流量并不统一）。如图所示：</p>
<figure>
<img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/b2ec526dfe8e4da1b3819f5a6a7f5785~tplv-k3u1fbpfcp-zoom-1.image" alt="设计 v1">
<figcaption aria-hidden="true">设计 v1</figcaption>
</figure>
<p>bam！问题解决了！很容易吗？好吧，其实并非如此。正如任何其他设计一样，这一个设计其实也有一些缺陷。例如，这个设计对于简单用例而言有一点点太复杂了，基础设施成本上升了
—— 我们现在需要构建一个 Kafka + Zookeeper 集群，再加上 5
万次请求每秒的规模，我们需要水平缩放我们的服务实例（对我们而言是
Kubernetes Pods）。这将转化为裸机节点或虚拟机数量的增加。</p>
<p>因此，我们寻找更简单且具有成本效益的方法，这就是我们为何最终会采用“使用
CDN 直读式缓存”这一解决方案。我将讨论架构的细节以及稍后的权衡。</p>
<hr>
<p>但在进一步阐述之前，让我们先了解设计的构建块。</p>
<h2 id="通过缓存读取">通过缓存读取</h2>
<p>标准缓存更新策略是这样的</p>
<ol type="1">
<li><strong>Cache aside</strong></li>
<li><strong>Read-through</strong></li>
<li><strong>Write-through</strong></li>
<li><strong>Write back</strong></li>
<li><strong>Refresh ahead</strong></li>
</ol>
<p>我不会详细介绍其他策略，而是专注于直读，毕竟这篇文章就是讲这个的。让我们进一步进行挖掘，了解它的工作原理。</p>
<blockquote>
<p>user1 -&gt; 只是一个想象中的试图获取的数据</p>
</blockquote>
<p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/d9f5f67aa3044da2bb0dfbbf8a9fe686~tplv-k3u1fbpfcp-zoom-1.image"></p>
<p>上图不言自明，用于总结上文。</p>
<ol type="1">
<li>应用程序从未直接与数据库进行交互，而是始终与缓存交互。</li>
<li>没有缓存时，将从数据库读取并丰富缓存。</li>
<li>有缓存时，数据来自缓存。</li>
</ol>
<p>你可以看到，数据库的访问频率很低，并且由于我们的缓存主要都是内存缓存（REDIS
/ MEMCACHED），因此响应很快。现在我们已经解决了不少问题 😅</p>
<h2 id="cdn">CDN</h2>
<p>互联网上关于 CDN
的定义是：“<strong>内容分发网络（CDN）是一个全局分布的代理服务器网络，从靠近用户的位置服务于内容，并且用于提供诸如图像、视频、HTML、CSS
之类的静态文件</strong>“。但我们将反向使用 CDN
并为用户提供动态内容（JSON 响应，而不是静态的 JSON 文件）。</p>
<p>此外，通常有两种 CDN 的概念</p>
<ol type="1">
<li><strong>Push CDN</strong>：负责将数据上传到 CDN 服务器</li>
<li><strong>Pull CDN</strong>：CDN
将从你的服务器（原始服务器）中提取数据</li>
</ol>
<p>我们将使用 Pull CDN
自推送方法，我必须处理重试和其他事情，对我来说是一个额外的痛苦，也并没有真正对此用例有什么价值。</p>
<h2 id="把-cdn-当作直读式缓存">把 CDN 当作直读式缓存</h2>
<p>这个想法很简单，我们将 CDN 作为用户和实际后端服务之间的缓存层。</p>
<figure>
<img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/9fc4eb816eb2422aa4923f74744d9d5c~tplv-k3u1fbpfcp-zoom-1.image" alt="设计 v2">
<figcaption aria-hidden="true">设计 v2</figcaption>
</figure>
<p>正如你可以看到 CDN
位于客户端和后端服务之间，也就成为了缓存。在数据流序列中看起来像这样：</p>
<figure>
<img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/c77364799600400488c491b25a3a5351~tplv-k3u1fbpfcp-zoom-1.image" alt="配图">
<figcaption aria-hidden="true">配图</figcaption>
</figure>
<p>让我们更深入地挖掘它，因为这是设计的症结</p>
<h3 id="要使用的缩写">要使用的缩写</h3>
<blockquote>
<p><strong>T1</strong> -&gt; time instance 1 + 几毫秒</p>
<p><strong>T2</strong> -&gt; time instance 1 + 一分钟 + 几毫秒</p>
<p><strong>TTL</strong> -&gt; 留存时间</p>
<p><strong>原始服务器</strong> -&gt; 在这种情况下你的实际后端服务</p>
</blockquote>
<ol type="1">
<li>T1：客户端发起请求获取 user1。</li>
<li>T1：请求转移到 CDN 上。</li>
<li>T1：CDN 发现在缓存中没有 user1 相关的密钥。</li>
<li>T1：CDN 向上请求，即请求你的实际后端服务器，以获取 user1。</li>
<li>T1：后端服务将 user1 以标准 JSON 格式响应返回。</li>
<li>T1：CDN 收到 JSON 并存储该 JSON</li>
<li>现在它需要决定这个数据的 TTL 应该是什么，它如何做到这一点？</li>
<li>通常有两种方法可以做到这一点，原始服务器指定应高速缓存的长度或在 CDN
配置上设置了常量值。它会使用该时间来设置 TTL。</li>
<li>让原始服务器来设置 TTL
是个更好的选择，这样我们就可以以我们喜欢的方式控制 TTL 或有条件地设置
TTL。</li>
<li>现在问题提出了原始服务器如何指定 TTL。<code>Cache-control</code>
标头此时起到了作用。来自原始服务器的响应可以包含
<code>Cache-control</code> 标头，如
<code>Cache-control: Public;Max-Age: 180</code>，指示 CDN
可以公开地缓存此数据，它有效期为 180 秒。</li>
<li>T1：现在 CDN 得到这个信息，以 180s 的 TTL 缓存数据。</li>
<li>T1：CDN 用 user1 的 JSON 文件响应客户端。</li>
<li>T2：另一个客户端请求 user1。</li>
<li>T2：请求转移到 CDN 上。</li>
<li>T2：CDN 看到它有存储在其存储中的 user1
密钥，因此它不会请求原始服务器以获取 JSON。</li>
<li>T3：高速缓存在 180 秒后在 CDN 上过期。</li>
<li>T4：另一些客户端请求 user1，但由于缓存是空的，因此 CDN 从步骤 3
开始重复步骤，以此往复。</li>
</ol>
<p>你不一定只能将 TTL 保留为 180
秒，而是只需要根据你应该为陈旧数据提供缓存的时间长度来选择
TTL。如果这让你有了这个问题，为什么不能在数据更改时候让缓存无效，稍后我将在缺点部分中回答。</p>
<h2 id="实现">实现</h2>
<p>到目前为止，我们高谈阔论，一直聊着设计，而没有真正进入实际实现。作为设计的原因非常简单，可以在任何设置中实现。对于我们来说，我们的
CDN 在 Google Cloud 上，后端服务运行的 Kubernetes 集群在 Azure
上，因此我们根据我们的需求进行了设置。例如，你可以选择在 CloudFlare CDN
上执行此操作，因此未进入实施并保持抽象。但只是为了好奇的思想，这是我们的生产设置方式。</p>
<figure>
<img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/a80b2975e7cd4b2fb2bf62c1818240db~tplv-k3u1fbpfcp-zoom-1.image" alt="配图">
<figcaption aria-hidden="true">配图</figcaption>
</figure>
<p>如果你不理解这个，也没关系。而如果你理解了这些概念，那么相关的构建对你来说将会是小菜一碟。</p>
<p>Google Cloud 的这篇优秀的<a href="https://cloud.google.com/cdn/docs/setting-up-cdn-with-external-origin">文档</a>可以供你了解。</p>
<hr>
<h2 id="请求合并">请求合并</h2>
<p>[该部分为 <a href="https://medium.com/u/e006831ceec1">Abhishek
Singla</a> 于评论中提出此问题后添加的内容]</p>
<p>但是仍然存在一个问题，CDN
为我们处理了所有负载，不过我们没有扩展的空间。可是我们的服务器会以 60k
qps 的标准运行，意味着在缓存未命中的情况下，60k
调用将会直接访问我们的源服务器（考虑到填充 CDN 缓存需要 1
秒），这可能会使服务不堪重负，对吗？</p>
<p>这就是请求合并起作用的地方。</p>
<p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/f9f1c5c96f404979b30393c3554bf4c1~tplv-k3u1fbpfcp-zoom-1.image"></p>
<p>顾名思义，这实际上就是将具有相同查询参数的多个请求组合在一起，以实现只向源服务器发送数量较少的请求。</p>
<p>我们设计的美妙之处在于我们不必自己进行请求合并，CDN
会帮助我们完成。正如我已经提到的，我们正在使用 Google Cloud
CDN，它有一个 Request Coalescing 的概念（只是 Request Collapsing
的另一个别称）。因此，当同时发出大量缓存填充请求时，CDN
能够识别出这一情况，然后 CDN
的每个节点就只会向源服务器发送一个请求并使用对应的响应内容，响应所有的请求。这就是它保护我们的源服务器免受高流量影响的方式。</p>
<hr>
<p>好了，我们的文章差不多接近尾声了。任何设计，若是少了利弊分析，那都是不完整的。因此，让我们稍微分析一下设计，看看这个设计是怎样帮助我们的，以及它在哪些地方无法给予我们帮助。</p>
<h2 id="设计的优点">设计的优点</h2>
<ol type="1">
<li><strong>简单性：</strong>这种设计超级简单，易于实施和维护。</li>
<li><strong>响应时间：</strong>你知道 CDN
服务器在地理上定位以优化数据传输，因此，我们的响应时间也变得超快速。例如，60ms（忽略
TCP 连接建立时间）是不是很棒？</li>
<li><strong>减少负载：</strong>由于实际的后端服务器现在每 180s
才收到一次请求，因此负载超低。</li>
<li><strong>基础设施成本：</strong>如果我们没有这样做，那么处理这种装载我们必须扩展我们的基础架构，这具有很大的成本。但
<a href="https://www.glance.com/"><strong>Glance</strong></a> 已经在 CDN
中大量投资。因为我们是一个内容平台，所以为什么不使用这个方法？支持这些
API 的成本增加现在是微不足道的。</li>
</ol>
<h2 id="设计的缺点">设计的缺点</h2>
<ol type="1">
<li><strong>缓存失效：</strong>缓存失效是在计算机科学中最难应付的事情之一，而且当
CDN 成为高速缓存后，这个问题甚至更难解决。CDN
上的任何突发的缓存失效是一个成本很高的过程，一般不会实时发生。如果你的数据更改，因为我们无法在
CDN
上使缓存无效，因此你的客户端可能会在某些时间内获得陈旧的数据，不过这取决于你的
TTL。如果你的 TTL 设置在了几小时内，那么你也可以在 CDN
上让缓存失效。但如果 TTL
在几秒钟/分钟内，那就会出大问题！此外，请记住，并非所有 CDN
提供商都会公开使 CDN 缓存失效的 API。</li>
<li><strong>缺少控制：</strong>由于请求现在没有直接发送到我们的服务器上，我们会感觉，作为开发者，我们没有足够地控制系统（或者只是我这一个人是个控制怪物
😈 想控制一切）。另外，可观察性可能会稍微减小。即便我们可以随时在 CDN
上设置日志记录和监控，但通常这样做会增加一定的成本。</li>
</ol>
<h2 id="几句感想">几句感想</h2>
<p>分布式世界中的任何设计都是略有主观的，并且总是有一些权衡。作为开发者或架构师，我们的职责在这其中权衡并选择针对我们工作的设计。据说，没有设计是具体的，足以永远继续，所以鉴于约束，我们选择了一定的设计，具体取决于它对我们的适用方式我们可能也进一步发展。</p>
<hr>
<p>谢谢阅读！</p>]]></content>
      <categories>
        <category>Computer Science</category>
        <category>Backend</category>
      </categories>
      <tags>
        <tag>Computer Science</tag>
        <tag>Backend</tag>
        <tag>CDN</tag>
      </tags>
  </entry>
  <entry>
    <title>你知道 JavaScript 的历史吗？1993 年的 CGI 脚本和早期服务端 Web 编程</title>
    <url>/2021/04/03/computer%20science/frontend/1993-cgi-scripts-and-early-server-side-web-programming/</url>
    <content><![CDATA[<blockquote>
<ul>
<li>原文地址：<a href="https://webdevelopmenthistory.com/1993-cgi-scripts-and-early-server-side-web-programming/">1993:
CGI Scripts and Early Server-Side Web Programming</a></li>
<li>原文作者：<a href="https://webdevelopmenthistory.com/author/richardricmac-org/">ricmac</a></li>
<li>译者：<a href="https://github.com/PassionPenguin">霜羽
Hoarfroster</a></li>
<li>校对者：<a href="https://github.com/zenblo">zenblo</a>、<a href="https://github.com/Chorer">Chorer</a></li>
</ul>
</blockquote>
<figure>
<img src="https://webdevelopmenthistory.com/wp-content/uploads/2021/03/1993_cgi_mosaic.jpg" alt="头图">
<figcaption aria-hidden="true">头图</figcaption>
</figure>
<p>在 <a href="https://webdevelopmenthistory.com/1995-the-birth-of-javascript/">JavaScript
诞生</a>的几年前，一个叫做通用网关接口（CGI）的规范为网页提供了一种早期的交互形式。不同于在浏览器内部（也就是客户端）执行交互任务的
JavaScript，CGI
脚本是借助服务器上的外部程序（服务器端的程序）运行的。CGI
脚本在服务器上执行后，结果会以 HTML 代码的形式发回给原网页。因此，虽然
CGI 脚本不像 JavaScript
那样作为浏览器中的动态组件，但它确实允许那些早期的互联网使用者和开发者在
1993 年和 1994 年运行交互式程序。从很多方面来看，Web 应用应该起源于
CGI，而不是 JavaScript。</p>
<p>CGI 于 1993 年诞生于美国国家超级计算应用中心（NCSA），开创性的 Mosaic
网络浏览器也起源于此。Rob McCool 率先编写了 CGI 规范，作为他创建 <a href="https://en.wikipedia.org/wiki/NCSA_HTTPd">NCSA HTTPd</a>
的后续工作 —— 这是世界上最早的 Web 服务器之一，也是开源 Web 服务器
Apache 的鼻祖。</p>
<p>他的想法是为不同的 Web 服务器（1993 年活跃的其他服务器包括 Tim
Berners-Lee 的 CERN httpd 和 Tony Sanders 的 Plexus
服务器）创建一个通用的规范，这样通过网页启动的程序就可以在任何服务器上运行，并将结果发回网页。</p>
<p><img src="https://webdevelopmenthistory.com/wp-content/uploads/2021/03/ncsa_http_homepage_april97-1024x704.jpg"></p>
<p><a href="https://web.archive.org/web/19970414055941/http://hoohoo.ncsa.uiuc.edu/">NCSA
HTTPd 主页</a>，截图于 1997 年 4 月。</p>
<h2 id="cgi-的发明">CGI 的发明</h2>
<p>1993 年 11 月 17 日，McCool 在 www-talk 邮件列表中<a href="http://1997.webhistory.org/www.lists/www-talk.1993q4/0518.html">发送了一条消息</a>。</p>
<blockquote>
<p>“我已经花了一些时间为服务器网关接口写了一份正式的规范，而我希望大家能对这份规范给出一些评论和建议。这是通用网关协议（Common
Gateway Protocol）或 CGP 的初步规范。本规范所定义的版本将是
CGP/1.0。”</p>
</blockquote>
<p>几天后，在邮件列表中得到一些初步反馈后，<a href="http://1997.webhistory.org/www.lists/www-talk.1993q4/0540.html">McCool
写道</a>：</p>
<blockquote>
<p>“我想了想，这并不是一个真正的协议，而是一个接口，你们觉得把它改成
CGI/1.0 怎么样？”</p>
</blockquote>
<p>有人对”网关”一词持反对态度，<a href="http://1997.webhistory.org/www.lists/www-talk.1993q4/0563.html">McCool
解释说</a>，它指的是”一个连接外部服务器程序的接口，允许你与通常可能无法访问的服务对接”。</p>
<p>更具体地说，它指的是将一个 Web 服务器连接到一个传统的信息系统 ——
比如数据库。因此，执行 CGI
程序的服务器就是允许在网页上使用（例如）数据库的信息的”网关”。<a href="https://stackoverflow.com/questions/2089271/what-is-common-gateway-interface-cgi">换一种说法</a>，CGI
告诉 Web 服务器如何用应用程序收发数据。</p>
<p>用现代术语来说，我们可以把 CGI
看作是一个应用程序接口（API）。所以从这个意义上说，正如<a href="http://www.whizkidtech.redprince.net/cgi-bin/tutorial">一份教程</a>所说的那样，“CGI
就是 Web 服务器的 API”。</p>
<p><img src="https://webdevelopmenthistory.com/wp-content/uploads/2021/03/cgi1-1024x733.png"></p>
<p>通过超链接启动的 CGI 程序；<a href="http://condor.cc.ku.edu/~grobe/docs/forms-intro.shtml">图源
Michael Grobe</a>，堪萨斯大学的”1994 年的某个时候”</p>
<p>到 <a href="http://1997.webhistory.org/www.lists/www-talk.1993q4/0685.html">1993
年 12 月初</a>，McCool “将 CGI 规范写成了一套 HTML 文件，网址是
http://hoohoo.ncsa.uiuc.edu/cgi/”。虽然该网页早已从网上消失，但 Wayback
Machine 有一份 <a href="https://web.archive.org/web/19970414060000/http://hoohoo.ncsa.uiuc.edu/cgi/">1997
年 4 月</a>的副本。在那里我们可以看到 McCool 如何定义 CGI。</p>
<blockquote>
<p>“通用网关接口，或者说 CGI，是一个外部网关程序与信息服务器（如 HTTP
服务器）接口的标准。”</p>
</blockquote>
<p>在附带的<a href="https://web.archive.org/web/19971210170704/http://hoohoo.ncsa.uiuc.edu/cgi/intro.html">介绍</a>中，McCool
声称”对于你可以上传到 Web
上的东西，真的是没有限制的”，但他同时也补充了一个注意事项：</p>
<blockquote>
<p>“你唯一需要记住的是，无论你的 CGI
程序做什么，都不应该花太多时间去处理。否则，用户只会盯着他们的浏览器，等待一些事情发生。”</p>
</blockquote>
<p>因为 CGI 脚本是可执行的，所以它们通常被放在一个特殊的文件夹里面。正如
McCool 所解释的那样，这是”为了让 Web
服务器知道要执行程序，而不是仅仅将其显示给浏览器”。这也使得网站管理员能够锁定文件夹，以防止人们创建有潜在危险的
CGI 脚本。McCool 建议文件夹名称为
<strong>cgi-bin</strong>，而这很快就成为了标准。在 90 年代以后，像
<code>http://www.example.com/cgi-bin/helloworld.pl</code> 这样的 URL
变得很常见。</p>
<h2 id="perl-脚本蓬勃发展">Perl 脚本蓬勃发展</h2>
<p>McCool 的<a href="https://web.archive.org/web/19971210170807/http://hoohoo.ncsa.uiuc.edu/cgi/interface.html">规范</a>，即
CGI/1.1，很快就被万维网的早期用户所采纳。开发者可以使用任何编程语言来编写
CGI 脚本，这也促进了它的使用。McCool
在他的介绍中列出了一些支持的语言：</p>
<ul>
<li>C/C++</li>
<li>Fortran</li>
<li>PERL</li>
<li>TCL</li>
<li>任何的 Unix shell</li>
<li>Visual Basic</li>
<li>AppleScript</li>
</ul>
<p>但实际上，许多 CGI 应用程序是用脚本语言 Perl 编写的（这也是它们被称为
CGI 脚本的部分原因）。事实上，Perl 对 CGI 的创建有很大的影响，正如
Michael Stevenson 在 openource.com 上的<a href="https://opensource.com/life/16/11/perl-and-birth-dynamic-web">这篇
2016 年的文章</a>所解释的那样。他引用了 Jim Davis 的 <a href="https://lists.w3.org/Archives/Public/www-talk/1992NovDec/0060.html">Gateway
to the U Mich Geography server</a> 一文（于 1992 年 11 月发布到 WWW-talk
邮件列表中）：</p>
<blockquote>
<p>“戴维斯的脚本是用 Perl 写的，实现了一种原始的 Web
API，根据格式化的用户查询从另一个服务器上获取数据。”</p>
</blockquote>
<p>毫不奇怪，CGI
的第一个用例是专注于将一个应用程序连接到数据库上。因此，CGI
被用来创建像联系表、留言簿、调查或搜索框这样的东西。任何需要用户输入并促使用户从网页到数据库再回到网页的东西，都是使用
CGI 的好选择。</p>
<p><img src="https://webdevelopmenthistory.com/wp-content/uploads/2021/03/cgi2-1024x742.png"></p>
<p>通过在线表格使用 CGI 的例子，图片由 Michael Grobe 提供。</p>
<p>这是 1994 年堪萨斯大学写的一篇<a href="http://condor.cc.ku.edu/~grobe/docs/forms-intro.shtml">介绍性文章</a>中对上述图表的解释：</p>
<blockquote>
<p>在这张图中，运行在计算机 A 上的 Web 客户端从运行在计算机 B 上的某个
Web
服务器上获取了一个表单。它会显示该表单，用户输入数据，然后客户端将输入的信息发送到运行在计算机
C 上的 HTTP 服务器上。</p>
</blockquote>
<p>与 JavaScript 类似，CGI
脚本可以由非程序员复制并粘贴到网站中。因此，如果你需要一个联系表格，你就会在网上搜索，直到找到一个可以实现这个功能的
CGI 脚本。通常它是一个 Perl 脚本，随着时间的推移，出现了像 <a href="https://web.archive.org/web/19980709151514/http://scriptarchive.com/">Matt’s
Script Archive</a>这样的网站来提供这些代码片段。</p>
<p><a href="https://web.archive.org/web/19970130232402/http://www.worldwidemart.com/mattw/">Matt
Wright</a> 在 1995 年创办 Matt’s Script Archive
时，还是科罗拉多州柯林斯堡的一名高中生。他最受欢迎的脚本之一是一个名为
<a href="http://www.scriptarchive.com/formmail.html">FormMail</a>
的联系表格，该脚本用 Perl 编写，被描述为”一个通用的 HTML
表格连接到电子邮件网关的脚本，支持解析任何表格的结果，并将它们发送给指定的用户”。不过不幸的是，FormMail
本身就不安全，很快就被垃圾邮件发送者利用来发送垃圾邮件。</p>
<p><img src="https://webdevelopmenthistory.com/wp-content/uploads/2021/03/matts_script_archive98-1024x754.jpg"></p>
<p><a href="https://web.archive.org/web/19980709151514/http://scriptarchive.com/">Matt’s
Script Archive</a>，1998 年 7 月版。</p>
<p>FormMail 强调了早年 CGI
脚本的一个问题：由于设计上它们允许让随机的网络用户在你的服务器上运行程序，因此如果脚本编写得不好，就<a href="https://web.archive.org/web/20020221182749/http://datacreek.net/webgear/tips/fmailspam.html">很容易被黑客攻击</a>。如果成千上万的其他网站所有者复制和粘贴同样的代码，这将成为一个广泛的安全问题（FormMail
就发生过这个问题）。正如<a href="http://computer-programming-forum.com/53-perl/f47edf76a5dbbfa4.htm">某个计算机编程论坛</a>的一位用户在讨论
Matt Wright 的脚本时相当直白地说：</p>
<blockquote>
<p>“绝大多数下载和运行这些脚本的用户并不具备任何编程知识，因此，他们缺乏对安全风险、Y2K
bug 的认知，以及经常出现无法应对错误处理。”</p>
</blockquote>
<p>最终，Perl 社区的成员创办了一个名为 <a href="http://nms-cgi.sourceforge.net/">Not Matt’s Scripts</a> 的网站，为
Matt Wright 那日益流行的 CGI 脚本们提供替代品。该网站最后一次更新是在
2004 年。有趣的是，<a href="http://www.scriptarchive.com/">Matt’s Script
Archive</a> 的程序什么的更新持续了五年（尽管它现在包含安全警告）。</p>
<h2 id="结语">结语</h2>
<p>我在以前关于 Netscape 和微软的文章中探讨过 90 年代中期 web
开发的主题之一，就是 web 应用的复杂性越来越高。前端（web
浏览器）越来越多地与后端技术相连，包括微软的操作系统。<a href="https://webdevelopmenthistory.com/1997-netscape-crossware-vs-the-windows-web/">到
1997年</a>，Netscape 推行了一个叫做 “crossware” 的概念（Marc Andreessen
将其定义为”跨网络和操作系统运行的按需应用程序”），与此同时，微软正在建立其与
Windows 集成的 ActiveX 技术。</p>
<p>但是 CGI
提供了一种简单的方式来通过网页访问后端功能，从而在很多方面都绕开了这种复杂化的运动。网关”实际上只是一个从浏览器到服务器的虚拟管道，它可以执行一个脚本，然后将结果送回浏览器。这种简单性使得
20 世纪 90 年代有影响力的网站，如 Yahoo!、eBay 和 Craigslist 等得以摆脱
Netscape 或微软，获得蓬勃的发展。</p>
<p>但网络发展的另一个主题是，事物不会静止太久! 1994
年出现了一种新的脚本语言，它是基于 CGI 的 —— <a href="https://www.php.net/manual/en/history.php.php">PHP</a>，一个名字最初是”个人主页工具
“的意思的语言。随着时间的推移，PHP 在很多情况下成为了 Perl CGI
脚本的替代品。我将在本系列关于服务器端 Web
开发的下一篇文章中深入探讨<em>这个故事</em>。</p>]]></content>
      <categories>
        <category>Computer Science</category>
        <category>Frontend</category>
      </categories>
      <tags>
        <tag>Computer Science</tag>
        <tag>Frontend</tag>
      </tags>
  </entry>
  <entry>
    <title>Apple WWDC 21 回归，6 月 7 日线上不见不散！</title>
    <url>/2021/04/02/computer%20science/misc/apple-announces-june-7-start-date-for-wwdc-2021/</url>
    <content><![CDATA[<blockquote>
<ul>
<li>原文地址：<a href="https://www.cnet.com/news/apple-announces-june-7-start-date-for-wwdc-2021/">Apple
announces June 7 start date for online-only WWDC 21</a></li>
<li>原文作者：<a href="https://www.cnet.com/profiles/eli.blumenthal/">Eli
Blumenthal</a></li>
<li>译者：<a href="https://github.com/PassionPenguin">霜羽
Hoarfroster</a></li>
<li>校对者：<a href="https://github.com/husiyu">husiyu</a>、<a href="https://github.com/Kimhooo">Kimhooo</a></li>
</ul>
</blockquote>
<h2 id="apple-的开发者大会来了">Apple 的开发者大会来了！</h2>
<figure>
<img src="https://www.cnet.com/a/img/OXj1yUvKlng2dwQvlucDnH5OBhA=/1092x0/2021/03/30/0d0960b9-0fea-4099-8df8-89ff89daee69/apple-wwdc21-newsroom-article-tile-033021-big-jpg-large-2x.jpg" alt="Banner">
<figcaption aria-hidden="true">Banner</figcaption>
</figure>
<blockquote>
<p>Apple 邀请大家参加 WWDC 21</p>
</blockquote>
<p><a href="https://www.apple.com.cn/">Apple 的</a><a href="https://developer.apple.com/wwdc21/">年度开发者大会</a>即将举行。这家
iPhone
制造商于周二晚些时分向大家发出了邀请，欢迎大家一起参加以开发者为中心的年度活动
<a href="https://www.cnet.com/news/wwdc-2020-heres-everything-apple-announced-ios-14-macos-big-sur-mac-arm-chips-siri-messages-memoji/">WWDC</a>。这个活动通常会展示
iOS、iPadOS、MacOS
和其他软件平台的下一步发展与远景规划。按照惯例，今年的在线活动通常在 6
月初举行（6 月 7 日至 11 日）。</p>
<p>通常来说，人们会亲自前往硅谷参加 WWDC 活动，但 2021 年的 WWDC
将与去年一致，采用线上直播形式向大家提供大会的观看。由于<a href="https://www.cnet.com/health/covid-19-vaccine-details-new-variants-when-you-can-get-vaccinated-hidden-fees/">新冠病毒大流行</a>，2020
年的 WWDC 活动是第一个仅支持在线参与的 WWDC 活动，且 Apple
同时还将活动推迟到当月的晚些时候。</p>
<p>苹果公司将“对所有开发者免费提供”流媒体直播，以供大家观看今年的 WWDC
活动，而 Apple 现在似乎正在准备一个“大事件”。除了<a href="https://www.cnet.com/news/iphone-13-rumors-so-far-release-date-specs-price-and-everything-else-were-hearing/">传说中的新的
iPhone、iPad、Mac 和 AirPods</a>，这家电子巨头还正在将其电脑芯片从 Intel
处理器过渡到 <a href="https://www.cnet.com/news/apple-gives-macs-brain-transplant-new-arm-chips-starting-this-year-wwdc-2020/">Mac
电脑专用芯片</a> —— 这个消息是在去年的 WWDC
上首次宣布的。另有传言称，苹果还将开发一系列新产品，包括虚拟现实和增强现实头戴设备、<a href="https://www.cnet.com/roadshow/news/apple-car-debut-battery-technology-production-2024/">自动驾驶汽车</a>。</p>
<p>与此同时，一些项目可能还需要数年的时间，比如<a href="https://www.cnet.com/news/apple-to-release-mixed-reality-headset-in-2022-analyst-predicts/">某些类型的头戴式耳机可能会在明年推出</a>，并且苹果有可能会梳理其他的一些工作，以促进苹果生态开发者的
App 创意落地。</p>]]></content>
      <categories>
        <category>Computer Science</category>
        <category>Misc</category>
      </categories>
      <tags>
        <tag>Computer Science</tag>
        <tag>Apple</tag>
      </tags>
  </entry>
  <entry>
    <title>详细解读 Webpack 的模块热替换功能</title>
    <url>/2021/04/01/computer%20science/frontend/webpacks-hot-module-replacement-feature-explained/</url>
    <content><![CDATA[<blockquote>
<ul>
<li>原文地址：<a href="https://blog.bitsrc.io/webpacks-hot-module-replacement-feature-explained-43c13b169986">Webpack’s
Hot Module Replacement Feature Explained</a></li>
<li>原文作者：<a href="https://medium.com/@nathansebhastian">Nathan
Sebhastian</a></li>
<li>译者：<a href="https://github.com/PassionPenguin">霜羽
Hoarfroster</a></li>
<li>校对者：<a href="https://github.com/5Reasons">5Reasons</a>、<a href="https://github.com/nia3y">nia3y</a></li>
</ul>
</blockquote>
<p><img src="https://cdn-images-1.medium.com/max/2024/1*q3OLOdT-Ep86tfnvugnabw.png"></p>
<p>在开发 JavaScript
应用程序时，每次我们保存代码更改后，我们都需要重新加载浏览器以刷新用户界面。</p>
<p>像 Webpack
之类的开发者工具可以通过<strong>监视模式</strong>来监听项目文件的更改。一旦检测到更改，Webpack
就会自动地重新构建应用程序并重新加载浏览器。</p>
<p>但是很快，开发者们就开始思考，有没有一种方法可以在不重新加载浏览器的情况下保存和更新页面的更改？毕竟，重新加载意味着会丢失在
UI 上的任何执行的状态：</p>
<ul>
<li>我们正在使用的所有模态框或对话框都将消失。我们需要从头开始，重复步骤，以使它们再次出现。</li>
<li>我们的应用程序的状态将被重置。如果我们使用的是 React 或 Vue
之类的库，我们需要重新执行状态更改，或者通过本地存储持久化状态。</li>
<li>想要将状态持久保存到本地存储，我们需要额外多写一些代码。除非我们的在生产环境下也有这种需求，否则每次开发时都需要为了调试而添加和删除代码，着实非常不方便。</li>
<li>即便我们仅仅只对 CSS
代码做出了很小的更改，也会触发浏览器的刷新。</li>
</ul>
<p>而<a href="https://webpack.js.org/concepts/hot-module-replacement/">模块热替换（Hot
Module
Replacement，HMR）</a>功能就是为了解决这种问题，并且现在已经成为了为前端开发提速的有力助手。</p>
<h2 id="hmr-功能是怎么工作的">HMR 功能是怎么工作的？</h2>
<p>HMR 让我们可以在应用程序运行时交换、添加或删除 JavaScript
模块，而无需重新加载浏览器。在 Webpack 中是通过在 Webpack 开发服务器（<a href="https://github.com/webpack/webpack-dev-server">webpack-dev-server</a>）中创建一个
<strong>HMR 服务器</strong>实现的，而该服务器会通过 Websocket
与浏览器中的 <strong>HMR 运行时</strong>进行通信。</p>
<figure>
<img src="https://cdn-images-1.medium.com/max/3840/1*UGYFDKGrQF6ID3CofCHUwg.png" alt="简述 HMR 工作的方式">
<figcaption aria-hidden="true">简述 HMR 工作的方式</figcaption>
</figure>
<p>交换模块的过程如下：</p>
<ul>
<li>首次构建应用程序时，Webpack
会生成一份清单文件，包含编译的哈希和所有模块的列表。Webpack 会将
<strong>HMR 运行时</strong>注入到生成的 <code>bundle.js</code>
文件中。</li>
<li>Webpack 会在保存文件时检测文件的更改。</li>
<li>Webpack
编译器会用我们所做的更改来构建我们的应用程序，创建一个新的清单文件并将其与旧的清单文件进行比较。此过程也称为“热更新”。</li>
<li><strong>热更新</strong>数据将被发送到 <strong>HMR
服务器</strong>，后者则会把更新发送至 <strong>HMR 运行时</strong>。</li>
<li><strong>HMR
运行时</strong>将解包<strong>热更新</strong>数据，并使用适当的加载器来处理更改。如果我们有
CSS 更改，则将调用 css-loader 或 style-loader。如果我们对 JavaScript
代码进行了更改，则通常会调用 babel-loader。</li>
</ul>
<p>通过启用 HMR
功能，我们无需刷新浏览器即可让浏览器下载新的软件包并解包应用更改。HMR
运行时将接受来自 HMR
服务器的传入请求，包含清单文件和代码块，替换浏览器中的当前文件。</p>
<p>在运行启用了 HMR 的应用程序时保存代码更改时，我们实际上可以在
“Network” 选项卡上看到从 HMR 服务器发送的热更新文件：</p>
<figure>
<img src="https://cdn-images-1.medium.com/max/2880/1*phxmgjIC0OrLPZVFsWlvyA.png" alt="网络选项卡下的热更新文件">
<figcaption aria-hidden="true">网络选项卡下的热更新文件</figcaption>
</figure>
<p>当“热更新”无法替换浏览器中的代码时，HMR 运行时将通知
webpack-dev-server。然后，webpack-dev-server 将刷新浏览器以下载新的
<code>bundle.js</code> 文件。我们可以通过在 Webpack 配置中添加
<code>hotOnly：true</code> 来禁用此行为。</p>
<h2 id="如何启用-hmr-功能">如何启用 HMR 功能</h2>
<p>为了在项目中启用
HMR，我们需要让我们的应用程序知道如何处理<strong>热更新</strong>。我们可以通过实例化
Webpack 公开的 <code>module.hot</code> API 来实现：</p>
<p>首先，我们需要向 Webpack 配置文件中添加 <code>hot: true</code> 来启用
HMR，如下所示：</p>
<div class="sourceCode" id="cb1"><pre class="sourceCode js"><code class="sourceCode javascript"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a><span class="co">// webpack.config.js</span></span>
<span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-3"><a href="#cb1-3" aria-hidden="true" tabindex="-1"></a>module<span class="op">.</span><span class="at">exports</span> <span class="op">=</span> &#123;</span>
<span id="cb1-4"><a href="#cb1-4" aria-hidden="true" tabindex="-1"></a>    <span class="dt">entry</span><span class="op">:</span> &#123;</span>
<span id="cb1-5"><a href="#cb1-5" aria-hidden="true" tabindex="-1"></a>        <span class="dt">app</span><span class="op">:</span> <span class="st">'./src/index.js'</span><span class="op">,</span></span>
<span id="cb1-6"><a href="#cb1-6" aria-hidden="true" tabindex="-1"></a>    &#125;<span class="op">,</span></span>
<span id="cb1-7"><a href="#cb1-7" aria-hidden="true" tabindex="-1"></a>    <span class="dt">devtool</span><span class="op">:</span> <span class="st">'inline-source-map'</span><span class="op">,</span></span>
<span id="cb1-8"><a href="#cb1-8" aria-hidden="true" tabindex="-1"></a>    <span class="dt">devServer</span><span class="op">:</span> &#123;</span>
<span id="cb1-9"><a href="#cb1-9" aria-hidden="true" tabindex="-1"></a>        <span class="dt">hot</span><span class="op">:</span> <span class="kw">true</span><span class="op">,</span></span>
<span id="cb1-10"><a href="#cb1-10" aria-hidden="true" tabindex="-1"></a>        <span class="co">// ... 忽略掉其他配置</span></span>
<span id="cb1-11"><a href="#cb1-11" aria-hidden="true" tabindex="-1"></a>    &#125;<span class="op">,</span></span>
<span id="cb1-12"><a href="#cb1-12" aria-hidden="true" tabindex="-1"></a>    <span class="dt">plugins</span><span class="op">:</span> [</span>
<span id="cb1-13"><a href="#cb1-13" aria-hidden="true" tabindex="-1"></a>        <span class="co">// 开启这个插件</span></span>
<span id="cb1-14"><a href="#cb1-14" aria-hidden="true" tabindex="-1"></a>        <span class="kw">new</span> webpack<span class="op">.</span><span class="fu">HotModuleReplacementPlugin</span>()<span class="op">,</span></span>
<span id="cb1-15"><a href="#cb1-15" aria-hidden="true" tabindex="-1"></a>    ]<span class="op">,</span></span>
<span id="cb1-16"><a href="#cb1-16" aria-hidden="true" tabindex="-1"></a>&#125;</span></code></pre></div>
<p>之后，我们必须使用 <code>module.hot</code> API 处理传入的 HMR
请求。这是一个普通的 JS 项目的实现示例：</p>
<div class="sourceCode" id="cb2"><pre class="sourceCode js"><code class="sourceCode javascript"><span id="cb2-1"><a href="#cb2-1" aria-hidden="true" tabindex="-1"></a><span class="co">// index.js</span></span>
<span id="cb2-2"><a href="#cb2-2" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb2-3"><a href="#cb2-3" aria-hidden="true" tabindex="-1"></a><span class="im">import</span> component <span class="im">from</span> <span class="st">"./component"</span><span class="op">;</span></span>
<span id="cb2-4"><a href="#cb2-4" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb2-5"><a href="#cb2-5" aria-hidden="true" tabindex="-1"></a><span class="bu">document</span><span class="op">.</span><span class="at">body</span><span class="op">.</span><span class="fu">appendChild</span>(component)<span class="op">;</span></span>
<span id="cb2-6"><a href="#cb2-6" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb2-7"><a href="#cb2-7" aria-hidden="true" tabindex="-1"></a><span class="co">// 检查是否支持 HMR 接口</span></span>
<span id="cb2-8"><a href="#cb2-8" aria-hidden="true" tabindex="-1"></a><span class="cf">if</span> (module<span class="op">.</span><span class="at">hot</span>) &#123;</span>
<span id="cb2-9"><a href="#cb2-9" aria-hidden="true" tabindex="-1"></a>    <span class="co">// 支持热更新</span></span>
<span id="cb2-10"><a href="#cb2-10" aria-hidden="true" tabindex="-1"></a>    module<span class="op">.</span><span class="at">hot</span><span class="op">.</span><span class="fu">accept</span>()<span class="op">;</span></span>
<span id="cb2-11"><a href="#cb2-11" aria-hidden="true" tabindex="-1"></a>&#125;</span></code></pre></div>
<p>一旦告诉 Webpack 我们支持 HMR，HMR
运行时和加载程序就会接管处理更新。</p>
<p>但是，为复杂的应用程序实现 HMR
可能会很棘手，因为我们可能会遇到不希望的副作用，例如<a href="https://webpack.js.org/guides/hot-module-replacement/＃enabling-hmr">仍然绑定到旧函数的事件处理程序</a>，尤其是当你使用
React 或 Vue 之类的库。此外，我们还需要确保<a href="https://webpack.js.org/guides/production/">仅在开发中启用
HMR</a>。</p>
<p>不过在我们尝试自己实施 HMR
之前，建议你先为我们的项目寻找一下可用的解决方案，因为 HMR
已经集成到许多流行的 JavaScript 应用程序生成器中。</p>
<p>Create React App 和 Next.js 都内置了 React Fast Refresh，React
特定的热重载实现。而 Vue CLI 3 的 HMR 则是通过 <a href="https://github.com/vuejs/vue-loader">vue-loader</a> 实现的。<a href="https://github.com/sveltejs/svelte-loader">Svelte</a> 和 <a href="https://github.com/PatrickJS/angular-hmr">Angular</a> 也有自己的
HMR 集成，因此我们没有必要从头开始编写集成。</p>
<h2 id="小结">小结</h2>
<p>热模块替换能让我们无需刷新浏览器即可在浏览器中查看代码更改所带来的效果，从而可以保留前端应用程序的状态。</p>
<p>但是实现 HMR 可能很棘手，因为它会产生一些副作用。幸运的是，HMR
已在许多 JavaScript
应用程序生成器中实现。因此我们可以直接享受此功能，而不必自己实现。</p>]]></content>
      <categories>
        <category>Computer Science</category>
        <category>Frontend</category>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>Computer Science</tag>
        <tag>JavaScript</tag>
        <tag>Frontend</tag>
        <tag>Webpack</tag>
      </tags>
  </entry>
  <entry>
    <title>SQLite 3.35 版本有什么新的东西？</title>
    <url>/2021/03/31/computer%20science/backend/whats-new-in-sqlite-3-35/</url>
    <content><![CDATA[<blockquote>
<ul>
<li>原文地址：<a href="https://nalgeon.github.io/sqlite-3-35/">What’s
new in SQLite 3.35</a></li>
<li>原文作者：<a href="https://antonz.org/">Anton Zhiyanov</a></li>
<li>译者：<a href="https://github.com/PassionPenguin">霜羽
Hoarfroster</a></li>
<li>校对者：<a href="https://github.com/kamly">kamly</a></li>
</ul>
</blockquote>
<p>SQLite
开发者通常更喜欢实现数据库的核心组件，而对于外部观察者来说，什么都没有真正的改变。2020
年是一个令人愉快的例外 ——
SQLite为普通用户提供了许多不错的功能，例如自动生成列，<code>UPDATE FROM</code>
以及 Shell 中 <code>.mode box</code> 这个出色的功能。</p>
<p>2021 年极有可能延续这一风格，以下是 3.35 版本中提供的内容：</p>
<ul>
<li>添加了内置的 SQL 数学函数 ‼️️</li>
<li>增加了对 <code>ALTER TABLE DROP COLUMN</code> 的支持。 ❗</li>
<li>在 <code>DELETE</code>、<code>INSERT</code> 和 <code>UPDATE</code>
语句上添加对 <code>RETURNING</code> 子句的支持。</li>
<li>支持 CTE 公用表表达式 <code>MATERIALIZED</code> 和
<code>NOT_MATERIALIZED</code> 提示。</li>
</ul>
<p>以下是有关每个功能的一些详细信息。</p>
<h2 id="数学函数">数学函数</h2>
<p>多年以来，大量用户都上书，恳求 SQLite 的开发者加入数学基本函数，如
<code>sqrt()</code>、<code>log()</code> 和
<code>pow()</code>。而获得的答复总是差不多：</p>
<blockquote>
<p>SQLite 之所以被称为 Lite
是有原因的。如果你需要这些函数，请自己添加。</p>
</blockquote>
<p>这确实是一个可以理解的立场。但是拒绝添加平方根？但是却又同时实现窗口函数、递归查询和其他高级
SQL 功能吗？你认真的吗？</p>
<p>也许 SQLite
开发人员更喜欢专注于大客户愿意花钱购买的功能。无论如何，20
年后，我们现在有了数学函数！</p>
<p>以下是完整列表：</p>
<div class="sourceCode" id="cb1"><pre class="sourceCode sql"><code class="sourceCode sql"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a><span class="fu">acos</span>(X)</span>
<span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a>acosh(X)</span>
<span id="cb1-3"><a href="#cb1-3" aria-hidden="true" tabindex="-1"></a><span class="fu">asin</span>(X)</span>
<span id="cb1-4"><a href="#cb1-4" aria-hidden="true" tabindex="-1"></a>asinh(X)</span>
<span id="cb1-5"><a href="#cb1-5" aria-hidden="true" tabindex="-1"></a><span class="fu">atan</span>(X)</span>
<span id="cb1-6"><a href="#cb1-6" aria-hidden="true" tabindex="-1"></a><span class="fu">atan2</span>(X,Y)</span>
<span id="cb1-7"><a href="#cb1-7" aria-hidden="true" tabindex="-1"></a><span class="fu">ceil</span>(X)</span>
<span id="cb1-8"><a href="#cb1-8" aria-hidden="true" tabindex="-1"></a>ceiling(X)</span>
<span id="cb1-9"><a href="#cb1-9" aria-hidden="true" tabindex="-1"></a><span class="fu">cos</span>(X)</span>
<span id="cb1-10"><a href="#cb1-10" aria-hidden="true" tabindex="-1"></a><span class="fu">cosh</span>(X)</span>
<span id="cb1-11"><a href="#cb1-11" aria-hidden="true" tabindex="-1"></a>degrees(X)</span>
<span id="cb1-12"><a href="#cb1-12" aria-hidden="true" tabindex="-1"></a><span class="fu">exp</span>(X)</span>
<span id="cb1-13"><a href="#cb1-13" aria-hidden="true" tabindex="-1"></a><span class="fu">floor</span>(X)</span>
<span id="cb1-14"><a href="#cb1-14" aria-hidden="true" tabindex="-1"></a><span class="fu">ln</span>(X)</span>
<span id="cb1-15"><a href="#cb1-15" aria-hidden="true" tabindex="-1"></a><span class="fu">log</span>(B,X)</span>
<span id="cb1-16"><a href="#cb1-16" aria-hidden="true" tabindex="-1"></a><span class="fu">log</span>(X)</span>
<span id="cb1-17"><a href="#cb1-17" aria-hidden="true" tabindex="-1"></a>log10(X)</span>
<span id="cb1-18"><a href="#cb1-18" aria-hidden="true" tabindex="-1"></a>log2(X)</span>
<span id="cb1-19"><a href="#cb1-19" aria-hidden="true" tabindex="-1"></a><span class="fu">mod</span>(X,Y)</span>
<span id="cb1-20"><a href="#cb1-20" aria-hidden="true" tabindex="-1"></a>pi()</span>
<span id="cb1-21"><a href="#cb1-21" aria-hidden="true" tabindex="-1"></a>pow(X,Y)</span>
<span id="cb1-22"><a href="#cb1-22" aria-hidden="true" tabindex="-1"></a><span class="fu">power</span>(X,Y)</span>
<span id="cb1-23"><a href="#cb1-23" aria-hidden="true" tabindex="-1"></a>radians(X)</span>
<span id="cb1-24"><a href="#cb1-24" aria-hidden="true" tabindex="-1"></a><span class="fu">sin</span>(X)</span>
<span id="cb1-25"><a href="#cb1-25" aria-hidden="true" tabindex="-1"></a><span class="fu">sinh</span>(X)</span>
<span id="cb1-26"><a href="#cb1-26" aria-hidden="true" tabindex="-1"></a><span class="fu">sqrt</span>(X)</span>
<span id="cb1-27"><a href="#cb1-27" aria-hidden="true" tabindex="-1"></a><span class="fu">tan</span>(X)</span>
<span id="cb1-28"><a href="#cb1-28" aria-hidden="true" tabindex="-1"></a><span class="fu">tanh</span>(X)</span>
<span id="cb1-29"><a href="#cb1-29" aria-hidden="true" tabindex="-1"></a><span class="fu">trunc</span>(X)</span></code></pre></div>
<h2 id="移除-column">移除 Column</h2>
<p>可能是用户苦难的第二大来源。我们可以自由地创建任意数量的列，但是无法删除它们，令人实在感到不快。你说要要删除列？先复制一份没有这个列的表的副本，然后删除旧表。</p>
<p>现在，这种痛苦终于消失了！<code>ALTER TABLE DROP COLUMN</code>，我们等你等得好苦啊。</p>
<p>不过要删除列，SQLite 必须完全重写表内容 ——
因此操作并不快速。当然绝对还是好过没有这个功能！</p>
<h2 id="returning-语句">RETURNING 语句</h2>
<p><code>DELETE</code>、<code>INSERT</code> 和 <code>UPDATE</code>
的查询语句现在支持返回他们删除，添加，或分别改变的行。</p>
<p>例如，返回新记录的 <code>id</code>：</p>
<div class="sourceCode" id="cb2"><pre class="sourceCode sql"><code class="sourceCode sql"><span id="cb2-1"><a href="#cb2-1" aria-hidden="true" tabindex="-1"></a><span class="kw">create</span> <span class="kw">table</span> users (</span>
<span id="cb2-2"><a href="#cb2-2" aria-hidden="true" tabindex="-1"></a>  <span class="kw">id</span> <span class="dt">integer</span> <span class="kw">primary</span> <span class="kw">key</span>,</span>
<span id="cb2-3"><a href="#cb2-3" aria-hidden="true" tabindex="-1"></a>  first_name text,</span>
<span id="cb2-4"><a href="#cb2-4" aria-hidden="true" tabindex="-1"></a>  last_name text</span>
<span id="cb2-5"><a href="#cb2-5" aria-hidden="true" tabindex="-1"></a>);</span>
<span id="cb2-6"><a href="#cb2-6" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb2-7"><a href="#cb2-7" aria-hidden="true" tabindex="-1"></a><span class="kw">insert</span> <span class="kw">into</span> users (first_name, last_name)</span>
<span id="cb2-8"><a href="#cb2-8" aria-hidden="true" tabindex="-1"></a><span class="kw">values</span> (<span class="st">'Jane'</span>, <span class="st">'Doe'</span>)</span>
<span id="cb2-9"><a href="#cb2-9" aria-hidden="true" tabindex="-1"></a><span class="kw">returning</span> <span class="kw">id</span>;</span></code></pre></div>
<p>或返回一个涨价的商品：</p>
<div class="sourceCode" id="cb3"><pre class="sourceCode sql"><code class="sourceCode sql"><span id="cb3-1"><a href="#cb3-1" aria-hidden="true" tabindex="-1"></a><span class="kw">update</span> products <span class="kw">set</span> price <span class="op">=</span> price <span class="fl">1.10</span></span>
<span id="cb3-2"><a href="#cb3-2" aria-hidden="true" tabindex="-1"></a><span class="kw">where</span> price <span class="op">&lt;=</span> <span class="fl">99.99</span></span>
<span id="cb3-3"><a href="#cb3-3" aria-hidden="true" tabindex="-1"></a><span class="kw">returning</span> name, price <span class="kw">as</span> new_price;</span></code></pre></div>
<h2 id="materialized-的-cte-公用表表达式">Materialized 的 CTE
公用表表达式</h2>
<p>CTE（公用表表达式）是使查询更具表现力的好方法。例如，计算每个世纪建立的城市数量：</p>
<div class="sourceCode" id="cb4"><pre class="sourceCode sql"><code class="sourceCode sql"><span id="cb4-1"><a href="#cb4-1" aria-hidden="true" tabindex="-1"></a><span class="kw">create</span> <span class="kw">table</span> city(</span>
<span id="cb4-2"><a href="#cb4-2" aria-hidden="true" tabindex="-1"></a>  city text,</span>
<span id="cb4-3"><a href="#cb4-3" aria-hidden="true" tabindex="-1"></a>  timezone text,</span>
<span id="cb4-4"><a href="#cb4-4" aria-hidden="true" tabindex="-1"></a>  geo_lat <span class="dt">real</span>,</span>
<span id="cb4-5"><a href="#cb4-5" aria-hidden="true" tabindex="-1"></a>  geo_lon <span class="dt">real</span>,</span>
<span id="cb4-6"><a href="#cb4-6" aria-hidden="true" tabindex="-1"></a>  population <span class="dt">integer</span>,</span>
<span id="cb4-7"><a href="#cb4-7" aria-hidden="true" tabindex="-1"></a>  foundation_year <span class="dt">integer</span></span>
<span id="cb4-8"><a href="#cb4-8" aria-hidden="true" tabindex="-1"></a>);</span>
<span id="cb4-9"><a href="#cb4-9" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb4-10"><a href="#cb4-10" aria-hidden="true" tabindex="-1"></a><span class="co">-- insert data ...</span></span>
<span id="cb4-11"><a href="#cb4-11" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb4-12"><a href="#cb4-12" aria-hidden="true" tabindex="-1"></a><span class="kw">with</span> history <span class="kw">as</span> (</span>
<span id="cb4-13"><a href="#cb4-13" aria-hidden="true" tabindex="-1"></a>  <span class="kw">select</span></span>
<span id="cb4-14"><a href="#cb4-14" aria-hidden="true" tabindex="-1"></a>    city,</span>
<span id="cb4-15"><a href="#cb4-15" aria-hidden="true" tabindex="-1"></a>    (foundation_year<span class="op">/</span><span class="dv">100</span>)<span class="op">+</span><span class="dv">1</span> <span class="kw">as</span> century</span>
<span id="cb4-16"><a href="#cb4-16" aria-hidden="true" tabindex="-1"></a>  <span class="kw">from</span> city</span>
<span id="cb4-17"><a href="#cb4-17" aria-hidden="true" tabindex="-1"></a>)</span>
<span id="cb4-18"><a href="#cb4-18" aria-hidden="true" tabindex="-1"></a><span class="kw">select</span></span>
<span id="cb4-19"><a href="#cb4-19" aria-hidden="true" tabindex="-1"></a>  century <span class="op">||</span> <span class="st">' century'</span> <span class="kw">as</span> dates,</span>
<span id="cb4-20"><a href="#cb4-20" aria-hidden="true" tabindex="-1"></a>  <span class="fu">count</span>(<span class="op">*</span>) <span class="kw">as</span> city_count</span>
<span id="cb4-21"><a href="#cb4-21" aria-hidden="true" tabindex="-1"></a><span class="kw">from</span> history</span>
<span id="cb4-22"><a href="#cb4-22" aria-hidden="true" tabindex="-1"></a><span class="kw">group</span> <span class="kw">by</span> century</span>
<span id="cb4-23"><a href="#cb4-23" aria-hidden="true" tabindex="-1"></a><span class="kw">order</span> <span class="kw">by</span> century <span class="kw">desc</span>;</span></code></pre></div>
<p>如果同一条 CTE 语句在查询中出现多次，则 SQLite 会多次计算该
CTE。对于比较大的表，这个操作可能会很缓慢。</p>
<p>而对于实例化的 CTE，SQLite
则只会执行一次查询，然后会记下结果，并且在同一查询中不会重新计算：</p>
<div class="sourceCode" id="cb5"><pre class="sourceCode sql"><code class="sourceCode sql"><span id="cb5-1"><a href="#cb5-1" aria-hidden="true" tabindex="-1"></a><span class="kw">with</span> history <span class="kw">as</span> <span class="kw">materialized</span> (</span>
<span id="cb5-2"><a href="#cb5-2" aria-hidden="true" tabindex="-1"></a>  <span class="kw">select</span> <span class="op">..</span>.</span>
<span id="cb5-3"><a href="#cb5-3" aria-hidden="true" tabindex="-1"></a>)</span>
<span id="cb5-4"><a href="#cb5-4" aria-hidden="true" tabindex="-1"></a><span class="kw">select</span> <span class="op">..</span>. <span class="kw">from</span> history <span class="kw">where</span> <span class="op">..</span>.</span>
<span id="cb5-5"><a href="#cb5-5" aria-hidden="true" tabindex="-1"></a><span class="kw">except</span></span>
<span id="cb5-6"><a href="#cb5-6" aria-hidden="true" tabindex="-1"></a><span class="kw">select</span> <span class="op">..</span>. <span class="kw">from</span> history <span class="kw">where</span> <span class="op">..</span>.</span>
<span id="cb5-7"><a href="#cb5-7" aria-hidden="true" tabindex="-1"></a>;</span></code></pre></div>
<p>四大功能，一次满足，针不戳 ツ</p>
<p><a href="https://sqlite.org/releaselog/3_35_0.html">SQLite 3.35.0
发行公告（草案）</a> ｜ <a href="https://sqlite.org/download.html">下载
SQLite 最新版本</a></p>]]></content>
      <categories>
        <category>Computer Science</category>
        <category>Backend</category>
        <category>Database</category>
      </categories>
      <tags>
        <tag>Computer Science</tag>
        <tag>Backend</tag>
        <tag>Database</tag>
        <tag>SQLite</tag>
      </tags>
  </entry>
  <entry>
    <title>黑客“高手”利用 11 个零日漏洞去感染 Windows、iOS 还有 Android 用户</title>
    <url>/2021/03/31/computer%20science/misc/expert-hackers-used-11-zerodays-to-infect-windows-ios-and-android-users/</url>
    <content><![CDATA[<blockquote>
<ul>
<li>原文地址：<a href="https://arstechnica.com/information-technology/2021/03/expert-hackers-used-11-zerodays-to-infect-windows-ios-and-android-users/">“Expert”
hackers used 11 zerodays to infect Windows, iOS, and Android
users</a></li>
<li>原文作者：<a href="https://arstechnica.com/author/dan-goodin/">Dan
Goodin</a></li>
<li>译者：<a href="https://github.com/PassionPenguin">霜羽
Hoarfroster</a></li>
<li>校对者：<a href="https://github.com/Kimhooo">Kimhooo</a>、<a href="https://github.com/PingHGao">PingHGao</a>
针对未知漏洞的漏洞利用程序花样百出，让这个黑客团伙与众不同。 <img src="https://cdn.arstechnica.net/wp-content/uploads/2020/11/zeroday-800x534.jpg" alt="图源 Getty"></li>
</ul>
</blockquote>
<p>谷歌研究人员说，一个高级黑客团队在为期 9 个月的攻击活动中利用了不少于
11 个零日漏洞，并通过被感染的网站去感染打过所有补丁的运行 Windows、iOS
和 Android 的设备。</p>
<p>依托先进的开发和伪装技术、利用各个漏洞类型并使用了一套复杂的投放框架，该团伙在
2020 年 2 月发现了<a href="https://arstechnica.com/information-technology/2021/01/hackers-used-4-0days-to-infect-windows-and-android-devices/">四个零日漏洞</a>。这伙黑客能够把攻陷了已全面打上补丁的
Windows 和 Android 设备的多个漏洞串联起来的能力让谷歌旗下 Project Zero
和威胁分析小组的成员们惊叹其“手法非常老到”。</p>
<h2 id="攻击还没结束">攻击还没结束</h2>
<p>周四，Project Zero 研究人员 Maddie Stone 表示，在 2
月份攻击发生后的八个月中，同一团伙利用了另外七个以前未知的漏洞，而这些漏洞至今还存在于
iOS 中。与 2 月份的情况如出一辙，黑客通过水坑式攻击（watering-hole
attack）投放了漏洞利用程序。这些攻击破坏了目标用户经常访问的网站，并在这些网站上添加了用于将恶意软件安装在访问者设备上的代码。</p>
<p>在所有攻击中，水坑式站点都将访客重定向到一个庞大的架构。这个架构会根据访客使用的设备和浏览器，向用户的设备安装不同的漏洞利用程序。尽管二月份使用的两台服务器仅攻击了
Windows 和 Android 设备，但后来的攻击也针对了运行 iOS
的设备。下图展示了它的工作原理：</p>
<p><img src="https://cdn.arstechnica.net/wp-content/uploads/2021/03/device-flow-diagram.jpg"></p>
<p>突破打过补丁的功能完善的操作系统，以及让应用程序内置的高级防御功能（例如，运行于
Windows 10 的 Chrome 和运行于 iOS 的
Safari）破防的能力证明了该团队的高超技能，也同时说明了这个团伙拥有的零日漏洞的数量之多。Google
修补了攻击者 2 月份在 <a href="https://nvd.nist.gov/vuln/detail/CVE-2020-15999">Chrome
渲染器</a>中利用的代码执行漏洞后，黑客迅速针对 Chrome V8
引擎的漏洞为他们的利用程序添加了新的代码。</p>
<p>在周四发表的<a href="https://googleprojectzero.blogspot.com/2021/03/in-wild-series-october-2020-0-day.html">博客</a>中，Stone
写道：</p>
<blockquote>
<p>从 JIT
的漏洞到大量的字体错误的缓存，这些漏洞涵盖了相当广泛的领域。总体而言，每个漏洞利用程序本身都体现出他们在漏洞利用程序开发和利用已知漏洞的领域方面的专业理解。Chrome
Freetype 的零日病毒的漏洞利用方法对我们 Project Zero
来说是新颖的。弄清楚如何触发 iOS
内核特权漏洞的过程并非易事，因为伪装方法多种多样且难以短时间发现。</p>
</blockquote>
<p>总而言之，Google 研究人员收集到以下信息：</p>
<blockquote>
<ul>
<li>1 条完整的会攻击运行 Google Chrome 的打上所有补丁的 Windows 10
的设备的漏洞攻击链</li>
<li>2 条会攻击运行 Google Chrome 和三星浏览器的打上补丁的 Android 10
设备的部分链</li>
<li>针对 iOS 11-13 的 RCE 漏洞利用程序和针对 iOS 13
的权限升级漏洞利用程序</li>
</ul>
</blockquote>
<p>这七个零日病毒是：</p>
<blockquote>
<ul>
<li>CVE-2020-15999 —— Chrome Freetype 堆缓冲区溢出</li>
<li>CVE-2020-17087 —— cng.sys 中的 Windows 堆缓冲区溢出</li>
<li>CVE-2020-16009 —— TurboFan 地图弃用中的 Chrome 类型混淆</li>
<li>CVE-2020-16010 —— 适用于 Android 的 Chrome 浏览器堆缓冲区溢出</li>
<li>CVE-2020-27930 —— 通过 Type 1 字体进行 Safari 任意堆栈读取/写入</li>
<li>CVE-2020-27950 —— mach 消息尾部中的 iOS XNU 内核内存泄露</li>
<li>CVE-2020-27932 —— 借助 turnstiles 的 iOS 内核类型混淆</li>
</ul>
</blockquote>
<h2 id="突破防御">突破防御</h2>
<p>需要复杂的漏洞利用链才能突破现代操作系统和应用程序内置的防御层。通常，我们也需要一系列攻击以利用目标设备上的代码，使该代码脱离浏览器安全沙箱并提升特权，以便代码可以访问操作系统的敏感部分。</p>
<p>周四的帖子未提供负责袭击的组织的详细信息。我们特别想知道这些黑客是不是研究人员已经知道的某个团伙的成员，还是说这是之前未见过的团伙。有关被攻击对象的信息也很有用。</p>
<p>确保应用程序和操作系统处于最新版本状态，并避免去访问可疑网站依然很重要。但不幸的是，这些措施对于被这个来历不明的团伙攻击的受害者而言却毫无帮助。</p>]]></content>
      <categories>
        <category>Computer Science</category>
        <category>Misc</category>
      </categories>
      <tags>
        <tag>Computer Science</tag>
        <tag>iOS</tag>
        <tag>Android</tag>
        <tag>Security</tag>
        <tag>Windows</tag>
      </tags>
  </entry>
  <entry>
    <title>Svelte NodeGUI 发布了！我们现在可以使用 Qt 和 Svelte 构建原生桌面端应用程序</title>
    <url>/2021/03/25/computer%20science/backend/svelte-nodegui-native-desktop/</url>
    <content><![CDATA[<blockquote>
<ul>
<li>原文地址：<a href="https://www.infoq.com/news/2021/03/svelte-nodegui-native-desktop/">New
Svelte NodeGui Allows Creating Native Desktop Applications with Qt and
Svelte</a></li>
<li>原文作者：<a href="https://www.infoq.com/profile/Bruno-Couriol/">Bruno
Couriol</a></li>
<li>译者：<a href="https://github.com/PassionPenguin">Hoarfroster</a></li>
<li>校对者：</li>
</ul>
</blockquote>
<p><a href="https://twitter.com/LinguaBrowse">Jamie Birch</a> 最近<a href="https://twitter.com/LinguaBrowse/status/1367929896685756422">发布了
Svelte NodeGUI</a>，一个用于在 Windows、Linux 和 macOS
上构建桌面端应用程序的框架。这是一个相较 Electron
来说更轻量的代替方案，让我们能够使用 <a href="https://svelte.dev/">Svelte 前端框架和编译器</a>，以及 <a href="https://www.qt.io/">Qt 控件工具包</a>，还可以用 HTML 和 CSS
子集，构建桌面端应用程序。</p>
<p>Svelte NodeGUI
的文档展现了它的基本原理以及使用它的好处，如下所示：</p>
<blockquote>
<p>Svelte NodeGUI 是一个 Svelte 对 <a href="https://nodegui.org/">NodeGUI</a>) 的渲染器。这是一个高效的
JavaScript 库，与跨平台 GUI 库 <code>Qt</code> 相捆绑。Qt
是最成熟最高效的构建桌面应用的库之一。这让 Svelte NodeGUI 在内存和 CPU
上更具效率，与其它的 JavaScript 桌面端 GUI
解决方案形成了明显的对比。一个用 Svelte NodeGUI 构建的 <em>Hello
World</em> 应用程序在内存上比其他 GUI 解决方案少占用 20 MB。</p>
</blockquote>
<p>有的开发者已经报告称一个基础的 <em>Hello World</em> 的用 Electron
构建的应用程序的尺寸会高达 <a href="https://medium.com/gowombat/how-to-reduce-the-size-of-an-electron-app-installer-a2bc88a37732">115
MB</a> 甚至是 <a href="https://stackoverflow.com/questions/59731319/how-can-i-reduce-my-275mb-hello-world-electron-package-size">275
MB</a>。Svelte NodeGUI 则成功地通过不内置 Chromium
浏览器包，编译一个内存更优的尺寸更小的可执行文件。</p>
<p>相反，我们无法在 Svelte NodeGUI 应用程序中使用所有的浏览器中有的 API
以及 HTML 和 CSS 的功能。Svelte NodeGUI 应用程序本质上是一个 Node.js
应用程序，其用户界面由 Qt 控件如 <a href="https://doc.qt.io/qt-5/qmainwindow.html"><code>QMainWindow</code></a>、<a href="https://doc.qt.io/qt-5/qcheckbox.html"><code>QCheckBox</code></a>
构建的，我们可以使用 <a href="https://doc.qt.io/qt-5/stylesheet-syntax.html">Qt
样式表语法</a>样式化应用程序。它使用了 <a href="https://developer.mozilla.org/en-US/docs/Learn/CSS/CSS_layout/Flexbox">Flexbox</a>
进行布局 —— 这是网络浏览器的一维布局方法。Qt
控件的数量和覆盖范围可能小于 <a href="https://www.htmlquick.com/reference/tags.html">HTML 原生元素</a>
的数量和覆盖范围，这实际上也限制了我们 —— 我们只能使用 Qt 支持的 HTML
子集。Svelte NodeGUI 附带 13 种标签或称之为 UI
组件，包括按钮，图像标签，可编辑文本区域，进度条和窗口。</p>
<p>Qt
窗口小部件可能会发出事件（称为信号），可以监听事件并以编程方式将其与事件处理程序关联。NodeGUI
还提供了一组的内部事件，应用程序可以对其监听（即 <a href="https://svelte.nodeGUI.org/docs/GUIdes/handle-events#event-handling">QEvents</a>）。Svelte
NodeGUI 的文档提供了<a href="https://svelte.nodeGUI.org/docs/GUIdes/handle-events#how-do-i-know-which-events-are-supported-">以下示例，说明了布局机制和事件语法</a>：</p>
```jsx
<script lang="ts">
    import {onMount} from "svelte";
    import {Direction} from "@nodegui/nodegui";
    import type {QPushButtonSignals} from "@nodegui/nodegui";

    let additionalButtons: string[] = [];
    let direction: Direction = Direction.LeftToRight;

    function addHandler(): void {
        additionalButtons = [...additionalButtons, `Button ${additionalButtons.length}`];
    }
    function removeHandler(): void {
        additionalButtons = [...additionalButtons.slice(0, additionalButtons.length - 1)];
    }
    function toggleDirection(): void {
        direction = ((direction + 1) % 4) as Direction;
    }

    onMount(() => {
        (window as any).win = win; // Prevent garbage collection.
        win.nativeView.show();
        return () => {
        delete (window as any).win;
    };
});
</script>
<p><window bind:this="{win}"> <boxview direction="{direction}">
<button text="Add" on="{addHandler}/">
</button><button text="Remove" on="{removeHandler}/">
</button><button text="Toggle direction" on="{toggleDirection}/"><p></p>
</button></boxview></window></p>]]></content>
      <categories>
        <category>Computer Science</category>
        <category>Backend</category>
        <category>Node</category>
      </categories>
      <tags>
        <tag>Computer Science</tag>
        <tag>Backend</tag>
        <tag>Node</tag>
        <tag>Svelte</tag>
        <tag>Qt</tag>
      </tags>
  </entry>
  <entry>
    <title>微软在 Windows 最新的测试版中内置了 Windows Terminal</title>
    <url>/2021/03/25/computer%20science/windows/microsoft-makes-changes-to-windows-10-inbox-apps-with-latest-dev-channel-test-build/</url>
    <content><![CDATA[<blockquote>
<ul>
<li>原文地址：<a href="https://www.zdnet.com/article/microsoft-makes-changes-to-windows-10-inbox-apps-with-latest-dev-channel-test-build/">Microsoft
makes changes to Windows 10 inbox apps with latest Dev Channel test
build</a></li>
<li>原文作者：<a href="https://www.zdnet.com/meet-the-team/us/mary-jo-foley/">Mary Jo
Foley</a></li>
<li>译者：<a href="https://github.com/PassionPenguin">Hoarfroster</a></li>
<li>校对者：</li>
</ul>
</blockquote>
<blockquote>
<p>微软正在向虚拟桌面添加新的自定义选项，并在其 Windows 10
开发者通道测试版本 <code>21337</code>
中更改了多个内置的应用程序（包括记事本）的功能。</p>
</blockquote>
<figure>
<img src="https://www.zdnet.com/a/hub/i/2021/03/17/384b289e-d334-4b03-b676-5df0c8fb24f7/win10build21337.jpg" alt="图源微软">
<figcaption aria-hidden="true">图源微软</figcaption>
</figure>
<p>微软于 3 月 17 日向开发频道发布了一个新的 Windows 10 Insider
测试版本。与往常一样，该版本具有一些相当小的功能调整以及大量修复程序。但是，从此测试版本（21337）开始，<a href="https://blogs.windows.com/windows-insider/2021/03/17/announcing-windows-10-insider-preview-build-21337/">Microsoft
将对 Windows 10 附带的内置应用程序进行一些更改</a>。</p>
<p>在我看来，这可能是最具有破坏性的更改（好啦我只是说笑的哈哈哈哈哈）——
微软更改了<code>记事本</code>的图标，使其与 Fluent
风格更加搭。另外，我们也可以使用 Microsoft Store
更新记事本。从好的方面来说，记事本已从 Windows
内置应用程序中独立出来，并在“开始”菜单中有了自己的位置 ——
完全有道理，也是完全正确的（至少从此我这个记事本爱好者的角度而言）。</p>
<p>此外，微软正在将 Windows
Terminal（用于命令行工具用户的终端应用程序）开发为内置的应用程序。根据今天的博客文章，Windows
Terminal 的更新将继续在 Microsoft Store 上运行。另外 Power Automate
Desktop
也作为内置应用程序包含在内，对于任何有兴趣使用机器人流程自动化（RPA）来实现重复任务自动化的人来说，这都是个好消息。Power
Automate 将位于 Windows 附件文件夹中。微软在本月初的 Ignite 上宣布，<a href="https://www.techrepublic.com/article/microsoft-offers-power-automate-for-the-desktop-to-all-windows-10-users/">Power
Automate Desktop 可以免费供 Windows 10 用户使用</a>。</p>
<p>就新的 Windows 10 测试版本 21337
而言，微软从此版本开始使测试人员能够更好地控制其虚拟桌面。他们能够更改虚拟桌面背景并重新排列桌面。当前版本还有
PC 游戏的 Auto HDR
预览的更新，以及在文件浏览器布局中将间距修改地更大。</p>
<p>有关今天的测试版本中的修复，更新和已知问题的更多信息，请参阅<a href="https://blogs.windows.com/windows-insider/2021/03/17/announcing-windows-10-insider-preview-build-21337/">微软发布
21337 版本的博客文章</a>。</p>]]></content>
      <categories>
        <category>Computer Science</category>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>Computer Science</tag>
        <tag>Windows</tag>
      </tags>
  </entry>
  <entry>
    <title>Java 16 发布啦</title>
    <url>/2021/03/25/computer%20science/backend/the-arrival-of-java-16/</url>
    <content><![CDATA[<blockquote>
<ul>
<li>原文地址：<a href="https://blogs.oracle.com/java-platform-group/the-arrival-of-java-16">The
Arrival of Java 16</a></li>
<li>原文作者：<a href="https://blogs.oracle.com/author/sharat-chander">Sharat
Chander</a></li>
<li>译者：<a href="https://github.com/PassionPenguin">霜羽
Hoarfroster</a></li>
<li>校对者：</li>
</ul>
</blockquote>
<p>在我们庆祝 Java 成立 <a href="https://www.oracle.com/java/moved-by-java/">25 周年之际</a>，2020
年对于 Java 来说是值得纪念的一年。经过了 20 多年的创新，Java
一直是：</p>
<ul>
<li>通过适应不断变化的技术格局而保持平台独立性，从而具有灵活性。</li>
<li>通过保持向后兼容性来保证可靠性。</li>
<li>通过在不牺牲安全性的情况下加速创新来表现。</li>
</ul>
<p>加上 Java
不断提高平台性能，稳定性和安全性的能力，它仍然是开发者中世界上最受欢迎的编程语言。根据
IDC 的最新报告 <a href="https://www.oracle.com/a/ocom/resources/java-turns-25.pdf">Java
Turns 25</a>，超过 900 万名开发者（占全球全职开发者的 69％）使用 Java ——
比任何其他语言都多。</p>
<p>Oracle 进一步展示了 Java 的持续创新之路，并自豪地宣布 Java 16 的全面
Release，这是六个月紧张开发中的第七个功能版本的
Release。源源不断的预期变化让开发者可以更轻松地管理他们对创新建议的采纳。</p>
<figure>
<img src="https://raw.githubusercontent.com/PassionPenguin/picgo-database/main/v2-c2364e54b150336418b9b87d011c8c17_720w.png" alt="img">
<figcaption aria-hidden="true">img</figcaption>
</figure>
<h2 id="java-16-现在可用了">Java 16 现在可用了！</h2>
<p>Oracle 现在<a href="https://www.oracle.com/news/announcement/oracle-announces-java-16-031621.html">为所有开发者和企业</a>正式提供
<a href="https://www.oracle.com/news/announcement/oracle-announces-java-16-031621.html">Java
16</a>。根据 <a href="https://www.oracle.com/technetwork/topics/security/alerts-086861.html">Oracle
关键补丁更新（CPU，Critical Patch Update）时间表</a>，Oracle JDK 16
将至少获得两个季度的更新，然后我们会再发布 Oracle JDK 17。Java 17 将在
2021 年 9 月实现全面可用性，但是早已在 <a href="https://jdk.java.net/">jdk.java.net</a> 网站上提供了<a href="https://jdk.java.net/17/">构建版本</a>。</p>
<p>Oracle 再次使用开源 GPLv2 协议 和 CPE 协议将 Java 16 作为 <a href="https://jdk.java.net/15/">Oracle OpenJDK
版本</a>向大家提供，并且对于使用 Oracle JDK 版本作为 Oracle
产品或服务，或针对那些希望能够获得商业支持的人的那一部分的用户，也获得了<a href="https://oracle.com/javadownload">商业许可</a>。</p>
<p><strong>Java 16，Together</strong></p>
<p>与以前的发行版相似，我们将继续感谢 OpenJDK 社区中许多个人和组织对
Java 16 所做的贡献 —— 我们共同构建了 Java！</p>
<p><strong>JDK 16 固定开发率</strong></p>
<p>JDK
的总体变化率多年来一直保持基本恒定，但是在六个月的紧张开发节奏下，交付可用于生产的产品的速度已大大提高。</p>
<p>我们不再每隔几年在大型主要版本中发布成千上万的修复程序和大约一百个
JDK 增强建议（JEP），而是选择以更易于管理且可预测的六个月计划，在较小的
Feature
版本中提供增强功能。这些更改的范围从重要功能到小的增强功能，到例行维护，错误修复和文档改进。对于
<a href="https://bugs.openjdk.java.net/secure/Dashboard.jspa">JDK Bug
系统中</a>的每一个问题和更改，我们都以单个提交的形式呈现。</p>
<p>在 Java 16 中标记为已解决的 <a href="https://bugs.openjdk.java.net/issues/?jql=project%20%3D%20JDK%20AND%20fixVersion%20%3D%2016%20AND%20resolution%20%3D%20Fixed%20AND%20%28comment%20~%20%22URL%3A%20http%3A%2F%2Fhg.openjdk.java.net%22%20OR%20comment%20~%20%22URL%3A%20https%3A%2F%2Fhg.openjdk.java.net%22%20OR%20comment%20~%20%22URL%3A%20https%3A%2F%2Fgit.openjdk.java.net%2F%22%29%20AND%20%28labels%20not%20in%20%28hgupdate-sync%29%20OR%20labels%20is%20EMPTY%29%20%20ORDER%20BY%20updated%20DESC%2C%20assignee%20ASC">1,897
个</a>问题中，有 <a href="https://bugs.openjdk.java.net/browse/JDK-8246707?jql=project%20%3D%20JDK%20AND%20fixVersion%20%3D%2016%20AND%20resolution%20%3D%20Fixed%20AND%20%28comment%20~%20%22URL%3A%20http%3A%2F%2Fhg.openjdk.java.net%22%20OR%20comment%20~%20%22URL%3A%20https%3A%2F%2Fhg.openjdk.java.net%22%20OR%20comment%20~%20%22URL%3A%20https%3A%2F%2Fgit.openjdk.java.net%2F%22%29%20%20AND%20%28labels%20not%20in%20%28hgupdate-sync%29%20OR%20labels%20is%20EMPTY%29%20AND%20assignee%20in%20membersOf%28oracle-employees%29%20ORDER%20BY%20updated%20DESC%2C%20assignee%20ASC">1,397</a>
个由 Oracle 工作人员解决了，而另外的
<a href="https://bugs.openjdk.java.net/browse/JDK-8257574?jql=project%20%3D%20JDK%20AND%20fixVersion%20%3D%2016%20AND%20resolution%20%3D%20Fixed%20AND%20(comment%20~%20%22URL%3A%20http%3A%2F%2Fhg.openjdk.java.net%22%20OR%20comment%20~%20%22URL%3A%20https%3A%2F%2Fhg.openjdk.java.net%22%20%20OR%20comment%20~%20%22URL%3A%20https%3A%2F%2Fgit.openjdk.java.net%2F%22)%20%20AND%20(labels%20not%20in%20(hgupdate-sync)%20OR%20labels%20is%20EMPTY)%20AND%20assignee%20not%20in%20%20membersOf(oracle-employees)%20ORDER%20BY%20updated%20DESC%2C%20assignee%20ASC">500</a>
个则由个人开发者和为其他组织工作的开发者解决。仔细研究这些问题并整理来自受让人的组织数据，将得到以下组织结构图。该组织结构图由助力
Java 16 中的修补程序的开发的人员构成：</p>
<p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/515b6bd1c2b3439b883b450c9af979d0~tplv-k3u1fbpfcp-zoom-1.image"></p>
<p>Oracle 感谢在 ARM、SAP、Red Hat
和腾讯等组织工作的开发者所做的杰出贡献。我们也很高兴看到较小的组织（例如
Ampere Computing、Bellsoft、DataDog、Microdoc
和其他独立开发者）的贡献，他们共同贡献了Java 16 中 3％ 的修复程序。</p>
<p>我们同样感谢众多经验丰富的开发者，他们审查了提议的更改，尝试采用早期访问版本并报告问题的早期采用者，以及在OpenJDK邮件列表中提供反馈的敬业专业人员。</p>
<p>以下人员提供了有关构建质量的宝贵反馈，记录了高质量的错误或提供了频繁的更新：</p>
<ul>
<li>Jaikiran Pai (Apache Ant)</li>
<li>Gary Gregory (Apache Commons)</li>
<li>Uwe Schindler (Apache Lucene)</li>
<li>Robert Scholte (Apache Maven)</li>
<li>Mark Thomas (Apache Tomcat)</li>
<li>Enrico Olivelli (Apache Zookeeper)</li>
<li>Rafale Winterhalter (Byte Buddy)</li>
<li>Peter Karich (Graph Hopper)</li>
<li>Evgeny Yavits (JaCoCo)</li>
<li>Marc Hoffman (JaCoCo)</li>
<li>Vincent Privat (JOSM)</li>
<li>Christain Stein (JUnit 5)</li>
<li>David Karnok (RxJava)</li>
</ul>
<p>此外，通过 <a href="https://wiki.openjdk.java.net/display/quality/Quality+Outreach">质量拓展</a>计划，我们要感谢以下
FOSS 项目和个人，他们为测试 Java 16
早期访问版本提供了出色的反馈，以帮助提高发行版的质量。</p>
<ul>
<li>Apache Ant</li>
<li>Apache Derby (Rich Hillegas)</li>
<li>Apache Lucene</li>
<li>Apache Maven</li>
<li>Apache Tomcat</li>
<li>Apache Wicket (Martin Grigorov)</li>
<li>Apache ZooKeeper</li>
<li>Eclipse Collections (Nikhil Nanivadekar)</li>
<li>eo-yaml (Mihai Andronache)</li>
<li>FXGL (Almas Baimagambetov)</li>
<li>FXyz (Sean Phillips)</li>
<li>Java Katas (Chandra Guntur)</li>
<li>GraphHopper</li>
<li>Hibernate ORM</li>
<li>Hibernate Validator</li>
<li>Hibernate Search</li>
<li>Hibernate Reactive (Sanne Grinovero &amp; Yoann Rodiere)</li>
<li>JobRunr (Ronald Dehuysser)</li>
<li>jOOQ (Lukas Eder)</li>
<li>MyBatis (Iwao Ave)</li>
<li>Micrometer (Tommy Ludwig)</li>
<li>RxJava</li>
<li>Sejda</li>
<li>PDFsam (Andrea Vacondio)</li>
</ul>
<p><strong>Java 16 的新功能</strong></p>
<p>伴随着数千个性能、稳定性和安全性上的更新，Java 16 为用户提供了共计 <a href="https://openjdk.java.net/projects/jdk/16/">17
项主要的增强、更改</a>（称为 <a href="https://openjdk.java.net/jeps/1">JDK
增强建议，JEP</a>），包括三个孵化器模块和一个预览功能。</p>
<p>我们在<a href="https://openjdk.java.net/jeps/11">孵化器模块</a>中引入了一些增强功能，这是一种将非最终
API 和非最终工具交付给开发者的方法，允许用户提供反馈，从而最终改善 Java
平台的质量。</p>
<p>同样，引入了一些增强功能，它们是 Java SE 平台的<a href="https://openjdk.java.net/jeps/12">预览功能</a>、语言或 VM
功能，这些功能已完全确定、完全实现但不是永久性的。我们在 JDK
功能版本中提供了这些功能，以激发开发者根据实际使用情况提供的反馈，这可能影响它们，让它们在以后的版本中成为永久性功能。这种方法为用户提供了及时提供反馈的机会，并且使工具供应商有机会在大量
Java 开发者在生产中使用该功能之前为其提供支持。</p>
<p>Java 16 随附的 17 个 JEP 共分为六个不同类别：</p>
<p><strong>1. 新语言功能</strong></p>
<p><strong><a href="https://openjdk.java.net/jeps/394">JEP 394</a>
Pattern Matching 的 instanceof</strong></p>
<p>Pattern Matching 首次在 <a href="https://openjdk.java.net/jeps/305">Java 14
中</a>作为预览功能引入，在 <a href="https://openjdk.java.net/jeps/375">Java 15
中</a>我们又将其作为预览功能引入。Pattern Matching 通过对 instanceof
运算符进行模式匹配来增强 Java 编程语言的功能。</p>
<p>模式匹配使程序中的通用逻辑（即从对象中有条件地提取组件）得以更简洁，更安全地表示。</p>
<p><strong><a href="https://openjdk.java.net/jeps/395">JEP 395</a>
Records</strong></p>
<p>Record 也是在 <a href="https://openjdk.java.net/jeps/359">Java 14</a>
和 <a href="https://openjdk.java.net/jeps/384">Java 15</a>
中作为预览功能引入的，提供了一种紧凑的语法来声明类。这些类是浅层不可变数据的透明的
holder，<em>大大减少这些类的详细程度，并提高代码的可读性和可维护性。</em></p>
<p><strong>2. JVM 的改进</strong></p>
<p><strong><a href="https://openjdk.java.net/jeps/376">JEP 376</a> ZGC
并发线程处理</strong></p>
<p>JEP 376 将 ZGC
线程堆栈处理从安全点移至并发阶段。我们即使在大型堆上，也可以在 GC
安全点内实现亚毫秒级的暂停。在此版本及其后续版本中，消除 ZGC
垃圾收集器中最终的延迟源将极大地提高应用程序的性能和效率。</p>
<p><strong><a href="https://openjdk.java.net/jeps/387">JEP 387</a>
Elastic Metaspace</strong></p>
<p>此功能可以更迅速地将未使用的 HotSpot VM 类元数据（即
<em>metaspace</em>）内存返回给操作系统，从而减少了 metaspace
的占用空间。具有大量加载和卸载活动的应用程序可能会占用大量未使用的空间。</p>
<p>新方案以较小的块分配元空间内存，减少了类加载器的开销和碎片。它通过将未使用的元空间内存返回给操作系统来提高弹性，从而提高应用程序性能并降低内存利用率。</p>
<p><strong>3. 新工具和库</strong></p>
<p><strong><a href="https://openjdk.java.net/jeps/380">JEP 380</a>
Unix-Domain Socket Channels</strong></p>
<p>Unix-Domain Socket Channels 一直是大多数 Unix
平台的功能，而现在我们在 Windows 10 和 Windows Server 2019
中实现了这个功能。此功能为 java.nio.channels 包中的 Socket 和服务器
Socket API 添加了 Unix 域（AF_UNIX）Socket
支持。它扩展了继承的通道机制，以支持 Unix 域 Socket 通道和服务器 Socket
通道。Unix 域 Socket 用于同一主机上的进程间通信（IPC），在大多数方面与
TCP-IP 套接字类似，不同之处在于它们是通过文件系统路径名而不是 Internet
协议（IP）地址和端口号来寻址的。对于本地进程间通信，Unix Socket 比
TCP-IP 环回连接更安全，更有效。</p>
<p><strong><a href="https://openjdk.java.net/jeps/392">JEP 392</a>
打包工具</strong></p>
<p>此功能最初是在 <a href="https://openjdk.java.net/jeps/343">Java 14
中</a>作为孵化器模块引入的，允许打包独立的 Java
应用程序。它支持本地打包格式，以为最终用户提供自然的安装体验。这些格式包括
Windows 上的 msi 和 exe，macOS 上的 pkg 和 dmg 以及 Linux 上的 deb 和
rpm。它还允许在打包时指定启动时参数，并且可以从命令行直接调用，也可以通过
ToolProvider API 以编程方式调用。请注意，jpackage 模块的名称从
jdk.incubator.jpackage 更改为
jdk.jpackage。这将改善最终用户在安装应用程序时的体验，并使用“应用程序商店”模型简化部署。</p>
<p><strong>4. 对工作进行未来验证</strong></p>
<p><strong><a href="https://openjdk.java.net/jeps/390">JEP 390</a>
基于值的类的警告</strong></p>
<p>此功能将原始包装器类（java.lang.Integer、java.lang.Double
等）指定为<em>基于值的</em>（类似于 java.util.Optional 和
java.time.LocalDateTime），并将 forRemoval 添加到其构造函数。它们自 JDK
9 起不推荐使用，提示新的警告。它提供有关在 Java
平台中不正确尝试在任何基于值的类的实例上进行同步的警告。</p>
<p>许多流行的开源项目已经通过从其源中删除打包构造函数调用来响应 Java 9
的过时警告，并且鉴于“不建议过时删除”警告的紧急性，我们可以期望更多的这样做。</p>
<p><strong><a href="https://openjdk.java.net/jeps/396">JEP 396</a>
默认情况下强封装 JDK 内部</strong></p>
<p>默认情况下，此功能会强封装了 JDK 的所有内部元素，但关键内部 API
除外，例如 sun.misc.Unsafe。在默认情况下，使用早期版本成功编译的访问 JDK
内部 API
的代码可能不再起作用。此更改旨在鼓励开发者从使用内部元素迁移到使用标准
API，以便他们及其用户都可以轻松升级到将来的 Java 版本。对于 JDK
9，强启动由启动器选项 -–illegal-access 开启，而 JDK 15
则作为默认设置，JDK 9-15 会是<em>警告</em>，而从 JDK 16 开始则默认为
<em>拒绝</em>。我们（暂时）仍然可以使用单个命令行选项放宽对所有软件包的封装，将来只有使用
–add-opens 打开特定的软件包才有效。</p>
<p><strong>5.孵化器和预览功能</strong></p>
<p><strong><a href="https://openjdk.java.net/jeps/338">JEP 338</a> 矢量
API（孵化器）</strong></p>
<p>该孵化器 API 提供了 API
的初始迭代，以表达向量计算，该向量计算在运行时可靠地编译为支持的 CPU
架构上的最佳向量硬件指令，从而实现了优于等效标量计算的性能。它允许利用大多数现代
CPU 上可用的单指令多数据（SIMD）指令。尽管 HotSpot
支持自动矢量化，但是可变换的标量操作集受到限制，并且易受代码更改的影响。该
API 将使开发者可以轻松地用 Java 编写可移植的高性能矢量算法。</p>
<p><strong><a href="https://openjdk.java.net/jeps/389">JEP 389</a>
外部链接 API（孵化器）</strong></p>
<p>该孵化器 API 提供了对本地代码的静态类型的纯Java访问。此 API
将大大简化绑定到本机库的原本繁琐且容易出错的过程。Java 从 Java 1.1
开始就支持通过 Java
本机接口（JNI）进行本机方法调用，但是它用起来又困难又脆弱。Java
开发者应该能够（大部分）仅使用对特定任务有用的任何本机库。它还提供了外来功能支持，而无需任何中间的
JNI 粘合代码。</p>
<p><strong><a href="https://openjdk.java.net/jeps/393">JEP 393</a>
外部内存访问 API（3 次孵化器）</strong></p>
<p>首次在 Java 14 和 Java 15 中作为孵化器API引入，此 API 使 Java
程序可以安全有效地对各种外部存储器（例如，本机存储器、PMEP、托管堆存储器等）进行操作。它还为外部链接程序
API 提供了基础。</p>
<p><strong><a href="https://openjdk.java.net/jeps/397">JEP 397</a>
密封的类（第 2 次预览）</strong></p>
<p>此预览功能限制了哪些其他类或接口可以扩展或实现它们。它允许类或接口的作者控制负责实现该代码的代码。而且，它提供了比访问修饰符更声明性的方式来限制超类的使用。并且它通过对模式进行详尽的分析来支持模式匹配的未来方向。</p>
<p><strong>6. 提高 OpenJDK 开发者的生产率</strong></p>
<p><em>其余更改对 Java 开发者（使用 Java
编写代码和运行应用程序的人员）不直接可见，而只对 Java 开发者（进行
OpenJDK 开发的人员）可见。</em></p>
<p><strong><a href="https://openjdk.java.net/jeps/347">JEP 347</a> 启用
C++ 14 语言功能（在 JDK 源代码中）</strong></p>
<p>这允许在 JDK C++ 源代码中使用 C++ 14 语言功能，并提供有关 HotSpot
代码中可以使用哪些功能的特定指南。在 JDK 15 中，JDK 中 C++
代码使用的语言功能限于 C++ 98/03
语言标准。这个功能要求更新各种平台编译器的最低可接受版本。</p>
<p><strong><a href="https://openjdk.java.net/jeps/357">JEP 357</a> 从
Mercurial 迁移到 Git<br>
<a href="https://openjdk.java.net/jeps/369">JEP 369</a> 迁移到
GitHub</strong></p>
<p>这两个 JEP 将 OpenJDK 社区的源代码存储库的 JDK 11 及更高版本从
Mercurial（hg）迁移到 Git，并将它们托管在 GitHub
上。迁移包括将工具（例如 jcheck、webrev 和 defpath 工具）更新到 Git。Git
减小了元数据的大小（约为原大小的四分之一），从而节省了本地磁盘空间并减少了克隆时间。与
Mercurial 相比，现代工具可以更好地与 Git 集成。OpenJDK Git
存储库现在位于 <a href="https://github.com/openjdk">https://github.com/openjdk</a></p>
<p><strong><a href="https://openjdk.java.net/jeps/386">JEP 386</a>
Alphine Linux Port</strong></p>
<p><strong><a href="https://openjdk.java.net/jeps/388">JEP 388</a>
Windows / AArch64 Port</strong></p>
<p>这些 JEP 的重点不是已经完成的移植工作本身，而是将它们集成到 JDK
主线存储库中。</p>
<p>JEP 386 将 JDK 移植到使用 musl 作为其主要 C 库的 Alpine Linux
和其他发行版 x64 和 AArch64 上。此外，JEP 388 将 JDK 移植到 Windows
AArch 64（ARM64）上。</p>
<p><strong>7. 工具支持</strong></p>
<p>当前的工具支持有助于提高开发者的生产力。使用 Java
16，我们将继续欢迎领先的 IDE
开发者所做的努力，这些开发者的工具解决方案为开发者提供了对当前 Java
版本的支持。开发者可以期望通过以下 IDE 获得 Java 16 支持：</p>
<ul>
<li>JetBrains <a href="https://blog.jetbrains.com/idea/2021/03/java-16-and-intellij-idea/">IDEA</a></li>
<li>Eclipse <a href="https://marketplace.eclipse.org/content/java-16-support-eclipse-2021-03-419">Market</a></li>
</ul>
<p>Java 仍然是软件程序员选择的第一大编程语言。正如 Java 16
的按时交付那些改进所表明的那样，通过持续的深思熟虑的计划和生态系统的参与，Java
平台已做好了在云中进行现代开发和增长的良好定位。</p>
<p>通过以下方式继续关注新闻和更新：</p>
<ul>
<li>访问 <a href="https://inside.java/">Inside.Java</a>（Oracle Java
团队的新闻和观点）</li>
<li>收听 <a href="https://inside.java/podcast/">Inside.Java
播客</a>（这是针对 Java
开发者的一个节目，直接从Oracle的Java开发者那里获得。我们将讨论该语言、JVM、OpenJDK、平台安全性，以及诸如
Loom 和 Panama 之类的创新项目还有别的其他内容）。</li>
<li>加入 <a href="http://mail.openjdk.java.net/mailman/listinfo">OpenJDK
邮件列表</a>（了解您喜欢的 OpenJDK 项目进度的地方）。</li>
</ul>]]></content>
      <categories>
        <category>Computer Science</category>
        <category>Backend</category>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Computer Science</tag>
        <tag>Backend</tag>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>你的 Android 设备现在更安全了 —— 还有 5 项别的新功能！</title>
    <url>/2021/03/25/computer%20science/android/android-new-features-spring-2021/</url>
    <content><![CDATA[<blockquote>
<ul>
<li>原文地址：<a href="https://blog.google/products/android/new-features-spring-2021/">Your
Android is now even safer — and 5 other new features</a></li>
<li>原文作者：<a href="https://blog.google/">Hideaki Oshima</a></li>
<li>译者：<a href="https://github.com/PassionPenguin">霜羽
Hoarfroster</a></li>
<li>校对者：</li>
</ul>
</blockquote>
<figure>
<img src="https://storage.googleapis.com/gweb-uniblog-publish-prod/images/Hero_Image_W3RuhIb.max-1000x1000.png" alt="头图">
<figcaption aria-hidden="true">头图</figcaption>
</figure>
<p>不久以前，我们<a href="https://blog.google/products/android/new-features-winter-2020/">向
Android 使用者介绍了</a> Emoji Kitchen
和自动叙述有声读物等功能。但是我们想保持频繁地更新，因此今天我们重点介绍
<a href="https://android.com/google-features-on-android">6 个 Google
的最新的更新</a>，让 Android 手机更加安全和便捷 —— 为大家所准备的。</p>
<h2 id="通过-android-上的密码检查功能保障帐户安全">1.通过 Android
上的密码检查功能保障帐户安全</h2>
<p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/3898e72b4b234265a9a94fb65ceec89e~tplv-k3u1fbpfcp-zoom-1.image" alt="PasswordBreach_Animation.gif">
<small>密码检查通知屏幕</small></p>
<p>在 Android 上，您可以将密码保存到您的 Google
帐户，从而可以更快速，更轻松地使用自动填充功能登录您的应用和服务。您的登录凭据是抵御入侵者的第一道防线之一，因此我们已将<a href="https://blog.google/technology/safety-security/password-checkup/">密码检查功能</a>集成到运行
Android 9
及更高版本的设备中，让您能够知道您之前使用的密码是否曾被公开以及如何处理。</p>
<p>现在，当您使用 Google
的自动填充功能在手机上的应用中输入密码时，我们会根据已知的已泄露密码列表检查这些凭据。如果这些密码被盗并已发布到网络上的密码，我们将提醒您，并指导您检查密码并进行更改。</p>
<p>在我们的<a href="https://support.google.com/accounts/answer/9457609?hl=en#zippy=%2Cview-data-breaches-we-check">支持页面</a>上了解有关更改不安全密码的更多信息。您也可以在<a href="https://security.googleblog.com/2021/02/new-password-checkup-feature-coming-to.html">此博客文章</a>中找到有关此产品如何工作的其他信息。</p>
<p>我们热衷于将防御纳入 Android
的每个细节中。从下载应用程序到浏览网络，再到选择共享数据的时间和地点，我们始终为您提供防线。<a href="https://www.android.com/safety/">详细了解 Android
如何保障您的安全</a>。</p>
<h2 id="使用-messages-中的计划发送功能现在编写文本并实现稍后发送">2.
使用 Messages 中的计划发送功能，现在编写文本并实现稍后发送</h2>
<p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/e7c6518daafb4a318cc9c8ec9d0f7841~tplv-k3u1fbpfcp-zoom-1.image" alt="安排 Messages 以在您选择的日期和时间发送"> <small>单击<a href="https://youtu.be/jxfrZV1kkhM">这里</a>以了解如何安排 Messages
在您选择的日期和时间发送</small></p>
<p>全世界有超过十亿人每月使用 <a href="https://messages.google.com/">Messages</a>
软件与家人，朋友和其他人无缝且安全地建立联系。为了继续改善您的沟通方式并帮助您保持联系，我们开始针对运行
Android 7 及更高版本的手机，推出日程安排中的“发送消息”功能。</p>
<p>如果你需要与处于另一个时区或有着不同的时间安排的爱人发送短信，有些时候的确是挺困难的。使用计划发送，您可以在方便的时候提前编写一条消息，并计划在适当的时间发送。您只需像往常一样编写消息，然后按住并按发送按钮以选择传递消息的日期和时间。快<a href="https://play.google.com/store/apps/details?id=com.google.android.apps.messaging">下载
Messages</a> 或更新其至最新版本以准备好发送您的下一条短信。</p>
<h2 id="借助话语提示我们无需再在接听电话时看屏幕">3.
借助“话语提示”，我们无需再在接听电话时看屏幕</h2>
<p><a href="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/97ba274886684f3ebf1604a6fa5fded3~tplv-k3u1fbpfcp-zoom-1.image">使用“话语提示”手势启动和停止媒体</a>
<small>点击<a href="https://www.youtube.com/watch?v=40hITd7mvXY&amp;feature=youtu.be&amp;ab_channel=Android">这里</a>查看如何使用“话语提示”手势启动和停止媒体</small></p>
<p>对于盲人们或有困难于看屏幕的人，他们现在可以使用<a href="https://blog.google/products/android/all-new-talkback/">新版本的
Android 屏幕阅读器 TalkBack</a>。借助语音反馈和手势，TalkBack 使 Android
<a href="https://www.youtube.com/watch?v=90daoPcJpBM&amp;feature=emb_title">更加易于访问</a>，让我们无需看屏幕即可获得完整的电话体验。在此次
TalkBack
的改版中，我们与盲人和弱视社区紧密合作，以整合最受欢迎的功能，包括：更直观的手势，统一的菜单，新的阅读控制菜单等等。立即通过
<a href="https://play.google.com/store/apps/details?id=com.google.android.marvin.talkback">Google
Play 商店</a>下载或更新您的 Android 辅助功能应用程序来获取“话语提示”
。</p>
<h2 id="借助-google-assistant-免提完成更多工作">4. 借助 Google Assistant
免提完成更多工作</h2>
<p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/7f3376439327455e86da0fdcb4d390a7~tplv-k3u1fbpfcp-zoom-1.image" alt="即使您的手机已锁定，你也可以使用 Google Assistant 发送文本">
<small>即使您的手机已锁定，您也可以使用 Google Assistant
发送文本</small></p>
<p>我们希望为您提供更多免提使用电话的方式 ——
这样您就可以同时做一些别的事情，例如使用语音拨打电话，设置计时器或闹钟并播放音乐。现在，Google
Assistant 的最新更新，让您无需在手机旁边就可以轻松完成手机上的操作。</p>
<p>现在即使您的手机被锁定，或隔着房间，显示着瞧一眼就能看到的卡片消息，“助手”现在也能更好地为您服务。您只需说“嘿
Google，设置闹钟”或“嘿 Google，播放 Spotify
上的流行音乐”就可以啦。要在锁定手机时充分利用助手，您只需在助手设置中打开“Lock
Screen Personal Results”功能，然后说“嘿
Google”，随后您就可以发送短信和拨打电话了。</p>
<h1 id="使用-google-地图黑暗主题">5. 使用 Google 地图黑暗主题</h1>
<p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/63add7b580f64fc38f7063dd14b1f9af~tplv-k3u1fbpfcp-zoom-1.image" alt="Google Maps 黑暗主题的旧金山"> <small>Google Maps
黑暗主题的旧金山</small></p>
<p>这些天来，我们都逐渐有了屏幕疲劳的感受。而随着 Google Maps
中的深色主题在全世界 Android
用户间的快速传播，您可以给自己的眼睛一个它所急需的休息时间，也能同时节省电池寿命了。只需转到“设置”，点击“主题”，然后点击“始终处于黑暗主题”，即可在导航，探索地图或完成地图处理时降低灯光。不想继续用黑暗主题？只需点击“
Always in Light Theme（常亮主题）”即可将其切换回去。</p>
<h2 id="使用-android-auto-获得更好的驾驶体验">6. 使用 Android Auto
获得更好的驾驶体验</h2>
<p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/35ddb6dfc1994531b4852272ebe19d44~tplv-k3u1fbpfcp-zoom-1.image" alt="借助 Android Auto，您可以在显示屏上欣赏声控游戏，从而保持处于娱乐中">
<small>借助 Android
Auto，您可以在显示屏上欣赏声控游戏，从而保持处于娱乐中</small></p>
<p>Android Auto
的新功能可帮助您享受更多驱动器乐趣。借助自定义壁纸，您现在可以从各种以汽车为背景的背景中进行选择，以个性化您的汽车展示。对于更长的驾驶时间，您和您的乘客可以通过语音激活游戏（例如
trivia 和“ Jeopardy！” 游戏）来保持娱乐。你只需说“嘿
Google，玩游戏”即可上手。</p>
<p>我们还在启动屏幕上启动了快捷方式。这些功能使您可以方便地访问您的联系人，甚至可以像使用手机一样，只需轻按汽车显示屏上的图标，即可使用
Assistant
来完成诸如检查天气或远程调节恒温器之类的任务。对于具有更大屏幕的汽车，您可以使用具有实时查看
Google Maps
和媒体控件的分屏功能来做更多的事情。而且，如果您有家人和朋友一起兜风，您现在可以设置一个隐私屏幕，以控制何时在汽车显示屏上显示
Android Auto。</p>
<p>这些 Android Auto 功能将在未来几天内在运行 Android 6.0
或更高版本的手机上以及连接到的<a href="https://www.android.com/auto/compatibility/">兼容的汽车</a>上提供。</p>]]></content>
      <categories>
        <category>Computer Science</category>
        <category>Android</category>
      </categories>
      <tags>
        <tag>Computer Science</tag>
        <tag>Android</tag>
        <tag>Kotlin</tag>
      </tags>
  </entry>
  <entry>
    <title>Chrome 90 Beta 版本更新，支持 WebRTC AV1 编码器，新的 Origin Trials，还有更多等着你来～</title>
    <url>/2021/03/25/computer%20science/frontend/chrome-90-beta-av1-encoder-for-webrtc/</url>
    <content><![CDATA[<blockquote>
<ul>
<li>原文地址：<a href="https://blog.chromium.org/2021/03/chrome-90-beta-av1-encoder-for-webrtc.html">Chrome
90 Beta: AV1 Encoder for WebRTC, New Origin Trials, and More</a></li>
<li>原文作者：<a href="https://blog.chromium.org/">Chromium Dev</a></li>
<li>译者：<a href="https://github.com/PassionPenguin">霜羽
Hoarfroster</a></li>
<li>校对者：</li>
</ul>
</blockquote>
<p>除非另有说明，否则以下描述的更改适用于适用于 Android、Chrome
OS、Linux、macOS 和 Windows 的 Chrome beta
通道版本的更新。你可以通过文中的链接或访问 <a href="https://www.chromestatus.com/features#milestone%3D90">ChromeStatus.com</a>
上的列表更详细地了解此处列出的功能。 Chrome 90 已于 2021 年 3 月 11
日发布 Beta 版。</p>
<h1 id="av1-编码器">AV1 编码器</h1>
<p>Chrome 桌面版目前内置了 <a href="https://www.chromestatus.com/feature/6206321818861568">AV1
编码器</a>。该编码器经过我们的专门优化，可与 WebRTC
集成，用于视频会议。AV1 编码的优点包括：</p>
<ul>
<li>比其他类型的视频编码有更好的压缩效率，能够减少带宽消耗并提高视觉质量</li>
<li>能够在带宽非常低的网络上为用户启用视频（以 30kbps
甚至更低的速度提供视频传送）</li>
<li>与 VP9 等其他编解码器相比，屏幕共享效率得到了显着提高。</li>
</ul>
<p>这是对 WebRTC 的一个重要补充，它最近也成为了 <a href="https://web.dev/webrtc-standard-announcement/">W3C 和 IETF
官方标准</a>。</p>
<h1 id="origin-trails-原始测试">Origin Trails 原始测试</h1>
<p>此版本的 Chrome
引入了所谓的“原始测试”，使我们可以在浏览器中尝试新功能，并向 Web
标准社区提供有关可用性，实用性和有效性的反馈。要注册 Chrome
当前支持的任何原始测试（包括以下所述），请访问 <a href="https://developer.chrome.com/origintrials/#/trials/active">Chrome
原始测试控制台</a>。要了解有关 Chrome 中的原始测试的更多信息，请访问 <a href="https://web.dev/origin-trials/">Web
开发人员的原始测试指南</a>。Microsoft Edge 与 Chrome
分开运行其自己的原始测试，若要了解更多信息，请参见 <a href="https://developer.microsoft.com/en-us/microsoft-edge/origin-trials/">Microsoft
Edge Origin Trials 开发人员控制台</a>。</p>
<h2 id="新的原始测试内容">新的原始测试内容</h2>
<h3 id="getcurrentbrowsingcontextmedia"><code>getCurrentBrowsingContextMedia()</code></h3>
<p><a href="https://developer.chrome.com/origintrials/#/view_trial/3654671097611157505"><code>mediaDevices.getCurrentBrowsingContextMedia()</code>
方法</a>允许我们使用当前选项卡的视频（和可能的音频）捕获
<code>MediaStream</code>，类似于
<code>getDisplayMedia()</code>。但是与<code>getDisplayMedia()</code>
不同，调用此新方法将为用户提供一个简单的接受拒绝对话框。如果用户接受，则会捕获当前选项卡，二在所有其他的表现中
<code>getCurrentBrowsingContextMedia()</code> 与
<code>getDisplayMedia()</code> 完全相同。该原始测试预计将在 Chrome 92
中启动。</p>
<h3 id="mediastreamtrack-可插入流也称为-breakout-box-分线盒"><code>MediaStreamTrack</code>
可插入流（也称为 Breakout Box “分线盒”）</h3>
<p>这是用于<a href="https://www.chromestatus.com/feature/5499415634640896">操纵
<code>MediaStreamTracks</code> 承载的原始媒体</a>的
API，可操纵例如相机，麦克风，屏幕截图或编解码器的解码器部分，并且会输出编解码器的解码器部分。它使用
<code>WebCodecs</code> 接口表示原始媒体帧，并使用流公开它们，类似于
WebRTC 可插入流 API 公开来自 <code>RTCPeerConnections</code>
的编码数据的方式，旨在支持以下用例：</p>
<ul>
<li><a href="https://www.w3.org/TR/webrtc-nv-use-cases/#funnyhats*">Funny
Hats</a>：指在编码之前和解码之后对媒体的处理，以提供诸如去除背景等效果，有趣的帽子，声音效果。</li>
<li><a href="https://www.w3.org/TR/webrtc-nv-use-cases/#machinelearning*">机器学习</a>：指的是诸如实时对象识别/注释之类的应用程序。</li>
</ul>
<p>该原始测试预计将在 Chrome 92 中启动。</p>
<h3 id="webassembly-异常处理">WebAssembly 异常处理</h3>
<p>WebAssembly <a href="https://developer.chrome.com/origintrials/#/view_trial/2393663201947418625">现在提供了异常处理功能</a>。异常处理允许代码在引发异常时中断控制流。异常可以是
WebAssembly
模块已知的任何异常，也可以是由调用的导入函数引发的未知异常。预计该原始测试将在
Chrome 94 中启动。</p>
<h2 id="启动的原始测试">启动的原始测试</h2>
<p>Chrome 原始测试部分的以下部分已经启动：</p>
<h3 id="webxr-ar-照明估算">WebXR AR 照明估算</h3>
<p><a href="https://www.chromestatus.com/feature/5704707957850112">照明估算</a>允许站点在
WebXR
会话中查询环境照明条件的估算。这样既暴露了代表环境照明的球形谐波，又暴露了代表“反射”的立方体贴图纹理。添加“照明估计”可以使您的模型更自然，并使其更适合用户的环境。</p>
<h1 id="此版本中的其他功能更新">此版本中的其他功能更新</h1>
<h2 id="css">CSS</h2>
<h3 id="aspect-ratio"><code>aspect-ratio</code></h3>
<p>如果在任何元素上仅指定宽度或高度中的一个，则 <a href="https://www.chromestatus.com/feature/5682100885782528"><code>aspect-ratio</code>
属性</a>会自动计算其他尺寸。在用于动画时，此属性会默认设置为不可插值形式（这意味着它会捕捉到目标值），用于提供一个从一个长宽比到另一个长宽比的平滑插值。</p>
<h3 id="自定义状态的伪类">自定义状态的伪类</h3>
<p>我们现在将自定义元素的状态通过 CSS State 伪类<a href="https://www.chromestatus.com/feature/6537562418053120">公开了出来</a>。内置元素的状态会根据用户的交互作用和其他因素随时间变化，并借助伪类向开发者们公开了出来。例如，某些表单控件具有
<code>invalid</code> 状态，而该状态会通过 <code>:invalid</code>
伪类公开出来。由于自定义元素也具有状态，因此以类似于内置元素的方式公开其状态是有意义的。</p>
<h3 id="实现-appearance-和--webkit-appearance-的-auto-值">实现
<code>appearance</code> 和 <code>-webkit-appearance</code> 的
<code>auto</code> 值</h3>
<p>以下表单控件的 CSS 属性 <code>appearance</code> 和
<code>-webkit-appearance</code> 的默认值更改为 <code>auto</code>。</p>
<ul>
<li><code>&lt;input type=color&gt;</code> and
<code>&lt;select&gt;</code></li>
<li>仅限安卓：<code>&lt;input type=date&gt;</code>、<code>&lt;input type=datetime-local&gt;</code>、<code>&lt;input type=month&gt;</code>、<code>&lt;input type=time&gt;</code>
以及 <code>&lt;input type=week&gt;</code></li>
</ul>
<p>请注意，这些控件的默认呈现没有被更改。</p>
<h3 id="overflow-clip-属性"><code>overflow: clip</code> 属性</h3>
<p><code>overflow</code> 的 <a href="https://www.chromestatus.com/feature/5638444178997248"><code>clip</code>
值</a>会让盒容器的内容被裁剪到盒的溢出部分的边缘，并且不会为这个元素再提供滚动接口，并且内容不能在被用户或用编程方式进行滚动。此外，该框不被视为滚动容器，并且不会启动新的格式设置上下文。此值的性能比
<code>overflow：hidden</code> 更好。</p>
<h3 id="overflow-clip-margin-属性"><code>overflow-clip-margin</code>
属性</h3>
<p><a href="https://www.chromestatus.com/feature/5638444178997248"><code>overflow-clip-margin</code>
属性</a>允许指定在裁剪之前允许元素超出边界的距离。它还允许开发人员扩展剪辑边界。这对于例如墨水溢出这类的情况特别有用。</p>
<h2 id="permissions-policy-标头"><code>Permissions-Policy</code>
标头</h2>
<p><code>Permissions-Policy</code> HTTP 标头<a href="https://www.chromestatus.com/feature/5745992911552512">替换了现有的
<code>Feature-Policy</code>
标头”</a>，用于控制权限和提供强大的功能。这个标头允许网站更严格地限制授予要素来源的访问权限。</p>
<p>Chrome 74 中引入的 <a href="https://developers.google.com/web/updates/2018/06/feature-policy#js"><code>Feature Policy</code>
API</a>，最近已重命名为 <code>Permissions Policy</code>，HTTP
标头也被重命名了。同时，社区已基于 <a href="https://httpwg.org/http-extensions/draft-ietf-httpbis-header-structure.html">HTTP
的结构化字段值</a>为之确定了一种新语法。</p>
<h2 id="通过-cross-origin-read-blocking-保护-applicationx-protobuffer">通过
<code>Cross-Origin-Read-Blocking</code> 保护
<code>application/x-protobuffer</code></h2>
<p>通过将 <code>application/x-protobuffer</code> 添加到
<code>Cross-Origin-Read-Blocking</code> 所使用的永不嗅探的 MIME
类型列表中，我们保护它免受推测性执行攻击。<code>application / x-protobuf</code>
已经被保护为永不监听的 MIME 类型。<code>application/x-protobuffer</code>
是另一种常用的 MIME 类型，被 protobuf 库定义为
<code>ALT_CONTENT_TYPE</code>。</p>
<blockquote>
<p>https://www.chromestatus.com/feature/5670287242690560</p>
</blockquote>
<h2 id="在文件系统访问-api-中寻找文件末尾">在文件系统访问 API
中寻找文件末尾</h2>
<p>当数据传递到将扩展到文件末尾的
<code>FileSystemWritableFileStream.write()</code> 时，<a href="https://www.chromestatus.com/feature/6556060494069760">现在会被写入
<code>0x00</code>（<code>NUL</code>）扩展文件</a>。借此我们可以创建稀疏文件，并在接收到乱序的待写数据时大大简化了将内容保存到文件的过程。如果没有此功能，那么会接收到混乱的文件内容（例如
BitTorrent
下载）的应用程序将不得不提前或在编写过程中需要时手动调整文件大小。</p>
<h2 id="staticrange-构造函数">StaticRange 构造函数</h2>
<p>当前，<a href="https://developer.mozilla.org/en-US/docs/Web/API/Range"><code>Range</code></a>
是 Web 开发者唯一可用的可构造范围类型。但是，<code>Range</code>
对象是可变的，让它们的维护变得困难。对于每个 DOM 树的更改，所有受影响的
<code>Range</code> 对象都需要更新。 <a href="https://www.chromestatus.com/feature/5676695065460736">新的
<code>StaticRange</code>
对象</a>则不会这样。它代表的轻量级范围类型，维护难度比
<code>Range</code> 轻松不少。<code>StaticRange</code> 的可构造使 Web
开发者可以将它们用于不需要在每次 DOM 树更改时都进行更新的范围。</p>
<h2 id="支持在-picture-的-source-元素上指定宽度和高度">支持在
<code>&lt;picture&gt;</code> 的 <code>&lt;source&gt;</code>
元素上指定宽度和高度</h2>
<p><code>&lt;picture&gt;</code> 元素内的 <code>&lt;source&gt;</code>
元素<a href="https://www.chromestatus.com/feature/5737185317748736">现在支持使用
<code>width</code> 和 <code>height</code> 属性定义宽高</a>，让 Chrome
浏览器可以为 <code>&lt;picture&gt;</code> 元素计算宽高比。这与
<code>&lt;img&gt;</code>、<code>&lt;canvas&gt;</code> 和
<code>&lt;video&gt;</code> 元素的类似行为相同。</p>
<h2 id="webaudio-的-oscillatoroptions.periodicwave-不可为空">WebAudio 的
<code>OscillatorOptions.periodicWave</code> 不可为空</h2>
<p>创建新的 <code>OscillatorNode</code> 对象时，<a href="https://www.chromestatus.com/feature/5086267630944256">我们不可以再将
<code>periodicWave</code> 设置为 <code>null</code></a>。该值在传递给
<code>OscillatorNode()</code> 构造函数的 <code>options</code>
对象上设置，而现在 WebAudio 规范不允许将此值设置为
<code>null</code>。Chrome 与 Firefox 同时践行了这个规则。</p>
<h1 id="javascript-的更新">JavaScript 的更新</h1>
<p>此版本的 Chrome 内置了 V8 JavaScript 引擎的 9.0
版。特别包含了以下列出的更改。我们还可以在 V8 发行说明中找到完整的<a href="https://v8.dev/blog">最新功能列表</a>：</p>
<h2 id="数组字符串和-typedarrays-的相对索引方法">数组、字符串和
TypedArrays 的相对索引方法</h2>
<p><code>Array</code>、<code>String</code> 和 <code>TypedArray</code> <a href="https://www.chromestatus.com/feature/6123640410079232">现在支持
<code>at()</code>
方法</a>，该方法支持带负数的相对索引。例如，下面的代码返回给定数组中的最后一项。</p>
<div class="sourceCode" id="cb1"><pre class="sourceCode js"><code class="sourceCode javascript"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a><span class="kw">let</span> arr <span class="op">=</span> [<span class="dv">1</span><span class="op">,</span> <span class="dv">2</span><span class="op">,</span> <span class="dv">3</span><span class="op">,</span> <span class="dv">4</span>]<span class="op">;</span></span>
<span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a>arr<span class="op">.</span><span class="fu">at</span>(<span class="op">-</span><span class="dv">1</span>)<span class="op">;</span></span></code></pre></div>
<h1 id="弃用和移除">弃用和移除</h1>
<p>此版本的 Chrome 引入了以下弃用和删除项。访问 <a href="https://www.chromestatus.com">ChromeStatus.com</a>，以获取<a href="https://www.chromestatus.com/features#browsers.chrome.status%3A%22Deprecated%22">当前弃用</a>和<a href="https://www.chromestatus.com/features#browsers.chrome.status:%22Removed%22">以前的移除项</a>。</p>
<h2 id="删除内容安全策略指令插件类型">删除内容安全策略指令“插件类型”</h2>
<p><a href="https://www.chromestatus.com/feature/5742693948850176"><code>plugin-types</code>
指令允许开发人员去限制</a>可以通过 <code>&lt;embed&gt;</code> 或
<code>&lt;object&gt;</code> 的 HTML
元素加载的插件的类型。这使开发人员可以在其页面中阻止 Flash
的加载。不过目前 Adobe 以及 Chrome 都已停止对 Flash
的支持，实际上我们不再需要此策略指令。</p>
<h2 id="删除-webrtc-rtp-数据通道">删除 WebRTC RTP 数据通道</h2>
<p>Chrome 浏览器已<a href="https://www.chromestatus.com/feature/6485681910054912">删除了对非标准
RTP 数据通道的支持</a>。用户应改用基于标准 SCTP 的数据通道。</p>
<h2 id="为-navigator.plugins-和-navigator.mimetypes-返回-null">为
<code>navigator.plugins</code> 和 <code>navigator.mimeTypes</code> 返回
<code>null</code></h2>
<p>Chrome 浏览器中 <a href="https://www.chromestatus.com/feature/5741884322349056"><code>navigator.plugins</code>
和 <code>navigator.mimeTypes</code> 的调用会返回
<code>null</code></a>。随着 Flash
的移除，我们不再需要为这些属性返回任何内容。</p>]]></content>
      <categories>
        <category>Computer Science</category>
        <category>Frontend</category>
        <category>Browser</category>
      </categories>
      <tags>
        <tag>Computer Science</tag>
        <tag>Frontend</tag>
        <tag>Browser</tag>
      </tags>
  </entry>
  <entry>
    <title>Google 的开源混沌测试工具 OSS-Fuzz 现在支持 Java 应用了</title>
    <url>/2021/03/23/computer%20science/backend/google-oss-fuzz-extends-fuzzing-to-java-apps/</url>
    <content><![CDATA[<blockquote>
<ul>
<li>原文地址：<a href="https://www.infoworld.com/article/3611510/googles-oss-fuzz-extends-fuzzing-to-java-apps.html#tk.rss_devops">Google’s
OSS-Fuzz extends fuzzing to Java apps</a></li>
<li>原文作者：<a href="https://www.infoworld.com/author/Paul-Krill/">Paul Krill</a></li>
<li>译者：<a href="https://github.com/PassionPenguin">霜羽
Hoarfroster</a></li>
<li>校对者：<a href="https://github.com/huifrank">huifrank</a>，<a href="https://github.com/1autodidact">1autodidact</a></li>
</ul>
</blockquote>
<p>Google 的开源混沌测试服务 OSS-Fuzz 现在支持 Java 以及 JVM-based
的应用程序了！这项功能于 3 月 10 日公布。</p>
<p><a href="https://github.com/google/oss-fuzz">OSS-Fuzz</a>
为开源软件提供持续的混沌测试。混沌测试作为一种将半随机和非法的输入流发送到程序，用于发现软件中的编程错误和安全漏洞的技术。用内存安全语言（基于
JVM
的语言）编写的混沌代码能够帮助我们发现导致程序崩溃或行为异常的错误。</p>
<p>Google 通过将 OSS-Fuzz 与 Code Intelligence 的 <a href="https://blog.code-intelligence.com/engineering-jazzer">Jazzer</a>
混沌器集成在一起，为 Java 和 JVM 开启了混沌处理功能。Jazzer
让我们可以通过 LLVM 项目的 libFuzzer
引擎（运行于进程内，覆盖引导的的混沌引擎），类似于对 C / C++
的混沌处理，对基于 JVM 语言编写的代码进行混沌处理。Jazzer 支持的语言包括
Java、Clojure、Kotlin 和 Scala。代码覆盖率的反馈是基于 JVM 字节码提供给
libFuzzer 的，而 libFuzzer 功能包括：</p>
<ul>
<li><a href="https://github.com/google/fuzzing/blob/master/docs/split-inputs.md#fuzzed-data-provider">FuzzedDataProvider</a>
用于混沌测试中处理不接收字节数组的代码。</li>
<li>基于8位边缘计数器的代码覆盖率评估。</li>
<li>最大限度地减少崩溃的输入。</li>
<li><a href="https://llvm.org/docs/LibFuzzer.html#value-profile">Value
Profiles</a>.</li>
</ul>
<p><a href="https://google.github.io/oss-fuzz/getting-started/new-project-guide/jvm-lang/">Google
提供了</a>向基于 JVM 语言编写的开源项目加入 OSS-Fuzz 的文档。Jazzer
的开发计划要求 Jazzer 最终支持所有的 libFuzzer 功能。Jazzer 还可以通过
Java
原生接口执行本地代码时提供覆盖率反馈。这样可以发现内存不安全的本地代码中的内存损坏漏洞。OSS-Fuzz
还同时支持了 Go、Python，C/C + 和 Rust 等语言。</p>]]></content>
      <categories>
        <category>Computer Science</category>
        <category>Backend</category>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Computer Science</tag>
        <tag>Backend</tag>
        <tag>Java</tag>
        <tag>Kotlin</tag>
      </tags>
  </entry>
  <entry>
    <title>Dropbox 公布了 Atlas —— 一个托管服务编排平台</title>
    <url>/2021/03/22/computer%20science/cloud/dropbox-reveals-Atlas/</url>
    <content><![CDATA[<blockquote>
<ul>
<li>原文地址：<a href="https://www.infoq.com/news/2021/03/dropbox-atlas/">Dropbox Reveals
Atlas - a Managed Service Orchestration Platform</a></li>
<li>原文作者：<a href="https://www.infoq.com/profile/Eran-Stiller/">Eran
Stiller</a></li>
<li>译者：<a href="https://github.com/PassionPenguin">霜羽
Hoarfroster</a></li>
<li>校对者：<a href="https://github.com/5Reasons">5Reasons</a>、<a href="https://github.com/kamly">kamly</a>、<a href="https://github.com/husiyu">husiyu</a></li>
</ul>
</blockquote>
<p>在最近的博客文章中，<a href="https://dropbox.tech/infrastructure/atlas--our-journey-from-a-python-monolith-to-a-managed-platform">Dropbox
公布了 Atlas</a>，该平台的目标是为用户提供<a href="https://en.wikipedia.org/wiki/Service-oriented_architecture">面向服务架构</a>的各种便利，同时让拥有一个服务的维护成本降至最低。</p>
<p>Atlas
的目标是支持小型的独立功能，为产品团队节省管理各种服务的开销，包括容量规划、警报设置等。Atlas
还借助后台自动调配的服务，为用户提供了与无服务器系统（如 <a href="https://aws.amazon.com/fargate/">AWS
Fargate</a>），同时由后台自动配置的服务提供支持。根据作者 Naphat
Sanguansin 和 Utsav Shah
的说法，他们评估了使用现成的解决方案来运行该平台。但是，为了降低迁移风险并确保较低的工程成本，他们决定继续在与
Dropbox 其余部分相同的“部署-编排”平台上，托管这些服务。</p>
<p>构建 Atlas 项目的原因是他们想要要替换 Dropbox 的 Python 中心库 <a href="https://en.wikipedia.org/wiki/Monolith">monolith</a>
Metaserver。Altas
的开发会是一个历时多年的历程，至今仍在进行之中。目前，Atlas
正在为它打算取代的 monolith 提供 25％
以上的服务。作者给出了有关迁移过程的关键结论：</p>
<blockquote>
<p>多年努力中我们发现最重要的一点是，在项目生命周期的早期，编写经过深思熟虑的代码是至关重要的。否则，技术负担和代码复杂性会很快一起来作怪。导入周期的取消和
Metaserver（……）的分解可能是该项目在战略上最有效的部分，因为它可以防止新的代码导致问题，也同时能够简化我们的代码。</p>
</blockquote>
<p>他们指出，出于代码库的大小和复杂性的问题，以前许多改进 Metaserver
的尝试都没有成功。这次，他们考虑<a href="https://medium.com/@jamesacowling/stepping-stones-not-milestones-e6be0073563f">将
Altas 作一个垫脚石而不再是里程碑</a>，并为 Atlas
设计了执行计划。这个想法是不管项目的下一部分由于任何原因失败，每个逐步推进的步骤都已经有了它的价值。此策略的关键示例涉及对一体化的代码架构进行改进，无论有没有
Atlas 实施，这个改进都有其价值。此外，开发团队会将为 Atlas
开发的许多增强功能回移植到 Metaserver 中，以进一步提高项目价值。</p>
<p><img src="https://res.infoq.com/news/2021/03/dropbox-atlas/en/resources/1Dropbox-atlas-before-after-1615307468409.png" alt="https://res.infoq.com/news/2021/03/dropbox-atlas/en/resources/1Dropbox-atlas-before-after-1615307468409.png">
<small>以前与以后，图源 <a href="https://dropbox.tech/infrastructure/atlas--our-journey-from-a-python-monolith-to-a-managed-platform">Dropbox</a>
</small></p>
<p>Atlas 的设计涉及一些围绕组件化、编排和操作性的关键工作。Atlas 引入了
Atlasservlets（atlas servlets）作为 HTTP
路由的逻辑、最小化分组，以改善组件化。他们说：“在为 Atlas
做准备时，我们与产品团队合作，将 Atlasservlet 分配给 Metaserver
中的每个路由，从而在 5000 多个路由中构建了 200 多个 Atlasservlet。” 每个
Servlet 都分配有一个所有者 —— 拥有唯一的管理它的权限。另外，要分解
Metaserver 代码库，他们必须打破了大多数的 Python
导入周期。这个过程花了几年时间才能实现。</p>
<p>为了改进编排，Atlas 中的每个 Servlet
都是其自己的集群。默认情况下该策略提供隔离能力，因为行为异常的路由应该只会影响同一
Atlasservlet 中的其他路由。同样，此决定允许独立去推送代码。此外，Dropbox
决定在 <a href="https://grpc.io/">gRPC</a> 上进行标准化。为了继续处理
HTTP 流量，他们使用了 <a href="https://www.envoyproxy.io/docs/envoy/latest/configuration/http/http_filters/grpc_json_transcoder_filter">GRPC
JSON 转码器</a>中提供了的 <a href="https://www.envoyproxy.io/">Envoy</a>
—— 他们在 Servlet 的前面作为代理服务器和负载平衡器使用的东西。</p>
<figure>
<img src="https://res.infoq.com/news/2021/03/dropbox-atlas/en/resources/1Dropbox-atlas-http-transcoding-1615307468739.png" alt="HTTP 转码器">
<figcaption aria-hidden="true">HTTP 转码器</figcaption>
</figure>
<p><small>HTTP 转码器，图源 <a href="https://dropbox.tech/infrastructure/atlas--our-journey-from-a-python-monolith-to-a-managed-platform">Dropbox</a>
</small></p>
<p>根据他们的说法，在可操作性问题上，“Atlas
的秘密秘诀是可管理的经验”。这项工作的主要依靠是自动化运行的 Canary
分析和自动拓展功能。前者能让每一次代码修改和推送在被运用到生产环境前得到系统的自动检查，后者则消除了对容量规划的大部分需求。</p>
<figure>
<img src="https://res.infoq.com/news/2021/03/dropbox-atlas/en/resources/1Dropbox-atlas-canary-1615307469053.png" alt="Canary 版本分析">
<figcaption aria-hidden="true">Canary 版本分析</figcaption>
</figure>
<p><small>Canary 版本分析，图源 <a href="https://dropbox.tech/infrastructure/atlas--our-journey-from-a-python-monolith-to-a-managed-platform">Dropbox</a>
</small></p>]]></content>
      <categories>
        <category>Computer Science</category>
        <category>Cloud</category>
      </categories>
      <tags>
        <tag>Computer Science</tag>
        <tag>Cloud</tag>
      </tags>
  </entry>
  <entry>
    <title>如何在第 4 阶段之前体验一个提案</title>
    <url>/2021/03/19/computer%20science/frontend/How-to-experiment-with-a-proposal-before-Stage-4/</url>
    <content><![CDATA[<blockquote>
<ul>
<li>原文地址：<a href="https://github.com/tc39/how-we-work/blob/master/experiment.md">How
to experiment with a proposal before Stage 4</a></li>
<li>原文作者：<a href="https://github.com/tc39/how-we-work">Ecma
TC39</a></li>
<li>译者：<a href="https://github.com/PassionPenguin">霜羽
Hoarfroster</a></li>
<li>校对者：<a href="https://github.com/finalwhy">finalwhy</a>，<a href="https://github.com/zaviertang">zaviertang</a></li>
</ul>
</blockquote>
<p>对于敢于冒险并想就提案向 TC39 给予反馈的 JavaScript
程序员而言，可以通过以下几种方式提前尝试新提案：</p>
<ul>
<li>对于不需要通过 TC39
语言设计更改进行维护的代码，通过使用运行时或构建时标志将其打开来试验该功能，例如：
<ul>
<li>在 Babel 中，启用你选择的 Babel 预设中的功能（请参阅 <a href="https://github.com/babel/proposals/issues">babel/proposals</a>
了解功能状态）。</li>
<li>使用高级版本的 Web 浏览器，例如 <strong>Edge Insider
Edition</strong>、<strong>Safari Tech Preview</strong>、<strong>Firefox
Nightly</strong> 或 <strong>Chrome
Canary</strong>，以获得某些新语言功能。你可以选择去查看他们的发行说明以了解包含的内容。</li>
<li>使用 TypeScript —— TypeScript 实现了多个 Stage 3 TC39 的提案。</li>
<li>在 V8 中，通过传入一个以 <code>--harmony</code>
开头的标志来开启对应的实验性功能，你可以在 <a href="https://github.com/v8/v8/blob/master/src/flag-definitions.h">flag-definitions.h</a>
中找到这些标志。请注意，某些标记的实现可能不稳定或不完整，通常不应在生产环境中使用。
<ul>
<li>在基于 V8 的 Node.js 中，可以像这样直接传递标志；</li>
<li>在 Chrome 中，在 <code>about:flags</code> 中启用“实验性 JavaScript
功能”，或使用命令行参数
<code>--js-flags=--harmony-&lt;flagname&gt;</code>。</li>
</ul></li>
</ul></li>
<li>如果缺少实现，你可以自己动手 <a href="https://github.com/tc39/how-we-work/blob/master/implement.md">添加一个</a>！</li>
<li>如果你想给提案提出一些反馈，可以在 GitHub 仓库中创建一个
issue。</li>
</ul>
<p>警告：第 3 阶段及以下阶段的提案可能会发生重大变化或删除。</p>]]></content>
      <categories>
        <category>Computer Science</category>
        <category>Frontend</category>
        <category>tc39</category>
      </categories>
      <tags>
        <tag>Computer Science</tag>
        <tag>JavaScript</tag>
        <tag>Frontend</tag>
        <tag>tc39</tag>
      </tags>
  </entry>
  <entry>
    <title>如何在 TC39 提起一项提案？</title>
    <url>/2021/03/19/computer%20science/frontend/Championing-a-proposal-at-TC39/</url>
    <content><![CDATA[<blockquote>
<ul>
<li>原文地址：<a href="https://github.com/tc39/how-we-work/blob/master/champion.md">Championing
a proposal at TC39</a></li>
<li>原文作者：<a href="https://github.com/tc39/how-we-work">ECMA
TC39</a></li>
<li>译者：<a href="https://github.com/PassionPenguin">霜羽
Hoarfroster</a></li>
<li>校对者：<a href="https://github.com/Kimhooo">Kimhooo</a>，<a href="https://github.com/KimYangOfCat">KimYangOfCat</a></li>
</ul>
</blockquote>
<p>你想为 JavaScript 提出一个新功能吗？不过提出提案需要一个 TC39
代表作为提案发起人，来推动提案通过各个<a href="https://tc39.es/process-document/">阶段流程</a>。本文将为你描述如何做到这一点。</p>
<p>提出一项提案是一项在委员会以外改进维护提案中的平行工作，同样的是平行工作的还有向委员会在关于收集更多的想法、反馈，并最终通过阶段推进提案等方面的演示。委员会以外的工作很少会有需要暂缓委员会内部的进展以帮助委员会以外的工作的推进，但委员会会对其进行阶段的提升，而这一进步会是对里程碑和支持的良好致谢。想要将提案添加到
JavaScript 规范的功能之中，需要该提案步入第四阶段。</p>
<h2 id="委员会之外的工作">委员会之外的工作</h2>
<p>支持提案工作的大部分都可以在 TC39
之外完成，而不会影响委员会的批准。推进这项工作可以为晋升 TC39
中的阶段提供更多的依据，而这项工作的一些组成部分是：</p>
<ul>
<li><strong><a href="https://github.com/tc39/wwe-work/blob/master/explainer.md">解释内容</a></strong>
：在您的提案的仓库中存放一份写好的 README
文件，在更高层面解释该提案的目的和当前状况。</li>
<li><strong><a href="https://github.com/tc39/how-we-work/issues/49">文档</a></strong>
：为 JavaScript 开发者编写的解释，以方便开发者使用该提案。</li>
<li><strong><a href="https://github.com/tc39/how-we-work/blob/master/implement.md">实现方式</a></strong>
：允许程序员对提案进行试验，无论借助是 Transpilers 或是
polyfills，还是需要开启一个 Flag 或使用一个原生实现的分支。</li>
<li><strong><a href="https://github.com/tc39/how-we-work/issues/6">测试</a></strong>
：检查实现的正确性的测试 ——
这些最初可以沿着实施方式检查，但最有用会最终迁移到 test262。</li>
<li><strong>收集反馈</strong>：了解人们通过与他们交谈的人们对该提案的看法，看看他们对使用这个功能的体验的感受。这可以有助于从委员会内外获得
JavaScript 开发者、实施者、学者、教育工作者、社区领导者等等的反馈。</li>
</ul>
<h3 id="管理-github-仓库">管理 GitHub 仓库</h3>
<p>一旦提案向委员会提交，每个阶段提案都应有一个属于 TC39 组织中的 GitHub
仓库。此仓库需要包括说明程序、规范文本草稿文本，而有时还会需要草稿实施或示例程序的资源。仓库的问题跟踪人员可用于讨论委员会和社区的设计问题。这些提案仓库需要根据
<a href="https://tc39.es/code-of-conde/">TC39
的行为准则</a>进行管理。</p>
<h4 id="阶段流程跟踪问题">阶段流程跟踪问题</h4>
<p>要通过各阶段流程，GitHub
仓库中的跟踪问题可能很有用。以下是您可以用于此类跟踪问题的模板：</p>
<h2 id="第四阶段">第四阶段</h2>
<ul class="task-list">
<li><input type="checkbox" disabled="">
委员会批准</li>
<li><input type="checkbox" disabled="">
在两个浏览器中实现</li>
<li><input type="checkbox" disabled="">
显着的现场体验</li>
<li><input type="checkbox" disabled="">
合并 Test262 测试</li>
<li><input type="checkbox" disabled="">
编写 Test262 测试</li>
<li><input type="checkbox" disabled="">
准备 ECMA262 PR</li>
<li><input type="checkbox" disabled="">
编辑批准的 ECMA262 Pr ## 第三阶段</li>
<li><input type="checkbox" disabled="">
委员会批准</li>
<li><input type="checkbox" disabled="">
规范编辑器签名</li>
<li><input type="checkbox" disabled="">
规范审稿人签名</li>
<li><input type="checkbox" disabled="">
接收开发者/实现者反馈 ## 第二阶段</li>
<li><input type="checkbox" disabled="">
委员会批准</li>
<li><input type="checkbox" disabled="">
编写的规范文本</li>
<li><input type="checkbox" disabled="">
选择规范审稿人 ## 第一阶段</li>
<li><input type="checkbox" disabled="">
引入 TC39</li>
<li><input type="checkbox" disabled="">
确定提议者</li>
<li><input type="checkbox" disabled="">
初始解释内容</li>
</ul>
<h2 id="在委员会阶段的晋升">在委员会阶段的晋升</h2>
<p>这部分建立在<a href="https://tc39.es/process-document/">阶段过程文档</a>的基础上，提出了一些可能会对各自阶段有利的做法。</p>
<p>阶段的晋升出现在 TC39
会议上，委员会将基于向委员会提交的提案，在全体投票决定后将决定该提案应该向哪一个具体的阶段推进。有关更多详细信息，请参阅<a href="https://github.com/tc39/how-we-work/blob/master/presenting.md">演示建议</a>。</p>
<h3 id="第一阶段">第一阶段</h3>
<p>流程文件的入场标准： &gt; - 确定将助力推进提案的“发起人” &gt; -
概述问题需要，并提出解决方案的轮廓大纲 &gt; - 使用的说明性示例 &gt; -
高级 API &gt; - 讨论关键算法、抽象和语义 &gt; -
识别潜在的“交叉”关注和实施挑战/复杂性</p>
<p>验收意味着： &gt;
委员会预计将有时间审查问题空间、解决方案和交叉削减问题</p>
<p>进入第一阶段 -
<strong>确定委员会中的发起人（或提议团体）</strong>。不幸的是，TC39
没有为非委员会成员找到一个合适的委员会导师/发起人的方法，但是现有的论坛包括
<a href="https://es.discourse.group">TC39 讨论论坛</a>和 <a href="https://esdiscuss.org">es-discuss
邮件列表</a>可能会对此有所帮助；另一个是 Freenode 上的 IRC 频道
<code>#tc39</code>（<a href="https://freenode.net/kb/answer/chat">详细信息</a>）。当然，你也可以在
Twitter 上找到许多的 TC39 代表。 -
<strong>写一个解释文档</strong>。请参阅 <a href="https://github.com/tc39/how-we-work/blob/master/explainer.md">explainer.md</a>，以获取有关如何编写入门文档以满足第一阶段其余要求的建议。
-
<strong>准备演示文稿</strong>，以使委员会考虑他们在该设计领域中想要做的事情，如果您有特定的想法，请向该方向发展。有关演示文稿的建议，请参见<a href="https://github.com/tc39/how-we-work/blob/master/presenting.md">presenting.md</a>。</p>
<p>第一阶段更多地表明委员会正在考虑进入此设计领域，而不是就将 JavaScript
朝特定方向发展达成任何共识。</p>
<p>在第一阶段之后（甚至之前），执行以下一些操作可能会很有用： -
<strong>与 JavaScript
开发者讨论</strong>，以了解他们在该领域面临的种种问题，以及在语言级别上有哪些解决方案可能对他们有帮助。
- 如果在某些方面存在分歧，请<strong>在 GitHub
问题中进行讨论</strong>，并考虑对多种解决方案进行详细分析。 -
<strong>编写有关早期建议的解决方案的文档，实施草案，测试</strong>等。 -
<strong>在 GitHub
上响应</strong>，回答提出的问题并考虑评论者提出的观点。 - <strong>按照<a href="https://github.com/tc39/proposals#onboarding-existing-proposals">这些说明</a>将提案仓库移至
tc39 组织中 </strong>。</p>
<h3 id="第二阶段">第二阶段</h3>
<p>流程文档的准入标准： &gt; - 初版规范文字</p>
<p>接受表示： &gt; 委员会希望该功能得以开发并最终纳入标准</p>
<p>进入第二阶段 -
<strong>制定解决方案的完整初稿</strong>。这些并不一定是所有有关语法或语义问题的最终答案，但应该有一个连贯的初始建议，您对此有一定的信心。应该对解释器进行更新，以记录第二阶段的解决方案。
- <strong>写初始规范文本</strong>。该文本不需要 100％
完整，但应大致覆盖解决方案的表面。 <!-- TODO：链接到规范编写建议文档 -->
-
<strong>准备演示文稿</strong>，概述提案以及委员会为何同意将其纳入标准。</p>
<p>在提案进入第二阶段时，我们已经达成共识，我们希望继续进行类似该提案的工作，最终成为
JavaScript 的标准。</p>
<p>在第二阶段之后（甚至之前），执行以下某些操作可能会很有用： -
<strong>继续与 JavaScript 开发者交谈</strong>，并努力寻求解决方案。 -
如果要研究多个解决方案，争取在第三阶段之前的某个时间（可能在第二阶段之前）将它们<strong>解决掉</strong>。
-
在第二阶段中，<strong>具有良好的测试实现</strong>显得尤为重要。这不是阶段过程的要求，但是在进入第三阶段并为提案声明一定的完成度之前从实际使用中获取反馈非常有用。完善文档的过程也是如此。
-
理想情况下，重大问题应尽早解决，可能在第二阶段之前，或者在第二阶段中，<strong>精益求精</strong>是
TC39 会议讨论的议题和要解决的问题。 - 在 TC39
会议上，提案已进入第二阶段，一般来说应该“选择第三阶段的审核者”了。</p>
<h3 id="第三阶段">第三阶段</h3>
<p>流程文档的准入标准： &gt; - 完整的规范文本 &gt; -
指定的审核者已经签署同意了当前的规范文本 &gt; - 所有 ECMAScript
编者均已签署当前的规范文本</p>
<p>接受表示： &gt;
该解决方案是完整的，并且尚缺实施经验、大量的应用和外部反馈，以进行进一步的工作。</p>
<p>进入第三阶段， -
<strong>尽可能解决有关规范的所有语法和语义问题</strong>。在第三阶段中，设计应尽可能完整。这意味着扩展到
JavaScript 开发者，并尝试使用 Transpiler /
polyfills，足以在设计上得出这样的结论。仍然可能存在仅由实施方式回答的未解决问题，例如在无法进行多填充/转译的提案中，或在有关实施效率的问题中。
-
<strong>填写规范文本</strong>。规范文本应基于已发生的所有设计讨论，以全部细节描述整个建议。
- <strong>从指定的评论者和编辑那里获得第三阶段的评论</strong>。在 TC39
会议召开前几周，通过电子邮件将审稿人和编辑者的电子邮件发给您，询问您的评论进行得如何，如果您还没有收到回复的话。
-
<strong>准备演示文稿</strong>，解释提案的详细信息及其依据，要求进入第三阶段。</p>
<p>在第三阶段之后（甚至更早）， - <strong>编写 test262
测试</strong>。这些测试可以合并到第三阶段的提案中。确保包括指示它们是哪个提案的功能标志。编写这些测试的过程通常会暴露规范文本中的错误，并且对于确保实现的一致性非常有用。
-
<strong>致力于各种实现</strong>。至关重要的是，在这一点上，弄清所有实现约束很重要。例如，某些设计可能满足第三阶段的要求，但具有使现有
JavaScript 程序变慢的副作用 ——
这可能是不被看好，也不是想要的。即使您没有在每个地方都完成一个实现，与各种
JavaScript
引擎的实现者讨论细节以了解他们对可行和可优化事物的约束对于理解是否需要进一步的更改都是非常有用的。
-
<strong>将决策传达给更广泛的社区</strong>。理想情况下，此时，已经收集并考虑了广泛的社区反馈，并且不再需要进行进一步的设计辩论。</p>
<h3 id="第四阶段-1">第四阶段</h3>
<p>流程文档的准入标准： &gt; - 已针对主线使用场景编写了 Test262
验收测试，并将其合并 &gt; - 两个兼容的实现通过了验收测试 &gt; -
在实施方面具有丰富的现场经验，例如由两个独立的 VM 向该提案提供经验 &gt;
- 带有集成规范文本的拉取请求已发送到 TC39 / ECMA262 &gt; - 所有
ECMAScript 编者均已对拉取请求进行了签名</p>
<p>接受表示： &gt; 新增内容将包含在最快的实用标准修订版中</p>
<p>进行到第四阶段，创建以下内容 -
<strong>至少有两个符合规范的实现</strong>。要做到两个符合规范的实现，一个努力的好方向是那些支持
Web 浏览器和 Node.js 的 JavaScript <a href="https://v8.dev/">V8</a>、<a href="https://trac.webkit.org/wiki/JavaScriptCore">JavaScriptCore</a> 和
<a href="https://developer.mozilla.org/zh-CN/docs/Mozilla/Projects/SpiderMonkey">SpiderMonkey</a>
引擎。这是将实现交付给许多 JavaScript
开发者的好方法，并且它对性能有了约束。如果所有实现都在例如编译器中进行，则委员会可能不会被说服，不会认为该提案有了丰富的实施经验，例如，由于编译器没有实现通常会带来特殊困难的
<code>eval</code> 之类的功能。 - <strong>完整 Test262
测试</strong>。如果可能，这些测试应旨在覆盖整个规范。 -
<strong>针对主要规范的
PR</strong>。较早的规范文本可能有一些捷径，但这对于最终的 PR
来说是不可接受的。例如，这可能涉及为某些重复的规范算法写出详细信息。早期草稿中出现的编辑者注释应转换为普通注释或被删除。
-
<strong>准备演示文稿</strong>，总结积极的实施和测试经验，并要求委员会晋升该提案到第四阶段。</p>
<p>提案到达第四阶段后， - <strong>Archive
提案仓库</strong>。第四阶段的提案将不会有进一步的更改，将来的任何更改都将是针对主要规范的单独提案。
-
<strong>确保提供了良好的文档</strong>。理想情况下，您在投标过程的早期就开发了文档。现在，至关重要的是，各个级别的文档都必须具有良好的质量，以供广大
JavaScript 开发者使用。 - <strong>确保在可能的情况下有条件地使用
polyfills 或
shims</strong>。一旦提案进入第四阶段，则在可行且正确的情况下，请顺应内置的实现。这使开发者可以在不牺牲正确性的情况下，尽可能地受益于原生实现的更好性能。对于
polyfills 或
shims，如果存在已知的错误和偏差，则严格检查原生实现是否有用，而不是仅检查原生实现的存在是很有帮助的。但是，以依赖于修改全局环境的形式进行广泛部署存在兼容性风险，尤其是在提案成为标准之前
—— 使用不内置于运行环境中的 polyfill 可能会有所帮助。</p>]]></content>
      <categories>
        <category>Computer Science</category>
        <category>Frontend</category>
        <category>tc39</category>
      </categories>
      <tags>
        <tag>Computer Science</tag>
        <tag>JavaScript</tag>
        <tag>Frontend</tag>
        <tag>tc39</tag>
      </tags>
  </entry>
  <entry>
    <title>如何阅读一份提案草案？</title>
    <url>/2021/03/19/computer%20science/frontend/Reading-a-proposal-draft/</url>
    <content><![CDATA[<blockquote>
<ul>
<li>原文地址：<a href="https://github.com/tc39/how-we-work/blob/master/how-to-read.md">Reading
a proposal draft</a></li>
<li>原文作者：<a href="https://github.com/tc39/how-we-work">Ecma
TC39</a></li>
<li>译者：<a href="https://github.com/PassionPenguin">霜羽
Hoarfroster</a></li>
<li>校对者：<a href="https://github.com/KimYangOfCat">KimYang</a></li>
</ul>
</blockquote>
<p>每个处于第二阶段或更高阶段的提案都有一个规范文本草案，存储在
<code>https://tc39.es/proposal-&lt;name&gt;</code>。这些草案都是供实现该功能时所参考的权威定义；README
或 Issue 中的内容或讨论可能会引用这份草案作为背景。</p>
<p>提案规范文本的表达可能会与<a href="https://tc39.es/ecma262">当前规范的草案</a>有所不同，也可能会对某些其他提案有所添加。当添加一个全新的章节时，它不会突出显示，但是当修改现有章节时，它们会以绿色突出显示，强调是插入的内容，而红色的标识则表示删除。</p>
<p>规范文本旨在被抽象地解释（译者注：即，只对实现的运行效果有所要求，而在如何实现上没有规定）。只有<em>“可观察到的语义”</em>，即执行
JavaScript
代码时的行为表现，才需要与规范匹配。具体实现可以使用他们想要的任何策略，包括使用能达到相同结果的不同算法。</p>
<p>想要查看更多有关如何阅读一份规范文本的详细信息？请参考 Timothy Gu
的<a href="https://timothygu.me/es-howto/">如何阅读 ECMAScript 规范</a>
一文和 ECMAScript 规范一文中的<a href="https://tc39.es/ecma262/#sec-notational-conventions">标志性公约</a>章节部分内容。</p>]]></content>
      <categories>
        <category>Computer Science</category>
        <category>Frontend</category>
        <category>tc39</category>
      </categories>
      <tags>
        <tag>Computer Science</tag>
        <tag>JavaScript</tag>
        <tag>Frontend</tag>
        <tag>tc39</tag>
      </tags>
  </entry>
  <entry>
    <title>如何针对 ECMAScript 规范创建一个拉取请求</title>
    <url>/2021/03/19/computer%20science/frontend/How-to-make-a-Pull-Request-against-the-ECMAScript-specification/</url>
    <content><![CDATA[<blockquote>
<ul>
<li>原文地址：<a href="https://github.com/tc39/how-we-work/blob/master/pr.md">How to make
a Pull Request against the ECMAScript specification</a></li>
<li>原文作者：<a href="https://github.com/tc39/how-we-work">Ecma
TC39</a></li>
<li>译者：<a href="https://github.com/PassionPenguin">霜羽
Hoarfroster</a>、<a href="https://github.com/Usualminds">Usualminds</a></li>
<li>校对者：<a href="https://github.com/Usualminds">Usualminds</a>、<a href="https://github.com/kimberlyohq">kimberlyohq</a>、<a href="https://github.com/KimYangOfCat">Kim Yang</a></li>
</ul>
</blockquote>
<p>对 JavaScript 规范的所有更改最终都会变为对 <a href="https://github.com/tc39/ecma262/">ecma262</a> 或 <a href="https://github.com/tc39/ecma402/">ecma402</a>
存储库的拉取请求。</p>
<h2 id="创建一个拉取请求">创建一个拉取请求</h2>
<p>要创建一个拉取请求（PR），请 <a href="https://help.github.com/articles/fork-a-repo/">fork</a> <a href="https://github.com/tc39/ecma262">ecma262</a> 仓库，将变更添加到
spec.html 文件，并将其上传到 GitHub 上之前 fork 的仓库中，使用 Web
端界面提交拉取请求。在本地编辑时，要想查看你在 HTML 中的内容更改，请运行
<code>npm run build</code>（通过 <a href="https://github.com/bterlson/ecmarkup">ecmarkup</a>）将 spec.html
生成为实际的 HTML 文件。</p>
<p><strong>拉取请求应指定哪个仓库？</strong>：几乎所有规范内容的拉取请求都应针对
ecma262 仓库；ecma402 仓库仅用于存储国际规范（提供国际化的标准库）。</p>
<p>拉取请求中的提交的第一行应该以以下的标记开头，后跟冒号，以说明它们是哪一种修补（patch）类型：</p>
<ul>
<li><code>Normative:</code> 变化会以某种方式影响 JavaScript
的行为。这些更改被称为“可观察的”，因为我们可以通过编写代码来“观察”其行为的变化。</li>
<li><code>Editorial:</code>
对规范文本进行的任何非规范性更改，包括拼写错误、文档样式的更改等。</li>
<li><code>Layering:</code> 重构规范文本、算法或嵌入钩子的修改，以实现
JavaScript 规范与其他使用 JavaScript 规范的无入侵式的集成。</li>
<li><code>Markup:</code> 对规范中的标记不可见的更改</li>
<li><code>Meta:</code> 更改了有关该存储库的文档（例如 readme.md 或
contributing.md）以及其他支持文档或脚本（例如
package.json，设计文档等）</li>
</ul>
<h2 id="第四阶段提案拉取请求normative">第四阶段提案拉取请求（<code>Normative:</code>）</h2>
<p><a href="http://tc39.es/process-document/">TC39 阶段流程</a>
的第四阶段要求将建议书写成与规范相对应的拉取文本；要进入第四阶段，需要<a href="https://github.com/tc39/how-we-work/blob/master/management.md#ecma-262-editor-group">编辑组</a>针对该拉取请求进行审查，并在第四阶段之后合并该拉取请求。</p>
<h2 id="非规范拉取请求">非规范拉取请求</h2>
<p><code>Editorial</code>、<code>Layering</code>、<code>Markup</code> 和
<code>Meta</code> 类型的拉取请求不会更改 JavaScript
的行为，但是它们对于正在阅读或使用 JavaScript 规范的人员却很有意义。</p>
<p>如果您要对 JavaScript 规范进行更改，请提出 Issue
进行初步讨论，或者直接创建拉取请求并请求审核。通常，针对拉取请求的审核可以完全在
GitHub 上进行，编者和任何其他想要参与的人都可以参与审核。由于 JavaScript
不会有明显的变化，因此这些拉取请求不需要委员会的明确共识，但是，如果出现了争议，则可以将这个拉取请求提交到委员会，交由委员会处理。</p>
<h2 id="规范性拉取请求">规范性拉取请求</h2>
<p>规范性拉取请求更改了 JavaScript 程序的功能，可能需要采取行动才能从
JavaScript 引擎实现者以及使用 JavaScript
进行编程的开发者那里进行调整。这是很严肃的事情！因此，规范的拉取请求具有以下要求：</p>
<ul>
<li>必须在 <a href="https://github.com/tc39/test262/">test262</a>
中提出针对拉取请求的所做的测试。</li>
<li>拉取请求必须在委员会中提出。在某些情况下，编者或作者只需对 PR
进行简短描述，如果没有提出任何疑问，则认为该提案“已达成共识”。在其他时候，如果该提案有争议，则需要<a href="https://github.com/tc39/how-we-work/blob/master/presenting.md">准备演示文稿</a>，更详细地说明动机（这很是有用）。随后将进行讨论，并且委员会将会针对是否可以就该提案达成共识作出回应。因此，有争议的规范性拉取请求会被标记为“需要共识”（<code>needs consensus</code>）。</li>
</ul>
<p>如果您有拟议的拉取请求，并且希望将其推进，请为其编写 test262
测试，并将其放在即将举行的 TC39
会议的议程上。如果您不在委员会中，对你而言重要的事情是要找到一个 TC39
代表来支持该提案，并在委员会的整个过程中（包括进行演示）将其推进。</p>
<p>我们鼓励 TC39
代表们在即将到来的会议议程上主动添加“需要共识”的拉取请求，并对其进行介绍。如果没有人主动提出该拉取请求，编者将在时间允许的情况下将其添加到议程中。</p>
<h3 id="网络与现实-拉取请求">“网络与现实” 拉取请求</h3>
<p>有时，JavaScript 规范与大多数或所有 Web
浏览器实现的内容之间会出现不匹配的情况。鉴于网络上的大量代码，很有可能已经有许多网站期望这种行为，但是却没有明确说明，但大体上是部署了的。在这种情况下，最有用的事情通常是更改规范，而不是更改所有
JavaScript 实现，以匹配“网络现实”。</p>
<h3 id="实施反馈">实施反馈</h3>
<p>在许多情况下，收集有关实施规范的拉取请求的现实状况、是否实现对某些不太重要的修改感兴趣等方面，获取外界的反馈是有用的。对于这些情况，委员会可能会要求构建一个或多个实现（可能只是在
fork 中或被隐藏在 flag 中），然后再合并规范拉取请求。</p>]]></content>
      <categories>
        <category>Computer Science</category>
        <category>Frontend</category>
        <category>tc39</category>
      </categories>
      <tags>
        <tag>Computer Science</tag>
        <tag>JavaScript</tag>
        <tag>Frontend</tag>
        <tag>tc39</tag>
      </tags>
  </entry>
  <entry>
    <title>都 1202 年了，你还不知道这些检查 CSS 的工具？？？</title>
    <url>/2021/03/19/computer%20science/frontend/tools-for-auditing-css/</url>
    <content><![CDATA[<blockquote>
<ul>
<li>原文地址：<a href="https://css-tricks.com/tools-for-auditing-css/">Tools for Auditing
CSS</a></li>
<li>原文作者：<a href="https://css-tricks.com/author/silvestar/">Silvestar
Bistrović</a></li>
<li>译者：<a href="https://github.com/Hoarfroster">霜羽
Hoarfroster</a></li>
<li>校对者：<a href="https://github.com/zenblo">zenblo</a></li>
</ul>
</blockquote>
<p>在开发者的日常工作中检查 CSS
并不是一项常见的任务，但有时却不得不做。或许这是性能检查的一部分，用来排查有问题的
CSS
或删去未使用的选择器。也许是努力提高可访问性的一部分，在代码库中使用的所有颜色都要进行对比评估。甚至可能是为了加强一致性。</p>
<p>不管是什么情况，每当需要检查 CSS
的时候到来，我通常都会使用我将在下文中向大家介绍的那些工具。但在此之前，让我们先看看检查
CSS 到底是什么。</p>
<h2 id="目录">目录</h2>
<ol type="1">
<li>浏览器内的开发工具</li>
<li>在线工具</li>
<li>CLI 工具</li>
</ol>
<h2 id="检查-css-有难度">检查 CSS 有难度</h2>
<p>一般来说，代码检查涉及分析代码，以发现 bug
或其他不对劲的地方，就比如说那些可能存在的性能上的问题。对于大多数编程语言来说，检查代码的概念相对简单：它正常工作了还是没能够正常工作。但
CSS 是一种特殊的语言，错误大多都会被浏览器忽略。而且我们能够<a href="https://css-tricks.com/hearts-in-html-and-css/">用很多不同的方式实现相同的样式</a>，这就使得
CSS 的检查变得有些棘手 —— 至少可以这么说。</p>
<p>通过使用你最喜欢的代码编辑器的扩展程序，或者设置一个 CSS 的 linter 或
CSS
代码检查器可能会帮助到你及时发现这些错误，不过这不是我想在这里展示的，而且我们不应该止步于此。因为我们可以使用<a href="https://css-tricks.com/a-quick-css-audit-and-general-notes-about-design-systems/">太多</a>的颜色、排版定义或
<code>z-index</code> 值，而所有这些都可能让一个 CSS
代码库变得混乱、不可维护且不稳定。</p>
<p>要真正检查
CSS，我们需要深入挖掘并找到那些不被认为是最佳实践的地方。为了找到这些地方，我们可以使用以下工具：</p>
<h2 id="浏览器内置的开发工具">浏览器内置的开发工具</h2>
<p>我们先来看看 Chrome DevTools 的 CSS 检查工具吧。我这里使用的是基于
Chromium 的 Brave 浏览器。你可能还想<a href="https://css-tricks.com/whats-new-in-devtools-2020/">看看 Umar
Hansa 的这篇文章</a> —— 他编译了一大堆发布于 2020 年的「伟大的」 DevTool
功能。</p>
<p>如果你喜欢手动检查 CSS 代码，我们可以使用 <strong>Inspect</strong>
工具以找出应用于特定元素的 CSS 代码。使用 “Inspect
arrow”，我们甚至可以看到关于颜色、字体、大小和可访问性的那些额外的细节。</p>
<p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/a335f578d3a94dd5902d1134275dbf9d~tplv-k3u1fbpfcp-zoom-1.image"></p>
<h3 id="grid-和-flex-的检查器">Grid 和 Flex 的检查器</h3>
<p>DevTools 界面中有很多实用的实用工具与细节，但我最喜欢的是 Grid 和
Flex 检查器。要启用它们，请进入设置（DevTools
右上方的一个小齿轮图标），点击 <code>Experiments</code>，然后启用 CSS
Grid 和 Flexbox
调试功能。虽然这个工具主要用于调试布局问题，但我有时也会用它来快速判断页面上是否使用了
CSS Grid 或 Flexbox。</p>
<p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/e050875f7cfd41e2bb84718106b37500~tplv-k3u1fbpfcp-zoom-1.image"></p>
<h2 id="css-overview">CSS Overview</h2>
<p>检查 CSS 是非常基本的，一切都需要手动完成。让我们看看一些更高级的
DevTools 功能。</p>
<p><strong>CSS Overview</strong> 就是其中之一。要启用 CSS Overview
工具，进入设置，点击 <code>Experiments</code>，启用 CSS Overview
选项。</p>
<p>要打开 CSS Overview 面板，我们可以使用 <code>⌘ ⇧ P</code> 或
<code>Ctrl ⇧ P</code> 快捷键，输入 <code>css overview</code>，然后选择
<code>Show CSS Overview</code>。这个工具可以展现 CSS
属性的概览，比如颜色、字体、对比度问题、未使用的声明和媒体查询。我通常用这个工具来判断当前
CSS 代码的好坏。例如，如果有 50
种灰度色彩或过多的排版定义，就意味着样式指南没有被应用到实际，或者甚至可能不存在样式指南。</p>
<p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/f6a4dcdda0cf490eb6bbc20ed837f3db~tplv-k3u1fbpfcp-zoom-1.image"></p>
<p>不过请注意，该工具会对应用于这个页面的样式做出概览，而不是对单个文件做出概览。</p>
<h3 id="coverage-panel">Coverage Panel</h3>
<p><strong>Coverage Panel</strong>
工具会显示页面上使用的代码数量和百分比。要查看它，我们可以使用
<code>⌘ ⇧ P</code> 或 <code>Ctrl ⇧ P</code> 快捷键，键入
<code>Coverage</code>，选择
<code>Show Coverage</code>，然后点击刷新图标。</p>
<p>你可以在 URL 过滤器输入中输入 <code>.css</code> 以用于过滤专门显示
CSS 文件。我通常使用这个工具来了解网站的交付技术。例如，如果我看到 CSS
的覆盖率相当的高，我就可以人为 CSS
文件是为每个页面单独生成的。这可能不是关键数据，但有时它有助于了解缓存策略。</p>
<p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/9e6075f8bbb541048e15258bf3073b6d~tplv-k3u1fbpfcp-zoom-1.image"></p>
<h2 id="rendering-panel">Rendering Panel</h2>
<p><strong>Rendering Panel</strong>
是另一个有用的工具。要打开渲染面板，我们可以使用 <code>⌘ ⇧ P</code> 或
<code>Ctrl ⇧ P</code> 快捷键。这次输入 “Rendering”，然后选择 “Show
Rendering” 选项。这个工具有很多选项，但我最喜欢的是：</p>
<ul>
<li><strong>Paint flashing</strong> ——
当重绘事件发生时会显示绿色矩形。我用它来识别需要花费太多渲染时间的区域。</li>
<li><strong>Layout Shift Regions</strong> ——
当布局移动发生时显示蓝色矩形。为了充分利用这些选项，我通常在 “网络”
选项卡下设置 “慢速 3G”
预设。我有时会录制我的屏幕，然后放慢视频速度来寻找布局转移。</li>
<li><strong>Frame Rendering Stats</strong> —— 显示 GPU
和帧的实时使用情况。这个工具在识别重动画和滚动问题时很方便。</li>
</ul>
<p>这些工具会给出常规检查中没有的东西，但我发现它对于了解 CSS
代码是否具有性能并且不会消耗设备的能量是必不可少的。</p>
<p>其他选项可能对调试问题更有利，比如模拟和禁用各种功能，强制使用
<code>prefers-color-scheme</code>
功能或打印媒体类型，以及禁用本地字体。</p>
<p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/a9f1e9ee7947416ba484e1ef95e02a1f~tplv-k3u1fbpfcp-zoom-1.image"></p>
<h3 id="performance-monitor">Performance Monitor</h3>
<p>另一个检查 CSS 代码性能的工具是 <strong>Performance
Monitor</strong>。要启用它，我们可以使用 <code>⌘ ⇧ P</code> 或
<code>Ctrl ⇧ P</code> 快捷键，输入
<code>Performance Monitor</code>，然后选择
<code>Show Performance Monitor</code>
选项。我通常使用这个工具来查看与页面交互或动画发生时会触发多少次重新计算和布局。</p>
<p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/95a2dc65b9cf405d931e8f2ff9c682fa~tplv-k3u1fbpfcp-zoom-1.image"></p>
<h2 id="performance-panel">Performance Panel</h2>
<p>在 <strong>Performance Panel</strong>
上，我们可以详细查看页面加载过程中的所有浏览器事件。要启用性能工具，我们可以使用
<code>⌘ ⇧ P</code> 或 <code>Ctrl ⇧ P</code> 快捷键，输入
<code>Performance</code>，选择 <code>Show Performance</code>，然后点击
“重新加载” 图标。我通常会启用 Screenshots 和 Web Vitals
选项。对我来说，最有趣的是
“首次渲染”、“首次内容丰富的渲染”、“布局转变”和 “最大内容丰富的渲染”
这几个指标。还有一个饼图显示了绘制和渲染时间。</p>
<p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/8dee1041c8e1496988214e57333ae9d9~tplv-k3u1fbpfcp-zoom-1.image"></p>
<p>DevTools 可能不算是一个经典的检查工具，但它可以帮助我们了解哪些 CSS
功能被使用，代码的效率，以及代码的执行情况，而这些都是 CSS
代码检查的关键所在。</p>
<h1 id="在线工具">在线工具</h1>
<p>DevTools
只是用于检查的其中一个包含了许多功能的工具，但我们还有其他可用的工具用来检查
CSS 代码：</p>
<h2 id="specificity-visualizer">Specificity Visualizer</h2>
<p><a href="https://isellsoap.github.io/specificity-visualizer/"><strong>Specificity
Visualizer</strong></a>显示代码库中 CSS
选择器的特殊性。只需访问网站并粘贴 CSS。</p>
<p>主图 Main Chart
会显示特定样式与样式表中的位置的关系。另外两个图表显示了特定样式的使用情况。我经常使用这个网站来寻找
“坏的”
选择器。例如，如果我看到许多特定样式被标记为红色，我很容易得出结论 ——
这里的 CSS
代码可以改进得更好。在你努力改进时，保存截图以供参考是很有帮助的。</p>
<p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/28bf0a06361542ba98dfa0ceffdfa59f~tplv-k3u1fbpfcp-zoom-1.image"></p>
<h2 id="css-specificity-graph-generator">CSS Specificity Graph
Generator</h2>
<p><a href="https://jonassebastianohlsson.com/specificity-graph/"><strong>CSS
Specificity Graph
Generator</strong></a>是一个类似的可视化特定样式工具。它显示了一个略有不同的图表，可能会帮助你看到你的
CSS
选择器是如何按特定样式组织的。正如它在工具页面上所说的那样，“尖峰是不好的，总的趋势应该是在样式表的后期有更高的特定样式”。进一步讨论这个问题会很有意思，但这不在本文的讨论范围内。然而，Harry
Roberts 在他的文章 <a href="https://csswizardry.com/2014/10/the-specificity-graph/">“The
Specificity Graph”</a> 中确实广泛地写到了这一点，值得一试。</p>
<p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/3234eb428b1c4adbb048c7371b7ffeb4~tplv-k3u1fbpfcp-zoom-1.image"></p>
<h2 id="css-stats">CSS Stats</h2>
<p><a href="https://cssstats.com/stats"><strong>CSS Stats</strong></a>
是另一个为你的样式表提供分析和可视化的工具。事实上，<a href="https://css-tricks.com/a-quick-css-audit-and-general-notes-about-design-systems/">Robin
在不久前写过关于它的文章</a>，并展示了他如何使用它来审核他工作中的样式表。</p>
<p>你需要做的就是输入网站的 URL，然后点击
<code>Enter</code>。这些信息被分割成有意义的部分，包括了样式的声明数、颜色、排版、<code>z-index</code>
和特定样式等等。同样，你可能要把截图存储起来，以备日后参考。</p>
<p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/b5e665f060b947c6b1e26ea7f4d371b3~tplv-k3u1fbpfcp-zoom-1.image"></p>
<h2 id="project-wallace">Project Wallace</h2>
<p><a href="https://www.projectwallace.com/analyze-css"><strong>Project
Wallace</strong></a> 是由 Bart Veneman 开发的，而他已经<a href="https://css-tricks.com/in-search-of-a-stack-that-monitors-the-quality-and-complexity-of-css/">在
CSS Tricks 上介绍了这个项目</a>。Project Wallace
的强大之处在于，它可以比较和可视化基于导入的变化。这意味着你可以看到你的
CSS
代码库以前的状态，并看到你的代码在不同状态之间的变化。我觉得这个功能相当有用，特别是当你想说服别人代码是改进过的。该工具对单个项目是免费的，并为更多项目提供付费计划。</p>
<p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/acf7cc0d697e4dd7bef11d5b1137f121~tplv-k3u1fbpfcp-zoom-1.image"></p>
<h1 id="cli-工具">CLI 工具</h1>
<p>除了 DevTools 和在线工具，还有命令行界面（CLI）工具可以帮助我们检查
CSS：</p>
<h2 id="wallace">Wallace</h2>
<p>我最喜欢的 CLI 工具之一是<a href="https://github.com/bartveneman/wallace-cli"><strong>Wallace</strong></a>。安装后，输入<code>wallace</code>，然后输入网站名称，它就会自动输出显示了你需要知道的关于网站的
CSS 代码的一切。我最喜欢看的是 <code>!important</code>
的使用次数，以及代码中有多少个
ID。另一个整洁的信息是顶级特定样式的数量以及有多少选择器使用它。这些可能是
“坏” 代码的危险信号。</p>
<p>我最喜欢这个工具的地方是，它可以从网站中提取所有的 CSS 代码 ——
不仅是外部文件，还能够包括内联代码。这就是为什么 CSS Stats 和 Wallace
的报告不匹配的原因。</p>
<p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/4f7adfa0a5dc4032a0733ca2d443ed73~tplv-k3u1fbpfcp-zoom-1.image"></p>
<h2 id="csscss">csscss</h2>
<p><a href="https://github.com/zmoazeni/csscss"><strong>csscss</strong></a>
CLI
工具可以显示哪些规则共享相同的声明，而这对于识别重复的代码和减少编写的代码量是很有用的。在这样做之前，我会三思而后行，因为这可能是不值得的，尤其是在今天的缓存机制下。值得一提的是，csscss
需要 Ruby 运行环境。</p>
<p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/473219819ab2498fb88ebf3f62941b20~tplv-k3u1fbpfcp-zoom-1.image"></p>
<h1 id="其他有用的工具">其他有用的工具</h1>
<p>其他的 CSS
工具可能不用于检查，但还是很有用的。我们也来列举一下这些。</p>
<ul>
<li><a href="https://github.com/bartveneman/color-sorter">Color
Sorter</a> —— 先按色调，再按饱和度对 CSS 颜色进行排序。</li>
<li><a href="https://github.com/projectwallace/css-analyzer">CSS
Analyzer</a> -—— 对一串 CSS 进行分析。</li>
<li><a href="https://github.com/bartveneman/constyble">constyble</a> ——
这是一个基于 CSS Analyzer 的 CSS 复杂性分析器。</li>
<li><a href="https://extract-css.now.sh/">Extract CSS Now</a> ——
从一个网页中获取所有 CSS。</li>
<li><a href="https://content-project-wallace.vercel.app/get-css">Get
CSS</a> —— 从一个网页中获取所有的 CSS。</li>
<li><a href="https://github.com/oyvindeh/ucss">uCSS</a> ——
抓取网站以识别未使用的 CSS。</li>
</ul>
<h1 id="结语">结语</h1>
<p>CSS
在我们身边无处不在，我们需要把它当作每个项目的一等公民。别人怎么看你的
CSS 并不重要，但你对它的看法真的很重要。如果你的 CSS
有条不紊，写得很好，你就会花更少的时间去调试它，而花更多的时间去开发新功能。在一个理想的世界里，我们会教育每个人写好
CSS，但这需要时间。</p>
<p>让今天成为你开始关心你的 CSS 代码的日子。</p>
<p>我知道检查 CSS
对每个人来说都不会是一件有趣的事情。但是，如果你针对这些工具中的任何一个运行你的代码，并试图改善你的
CSS 代码库中的哪怕是一个部分，那么这篇文章已经完成了它的工作。</p>]]></content>
      <categories>
        <category>Computer Science</category>
        <category>Frontend</category>
        <category>Styling</category>
      </categories>
      <tags>
        <tag>Computer Science</tag>
        <tag>Frontend</tag>
        <tag>CSS</tag>
      </tags>
  </entry>
  <entry>
    <title>3 种在任何浏览器中使用 CSS 网格的后备方案</title>
    <url>/2021/03/15/computer%20science/frontend/3-fallback-techniques-to-support-css-grid-in-any-browser/</url>
    <content><![CDATA[<blockquote>
<ul>
<li>原文地址：<a href="https://betterprogramming.pub/3-fallback-techniques-to-support-css-grid-in-any-browser-1740454d7cdb">3
Fallback Techniques To Support CSS Grid in Any Browser</a></li>
<li>原文作者：<a href="https://medium.com/@dioxmio">Jose Granja</a></li>
<li>译者：<a href="https://github.com/PassionPenguin">霜羽
Hoarfroster</a></li>
<li>校对者：<a href="https://github.com/Chorer">Chorer</a>、<a href="https://github.com/sin7777">sin7777</a></li>
</ul>
</blockquote>
<figure>
<img src="https://cdn-images-1.medium.com/max/9662/0*z99PsHMNipBY051X" alt="由 John Schnobrich 上传至 Unsplash.">
<figcaption aria-hidden="true">由 <a href="https://unsplash.com/@johnschno?utm_source=medium&amp;utm_medium=referral">John
Schnobrich</a> 上传至 <a href="https://unsplash.com?utm_source=medium&amp;utm_medium=referral">Unsplash</a>.</figcaption>
</figure>
<p>如今，CSS Grid 在浏览器中已经广受支持 —— 支持 Grid
基本功能的浏览器占比约为 95％。不过有时我们无法忽略剩下的
5％，因为我们可能希望自己的 Web
应用的布局在所有浏览器中看起来都一样的棒，而且我们甚至还可能希望去使用一些支持度较低的
Grid 的新功能。</p>
<p>那我们应该做什么？我们应该避免在生产中使用 Grid
布局吗？我们应该抛弃使用旧版浏览器的用户吗？我们应该等待功能得到更好的覆盖吗？当然不，有很多后备方案可以帮助我们克服这些问题。</p>
<p>在本文中，我们将探讨最重要的三种技术。它们将帮助我们在 Grid
布局上轻松兼容旧版浏览器，这样我们就可以根据可用的浏览器功能，调整我们的网页设计。这一切都将是渐进式适应的。</p>
<p>在深入探讨技术方面的内容之前，我们需要制定一个策略。制定适当的策略是成功的关键，因为这将使我们有方向感和一致性。</p>
<h2 id="制定策略">制定策略</h2>
<p>Grid
中最常见的用处是构建适合用户屏幕分辨率的多维栅格布局。但当栅格不可用时该怎么办？除了
Grid 之外，还有什么东西可以帮助我们制作灵活且迅速响应的布局？</p>
<p>我们可以尝试使用 Flexbox
重现相同的布局，不过这样做会增加过多的代码。此外，Flexbox
也不是为了栅格布局而开发的功能，如果使用它，我们可能会遇到一些困难。</p>
<p>现在我们该怎么办？解决方案非常简单：作为后备方案，只需向用户展示移动端的布局即可，而只有使用过时浏览器的桌面端用户才会注意到这些改变。他们在我们的总用户数量中占比非常低。你的站点对于所有人来说应该都是可以使用且一致的，而这就是一个公平的权衡。</p>
<p>那么如何使用最新的 Grid
功能？直接采取相同的策略：尝试回退到一个相似的布局。</p>
<p>总结：我们的布局应该逐步增强。使用较旧浏览器的用户可能只能看到一个更简单但可用的版式，而那些使用最新浏览器的用户将获得完整的用户体验。</p>
<p>让我们来看一下可以使用的前 3 种后备工具。</p>
<h2 id="使用-css-特性查询">1. 使用 CSS 特性查询</h2>
<p>让我们从下面的这段描述开始了解：</p>
<blockquote>
<p>“<strong>特性查询</strong> 是使用 CSS 的 at 规则 <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/@supports"><code>@supports</code></a>
创建的。它给予 Web
开发者一种有效的方法去测试浏览器是否支持某个确定特性，而后提供基于测试结果生效的
CSS 。在此指南中你将学习如何使用特性查询实现渐进式增强。” — [MDN
Web文档]（https://developer.mozilla.org/zh-CN/docs/Web/CSS/CSS_Conditional_Rules/Using_Feature_Queries）</p>
</blockquote>
<p>如果你曾经使用过媒体查询，那么我想，你也会非常熟悉
<code>@supports</code> 的语法，毕竟两者是很相似的。不过在这里我们使用
<code>@supports</code>
不是希望基于浏览器的视口大小来调整布局，而是希望基于 CSS
属性的支持与否来定义指定的样式。</p>
<p>根据我们的策略：</p>
<p>1.我们将使用 Flexbox 构建移动布局版本，并将其用作默认版本。
2.通过使用 <code>@supports</code>，我们将检查浏览器是否支持
Grid。如果支持，我们就会使用 Grid 来增强布局。</p>
<p>在此示例中，由于我们仅需关注标准的 Grid 行为。在这里我们可以向
<code>@supports</code> 查询基本的 <code>display：grid</code> 功能：</p>
<div class="sourceCode" id="cb1"><pre class="sourceCode css"><code class="sourceCode css"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a><span class="im">@supports</span> (<span class="kw">display</span>: <span class="dv">grid</span>) &#123;</span>
<span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a>    <span class="co">/* ... code here */</span></span>
<span id="cb1-3"><a href="#cb1-3" aria-hidden="true" tabindex="-1"></a>&#125;</span></code></pre></div>
<p>完整的例子如下：</p>
<div class="sourceCode" id="cb2"><pre class="sourceCode html"><code class="sourceCode html"><span id="cb2-1"><a href="#cb2-1" aria-hidden="true" tabindex="-1"></a><span class="dt">&lt;!DOCTYPE </span>html<span class="dt">&gt;</span></span>
<span id="cb2-2"><a href="#cb2-2" aria-hidden="true" tabindex="-1"></a><span class="kw">&lt;html</span> <span class="er">lang</span><span class="ot">=</span><span class="st">"en"</span><span class="kw">&gt;</span></span>
<span id="cb2-3"><a href="#cb2-3" aria-hidden="true" tabindex="-1"></a><span class="kw">&lt;head&gt;</span></span>
<span id="cb2-4"><a href="#cb2-4" aria-hidden="true" tabindex="-1"></a>    <span class="kw">&lt;title&gt;</span>生产中的 Grid<span class="kw">&lt;/title&gt;</span></span>
<span id="cb2-5"><a href="#cb2-5" aria-hidden="true" tabindex="-1"></a>    <span class="kw">&lt;meta</span> <span class="er">charset</span><span class="ot">=</span><span class="st">"UTF-8"</span><span class="kw">/&gt;</span></span>
<span id="cb2-6"><a href="#cb2-6" aria-hidden="true" tabindex="-1"></a><span class="kw">&lt;/head&gt;</span></span>
<span id="cb2-7"><a href="#cb2-7" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb2-8"><a href="#cb2-8" aria-hidden="true" tabindex="-1"></a><span class="kw">&lt;body&gt;</span></span>
<span id="cb2-9"><a href="#cb2-9" aria-hidden="true" tabindex="-1"></a><span class="kw">&lt;style&gt;</span></span>
<span id="cb2-10"><a href="#cb2-10" aria-hidden="true" tabindex="-1"></a>    <span class="pp">#container</span> &#123;</span>
<span id="cb2-11"><a href="#cb2-11" aria-hidden="true" tabindex="-1"></a>        <span class="kw">display</span>: flex<span class="op">;</span></span>
<span id="cb2-12"><a href="#cb2-12" aria-hidden="true" tabindex="-1"></a>        <span class="kw">flex-direction</span>: column<span class="op">;</span></span>
<span id="cb2-13"><a href="#cb2-13" aria-hidden="true" tabindex="-1"></a>        <span class="kw">gap</span>: <span class="dv">10</span><span class="dt">px</span><span class="op">;</span></span>
<span id="cb2-14"><a href="#cb2-14" aria-hidden="true" tabindex="-1"></a>        <span class="kw">border</span>: <span class="dv">1</span><span class="dt">px</span> <span class="dv">solid</span> <span class="cn">#000</span><span class="op">;</span></span>
<span id="cb2-15"><a href="#cb2-15" aria-hidden="true" tabindex="-1"></a>        <span class="kw">padding</span>: <span class="dv">10</span><span class="dt">px</span><span class="op">;</span></span>
<span id="cb2-16"><a href="#cb2-16" aria-hidden="true" tabindex="-1"></a>    &#125;</span>
<span id="cb2-17"><a href="#cb2-17" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb2-18"><a href="#cb2-18" aria-hidden="true" tabindex="-1"></a>    <span class="im">@supports</span> (<span class="kw">display</span>: <span class="dv">grid</span>) &#123;</span>
<span id="cb2-19"><a href="#cb2-19" aria-hidden="true" tabindex="-1"></a>        <span class="pp">#container</span> &#123;</span>
<span id="cb2-20"><a href="#cb2-20" aria-hidden="true" tabindex="-1"></a>            <span class="kw">display</span>: grid<span class="op">;</span></span>
<span id="cb2-21"><a href="#cb2-21" aria-hidden="true" tabindex="-1"></a>        &#125;</span>
<span id="cb2-22"><a href="#cb2-22" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb2-23"><a href="#cb2-23" aria-hidden="true" tabindex="-1"></a>        <span class="im">@media</span> (<span class="kw">min-width</span>: <span class="dv">768</span><span class="dt">px</span>) &#123;</span>
<span id="cb2-24"><a href="#cb2-24" aria-hidden="true" tabindex="-1"></a>            <span class="pp">#container</span> &#123;</span>
<span id="cb2-25"><a href="#cb2-25" aria-hidden="true" tabindex="-1"></a>                <span class="kw">grid-template-columns</span>: <span class="dv">100</span><span class="dt">px</span> <span class="dv">1</span>fr <span class="dv">100</span><span class="dt">px</span><span class="op">;</span></span>
<span id="cb2-26"><a href="#cb2-26" aria-hidden="true" tabindex="-1"></a>            &#125;</span>
<span id="cb2-27"><a href="#cb2-27" aria-hidden="true" tabindex="-1"></a>        &#125;</span>
<span id="cb2-28"><a href="#cb2-28" aria-hidden="true" tabindex="-1"></a>    &#125;</span>
<span id="cb2-29"><a href="#cb2-29" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb2-30"><a href="#cb2-30" aria-hidden="true" tabindex="-1"></a>    <span class="fu">.side1</span> &#123;</span>
<span id="cb2-31"><a href="#cb2-31" aria-hidden="true" tabindex="-1"></a>        <span class="kw">padding</span>: <span class="dv">10</span><span class="dt">px</span><span class="op">;</span></span>
<span id="cb2-32"><a href="#cb2-32" aria-hidden="true" tabindex="-1"></a>        <span class="kw">background-color</span>: <span class="cn">#CEB992</span><span class="op">;</span></span>
<span id="cb2-33"><a href="#cb2-33" aria-hidden="true" tabindex="-1"></a>    &#125;</span>
<span id="cb2-34"><a href="#cb2-34" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb2-35"><a href="#cb2-35" aria-hidden="true" tabindex="-1"></a>    <span class="fu">.side2</span> &#123;</span>
<span id="cb2-36"><a href="#cb2-36" aria-hidden="true" tabindex="-1"></a>        <span class="kw">padding</span>: <span class="dv">10</span><span class="dt">px</span><span class="op">;</span></span>
<span id="cb2-37"><a href="#cb2-37" aria-hidden="true" tabindex="-1"></a>        <span class="kw">background-color</span>: <span class="cn">#CEB992</span><span class="op">;</span></span>
<span id="cb2-38"><a href="#cb2-38" aria-hidden="true" tabindex="-1"></a>    &#125;</span>
<span id="cb2-39"><a href="#cb2-39" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb2-40"><a href="#cb2-40" aria-hidden="true" tabindex="-1"></a>    <span class="fu">.content</span> &#123;</span>
<span id="cb2-41"><a href="#cb2-41" aria-hidden="true" tabindex="-1"></a>        <span class="kw">padding</span>: <span class="dv">10</span><span class="dt">px</span><span class="op">;</span></span>
<span id="cb2-42"><a href="#cb2-42" aria-hidden="true" tabindex="-1"></a>        <span class="kw">min-height</span>: <span class="dv">400</span><span class="dt">px</span><span class="op">;</span></span>
<span id="cb2-43"><a href="#cb2-43" aria-hidden="true" tabindex="-1"></a>        <span class="kw">background-color</span>: <span class="cn">#5B2E48</span><span class="op">;</span></span>
<span id="cb2-44"><a href="#cb2-44" aria-hidden="true" tabindex="-1"></a>    &#125;</span>
<span id="cb2-45"><a href="#cb2-45" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb2-46"><a href="#cb2-46" aria-hidden="true" tabindex="-1"></a>    body &#123;</span>
<span id="cb2-47"><a href="#cb2-47" aria-hidden="true" tabindex="-1"></a>        <span class="kw">color</span>: <span class="cn">#FFF</span><span class="op">;</span></span>
<span id="cb2-48"><a href="#cb2-48" aria-hidden="true" tabindex="-1"></a>        <span class="kw">font-weight</span>: <span class="dv">500</span><span class="op">;</span></span>
<span id="cb2-49"><a href="#cb2-49" aria-hidden="true" tabindex="-1"></a>    &#125;</span>
<span id="cb2-50"><a href="#cb2-50" aria-hidden="true" tabindex="-1"></a><span class="kw">&lt;/style&gt;</span></span>
<span id="cb2-51"><a href="#cb2-51" aria-hidden="true" tabindex="-1"></a><span class="kw">&lt;div</span> <span class="er">id</span><span class="ot">=</span><span class="st">"container"</span><span class="kw">&gt;</span></span>
<span id="cb2-52"><a href="#cb2-52" aria-hidden="true" tabindex="-1"></a>    <span class="kw">&lt;div</span> <span class="er">class</span><span class="ot">=</span><span class="st">"side1"</span><span class="kw">&gt;</span></span>
<span id="cb2-53"><a href="#cb2-53" aria-hidden="true" tabindex="-1"></a>        侧边栏</span>
<span id="cb2-54"><a href="#cb2-54" aria-hidden="true" tabindex="-1"></a>    <span class="kw">&lt;/div&gt;</span></span>
<span id="cb2-55"><a href="#cb2-55" aria-hidden="true" tabindex="-1"></a>    <span class="kw">&lt;div</span> <span class="er">class</span><span class="ot">=</span><span class="st">"content"</span><span class="kw">&gt;</span></span>
<span id="cb2-56"><a href="#cb2-56" aria-hidden="true" tabindex="-1"></a>        主要内容</span>
<span id="cb2-57"><a href="#cb2-57" aria-hidden="true" tabindex="-1"></a>    <span class="kw">&lt;/div&gt;</span></span>
<span id="cb2-58"><a href="#cb2-58" aria-hidden="true" tabindex="-1"></a>    <span class="kw">&lt;div</span> <span class="er">class</span><span class="ot">=</span><span class="st">"side2"</span><span class="kw">&gt;</span></span>
<span id="cb2-59"><a href="#cb2-59" aria-hidden="true" tabindex="-1"></a>        侧边栏</span>
<span id="cb2-60"><a href="#cb2-60" aria-hidden="true" tabindex="-1"></a>    <span class="kw">&lt;/div&gt;</span></span>
<span id="cb2-61"><a href="#cb2-61" aria-hidden="true" tabindex="-1"></a><span class="kw">&lt;/div&gt;</span></span>
<span id="cb2-62"><a href="#cb2-62" aria-hidden="true" tabindex="-1"></a><span class="kw">&lt;/body&gt;</span></span>
<span id="cb2-63"><a href="#cb2-63" aria-hidden="true" tabindex="-1"></a><span class="kw">&lt;/html&gt;</span></span></code></pre></div>
<p>注意，我们并没有断言 Grid 特性
<code>grid-template-columns</code>。如果浏览器不支持该怎么办？在这种情况下，Grid
将退回到默认的定位算法 —— 它将堆叠
<code>div</code>。在我们的示例中，该方法可以正常运行，因此我们不需要再去进行额外的工作。</p>
<p>让我们看看结果，这是支持 Grid 的浏览器的桌面端视图结果：</p>
<figure>
<img src="https://cdn-images-1.medium.com/max/2000/1*DuwFq17QtSj96yMWa7KGwA.png" alt="支持 Grid 时的布局">
<figcaption aria-hidden="true">支持 Grid 时的布局</figcaption>
</figure>
<p>这是支持 Grid 的浏览器的移动端视图的结果：</p>
<figure>
<img src="https://cdn-images-1.medium.com/max/2000/1*nm0t3NbuJboHpmEACBUsIw.png" alt="支持 Grid 时的布局">
<figcaption aria-hidden="true">支持 Grid 时的布局</figcaption>
</figure>
<p>这是不支持 Grid 的浏览器的任何视图下的结果：</p>
<figure>
<img src="https://cdn-images-1.medium.com/max/2000/1*YfV-AKl5U5bRzX9BVYtMGg.png" alt="Fallback 布局">
<figcaption aria-hidden="true">Fallback 布局</figcaption>
</figure>
<p>布局没有被破坏，仍然可用于所有浏览器引擎。只有从桌面端访问它的用户才能看到区别。</p>
<h2 id="以编程方式使用-css-功能查询">2. 以编程方式使用 CSS 功能查询</h2>
<p>有时，仅通过样式表中的 CSS
特性查询无法实现我们想要的功能。尽管它的功能强大，但也有局限性。因此我们可能需要基于浏览器功能，以编程的方式添加或删除元素。那应该如何实现呢？</p>
<p>幸运的是，可以在 JavaScript 以编程方式调用 CSS 功能。我们可以通过 CSS
对象模型接口 <a href="https://developer.mozilla.org/zh-CN/docs/Web/API/CSSSupportsRule"><code>CSSSupportsRule</code></a>
来访问 <code>@supports</code>。</p>
<blockquote>
<p><code>CSSSupportsRule</code> 接口代表一个 CSS <code>@supports</code>
和 <code>at-rule</code> — [MDN
Web文档]（https://developer.mozilla.org/en-US/docs/Web/API/CSSSupportsRule）</p>
</blockquote>
<p>让我们看一下它的定义：</p>
<div class="sourceCode" id="cb3"><pre class="sourceCode ts"><code class="sourceCode typescript"><span id="cb3-1"><a href="#cb3-1" aria-hidden="true" tabindex="-1"></a><span class="kw">function</span> <span class="fu">supports</span>(property<span class="op">:</span> <span class="dt">string</span><span class="op">,</span> value<span class="op">:</span> <span class="dt">string</span>)<span class="op">:</span> <span class="dt">boolean</span><span class="op">;</span></span></code></pre></div>
<p>我们在一个假设的案例中使用看看。如果用户使用的浏览器不支持 Grid
布局功能，它就会给用户发出警告。不过我们可不能在生产环境中这样做，这只是一个有趣的例子。</p>
<p>这是我们有条件地检查是否不支持 Grid 的方式：</p>
<div class="sourceCode" id="cb4"><pre class="sourceCode js"><code class="sourceCode javascript"><span id="cb4-1"><a href="#cb4-1" aria-hidden="true" tabindex="-1"></a><span class="cf">if</span> (<span class="op">!</span><span class="bu">CSS</span> <span class="op">||</span> <span class="op">!</span><span class="bu">CSS</span><span class="op">.</span><span class="fu">supports</span>(<span class="st">'display'</span><span class="op">,</span> <span class="st">'grid'</span>)) &#123;</span>
<span id="cb4-2"><a href="#cb4-2" aria-hidden="true" tabindex="-1"></a>    <span class="co">// ...</span></span>
<span id="cb4-3"><a href="#cb4-3" aria-hidden="true" tabindex="-1"></a>&#125;</span></code></pre></div>
<p>请注意，某些浏览器可能不支持
<code>CSS.supports</code>，因此我们还添加了空检查。</p>
<p>让我们来看一个有效的代码示例：</p>
<div class="sourceCode" id="cb5"><pre class="sourceCode html"><code class="sourceCode html"><span id="cb5-1"><a href="#cb5-1" aria-hidden="true" tabindex="-1"></a><span class="dt">&lt;!DOCTYPE </span>html<span class="dt">&gt;</span></span>
<span id="cb5-2"><a href="#cb5-2" aria-hidden="true" tabindex="-1"></a><span class="kw">&lt;html</span> <span class="er">lang</span><span class="ot">=</span><span class="st">"en"</span><span class="kw">&gt;</span></span>
<span id="cb5-3"><a href="#cb5-3" aria-hidden="true" tabindex="-1"></a><span class="kw">&lt;head&gt;</span></span>
<span id="cb5-4"><a href="#cb5-4" aria-hidden="true" tabindex="-1"></a>    <span class="kw">&lt;title&gt;</span>生产中的 Grid<span class="kw">&lt;/title&gt;</span></span>
<span id="cb5-5"><a href="#cb5-5" aria-hidden="true" tabindex="-1"></a>    <span class="kw">&lt;meta</span> <span class="er">charset</span><span class="ot">=</span><span class="st">"UTF-8"</span><span class="kw">/&gt;</span></span>
<span id="cb5-6"><a href="#cb5-6" aria-hidden="true" tabindex="-1"></a><span class="kw">&lt;/head&gt;</span></span>
<span id="cb5-7"><a href="#cb5-7" aria-hidden="true" tabindex="-1"></a><span class="kw">&lt;body&gt;</span></span>
<span id="cb5-8"><a href="#cb5-8" aria-hidden="true" tabindex="-1"></a><span class="kw">&lt;style&gt;</span></span>
<span id="cb5-9"><a href="#cb5-9" aria-hidden="true" tabindex="-1"></a>    <span class="pp">#container</span> &#123;</span>
<span id="cb5-10"><a href="#cb5-10" aria-hidden="true" tabindex="-1"></a>        <span class="kw">display</span>: flex<span class="op">;</span></span>
<span id="cb5-11"><a href="#cb5-11" aria-hidden="true" tabindex="-1"></a>        <span class="kw">flex-direction</span>: column<span class="op">;</span></span>
<span id="cb5-12"><a href="#cb5-12" aria-hidden="true" tabindex="-1"></a>        <span class="kw">gap</span>: <span class="dv">10</span><span class="dt">px</span><span class="op">;</span></span>
<span id="cb5-13"><a href="#cb5-13" aria-hidden="true" tabindex="-1"></a>        <span class="kw">border</span>: <span class="dv">1</span><span class="dt">px</span> <span class="dv">solid</span> <span class="cn">#000</span><span class="op">;</span></span>
<span id="cb5-14"><a href="#cb5-14" aria-hidden="true" tabindex="-1"></a>        <span class="kw">padding</span>: <span class="dv">10</span><span class="dt">px</span><span class="op">;</span></span>
<span id="cb5-15"><a href="#cb5-15" aria-hidden="true" tabindex="-1"></a>    &#125;</span>
<span id="cb5-16"><a href="#cb5-16" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb5-17"><a href="#cb5-17" aria-hidden="true" tabindex="-1"></a>    <span class="im">@supports</span> (<span class="kw">display</span>: <span class="dv">grid</span>) &#123;</span>
<span id="cb5-18"><a href="#cb5-18" aria-hidden="true" tabindex="-1"></a>        <span class="pp">#container</span> &#123;</span>
<span id="cb5-19"><a href="#cb5-19" aria-hidden="true" tabindex="-1"></a>            <span class="kw">display</span>: grid<span class="op">;</span></span>
<span id="cb5-20"><a href="#cb5-20" aria-hidden="true" tabindex="-1"></a>        &#125;</span>
<span id="cb5-21"><a href="#cb5-21" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb5-22"><a href="#cb5-22" aria-hidden="true" tabindex="-1"></a>        <span class="im">@media</span> (<span class="kw">min-width</span>: <span class="dv">768</span><span class="dt">px</span>) &#123;</span>
<span id="cb5-23"><a href="#cb5-23" aria-hidden="true" tabindex="-1"></a>            <span class="pp">#container</span> &#123;</span>
<span id="cb5-24"><a href="#cb5-24" aria-hidden="true" tabindex="-1"></a>                <span class="kw">grid-template-columns</span>: <span class="dv">100</span><span class="dt">px</span> <span class="dv">1</span>fr <span class="dv">100</span><span class="dt">px</span><span class="op">;</span></span>
<span id="cb5-25"><a href="#cb5-25" aria-hidden="true" tabindex="-1"></a>            &#125;</span>
<span id="cb5-26"><a href="#cb5-26" aria-hidden="true" tabindex="-1"></a>        &#125;</span>
<span id="cb5-27"><a href="#cb5-27" aria-hidden="true" tabindex="-1"></a>    &#125;</span>
<span id="cb5-28"><a href="#cb5-28" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb5-29"><a href="#cb5-29" aria-hidden="true" tabindex="-1"></a>    <span class="fu">.side1</span> &#123;</span>
<span id="cb5-30"><a href="#cb5-30" aria-hidden="true" tabindex="-1"></a>        <span class="kw">padding</span>: <span class="dv">10</span><span class="dt">px</span><span class="op">;</span></span>
<span id="cb5-31"><a href="#cb5-31" aria-hidden="true" tabindex="-1"></a>        <span class="kw">background-color</span>: <span class="cn">#CEB992</span><span class="op">;</span></span>
<span id="cb5-32"><a href="#cb5-32" aria-hidden="true" tabindex="-1"></a>    &#125;</span>
<span id="cb5-33"><a href="#cb5-33" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb5-34"><a href="#cb5-34" aria-hidden="true" tabindex="-1"></a>    <span class="fu">.side2</span> &#123;</span>
<span id="cb5-35"><a href="#cb5-35" aria-hidden="true" tabindex="-1"></a>        <span class="kw">padding</span>: <span class="dv">10</span><span class="dt">px</span><span class="op">;</span></span>
<span id="cb5-36"><a href="#cb5-36" aria-hidden="true" tabindex="-1"></a>        <span class="kw">background-color</span>: <span class="cn">#CEB992</span><span class="op">;</span></span>
<span id="cb5-37"><a href="#cb5-37" aria-hidden="true" tabindex="-1"></a>    &#125;</span>
<span id="cb5-38"><a href="#cb5-38" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb5-39"><a href="#cb5-39" aria-hidden="true" tabindex="-1"></a>    <span class="fu">.content</span> &#123;</span>
<span id="cb5-40"><a href="#cb5-40" aria-hidden="true" tabindex="-1"></a>        <span class="kw">padding</span>: <span class="dv">10</span><span class="dt">px</span><span class="op">;</span></span>
<span id="cb5-41"><a href="#cb5-41" aria-hidden="true" tabindex="-1"></a>        <span class="kw">min-height</span>: <span class="dv">400</span><span class="dt">px</span><span class="op">;</span></span>
<span id="cb5-42"><a href="#cb5-42" aria-hidden="true" tabindex="-1"></a>        <span class="kw">background-color</span>: <span class="cn">#5B2E48</span><span class="op">;</span></span>
<span id="cb5-43"><a href="#cb5-43" aria-hidden="true" tabindex="-1"></a>    &#125;</span>
<span id="cb5-44"><a href="#cb5-44" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb5-45"><a href="#cb5-45" aria-hidden="true" tabindex="-1"></a>    body &#123;</span>
<span id="cb5-46"><a href="#cb5-46" aria-hidden="true" tabindex="-1"></a>        <span class="kw">color</span>: <span class="cn">#FFF</span><span class="op">;</span></span>
<span id="cb5-47"><a href="#cb5-47" aria-hidden="true" tabindex="-1"></a>        <span class="kw">font-weight</span>: <span class="dv">500</span><span class="op">;</span></span>
<span id="cb5-48"><a href="#cb5-48" aria-hidden="true" tabindex="-1"></a>    &#125;</span>
<span id="cb5-49"><a href="#cb5-49" aria-hidden="true" tabindex="-1"></a><span class="kw">&lt;/style&gt;</span></span>
<span id="cb5-50"><a href="#cb5-50" aria-hidden="true" tabindex="-1"></a><span class="kw">&lt;script&gt;</span></span>
<span id="cb5-51"><a href="#cb5-51" aria-hidden="true" tabindex="-1"></a>    (<span class="kw">function</span> <span class="fu">warnSupport</span>() &#123;</span>
<span id="cb5-52"><a href="#cb5-52" aria-hidden="true" tabindex="-1"></a>        <span class="cf">if</span> (<span class="op">!</span><span class="bu">CSS</span> <span class="op">||</span> <span class="op">!</span><span class="bu">CSS</span><span class="op">.</span><span class="fu">supports</span>(<span class="st">'display'</span><span class="op">,</span> <span class="st">'grid'</span>)) &#123;</span>
<span id="cb5-53"><a href="#cb5-53" aria-hidden="true" tabindex="-1"></a>            <span class="fu">alert</span>(<span class="st">'Warning your Browser does not support the latests features. Consider switching to a newer one'</span>)</span>
<span id="cb5-54"><a href="#cb5-54" aria-hidden="true" tabindex="-1"></a>        &#125;</span>
<span id="cb5-55"><a href="#cb5-55" aria-hidden="true" tabindex="-1"></a>    &#125;)()<span class="op">;</span></span>
<span id="cb5-56"><a href="#cb5-56" aria-hidden="true" tabindex="-1"></a><span class="kw">&lt;/script&gt;</span></span>
<span id="cb5-57"><a href="#cb5-57" aria-hidden="true" tabindex="-1"></a><span class="kw">&lt;div</span> <span class="er">id</span><span class="ot">=</span><span class="st">"container"</span><span class="kw">&gt;</span></span>
<span id="cb5-58"><a href="#cb5-58" aria-hidden="true" tabindex="-1"></a>    <span class="kw">&lt;div</span> <span class="er">class</span><span class="ot">=</span><span class="st">"side1"</span><span class="kw">&gt;</span></span>
<span id="cb5-59"><a href="#cb5-59" aria-hidden="true" tabindex="-1"></a>        侧边栏</span>
<span id="cb5-60"><a href="#cb5-60" aria-hidden="true" tabindex="-1"></a>    <span class="kw">&lt;/div&gt;</span></span>
<span id="cb5-61"><a href="#cb5-61" aria-hidden="true" tabindex="-1"></a>    <span class="kw">&lt;div</span> <span class="er">class</span><span class="ot">=</span><span class="st">"content"</span><span class="kw">&gt;</span></span>
<span id="cb5-62"><a href="#cb5-62" aria-hidden="true" tabindex="-1"></a>        主要内容</span>
<span id="cb5-63"><a href="#cb5-63" aria-hidden="true" tabindex="-1"></a>    <span class="kw">&lt;/div&gt;</span></span>
<span id="cb5-64"><a href="#cb5-64" aria-hidden="true" tabindex="-1"></a>    <span class="kw">&lt;div</span> <span class="er">class</span><span class="ot">=</span><span class="st">"side2"</span><span class="kw">&gt;</span></span>
<span id="cb5-65"><a href="#cb5-65" aria-hidden="true" tabindex="-1"></a>        侧边栏</span>
<span id="cb5-66"><a href="#cb5-66" aria-hidden="true" tabindex="-1"></a>    <span class="kw">&lt;/div&gt;</span></span>
<span id="cb5-67"><a href="#cb5-67" aria-hidden="true" tabindex="-1"></a><span class="kw">&lt;/div&gt;</span></span>
<span id="cb5-68"><a href="#cb5-68" aria-hidden="true" tabindex="-1"></a><span class="kw">&lt;/body&gt;</span></span>
<span id="cb5-69"><a href="#cb5-69" aria-hidden="true" tabindex="-1"></a><span class="kw">&lt;/html&gt;</span></span></code></pre></div>
<p><code>CSS.supports</code>
是用于以编程方式创建后备布局的优秀工具。如果我们必须处理非常复杂的布局，那么我们可能需要选用此方法而不是
CSS 特性查询。有了这种程序化的后备方案，我们可以使用它来创建 Web
组件。</p>
<h2 id="属性覆盖">3. 属性覆盖</h2>
<p>有时候，我们不需要 CSS 特性查询之类的奇特功能。这时，我们就可以利用
CSS 属性的工作原理：在 CSS
类中重新定义属性时，最后一个有效的属性会被视作要使用的属性。</p>
<p>这是什么意思？为什么说它好用呢？我们可以通过覆盖 CSS
属性来定义后备样式：</p>
<div class="sourceCode" id="cb6"><pre class="sourceCode css"><code class="sourceCode css"><span id="cb6-1"><a href="#cb6-1" aria-hidden="true" tabindex="-1"></a><span class="pp">#container</span> &#123;</span>
<span id="cb6-2"><a href="#cb6-2" aria-hidden="true" tabindex="-1"></a>    <span class="kw">display</span>: flex<span class="op">;</span></span>
<span id="cb6-3"><a href="#cb6-3" aria-hidden="true" tabindex="-1"></a>    <span class="kw">display</span>: grid<span class="op">;</span></span>
<span id="cb6-4"><a href="#cb6-4" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb6-5"><a href="#cb6-5" aria-hidden="true" tabindex="-1"></a>    <span class="co">/* 如果 Grid 不可用，则第二个属性声明将失效，且浏览器会应用第一个属性声明的值 `flex` */</span></span>
<span id="cb6-6"><a href="#cb6-6" aria-hidden="true" tabindex="-1"></a>&#125;</span></code></pre></div>
<p>我们可以以更简单的方式重写先前的 CSS 特性查询示例：</p>
<div class="sourceCode" id="cb7"><pre class="sourceCode html"><code class="sourceCode html"><span id="cb7-1"><a href="#cb7-1" aria-hidden="true" tabindex="-1"></a><span class="dt">&lt;!DOCTYPE </span>html<span class="dt">&gt;</span></span>
<span id="cb7-2"><a href="#cb7-2" aria-hidden="true" tabindex="-1"></a><span class="kw">&lt;html</span> <span class="er">lang</span><span class="ot">=</span><span class="st">"en"</span><span class="kw">&gt;</span></span>
<span id="cb7-3"><a href="#cb7-3" aria-hidden="true" tabindex="-1"></a><span class="kw">&lt;head&gt;</span></span>
<span id="cb7-4"><a href="#cb7-4" aria-hidden="true" tabindex="-1"></a>    <span class="kw">&lt;title&gt;</span>生产中的 Grid<span class="kw">&lt;/title&gt;</span></span>
<span id="cb7-5"><a href="#cb7-5" aria-hidden="true" tabindex="-1"></a>    <span class="kw">&lt;meta</span> <span class="er">charset</span><span class="ot">=</span><span class="st">"UTF-8"</span><span class="kw">/&gt;</span></span>
<span id="cb7-6"><a href="#cb7-6" aria-hidden="true" tabindex="-1"></a><span class="kw">&lt;/head&gt;</span></span>
<span id="cb7-7"><a href="#cb7-7" aria-hidden="true" tabindex="-1"></a><span class="kw">&lt;body&gt;</span></span>
<span id="cb7-8"><a href="#cb7-8" aria-hidden="true" tabindex="-1"></a><span class="kw">&lt;style&gt;</span></span>
<span id="cb7-9"><a href="#cb7-9" aria-hidden="true" tabindex="-1"></a>    <span class="pp">#container</span> &#123;</span>
<span id="cb7-10"><a href="#cb7-10" aria-hidden="true" tabindex="-1"></a>        <span class="kw">display</span>: flex<span class="op">;</span></span>
<span id="cb7-11"><a href="#cb7-11" aria-hidden="true" tabindex="-1"></a>        <span class="kw">display</span>: grid<span class="op">;</span></span>
<span id="cb7-12"><a href="#cb7-12" aria-hidden="true" tabindex="-1"></a>        <span class="kw">flex-direction</span>: column<span class="op">;</span></span>
<span id="cb7-13"><a href="#cb7-13" aria-hidden="true" tabindex="-1"></a>        <span class="kw">gap</span>: <span class="dv">10</span><span class="dt">px</span><span class="op">;</span></span>
<span id="cb7-14"><a href="#cb7-14" aria-hidden="true" tabindex="-1"></a>        <span class="kw">border</span>: <span class="dv">1</span><span class="dt">px</span> <span class="dv">solid</span> <span class="cn">#000</span><span class="op">;</span></span>
<span id="cb7-15"><a href="#cb7-15" aria-hidden="true" tabindex="-1"></a>        <span class="kw">padding</span>: <span class="dv">10</span><span class="dt">px</span><span class="op">;</span></span>
<span id="cb7-16"><a href="#cb7-16" aria-hidden="true" tabindex="-1"></a>    &#125;</span>
<span id="cb7-17"><a href="#cb7-17" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb7-18"><a href="#cb7-18" aria-hidden="true" tabindex="-1"></a>    <span class="im">@media</span> (<span class="kw">min-width</span>: <span class="dv">768</span><span class="dt">px</span>) &#123;</span>
<span id="cb7-19"><a href="#cb7-19" aria-hidden="true" tabindex="-1"></a>        <span class="pp">#container</span> &#123;</span>
<span id="cb7-20"><a href="#cb7-20" aria-hidden="true" tabindex="-1"></a>            <span class="kw">grid-template-columns</span>: <span class="dv">100</span><span class="dt">px</span> <span class="dv">1</span>fr <span class="dv">100</span><span class="dt">px</span><span class="op">;</span></span>
<span id="cb7-21"><a href="#cb7-21" aria-hidden="true" tabindex="-1"></a>        &#125;</span>
<span id="cb7-22"><a href="#cb7-22" aria-hidden="true" tabindex="-1"></a>    &#125;</span>
<span id="cb7-23"><a href="#cb7-23" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb7-24"><a href="#cb7-24" aria-hidden="true" tabindex="-1"></a>    <span class="fu">.side1</span> &#123;</span>
<span id="cb7-25"><a href="#cb7-25" aria-hidden="true" tabindex="-1"></a>        <span class="kw">padding</span>: <span class="dv">10</span><span class="dt">px</span><span class="op">;</span></span>
<span id="cb7-26"><a href="#cb7-26" aria-hidden="true" tabindex="-1"></a>        <span class="kw">background-color</span>: <span class="cn">#CEB992</span><span class="op">;</span></span>
<span id="cb7-27"><a href="#cb7-27" aria-hidden="true" tabindex="-1"></a>    &#125;</span>
<span id="cb7-28"><a href="#cb7-28" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb7-29"><a href="#cb7-29" aria-hidden="true" tabindex="-1"></a>    <span class="fu">.side2</span> &#123;</span>
<span id="cb7-30"><a href="#cb7-30" aria-hidden="true" tabindex="-1"></a>        <span class="kw">padding</span>: <span class="dv">10</span><span class="dt">px</span><span class="op">;</span></span>
<span id="cb7-31"><a href="#cb7-31" aria-hidden="true" tabindex="-1"></a>        <span class="kw">background-color</span>: <span class="cn">#CEB992</span><span class="op">;</span></span>
<span id="cb7-32"><a href="#cb7-32" aria-hidden="true" tabindex="-1"></a>    &#125;</span>
<span id="cb7-33"><a href="#cb7-33" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb7-34"><a href="#cb7-34" aria-hidden="true" tabindex="-1"></a>    <span class="fu">.content</span> &#123;</span>
<span id="cb7-35"><a href="#cb7-35" aria-hidden="true" tabindex="-1"></a>        <span class="kw">padding</span>: <span class="dv">10</span><span class="dt">px</span><span class="op">;</span></span>
<span id="cb7-36"><a href="#cb7-36" aria-hidden="true" tabindex="-1"></a>        <span class="kw">min-height</span>: <span class="dv">400</span><span class="dt">px</span><span class="op">;</span></span>
<span id="cb7-37"><a href="#cb7-37" aria-hidden="true" tabindex="-1"></a>        <span class="kw">background-color</span>: <span class="cn">#5B2E48</span><span class="op">;</span></span>
<span id="cb7-38"><a href="#cb7-38" aria-hidden="true" tabindex="-1"></a>    &#125;</span>
<span id="cb7-39"><a href="#cb7-39" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb7-40"><a href="#cb7-40" aria-hidden="true" tabindex="-1"></a>    body &#123;</span>
<span id="cb7-41"><a href="#cb7-41" aria-hidden="true" tabindex="-1"></a>        <span class="kw">color</span>: <span class="cn">#FFF</span><span class="op">;</span></span>
<span id="cb7-42"><a href="#cb7-42" aria-hidden="true" tabindex="-1"></a>        <span class="kw">font-weight</span>: <span class="dv">500</span><span class="op">;</span></span>
<span id="cb7-43"><a href="#cb7-43" aria-hidden="true" tabindex="-1"></a>    &#125;</span>
<span id="cb7-44"><a href="#cb7-44" aria-hidden="true" tabindex="-1"></a><span class="kw">&lt;/style&gt;</span></span>
<span id="cb7-45"><a href="#cb7-45" aria-hidden="true" tabindex="-1"></a><span class="kw">&lt;script&gt;</span></span>
<span id="cb7-46"><a href="#cb7-46" aria-hidden="true" tabindex="-1"></a>    (<span class="kw">function</span> <span class="fu">warnSupport</span>() &#123;</span>
<span id="cb7-47"><a href="#cb7-47" aria-hidden="true" tabindex="-1"></a>        <span class="cf">if</span> (<span class="op">!</span><span class="bu">CSS</span> <span class="op">||</span> <span class="op">!</span><span class="bu">CSS</span><span class="op">.</span><span class="fu">supports</span>(<span class="st">'display'</span><span class="op">,</span> <span class="st">'grid'</span>)) &#123;</span>
<span id="cb7-48"><a href="#cb7-48" aria-hidden="true" tabindex="-1"></a>            <span class="fu">alert</span>(<span class="st">'Warning your Browser does not support the latests features. Consider switching to a newer one'</span>)</span>
<span id="cb7-49"><a href="#cb7-49" aria-hidden="true" tabindex="-1"></a>        &#125;</span>
<span id="cb7-50"><a href="#cb7-50" aria-hidden="true" tabindex="-1"></a>    &#125;)()<span class="op">;</span></span>
<span id="cb7-51"><a href="#cb7-51" aria-hidden="true" tabindex="-1"></a><span class="kw">&lt;/script&gt;</span></span>
<span id="cb7-52"><a href="#cb7-52" aria-hidden="true" tabindex="-1"></a><span class="kw">&lt;div</span> <span class="er">id</span><span class="ot">=</span><span class="st">"container"</span><span class="kw">&gt;</span></span>
<span id="cb7-53"><a href="#cb7-53" aria-hidden="true" tabindex="-1"></a>    <span class="kw">&lt;div</span> <span class="er">class</span><span class="ot">=</span><span class="st">"side1"</span><span class="kw">&gt;</span></span>
<span id="cb7-54"><a href="#cb7-54" aria-hidden="true" tabindex="-1"></a>        侧边栏</span>
<span id="cb7-55"><a href="#cb7-55" aria-hidden="true" tabindex="-1"></a>    <span class="kw">&lt;/div&gt;</span></span>
<span id="cb7-56"><a href="#cb7-56" aria-hidden="true" tabindex="-1"></a>    <span class="kw">&lt;div</span> <span class="er">class</span><span class="ot">=</span><span class="st">"content"</span><span class="kw">&gt;</span></span>
<span id="cb7-57"><a href="#cb7-57" aria-hidden="true" tabindex="-1"></a>        主要内容</span>
<span id="cb7-58"><a href="#cb7-58" aria-hidden="true" tabindex="-1"></a>    <span class="kw">&lt;/div&gt;</span></span>
<span id="cb7-59"><a href="#cb7-59" aria-hidden="true" tabindex="-1"></a>    <span class="kw">&lt;div</span> <span class="er">class</span><span class="ot">=</span><span class="st">"side2"</span><span class="kw">&gt;</span></span>
<span id="cb7-60"><a href="#cb7-60" aria-hidden="true" tabindex="-1"></a>        侧边栏</span>
<span id="cb7-61"><a href="#cb7-61" aria-hidden="true" tabindex="-1"></a>    <span class="kw">&lt;/div&gt;</span></span>
<span id="cb7-62"><a href="#cb7-62" aria-hidden="true" tabindex="-1"></a><span class="kw">&lt;/div&gt;</span></span>
<span id="cb7-63"><a href="#cb7-63" aria-hidden="true" tabindex="-1"></a><span class="kw">&lt;/body&gt;</span></span>
<span id="cb7-64"><a href="#cb7-64" aria-hidden="true" tabindex="-1"></a><span class="kw">&lt;/html&gt;</span></span></code></pre></div>
<p>这种后备方案虽然简单但是功能强大。在许多情况下它很有用 ——
毕竟我们可能无法对所有要使用的 Grid 功能都进行查询。</p>
<p>让我们用它从最新的 Grid 功能之一：<code>subgrid</code>
进行回退吧。我们应该如何使用呢？</p>
<p>让我们想象一下需要对嵌套的 Grid 模板列使用 <code>subgrid</code>
的场景，划重点：</p>
<div class="sourceCode" id="cb8"><pre class="sourceCode css"><code class="sourceCode css"><span id="cb8-1"><a href="#cb8-1" aria-hidden="true" tabindex="-1"></a><span class="pp">#content</span> &#123;</span>
<span id="cb8-2"><a href="#cb8-2" aria-hidden="true" tabindex="-1"></a>    <span class="kw">grid-template-columns</span>: <span class="bu">inherit</span><span class="op">;</span></span>
<span id="cb8-3"><a href="#cb8-3" aria-hidden="true" tabindex="-1"></a>    <span class="kw">grid-template-columns</span>: subgrid<span class="op">;</span></span>
<span id="cb8-4"><a href="#cb8-4" aria-hidden="true" tabindex="-1"></a>&#125;</span></code></pre></div>
<p>在此示例中，当不支持 <code>subgrid</code> 时候，它将仅继承父级的 Grid
定义。这将创建一个大致相似的布局。</p>
<p>这只是一个简单的例子。 我们可以将 <code>grid-template-columns</code>
微调到某些固定大小，或者在我们的特定情况下最适合的大小。</p>
<p>这是完整的示例：</p>
<div class="sourceCode" id="cb9"><pre class="sourceCode html"><code class="sourceCode html"><span id="cb9-1"><a href="#cb9-1" aria-hidden="true" tabindex="-1"></a><span class="dt">&lt;!DOCTYPE </span>html<span class="dt">&gt;</span></span>
<span id="cb9-2"><a href="#cb9-2" aria-hidden="true" tabindex="-1"></a><span class="kw">&lt;html</span> <span class="er">lang</span><span class="ot">=</span><span class="st">"en"</span><span class="kw">&gt;</span></span>
<span id="cb9-3"><a href="#cb9-3" aria-hidden="true" tabindex="-1"></a><span class="kw">&lt;head&gt;</span></span>
<span id="cb9-4"><a href="#cb9-4" aria-hidden="true" tabindex="-1"></a>    <span class="kw">&lt;title&gt;</span>Grid 案例<span class="kw">&lt;/title&gt;</span></span>
<span id="cb9-5"><a href="#cb9-5" aria-hidden="true" tabindex="-1"></a>    <span class="kw">&lt;meta</span> <span class="er">charset</span><span class="ot">=</span><span class="st">"UTF-8"</span><span class="kw">/&gt;</span></span>
<span id="cb9-6"><a href="#cb9-6" aria-hidden="true" tabindex="-1"></a><span class="kw">&lt;/head&gt;</span></span>
<span id="cb9-7"><a href="#cb9-7" aria-hidden="true" tabindex="-1"></a><span class="kw">&lt;body&gt;</span></span>
<span id="cb9-8"><a href="#cb9-8" aria-hidden="true" tabindex="-1"></a><span class="kw">&lt;style&gt;</span></span>
<span id="cb9-9"><a href="#cb9-9" aria-hidden="true" tabindex="-1"></a>    body &#123;</span>
<span id="cb9-10"><a href="#cb9-10" aria-hidden="true" tabindex="-1"></a>        <span class="kw">color</span>: <span class="cn">white</span><span class="op">;</span></span>
<span id="cb9-11"><a href="#cb9-11" aria-hidden="true" tabindex="-1"></a>        <span class="kw">text-align</span>: <span class="dv">center</span><span class="op">;</span></span>
<span id="cb9-12"><a href="#cb9-12" aria-hidden="true" tabindex="-1"></a>        <span class="kw">box-sizing</span>: <span class="dv">content-box</span><span class="op">;</span></span>
<span id="cb9-13"><a href="#cb9-13" aria-hidden="true" tabindex="-1"></a>        <span class="kw">margin</span>: <span class="dv">20</span><span class="dt">px</span><span class="op">;</span></span>
<span id="cb9-14"><a href="#cb9-14" aria-hidden="true" tabindex="-1"></a>    &#125;</span>
<span id="cb9-15"><a href="#cb9-15" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb9-16"><a href="#cb9-16" aria-hidden="true" tabindex="-1"></a>    <span class="fu">.palette-1</span> &#123;</span>
<span id="cb9-17"><a href="#cb9-17" aria-hidden="true" tabindex="-1"></a>        <span class="kw">background-color</span>: <span class="cn">#CEB992</span><span class="op">;</span></span>
<span id="cb9-18"><a href="#cb9-18" aria-hidden="true" tabindex="-1"></a>    &#125;</span>
<span id="cb9-19"><a href="#cb9-19" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb9-20"><a href="#cb9-20" aria-hidden="true" tabindex="-1"></a>    <span class="fu">.palette-2</span> &#123;</span>
<span id="cb9-21"><a href="#cb9-21" aria-hidden="true" tabindex="-1"></a>        <span class="kw">background-color</span>: <span class="cn">#471323</span><span class="op">;</span></span>
<span id="cb9-22"><a href="#cb9-22" aria-hidden="true" tabindex="-1"></a>    &#125;</span>
<span id="cb9-23"><a href="#cb9-23" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb9-24"><a href="#cb9-24" aria-hidden="true" tabindex="-1"></a>    <span class="fu">.palette-3</span> &#123;</span>
<span id="cb9-25"><a href="#cb9-25" aria-hidden="true" tabindex="-1"></a>        <span class="kw">background-color</span>: <span class="cn">#73937E</span><span class="op">;</span></span>
<span id="cb9-26"><a href="#cb9-26" aria-hidden="true" tabindex="-1"></a>    &#125;</span>
<span id="cb9-27"><a href="#cb9-27" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb9-28"><a href="#cb9-28" aria-hidden="true" tabindex="-1"></a>    <span class="fu">.palette-4</span> &#123;</span>
<span id="cb9-29"><a href="#cb9-29" aria-hidden="true" tabindex="-1"></a>        <span class="kw">background-color</span>: <span class="cn">#5B2E48</span><span class="op">;</span></span>
<span id="cb9-30"><a href="#cb9-30" aria-hidden="true" tabindex="-1"></a>    &#125;</span>
<span id="cb9-31"><a href="#cb9-31" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb9-32"><a href="#cb9-32" aria-hidden="true" tabindex="-1"></a>    <span class="fu">.palette-5</span> &#123;</span>
<span id="cb9-33"><a href="#cb9-33" aria-hidden="true" tabindex="-1"></a>        <span class="kw">background-color</span>: <span class="cn">#585563</span><span class="op">;</span></span>
<span id="cb9-34"><a href="#cb9-34" aria-hidden="true" tabindex="-1"></a>    &#125;</span>
<span id="cb9-35"><a href="#cb9-35" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb9-36"><a href="#cb9-36" aria-hidden="true" tabindex="-1"></a>    <span class="pp">#container</span> &#123;</span>
<span id="cb9-37"><a href="#cb9-37" aria-hidden="true" tabindex="-1"></a>        <span class="kw">padding</span>: <span class="dv">10</span><span class="dt">px</span><span class="op">;</span></span>
<span id="cb9-38"><a href="#cb9-38" aria-hidden="true" tabindex="-1"></a>        <span class="kw">background-color</span>: <span class="cn">#73937E</span><span class="op">;</span></span>
<span id="cb9-39"><a href="#cb9-39" aria-hidden="true" tabindex="-1"></a>        <span class="kw">height</span>: <span class="dv">500</span><span class="dt">px</span><span class="op">;</span></span>
<span id="cb9-40"><a href="#cb9-40" aria-hidden="true" tabindex="-1"></a>        <span class="kw">width</span>: <span class="fu">calc(</span><span class="dv">100</span><span class="dt">vw</span> <span class="op">-</span> <span class="dv">60</span><span class="dt">px</span><span class="fu">)</span><span class="op">;</span></span>
<span id="cb9-41"><a href="#cb9-41" aria-hidden="true" tabindex="-1"></a>        <span class="kw">display</span>: grid<span class="op">;</span></span>
<span id="cb9-42"><a href="#cb9-42" aria-hidden="true" tabindex="-1"></a>        <span class="kw">grid-template-rows</span>: <span class="fu">repeat(</span><span class="dv">8</span><span class="op">,</span> <span class="dv">1</span>fr<span class="fu">)</span><span class="op">;</span></span>
<span id="cb9-43"><a href="#cb9-43" aria-hidden="true" tabindex="-1"></a>        <span class="kw">grid-template-columns</span>: max-content <span class="dv">1</span>fr <span class="dv">1</span>fr <span class="dv">1</span>fr<span class="op">;</span></span>
<span id="cb9-44"><a href="#cb9-44" aria-hidden="true" tabindex="-1"></a>        <span class="kw">row-gap</span>: <span class="dv">1</span><span class="dt">rem</span><span class="op">;</span></span>
<span id="cb9-45"><a href="#cb9-45" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb9-46"><a href="#cb9-46" aria-hidden="true" tabindex="-1"></a>    &#125;</span>
<span id="cb9-47"><a href="#cb9-47" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb9-48"><a href="#cb9-48" aria-hidden="true" tabindex="-1"></a>    <span class="fu">.item</span> &#123;</span>
<span id="cb9-49"><a href="#cb9-49" aria-hidden="true" tabindex="-1"></a>        <span class="kw">padding</span>: <span class="dv">20</span><span class="dt">px</span><span class="op">;</span></span>
<span id="cb9-50"><a href="#cb9-50" aria-hidden="true" tabindex="-1"></a>    &#125;</span>
<span id="cb9-51"><a href="#cb9-51" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb9-52"><a href="#cb9-52" aria-hidden="true" tabindex="-1"></a>    <span class="fu">.content-main</span> &#123;</span>
<span id="cb9-53"><a href="#cb9-53" aria-hidden="true" tabindex="-1"></a>        <span class="kw">grid-column</span>: span <span class="dv">3</span><span class="op">;</span></span>
<span id="cb9-54"><a href="#cb9-54" aria-hidden="true" tabindex="-1"></a>    &#125;</span>
<span id="cb9-55"><a href="#cb9-55" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb9-56"><a href="#cb9-56" aria-hidden="true" tabindex="-1"></a>    <span class="pp">#content</span> &#123;</span>
<span id="cb9-57"><a href="#cb9-57" aria-hidden="true" tabindex="-1"></a>        <span class="kw">background-color</span>: <span class="cn">#73937E</span><span class="op">;</span></span>
<span id="cb9-58"><a href="#cb9-58" aria-hidden="true" tabindex="-1"></a>        <span class="kw">grid-column</span>: <span class="dv">1</span> / <span class="dv">-1</span><span class="op">;</span></span>
<span id="cb9-59"><a href="#cb9-59" aria-hidden="true" tabindex="-1"></a>        <span class="kw">display</span>: grid<span class="op">;</span></span>
<span id="cb9-60"><a href="#cb9-60" aria-hidden="true" tabindex="-1"></a>        <span class="kw">grid-template-columns</span>: <span class="bu">inherit</span><span class="op">;</span></span>
<span id="cb9-61"><a href="#cb9-61" aria-hidden="true" tabindex="-1"></a>        <span class="kw">grid-template-columns</span>: subgrid<span class="op">;</span></span>
<span id="cb9-62"><a href="#cb9-62" aria-hidden="true" tabindex="-1"></a>        <span class="kw">column-gap</span>: <span class="dv">1</span><span class="dt">rem</span><span class="op">;</span></span>
<span id="cb9-63"><a href="#cb9-63" aria-hidden="true" tabindex="-1"></a>    &#125;</span>
<span id="cb9-64"><a href="#cb9-64" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb9-65"><a href="#cb9-65" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb9-66"><a href="#cb9-66" aria-hidden="true" tabindex="-1"></a><span class="kw">&lt;/style&gt;</span></span>
<span id="cb9-67"><a href="#cb9-67" aria-hidden="true" tabindex="-1"></a><span class="kw">&lt;div</span> <span class="er">id</span><span class="ot">=</span><span class="st">"container"</span><span class="kw">&gt;</span></span>
<span id="cb9-68"><a href="#cb9-68" aria-hidden="true" tabindex="-1"></a>    <span class="kw">&lt;div</span> <span class="er">id</span><span class="ot">=</span><span class="st">"content"</span><span class="kw">&gt;</span></span>
<span id="cb9-69"><a href="#cb9-69" aria-hidden="true" tabindex="-1"></a>        <span class="kw">&lt;div</span> <span class="er">class</span><span class="ot">=</span><span class="st">"content-left item palette-5"</span><span class="kw">&gt;</span></span>
<span id="cb9-70"><a href="#cb9-70" aria-hidden="true" tabindex="-1"></a>            标题</span>
<span id="cb9-71"><a href="#cb9-71" aria-hidden="true" tabindex="-1"></a>        <span class="kw">&lt;/div&gt;</span></span>
<span id="cb9-72"><a href="#cb9-72" aria-hidden="true" tabindex="-1"></a>        <span class="kw">&lt;div</span> <span class="er">class</span><span class="ot">=</span><span class="st">"content-main item palette-4"</span><span class="kw">&gt;</span></span>
<span id="cb9-73"><a href="#cb9-73" aria-hidden="true" tabindex="-1"></a>        <span class="kw">&lt;/div&gt;</span></span>
<span id="cb9-74"><a href="#cb9-74" aria-hidden="true" tabindex="-1"></a>    <span class="kw">&lt;/div&gt;</span></span>
<span id="cb9-75"><a href="#cb9-75" aria-hidden="true" tabindex="-1"></a>    <span class="kw">&lt;div</span> <span class="er">id</span><span class="ot">=</span><span class="st">"content"</span><span class="kw">&gt;</span></span>
<span id="cb9-76"><a href="#cb9-76" aria-hidden="true" tabindex="-1"></a>        <span class="kw">&lt;div</span> <span class="er">class</span><span class="ot">=</span><span class="st">"content-left item palette-5"</span><span class="kw">&gt;</span></span>
<span id="cb9-77"><a href="#cb9-77" aria-hidden="true" tabindex="-1"></a>            另一个标题</span>
<span id="cb9-78"><a href="#cb9-78" aria-hidden="true" tabindex="-1"></a>        <span class="kw">&lt;/div&gt;</span></span>
<span id="cb9-79"><a href="#cb9-79" aria-hidden="true" tabindex="-1"></a>        <span class="kw">&lt;div</span> <span class="er">class</span><span class="ot">=</span><span class="st">"content-main item palette-4"</span><span class="kw">&gt;</span></span>
<span id="cb9-80"><a href="#cb9-80" aria-hidden="true" tabindex="-1"></a>        <span class="kw">&lt;/div&gt;</span></span>
<span id="cb9-81"><a href="#cb9-81" aria-hidden="true" tabindex="-1"></a>    <span class="kw">&lt;/div&gt;</span></span>
<span id="cb9-82"><a href="#cb9-82" aria-hidden="true" tabindex="-1"></a><span class="kw">&lt;/div&gt;</span></span>
<span id="cb9-83"><a href="#cb9-83" aria-hidden="true" tabindex="-1"></a><span class="kw">&lt;/script&gt;</span></span>
<span id="cb9-84"><a href="#cb9-84" aria-hidden="true" tabindex="-1"></a><span class="kw">&lt;/body&gt;</span></span>
<span id="cb9-85"><a href="#cb9-85" aria-hidden="true" tabindex="-1"></a><span class="kw">&lt;/html&gt;</span></span></code></pre></div>
<p>至于结果：</p>
<figure>
<img src="https://cdn-images-1.medium.com/max/2000/1*vk89GdczF9r3hEZI6841gw.png" alt="subgrid 可用时">
<figcaption aria-hidden="true"><code>subgrid</code> 可用时</figcaption>
</figure>
<figure>
<img src="https://cdn-images-1.medium.com/max/2000/1*j8rPVYjENApqFPg--2Be_A.png" alt="subgrid 不可用时">
<figcaption aria-hidden="true"><code>subgrid</code>
不可用时</figcaption>
</figure>
<p>如你所见，结果看起来是完全一致的，但其实只是非常相似而已，这就是我们的目标。随着越来越多的浏览器采用
<code>subgrid</code>，更多的用户都可以看到布局的像素级完美版本！</p>
<h2 id="结论">结论</h2>
<p>Grid 和 Flexbox 旨在解决不同的情况。我们无法一直使用 Flexbox
构建所有布局，因为仍然有少数浏览器不支持它。</p>
<p>从 Flexbox 升级到 Grid
并不意味着布局在旧设备上突然失效。在本文中，我们探讨了构建渐进式布局有多么容易和有趣。正如我们在一开始所看到的那样，制定一项如何进行的策略非常重要。</p>
<p>这些策略不仅仅是为了添加基本的 Grid
功能。只要我们提供合理的后备方案，我们就可以利用诸如
<code>subgrid</code> 之类的最新功能。</p>
<p>我希望这能鼓励你在需要时去生产环境中逐渐应用
Grid。现在，我们不必再躲在 Flexbox 后面了！</p>]]></content>
      <categories>
        <category>Computer Science</category>
        <category>Frontend</category>
        <category>Styling</category>
      </categories>
      <tags>
        <tag>Computer Science</tag>
        <tag>UI</tag>
        <tag>Frontend</tag>
        <tag>CSS</tag>
      </tags>
  </entry>
  <entry>
    <title>Raspberry Pi 九岁啦：你可能不知道的 9 件事</title>
    <url>/2021/03/14/computer%20science/misc/raspberry-pi%E2%80%99s-ninth-birthday-9-things-you-might-not-know/</url>
    <content><![CDATA[<blockquote>
<ul>
<li>原文地址：<a href="https://www.tomshardware.com/news/raspberry-pi-9th-birthday">Raspberry
Pi’s Ninth Birthday: 9 Things You Might Not Know</a></li>
<li>原文作者：<a href="https://www.tomshardware.com/author/avram-piltch">Avram
Piltch</a></li>
<li>译者：<a href="https://github.com/PassionPenguin">霜羽
Hoarfroster</a></li>
<li>校对者：<a href="https://github.com/husiyu">husiyu</a>，<a href="https://github.com/Chorer">Chorer</a></li>
</ul>
</blockquote>
<blockquote>
<p>Rasp Pi 最初发布于 2012 年 2 月 29 日</p>
</blockquote>
<figure>
<img src="https://cdn.mos.cms.futurecdn.net/6ZQFRzwTBSXoWUpD5qY6oD-1024-80.jpg" alt="图源 Shutterstock">
<figcaption aria-hidden="true">图源 Shutterstock</figcaption>
</figure>
<p>Raspberry Pi（树莓派）是世界上最受欢迎和最具创新的计算机系列之一，于
2012 年 2 月 29 日正式推出。九年来，一共售出了 3,800
万台树莓派。它们为庞大的制造商、学生和企业群体提供了动力。这最初只是一个小项目，旨在促进剑桥大学的计算机科学教育，但现在已经流行于全球。</p>
<p>每个真正的技术爱好者都应该拥有至少一台树莓派，或者，你也可以像我一样，拥有
30 台树莓派。我们可以将其用作轻型 PC、<a href="https://www.tomshardware.com/how-to/install-retropie-raspberry-pi-4">复古街机</a>，或为各种项目提供动力，从
<a href="https://www.tomshardware.com/how-to/raspberry-pi-security-camera">家庭安全摄像头</a>
到 <a href="https://www.tomshardware.com/news/this-raspberry-pi-robot-plays-tic-tac-toe-so-you-never-play-alone">井字游戏机器人</a>、<a href="https://www.tomshardware.com/news/clean-your-room-with-this-raspberry-pi-trash-delivery-bot">自动运送垃圾的运输机器人</a>
或是<a href="https://www.tomshardware.com/how-to/raspberry-pi-plex-ubuntu">流媒体服务器</a>。</p>
<p>不如我们借此机会介绍有关树莓派的 9
个小知识，以庆祝树莓派的九岁生日吧！</p>
<h2 id="树莓派的最初销售目标仅为-1000-台">1. 树莓派的最初销售目标仅为
1,000 台</h2>
<p>树莓派最初是为解决一个非常局限的问题而开发的：剑桥大学申请计算机科学系的人数正在减少
—— 申请简历的数量从每年 600 个减少到每年 250
个。负责教学及招生工作的埃本·厄普顿（Eben
Upton）担心没有足够的孩子对计算机感兴趣，于是，为了吸引更多能力更好的学生，厄普顿为一小部分英国孩子提供了一个低成本、易修改的计算机（从而培养他们对计算机的兴趣）。</p>
<p>他在 <a href="https://www.tomshardware.com/news/raspberry-pi-founder-interview,38585.html">2019
年的采访中</a>告诉我们：“我们正在设计的东西，在商业领域围绕着这样的想法，即如果你可以生产
1000 台树莓派，并交付到合适的 1000 个孩子的手中，你就可以解决问题。”</p>
<p>在人们对该项目的兴趣激增之后，厄普顿和他的团队决定他们要生产 1000
多台树莓派，目标受众从英国的儿童扩展到了所有国家、地区的所有年龄段的人群。</p>
<h2 id="至少有-21-种不同模型的树莓派">2. 至少有 21
种不同模型的树莓派</h2>
<figure>
<img src="https://cdn.mos.cms.futurecdn.net/XHXfSH8nZXpXphx6XVUo6j-970-80.jpg" alt="图源 Shutterstock">
<figcaption aria-hidden="true">图源 Shutterstock</figcaption>
</figure>
<p>自 2012 年推出以来，树莓派基金会已经发布了 20
种其他的型号。而如果算上树莓派 4B 的 4 种 RAM 容量和树莓派计算模块 4 的
32 种型号（不同的 RAM 和存储容量，以及是否有 Wi-Fi），那么一共就有 52
种型号。</p>
<p>最初的树莓派 B 型只拥有 256MB 的 RAM 和一个单核 700MHz
处理器，而当前的主流型号树莓派 4B 则具有高达 8GB 的 RAM，四核 1.5GHz 的
CPU 和 USB 3.0 的端口。</p>
<table>
<colgroup>
<col style="width: 25%">
<col style="width: 25%">
<col style="width: 25%">
<col style="width: 25%">
</colgroup>
<thead>
<tr class="header">
<th>模型</th>
<th>发行年份</th>
<th>中央处理器</th>
<th>内存</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>树莓派 1B</td>
<td>2012 年</td>
<td>700 MHz Broadcom BCM2835（1 核）</td>
<td>256MB</td>
</tr>
<tr class="even">
<td>树莓派 1A</td>
<td>2013 年</td>
<td>700 MHz Broadcom BCM2835（1 核）</td>
<td>256MB</td>
</tr>
<tr class="odd">
<td>树莓派 1A+</td>
<td>2014 年</td>
<td>700 MHz Broadcom BCM2835（1 核）</td>
<td>512MB</td>
</tr>
<tr class="even">
<td>树莓派 1B+</td>
<td>2014 年</td>
<td>700 MHz Broadcom BCM2835（1 核）</td>
<td>512MB</td>
</tr>
<tr class="odd">
<td>计算模块 1</td>
<td>2014 年</td>
<td>700 MHz Broadcom BCM2835（1 核）</td>
<td>512MB</td>
</tr>
<tr class="even">
<td>树莓派 2B</td>
<td>2015 年</td>
<td>900 MHz Broadcom BCM2836（4 核）</td>
<td>1GB</td>
</tr>
<tr class="odd">
<td>树莓派 Zero 1.2</td>
<td>2015 年</td>
<td>1 GHz Broadcom BCM2835（1 核）</td>
<td>512MB</td>
</tr>
<tr class="even">
<td>树莓派 2B v1.2</td>
<td>2016 年</td>
<td>1 GHz Broadcom BCM2835（1 核）</td>
<td>512MB</td>
</tr>
<tr class="odd">
<td>树莓派 3B</td>
<td>2016 年</td>
<td>1.2 GHz Broadcom BCM2837（4 核）</td>
<td>1GB</td>
</tr>
<tr class="even">
<td>树莓派 Zero 1.3</td>
<td>2016 年</td>
<td>1 GHz Broadcom BCM2835（1 核）</td>
<td>512MB</td>
</tr>
<tr class="odd">
<td>树莓派 Zero W</td>
<td>2017 年</td>
<td>1 GHz Broadcom BCM2835（1 核）</td>
<td>512MB</td>
</tr>
<tr class="even">
<td>计算模块 3</td>
<td>2017 年</td>
<td>1.2 GHz Broadcom BCM2837（4 核）</td>
<td>1GB</td>
</tr>
<tr class="odd">
<td>计算模块 3 精简版</td>
<td>2017 年</td>
<td>1.2 GHz Broadcom BCM2837（4 核）</td>
<td>1GB</td>
</tr>
<tr class="even">
<td>树莓派 3B+</td>
<td>2018 年</td>
<td>1.2 GHz Broadcom BCM2837（4 核）</td>
<td>1GB</td>
</tr>
<tr class="odd">
<td>计算模块 3+</td>
<td>2019 年</td>
<td>1.2 GHz Broadcom BCM2837B0（4 核）</td>
<td>1GB</td>
</tr>
<tr class="even">
<td>计算模块 3+ Lite</td>
<td>2019 年</td>
<td>1.2 GHz Broadcom BCM2837B0（4 核）</td>
<td>1GB</td>
</tr>
<tr class="odd">
<td>树莓派 4B</td>
<td>2019 年</td>
<td>1.5 GHz Broadcom BCM2711</td>
<td>1/2/4 / 8GB（2020）</td>
</tr>
<tr class="even">
<td>计算模块 4</td>
<td>2020 年</td>
<td>1.5 GHz Broadcom BCM2711</td>
<td>1/2/4 / 8GB</td>
</tr>
<tr class="odd">
<td>树莓派 400</td>
<td>2020 年</td>
<td>1.8 GHz Broadcom BCM2711</td>
<td>4GB</td>
</tr>
<tr class="even">
<td>树莓派 Pico</td>
<td>2021 年</td>
<td>133 MHz RP2040</td>
<td>264K</td>
</tr>
</tbody>
</table>
<p><a href="https://www.tomshardware.com/news/raspberry-pi-400-review-faster-cpu-new-layout-better-thermals">树莓派
400</a> 于 2020 年末推出，是树莓派发行的第一台独立计算机。尽管 CPU 是
1.8GHz 而不是 1.5GHz，但树莓派 400
取代了裸板，成了一个内部集成了与树莓派 4
一样的系统的键盘。它可以单独被购买，也可以与鼠标、电源、电缆和官方指南配套使用。</p>
<p>树莓派 Pico
是一种完全不同的树莓派变种。它是一种微控制器板，而与传统的树莓派相比，它更像是
Arduino（更多内容见下文）。</p>
<h2 id="树莓派-pico-翻开了树莓派历史的新篇章">3. 树莓派 Pico
翻开了树莓派历史的新篇章</h2>
<figure>
<img src="https://cdn.mos.cms.futurecdn.net/DvmyRVRnKSQdcvLbKjddNP-970-80.jpg" alt="图源 汤姆的硬件">
<figcaption aria-hidden="true">图源 汤姆的硬件</figcaption>
</figure>
<p><a href="https://www.tomshardware.com/news/raspberry-pi-pico-tutorials-pinout-everything-you-need-to-know">树莓派
Pico</a> 于 2021 年 1
月发布，是该公司的首款微控制器，也标志着其首款定制芯片 RP2040 CPU
的首次亮相。以前的每个树莓派都是一台可以启动到通常为 Linux
的操作系统的功能齐全的计算机，而售价 4 美元的 Pico 则属于与 Arduino
相同的种类。Pico
非常适合用于控制电动机、灯光和传感器，并会在打开电源后立即运行程序，而无需等待启动，也无需担心在不安全关闭的情况下拔下插头会丢失数据的问题。</p>
<p>Pico 具有三个内置的
ADC（模数转换器），这是其他树莓派型号所不具备的。这些转换器让我们可以直接连接至模拟设备，例如操纵杆、电位计和距离传感器。请参阅我们有关<a href="https://www.tomshardware.com/features/raspberry-pi-pico-vs-arduino">树莓派
Pico 与 Arduino</a> 的文章，以及<a href="https://www.tomshardware.com/how-to/raspberry-pi-buying-guide">哪款树莓派最适合你</a>，以获取
Pico、Arduino 和其他树莓派之间更详细的比较。</p>
<p>Pico 的 RP2040 芯片比板子本身具有更大的升级。这款 133MHz 双核 Cortex
M0+ CPU 是由树莓派基金会设计的，并授权给了其他的供应商，例如 Pimoroni 和
Adafruit。他们自己构建了由 RP2040 驱动的微控制器的整个生态系统。甚至
Arduino 也参与其中，发布了 Arduino Nano RP2040 Connect，它将具有内置的
Wi-Fi 和蓝牙功能。</p>
<h2 id="最畅销的树莓派是">4. 最畅销的树莓派是……</h2>
<figure>
<img src="https://cdn.mos.cms.futurecdn.net/2UNMCmHhhnSk9jfp36UXMZ-970-80.jpg.webp" alt="图源 Shutterstock">
<figcaption aria-hidden="true">图源 Shutterstock</figcaption>
</figure>
<p>树莓派 3B 是有史以来最畅销的机型，目前已累计售出 1320
万台。在各种树莓派 4B RAM 容量中，4GB 型号的销量量大约是 8GB 和 2GB SKU
的两倍。</p>
<p>Pico 仅在市场上销售了几周，但已经售出了 25 万台，还有 75
万台处于延迟交付状态。2020 年是树莓派销量最高的一年，一共售出了 710
万台树莓派机器。</p>
<h2 id="树莓派有-20-多个操作系统">5. 树莓派有 20 多个操作系统</h2>
<p>树莓派 OS 是 Debian
的定制版本，是树莓派的官方操作系统，但到目前为止，它并不是唯一的选择。从适用于树莓派的
Ubuntu 和 FreeBSD Linux 版本到非官方的 Android 和
ChromeOS，我们可以使用大量不同的操作系统。最有趣的一些系统包括：</p>
<ul>
<li><strong><a href="https://libreelec.tv/downloads_new/">LibreELEC</a></strong>：运行
Kodi 开源媒体软件的轻量级操作系统。</li>
<li><strong><a href="https://www.riscosopen.org/content/downloads/raspberry-pi">RISC
OS</a></strong>：此独特的操作系统专为 ARM 芯片而设计，声称有比 Linux
更快的运行速度。</li>
<li><strong><a href="https://github.com/FydeOS/chromium_os-raspberry_pi">Chromium
OS</a></strong>：将我们的树莓派变成 Chrome Box。</li>
<li><strong>Windows 10</strong>：是的！我们可以<a href="https://www.tomshardware.com/how-to/install-windows-10-raspberry-pi">在树莓派
4 上安装 Windows
10</a>（需要一些技巧），但是它实在是太慢了，我觉得你可能不想继续让它运行
Windows 10。</li>
<li><strong>Lakka</strong>：此操作系统专为复古游戏而设计，预装了一系列的模拟器。</li>
</ul>
<h2 id="有两个树莓派在天上飞">6. 有两个树莓派在天上飞</h2>
<p>国际空间站有两个 <a href="https://www.raspberrypi.org/education/programmes/astro-pi/">Astro
Pis</a>，一种经过特别改良的树莓派 B+
型号。这两个机器经过了“空间改造”（以适应太空环境），并配备了官方的树莓派
Sense HAT
传感器附加板。欧洲航天局举办定期竞赛，孩子们可以提交代码并在这些设备上运行。</p>
<p>尽管 Pis 是较旧的型号，但他们最近进行了存储升级，Astro Pi 项目<a href="https://twitter.com/astro_pi/status/1365315688034799622">向国际空间站发送了
256GB 的 microSD 卡</a>以替换其正在使用的 32GB 卡。</p>
<h2 id="树莓派基金会希望产品永远存在">7.
树莓派基金会希望产品永远存在</h2>
<p>即使树莓派 B+、树莓派 2、树莓派 3B
和其他的一些型号已经过时了，树莓派基金会仍会继续积极进行制造和销售。该组织不愿接受报废（EOL，End-of-Life）产品，因为有些工业客户仍然会需要使用这些机器，而不在乎它是否过时。</p>
<p>厄普顿在 2019
年告诉我们：“将产品停产就是意味着它的死亡。我们目前仅停产了 5
种产品。”他还说，树莓派停产的仅有的 5 种型号包括树莓派 1A 和树莓派
1B，因为树莓派 1A+ 和 B+ 是更好的替代品。”</p>
<p>即使在树莓派 4B（2GB）的价格降至 35
美元之后，仍然可以用原来的价格购入 1GB
型号，因为某些客户可能仍希望将其作为即插即用的替代产品。</p>
<h2 id="相对于通货膨胀树莓派的价格反而有所下降">8.
相对于通货膨胀，树莓派的价格反而有所下降</h2>
<p>最初的树莓派在 2012 年的价格为 35 美元，与今天树莓派
4B（2GB）的价格相同。但是，如果考虑通货膨胀，2012 年的 35
美元实际上相当于今天的 39.88 美元。以相同的价格，你将获得：</p>
<ul>
<li>快 40 倍的处理器（1.5GHz 四核 vs 700 MHz 单核 ）</li>
<li>原来 RAM 容量的 8 次方倍（256GB vs 2GB）</li>
<li>有了 Wi-Fi</li>
<li>双监视器输出 vs 单 HDMI 输出</li>
<li>USB 3.0 端口 vs 只支持 USB 2</li>
</ul>
<p>如果说 35 美元仍然挺贵的，那么还有便宜些的树莓派型号供你选择。树莓派
Zero 仅售 5 美元，而树莓派 Pico 微控制器板仅售 4 美元。</p>
<h2 id="每年都有一场树莓派竞赛">9. 每年都有一场树莓派竞赛</h2>
<p>是的，我们可以参与树莓派竞赛。<a href="https://piwars.org/">树莓派竞赛（Pi
Wars）</a>是一年一度的机器人竞赛。在这个比赛中，我们必须使用树莓派来完成所有装备的构建。参与树莓派竞赛的团队需要在各种挑战中相互竞争，例如导航障碍物路线、弹出气球和导航迷宫。</p>
<p>在树莓派竞赛中，既有人力驱动的挑战，也有自动化的挑战。下一场树莓派大战将于
2021 年的 7 月举行。</p>]]></content>
      <categories>
        <category>Computer Science</category>
        <category>Misc</category>
      </categories>
      <tags>
        <tag>Computer Science</tag>
        <tag>Raspberry Pi</tag>
        <tag>Raspberry</tag>
      </tags>
  </entry>
  <entry>
    <title>在 Flutter 项目中使用 Lottie 构建原生 Splash 启动页</title>
    <url>/2021/03/13/computer%20science/dart/native-splash-screen-in-flutter-using-lottie/</url>
    <content><![CDATA[<blockquote>
<ul>
<li>原文地址：<a href="https://medium.com/swlh/native-splash-screen-in-flutter-using-lottie-121ce2b9b0a4">Native
Splash Screen in Flutter Using Lottie</a></li>
<li>原文作者：<a href="https://medium.com/@elaziz-shehadeh">AbedElaziz
Shehadeh</a></li>
<li>译者：<a href="https://github.com/PassionPenguin">霜羽
Hoarfroster</a></li>
<li>校对者：<a href="https://github.com/zenblo">zenblo</a>、<a href="https://github.com/keepmovingljzy">keepmovingljzy</a></li>
</ul>
</blockquote>
<p><img src="https://cdn-images-1.medium.com/max/2400/1*4vlkTJCWbP2Kh2vyK9BdEw.png"></p>
<p>我们当然可以直接使用 Dart 代码为 Flutter
应用程序添加动画启动效果，但是，Flutter 应用程序在 Android 和 iOS 中以
FlutterActivity 或 FlutterViewController 的形式启动，会让 Flutter
应用程序在实际绘制第一帧之前已经耗费了一段时间。因此，在应用启动时设置启动画面将会带来更好的用户体验。</p>
<p>值得一提的是，在 Flutter 的官方<a href="https://flutter.dev/docs/development/ui/advanced/splash-screen">文档</a>中我们可以轻松地将静态图像添加为启动页，并且这个页面上面有充足的文档信息提供给我们使用。我们事实上只需将图像添加到
Android 的 drawable 文件夹中和 iOS 的资源文件夹中，然后在 Android 的
<code>styles.xml</code> 和 iOS 的 <code>LaunchScreen.storyboard</code>
中使用它们即可。但是，在针对如何使用 Lottie
等其他库实现应用程序启动页面动画的功能，我并不能找到相关的参考资料，而这些就是我将在本文中讲述的内容。</p>
<h2 id="为什么我们要使用-lottie">为什么我们要使用 Lottie?</h2>
<p><a href="https://airbnb.io/lottie/#/">Lottie</a>
是一个支持多平台（包括 Android 与 iOS）的库，用于通过 <a href="https://github.com/airbnb/lottie-web">Bodymovin</a> 解析 <a href="http://www.adobe.com/products/aftereffects.html">Adobe After
Effects</a> 导出的 JSON
格式的动画，并以本地方式呈现。这意味着动画是由专业的设计人员设计的，并使用的是
<strong>JSON</strong>
文件导出，让我们开发人员无需再额外付出什么努力，轻轻松松完成动画的渲染。在本教程中，我们将使用由
LottieFiles 创建的免费示例文件，可以在<a href="https://lottiefiles.com/38237-thanksgiving-cornucopia">这里</a>中找到该原文件。让我们开始我们的
Flutter + Lottie 之旅吧。</p>
<p>首先让我们先创建一个新的 Flutter 项目，然后执行以下步骤：</p>
<h2 id="android">Android</h2>
<ol type="1">
<li>先添加 Lottie 依赖到你的项目的 <code>app/build.gradle</code>
文件中（相对于 Flutter 应用程序则是
<code>android/app/build.gradle</code> 文件）（在这里我也同样添加了
Constraint Layout）</li>
</ol>
<div class="sourceCode" id="cb1"><pre class="sourceCode groovy"><code class="sourceCode groovy"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a>dependencies <span class="op">&#123;</span></span>
<span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a>   <span class="op">...</span></span>
<span id="cb1-3"><a href="#cb1-3" aria-hidden="true" tabindex="-1"></a>   <span class="fu">implementation</span> <span class="st">"com.airbnb.android:lottie:3.5.0"</span> # 当前版本 <span class="fl">3.6.0</span></span>
<span id="cb1-4"><a href="#cb1-4" aria-hidden="true" tabindex="-1"></a>   implementation <span class="st">"androidx.constraintlayout:constraintlayout:2.0.4"</span></span>
<span id="cb1-5"><a href="#cb1-5" aria-hidden="true" tabindex="-1"></a>   # 译者注：原文为 implementation <span class="st">"com.android.support.constraint:constraint-layout:2.0.4"</span> 但 Lottie <span class="fl">2.8</span><span class="op">+</span> 只支持 AndroidX 项目</span>
<span id="cb1-6"><a href="#cb1-6" aria-hidden="true" tabindex="-1"></a>   <span class="op">...</span></span>
<span id="cb1-7"><a href="#cb1-7" aria-hidden="true" tabindex="-1"></a><span class="op">&#125;</span></span></code></pre></div>
<ol start="2" type="1">
<li>在 <code>AndroidManifest.xml</code> 中删去 <code>name</code> 为
io.flutter.embedding.android.SplashScreenDrawable 的
<code>&lt;meta-data&gt;</code> 标记并替换 <code>activity</code>
标签下面的 <code>LaunchTheme</code> 为
<code>NormalTheme</code>，现在你的文件是这样的：</li>
</ol>
<div class="sourceCode" id="cb2"><pre class="sourceCode xml"><code class="sourceCode xml"><span id="cb2-1"><a href="#cb2-1" aria-hidden="true" tabindex="-1"></a>&lt;<span class="kw">manifest</span><span class="ot"> xmlns:android=</span><span class="st">"http://schemas.android.com/apk/res/android"</span></span>
<span id="cb2-2"><a href="#cb2-2" aria-hidden="true" tabindex="-1"></a><span class="ot">          package=</span><span class="st">"com.abedelazizshe.flutter_lottie_splash_app"</span>&gt;</span>
<span id="cb2-3"><a href="#cb2-3" aria-hidden="true" tabindex="-1"></a>    <span class="co">&lt;!-- io.dart.app.FlutterApplication is an android.app.Application that</span></span>
<span id="cb2-4"><a href="#cb2-4" aria-hidden="true" tabindex="-1"></a><span class="co">         calls FlutterMain.startInitialization(this); in its onCreate method.</span></span>
<span id="cb2-5"><a href="#cb2-5" aria-hidden="true" tabindex="-1"></a><span class="co">         In most cases you can leave this as-is, but you if you want to provide</span></span>
<span id="cb2-6"><a href="#cb2-6" aria-hidden="true" tabindex="-1"></a><span class="co">         additional functionality it is fine to subclass or reimplement</span></span>
<span id="cb2-7"><a href="#cb2-7" aria-hidden="true" tabindex="-1"></a><span class="co">         FlutterApplication and put your custom class here. --&gt;</span></span>
<span id="cb2-8"><a href="#cb2-8" aria-hidden="true" tabindex="-1"></a>    &lt;<span class="kw">application</span></span>
<span id="cb2-9"><a href="#cb2-9" aria-hidden="true" tabindex="-1"></a><span class="ot">            android:name=</span><span class="st">"io.flutter.app.FlutterApplication"</span></span>
<span id="cb2-10"><a href="#cb2-10" aria-hidden="true" tabindex="-1"></a><span class="ot">            android:label=</span><span class="st">"flutter_lottie_splash_app"</span></span>
<span id="cb2-11"><a href="#cb2-11" aria-hidden="true" tabindex="-1"></a><span class="ot">            android:icon=</span><span class="st">"@mipmap/ic_launcher"</span>&gt;</span>
<span id="cb2-12"><a href="#cb2-12" aria-hidden="true" tabindex="-1"></a>        &lt;<span class="kw">activity</span></span>
<span id="cb2-13"><a href="#cb2-13" aria-hidden="true" tabindex="-1"></a><span class="ot">                android:name=</span><span class="st">".MainActivity"</span></span>
<span id="cb2-14"><a href="#cb2-14" aria-hidden="true" tabindex="-1"></a><span class="ot">                android:launchMode=</span><span class="st">"singleTop"</span></span>
<span id="cb2-15"><a href="#cb2-15" aria-hidden="true" tabindex="-1"></a><span class="ot">                android:theme=</span><span class="st">"@style/NormalTheme"</span></span>
<span id="cb2-16"><a href="#cb2-16" aria-hidden="true" tabindex="-1"></a><span class="ot">                android:configChanges=</span><span class="st">"orientation|keyboardHidden|keyboard|screenSize|smallestScreenSize|locale|layoutDirection|fontScale|screenLayout|density|uiMode"</span></span>
<span id="cb2-17"><a href="#cb2-17" aria-hidden="true" tabindex="-1"></a><span class="ot">                android:hardwareAccelerated=</span><span class="st">"true"</span></span>
<span id="cb2-18"><a href="#cb2-18" aria-hidden="true" tabindex="-1"></a><span class="ot">                android:windowSoftInputMode=</span><span class="st">"adjustResize"</span>&gt;</span>
<span id="cb2-19"><a href="#cb2-19" aria-hidden="true" tabindex="-1"></a>            <span class="co">&lt;!-- Specifies an Android theme to apply to this Activity as soon as</span></span>
<span id="cb2-20"><a href="#cb2-20" aria-hidden="true" tabindex="-1"></a><span class="co">                 the Android process has started. This theme is visible to the user</span></span>
<span id="cb2-21"><a href="#cb2-21" aria-hidden="true" tabindex="-1"></a><span class="co">                 while the Flutter UI initializes. After that, this theme continues</span></span>
<span id="cb2-22"><a href="#cb2-22" aria-hidden="true" tabindex="-1"></a><span class="co">                 to determine the Window background behind the Flutter UI. --&gt;</span></span>
<span id="cb2-23"><a href="#cb2-23" aria-hidden="true" tabindex="-1"></a>            &lt;<span class="kw">meta-data</span></span>
<span id="cb2-24"><a href="#cb2-24" aria-hidden="true" tabindex="-1"></a><span class="ot">                    android:name=</span><span class="st">"io.flutter.embedding.android.NormalTheme"</span></span>
<span id="cb2-25"><a href="#cb2-25" aria-hidden="true" tabindex="-1"></a><span class="ot">                    android:resource=</span><span class="st">"@style/NormalTheme"</span></span>
<span id="cb2-26"><a href="#cb2-26" aria-hidden="true" tabindex="-1"></a>            /&gt;</span>
<span id="cb2-27"><a href="#cb2-27" aria-hidden="true" tabindex="-1"></a>            &lt;<span class="kw">intent-filter</span>&gt;</span>
<span id="cb2-28"><a href="#cb2-28" aria-hidden="true" tabindex="-1"></a>                &lt;<span class="kw">action</span><span class="ot"> android:name=</span><span class="st">"android.intent.action.MAIN"</span>/&gt;</span>
<span id="cb2-29"><a href="#cb2-29" aria-hidden="true" tabindex="-1"></a>                &lt;<span class="kw">category</span><span class="ot"> android:name=</span><span class="st">"android.intent.category.LAUNCHER"</span>/&gt;</span>
<span id="cb2-30"><a href="#cb2-30" aria-hidden="true" tabindex="-1"></a>            &lt;/<span class="kw">intent-filter</span>&gt;</span>
<span id="cb2-31"><a href="#cb2-31" aria-hidden="true" tabindex="-1"></a>        &lt;/<span class="kw">activity</span>&gt;</span>
<span id="cb2-32"><a href="#cb2-32" aria-hidden="true" tabindex="-1"></a>        <span class="co">&lt;!-- Don't delete the meta-data below.</span></span>
<span id="cb2-33"><a href="#cb2-33" aria-hidden="true" tabindex="-1"></a><span class="co">             This is used by the Flutter tool to generate GeneratedPluginRegistrant.java --&gt;</span></span>
<span id="cb2-34"><a href="#cb2-34" aria-hidden="true" tabindex="-1"></a>        &lt;<span class="kw">meta-data</span></span>
<span id="cb2-35"><a href="#cb2-35" aria-hidden="true" tabindex="-1"></a><span class="ot">                android:name=</span><span class="st">"flutterEmbedding"</span></span>
<span id="cb2-36"><a href="#cb2-36" aria-hidden="true" tabindex="-1"></a><span class="ot">                android:value=</span><span class="st">"2"</span> /&gt;</span>
<span id="cb2-37"><a href="#cb2-37" aria-hidden="true" tabindex="-1"></a>    &lt;/<span class="kw">application</span>&gt;</span>
<span id="cb2-38"><a href="#cb2-38" aria-hidden="true" tabindex="-1"></a>&lt;/<span class="kw">manifest</span>&gt;</span></code></pre></div>
<p>你可以在 <code>/android/app/res/values/styles.xml</code> 文件夹中删除
<code>LaunchTheme</code> 的定义，因为你将不再需要它。</p>
<ol start="3" type="1">
<li><p>在 <code>/android/app/res/values</code> 文件夹下创建一个
<code>raw</code> 目录，并复制生成的 <code>.json</code>
文件（无论你是创建自己的文件还是从上面的链接下载了免费示例）。
在本案例中，JSON 文件夹的名字应该是
<code>splash_screen.json</code>。</p></li>
<li><p>为了使用 <code>.json</code>
文件并显示动画视图，我们需要创建具有其布局的启动视图类。 在
<code>/android/app/res</code> 下，创建一个名为 <code>layout</code>
的新目录（如果不存在的话），然后创建一个名为
<code>splash_view.xml</code> 的新的布局资源文件。 打开这个 XML
文件，修改文件的代码为：</p></li>
</ol>
<div class="sourceCode" id="cb3"><pre class="sourceCode xml"><code class="sourceCode xml"><span id="cb3-1"><a href="#cb3-1" aria-hidden="true" tabindex="-1"></a><span class="fu">&lt;?xml</span><span class="ot"> version=</span><span class="st">"1.0"</span><span class="ot"> encoding=</span><span class="st">"utf-8"</span><span class="fu">?&gt;</span></span>
<span id="cb3-2"><a href="#cb3-2" aria-hidden="true" tabindex="-1"></a>&lt;<span class="kw">androidx.constraintlayout.widget.ConstraintLayout</span><span class="ot"> xmlns:android=</span><span class="st">"http://schemas.android.com/apk/res/android"</span></span>
<span id="cb3-3"><a href="#cb3-3" aria-hidden="true" tabindex="-1"></a><span class="ot">    xmlns:app=</span><span class="st">"http://schemas.android.com/apk/res-auto"</span></span>
<span id="cb3-4"><a href="#cb3-4" aria-hidden="true" tabindex="-1"></a><span class="ot">    android:layout_width=</span><span class="st">"match_parent"</span></span>
<span id="cb3-5"><a href="#cb3-5" aria-hidden="true" tabindex="-1"></a><span class="ot">    android:layout_height=</span><span class="st">"match_parent"</span>&gt;</span>
<span id="cb3-6"><a href="#cb3-6" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb3-7"><a href="#cb3-7" aria-hidden="true" tabindex="-1"></a>    &lt;<span class="kw">com.airbnb.lottie.LottieAnimationView</span></span>
<span id="cb3-8"><a href="#cb3-8" aria-hidden="true" tabindex="-1"></a><span class="ot">        android:layout_width=</span><span class="st">"match_parent"</span></span>
<span id="cb3-9"><a href="#cb3-9" aria-hidden="true" tabindex="-1"></a><span class="ot">        android:layout_height=</span><span class="st">"match_parent"</span></span>
<span id="cb3-10"><a href="#cb3-10" aria-hidden="true" tabindex="-1"></a><span class="ot">        app:layout_constraintBottom_toBottomOf=</span><span class="st">"parent"</span></span>
<span id="cb3-11"><a href="#cb3-11" aria-hidden="true" tabindex="-1"></a><span class="ot">        app:layout_constraintStart_toStartOf=</span><span class="st">"parent"</span></span>
<span id="cb3-12"><a href="#cb3-12" aria-hidden="true" tabindex="-1"></a><span class="ot">        app:layout_constraintTop_toTopOf=</span><span class="st">"parent"</span></span>
<span id="cb3-13"><a href="#cb3-13" aria-hidden="true" tabindex="-1"></a><span class="ot">        app:lottie_autoPlay=</span><span class="st">"true"</span></span>
<span id="cb3-14"><a href="#cb3-14" aria-hidden="true" tabindex="-1"></a><span class="ot">        app:lottie_rawRes=</span><span class="st">"@raw/splash_screen"</span></span>
<span id="cb3-15"><a href="#cb3-15" aria-hidden="true" tabindex="-1"></a><span class="ot">        app:lottie_loop=</span><span class="st">"false"</span></span>
<span id="cb3-16"><a href="#cb3-16" aria-hidden="true" tabindex="-1"></a><span class="ot">        app:lottie_speed=</span><span class="st">"1.00"</span> /&gt;</span>
<span id="cb3-17"><a href="#cb3-17" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb3-18"><a href="#cb3-18" aria-hidden="true" tabindex="-1"></a>&lt;/<span class="kw">androidx.constraintlayout.widget.ConstraintLayout</span>&gt;</span></code></pre></div>
<p>在这个示例中，我将动画设置为自动播放，设置的播放速度为
<code>1.0</code>，并且禁止循环播放功能。你可以根据需要使用不同的值。
最重要的部分是 <code>app:lottie_rawRes</code> 属性，它定义了我们要使用在
<code>raw</code> 目录中添加的 JSON
文件。现在，我们需要创建启动视图的类。让我们在
<code>/android/app/src/main/kotlin/YOUR-PACKAGE-NAME</code>
中来创建一个新的 Kotlin 类。将这个类命名为
<code>SplashView</code>，然后修改它的内容为：</p>
<div class="sourceCode" id="cb4"><pre class="sourceCode kotlin"><code class="sourceCode kotlin"><span id="cb4-1"><a href="#cb4-1" aria-hidden="true" tabindex="-1"></a><span class="kw">import</span> <span class="im">android</span><span class="op">.</span><span class="im">content</span><span class="op">.</span><span class="im">Context</span></span>
<span id="cb4-2"><a href="#cb4-2" aria-hidden="true" tabindex="-1"></a><span class="kw">import</span> <span class="im">android</span><span class="op">.</span><span class="im">os</span><span class="op">.</span><span class="im">Bundle</span></span>
<span id="cb4-3"><a href="#cb4-3" aria-hidden="true" tabindex="-1"></a><span class="kw">import</span> <span class="im">android</span><span class="op">.</span><span class="im">view</span><span class="op">.</span><span class="im">LayoutInflater</span></span>
<span id="cb4-4"><a href="#cb4-4" aria-hidden="true" tabindex="-1"></a><span class="kw">import</span> <span class="im">android</span><span class="op">.</span><span class="im">view</span><span class="op">.</span><span class="im">View</span></span>
<span id="cb4-5"><a href="#cb4-5" aria-hidden="true" tabindex="-1"></a><span class="kw">import</span> <span class="im">io</span><span class="op">.</span><span class="im">flutter</span><span class="op">.</span><span class="im">embedding</span><span class="op">.</span><span class="im">android</span><span class="op">.</span><span class="im">SplashScreen</span></span>
<span id="cb4-6"><a href="#cb4-6" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb4-7"><a href="#cb4-7" aria-hidden="true" tabindex="-1"></a><span class="kw">class</span> SplashView <span class="op">:</span> <span class="dt">SplashScreen</span> <span class="op">&#123;</span></span>
<span id="cb4-8"><a href="#cb4-8" aria-hidden="true" tabindex="-1"></a>    <span class="kw">override</span> <span class="kw">fun</span> <span class="fu">createSplashView</span><span class="op">(</span><span class="va">context</span><span class="op">:</span> <span class="dt">Context</span><span class="op">,</span> <span class="va">savedInstanceState</span><span class="op">:</span> <span class="dt">Bundle</span><span class="op">?):</span> <span class="dt">View</span><span class="op">?</span> <span class="op">=</span></span>
<span id="cb4-9"><a href="#cb4-9" aria-hidden="true" tabindex="-1"></a>            LayoutInflater<span class="op">.</span>from<span class="op">(</span>context<span class="op">).</span>inflate<span class="op">(</span>R<span class="op">.</span>layout<span class="op">.</span>splash_view<span class="op">,</span> <span class="kw">null</span><span class="op">,</span> <span class="kw">false</span><span class="op">)</span></span>
<span id="cb4-10"><a href="#cb4-10" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb4-11"><a href="#cb4-11" aria-hidden="true" tabindex="-1"></a>    <span class="kw">override</span> <span class="kw">fun</span> <span class="fu">transitionToFlutter</span><span class="op">(</span><span class="va">onTransitionComplete</span><span class="op">:</span> <span class="dt">Runnable</span><span class="op">)</span> <span class="op">&#123;</span></span>
<span id="cb4-12"><a href="#cb4-12" aria-hidden="true" tabindex="-1"></a>        onTransitionComplete<span class="op">.</span>run<span class="op">()</span></span>
<span id="cb4-13"><a href="#cb4-13" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#125;</span></span>
<span id="cb4-14"><a href="#cb4-14" aria-hidden="true" tabindex="-1"></a><span class="op">&#125;</span></span></code></pre></div>
<p>如你所见，此视图 Inflate 了 <code>splash_view</code>
布局文件。最后一步是告诉 <code>MainActivity</code>
我们的自定义启动视图。</p>
<p>5.转到 <code>/android/app/src/main/kotlin/YOUR-PACKAGE-NAME</code>
文件夹，然后单击 <code>MainActivity.kt</code>。
<code>FlutterActivity</code> 提供了一种称为
<code>provideSplashScreen</code> 的方法，修改代码为：</p>
<div class="sourceCode" id="cb5"><pre class="sourceCode kotlin"><code class="sourceCode kotlin"><span id="cb5-1"><a href="#cb5-1" aria-hidden="true" tabindex="-1"></a><span class="kw">import</span> <span class="im">io</span><span class="op">.</span><span class="im">flutter</span><span class="op">.</span><span class="im">embedding</span><span class="op">.</span><span class="im">android</span><span class="op">.</span><span class="im">FlutterActivity</span></span>
<span id="cb5-2"><a href="#cb5-2" aria-hidden="true" tabindex="-1"></a><span class="kw">import</span> <span class="im">io</span><span class="op">.</span><span class="im">flutter</span><span class="op">.</span><span class="im">embedding</span><span class="op">.</span><span class="im">android</span><span class="op">.</span><span class="im">SplashScreen</span></span>
<span id="cb5-3"><a href="#cb5-3" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb5-4"><a href="#cb5-4" aria-hidden="true" tabindex="-1"></a><span class="kw">class</span> MainActivity<span class="op">:</span> <span class="dt">FlutterActivity</span><span class="op">()</span> <span class="op">&#123;</span></span>
<span id="cb5-5"><a href="#cb5-5" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb5-6"><a href="#cb5-6" aria-hidden="true" tabindex="-1"></a>    <span class="kw">override</span> <span class="kw">fun</span> <span class="fu">provideSplashScreen</span><span class="op">():</span> <span class="dt">SplashScreen</span><span class="op">?</span> <span class="op">=</span> SplashView<span class="op">()</span></span>
<span id="cb5-7"><a href="#cb5-7" aria-hidden="true" tabindex="-1"></a><span class="op">&#125;</span></span></code></pre></div>
<p>现在项目的目录应该像这样：</p>
<figure>
<img src="https://cdn-images-1.medium.com/max/2000/1*kj2sZaD-YWBgNaEXYAwqbg.png" alt="Android 项目目录">
<figcaption aria-hidden="true">Android 项目目录</figcaption>
</figure>
<p>这就是 Android 下 Lottie 构建 Splash
启动页的方法，只需要跑一下这个应用程序然后你就能够看到应用程序启动时候的动画了。</p>
<figure>
<img src="https://cdn-images-1.medium.com/max/2000/1*EDVg6zpUrwJ39ppvlN7nTA.gif" alt="Android 中使用了动画的 Splash 页面">
<figcaption aria-hidden="true">Android 中使用了动画的 Splash
页面</figcaption>
</figure>
<h2 id="ios">iOS</h2>
<p>让我们在 iOS 中添加启动页：</p>
<ol type="1">
<li>打开项目所在的目录，单击 ios 文件夹，然后双击
<code>Runner.xcworkspace</code> 打开你的项目。</li>
</ol>
<p>2.单击
<code>Main.storyboard</code>，你将看到带有一个屏幕的布局编辑器。
我们需要添加一个新的
<code>ViewController</code>，这将是我们的启动页（你可以通过单击右上角的
<code>+</code>
号来做到这一点。点击之后，屏幕中将弹出一个窗口。我们在输入框处输入 View
Controller
搜索并将这个控件拖动到编辑器中即可），如以下屏幕快照所示：</p>
<figure>
<img src="https://cdn-images-1.medium.com/max/7108/1*L9EKQQFnxtozE_xgcpVkfw.png" alt="添加一个新的 View Controller">
<figcaption aria-hidden="true">添加一个新的 View Controller</figcaption>
</figure>
<ol start="3" type="1">
<li>完成了第二步之后，你会看到两个屏幕。选择新的 View Controller
然后点击 <code>attributes inspector</code>，然后再点击
<code>is initial view controller</code> .</li>
</ol>
<figure>
<img src="https://cdn-images-1.medium.com/max/3826/1*TzWohD3MyARxjm7Vetmzow.png" alt="设置 Splash View Controller 为起始的 View Controller">
<figcaption aria-hidden="true">设置 Splash View Controller 为起始的 View
Controller</figcaption>
</figure>
<ol start="4" type="1">
<li>我们需要在 <code>ios/Podfile</code> 文件中添加 Lottie 依赖;</li>
</ol>
<pre class="text"><code>pod 'lottie-ios'</code></pre>
<p>这个文件中现在应该是这样的：（编者注：可能你已经修改了一部分设置了，这里只是一个案例）</p>
<pre class="shell"><code>#platform :ios, '9.0' 

target 'Runner' do  
   use_frameworks!  
  
   pod 'lottie-ios' 

end</code></pre>
<p>然后运行这个应用程序（确保命令行当前在 ios
目录中。如果不是，那么就使用 <code>cd</code> 命令将你的目录移动到 ios
目录中）</p>
<pre class="shell"><code>pod install</code></pre>
<ol start="5" type="1">
<li>使用 Xcode 将你的生成的 <code>.json</code>
文件拖到中的根目录中（请选择 <code>Copy items if needed</code>
选项），这个文件可能是你自己创建的文件，也有可能是你从上面的链接下载了免费样本。在本案例中它的名字是
<code>splash_screen.json</code>。</li>
</ol>
<p>6.在已经添加了依赖项和 <code>splash_screen.json</code>
文件的情况下，我们可以创建我们的初始视图控制器，该控制器将处理显示的动画。打开你的
ios 项目，在项目根目录处（相对于 Flutter
根目录：/ios/Runner）创建一个新的名为 <code>SplashViewController</code>
的 Swift 文件。在类中编写任何内容之前，我们先来修改一下
<code>AppDelegate.swift</code> 以创建 <code>FlutterEngine</code>。
如果你跳过了这个步骤，则动画启动画面的动画播放完了以后不能跳转至
<code>FlutterViewController</code>。</p>
<div class="sourceCode" id="cb9"><pre class="sourceCode swift"><code class="sourceCode swift"><span id="cb9-1"><a href="#cb9-1" aria-hidden="true" tabindex="-1"></a><span class="kw">import</span> <span class="im">UIKit</span></span>
<span id="cb9-2"><a href="#cb9-2" aria-hidden="true" tabindex="-1"></a><span class="kw">import</span> <span class="im">Flutter</span></span>
<span id="cb9-3"><a href="#cb9-3" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb9-4"><a href="#cb9-4" aria-hidden="true" tabindex="-1"></a><span class="at">@UIApplicationMain</span></span>
<span id="cb9-5"><a href="#cb9-5" aria-hidden="true" tabindex="-1"></a><span class="at">@objc</span> <span class="kw">class</span> AppDelegate<span class="op">:</span> <span class="dt">FlutterAppDelegate</span> <span class="op">&#123;</span></span>
<span id="cb9-6"><a href="#cb9-6" aria-hidden="true" tabindex="-1"></a>    </span>
<span id="cb9-7"><a href="#cb9-7" aria-hidden="true" tabindex="-1"></a>    <span class="kw">lazy</span> <span class="kw">var</span> <span class="va">flutterEngine</span> <span class="op">=</span> FlutterEngine<span class="op">(</span>name<span class="op">:</span> <span class="st">"MyApp"</span><span class="op">)</span></span>
<span id="cb9-8"><a href="#cb9-8" aria-hidden="true" tabindex="-1"></a>    </span>
<span id="cb9-9"><a href="#cb9-9" aria-hidden="true" tabindex="-1"></a>    <span class="kw">override</span> <span class="kw">func</span> <span class="fu">application</span><span class="op">(</span></span>
<span id="cb9-10"><a href="#cb9-10" aria-hidden="true" tabindex="-1"></a>        <span class="va">_</span> <span class="va">application</span><span class="op">:</span> <span class="dt">UIApplication</span><span class="op">,</span></span>
<span id="cb9-11"><a href="#cb9-11" aria-hidden="true" tabindex="-1"></a>        <span class="va">didFinishLaunchingWithOptions</span> <span class="va">launchOptions</span><span class="op">:</span> [<span class="dt">UIApplication</span>.<span class="va">LaunchOptionsKey</span><span class="op">:</span> <span class="dt">Any</span>]?</span>
<span id="cb9-12"><a href="#cb9-12" aria-hidden="true" tabindex="-1"></a>    <span class="op">)</span> -&gt; <span class="fu">Bool</span> <span class="op">&#123;</span></span>
<span id="cb9-13"><a href="#cb9-13" aria-hidden="true" tabindex="-1"></a>        <span class="co">// Runs the default Dart entrypoint with a default Flutter route.</span></span>
<span id="cb9-14"><a href="#cb9-14" aria-hidden="true" tabindex="-1"></a>        flutterEngine<span class="op">.</span>run<span class="op">()</span></span>
<span id="cb9-15"><a href="#cb9-15" aria-hidden="true" tabindex="-1"></a>        <span class="co">// Used to connect plugins (only if you have plugins with iOS platform code).</span></span>
<span id="cb9-16"><a href="#cb9-16" aria-hidden="true" tabindex="-1"></a>        GeneratedPluginRegistrant<span class="op">.</span>register<span class="op">(</span>with<span class="op">:</span> <span class="kw">self</span><span class="op">.</span>flutterEngine<span class="op">)</span></span>
<span id="cb9-17"><a href="#cb9-17" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb9-18"><a href="#cb9-18" aria-hidden="true" tabindex="-1"></a>        <span class="kw">return</span> <span class="kw">super</span><span class="op">.</span>application<span class="op">(</span>application<span class="op">,</span> didFinishLaunchingWithOptions<span class="op">:</span> launchOptions<span class="op">)</span></span>
<span id="cb9-19"><a href="#cb9-19" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#125;</span></span>
<span id="cb9-20"><a href="#cb9-20" aria-hidden="true" tabindex="-1"></a><span class="op">&#125;</span></span></code></pre></div>
<p>在这里我们创建了一个名为 <code>MyApp</code> 的
<code>FlutterEngine</code>（你可以自己决定它的名称），然后在
<code>application</code> 的 <code>didFinishLaunchingWithOptions</code>
中运行了这个引擎并在引擎中注册了插件。需要注意的是默认代码是
<code>GeneratePluginRegistrant.register(with：self)</code>，请确保它已向
<code>self.flutterEngine</code> 注册。</p>
<ol start="7" type="1">
<li>做完了这些，现在我们可以准备 <code>SplashViewController</code>
以显示动画。导航到 <code>Flutter</code> 的 View Controller
处，修改代码为：</li>
</ol>
<div class="sourceCode" id="cb10"><pre class="sourceCode swift"><code class="sourceCode swift"><span id="cb10-1"><a href="#cb10-1" aria-hidden="true" tabindex="-1"></a><span class="kw">import</span> <span class="im">UIKit</span></span>
<span id="cb10-2"><a href="#cb10-2" aria-hidden="true" tabindex="-1"></a><span class="kw">import</span> <span class="im">Lottie</span></span>
<span id="cb10-3"><a href="#cb10-3" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb10-4"><a href="#cb10-4" aria-hidden="true" tabindex="-1"></a><span class="kw">public</span> <span class="kw">class</span> SplashViewController<span class="op">:</span> <span class="dt">UIViewController</span> <span class="op">&#123;</span></span>
<span id="cb10-5"><a href="#cb10-5" aria-hidden="true" tabindex="-1"></a>    </span>
<span id="cb10-6"><a href="#cb10-6" aria-hidden="true" tabindex="-1"></a>    <span class="kw">private</span> <span class="kw">var</span> <span class="va">animationView</span><span class="op">:</span> AnimationView<span class="op">?</span></span>
<span id="cb10-7"><a href="#cb10-7" aria-hidden="true" tabindex="-1"></a>    </span>
<span id="cb10-8"><a href="#cb10-8" aria-hidden="true" tabindex="-1"></a>    <span class="kw">public</span> <span class="kw">override</span> <span class="kw">func</span> <span class="fu">viewDidAppear</span><span class="op">(</span><span class="va">_</span> <span class="va">animated</span><span class="op">:</span> <span class="dt">Bool</span><span class="op">)</span> <span class="op">&#123;</span></span>
<span id="cb10-9"><a href="#cb10-9" aria-hidden="true" tabindex="-1"></a>        animationView <span class="op">=</span> <span class="op">.</span><span class="kw">init</span><span class="op">(</span>name<span class="op">:</span> <span class="st">"splash_screen"</span><span class="op">)</span></span>
<span id="cb10-10"><a href="#cb10-10" aria-hidden="true" tabindex="-1"></a>        animationView<span class="op">!.</span>frame <span class="op">=</span> view<span class="op">.</span>bounds</span>
<span id="cb10-11"><a href="#cb10-11" aria-hidden="true" tabindex="-1"></a>        animationView<span class="op">!.</span>contentMode <span class="op">=</span> <span class="op">.</span>scaleAspectFit</span>
<span id="cb10-12"><a href="#cb10-12" aria-hidden="true" tabindex="-1"></a>        animationView<span class="op">!.</span>loopMode <span class="op">=</span> <span class="op">.</span>playOnce</span>
<span id="cb10-13"><a href="#cb10-13" aria-hidden="true" tabindex="-1"></a>        animationView<span class="op">!.</span>animationSpeed <span class="op">=</span> <span class="fl">1.00</span></span>
<span id="cb10-14"><a href="#cb10-14" aria-hidden="true" tabindex="-1"></a>        view<span class="op">.</span>addSubview<span class="op">(</span>animationView<span class="op">!)</span></span>
<span id="cb10-15"><a href="#cb10-15" aria-hidden="true" tabindex="-1"></a>        animationView<span class="op">!.</span>play<span class="op">&#123;</span> <span class="op">(</span>finished<span class="op">)</span> <span class="cf">in</span></span>
<span id="cb10-16"><a href="#cb10-16" aria-hidden="true" tabindex="-1"></a>            <span class="kw">self</span><span class="op">.</span>startFlutterApp<span class="op">()</span></span>
<span id="cb10-17"><a href="#cb10-17" aria-hidden="true" tabindex="-1"></a>        <span class="op">&#125;</span></span>
<span id="cb10-18"><a href="#cb10-18" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#125;</span></span>
<span id="cb10-19"><a href="#cb10-19" aria-hidden="true" tabindex="-1"></a>    </span>
<span id="cb10-20"><a href="#cb10-20" aria-hidden="true" tabindex="-1"></a>    <span class="kw">func</span> <span class="fu">startFlutterApp</span><span class="op">()</span> <span class="op">&#123;</span></span>
<span id="cb10-21"><a href="#cb10-21" aria-hidden="true" tabindex="-1"></a>        <span class="kw">let</span> <span class="va">appDelegate</span> <span class="op">=</span> UIApplication<span class="op">.</span>shared<span class="op">.</span>delegate <span class="kw">as</span><span class="op">!</span> AppDelegate</span>
<span id="cb10-22"><a href="#cb10-22" aria-hidden="true" tabindex="-1"></a>        <span class="kw">let</span> <span class="va">flutterEngine</span> <span class="op">=</span> appDelegate<span class="op">.</span>flutterEngine</span>
<span id="cb10-23"><a href="#cb10-23" aria-hidden="true" tabindex="-1"></a>        <span class="kw">let</span> <span class="va">flutterViewController</span> <span class="op">=</span></span>
<span id="cb10-24"><a href="#cb10-24" aria-hidden="true" tabindex="-1"></a>            FlutterViewController<span class="op">(</span>engine<span class="op">:</span> flutterEngine<span class="op">,</span> nibName<span class="op">:</span> <span class="kw">nil</span><span class="op">,</span> bundle<span class="op">:</span> <span class="kw">nil</span><span class="op">)</span></span>
<span id="cb10-25"><a href="#cb10-25" aria-hidden="true" tabindex="-1"></a>        </span>
<span id="cb10-26"><a href="#cb10-26" aria-hidden="true" tabindex="-1"></a>        flutterViewController<span class="op">.</span>modalPresentationStyle <span class="op">=</span> <span class="op">.</span>custom</span>
<span id="cb10-27"><a href="#cb10-27" aria-hidden="true" tabindex="-1"></a>        flutterViewController<span class="op">.</span>modalTransitionStyle <span class="op">=</span> <span class="op">.</span>crossDissolve</span>
<span id="cb10-28"><a href="#cb10-28" aria-hidden="true" tabindex="-1"></a>        </span>
<span id="cb10-29"><a href="#cb10-29" aria-hidden="true" tabindex="-1"></a>        present<span class="op">(</span>flutterViewController<span class="op">,</span> animated<span class="op">:</span> <span class="kw">true</span><span class="op">,</span> completion<span class="op">:</span> <span class="kw">nil</span><span class="op">)</span></span>
<span id="cb10-30"><a href="#cb10-30" aria-hidden="true" tabindex="-1"></a>        </span>
<span id="cb10-31"><a href="#cb10-31" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#125;</span></span>
<span id="cb10-32"><a href="#cb10-32" aria-hidden="true" tabindex="-1"></a><span class="op">&#125;</span></span></code></pre></div>
<p>在 <code>viewDidAppear</code> 中，我们使用添加的
<code>splash_screen.json</code> 文件初始化动画视图。你可以修改诸如
<code>loopMode</code>、<code>animationSpeed</code>
等播放设置。在动画播放结束后，我们将启动我们的 Flutter 应用程序。</p>
<p>为了获取 <code>FlutterViewController</code>，我们必须获取我们创建并在
<code>AppDelegate.swift</code> 运行的 <code>FlutterEngine</code>
的实例。</p>
<pre><code>let appDelegate = UIApplication.shared.delegate as! AppDelegate
let flutterEngine = appDelegate.flutterEngine
        
let flutterViewController = FlutterViewController(engine: flutterEngine, nibName: nil, bundle: nil)</code></pre>
<p>然后使用 <code>present(completion :)</code> 启动视图控制器。</p>
<ol start="8" type="1">
<li>现在是时候将第 2 步创建的 <code>ViewController</code> 与
<code>SplashViewController</code> 类相链接了。单击
<code>Main.storyboard</code> 并选择新的
<code>ViewController</code>，然后从 <code>identity inspector</code>
中选择 <code>SplashViewController</code>，如屏幕快照所示：</li>
</ol>
<figure>
<img src="https://cdn-images-1.medium.com/max/7152/1*ghXXOoQqELmNTc4wrbxoJQ.png" alt="链接到 SplashViewController">
<figcaption aria-hidden="true">链接到
<code>SplashViewController</code></figcaption>
</figure>
<ol start="9" type="1">
<li>最后一步是设置 <code>Main.storyboard</code> 的主界面，替换掉
<code>LauncherScreen.storyboard</code>。单击 Runner，选择
<code>General</code> 选项卡，在 <code>deployment info</code>
下，从下拉菜单中将 <code>Main interface</code> 设置为
<strong>Main</strong>，如屏幕快照所示：</li>
</ol>
<figure>
<img src="https://cdn-images-1.medium.com/max/3274/1*KQV8lIB3aRfA_AHtTNXi4g.png" alt="设置 Main interface 为 Main">
<figcaption aria-hidden="true">设置 Main interface 为 Main</figcaption>
</figure>
<p>生成并运行该应用程序，你应该能够看到动画的启动页了：</p>
<p><img src="https://cdn-images-1.medium.com/max/2000/1*bdfeeBtOIHW_1A0MfdjnZQ.gif"></p>
<p>就是这样，你现在已经生成了针对 Android 和 iOS
应用程序的动画启动页。有关完整的源代码和演示应用程序可以在这里获取到：</p>
<p><a href="https://github.com/AbedElazizShe/flutter_lottie_splash_app"><strong>AbedElazizShe/flutter_lottie_splash_app</strong></a></p>
<p>如果你有任何疑问，或者有更好的方法可以解决此问题，请记得发表评论嗷。</p>]]></content>
      <categories>
        <category>Computer Science</category>
        <category>Dart</category>
        <category>Flutter</category>
      </categories>
      <tags>
        <tag>Computer Science</tag>
        <tag>UI</tag>
        <tag>Dart</tag>
        <tag>Flutter</tag>
      </tags>
  </entry>
  <entry>
    <title>从 RxJava 2 转向使用 Kotlin 流：多线程</title>
    <url>/2021/03/11/computer%20science/backend/from-rxjava-2-to-kotlin-flow-threading/</url>
    <content><![CDATA[<blockquote>
<ul>
<li>原文地址：<a href="https://proandroiddev.com/from-rxjava-2-to-kotlin-flow-threading-8618867e1955">From
RxJava 2 to Kotlin Flow: Threading</a></li>
<li>原文作者：<a href="https://medium.com/@krossovochkin">Vasya
Drobushkov</a></li>
<li>译者：<a href="https://github.com/PassionPenguin">霜羽
Hoarfroster</a></li>
<li>校对者：<a href="https://github.com/samyu2000">samyu2000</a>、<a href="https://github.com/zenblo">zenblo</a></li>
</ul>
</blockquote>
<figure>
<img src="https://cdn-images-1.medium.com/max/2000/0*piI5NnrRuivMUOKD" alt="来源">
<figcaption aria-hidden="true"><a href="https://unsplash.com/photos/vyyVbUOYNPc">来源</a></figcaption>
</figure>
<h2 id="简介">简介</h2>
<p>长期以来，RxJava 一直是 Android
响应式解决方案的无可争议的引领者。虽然 Kotlin
不断扩展，并且引入了冷流（Flow）的概念，情况可能在未来几年迅速改变，但这并不意味着
RxJava
会退出历史舞台。虽说响应式编程最初与线程无关，但合适的线程的并发和并行对程序而言仍然非常重要。在本文中，我们将简要回顾
RxJava 2 中的线程（对其用法做一些基本说明），然后讨论一下 Kotlin Flow
中线程的工作原理，让我们能在不影响功能的情况下能够顺利地完成代码迁移。</p>
<p>让我们从对 RxJava 2 的简短回顾开始。</p>
<h2 id="rxjava-2">RxJava 2</h2>
<p>RxJava 2 的 <code>Observable</code> 和 Kotlin 的 Flow
都是冷流，意味着其中的代码在订阅之前都不会被执行。</p>
<blockquote>
<p>除了 <code>Observable</code> 以外，在 RxJava 中其实还有其它类型，例如
<code>Flowable</code> 或是 <code>Single</code>
等。但在本文中，我们只会讲讲
<code>Observable</code>，因为它们的原理是相似的。</p>
</blockquote>
<p>RxJava <code>Observable</code> 的最基础使用如下所示：</p>
<div class="sourceCode" id="cb1"><pre class="sourceCode kotlin"><code class="sourceCode kotlin"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a>observeSomething<span class="op">()</span></span>
<span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a>    <span class="op">.</span>subscribeOn<span class="op">(</span>io<span class="op">())</span></span>
<span id="cb1-3"><a href="#cb1-3" aria-hidden="true" tabindex="-1"></a>    <span class="op">.</span>observeOn<span class="op">(</span>mainThread<span class="op">())</span></span>
<span id="cb1-4"><a href="#cb1-4" aria-hidden="true" tabindex="-1"></a>    <span class="op">.</span>subscribe <span class="op">&#123;</span> result <span class="op">-&gt;</span> println<span class="op">(</span>result<span class="op">)</span> <span class="op">&#125;</span></span></code></pre></div>
<p>在上述代码中，我们订阅了输入输出事件。程序运行时，只要发生了 I/O
事件，就会把接收到的结果在主线程打印出来。</p>
<h4 id="subscribeon">subscribeOn</h4>
<p>subscribeOn 是一个运算符，用于声明将在哪一个调度器上设置一个
<code>Observable</code>
的订阅。“将在哪一个调度器上订阅”是指“将在哪个调度器上启动我们的执行程序”。</p>
<p>第一个划重点的地方是：我们并不需要管 <code>subscribeOn</code>
具体在哪个地方声明。例如我们可以这样：</p>
<div class="sourceCode" id="cb2"><pre class="sourceCode kotlin"><code class="sourceCode kotlin"><span id="cb2-1"><a href="#cb2-1" aria-hidden="true" tabindex="-1"></a>observeSomething<span class="op">()</span></span>
<span id="cb2-2"><a href="#cb2-2" aria-hidden="true" tabindex="-1"></a>    <span class="op">.</span>subscribeOn<span class="op">(</span>io<span class="op">())</span></span>
<span id="cb2-3"><a href="#cb2-3" aria-hidden="true" tabindex="-1"></a>    <span class="op">.</span>observeOn<span class="op">(</span>mainThread<span class="op">())</span></span>
<span id="cb2-4"><a href="#cb2-4" aria-hidden="true" tabindex="-1"></a>    <span class="op">.</span>subscribe <span class="op">&#123;</span> result <span class="op">-&gt;</span> println<span class="op">(</span>result<span class="op">)</span> <span class="op">&#125;</span></span></code></pre></div>
<p>也可以这样：</p>
<div class="sourceCode" id="cb3"><pre class="sourceCode kotlin"><code class="sourceCode kotlin"><span id="cb3-1"><a href="#cb3-1" aria-hidden="true" tabindex="-1"></a>observeSomething<span class="op">()</span></span>
<span id="cb3-2"><a href="#cb3-2" aria-hidden="true" tabindex="-1"></a>    <span class="op">.</span>observeOn<span class="op">(</span>mainThread<span class="op">())</span></span>
<span id="cb3-3"><a href="#cb3-3" aria-hidden="true" tabindex="-1"></a>    <span class="op">.</span>subscribeOn<span class="op">(</span>io<span class="op">())</span></span>
<span id="cb3-4"><a href="#cb3-4" aria-hidden="true" tabindex="-1"></a>    <span class="op">.</span>subscribe <span class="op">&#123;</span> result <span class="op">-&gt;</span> println<span class="op">(</span>result<span class="op">)</span> <span class="op">&#125;</span></span></code></pre></div>
<p>上述两种情况的运行结果是一样的，这并不意外。我们通过在这一串代码链中声明了这些运算符声明了这个链的开始，但其中的某些运算符本身并不依赖于声明的位置，就例如上面的例子那样。</p>
<p>第二个划重点的地方是，因为一个链并不能同时在多个调度器处启动，因此我们无需在链中添加多个
<code>subscribeOn</code>，因为只有其中之一会起作用。如果出于某种原因你将多个
<code>subscribeOn</code>
运算符放在链中，则最上面的一个将被使用，而最下面的将被忽略：</p>
<div class="sourceCode" id="cb4"><pre class="sourceCode kotlin"><code class="sourceCode kotlin"><span id="cb4-1"><a href="#cb4-1" aria-hidden="true" tabindex="-1"></a>observeSomething<span class="op">()</span></span>
<span id="cb4-2"><a href="#cb4-2" aria-hidden="true" tabindex="-1"></a>    <span class="op">.</span>subscribeOn<span class="op">(</span>io<span class="op">())</span> <span class="co">// 这个会被使用上</span></span>
<span id="cb4-3"><a href="#cb4-3" aria-hidden="true" tabindex="-1"></a>    <span class="op">.</span>observeOn<span class="op">(</span>mainThread<span class="op">())</span></span>
<span id="cb4-4"><a href="#cb4-4" aria-hidden="true" tabindex="-1"></a>    <span class="op">.</span>subscribeOn<span class="op">(</span>io<span class="op">())</span> <span class="co">// 这个会直接被忽略</span></span>
<span id="cb4-5"><a href="#cb4-5" aria-hidden="true" tabindex="-1"></a>    <span class="op">.</span>subscribe <span class="op">&#123;</span> result <span class="op">-&gt;</span> println<span class="op">(</span>result<span class="op">)</span> <span class="op">&#125;</span></span></code></pre></div>
<h4 id="observeon">observeOn</h4>
<p><code>subscribeOn</code> 表示将在哪个调度器上启动链，而
<code>observeOn</code> 表示将在哪个调度器上运行线程。实际上，这意味着
<code>observeOn</code> 会更改下面的链中的运行的线程的调度器。</p>
<div class="sourceCode" id="cb5"><pre class="sourceCode kotlin"><code class="sourceCode kotlin"><span id="cb5-1"><a href="#cb5-1" aria-hidden="true" tabindex="-1"></a><span class="co">/* 1 */</span> observeSomething<span class="op">()</span></span>
<span id="cb5-2"><a href="#cb5-2" aria-hidden="true" tabindex="-1"></a><span class="co">/* 1 */</span>     <span class="op">.</span>subscribeOn<span class="op">(</span>io<span class="op">())</span></span>
<span id="cb5-3"><a href="#cb5-3" aria-hidden="true" tabindex="-1"></a><span class="co">/* 2 */</span>     <span class="op">.</span>observeOn<span class="op">(</span>mainThread<span class="op">())</span></span>
<span id="cb5-4"><a href="#cb5-4" aria-hidden="true" tabindex="-1"></a><span class="co">/* 2 */</span>     <span class="op">.</span>subscribe <span class="op">&#123;</span> result <span class="op">-&gt;</span> println<span class="op">(</span>result<span class="op">)</span> <span class="op">&#125;</span></span></code></pre></div>
<p>在这里，我们看到从链开始，直到链上的 <code>observeOn</code>
定义是第一部分，然后 <code>observeOn</code> 更改链要在
<code>mainThread</code> 调度器上运行，因此现在以下全部内容都在
<code>mainThread</code> （第二部分）上执行。</p>
<p>与 <code>subscribeOn</code>
不同，实际上如果真的需要，我们可以添加多个 <code>observeOn</code>：</p>
<div class="sourceCode" id="cb6"><pre class="sourceCode kotlin"><code class="sourceCode kotlin"><span id="cb6-1"><a href="#cb6-1" aria-hidden="true" tabindex="-1"></a><span class="co">/* 1 */</span> observeSomething<span class="op">()</span></span>
<span id="cb6-2"><a href="#cb6-2" aria-hidden="true" tabindex="-1"></a><span class="co">/* 1 */</span>     <span class="op">.</span>subscribeOn<span class="op">(</span>io<span class="op">())</span></span>
<span id="cb6-3"><a href="#cb6-3" aria-hidden="true" tabindex="-1"></a><span class="co">/* 2 */</span>     <span class="op">.</span>observeOn<span class="op">(</span>computation<span class="op">())</span></span>
<span id="cb6-4"><a href="#cb6-4" aria-hidden="true" tabindex="-1"></a><span class="co">/* 2 */</span>     <span class="op">.</span>map <span class="op">&#123;</span> result <span class="op">-&gt;</span> result<span class="op">.</span>length <span class="op">&#125;</span></span>
<span id="cb6-5"><a href="#cb6-5" aria-hidden="true" tabindex="-1"></a><span class="co">/* 3 */</span>     <span class="op">.</span>observeOn<span class="op">(</span>mainThread<span class="op">())</span></span>
<span id="cb6-6"><a href="#cb6-6" aria-hidden="true" tabindex="-1"></a><span class="co">/* 3 */</span>     <span class="op">.</span>subscribe <span class="op">&#123;</span> result <span class="op">-&gt;</span> println<span class="op">(</span>result<span class="op">)</span> <span class="op">&#125;</span></span></code></pre></div>
<p>如上面的例子那样，我们先从网络上获取一些数据，接着进行一些计算处理，再打印结果。。我们添加了多个
<code>observeOn</code>，让程序首先切换到 <code>computation</code>
调度器（这样做的目的是在后台线程中进行计算，这是第二部分），然后切换到
<code>mainThread</code> 打印结果。</p>
<h4 id="just-defer">just + defer</h4>
<p><code>subscribeOn</code> 的一个常见错误是将它与
<code>Observable.just</code> 一起使用。</p>
<div class="sourceCode" id="cb7"><pre class="sourceCode kotlin"><code class="sourceCode kotlin"><span id="cb7-1"><a href="#cb7-1" aria-hidden="true" tabindex="-1"></a>Observable<span class="op">.</span>just<span class="op">(</span>loadDataSync<span class="op">())</span></span>
<span id="cb7-2"><a href="#cb7-2" aria-hidden="true" tabindex="-1"></a>    <span class="op">.</span>subscribeOn<span class="op">(</span>io<span class="op">())</span></span>
<span id="cb7-3"><a href="#cb7-3" aria-hidden="true" tabindex="-1"></a>    <span class="op">.</span>observeOn<span class="op">(</span>mainThread<span class="op">())</span></span>
<span id="cb7-4"><a href="#cb7-4" aria-hidden="true" tabindex="-1"></a>    <span class="op">.</span>subscribe <span class="op">&#123;</span> result <span class="op">-&gt;</span> println<span class="op">(</span>result<span class="op">)</span> <span class="op">&#125;</span></span></code></pre></div>
<p><code>just</code>
参数的值是立即计算的，而不是在订阅时才计算的。这意味着，如果您在主线程上创建此类可观察的对象，那么可能会在主线程上进行大量潜在的计算。虽说订阅将在
<code>io</code> 上正确完成，但是 <code>just</code>
的值将在订阅之前就被计算出来了。</p>
<p>解决此问题的方法之一是将你的 <code>Observable.just</code> 调用包装到
<code>Observable.defer</code>
中，这样调用所执行的所有内容都将在订阅时以及在我们位于
<code>subscribeOn</code> 处所声明的调度器上进行计算：</p>
<div class="sourceCode" id="cb8"><pre class="sourceCode kotlin"><code class="sourceCode kotlin"><span id="cb8-1"><a href="#cb8-1" aria-hidden="true" tabindex="-1"></a>Observable<span class="op">.</span>defer <span class="op">&#123;</span> Observable<span class="op">.</span>just<span class="op">(</span>loadDataSync<span class="op">())</span> <span class="op">&#125;</span></span>
<span id="cb8-2"><a href="#cb8-2" aria-hidden="true" tabindex="-1"></a>    <span class="op">.</span>subscribeOn<span class="op">(</span>io<span class="op">())</span></span>
<span id="cb8-3"><a href="#cb8-3" aria-hidden="true" tabindex="-1"></a>    <span class="op">.</span>observeOn<span class="op">(</span>mainThread<span class="op">())</span></span>
<span id="cb8-4"><a href="#cb8-4" aria-hidden="true" tabindex="-1"></a>    <span class="op">.</span>subscribe <span class="op">&#123;</span> result <span class="op">-&gt;</span> println<span class="op">(</span>result<span class="op">)</span> <span class="op">&#125;</span></span></code></pre></div>
<h4 id="flatmap-的并发和并行">flatMap 的并发和并行</h4>
<p>另一个棘手的事情来自使用运算符 <code>flatMap</code>
和我们对并发性和并行性的理解。</p>
<p>例如，当我们拥有 ID 列表流，并且我们需要对每一个 ID
都执行一次从网络中加载数据：</p>
<div class="sourceCode" id="cb9"><pre class="sourceCode kotlin"><code class="sourceCode kotlin"><span id="cb9-1"><a href="#cb9-1" aria-hidden="true" tabindex="-1"></a>Observable<span class="op">.</span>fromIterable<span class="op">(</span>listOf<span class="op">(</span><span class="st">"id1"</span><span class="op">,</span> <span class="st">"id2"</span><span class="op">,</span> <span class="st">"id3"</span><span class="op">))</span></span>
<span id="cb9-2"><a href="#cb9-2" aria-hidden="true" tabindex="-1"></a>    <span class="op">.</span>flatMap <span class="op">&#123;</span> id <span class="op">-&gt;</span></span>
<span id="cb9-3"><a href="#cb9-3" aria-hidden="true" tabindex="-1"></a>        loadData<span class="op">(</span>id<span class="op">)</span></span>
<span id="cb9-4"><a href="#cb9-4" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#125;</span></span>
<span id="cb9-5"><a href="#cb9-5" aria-hidden="true" tabindex="-1"></a>    <span class="op">.</span>subscribeOn<span class="op">(</span>io<span class="op">())</span></span>
<span id="cb9-6"><a href="#cb9-6" aria-hidden="true" tabindex="-1"></a>    <span class="op">.</span>observeOn<span class="op">(</span>mainThread<span class="op">())</span></span>
<span id="cb9-7"><a href="#cb9-7" aria-hidden="true" tabindex="-1"></a>    <span class="op">.</span>toList<span class="op">()</span></span>
<span id="cb9-8"><a href="#cb9-8" aria-hidden="true" tabindex="-1"></a>    <span class="op">.</span>subscribe <span class="op">&#123;</span> result <span class="op">-&gt;</span> println<span class="op">(</span>result<span class="op">)</span> <span class="op">&#125;</span></span></code></pre></div>
<p>我们在这里的预期是，我们已经订阅了 <code>io</code>，<code>io()</code>
的底层有线程池，因此对每个 <code>id</code> 的 <code>loadData</code>
的调用是并行的。但是事实并非如此。我们使用 <code>flatMap</code>
编写了并发代码，但它不是并行运行的，其原因是我们告诉了程序我们要在
<code>io</code> 上启动链。我们的链的起点在 <code>flatMapIterable</code>
上，这意味着在订阅后，将使用 <code>io</code>
池中的一个线程，并在该单个线程上运行所有线程。为了改变行为并使我们的代码并行运行，我们需要将
<code>subscribeOn</code> 移动到 <code>flatMap</code> 之内：</p>
<div class="sourceCode" id="cb10"><pre class="sourceCode kotlin"><code class="sourceCode kotlin"><span id="cb10-1"><a href="#cb10-1" aria-hidden="true" tabindex="-1"></a>Observable<span class="op">.</span>fromIterable<span class="op">(</span>listOf<span class="op">(</span><span class="st">"id1"</span><span class="op">,</span> <span class="st">"id2"</span><span class="op">,</span> <span class="st">"id3"</span><span class="op">))</span></span>
<span id="cb10-2"><a href="#cb10-2" aria-hidden="true" tabindex="-1"></a>    <span class="op">.</span>flatMap <span class="op">&#123;</span> id <span class="op">-&gt;</span></span>
<span id="cb10-3"><a href="#cb10-3" aria-hidden="true" tabindex="-1"></a>        loadData<span class="op">(</span>id<span class="op">)</span></span>
<span id="cb10-4"><a href="#cb10-4" aria-hidden="true" tabindex="-1"></a>            <span class="op">.</span>subscribeOn<span class="op">(</span>io<span class="op">())</span></span>
<span id="cb10-5"><a href="#cb10-5" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#125;</span></span>
<span id="cb10-6"><a href="#cb10-6" aria-hidden="true" tabindex="-1"></a>    <span class="op">.</span>observeOn<span class="op">(</span>mainThread<span class="op">())</span></span>
<span id="cb10-7"><a href="#cb10-7" aria-hidden="true" tabindex="-1"></a>    <span class="op">.</span>toList<span class="op">()</span></span>
<span id="cb10-8"><a href="#cb10-8" aria-hidden="true" tabindex="-1"></a>    <span class="op">.</span>subscribe <span class="op">&#123;</span> result <span class="op">-&gt;</span> println<span class="op">(</span>result<span class="op">)</span> <span class="op">&#125;</span></span></code></pre></div>
<p>一旦执行到了
<code>flatMap</code>，每个内部的可观察对象（<code>flatMap</code>
内部的可观察对象）都将被订阅。意味着在每一次执行 <code>loadData</code>
函数，都会有一个订阅，从 <code>io</code>
池中获取新线程。这样我们就达到了并行性。</p>
<p>因此，当我们使用诸如 <code>flatMap</code>
之类的运算符时，我们的链应该有多个订阅点：一个用于原始链起点，每个用于内部的可观察点：</p>
<div class="sourceCode" id="cb11"><pre class="sourceCode kotlin"><code class="sourceCode kotlin"><span id="cb11-1"><a href="#cb11-1" aria-hidden="true" tabindex="-1"></a><span class="co">/* 订阅点 1 */</span> Observable<span class="op">.</span>fromIterable<span class="op">(</span>listOf<span class="op">(</span><span class="st">"id1"</span><span class="op">,</span> <span class="st">"id2"</span><span class="op">,</span> <span class="st">"id3"</span><span class="op">))</span></span>
<span id="cb11-2"><a href="#cb11-2" aria-hidden="true" tabindex="-1"></a>                    <span class="op">.</span>flatMap <span class="op">&#123;</span> id <span class="op">-&gt;</span></span>
<span id="cb11-3"><a href="#cb11-3" aria-hidden="true" tabindex="-1"></a><span class="co">/* 订阅点 2 */</span>             loadData<span class="op">(</span>id<span class="op">)</span></span>
<span id="cb11-4"><a href="#cb11-4" aria-hidden="true" tabindex="-1"></a>                            <span class="op">.</span>subscribeOn<span class="op">(</span>io<span class="op">())</span></span>
<span id="cb11-5"><a href="#cb11-5" aria-hidden="true" tabindex="-1"></a>                            <span class="op">.</span>flatMap <span class="op">&#123;</span></span>
<span id="cb11-6"><a href="#cb11-6" aria-hidden="true" tabindex="-1"></a><span class="co">/* 订阅点 3 */</span>                     loadData2<span class="op">(</span>id<span class="op">)</span></span>
<span id="cb11-7"><a href="#cb11-7" aria-hidden="true" tabindex="-1"></a>                                    <span class="op">.</span>subscribeOn<span class="op">(</span>io<span class="op">())</span></span>
<span id="cb11-8"><a href="#cb11-8" aria-hidden="true" tabindex="-1"></a>                            <span class="op">&#125;</span></span>
<span id="cb11-9"><a href="#cb11-9" aria-hidden="true" tabindex="-1"></a>                        <span class="op">&#125;</span></span>
<span id="cb11-10"><a href="#cb11-10" aria-hidden="true" tabindex="-1"></a>                    <span class="op">.</span>observeOn<span class="op">(</span>mainThread<span class="op">())</span></span>
<span id="cb11-11"><a href="#cb11-11" aria-hidden="true" tabindex="-1"></a>                    <span class="op">.</span>toList<span class="op">()</span></span>
<span id="cb11-12"><a href="#cb11-12" aria-hidden="true" tabindex="-1"></a>                    <span class="op">.</span>subscribe <span class="op">&#123;</span> result <span class="op">-&gt;</span> println<span class="op">(</span>result<span class="op">)</span> <span class="op">&#125;</span></span></code></pre></div>
<p>代码中的注释指向了每一个订阅发生的位置。通过使用
<code>subscribeOn</code>，我们可以声明在这些情况下应该在哪个调度程序订阅上进行。</p>
<h4 id="单线程运行">单线程运行</h4>
<p>最后，但也同样重要的是，如果我们不使用 <code>subscribeOn</code> 或
<code>observeOn</code>，那么代码将是同步进行的，所有执行将是顺序执行的，并且在下一个语句的可观察到的完整执行之前是暂停的。</p>
<p>以上就基本上是 RxJava 中的线程的全部内容，让我们现在走进 Kotlin
流。</p>
<h2 id="kotlin-流">Kotlin 流</h2>
<p>Kotlin 流的最基础使用方法如下所示：</p>
<div class="sourceCode" id="cb12"><pre class="sourceCode kotlin"><code class="sourceCode kotlin"><span id="cb12-1"><a href="#cb12-1" aria-hidden="true" tabindex="-1"></a>CoroutineScope<span class="op">(</span>Job<span class="op">()</span> <span class="op">+</span> Dispatchers<span class="op">.</span>Main<span class="op">).</span>launch <span class="op">&#123;</span></span>
<span id="cb12-2"><a href="#cb12-2" aria-hidden="true" tabindex="-1"></a>    observeSomething<span class="op">()</span></span>
<span id="cb12-3"><a href="#cb12-3" aria-hidden="true" tabindex="-1"></a>        <span class="op">.</span>flowOn<span class="op">(</span>Dispatchers<span class="op">.</span>IO<span class="op">)</span></span>
<span id="cb12-4"><a href="#cb12-4" aria-hidden="true" tabindex="-1"></a>        <span class="op">.</span>collect <span class="op">&#123;</span> result <span class="op">-&gt;</span> println<span class="op">(</span>result<span class="op">)</span> <span class="op">&#125;</span></span>
<span id="cb12-5"><a href="#cb12-5" aria-hidden="true" tabindex="-1"></a><span class="op">&#125;</span></span></code></pre></div>
<blockquote>
<p>现在，我们有了许多与协程相关的概念，可能需要对其进行解释。我们不会深入介绍协程这个功能或是
Kotlin Flow，因此，如果您不熟悉协程，最好先阅读有关协程的文档。</p>
</blockquote>
<p>该示例在某种程度上与 RxJava 部分中使用的示例相同：我们观察了
<code>io</code> 的一些变化，然后在 <code>main</code>
上打印结果，尽管代码有所不同。让我们找出区别以及它是如何工作的。</p>
<p>首先要注意的是，只能在某些协程范围内收集流（因为 <code>collect</code>
方法需要在 <code>suspend</code>
函数下执行）。因此，我们创建了合并范围，并在该范围内“启动”了新的协程。在启动的协程中，我们现在可以收集流。</p>
<p>关于 Kotlin
流和收集功能的重要一件事是称为上下文保留的功能。这意味着我们无需声明要在哪个调度器上收集数据，该调度程序始终与我们从流中收集数据的范围相同。</p>
<p>因此，如果要在 Main 中进行收集，则需要在协程中使用
<code>Dispatchers.Main</code> 来调用 <code>collect</code> 函数。</p>
<h4 id="flowon">flowOn</h4>
<p>这是一个运算符，用于更改工作流所处的上下文（尤其是线程调度）。</p>
<p><img src="https://cdn-images-1.medium.com/max/2000/1*QOMRfQTktM17z2xHUYmcrQ.png"></p>
<p>因此，在上面的示例中，通过编写
<code>flowOn(Dispatchers.IO)</code>，我们告诉了程序我们希望在输入输出上运行执行所有代码。</p>
<p>如果像以前的 RxJava 一样在 <code>map</code>
内部添加一些计算，我们将得到以下结果：</p>
<p><img src="https://cdn-images-1.medium.com/max/2000/1*zpbvxCRXjGLSEuFlnrWarg.png"></p>
<p>我们将看到，我们基本上可以通过在运算符之后声明 <code>flowOn</code>
来更改运算符的工作位置。</p>
<h4 id="launchin">launchIn</h4>
<p>关于 <code>collect</code> 函数的一件重要事情是它带有
<code>suspend</code> 声明的。这意味着当我们调用 <code>collect</code>
函数的时候，执行会被暂停直到流的完成。</p>
<p>因此，如果在同一个协程中放入两个 <code>collect</code>
函数，那么第一个将有效地阻止第二个执行：</p>
<p><img src="https://cdn-images-1.medium.com/max/2000/1*xopZFayVenZK03PQ9RoZ0Q.png"></p>
<p>在这里我们能够看到打印了返回值出来，但并没有显示第二次的返回值，因为第一个
<code>collect</code> 函数会被暂停并且不允许进行第二次
<code>collect</code> 函数的执行。</p>
<p>要想解决这个问题我们需要在不同的协程中启动各自流。</p>
<p><img src="https://cdn-images-1.medium.com/max/2000/1*511-boC1pDMN9gLmK9ySKg.png"></p>
<p>但是这个代码看起来并不漂亮，并且要使其看起来更好一点（没有附加的嵌套级别），我们可以将
<code>launchIn</code> 扩展功能（只是个在包装的启动中的语法糖）与
<code>onEach</code> 结合使用：</p>
<p><img src="https://cdn-images-1.medium.com/max/2000/1*atQKeG0bwwMfjBD7nBIZHg.png"></p>
<p>这样，我们创建的代码看起来更像我们之前在 RxJava上写过的那样，因为
RxJava 中的订阅通常不会被阻塞（除非使用了某些 <code>blockingxxx</code>
函数）。因此对于类似的情景，似乎 <code>launchin</code>
应该是我们的首选。</p>
<h4 id="flowof">flowOf</h4>
<p>为 <code>flowOf</code> 假设的情景与 <code>Observable.just</code>
类似：我们现在需要进行一些计算（挂起的），那么它将在外部范围内完成，不受
<code>flowOn</code> 的影响：</p>
<p><img src="https://cdn-images-1.medium.com/max/2000/1*jTX93fFjuwjxR33NLaSkmA.png"></p>
<p>如果在带有 <code>Dispatchers.Main</code> 的上下文中运行，那么
<code>calculate</code> 将在主线程上完成而不是输入输出上运行。</p>
<p>为了解决这个问题，您可以使用 <code>flow</code>
构建器并在其中明确定义内容：</p>
<p><img src="https://cdn-images-1.medium.com/max/2000/1*JSkHKLjh9X-YDL1Olkl5hQ.png"></p>
<p>然后将在输入输出线程上进行计算。</p>
<h4 id="flatmapmerge-并发和并行">FlatMapMerge 并发和并行</h4>
<p>为了了解 Kotlin Flow 如何与 <code>flatMapMerge</code>（对 RxJava 中
<code>flatMap</code> 的模拟）一起使用，我们将使用一些测试示例：</p>
<p><img src="https://cdn-images-1.medium.com/max/2000/1*_G4_NwfgY1wmO7aVoamsrw.png"></p>
<p>在这里，我们有在 <code>d1</code>
调度器上收集的流。这个流有两个项目，每个项目都平面映射到其他两个项目上。而且我们在
<code>d2</code> 调度器上有一个 <code>flowOn</code> 定义。</p>
<p>在代码中，我们添加了 <code>onEach</code>
的调用，用于输出执行的线程的信息。</p>
<p>在此示例中，输出为：</p>
<pre><code>inner: pool-2-thread-2 @coroutine#4
inner: pool-2-thread-3 @coroutine#5
inner: pool-2-thread-3 @coroutine#5
inner: pool-2-thread-2 @coroutine#4
collect: pool-1-thread-2 @coroutine#2
collect: pool-1-thread-2 @coroutine#2
collect: pool-1-thread-2 @coroutine#2
collect: pool-1-thread-2 @coroutine#2</code></pre>
<p>因此，我们发现与 RxJava 不同的是，即使我们将 <code>flowOn</code>
放在其中的 <code>flatMapMerge</code> 之外（之后），<code>flowOn</code>
也会通过在多个线程上并行运行来影响其中的代码执行。</p>
<p>那么我们将 <code>flowOn</code> 放在 <code>flatMapMerge</code>
中：</p>
<p><img src="https://cdn-images-1.medium.com/max/2000/1*sv6HwmwwsOufpc-00wZpCQ.png"></p>
<p>我们可以得到这些结果：</p>
<pre><code>inner: pool-2-thread-2 @coroutine#6
inner: pool-2-thread-1 @coroutine#7
inner: pool-2-thread-2 @coroutine#6
inner: pool-2-thread-1 @coroutine#7
collect: pool-1-thread-3 @coroutine#2
collect: pool-1-thread-3 @coroutine#2
collect: pool-1-thread-3 @coroutine#2
collect: pool-1-thread-3 @coroutine#2</code></pre>
<p>同样，每个内部流都在其自己的线程的第二个池在上运行。因此，在哪里定义
<code>flowOn</code> 似乎没有什么区别。</p>
<p>但是其实有一个区别 —— 让我们通过在第一个 <code>flowOf</code>
调用下面添加 <code>onEach</code> 来看看它是什么：</p>
<p><img src="https://cdn-images-1.medium.com/max/2000/1*isZ3b5z8Jg7f-V9tOqdFlw.png"></p>
<p>结果如下：</p>
<pre><code>outer: pool-2-thread-1 @coroutine#3
outer: pool-2-thread-1 @coroutine#3
inner: pool-2-thread-2 @coroutine#4
inner: pool-2-thread-3 @coroutine#5
inner: pool-2-thread-3 @coroutine#5
inner: pool-2-thread-2 @coroutine#4
collect: pool-1-thread-2 @coroutine#2
collect: pool-1-thread-2 @coroutine#2
collect: pool-1-thread-2 @coroutine#2
collect: pool-1-thread-2 @coroutine#2</code></pre>
<p>这意味着所有在 <code>flowOn</code> 以前的代码都会在第二个 pool
中运行，外面的代码会在第一线程，而每一个里面的 flow
都会有属于它自己的线程：</p>
<p><img src="https://cdn-images-1.medium.com/max/2000/1*dfWRpulMkYT_8aNiXJVCPA.png"></p>
<p>红色部分运行在 <code>d2</code> 而蓝色部分运行在 <code>d1</code>。</p>
<p>下面让我们来看看如果我们把 <code>flowOn</code> 放在
<code>flatMapMerge</code> 中会发生什么：</p>
<p><img src="https://cdn-images-1.medium.com/max/2000/1*SM6l5_038WGzm9Z4Zd97nA.png"></p>
<p>输出如下：</p>
<pre><code>outer: pool-1-thread-2 @coroutine#3
outer: pool-1-thread-2 @coroutine#3
inner: pool-2-thread-1 @coroutine#6
inner: pool-2-thread-2 @coroutine#7
inner: pool-2-thread-1 @coroutine#6
inner: pool-2-thread-2 @coroutine#7
collect: pool-1-thread-3 @coroutine#2
collect: pool-1-thread-3 @coroutine#2
collect: pool-1-thread-3 @coroutine#2
collect: pool-1-thread-3 @coroutine#2</code></pre>
<p>我们可以看到外面的运行在了 <code>d1</code>，也因而没有被
<code>flowOn</code> 影响：</p>
<p><img src="https://cdn-images-1.medium.com/max/2000/1*5D5AHoF0nPJyD7lcMvp0cA.png"></p>
<p>这就是它们间的差异。</p>
<h2 id="比较">比较</h2>
<p>现在让我们来做一些比较和总结，也看看几个例子。</p>
<p>从比较部分来看，RxJava 和 Kotlin Flow 都展现出 cold
streams。两者都有一般的操作符和方法来改变链中的线程（调度器或分配器）。</p>
<h4 id="线程的控制">线程的控制</h4>
<p>在RxJava中，用于线程的<strong>调度器</strong>被使用（最常见的有
<code>io()</code>、<code>computation()</code>、<code>mainThread()</code>）。</p>
<p>在Kotlin Flow中，用于线程的<strong>调度器</strong>最常见的是
<code>IO</code>、<code>Default</code>、<code>Main</code>）。</p>
<h4 id="线程操作符">线程操作符</h4>
<p>在RxJava中，我们使用<strong>subscribeOn</strong>声明哪个调度器链应该被<strong>订阅（启动）</strong>，使用
<code>observeOn</code> 声明它应该在哪里进行。</p>
<p>在 Kotlin Flow 中，我们使用收集流的 Scope
定义了在使用在哪个上下文（调度器）上收集完这个链，以及在
<code>flowOn</code> 之前它的执行的地方。</p>
<p>这就像是个倒过来的方法。在 RxJava
中，我们在下面声明启动和修改链。</p>
<p>而在 Kotlin Flow 中，我们声明用于在上面修改链。</p>
<h4 id="迁移例子">迁移例子</h4>
<p>考虑一下，我们有一些复杂的 RxJava 链，我们希望迁移到 Kotlin
Flow，并保持线程逻辑不变。从上文中我们已经了解到，基本上遵循上下颠倒的思维方式就可以了。当然，我们完成代码迁移后，还要记得进行测试。</p>
<p>同样，我们应该已经记住： RxJava
中的非阻塞线程和在协程之间重用线程并挂起是不同的方法，而且两者是无法建立精确的一对一关系的。尽管我们可以施加一些约束，但是我们希望将并行性保持在我们拥有并行性的位置，并在相同的线程池上运行相同的代码块。</p>
<p>为了使我们的测试示例尽可能正确，我们将在调度器之间使用 Java
执行程序。</p>
<p>RxJava 的部分：</p>
<p><img src="https://cdn-images-1.medium.com/max/2000/1*24TAclWSQTvfOlYIw9I65w.png"></p>
<p>Kotlin Flow 的那一部分：</p>
<p><img src="https://cdn-images-1.medium.com/max/2000/1*6WmwuDO_EMLlyHLDycCu8A.png"></p>
<p>我们将拥有 4 个包含 3 个线程的池，而主要执行者只有 1 个线程。</p>
<p>我们的 RxJava 的示例将如下所示：</p>
<p><img src="https://cdn-images-1.medium.com/max/2000/1*nYL6iK4SOlMEh9YMOsSbKQ.png"></p>
<p>在这里，我们有三个项目流，它们从 s1 开始，然后将执行切换到 s2。在
<code>flatMap</code>
内部，我们设下了可观察的订阅（允许并行）以及一些线程切换。然后，在平面映射之后，我们进行了一些代码的执行并在主线程中打印结果。</p>
<p>运行程序后，我们将看到以下输出：</p>
<pre><code>1: pool-1-thread-1
1: pool-1-thread-1
1: pool-1-thread-1
2: pool-3-thread-1
2: pool-3-thread-1
2: pool-3-thread-1
inner 1: pool-4-thread-1
inner 1: pool-4-thread-2
inner 1: pool-4-thread-1
inner 1: pool-4-thread-1
inner 1: pool-4-thread-2
inner 1: pool-4-thread-2
inner 1: pool-4-thread-3
inner 2: pool-5-thread-1
inner 2: pool-5-thread-2
3: pool-5-thread-1
inner 2: pool-5-thread-2
inner 1: pool-4-thread-3
inner 2: pool-5-thread-2
inner 2: pool-5-thread-3
3: pool-5-thread-1
3: pool-5-thread-1
3: pool-5-thread-1
end: pool-6-thread-1
end: pool-6-thread-1
inner 1: pool-4-thread-3
end: pool-6-thread-1
3: pool-5-thread-1
inner 2: pool-5-thread-1
3: pool-5-thread-1
inner 2: pool-5-thread-3
inner 2: pool-5-thread-1
end: pool-6-thread-1
3: pool-5-thread-3
3: pool-5-thread-3
end: pool-6-thread-1
inner 2: pool-5-thread-3
3: pool-5-thread-3
end: pool-6-thread-1
end: pool-6-thread-1
end: pool-6-thread-1
end: pool-6-thread-1</code></pre>
<p>它很长，但是应该符合我们之前写的假设。</p>
<p>让我们直观化显示一下数据：</p>
<p><img src="https://cdn-images-1.medium.com/max/2000/1*VNsQnjyftFkMvtcPD8x_rQ.png"></p>
<p>在这里，我们可以精确地看到上面所述的内容。其中需要重点关注的内容是，<code>3</code>
与 <code>inner 2</code>
在同一调度器上运行。我们有两个起点（初始起点和内部起点），在这里我们将
<code>subscribeOn</code>
允许在内部并行。然后移动到链的下方，并在必要时添加了
<code>observeOn</code> 的定义。</p>
<p>现在，我们切换到 Kotlin Flow 的版本：</p>
<p><img src="https://cdn-images-1.medium.com/max/2000/1*qIELqmv38MzyvsUml8QUYw.png"></p>
<p>从一开始，我们就将主线程固定为结束的线程。然后我们从最下面开始看起，我们在需要的地方添加
<code>flowOn</code>。首先，我们添加了 <code>d4</code> 并注意到
<code>inner 2</code> 也应在其上运行。然后，我们切换到
<code>d3</code>，依此类推，直到链的最顶端。结果如下：</p>
<pre><code>1: pool-1-thread-1 @coroutine#6
1: pool-1-thread-1 @coroutine#6
1: pool-1-thread-1 @coroutine#6
2: pool-2-thread-2 @coroutine#5
2: pool-2-thread-2 @coroutine#5
2: pool-2-thread-2 @coroutine#5
inner 1: pool-3-thread-1 @coroutine#10
inner 1: pool-3-thread-2 @coroutine#11
inner 1: pool-3-thread-3 @coroutine#12
inner 1: pool-3-thread-2 @coroutine#11
inner 1: pool-3-thread-3 @coroutine#12
inner 2: pool-4-thread-3 @coroutine#9
inner 1: pool-3-thread-1 @coroutine#10
inner 1: pool-3-thread-3 @coroutine#12
inner 1: pool-3-thread-2 @coroutine#11
inner 2: pool-4-thread-1 @coroutine#7
inner 2: pool-4-thread-2 @coroutine#8
inner 2: pool-4-thread-1 @coroutine#7
inner 2: pool-4-thread-3 @coroutine#9
inner 1: pool-3-thread-1 @coroutine#10
3: pool-4-thread-1 @coroutine#3
inner 2: pool-4-thread-3 @coroutine#9
inner 2: pool-4-thread-2 @coroutine#8
end: pool-5-thread-1 @coroutine#2
3: pool-4-thread-1 @coroutine#3
inner 2: pool-4-thread-2 @coroutine#8
3: pool-4-thread-1 @coroutine#3
end: pool-5-thread-1 @coroutine#2
3: pool-4-thread-1 @coroutine#3
end: pool-5-thread-1 @coroutine#2
end: pool-5-thread-1 @coroutine#2
3: pool-4-thread-1 @coroutine#3
3: pool-4-thread-1 @coroutine#3
end: pool-5-thread-1 @coroutine#2
end: pool-5-thread-1 @coroutine#2
3: pool-4-thread-1 @coroutine#3
3: pool-4-thread-1 @coroutine#3
end: pool-5-thread-1 @coroutine#2
end: pool-5-thread-1 @coroutine#2
inner 2: pool-4-thread-1 @coroutine#7
3: pool-4-thread-1 @coroutine#3
end: pool-5-thread-1 @coroutine#2</code></pre>
<p>除了日志的外观不同（因为 RxJava
与协程不同），我们仍然可以看到所有逻辑仍然适用，并且我们没有破坏并行执行。</p>
<p>虽然我们仍然可以看到一些差异。例如，我们在RxJava示例中运行“
3”的代码在以下位置运行：</p>
<pre><code>3: pool-5-thread-1
...
3: pool-5-thread-3</code></pre>
<p>在协程示例中，它总是在一个线程上运行：</p>
<pre><code>3: pool-4-thread-1 @coroutine#3</code></pre>
<p>这可能是由于并发而引起的巧合，也可能是因为协程程序更好地利用了线程的使用（或者可能不是，实际上我不知道，所以如果有人有其他想法，可以毫不犹豫地发布响应）。尽管我们不太在乎，因为无论如何线程池的使用都是正确的。</p>
<p>如果我们可视化线程，则可以执行以下操作：</p>
<p><img src="https://cdn-images-1.medium.com/max/2000/1*z6XDLAkVgMLmyeYsvSTbbA.png"></p>
<h2 id="小结">小结</h2>
<p>Kotlin Flow 真的不错，可以跟 RxJava Observable
相媲美。它们的使用方法和支持的运算符都相似，相似的运算符，并且都在其链内处理线程。他们在使用
<code>Observable.just</code> 或 <code>flowOf</code>
时也有类似的技巧。但是就并发性和并行性而言，Kotlin Flow
似乎更简洁。同样，Kotlin Flow 也没有诸如带有 <code>subscribeOn</code> 的
RxJava
这样的问题，因为在流程中，我们用作用域声明了链的末尾，从技术上讲，不可能将它们放多个。</p>
<p>在处理线程的方式上，Kotlin Flow 和 RxJava 是相反的。在 RxJava
中，我们认为是从上到下，而在 Kotlin Flow
中则是从下到上。但无论如何，如果有必要，在不破坏大部分功能的前提下，将代码进行反向迁移也是可行的。</p>
<p>希望您喜欢这篇文章，但愿它对您有所帮助</p>
<p>祝你编程快乐！</p>]]></content>
      <categories>
        <category>Computer Science</category>
        <category>Backend</category>
        <category>Kotlin</category>
      </categories>
      <tags>
        <tag>Computer Science</tag>
        <tag>Backend</tag>
        <tag>Java</tag>
        <tag>Kotlin</tag>
      </tags>
  </entry>
  <entry>
    <title>API、WebSockets 和 WebHooks：究竟应该选谁</title>
    <url>/2021/03/10/computer%20science/backend/apis-vs-websockets-vs-webhooks-what-to-choose/</url>
    <content><![CDATA[<blockquote>
<ul>
<li>原文地址：<a href="https://blog.bitsrc.io/apis-vs-websockets-vs-webhooks-what-to-choose-5942b73aeb9b">APIs
vs.&nbsp;WebSockets vs.&nbsp;WebHooks: What to Choose?</a></li>
<li>原文作者：<a href="https://medium.com/@chameeradulanga">Chameera
Dulanga</a></li>
<li>译者：<a href="https://github.com/PassionPenguin">霜羽
Hoarfroster</a></li>
<li>校对者：<a href="https://github.com/Chorer">Chorer</a>、<a href="https://github.com/HumanBeingXenon">HumanBeingXenon</a>、<a href="https://github.com/Usualminds">Usualminds</a></li>
</ul>
</blockquote>
<p><img src="https://cdn-images-1.medium.com/max/5760/1*k3Etz0QztOVwxIMYg1Tatw.jpeg"></p>
<p>无论开发什么应用，我们都需要一种可靠的机制来进行组件间通信。</p>
<p>例如，在 Web
应用中，我们需要在浏览器和服务器之间进行通信；有时，服务器需要将消息返回浏览器；此外，在某些情况下，后端服务还可能依赖于另一个需要很长响应时间的服务。</p>
<blockquote>
<p>这就是 API、WebSockets 和 WebHooks
发挥作用的地方。它们为该问题提供了完美的解决思路，让我们得以在应用的不同模块之间进行通信和数据同步。</p>
</blockquote>
<p>尽管这三种方法主要都是用于通信的，它们之间还是有一些明显的区别。在本文中，我们将讨论如何使用这三种
API，以及如何根据使用场景选择最合适的方法。</p>
<h2 id="api-为用户提供接口和协议">API —— 为用户提供接口和协议。</h2>
<blockquote>
<p><strong>API （应用程序接口）是用户与服务商之间的协议，它通常暴露在
HTTP 请求中。</strong></p>
</blockquote>
<p>对于 Web 和移动设备上进行的基本 CRUD
操作，甚至是在集成服务访问别的服务等场景，这个方法都非常有效。大多数情况下，API
通信使用 JSON 或 XML 作为传输数据的格式。</p>
<p>让我们假设一个场景 ——
用户在电商网站上搜索商品。一旦用户使用搜索查询请求了自己想要查找的商品，他就会在几秒钟内得到响应。API
的工作方式就是如此简单。</p>
<figure>
<img src="https://cdn-images-1.medium.com/max/2000/1*2P5Wwur2TEno1WY0lZHP3w.png" alt="API 调用在 Web 应用中的工作方式">
<figcaption aria-hidden="true">API 调用在 Web
应用中的工作方式</figcaption>
</figure>
<blockquote>
<p>正如我最初提到的，API
请求是用户发起的，因此它们非常适合如下应用程序：持久状态、执行快速操作以接收来自后端操作的实时响应。</p>
</blockquote>
<p>但是，使用 API
的时候，除非浏览器定期发送请求检查更新情况，否则没有一种直接的方法可以让服务器主动与浏览器进行通信。</p>
<p>举个例子，诸如报告生成之类的任务可能会花费更多的时间和资源，而这通常需要在后台完成。因此用户请求服务商去生成报告后，服务器并没有直接的方法来告知用户任务已完成，我们的浏览器可能需要持续轮询
API。</p>
<p><strong>但是轮询效率不高，我们有更好的方法（如
WebSockets）来解决此类问题。</strong></p>
<h2 id="websockets-实时通信的一种方案">WebSockets ——
实时通信的一种方案</h2>
<blockquote>
<p>WebSockets
允许用户和服务商之间建立一个持久的双向通信来解决这个问题。</p>
</blockquote>
<p>使用全双工信道可以让服务器随时向用户发送消息。由于所有现代浏览器都支持
WebSockets，可以说它是实时 Web 应用场景的最佳解决方案。</p>
<figure>
<img src="https://cdn-images-1.medium.com/max/2690/1*6pyJqsMadK3ItpzWa3qdSA.png" alt="WebSockets 的工作方式">
<figcaption aria-hidden="true">WebSockets 的工作方式</figcaption>
</figure>
<blockquote>
<p>然而一直保持连接打开会消耗资源、影响能耗（移动设备），并且难以扩展服务。</p>
</blockquote>
<p>例如，还是考虑上面那个生成报告的场景，在 Web 上使用 WebSockets
可能是一个不错的选择，但对于移动设备来说不是最佳方案，因为我们可能需要研究诸如推送通知之类的技术。此外，如果我们的后端是依赖于外部服务来生成报告的，那么
WebSockets 同样不是后端与外部服务通信的最佳选择。</p>
<p><strong>WebHooks 这类机制在这里就派上用场了。</strong></p>
<figure>
<img src="Https://cdn-images-1.medium.com/max/2006/1*vhbQNBBr2Lmzz2QBa5KYkQ.png" alt="如何使用 WebSockets 和 WebHooks 连接用户、后端和外部服务。">
<figcaption aria-hidden="true">如何使用 WebSockets 和 WebHooks
连接用户、后端和外部服务。</figcaption>
</figure>
<h2 id="webhooks-完美的后端回调解决方案">WebHooks ——
完美的后端回调解决方案</h2>
<p>WebHooks 通过提供一种断开机制以接收来自服务商的响应，从而为
WebSockets 中的棘手难题提供了解决方案。</p>
<p>如果从技术层面来看，用户将 WebHooks（准确来说是回调
URL）注册到服务商中，这个 URL 将充当接收来自 WebHooks 数据的地方。</p>
<blockquote>
<p>在大多数情况下，这个 URL 属于另一台服务器。WebHooks
通常用于在服务器或后端进程之间进行通信。</p>
</blockquote>
<p>如果深入研究通信的过程，我们可以将该过程分为四个部分：</p>
<figure>
<img src="https://cdn-images-1.medium.com/max/3000/1*2BYW_05KftDQ4U3XVrXQOA.png" alt="WebHooks 的工作方式">
<figcaption aria-hidden="true">WebHooks 的工作方式</figcaption>
</figure>
<ul>
<li><strong>事件触发器</strong>：这是由你指定的运行 WebHooks
的事件。每当此事件发生时，WebHooks 都会发送请求。</li>
<li><strong>WebHooks 提供程序创建 WebHooks 并发送 POST 请求：</strong>
WebHooks 提供程序负责监听事件并构建 WebHooks。一旦事件被触发，WebHooks
提供程序会发送一个 HTTP POST 请求发送给第三方应用程序。</li>
<li><strong>第三方应用程序接收数据</strong>：第三方应用程序将接收到数据，并转发给
URL 或者我们提供给 WebHooks 提供程序的侦听器。</li>
<li><strong>第三方应用程序中指定的操作</strong>：一旦应用程序收到 POST
请求，开发人员就可以任意使用数据。</li>
</ul>
<blockquote>
<p>从表面上看，大概我们都会觉得这与 API 流程完全相反，因此，大多数人将
WebHooks 称为反向 API。</p>
</blockquote>
<hr>
<h2 id="结论">结论</h2>
<p>正如我最初提到的，WebHooks、WebSockets 和 API
都可以用于通信，只是它们具有不同的使用场景。</p>
<p>对于仅需要基本 CRUD 操作和同步响应的应用程序，API
是最佳选择。而且，API 可以轻松地与 Web
和移动应用程序以及服务集成一起使用。</p>
<p>但是，如果我们的 Web 应用需要与后端进行实时通信，那么我们更应该选择
WebSockets，因为它允许我们在浏览器和后端之间建立双向信道。</p>
<p>但是，WebHooks 与 API 和 WebSockets 稍有不同，它更像是反向
API。一旦用户在服务商处注册了 WebHooks URL，后者就可以在需要时调用
WebHooks。</p>
<p>相信现在你已经了解这些通信方式的不同使用场景，如果你有什么想要分享的内容，请在评论区中留言。</p>
<p>感谢你的阅读！</p>]]></content>
      <categories>
        <category>Computer Science</category>
        <category>Backend</category>
      </categories>
      <tags>
        <tag>Computer Science</tag>
        <tag>Backend</tag>
      </tags>
  </entry>
  <entry>
    <title>JavaScript Temporal API —— Date API 问题的一个解决方案</title>
    <url>/2021/03/10/computer%20science/frontend/javascript-temporal-api-a-fix-for-the-date-api/</url>
    <content><![CDATA[<blockquote>
<ul>
<li>原文地址：<a href="https://blog.bitsrc.io/javascript-temporal-api-a-fix-for-the-date-api-aa8381a4234c">JavaScript
Temporal API- A Fix for the Date API</a></li>
<li>原文作者：<a href="https://medium.com/@nathansebhastian">Nathan
Sebhastian</a></li>
<li>译者：<a href="https://github.com/PassionPenguin">霜羽
Hoarfroster</a></li>
<li>校对者：<a href="https://github.com/Chorer">Chorer</a>、<a href="https://github.com/Usualminds">Usualminds</a></li>
</ul>
</blockquote>
<p><img src="https://cdn-images-1.medium.com/max/2024/1*iq9Xe8BZue94e2BD4ecpqA.png"></p>
<p>JavaScript 的日期处理 API 比较糟糕，因为它是直接对 <a href="https://docs.oracle.com/javase/6/docs/api/java/util/Date">Java 的
<code>Date</code> 类</a> 进行复制来实现了 <code>Date</code> 对象，而
Java 维护者最终弃用了许多 <code>Date</code> 类的方法，并于 1997 年创建了
<code>Calendar</code> 类以取代它。</p>
<p>但是 JavaScript 的 <code>Date</code> API
还没有进行进一步修复，这就是为什么我们今天会遇到以下问题：</p>
<ul>
<li><code>Date</code> 对象是可变的</li>
<li>用于日期和时间计算的混乱 API（例如，天数的加减）</li>
<li>仅支持 UTC 和本地时区</li>
<li>从字符串中解析日期的不可靠</li>
<li>不支持公历以外的其他历法</li>
</ul>
<p>但由于目前 <code>Date</code> API
被广泛地应用于各种库和浏览器引擎中，我们暂时不可能修复其错误部分。如果我们更改它的底层实现，就会很可能对许多现有的网站和库造成破坏性影响。</p>
<p>新的 <code>Temporal</code> API 提案旨在解决 <code>Date</code> API
的问题，它对 JavaScript 的日期和时间操作进行了以下改进：</p>
<ul>
<li>仅创建和处理不可变的 <code>Temporal</code> 对象</li>
<li>用于日期和时间计算的简单 API</li>
<li>支持所有时区</li>
<li>遵循 ISO-8601 格式进行严格的日期解析</li>
<li>支持非公历的历法</li>
</ul>
<blockquote>
<p>请记住，<code>Temporal</code> 提案<a href="https://github.com/tc39/proposal-temporal#status">当前处于第二阶段</a>，尚未准备好用于生产环境中。</p>
</blockquote>
<p>让我们借助代码示例理解 <code>Temporal</code> API
的功能吧。下文中的所有 <code>Temporal</code> API 代码都是使用 <a href="https://www.npmjs.com/package/proposal-temporal">Temporal
Polyfill</a> 创建的。</p>
<h2 id="不可变的日期对象">不可变的日期对象</h2>
<p>使用 JavaScript 的 <code>new Date()</code> 构造器创建的
<code>Date</code> 对象是可变的，意味着你可以在初始化以后修改它的值：</p>
<div class="sourceCode" id="cb1"><pre class="sourceCode js"><code class="sourceCode javascript"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a><span class="kw">let</span> date <span class="op">=</span> <span class="kw">new</span> <span class="bu">Date</span>(<span class="st">"2021-02-20"</span>)<span class="op">;</span></span>
<span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a><span class="bu">console</span><span class="op">.</span><span class="fu">log</span>(date)<span class="op">;</span> <span class="co">// 2021-02-20T00:00:00.000Z</span></span>
<span id="cb1-3"><a href="#cb1-3" aria-hidden="true" tabindex="-1"></a>date<span class="op">.</span><span class="fu">setYear</span>(<span class="dv">2000</span>)<span class="op">;</span></span>
<span id="cb1-4"><a href="#cb1-4" aria-hidden="true" tabindex="-1"></a><span class="bu">console</span><span class="op">.</span><span class="fu">log</span>(date)<span class="op">;</span> <span class="co">// 2000-02-20T00:00:00.000Z</span></span></code></pre></div>
<p>尽管看似无关紧要，但这种可变的对象在处理不当时可能会导致错误，其中一种情况就是当我们尝试将天数添加到当前日期时。</p>
<p>例如，这是一个将当前日期增加一周的功能。 由于 <code>setDate</code>
会修改对象本身，因此我们会得到<strong>两个具有相同日期值的对象</strong>：</p>
<div class="sourceCode" id="cb2"><pre class="sourceCode js"><code class="sourceCode javascript"><span id="cb2-1"><a href="#cb2-1" aria-hidden="true" tabindex="-1"></a><span class="kw">function</span> <span class="fu">addOneWeek</span>(date) &#123;</span>
<span id="cb2-2"><a href="#cb2-2" aria-hidden="true" tabindex="-1"></a>    date<span class="op">.</span><span class="fu">setDate</span>(date<span class="op">.</span><span class="fu">getDate</span>() <span class="op">+</span> <span class="dv">7</span>)<span class="op">;</span></span>
<span id="cb2-3"><a href="#cb2-3" aria-hidden="true" tabindex="-1"></a>    <span class="cf">return</span> date<span class="op">;</span></span>
<span id="cb2-4"><a href="#cb2-4" aria-hidden="true" tabindex="-1"></a>&#125;</span>
<span id="cb2-5"><a href="#cb2-5" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb2-6"><a href="#cb2-6" aria-hidden="true" tabindex="-1"></a><span class="kw">let</span> today <span class="op">=</span> <span class="kw">new</span> <span class="bu">Date</span>()<span class="op">;</span></span>
<span id="cb2-7"><a href="#cb2-7" aria-hidden="true" tabindex="-1"></a><span class="kw">let</span> oneWeekLater <span class="op">=</span> <span class="fu">addOneWeek</span>(today)<span class="op">;</span></span>
<span id="cb2-8"><a href="#cb2-8" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb2-9"><a href="#cb2-9" aria-hidden="true" tabindex="-1"></a><span class="bu">console</span><span class="op">.</span><span class="fu">log</span>(today)<span class="op">;</span></span>
<span id="cb2-10"><a href="#cb2-10" aria-hidden="true" tabindex="-1"></a><span class="bu">console</span><span class="op">.</span><span class="fu">log</span>(oneWeekLater)<span class="op">;</span> <span class="co">//  值和变量 today 一样</span></span></code></pre></div>
<p><code>Temporal</code>
提供了不直接修改对象的方法，进而修复了这个问题，例如下面就是使用
<code>Temporal</code> API 添加一周的例子：</p>
<div class="sourceCode" id="cb3"><pre class="sourceCode js"><code class="sourceCode javascript"><span id="cb3-1"><a href="#cb3-1" aria-hidden="true" tabindex="-1"></a><span class="kw">const</span> date <span class="op">=</span> Temporal<span class="op">.</span><span class="at">now</span><span class="op">.</span><span class="fu">plainDateISO</span>()<span class="op">;</span></span>
<span id="cb3-2"><a href="#cb3-2" aria-hidden="true" tabindex="-1"></a><span class="bu">console</span><span class="op">.</span><span class="fu">log</span>(date)<span class="op">;</span> <span class="co">// 2021-02-20</span></span>
<span id="cb3-3"><a href="#cb3-3" aria-hidden="true" tabindex="-1"></a><span class="bu">console</span><span class="op">.</span><span class="fu">log</span>(date<span class="op">.</span><span class="fu">add</span>(&#123;<span class="dt">days</span><span class="op">:</span> <span class="dv">7</span>&#125;))<span class="op">;</span> <span class="co">// 2021-02-27</span></span>
<span id="cb3-4"><a href="#cb3-4" aria-hidden="true" tabindex="-1"></a><span class="bu">console</span><span class="op">.</span><span class="fu">log</span>(date)<span class="op">;</span> <span class="co">// 2021-02-20</span></span></code></pre></div>
<p>如上面的代码所示，<code>Temporal</code> 为我们提供了
<code>.add()</code>
方法，让我们能将天、周、月或年添加到当前日期对象中而不会修改原始值。</p>
<h2 id="用于日期和时间计算的-api">用于日期和时间计算的 API</h2>
<p>前面的 <code>Temporal</code> 示例中我们了解到了 <code>.add()</code>
方法，它能帮助我们对日期对象执行计算。我们现在使用的 <code>Date</code>
API 仅提供了获取和设置日期值的方法，不如 <code>Temporal</code>
来得简单直接。</p>
<p><code>Temporal</code> 还为我们提供了多个 API 来计算日期值。比如说
<code>until()</code> 方法，它可以计算 <code>firstDate</code> 和
<code>secondDate</code> 之间的时间差。</p>
<p>而如果使用 <code>Date</code>
API，我们需要手动计算两个日期之间的天数，如下所示：</p>
<div class="sourceCode" id="cb4"><pre class="sourceCode js"><code class="sourceCode javascript"><span id="cb4-1"><a href="#cb4-1" aria-hidden="true" tabindex="-1"></a><span class="kw">const</span> oneDay <span class="op">=</span> <span class="dv">24</span> <span class="op">*</span> <span class="dv">60</span> <span class="op">*</span> <span class="dv">60</span> <span class="op">*</span> <span class="dv">1000</span><span class="op">;</span></span>
<span id="cb4-2"><a href="#cb4-2" aria-hidden="true" tabindex="-1"></a><span class="kw">const</span> firstDate <span class="op">=</span> <span class="kw">new</span> <span class="bu">Date</span>(<span class="dv">2008</span><span class="op">,</span> <span class="dv">1</span><span class="op">,</span> <span class="dv">12</span>)<span class="op">;</span></span>
<span id="cb4-3"><a href="#cb4-3" aria-hidden="true" tabindex="-1"></a><span class="kw">const</span> secondDate <span class="op">=</span> <span class="kw">new</span> <span class="bu">Date</span>(<span class="dv">2008</span><span class="op">,</span> <span class="dv">1</span><span class="op">,</span> <span class="dv">22</span>)<span class="op">;</span></span>
<span id="cb4-4"><a href="#cb4-4" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb4-5"><a href="#cb4-5" aria-hidden="true" tabindex="-1"></a><span class="kw">const</span> diffDays <span class="op">=</span> <span class="bu">Math</span><span class="op">.</span><span class="fu">round</span>(<span class="bu">Math</span><span class="op">.</span><span class="fu">abs</span>((firstDate <span class="op">-</span> secondDate) <span class="op">/</span> oneDay))<span class="op">;</span></span>
<span id="cb4-6"><a href="#cb4-6" aria-hidden="true" tabindex="-1"></a><span class="bu">console</span><span class="op">.</span><span class="fu">log</span>(diffDays)<span class="op">;</span> <span class="co">// 10</span></span></code></pre></div>
<p>如果是 <code>Temporal</code> API，我们可以通过 <code>until()</code>
方法简单地计算 <code>diffDays</code>：</p>
<div class="sourceCode" id="cb5"><pre class="sourceCode js"><code class="sourceCode javascript"><span id="cb5-1"><a href="#cb5-1" aria-hidden="true" tabindex="-1"></a><span class="kw">const</span> firstDate <span class="op">=</span> Temporal<span class="op">.</span><span class="at">PlainDate</span><span class="op">.</span><span class="fu">from</span>(<span class="st">'2008-01-12'</span>)<span class="op">;</span></span>
<span id="cb5-2"><a href="#cb5-2" aria-hidden="true" tabindex="-1"></a><span class="kw">const</span> secondDate <span class="op">=</span> Temporal<span class="op">.</span><span class="at">PlainDate</span><span class="op">.</span><span class="fu">from</span>(<span class="st">'2008-01-22'</span>)<span class="op">;</span></span>
<span id="cb5-3"><a href="#cb5-3" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb5-4"><a href="#cb5-4" aria-hidden="true" tabindex="-1"></a><span class="kw">const</span> diffDays <span class="op">=</span> firstDate<span class="op">.</span><span class="fu">until</span>(secondDate)<span class="op">.</span><span class="at">days</span><span class="op">;</span></span>
<span id="cb5-5"><a href="#cb5-5" aria-hidden="true" tabindex="-1"></a><span class="bu">console</span><span class="op">.</span><span class="fu">log</span>(diffDays)<span class="op">;</span> <span class="co">// 10</span></span></code></pre></div>
<p>其他的帮助我们计算的方法还有：</p>
<ul>
<li><a href="https://tc39.es/proposal-temporal/docs/plaindate.html#subtract"><code>.subtract()</code>
方法</a>，用于减少当前日期的天数、月数或年数。</li>
<li><a href="https://tc39.es/proposal-temporal/docs/plaindate.html#since"><code>.since()</code>
方法</a>，用于计算一个特定日期迄今为止所经历的天数、月数或年数。</li>
<li><a href="https://tc39.es/proposal-temporal/docs/plaindate.html#equals"><code>.equals()</code>
方法</a>，用于比较两个日期是否相同。</li>
</ul>
<p>这些 API 能够帮助我们去完成计算，而无需自己创建解决方案。</p>
<h2 id="支持所有时区">支持所有时区</h2>
<p>当前的 <code>Date</code> API 在系统中以 UTC
标准跟踪时间，通常会在计算机的时区中生成日期对象，操纵时区没有简单的方法。</p>
<p>我发现操纵时区的一种方式是使用 <code>Date.toLocaleString()</code>
方法，如下所示：</p>
<div class="sourceCode" id="cb6"><pre class="sourceCode js"><code class="sourceCode javascript"><span id="cb6-1"><a href="#cb6-1" aria-hidden="true" tabindex="-1"></a><span class="kw">let</span> date <span class="op">=</span> <span class="kw">new</span> <span class="bu">Date</span>()<span class="op">;</span></span>
<span id="cb6-2"><a href="#cb6-2" aria-hidden="true" tabindex="-1"></a><span class="kw">let</span> tokyoDate <span class="op">=</span> date<span class="op">.</span><span class="fu">toLocaleString</span>(<span class="st">"en-US"</span><span class="op">,</span> &#123;</span>
<span id="cb6-3"><a href="#cb6-3" aria-hidden="true" tabindex="-1"></a>    <span class="dt">timeZone</span><span class="op">:</span> <span class="st">"Asia/Tokyo"</span></span>
<span id="cb6-4"><a href="#cb6-4" aria-hidden="true" tabindex="-1"></a>&#125;)<span class="op">;</span></span>
<span id="cb6-5"><a href="#cb6-5" aria-hidden="true" tabindex="-1"></a><span class="kw">let</span> singaporeDate <span class="op">=</span> date<span class="op">.</span><span class="fu">toLocaleString</span>(<span class="st">"en-US"</span><span class="op">,</span> &#123;</span>
<span id="cb6-6"><a href="#cb6-6" aria-hidden="true" tabindex="-1"></a>    <span class="dt">timeZone</span><span class="op">:</span> <span class="st">"Asia/Singapore"</span><span class="op">,</span></span>
<span id="cb6-7"><a href="#cb6-7" aria-hidden="true" tabindex="-1"></a>&#125;)<span class="op">;</span></span>
<span id="cb6-8"><a href="#cb6-8" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb6-9"><a href="#cb6-9" aria-hidden="true" tabindex="-1"></a><span class="bu">console</span><span class="op">.</span><span class="fu">log</span>(tokyoDate)<span class="op">;</span> <span class="co">// 2/21/2021, 1:36:46 PM</span></span>
<span id="cb6-10"><a href="#cb6-10" aria-hidden="true" tabindex="-1"></a><span class="bu">console</span><span class="op">.</span><span class="fu">log</span>(singaporeDate)<span class="op">;</span> <span class="co">// 2/21/2021, 12:36:46 PM</span></span></code></pre></div>
<p>但是由于此方法返回一个字符串，因此进一步的日期和时间操作要求我们先将字符串转换回日期。</p>
<p>而 <code>Temporal</code> API 允许我们在使用
<code>zonedDateTimeISO()</code>
方法创建日期的时候去定义时区。我们可以使用 <code>.now</code>
对象去获取当前的日期、时间：</p>
<div class="sourceCode" id="cb7"><pre class="sourceCode js"><code class="sourceCode javascript"><span id="cb7-1"><a href="#cb7-1" aria-hidden="true" tabindex="-1"></a><span class="kw">let</span> tokyoDate <span class="op">=</span> Temporal<span class="op">.</span><span class="at">now</span><span class="op">.</span><span class="fu">zonedDateTimeISO</span>(<span class="st">'Asia/Tokyo'</span>)<span class="op">;</span></span>
<span id="cb7-2"><a href="#cb7-2" aria-hidden="true" tabindex="-1"></a><span class="kw">let</span> singaporeDate <span class="op">=</span> Temporal<span class="op">.</span><span class="at">now</span><span class="op">.</span><span class="fu">zonedDateTimeISO</span>(<span class="st">'Asia/Singapore'</span>)<span class="op">;</span></span>
<span id="cb7-3"><a href="#cb7-3" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb7-4"><a href="#cb7-4" aria-hidden="true" tabindex="-1"></a><span class="bu">console</span><span class="op">.</span><span class="fu">log</span>(tokyoDate)<span class="op">;</span></span>
<span id="cb7-5"><a href="#cb7-5" aria-hidden="true" tabindex="-1"></a><span class="co">// 2021-02-20T13:48:24.435904429+09:00[Asia/Tokyo]</span></span>
<span id="cb7-6"><a href="#cb7-6" aria-hidden="true" tabindex="-1"></a><span class="bu">console</span><span class="op">.</span><span class="fu">log</span>(singaporeDate)<span class="op">;</span></span>
<span id="cb7-7"><a href="#cb7-7" aria-hidden="true" tabindex="-1"></a><span class="co">// 2021-02-20T12:48:24.429904404+08:00[Asia/Singapore]</span></span></code></pre></div>
<p>由于返回的值仍然是 <code>Temporal</code> 日期，因此我们可以使用
<code>Temporal</code> 本身的方法进一步对其进行操作：</p>
<div class="sourceCode" id="cb8"><pre class="sourceCode js"><code class="sourceCode javascript"><span id="cb8-1"><a href="#cb8-1" aria-hidden="true" tabindex="-1"></a><span class="kw">let</span> date <span class="op">=</span> Temporal<span class="op">.</span><span class="at">now</span><span class="op">.</span><span class="fu">zonedDateTimeISO</span>(<span class="st">'Asia/Tokyo'</span>)<span class="op">;</span></span>
<span id="cb8-2"><a href="#cb8-2" aria-hidden="true" tabindex="-1"></a><span class="kw">let</span> oneWeekLater <span class="op">=</span> date<span class="op">.</span><span class="fu">add</span>(&#123;<span class="dt">weeks</span><span class="op">:</span> <span class="dv">1</span>&#125;)<span class="op">;</span></span>
<span id="cb8-3"><a href="#cb8-3" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb8-4"><a href="#cb8-4" aria-hidden="true" tabindex="-1"></a><span class="bu">console</span><span class="op">.</span><span class="fu">log</span>(oneWeekLater)<span class="op">;</span></span>
<span id="cb8-5"><a href="#cb8-5" aria-hidden="true" tabindex="-1"></a><span class="co">// 2021-02-27T13:48:24.435904429+09:00[Asia/Tokyo]</span></span></code></pre></div>
<p><code>Temporal</code> API 遵循使用类型的约定，其中以
<code>Plain</code>
开头的名称是没有时区的（<code>.PlainDate</code>、<code>.PlainTime</code>、<code>.PlainDateTime</code>），而
<code>.ZonedDateTime</code> 则相反。</p>
<h2 id="遵循-iso-8601-标准进行严格的日期解析">遵循 ISO-8601
标准进行严格的日期解析</h2>
<p>现有的从字符串解析日期的方式是不可靠的，因为当我们传递 ISO-8601
格式的日期字符串时，返回值将根据是否传递了时区偏移量而有所不同。</p>
<p>考虑以下示例：</p>
<div class="sourceCode" id="cb9"><pre class="sourceCode js"><code class="sourceCode javascript"><span id="cb9-1"><a href="#cb9-1" aria-hidden="true" tabindex="-1"></a><span class="kw">new</span> <span class="bu">Date</span>(<span class="st">"2021-02-20"</span>)<span class="op">.</span><span class="fu">toISOString</span>()<span class="op">;</span></span>
<span id="cb9-2"><a href="#cb9-2" aria-hidden="true" tabindex="-1"></a><span class="co">// 2021-02-20T00:00:00.000Z</span></span>
<span id="cb9-3"><a href="#cb9-3" aria-hidden="true" tabindex="-1"></a><span class="kw">new</span> <span class="bu">Date</span>(<span class="st">"2021-02-20T05:30"</span>)<span class="op">.</span><span class="fu">toISOString</span>()<span class="op">;</span></span>
<span id="cb9-4"><a href="#cb9-4" aria-hidden="true" tabindex="-1"></a><span class="co">// 2021-02-20T10:30:00.000Z</span></span></code></pre></div>
<p>上面的第一个 <code>Date</code> 构造器将字符串视为 UTC+0
时区，而第二个构造器将字符串视为 UTC-5
时区（我当前所在的时区），因此返回值会被调整到 UTC+0 时区<strong>（5:30
UTC-5 相当于 10:30 UTC+0）</strong>。</p>
<p><code>Temposal</code> 提案通过区分 <code>PlainDateTime</code> 和
<code>ZonedDateTime</code> 来解决此问题，如下所示：</p>
<figure>
<img src="https://cdn-images-1.medium.com/max/2000/1*Y4XViVCg-Cl6KtivlWbF5A.png" alt="来源：临时提案文档">
<figcaption aria-hidden="true">来源：<a href="https://tc39.es/proposal-temporal/docs/index.html#string-persistence">临时提案文档</a></figcaption>
</figure>
<p>当我们想要使日期成为包含时区的对象时，我们需要使用 <a href="https://tc39.es/proposal-temporal/docs/index.html#Temporal-ZonedDateTime">ZonedDateTime</a>
对象，反之则使用 <a href="https://tc39.es/proposal-temporal/docs/index.html#Temporal-PlainDateTime">PlainDateTime</a>
对象。</p>
<p>通过分开创建包含时区和不包含时区的日期，<code>Temporal</code> API
可帮助我们从提供的字符串中解析正确的日期、时间组合：</p>
<div class="sourceCode" id="cb10"><pre class="sourceCode js"><code class="sourceCode javascript"><span id="cb10-1"><a href="#cb10-1" aria-hidden="true" tabindex="-1"></a>Temporal<span class="op">.</span><span class="at">PlainDateTime</span><span class="op">.</span><span class="fu">from</span>(<span class="st">"2021-02-20"</span>)<span class="op">;</span></span>
<span id="cb10-2"><a href="#cb10-2" aria-hidden="true" tabindex="-1"></a><span class="co">// 2021-02-20T00:00:00</span></span>
<span id="cb10-3"><a href="#cb10-3" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb10-4"><a href="#cb10-4" aria-hidden="true" tabindex="-1"></a>Temporal<span class="op">.</span><span class="at">PlainDateTime</span><span class="op">.</span><span class="fu">from</span>(<span class="st">"2021-02-20T05:30"</span>)<span class="op">;</span></span>
<span id="cb10-5"><a href="#cb10-5" aria-hidden="true" tabindex="-1"></a><span class="co">// 2021-02-20T05:30:00</span></span>
<span id="cb10-6"><a href="#cb10-6" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb10-7"><a href="#cb10-7" aria-hidden="true" tabindex="-1"></a>Temporal<span class="op">.</span><span class="at">ZonedDateTime</span><span class="op">.</span><span class="fu">from</span>(<span class="st">"2021-02-20T05:30[Asia/Tokyo]"</span>)<span class="op">;</span></span>
<span id="cb10-8"><a href="#cb10-8" aria-hidden="true" tabindex="-1"></a><span class="co">// 2021-02-20T05:30:00+09:00[Asia/Tokyo]</span></span></code></pre></div>
<p>从上面的示例中可以看到，<code>Temporal</code> API
不会对你所在的时区进行预设。</p>
<h2 id="支持公历以外的历法">支持公历以外的历法</h2>
<p>尽管公历是世界上使用最广泛的日历系统，但有时我们可能需要使用其他日历系统以查看具有文化或宗教意义的特殊日期。</p>
<p><code>Temporal</code> API
允许我们指定要用于日期、时间计算的日历系统。</p>
<p>日历的 NPM Polyfill 实现尚未完成，因此我们需要尝试使用 Browser
Polyfill 中的 <code>withCalendar()</code> 方法。请访问 <a href="https://tc39.es/proposal-temporal/docs/">Temporal
文档页面</a>，然后将以下代码粘贴到浏览器的控制台中：</p>
<div class="sourceCode" id="cb11"><pre class="sourceCode js"><code class="sourceCode javascript"><span id="cb11-1"><a href="#cb11-1" aria-hidden="true" tabindex="-1"></a>Temporal<span class="op">.</span><span class="at">PlainDate</span><span class="op">.</span><span class="fu">from</span>(<span class="st">"2021-02-06"</span>)<span class="op">.</span><span class="fu">withCalendar</span>(<span class="st">"gregory"</span>)<span class="op">.</span><span class="at">day</span><span class="op">;</span></span>
<span id="cb11-2"><a href="#cb11-2" aria-hidden="true" tabindex="-1"></a><span class="co">// 6</span></span>
<span id="cb11-3"><a href="#cb11-3" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb11-4"><a href="#cb11-4" aria-hidden="true" tabindex="-1"></a>Temporal<span class="op">.</span><span class="at">PlainDate</span><span class="op">.</span><span class="fu">from</span>(<span class="st">"2021-02-06"</span>)<span class="op">.</span><span class="fu">withCalendar</span>(<span class="st">"chinese"</span>)<span class="op">.</span><span class="at">day</span><span class="op">;</span></span>
<span id="cb11-5"><a href="#cb11-5" aria-hidden="true" tabindex="-1"></a><span class="co">// 25</span></span>
<span id="cb11-6"><a href="#cb11-6" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb11-7"><a href="#cb11-7" aria-hidden="true" tabindex="-1"></a>Temporal<span class="op">.</span><span class="at">PlainDate</span><span class="op">.</span><span class="fu">from</span>(<span class="st">"2021-02-06"</span>)<span class="op">.</span><span class="fu">withCalendar</span>(<span class="st">"japanese"</span>)<span class="op">.</span><span class="at">day</span><span class="op">;</span></span>
<span id="cb11-8"><a href="#cb11-8" aria-hidden="true" tabindex="-1"></a><span class="co">// 6</span></span>
<span id="cb11-9"><a href="#cb11-9" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb11-10"><a href="#cb11-10" aria-hidden="true" tabindex="-1"></a>Temporal<span class="op">.</span><span class="at">PlainDate</span><span class="op">.</span><span class="fu">from</span>(<span class="st">"2021-02-06"</span>)<span class="op">.</span><span class="fu">withCalendar</span>(<span class="st">"hebrew"</span>)<span class="op">.</span><span class="at">day</span><span class="op">;</span></span>
<span id="cb11-11"><a href="#cb11-11" aria-hidden="true" tabindex="-1"></a><span class="co">// 24</span></span>
<span id="cb11-12"><a href="#cb11-12" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb11-13"><a href="#cb11-13" aria-hidden="true" tabindex="-1"></a>Temporal<span class="op">.</span><span class="at">PlainDate</span><span class="op">.</span><span class="fu">from</span>(<span class="st">"2021-02-06"</span>)<span class="op">.</span><span class="fu">withCalendar</span>(<span class="st">"islamic"</span>)<span class="op">.</span><span class="at">day</span><span class="op">;</span></span>
<span id="cb11-14"><a href="#cb11-14" aria-hidden="true" tabindex="-1"></a><span class="co">// 24</span></span></code></pre></div>
<p>一旦提案通过，<a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat/DateTimeFormat#parameters">Intl.DateTimeFormat</a>
中所有可能的日历值都将被实现。</p>
<h2 id="结论">结论</h2>
<p><code>Temporal</code> API 是针对 JavaScript
的一项新提案，有望为该语言提供现代化的日期和时间 API。而根据我基于
Polyfill 的测试，该 API
确实提供了更简单的日期和时间操作，同时也考虑到了时区和日历的差异。</p>
<p>该提案本身仍处于第三阶段，因此，如果你有兴趣了解更多信息并提供反馈，你可以访问
<a href="https://tc39.es/proposal-temporal/docs/index.html">Temporal
文档</a> 并尝试其提供的 <a href="https://www.npmjs.com/package/proposal-temporal">Polyfill NPM
包</a>。</p>]]></content>
      <categories>
        <category>Computer Science</category>
        <category>Frontend</category>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>Computer Science</tag>
        <tag>JavaScript</tag>
        <tag>Frontend</tag>
      </tags>
  </entry>
  <entry>
    <title>Figma 生产环境中的 Rust</title>
    <url>/2021/03/10/computer%20science/backend/rust-in-production-at-figma/</url>
    <content><![CDATA[<blockquote>
<ul>
<li>原文地址：<a href="https://www.figma.com/blog/rust-in-production-at-figma/">Rust in
production at Figma</a></li>
<li>原文作者：<a href="https://twitter.com/evanwallace">Evan
Wallace</a></li>
<li>译者：<a href="https://github.com/PassionPenguin">霜羽
Hoarfroster</a></li>
<li>校对者：<a href="https://github.com/lsvih">lsvih</a>、<a href="https://github.com/zhuzilin">zhuzilin</a>、<a href="https://github.com/youngjuning">youngjuning</a></li>
</ul>
</blockquote>
<blockquote>
<p>Mozilla 的新语言究竟是如何显著地提升了我们服务端的性能的呢？</p>
</blockquote>
<p><img src="https://miro.medium.com/max/4320/1*LoKiYs4SoAtkpFufNdD0AA.png"></p>
<p>对于我们 <a href="https://www.figma.com/">Figma</a>
来说，性能永远是我们最重要的卖点之一。我们力争去让团队能够所思即所得，而我们的多人同步引擎就是决定这个愿景能否实现的关键部分。我们希望能够让每个协作者都可以实时看到别人在
Figma 文档中所做的修改！</p>
<p>我们<a href="https://blog.figma.com/multiplayer-editing-in-figma-8f8076c6c3a6">两年前开启的</a>这个多人服务器是用
TypeScript
编写的，并且出奇完美地服务了我们的客户。但我们也没有想到，Figma
的扩张如此迅速，让服务器无力追及。我们决定使用 Rust
语言重写这个服务器以解决这个问题。</p>
<p><a href="https://www.rust-lang.org/">Rust</a> 是由创建了 Firefox
的非盈利组织 Mozilla 所创建的一款新的程序语言，而 Mozilla
也正使用它来构建跨时代的浏览器原型，<a href="https://research.mozilla.org/servo-engines/">Servo</a>，向全世界证明了浏览器可以比现如今速度更快的浏览器。Rust
和 C++ 在性能和底层上很相像，但是它拥有一个类型系统，自然而然地避免了<a href="https://polyfloyd.net/post/how-rust-helps-you-prevent-bugs/">一大堆令人作呕的
Bug</a> 的这种经常会在 C++ 程序中出现的情况的出现。</p>
<p>我们之所以选择 Rust
作为重写服务器的语言，它兼具一流的速度和较低的资源使用率，同时提供了标准服务器语言所需的安全性保障。而这其中，较低资源使用率对我们尤其重要，因为我们旧服务器的部分性能问题，就是垃圾回收导致的。</p>
<p>我们也觉得这会是一个非常好的在生产中使用 Rust
的案例，并且希望分享我们在这个过程中所遇到的麻烦和我们所取得的成效，以期对其他有着类似考虑去重写代码的开发者们有些许帮助。</p>
<h2 id="用-rust-扩展我们的服务">用 Rust 扩展我们的服务</h2>
<p>我们的多人服务是运行在固定数量的一些机器，每个服务都拥有着固定数目的进程（Worker），并且每个文档都独立运行在一个特定的进程上。这意味着每一个进程都负责当前打开的
Figma 的文档的一部分。这看起来会是这样的：</p>
<figure>
<img src="https://miro.medium.com/max/2230/1*b_L0C2dgCIsZSuRtdT2aOg.png" alt="https://miro.medium.com/max/2230/1*b_L0C2dgCIsZSuRtdT2aOg.png">
<figcaption aria-hidden="true">https://miro.medium.com/max/2230/1*b_L0C2dgCIsZSuRtdT2aOg.png</figcaption>
</figure>
<p>我们遇到的最主要的问题，就是旧服务器会在同步时候遇到无法预计的延迟高峰。这个服务器是使用
TypeScript
编写的，并且是单线程的，完全不能同时处理多项操作。这意味着单一一个操作的缓慢会导致整个进程在这个操作完成前的停止。而常见的操作就是对文档的解码。Figma
上的文档可能会非常大，因此这个操作会显然会消耗一长段时间，让连接在这个进程上的用户暂时无法同步他们的更改。</p>
<p>扔给这项服务更多的硬件丝毫不能缓解这个问题，因为一个缓慢的操作就会让这个进程所负责的所有文件都无法使用，而且我们无法为每一个文档都单独创建一个
Node.js 线程，因为 JavaScript
虚拟机的内存开销实在太大了。事实上只有很少一部分大文件会造成麻烦，但这就会影响所有用户的服务体验啊！我们的临时解决方法是将那些疯了的巨大的文档独立，隔离到一个单独的进程池中：</p>
<figure>
<img src="https://miro.medium.com/max/2230/1*8bzkHy9Fg3fZXTEHIm65kg.png" alt="https://miro.medium.com/max/2230/1*8bzkHy9Fg3fZXTEHIm65kg.png">
<figcaption aria-hidden="true">https://miro.medium.com/max/2230/1*8bzkHy9Fg3fZXTEHIm65kg.png</figcaption>
</figure>
<p>这能让服务器跟上来了，但是这个方案注定让我们被迫持续关注所有这类型的文档，并将它们人工独立出去。我们借助这个方案还是争取来了一些时间，并且通过将对性能敏感的服务移动到单独的子进程中，我们能够继续去探索解决这些问题的方法了。这些子进程是用
Rust
编写的，并且通过标准输入输出与它的父进程沟通。而这些新的小不点使用的内存，也像他们的年龄那般
——
对比起那些年老珠黄的旧服务来说嘛。现在我们完全可以通过为每一个文档提供一个单独的子进程来让所有的文档能够并行使用了，并且序列化时间是原有的
10
倍那么快，甚至在最差的情况下也完全可以接受了。新的架构看起来是这样的：</p>
<figure>
<img src="https://miro.medium.com/max/2350/1*JvrV35TNvuARMRcvFpeMaQ.png" alt="https://miro.medium.com/max/2350/1*JvrV35TNvuARMRcvFpeMaQ.png">
<figcaption aria-hidden="true">https://miro.medium.com/max/2350/1*JvrV35TNvuARMRcvFpeMaQ.png</figcaption>
</figure>
<h2 id="服务端的性能提升">服务端的性能提升</h2>
<p>我们的服务器的性能提升令人难以置信。下图显示了逐步的推出新服务架构之前、之时和之后一周的各种性能指标。图片中间的大幅下降的部分是我们完全部署时候的指标。请记住，这些改进是针对服务器端的性能，而不是客户端的性能，因此，它们的主要作用只是为了让该进程能够为所有人不会造成任何麻烦顺利进行他们的工作</p>
<figure>
<img src="https://miro.medium.com/max/1440/1*s7uU1Sd7IF7xOjR2mv4xRA.png" alt="https://miro.medium.com/max/1440/1*s7uU1Sd7IF7xOjR2mv4xRA.png">
<figcaption aria-hidden="true">https://miro.medium.com/max/1440/1*s7uU1Sd7IF7xOjR2mv4xRA.png</figcaption>
</figure>
<figure>
<img src="https://miro.medium.com/max/2230/1*1sXGPC5m0cc_u_L-tt0m-Q.png" alt="https://miro.medium.com/max/2230/1*1sXGPC5m0cc_u_L-tt0m-Q.png">
<figcaption aria-hidden="true">https://miro.medium.com/max/2230/1*1sXGPC5m0cc_u_L-tt0m-Q.png</figcaption>
</figure>
<figure>
<img src="https://miro.medium.com/max/1440/1*b3y9hIkhXJFe4aeVQQBOqQ.png" alt="https://miro.medium.com/max/1440/1*b3y9hIkhXJFe4aeVQQBOqQ.png">
<figcaption aria-hidden="true">https://miro.medium.com/max/1440/1*b3y9hIkhXJFe4aeVQQBOqQ.png</figcaption>
</figure>
<figure>
<img src="https://miro.medium.com/max/1440/1*Ta8MtAg17e_L9qo09r-IxA.png" alt="https://miro.medium.com/max/1440/1*Ta8MtAg17e_L9qo09r-IxA.png">
<figcaption aria-hidden="true">https://miro.medium.com/max/1440/1*Ta8MtAg17e_L9qo09r-IxA.png</figcaption>
</figure>
<figure>
<img src="https://miro.medium.com/max/2230/1*YxXXHIm6PTXEx-muh_h2xQ.png" alt="https://miro.medium.com/max/2230/1*YxXXHIm6PTXEx-muh_h2xQ.png">
<figcaption aria-hidden="true">https://miro.medium.com/max/2230/1*YxXXHIm6PTXEx-muh_h2xQ.png</figcaption>
</figure>
<p>与旧服务器相比，这是峰值指标的数字变化：</p>
<figure>
<img src="https://miro.medium.com/max/2230/1*48agi3zbT2Ifc2rDxE85pQ.png" alt="https://miro.medium.com/max/2230/1*48agi3zbT2Ifc2rDxE85pQ.png">
<figcaption aria-hidden="true">https://miro.medium.com/max/2230/1*48agi3zbT2Ifc2rDxE85pQ.png</figcaption>
</figure>
<h2 id="rust-的优缺点">Rust 的优缺点</h2>
<p>Rust
的确在编写高性能服务器这件事上帮了我们，但事实证明，这门语言也并没有我们想象中的那么好。即便它比标准的服务器端语言更年轻，但是仍然有不少粗糙待需继续磨平改良之处（见下文）。</p>
<p>最终，我们放弃了使用 Rust
重写整个服务器的那份最初的计划，而是选择只重写对性能敏感的那部分服务。这是我们在重写过程中遇到的一些优缺点：</p>
<h3 id="优点">优点</h3>
<ul>
<li><strong>内存使用率低</strong></li>
</ul>
<p>Rust
因为没有垃圾回收从而可以进行更细致地控制内存布局，并且具有体积非常小的标准库。Rust
使用的内存很少，因此在现实中为每个文档启动一个单独的 Rust
进程是可行的。</p>
<ul>
<li><strong>优秀的性能</strong></li>
</ul>
<p>Rust 肯定兑现了它在最佳性能方面的承诺，既因为它可以利用上 LLVM
的所有优化，又因为该语言本身在设计时就看重了性能。Rust 的 <a href="https://doc.rust-lang.org/1.22.0/std/slice/">切片（slice）</a>
使传递原始指针变得容易，很适合使用也很是安全。我们大量地使用了它，避免在的解析过程中数据的复制这一不必要的操作。<a href="https://doc.rust-lang.org/std/collections/struct.HashMap.html">HashMap</a>
则是借助 <a href="https://zh.wikipedia.org/wiki/%E7%BA%BF%E6%80%A7%E6%8E%A2%E6%B5%8B">Linear
Probing（线性探测）</a> 和 <a href="https://en.wikipedia.org/wiki/Hash_table#Robin_Hood_hashing">Robin
Hood Hashing</a> 实现的，因此与 C++ 的<a href="http://zh.cppreference.com/w/cpp/container/unordered_map">unordered_map</a>
不同，内容可以内联存储在单个分配中，从而带来更高的缓存的效率。</p>
<ul>
<li><strong>坚实的工具链</strong></li>
</ul>
<p>Rust 内置有 <a href="https://doc.rust-lang.org/cargo/index.html">cargo</a>，一款集构建工具、包管理、测试运行和文档生成于一体的工具，一种新时代语言的标准附带品，脱胎于
C++（我们考虑重写上使用的另一种语言）的过时之中。 Cargo
拥有着非常全面的文档，并且非常容易上手，并拥有着便利的默认配置。</p>
<ul>
<li><strong>更友善的错误信息</strong></li>
</ul>
<p>Rust 比其他语言更复杂，因为 Rust
的使用上还有着另一部分，即借用检查器，一款拥有着需要学习的独特规则的检查器。社区开发者们已经付出了很多，努力使错误消息变得更利于阅读，能够真正显示出来问题所在。他们真的让
Rust 的学习变得更简单更完美！</p>
<h3 id="缺点">缺点</h3>
<ul>
<li><strong>生命周期是很令人迷惑的</strong></li>
</ul>
<p>在 Rust
中，将指针存储在变量中可以防止我们更改它指向的对象，只要该变量仍然在作用域内。这样大大的保证了安全性，但有时候又过于严苛，因为在发生变化时可能不再需要该变量。即使是从一开始就关注
Rust
的开发者们，或是编写那些有趣的编译器并且知道如何像借阅检查器一样思考的开发者，仍然不得不沮丧地停下手中的工作，着手解决可能出现的一些不必要的借阅检查器带来的难题，而这会不停止的间断发生。<a href="http://smallcultfollowing.com/babysteps/blog/2016/04/27/non-lexical-lifetimes-introduction/">这篇博客</a>中就有蛮多的例子拥有着这类问题。</p>
<p><em>我们所做的事情：</em> 我们将程序简化为单个事件循环，该循环从
<code>stdin</code> 中读取数据并将数据写入
<code>stdout</code>（<code>stderr</code>
用于记录）。数据可以永久保存，也可以仅在事件循环期间保存。这消除了几乎所有借阅检查器的复杂性。</p>
<p><em>如何解决：</em> Rust 社区正计划用 <a href="https://github.com/rust-lang/rfcs/blob/master/text/2094-nll.md">Non
Lexical Lifecycle</a>
解决这个问题。这个功能将缩短变量的生命，使其在使用后停止它的生命周期，让这个指针将不再能够阻止指向其余范围的事物的变化，从而消除了许多借阅检查器的伪阴性（即，让很多本身有问题但没有报错的错误重新显示出来）。</p>
<ul>
<li><strong>错误是很难调试的</strong></li>
</ul>
<p>Rust 中的错误处理旨在通过返回一个可以表示成功或失败的值
<code>Result</code> 来完成。与 Exception 不同，在 Rust
中创建错误值不会捕获堆栈跟踪，因此我们获得的任何堆栈跟踪都是针对报告错误的代码，而不是引起错误的代码。</p>
<p><em>我们所做的事情：</em>
我们最终将所有错误立即转换为字符串，然后使用一个宏，在字符串中包含失败的行和列。这很冗杂麻烦，但我们还是解决了这个问题。</p>
<p><em>如何解决：</em> Rust
社区显然针对此问题提出了几种解决方法。其中一个称为 <a href="https://docs.rs/error-chain/*/error_chain/">Error
Chain</a>，另一个称为 <a href="https://boats.gitlab.io/failure/">Failure</a>。我们没有注意到这些方法的存在，也不确定是否存在什么标准的解决方法。</p>
<ul>
<li><strong>许多库还很年轻</strong></li>
</ul>
<p>Figma
的文档都是压缩过后的，因此我们的服务器需要能够处理压缩的数据的工具。我们尝试使用两个
Rust 压缩库（这两个库都被 Mozilla 的跨时代浏览器原型 Servo
使用着），但是两个库都存在一些细微纠正上的问题，导致文档的数据丢失。</p>
<p><em>我们所做的：</em> 我们最终只使用了经过实践检验的 C 库 —— Rust
是基于 LLVM 构建的，因此从 Rust 调用 C
代码是非常简单的，毕竟所有东西最后都是变成 LLVM 代码嘛。</p>
<p><em>如何修复：</em>
我们报告了受影响的库中的错误，现在问题已修复。</p>
<ul>
<li><strong>Rust 很难实现异步操作</strong></li>
</ul>
<p>我们的多人服务器通过 WebSocket 进行通信，需要频繁发出 HTTP
请求。我们尝试在 Rust 中编写这些请求的处理程序，但遇到了 <a href="https://docs.rs/futures/*/futures/">Futures</a>
上的人机工程学的问题（Rust 的异步编程答案）。<code>Futures</code>
的效率很高，但有时候使用起来很是复杂。</p>
<p>例如，将操作链接在一起是通过构造一个代表整个操作链的巨型嵌套类型来完成的。虽说这意味着该链的所有内容只需要一次分配，但是这也意味着错误消息会是很长一段，令人难以阅读的错误，让人想起
C++ 中的模板错误（<a href="https://gist.github.com/evanw/%2006a672db1897482eadfbbf37ebf9b9ec">示例</a>）。再加上其他问题，例如需要在不同的错误类型之间进行调整以及必须解决复杂的生命周期问题，我们决定放弃这种方法。</p>
<p><em>我们做了什么：</em> 我们没有全力以赴地使用
Rust，而是决定暂时将网络处理保留在 Node.js 中。Node.js
进程为每个文档创建一个单独的 Rust
子进程，并使用基于消息的协议通过标准输入输出与之沟通，让所有网络流量都在进程之间传递。</p>
<p><em>如何解决：</em> Rust 团队正在努力<a href="https://github.com/rust-lang/rfcs/blob/master/text/2033-experimental-coroutines.md">向
Rust 添加异步功能</a>，这应该通过隐藏 <code>Futures</code>
本身在语言本身之下的复杂性来解决其中的许多问题。这将允许 <code>?</code>
这个目前仅适用于同步代码的错误处理运算符也能够在异步代码中使用，减少样板操作。</p>
<h3 id="rust-以及它的未来">Rust 以及它的未来</h3>
<p>即便我们在速度上遇到一些问题，我仍然希望去强调，我们与 Rust
的经历总体而言真的是非常棒的。这真是一款有着一颗坚硬的内核和健康的社区的，一款拥有着极度美好前景的语言！我对这些问题很快就会被解决很有信心～</p>
<p>我们的多人服务器是很少的对性能敏感的代码，组合一些很小的依赖库所构成的，因此在
Rust
中重写，即便遇到了问题，也仍然对我们来说是非常棒的。它让我们能够将服务端多人编写的性能提升一个数量级，让我们
Figma 的多人服务得以获得一个更广阔的未来！</p>
<p><strong>感谢 Figma～</strong></p>]]></content>
      <categories>
        <category>Computer Science</category>
        <category>Backend</category>
        <category>Rust</category>
      </categories>
      <tags>
        <tag>Computer Science</tag>
        <tag>Backend</tag>
        <tag>Rust</tag>
      </tags>
  </entry>
  <entry>
    <title>10 个你应该现在启用的绝佳的 Chrome Flags</title>
    <url>/2021/03/10/computer%20science/frontend/10-awesome-chrome-flags-you-should-enable-right-now/</url>
    <content><![CDATA[<blockquote>
<ul>
<li>原文地址：<a href="https://medium.com/better-programming/10-awesome-chrome-flags-you-should-enable-right-now-2684e4518cb5">10
Awesome Chrome Flags You Should Enable Right Now</a></li>
<li>原文作者：<a href="https://medium.com/@thesanjeetc">Sanjeet
Chatterjee</a></li>
<li>译者：<a href="https://github.com/PassionPenguin">霜羽
Hoarfroster</a></li>
<li>校对者：<a href="https://github.com/lsvih">lsvih</a></li>
</ul>
</blockquote>
<figure>
<img src="https://cdn-images-1.medium.com/max/4480/1*nnoOXTFecfO8aW0LqCaN5w.png" alt="图源作者">
<figcaption aria-hidden="true">图源作者</figcaption>
</figure>
<p>如果您可以神奇地升级浏览器来使用 Chrome
普通用户不知道的功能，那会很酷吗？</p>
<p>以下是 10 个 Chrome Flags，可帮助您做到这一点。</p>
<p>Chrome Flag 是实验性功能，其中大部分的 Flag
都是默认被禁用的。要启用这些功能，请访问
<code>chrome://flags</code>。以下的 Flag
可能会在不久的将来正式发布。但是，截至翻译本文时，它们仍在测试中。</p>
<h2 id="reader-mode-阅读模式">Reader Mode 阅读模式</h2>
<p>“阅读模式”移除了不必要的视觉干扰，实现了无干扰的阅读 ——
当众多视觉元素吸引我们的注意力时，这一点至关重要。</p>
<figure>
<img src="https://cdn-images-1.medium.com/max/2000/0*TkZOJVvj8nX1dh9c.gif" alt="chrome://flags/#enable-reader-mode">
<figcaption aria-hidden="true">chrome://flags/#enable-reader-mode</figcaption>
</figure>
<h2 id="focus-mode-沉浸模式译者注似乎没了">Focus Mode
沉浸模式（译者注：似乎没了）</h2>
<p>沉浸模式会在新的窗口中打开选项卡，该窗口省略了选项卡条和搜索栏以提供更简洁的界面。</p>
<figure>
<img src="https://cdn-images-1.medium.com/max/2000/0*HTBhDshB0IkpRZo5.gif" alt="chrome://flags/#focus-mode">
<figcaption aria-hidden="true">chrome://flags/#focus-mode</figcaption>
</figure>
<h2 id="impulsive-style-scroll-animations">Impulsive-Style Scroll
Animations</h2>
<p>重构其 Edge 浏览器后，Microsoft 将其开发的自然滑动运动带到了 Chromium
中。</p>
<blockquote>
<p>“鼠标滚轮的每个‘滴答声’都会让浏览器模拟真实的世界中产生的操作。在这个世界里，页面内容受到推力的冲击而开始快速地滚动，然后由于摩擦力而减速。”
—— 微软</p>
</blockquote>
<figure>
<img src="https://cdn-images-1.medium.com/max/2000/0*mTrSM7M_NaV4CUCw.gif" alt="chrome://flags/#impulse-scroll-animations">
<figcaption aria-hidden="true">chrome://flags/#impulse-scroll-animations</figcaption>
</figure>
<h2 id="tab-groups-选项卡组">Tab Groups 选项卡组</h2>
<blockquote>
<p>译者注：无须再在 chrome://flags 中启用，已默认在 Canary 中启用</p>
</blockquote>
<p>选项卡组功能用于将多个选项卡分组并在一起管理，就像合并不同类型的奶酪一样。</p>
<figure>
<img src="https://cdn-images-1.medium.com/max/2000/0*7OEk4z2uvyg8MO3f.gif" alt="chrome://flags/#tab-groups">
<figcaption aria-hidden="true">chrome://flags/#tab-groups</figcaption>
</figure>
<h2 id="pdf-two-up-view-双视图-pdf-浏览器译者注已加入-canary-无需使用启用">PDF
Two-Up View 双视图 PDF 浏览器（译者注：已加入 Canary 无需使用启用）</h2>
<p>双视图 PDF 浏览器可供用户同时查看两页的PDF。这真是有趣</p>
<figure>
<img src="https://cdn-images-1.medium.com/max/2000/0*ostaBsHvTlU70wbN.gif" alt="chrome://flags/#pdf-two-up-view">
<figcaption aria-hidden="true">chrome://flags/#pdf-two-up-view</figcaption>
</figure>
<h2 id="force-dark-mode-for-web-contents-对-web-内容强制使用暗黑模式">Force
Dark Mode for Web Contents 对 Web 内容强制使用暗黑模式</h2>
<p>这会迫使所有网站以深色主题呈现，即使是尚无主题的网站（例如
Medium）也是如此。</p>
<figure>
<img src="https://cdn-images-1.medium.com/max/2000/0*D5u7w-98tffTZ-Ma.gif" alt="chrome://flags/#enable-force-dark">
<figcaption aria-hidden="true">chrome://flags/#enable-force-dark</figcaption>
</figure>
<h2 id="quieter-notification-permission-prompts-更安静的权限提示">Quieter
Notification Permission Prompts 更安静的权限提示</h2>
<p>这个简单的功能可以减少权限请求的提示，以防止这些提示打断你的思路。</p>
<figure>
<img src="https://cdn-images-1.medium.com/max/2000/0*vY-Jg_mSlk2hLCUs" alt="chrome://flags/#quiet-notification-prompts">
<figcaption aria-hidden="true">chrome://flags/#quiet-notification-prompts</figcaption>
</figure>
<h2 id="tab-hover-cards-标签悬停预览">Tab Hover Cards 标签悬停预览</h2>
<p>“Tab
悬停预览”功能能够让鼠标在标签上悬停时显示其内容的预览。当你打开了超过 30
个标签页而导致你看不到标签页的标题时，这个 Flag 就可能会派上用场。</p>
<figure>
<img src="https://cdn-images-1.medium.com/max/2000/0*G_0Ja03m0pykQWBS.gif" alt="chrome://flags/#tab-hover-cards &amp; chrome://flags/#tab-hover-card-images">
<figcaption aria-hidden="true">chrome://flags/#tab-hover-cards
<strong>&amp;</strong>
chrome://flags/#tab-hover-card-images</figcaption>
</figure>
<h2 id="enable-page-sharing-via-qr-code-通过qr码启用页面共享">Enable
Page Sharing via QR Code 通过QR码启用页面共享</h2>
<p>该 Flag 可以让您通过扫描生成的 QR
码共享网页，以便轻松地将内容链接发送到手机。当然，二维码中间是 Dino
小恐龙吉祥物。</p>
<p><strong>注意:</strong> 翻译的时候似乎该功能仅在 <a href="https://www.google.com/intl/en_uk/chrome/canary/">Chrome
Canary</a> 上可用。</p>
<figure>
<img src="https://cdn-images-1.medium.com/max/2000/0*IzzgdVlhQKN01eqG.gif" alt="chrome://flags/#sharing-qr-code-generator">
<figcaption aria-hidden="true">chrome://flags/#sharing-qr-code-generator</figcaption>
</figure>
<h2 id="parallel-downloading-并行下载">Parallel Downloading
并行下载</h2>
<p>Chrome 将会建立多个连接分块下载单个文件，从而提高下载速度。</p>
<figure>
<img src="https://cdn-images-1.medium.com/max/2000/1*e1CZu3rjlntGfMW-3QE-Zg.png" alt="chrome://flags/#enable-parallel-downloading">
<figcaption aria-hidden="true">chrome://flags/#enable-parallel-downloading</figcaption>
</figure>
<h2 id="结论">结论</h2>
<p>还有更多的 Chrome Flag
正在测试中、更多功能尚未推出。如果您希望生活在新功能的海洋中，请使用 <a href="https://www.google.com/chrome/canary/">Chrome Canary</a> 。</p>
<p><strong>感谢您的阅读。</strong></p>]]></content>
      <categories>
        <category>Computer Science</category>
        <category>Frontend</category>
        <category>Browser</category>
      </categories>
      <tags>
        <tag>Computer Science</tag>
        <tag>Frontend</tag>
        <tag>Browser</tag>
      </tags>
  </entry>
  <entry>
    <title>Chrome 88 DevTools 中的新功能</title>
    <url>/2021/03/10/computer%20science/frontend/new-features-chrome-88/</url>
    <content><![CDATA[<blockquote>
<ul>
<li>原文地址：<a href="https://www.infoq.com/news/2021/03/new-features-chrome-88/?topicPageSponsorship=eb89fa44-b190-43ef-87d0-4bc8727e7413">New
Features in Chrome 88 Devtools</a></li>
<li>原文作者：<a href="https://www.infoq.com/profile/Guy-Nesher/">Guy
Nesher</a></li>
<li>译者：<a href="https://github.com/PassionPenguin">霜羽
Hoarfroster</a></li>
<li>校对者：<a href="https://github.com/Chorer">Chorer</a></li>
</ul>
</blockquote>
<p>最近发布的 Chrome 88 对 Chrome DevTools
进行了重大更新，包括改进的网络调试、实验性的 CSS Flexbox
调试工具、改进的框架详细信息视图、新的 WASM
调试功能以及总体性能上的提高。</p>
<p>网络选项卡提供了三种旨在简化调试过程的新功能：</p>
<ol type="1">
<li>现在，我们可以通过右键单击特定请求并选择<code>复制值</code>（<code>Copy value</code>），直接从<code>网络</code>（<code>Network</code>）选项卡中复制请求属性。</li>
<li>现在可以通过选择<code>复制堆栈跟踪</code>（<code>Copy stack trace</code>）选项，从单个网络请求中复制网络启动器的堆栈跟踪。</li>
<li>现在可以在网络视图上正确地标记 <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/CORS/Errors"><strong>C</strong>ross-<strong>O</strong>rigin-<strong>R</strong>esource-<strong>S</strong>haring
的错误</a>。</li>
</ol>
<p><a href="https://developer.mozilla.org/en-US/docs/Learn/CSS/CSS_layout/Flexbox">CSS
Flexbox</a>
是一种功能强大的设计工具，但由于它在两个轴上进行操作，因此通常很难调试。为了简化调试过程，Chrome
提供了两个新标志。第一个标志出现在元素层次结构视图上，并标记了带有
<em><code>display：flex</code></em> 的元素。</p>
<p>第二个标志是上下文敏感的对齐指示符，该指示符基于以下
<code>flexbox</code> 属性：</p>
<ul>
<li><code>flex-direction</code></li>
<li><code>align-items</code></li>
<li><code>align-content</code></li>
<li><code>align-self</code></li>
<li><code>justify-items</code></li>
<li><code>justify-content</code></li>
</ul>
<p>同时也会顾及到基于以下属性的方向：</p>
<ul>
<li><code>flex-direction</code></li>
<li><code>direction</code></li>
<li><code>writing-mode</code></li>
</ul>
<p>要使用 Flexbox
的调试，开发人员需要在“设置”&gt;“实验”标签下启用它。</p>
<p><img src="https://res.infoq.com/news/2021/03/new-features-chrome-88/en/resources/113-flex-debugging-1614281700033.png"></p>
<p>Chrome 88 Devtools
还提供了改进的框架详细信息视图，其中包括有关跨域隔离信息状态的额外信息、有关框架
Web Worker 的专用信息，以及发现哪个框架触发了另一个窗口打开的功能。</p>
<p>Chrome 88 还使 <a href="https://developer.mozilla.org/zh-CN/docs/WebAssembly">Wasm</a>
调试与现有的 JavaScript
调试功能保持一致。在打断点暂停代码执行时，开发人员可以将鼠标悬停在变量上以查看其当前值，或在控制台中对其进行计算。</p>
<p>最后，从 JavaScript
编译速度的角度来说，由于减少了启动过程中的序列化、解析和反序列化所带来的性能开销，DevTools
现在的启动速度提高了近 40％。</p>
<p>Chrome DevTools 提供了丰富的实用程序集以调试 Web
应用，并且用于大多数基于 Chromium 的浏览器中。Chrome 开发团队将继续改进
DevTools，并在每次发布新版本的 Chrome 时都提供新功能。开发者可以在 <a href="https://developers.google.com/web/updates/tags/devtools">Google
开发者网站</a>上跟进最新功能，并在<a href="https://groups.google.com/forum/#!forum/google-chrome-developer-tools">邮件列表</a>中讨论可能出现的功能、更新和漏洞。</p>]]></content>
      <categories>
        <category>Computer Science</category>
        <category>Frontend</category>
        <category>Browser</category>
      </categories>
      <tags>
        <tag>Computer Science</tag>
        <tag>Frontend</tag>
        <tag>Browser</tag>
      </tags>
  </entry>
  <entry>
    <title>2021 年 1 月 RedMonk 编程语言排名</title>
    <url>/2021/03/10/computer%20science/misc/The-RedMonk-Programming-Language-Rankings-January-2021/</url>
    <content><![CDATA[<blockquote>
<ul>
<li>原文地址：<a href="https://redmonk.com/sogrady/2021/03/01/language-rankings-1-21/">The
RedMonk Programming Language Rankings: January 2021</a></li>
<li>原文作者：<a href="https://redmonk.com/sogrady/2021/03/01/language-rankings-1-21/">RedMonk</a></li>
<li>译者：<a href="https://github.com/PassionPenguin">霜羽
Hoarfroster</a></li>
<li>校对者：<a href="https://github.com/Chorer">Chorer</a>、<a href="https://github.com/chzh9311">chzh9311</a></li>
</ul>
</blockquote>
<blockquote>
<p>这个版本的 RedMonk 编程语言排名由 MongoDB 发布。从设备到云端，MongoDB
让你能够以处理代码的方式去处理数据，并且不局限于任何一种语言 ——
因此你可以更快编译和分发你的应用。如果你是一个 Python、.NET、Java 或是
JavaScript 开发者，那不妨现在就从 <a href="https://university.mongodb.com/learning_paths/developer">MongoDB
University</a> 开始了解吧！</p>
</blockquote>
<p>一方面，鉴于现在已经是三月而不是一月了，本季度的排名似乎发布得比较晚。另一方面，考虑到这些数据与去年这个时候的数据大体相同，我们大可以说这份排名仍然是最新的。但是，无论更新得过晚还是过早，这份排名都是完整的，值得你仔细阅读。</p>
<p>与往常一样，这份排名是 Drew Conway 和 John Myles White 于 <a href="http://www.dataists.com/2010/12/ranking-the-popularity-of-programming-langauges/">2010</a>
年末完成的第一版的后续版本。尽管数据的收集方式发生了变化，但是基本步骤仍然保持不变：我们从
GitHub 和 Stack Overflow
提取语言排名，并将它们结合起来以尝试反映该语言在代码（GitHub）和讨论（Stack
Overflow）两个方面上的热度。发布排名的初衷不是展示当前语言使用情况的统计数据，而是将语言讨论和使用情况相关联，以努力提炼对潜在的未来采用趋势的见解。</p>
<h2 id="我们的当前的处理方式">我们的当前的处理方式</h2>
<p>GitHub 的分析数据来源是 GitHub Archive 上的拉取请求，GitHub
也曾用这种方式整理并发布 OctoVerse 报告（GitHub 会发表年度 Octoverse
报告，呈现在开发社群、技术趋势和国际化等各方面的成果）。查询要尽可能地与上一个过程具有可比性，这是我们的一个设计理念。</p>
<ul>
<li>语言基于原仓库的语言。尽管这样做会不得不注意一些事项（后面会说明），但确实具有与我们以前的方法保持一致的好处。</li>
<li>我们剔除了 fork 的仓库。</li>
<li>我们使用汇总的历史记录来确定排名（虽然它基于表结构的更改，但这项任务不再可以通过单个查询来完成。）</li>
</ul>
<p>对于 Stack Overflow，我们使用其高效的数据浏览工具收集所需的指标。</p>
<p>在不加描述的情况下，请留心其他常见的注意事项。</p>
<ul>
<li>此分析报告所包含的语言，必须出现在 GitHub 和 Stack Overflow
中。</li>
<li>免责声明：这些排名不一定可以充分展示语言的总体使用情况，它们不过是检验我们认为可以预测未来使用的两个方面之间的相关性，这就是其价值所在。</li>
<li>其实有着许多潜在的社区可以作为我们调查数据的来源，但我们还是选择了
GitHub 和 Stack
Overflow，首先是因为它们的规模很大，其次是因为它们开放了分析所需的数据。尽管如此，我们仍然鼓励有兴趣的团队通过其他来源进行自己的分析。</li>
<li>所有的数字排名都应该用质疑的目光看待。出于兴趣考虑，我们在此处严格按数字排名。通常来说，数字排名并不如语言的等级或分组那么中肯。在许多情况下，图标的某一个位置与下一个位置是无法区分的。但是，一部分语言和另一部分语言之间的间隔通常代表相对受欢迎程度的实质差异。</li>
<li>此外，排名越低，可用于排序的数据就越少。除了顶层的那些语言之外，我们通常依赖于快照，可以评估的数据量很小。因此语言的位置越靠后，它的实际位置就越不可靠。</li>
<li>诸如 Mathematica 之类的具有除 Stack Overflow
以外社区的语言在该轴上的代表性不足。我们不可能扩展衡量一百个不同的社区站点，因为许多站点没有可用的公共衡量标准，而且相互衡量不同的社区站点在统计上是无效的。</li>
</ul>
<p>了解这些事情之后，让我们看看 2021 年第一季度的数据：</p>
<figure>
<img src="https://redmonk.com/sogrady/files/2021/03/lang.rank_.0121.wm_-1024x805.png" alt="2021 第一季度数据">
<figcaption aria-hidden="true">2021 第一季度数据</figcaption>
</figure>
<p>除了上面的图（即使是全尺寸图也可能很难让人看清楚）之外，我们还提供以下数字排名。可以观察到，每一个分段之间有几种语言，如下所示（它们在此处按字母顺序列出，而不是合并为一个分段，因为后一种方法往往会引起误解）。</p>
<ol type="1">
<li>JavaScript</li>
<li>Python</li>
<li>Java</li>
<li>PHP</li>
<li>C＃</li>
<li>C++</li>
<li>CSS</li>
<li>TypeScript</li>
<li>Ruby</li>
<li>C</li>
<li>Swift</li>
<li>R</li>
<li>Objective-C</li>
<li>Shell</li>
<li>Scala</li>
<li>Go</li>
<li>PowerShell</li>
<li>Kotlin</li>
<li>Rust</li>
<li>Perl</li>
</ol>
<p>在我们上次的排名中，前 20
名中的排名相当稳定（在指标的增长中这种情况并不罕见）。相反，本季度的排名具有很大的变化。前
20
名中有一半语言都经历了一定程度的变化，这是非常不寻常的。很难将其明确地归因于任何更高水平的宏观趋势，但数据与行业相吻合，该行业在最初的疫情封锁混乱之后的第三、四季度又重新找回节奏，但是为生存而不得不让步于不那么好的新发展路线。</p>
<p>不仅有变化的存在，而且值得注意，如果这些变化继续持续下去，可能会有些大事情发生！我们将在近期对它进行探讨。Python
排名第二是值得被我们讨论的的变化之一，而 Java 跟在 Python
之后，仍然非常受欢迎，实际上相比于和 PHP 之间的差距，Java
与第一名的差距更小，但是 Python 捍卫其新的高排名的能力非常引人注目。</p>
<p>有了该小结，让我们来到本版排名中最重要的部分。（注：括号中的数字是语言排名相比于上次的净变化。）</p>
<ul>
<li><p><strong>JavaScript（0）：</strong>
我们的分析是基于语言排名的波动的，因此这里有关 JavaScript
的讨论似乎有悖直觉，因为 JavaScript
根本就没有变化！但值得注意的是，JavaScript
的表现仍然很亮眼。尽管有来自各种新兴语言的竞争，各种碎片化的讨论，甚至还有不少对
JavaScript 语言本身的批评，它仍然非常受欢迎。自 2018 年 1
月第一季度发布报告以来，JavaScript 的拉取请求增加了 453
个百分点，而这个季度比上一季度增加了 96％！这是基于已经相当庞大的 commit
提交得到的数据。简而言之，JavaScript
尽管有其不利因素，但仍然是编程语言中最强大的那份力量，这一点在业内没有其他语言能比拟，并且数据中没有迹象表明这种情况可能很快就会改变。</p></li>
<li><p><strong>TypeScript（1）：</strong> 说到 JavaScript 的表现，其实
TypeScript 的排名也在稳步提升中。就其本身而言，这是令人印象深刻的。Swift
是记忆中唯一能进入前 10
名的语言（但这只是一个季度的数据，它随后迅速反弹并自 2018
年以来一直保持相对稳定地排在了第 11 位）。TypeScript
面临的第一个问题就是它是否能够坚持维持自身地位的稳定，而现在更合适的问题是该语言的上限是多少。TypeScript
在最近的八个季度中上升了六位，在整个行业中，它的受欢迎程度显而易见。然而，与增长一样有趣的是，增长源于这种语言它本身。</p></li>
<li><p><strong>Ruby（-2）：</strong> 如先前在这个领域中所讨论的，Ruby
一直保持平稳的排名增减，长期以来一直处于下降的状态。然而，本季度的表现使人们对它能否继续保持佳绩提出了疑问。当我们在
2012 年开始这些排名时，Ruby
是排名第五的最受欢迎的语言，并且大约五年来，它一直保持着这一地位。但自
2016 年以来，Ruby 一直在下滑，本季度它已被
CSS（是的，我们知道你们中的许多人都认为它不应该被列入排名）和 TypeScript
一起超过了。Ruby
在最近几年已努力解决一些性能问题，但撇开人们对它所标榜的与它所做到的存有疑问不谈，它对性能的关注似乎并没有在我们的衡量体系下改变自己的命运。需要明确的是有数十种乃至上百种语言会很高兴地与这些排名中的第九种语言互换位置，但是相比于实际的位置，
Ruby 倡导者和用户应该更关心它的轨迹。Ruby
是一门有趣的语言，具有优美的语法，但要想在竞争激烈的语言市场中存活下去，这还远远不够。</p></li>
<li><p><strong>Go（-1）：</strong> 与 Ruby 一样，Go
的排名与其整体轨迹相比，也不再是一个值得关注的问题。经过最初的快速增长后，Go
在 2018 年排名第 14 位，达到它的顶峰后，Go
语言就成了一直稳定跌落的语言。正如前面所讨论的，相对于此列表中的其他一些语言，Go
的更狭窄的应用市场可以解释其中的一些问题。作为后端应用程序组合的主要竞争对手，Java
仍然是一种至关重要的且使用率很高的语言，而不是经过这么多年的服务而逐渐消失，这也没有帮助
Go。但是，不管它是稳定的还是下降的，如果 Go
有想成为真正行业力量的野心，那么其路径和结构可能需要进行一些改变。</p></li>
<li><p><strong>R（1）：</strong> 我们经常在 R 语言的世界中编程。R
语言是不少其他社区中学术界的主要内容。但这一种语言只是在一个领域（即数据分析）中表现出色，而在处理数据、分析数据之外，根本与那些社区或学科的内容不相关。R
语言是用来解决一个简单问题的几种语言之一：在当今多元化的世界中，一种专一化语言的命运可能是什么？它会被推拔高还是被拉低？通常，专用于特定内容的语言的性能要好于通用语言
—— 就像上面提到的 Java 与 Go。但是，R
语言是该规则的例外。尽管它的增长从未经历过快速或线性的发展，但在我们多年前开始进行排名时，该语言的排名为
17。而 R 在该分析中排名第 12，这可太有趣了！更重要的是它是通过超过
Objective C（-2）来到这个排名的！自推出预期的替代产品 Swift
以来，Objective C
这一以往前十名中的佼佼者，一直处于跌落的轨道中。然而，仍然令人惊讶的是能够看到一种专注于统计分析的语言能排在编写大多数
2014 年前的 iOS 应用程序所使用的语言之前。</p></li>
<li><p><strong>Kotlin（1）和 Rust（1）：</strong> Kotlin 和 Rust
彼此之间没有真正的关系，只是它们之间存在一定的功能重叠。Kotlin
是一种基于 JVM 的语言，具有现代语法，可以与 Java 进行自由混合，而 Java
是一种具有良好后端背景的语言，但它也是 Android 上的一等公民。Rust
是一种安全意识强的语言，已被 Mozilla 等组织广泛使用，也经常被认为是 Go
的替代语言。说到 Mozilla，他们将所有 Rust 商标和基础设施资产转移到了新的
Rust Foundation，Rust Foundation 是该语言的管理员。该语言也得到了
AWS、Google、华为和微软的支持。但是，Kotlin 和 Rust
的共同点是，它们在开发人员中的受欢迎程度使他们在本季度排名中分别上升了一个位置
—— Rust 排名第 19 位，Kotlin 排名第 18 位。如今 Kotlin
的发展速度已经远超 Rust，但看看 Rust
的管理员能否撼动这一局面仍然是一件很有趣的事情。</p></li>
<li><p><strong>Dart（3）：</strong> 在不到三年前，Dart
就被嘲笑说已经步入中年了。我们跟踪的开发人员对 Dart
的兴趣和相关的活动少之又少。但是，在 Flutter 框架推出两年后，Dart
排名上升了 3 位，刚好排在我们排名的前 20 名之外的 21 名。在 Dart
似乎停滞了两个季度之后（Kotlin 也是如此），人们怀疑 Dart
是否已经到了它的极限了。本季度的结果表明，这个猜想的答案是否定的。显然，Flutter
对这种语言的流行产生了实质性的影响，并且向大家明确了 Dart
并没有因为自身可以被编译为世界上其它的流行语言而遭受挫败，这反而对它还有利。虽然要在我们的排名中位居第
21 位已经非常困难了 —— Rust 可以证明 —— 但是看到这个季度 Dart
恢复上升的轨迹，我们可以将注意力重新放到 Dart 身上，看看它是否能够冲破
20 名的罗网，以及它可能会替代的语言。</p></li>
</ul>
<p>鸣谢：我的同事 Rachel Stephens 在这些排名中编写了负责 GitHub
部分的查询。她还负责 Stack Overflow 数据的查询设计。</p>]]></content>
      <categories>
        <category>Computer Science</category>
        <category>Misc</category>
      </categories>
      <tags>
        <tag>Computer Science</tag>
        <tag>Programming Languages</tag>
      </tags>
  </entry>
  <entry>
    <title>NumPy 1.20 问世，带来了运行时 SIMD 的支持和类型注释</title>
    <url>/2021/03/10/computer%20science/backend/NumPy-1-20-Released-with-Runtime-SIMD-Support-and-Type-Annotations/</url>
    <content><![CDATA[<blockquote>
<ul>
<li>原文地址：<a href="https://www.infoq.com/news/2021/03/numpy-120-typed-SIMD/">NumPy
1.20 Released with Runtime SIMD Support and Type Annotations</a></li>
<li>原文作者：<a href="https://www.infoq.com/profile/Bruno-Couriol/">Bruno-Courio</a></li>
<li>译者：<a href="https://github.com/PassionPenguin">霜羽
Hoarfroster</a></li>
<li>校对者：<a href="https://github.com/HumanBeingXenon">HumanBeingXenon</a>、<a href="https://github.com/zenblo">zenblo</a></li>
</ul>
</blockquote>
<p>新发布的 NumPy 1.20 版本在<a href="https://github.com/numpy/numpy/releases/tag/v1.20.0">性能和说明文档</a>方面都有所提升。我们现在可以在
NumPy 函数中使用类型注释。<a href="https://zh.wikipedia.org/wiki/SIMD">SIMD（单指令流多数据流）</a>
指令的更广泛使用完善了通用功能（<a href="https://numpy.org/doc/stable/reference/ufuncs.html">ufunc</a>）。NumPy
还对它的文档做出了显著的改进。</p>
<p>NumPy 库的代码现在有了类型信息的注解，这是 NumPy 不再支持 Python 2
所促使的结果。一位贡献者<a href="http://numpy-discussion.10968.n7.nabble.com/Put-type-annotations-in-NumPy-proper-td47996.html">解释此举背后的理由</a>，如下所示：</p>
<blockquote>
<p>几年前，当我们开始使用 numpy-stubs 时，将类型注释放入 NumPy
本身似乎为时过早。那时候我们仍然支持着 Python
2，这意味着我们需要在类型注释中使用笨拙的注释。在过去的几年中，即使在
Python 科学栈中，使用类型注释也变得越来越流行。例如，我知道至少
SciPy，pandas 和 xarray 的 API 类型至少有一部分被注释了。即使没有 shape
或 dtype 的注释，在科学栈底部的项目 NumPy
具有接近完整的注释也很有价值。</p>
</blockquote>
<p>开发人员还可以使用新类型 —— <a href="https://numpy.org/doc/stable/reference/typing.html#numpy.typing.ArrayLike"><code>ArrayLike</code></a>
和 <a href="https://numpy.org/doc/stable/reference/typing.html#numpy.typing.DTypeLike"><code>DTypeLike</code></a>。<code>ArrayLike</code>
类型用于可转换为数组的对象，而 <code>DTypeLike</code> 用于转换
<code>dtypes</code> 的对象。数据类型对象（<a href="https://numpy.org/doc/stable/reference/produced/numpy.dtype.html#numpy.dtype">numpy.dtype</a>）用于指定对应于固定大小的内存块的内容到数组项目，并包含有关项目数据类型（例如，整数，浮点数），数据大小，字节顺序（<a href="https://numpy.org/doc/stable/glossary%20html#term-little-endian">little-endian</a>
或 <a href="https://numpy.org/doc/stable/glossary.html#term-big-endian">big-endian</a>）等。这两种新类型使类型检查器能够识别效率低下的模式并警告用户。该文档说明：</p>
<blockquote>
<p><code>DTypeLike</code> 类型尝试让我们避免使用如下所示的字段字典创建
<code>dtype</code> 对象：</p>
<div class="sourceCode" id="cb1"><pre class="sourceCode python"><code class="sourceCode python"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a>x <span class="op">=</span> np.dtype(&#123;“ field1”：（float，<span class="dv">1</span>），“ field2”：（int，<span class="dv">3</span>）&#125;)</span></code></pre></div>
<p>尽管这是有效的 Numpy
代码，但类型识别器会提醒这里的问题，因为它的用法不明确。</p>
</blockquote>
<p>新的 <a href="https://numpy.org/devdocs/reference/typing.html">numpy.typing
模块</a>包含新的类型别名，可以在运行时导入：</p>
<pre><code>from numpy.typing import ArrayLike
x: ArrayLike = [1, 2, 3, 4]</code></pre>
<p>NumPy 1.20 还启用了<a href="https://numpy.org/devdocs/reference/simd/simd-optimizations.html">多平台
SIMD 编译器优化</a>功能，现在 NumPy 能够<a href="https://github.com/numpy/numpy/pull/13421">检测 CPU 提供的 SIMD
指令</a>并对其进行优化。用户可以通过几个新的构建参数来配置运行时优化行为。<code>--cpu-baseline</code>
参数用于指定所需优化的最小集，而 <code>--cpu-dispatch</code>
用于指定已调度的其他优化集（默认值 <code>max -xop -fma4</code>
意味着会启用所有除了 AMD 旧功能的 CPU 功能。）用户可以通过使用
<code>--disable-optimization</code> 参数选择不使用新的改进。</p>
<p>使用 NumPy 1.20 需要升级到 Python 3.7 或更新版本。为了改善 NumPy
的在线表现和对新用户的友好性，新的 NumPy 发行版本大幅改进了它的文档 —
发行版中提到合并了 185 个相关的拉取请求，这是一项持续的工作。</p>
<p>NumPy 1.20 是一个大型项目，由 184 人合并贡献了 684 个 pull 请求。<a href="https://github.com/numpy/numpy/releases/tag/v1.20.0">完整的发行说明</a>可以在线获取，其中包含有关其他功能和不推荐使用的信息。</p>
<p>有些用户接纳了这种新的类型注释，而不仅仅只是与 <a href="https://julialang.org/">Julia</a> 进行比较。Julia
是另一种动态类型的编程语言<a href="https://docs.julialang.org/en/v1/">专门针对高性能科学计算而设计</a>的。它通常应用于机器学习，数据挖掘，大规模线性代数，分布式和并行计算。一位用户<a href="https://hacker-news.news/post/25977977">在 HackerNews
上这样说</a>：</p>
<blockquote>
<p>使用 Julia 确实可以更好地进行类型注释，但是 NumPy
带来的类型注释对于许多不使用 Julia
的用户来说是有益的。数字的密集运算的并不是主要问题，Python
拥有更多的更好的库这一点也很重要，并且还能够避免 Julia 调用 Python
的麻烦。</p>
</blockquote>
<p><a href="http://www.numpy.org/">NumPy</a> 是一个开源 Python
库，增加了对大型、多维、同构类型的数组和矩阵的支持。NumPy
含有一堆的数学函数，用于创建和变换这些数组、线性代数例程等。NumPy 是 <a href="http://www.scipy.org/">SciPy</a> 的核心，Scipy 是一个基于 Python
的开放源代码软件生态系统，用于数学、科学和工程学。NumPy
使得数据科学家可以使用高效的脚本语言来执行数据分析任务。</p>]]></content>
      <categories>
        <category>Computer Science</category>
        <category>Backend</category>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Computer Science</tag>
        <tag>Backend</tag>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>6 个没人讲过的 CSS 属性</title>
    <url>/2021/03/10/computer%20science/frontend/6-css-properties-nobody-is-talking-about/</url>
    <content><![CDATA[<blockquote>
<ul>
<li>原文地址：<a href="https://js.plainenglish.io/6-css-properties-nobody-is-talking-about-e6cab5138d02">6
CSS Properties Nobody Is Talking About</a></li>
<li>原文作者：<a href="https://medium.com/@anuragkanoria">Anurag
Kanoria</a></li>
<li>译者：<a href="https://github.com/PassionPenguin">霜羽
Hoarfroster</a></li>
<li>校对者：<a href="https://github.com/zenblo">zenblo</a>、<a href="https://github.com/Chorer">Chorer</a></li>
</ul>
</blockquote>
<figure>
<img src="https://cdn-images-1.medium.com/max/9640/0*bs0OAqfhQkkn-9YY" alt="由 Kristina Flour 上传至 Unsplash">
<figcaption aria-hidden="true">由 <a href="https://unsplash.com/@tinaflour?utm_source=medium&amp;utm_medium=referral">Kristina
Flour</a> 上传至 <a href="https://unsplash.com?utm_source=medium&amp;utm_medium=referral">Unsplash</a></figcaption>
</figure>
<p>数十年来，CSS 和 HTML 一直都是互联网的基石。</p>
<p>虽然 HTML
能够负责创建网站结构并进行图文排列，但在设计网站上却无能为力。</p>
<p>自 1994 年以来，设计网站一直是 CSS
的唯一目的，它是一门描述网站外观的语言。</p>
<p>多年来，CSS 不断地推出更多的新属性，例如 Flexbox（弹性盒）或是
Grid（网格）。</p>
<p>尽管创建 Web 应用广受欢迎且日趋复杂，但大多数开发者仍有很多不了解的
CSS 属性和技巧。</p>
<p>以下是你可能从未听说过的 6 个 CSS 属性：</p>
<h2 id="all">1. <code>all</code></h2>
<p>你是否曾经使用过 CSS
框架呢？如果是的话，我可以肯定你有好几次都想要根据自己的喜好覆盖某些元素的样式定义。</p>
<p>最常用的方法是使用 CSS 中的 <code>!important</code>
属性来强调当前属性，而忽略所有其他设置和规则。</p>
<div class="sourceCode" id="cb1"><pre class="sourceCode css"><code class="sourceCode css"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a><span class="fu">.header</span> &#123;</span>
<span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a>    <span class="kw">color</span>: <span class="cn">blue</span> <span class="at">!important</span><span class="op">;</span></span>
<span id="cb1-3"><a href="#cb1-3" aria-hidden="true" tabindex="-1"></a>    <span class="kw">font-size</span>: <span class="dv">14</span><span class="dt">px</span> <span class="at">!important</span><span class="op">;</span></span>
<span id="cb1-4"><a href="#cb1-4" aria-hidden="true" tabindex="-1"></a>&#125;</span></code></pre></div>
<p>但是，重复书写相同的关键字会让 CSS 文件看起来很混乱。</p>
<p>而一个更简单的覆盖样式定义的方法，是使用 <code>all</code> 属性。</p>
<p><code>all</code> 共有 3 个可用的属性值 ——
<code>initial</code>、<code>inherit</code> 和 <code>unset</code>。</p>
<div class="sourceCode" id="cb2"><pre class="sourceCode css"><code class="sourceCode css"><span id="cb2-1"><a href="#cb2-1" aria-hidden="true" tabindex="-1"></a><span class="fu">.header</span> &#123;</span>
<span id="cb2-2"><a href="#cb2-2" aria-hidden="true" tabindex="-1"></a>    <span class="kw">all</span>: initial<span class="op">;</span></span>
<span id="cb2-3"><a href="#cb2-3" aria-hidden="true" tabindex="-1"></a>    <span class="kw">color</span>: <span class="cn">blue</span><span class="op">;</span></span>
<span id="cb2-4"><a href="#cb2-4" aria-hidden="true" tabindex="-1"></a>    <span class="kw">font-size</span>: <span class="dv">14</span><span class="dt">px</span><span class="op">;</span></span>
<span id="cb2-5"><a href="#cb2-5" aria-hidden="true" tabindex="-1"></a>&#125;</span></code></pre></div>
<p><code>all: initial</code>
会将元素的所有属性设置为回退值或初始值。</p>
<p>从 Chrome 版本 37 和 Firefox 版本 27 开始它们都支持了这个属性。Edge
浏览器也支持此属性，但 IE 并不支持。</p>
<h2 id="writing-mode">2. <code>writing-mode</code></h2>
<p>我最近写过一篇有关<a href="https://medium.com/javascript-in-plain-english/8-amazing-places-to-find-design-inspirations-for-free-dd2e64abc1b0">寻找设计灵感的神奇地方</a>的文章，里面列举的网站和我偶然发现的许多站点中，文本都是在一侧竖直排列的。</p>
<figure>
<img src="https://cdn-images-1.medium.com/max/2600/1*m5Ut8kRsp8oSIUogG_EMuw.jpeg" alt="来源：httpster">
<figcaption aria-hidden="true">来源：<a href="https://httpster.net/2020/dec/">httpster</a></figcaption>
</figure>
<p>在上图的右侧（滚动条附近），我们可以看到侧边竖直排列的文本，而这恰好就是一种显示附加信息的巧妙方法。</p>
<p><code>writing-mode</code> 属性可以让我们实现这个效果。</p>
<p>该属性支持以下值：</p>
<ul>
<li><code>sideways-rl</code>：文本和其他内容从上到下垂直排列，并向右横向放置。</li>
<li><code>sideways-lr</code>：和 <code>sideways-rl</code>
一样，文本和其他内容从上到下垂直排列，但向左倾斜。</li>
<li><code>vertical-rl</code>：文本和其他内容从上到下垂直排列，从右到左水平排列。如果有两行或更多行，则这些行会被<strong>放置在前一行的左侧</strong>。</li>
<li><code>vertical-lr</code>：与 <code>vertical-rl</code>
不同，水平地将文本从左到右排列，并且如果有两行或更多行，则这些行会被放置在前一行的右侧。</li>
</ul>
<p><code>horizontal-tb</code> 属性则实现默认排列文本的效果。</p>
<figure>
<img src="https://cdn-images-1.medium.com/max/2000/1*enCsNGgsHPLsCxLnu0-FJA.png" alt="来源：MDN Web 文档">
<figcaption aria-hidden="true">来源：<a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/writing-mode">MDN
Web 文档</a></figcaption>
</figure>
<p>你可以在<a href="https://developer.mozilla.org/en-US/docs/Web/CSS/writing-mode">这里</a>找到相关实现和代码块。</p>
<h2 id="background-clip">3. <code>background-clip</code></h2>
<p>这是一个有趣的属性，它让我们可以为元素的背景设置自定义图形。</p>
<p>我们的自定义图形可以延伸到元素的边框，内边距盒或内容盒。</p>
<p>以下是此属性的简短实现：</p>
<p>HTML：</p>
<div class="sourceCode" id="cb3"><pre class="sourceCode html"><code class="sourceCode html"><span id="cb3-1"><a href="#cb3-1" aria-hidden="true" tabindex="-1"></a><span class="kw">&lt;p</span> <span class="er">class</span><span class="ot">=</span><span class="st">"border-box"</span><span class="kw">&gt;</span>背景延伸到边框。<span class="kw">&lt;/p&gt;</span></span>
<span id="cb3-2"><a href="#cb3-2" aria-hidden="true" tabindex="-1"></a><span class="kw">&lt;p</span> <span class="er">class</span><span class="ot">=</span><span class="st">"padding-box"</span><span class="kw">&gt;</span>背景延伸到边框的内部边缘。<span class="kw">&lt;/p&gt;</span></span>
<span id="cb3-3"><a href="#cb3-3" aria-hidden="true" tabindex="-1"></a><span class="kw">&lt;p</span> <span class="er">class</span><span class="ot">=</span><span class="st">"content-box"</span><span class="kw">&gt;</span>背景仅延伸到内容盒的边缘。<span class="kw">&lt;/p&gt;</span></span>
<span id="cb3-4"><a href="#cb3-4" aria-hidden="true" tabindex="-1"></a><span class="kw">&lt;p</span> <span class="er">class</span><span class="ot">=</span><span class="st">"text"</span><span class="kw">&gt;</span>背景被裁剪为前景文本。<span class="kw">&lt;/p&gt;</span></span></code></pre></div>
<p>CSS：</p>
<div class="sourceCode" id="cb4"><pre class="sourceCode css"><code class="sourceCode css"><span id="cb4-1"><a href="#cb4-1" aria-hidden="true" tabindex="-1"></a>p &#123;</span>
<span id="cb4-2"><a href="#cb4-2" aria-hidden="true" tabindex="-1"></a>    <span class="kw">border</span>: <span class="dv">.8</span><span class="dt">em</span> <span class="cn">darkviolet</span><span class="op">;</span></span>
<span id="cb4-3"><a href="#cb4-3" aria-hidden="true" tabindex="-1"></a>    <span class="kw">border-style</span>: <span class="dv">dotted</span> <span class="dv">double</span><span class="op">;</span></span>
<span id="cb4-4"><a href="#cb4-4" aria-hidden="true" tabindex="-1"></a>    <span class="kw">margin</span>: <span class="dv">1</span><span class="dt">em</span> <span class="dv">0</span><span class="op">;</span></span>
<span id="cb4-5"><a href="#cb4-5" aria-hidden="true" tabindex="-1"></a>    <span class="kw">padding</span>: <span class="dv">1.4</span><span class="dt">em</span><span class="op">;</span></span>
<span id="cb4-6"><a href="#cb4-6" aria-hidden="true" tabindex="-1"></a>    <span class="kw">background</span>: <span class="fu">linear-gradient(</span><span class="dv">60</span><span class="dt">deg</span><span class="op">,</span> <span class="cn">red</span><span class="op">,</span> <span class="cn">yellow</span><span class="op">,</span> <span class="cn">red</span><span class="op">,</span> <span class="cn">yellow</span><span class="op">,</span> <span class="cn">red</span><span class="fu">)</span><span class="op">;</span></span>
<span id="cb4-7"><a href="#cb4-7" aria-hidden="true" tabindex="-1"></a>    <span class="kw">font</span>: <span class="dv">900</span> <span class="dv">1.2</span><span class="dt">em</span> <span class="dv">sans-serif</span><span class="op">;</span></span>
<span id="cb4-8"><a href="#cb4-8" aria-hidden="true" tabindex="-1"></a>    <span class="kw">text-decoration</span>: <span class="dv">underline</span><span class="op">;</span></span>
<span id="cb4-9"><a href="#cb4-9" aria-hidden="true" tabindex="-1"></a>&#125;</span>
<span id="cb4-10"><a href="#cb4-10" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb4-11"><a href="#cb4-11" aria-hidden="true" tabindex="-1"></a><span class="fu">.border-box</span> &#123;</span>
<span id="cb4-12"><a href="#cb4-12" aria-hidden="true" tabindex="-1"></a>    <span class="kw">background-clip</span>: <span class="dv">border-box</span><span class="op">;</span></span>
<span id="cb4-13"><a href="#cb4-13" aria-hidden="true" tabindex="-1"></a>&#125;</span>
<span id="cb4-14"><a href="#cb4-14" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb4-15"><a href="#cb4-15" aria-hidden="true" tabindex="-1"></a><span class="fu">.padding-box</span> &#123;</span>
<span id="cb4-16"><a href="#cb4-16" aria-hidden="true" tabindex="-1"></a>    <span class="kw">background-clip</span>: padding-box<span class="op">;</span></span>
<span id="cb4-17"><a href="#cb4-17" aria-hidden="true" tabindex="-1"></a>&#125;</span>
<span id="cb4-18"><a href="#cb4-18" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb4-19"><a href="#cb4-19" aria-hidden="true" tabindex="-1"></a><span class="fu">.content-box</span> &#123;</span>
<span id="cb4-20"><a href="#cb4-20" aria-hidden="true" tabindex="-1"></a>    <span class="kw">background-clip</span>: <span class="dv">content-box</span><span class="op">;</span></span>
<span id="cb4-21"><a href="#cb4-21" aria-hidden="true" tabindex="-1"></a>&#125;</span>
<span id="cb4-22"><a href="#cb4-22" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb4-23"><a href="#cb4-23" aria-hidden="true" tabindex="-1"></a><span class="fu">.text</span> &#123;</span>
<span id="cb4-24"><a href="#cb4-24" aria-hidden="true" tabindex="-1"></a>    <span class="kw">background-clip</span>: <span class="dv">text</span><span class="op">;</span></span>
<span id="cb4-25"><a href="#cb4-25" aria-hidden="true" tabindex="-1"></a>    -webkit-background-clip: <span class="dv">text</span><span class="op">;</span></span>
<span id="cb4-26"><a href="#cb4-26" aria-hidden="true" tabindex="-1"></a>    <span class="kw">color</span>: <span class="fu">rgba(</span><span class="dv">0</span><span class="op">,</span> <span class="dv">0</span><span class="op">,</span> <span class="dv">0</span><span class="op">,</span> <span class="dv">.2</span><span class="fu">)</span><span class="op">;</span></span>
<span id="cb4-27"><a href="#cb4-27" aria-hidden="true" tabindex="-1"></a>&#125;</span></code></pre></div>
<p>效果：</p>
<figure>
<img src="https://cdn-images-1.medium.com/max/2000/1*Ugb8RTSg7qFGkcSFUWfkHw.jpeg" alt="图源作者">
<figcaption aria-hidden="true">图源作者</figcaption>
</figure>
<p>我们也可以使用自定义图片作为文本的背景：</p>
<figure>
<img src="https://cdn-images-1.medium.com/max/2000/1*ng2WZRQ1HOIBSHWdizCzBw.jpeg" alt="图源作者">
<figcaption aria-hidden="true">图源作者</figcaption>
</figure>
<p>值得注意的是，在 Chrome 上我们需要使用
<code>-webkit-background-clip</code>
属性，并确保文本颜色设置为透明。</p>
<h2 id="user-select">4. <code>user-select</code></h2>
<p>如果我们的网站上有着一些不想让用户复制的文本，我们可以使用此属性。</p>
<p><code>user-select</code> 属性指定是否可以选择元素的文本。</p>
<p>这对除文本框之外的内容没有任何影响。</p>
<div class="sourceCode" id="cb5"><pre class="sourceCode css"><code class="sourceCode css"><span id="cb5-1"><a href="#cb5-1" aria-hidden="true" tabindex="-1"></a><span class="fu">.row-of-icons</span> &#123;</span>
<span id="cb5-2"><a href="#cb5-2" aria-hidden="true" tabindex="-1"></a>    <span class="kw">-webkit-user-select</span>: <span class="dv">none</span><span class="op">;</span> <span class="co">/* Chrome &amp; Safari all */</span></span>
<span id="cb5-3"><a href="#cb5-3" aria-hidden="true" tabindex="-1"></a>    <span class="kw">-moz-user-select</span>: <span class="dv">none</span><span class="op">;</span> <span class="co">/* Firefox all */</span></span>
<span id="cb5-4"><a href="#cb5-4" aria-hidden="true" tabindex="-1"></a>    <span class="kw">-ms-user-select</span>: <span class="dv">none</span><span class="op">;</span> <span class="co">/* IE 10+ */</span></span>
<span id="cb5-5"><a href="#cb5-5" aria-hidden="true" tabindex="-1"></a>    <span class="kw">user-select</span>: <span class="dv">none</span><span class="op">;</span></span>
<span id="cb5-6"><a href="#cb5-6" aria-hidden="true" tabindex="-1"></a>&#125;</span></code></pre></div>
<p>此属性也可用于确保选择了整个元素。</p>
<div class="sourceCode" id="cb6"><pre class="sourceCode css"><code class="sourceCode css"><span id="cb6-1"><a href="#cb6-1" aria-hidden="true" tabindex="-1"></a><span class="fu">.force-select</span> &#123;</span>
<span id="cb6-2"><a href="#cb6-2" aria-hidden="true" tabindex="-1"></a>    <span class="kw">user-select</span>: <span class="dv">all</span><span class="op">;</span></span>
<span id="cb6-3"><a href="#cb6-3" aria-hidden="true" tabindex="-1"></a>    <span class="kw">-webkit-user-select</span>: <span class="dv">all</span><span class="op">;</span> <span class="co">/* Chrome 49+ */</span></span>
<span id="cb6-4"><a href="#cb6-4" aria-hidden="true" tabindex="-1"></a>    <span class="kw">-moz-user-select</span>: <span class="dv">all</span><span class="op">;</span> <span class="co">/* Firefox 43+ */</span></span>
<span id="cb6-5"><a href="#cb6-5" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb6-6"><a href="#cb6-6" aria-hidden="true" tabindex="-1"></a>&#125;</span></code></pre></div>
<p>你可以在<a href="https://developer.mozilla.org/en-US/docs/Web/CSS/user-select">这里</a>找到完整的说明。</p>
<h2 id="white-space">5. <code>white-space</code></h2>
<p>在使用 <code>text-overflow</code>
的时候，该属性非常有用，因为它允许我们控制元素的文本流。</p>
<p>它接受
<code>nowrap</code>、<code>pre</code>、<code>pre-wrap</code>、<code>pre-line</code>
和 <code>normal</code> 作为属性值。</p>
<p><code>nowrap</code>
可防止文本环绕在元素的宽度和高度内，并使其溢出。</p>
<p><code>pre</code>
值强制浏览器渲染代码中默认会去除的换行符和空格。<code>pre-wrap</code>
值和 <code>pre</code> 值作用相同，但是它不会让文本溢出元素。</p>
<p><code>pre-line</code>
属性会在代码中相应的地方换行，但是不会显示多余的空格。</p>
<p>通过以下示例可以清楚地看出它们的区别：</p>
<p>HTML:</p>
<div class="sourceCode" id="cb7"><pre class="sourceCode html"><code class="sourceCode html"><span id="cb7-1"><a href="#cb7-1" aria-hidden="true" tabindex="-1"></a><span class="kw">&lt;div&gt;</span></span>
<span id="cb7-2"><a href="#cb7-2" aria-hidden="true" tabindex="-1"></a>    <span class="kw">&lt;p</span> <span class="er">class</span><span class="ot">=</span><span class="st">'zero'</span><span class="kw">&gt;</span></span>
<span id="cb7-3"><a href="#cb7-3" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb7-4"><a href="#cb7-4" aria-hidden="true" tabindex="-1"></a>        Some text</span>
<span id="cb7-5"><a href="#cb7-5" aria-hidden="true" tabindex="-1"></a>    <span class="kw">&lt;/p&gt;</span></span>
<span id="cb7-6"><a href="#cb7-6" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb7-7"><a href="#cb7-7" aria-hidden="true" tabindex="-1"></a>    <span class="kw">&lt;p</span> <span class="er">class</span><span class="ot">=</span><span class="st">'first'</span><span class="kw">&gt;</span></span>
<span id="cb7-8"><a href="#cb7-8" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb7-9"><a href="#cb7-9" aria-hidden="true" tabindex="-1"></a>        Some text</span>
<span id="cb7-10"><a href="#cb7-10" aria-hidden="true" tabindex="-1"></a>    <span class="kw">&lt;/p&gt;</span></span>
<span id="cb7-11"><a href="#cb7-11" aria-hidden="true" tabindex="-1"></a>    <span class="kw">&lt;p</span> <span class="er">class</span><span class="ot">=</span><span class="st">'second'</span><span class="kw">&gt;</span></span>
<span id="cb7-12"><a href="#cb7-12" aria-hidden="true" tabindex="-1"></a>        Some text</span>
<span id="cb7-13"><a href="#cb7-13" aria-hidden="true" tabindex="-1"></a>    <span class="kw">&lt;/p&gt;</span></span>
<span id="cb7-14"><a href="#cb7-14" aria-hidden="true" tabindex="-1"></a>    <span class="kw">&lt;p</span> <span class="er">class</span><span class="ot">=</span><span class="st">'third'</span><span class="kw">&gt;</span></span>
<span id="cb7-15"><a href="#cb7-15" aria-hidden="true" tabindex="-1"></a>        Some text</span>
<span id="cb7-16"><a href="#cb7-16" aria-hidden="true" tabindex="-1"></a>    <span class="kw">&lt;/p&gt;</span></span>
<span id="cb7-17"><a href="#cb7-17" aria-hidden="true" tabindex="-1"></a>    <span class="kw">&lt;p</span> <span class="er">class</span><span class="ot">=</span><span class="st">'fourth'</span><span class="kw">&gt;</span></span>
<span id="cb7-18"><a href="#cb7-18" aria-hidden="true" tabindex="-1"></a>        Some text</span>
<span id="cb7-19"><a href="#cb7-19" aria-hidden="true" tabindex="-1"></a>    <span class="kw">&lt;/p&gt;</span></span>
<span id="cb7-20"><a href="#cb7-20" aria-hidden="true" tabindex="-1"></a><span class="kw">&lt;/div&gt;</span></span></code></pre></div>
<p>CSS:</p>
<div class="sourceCode" id="cb8"><pre class="sourceCode css"><code class="sourceCode css"><span id="cb8-1"><a href="#cb8-1" aria-hidden="true" tabindex="-1"></a>div &#123;</span>
<span id="cb8-2"><a href="#cb8-2" aria-hidden="true" tabindex="-1"></a>    <span class="kw">width</span>: <span class="dv">100</span><span class="dt">px</span><span class="op">;</span></span>
<span id="cb8-3"><a href="#cb8-3" aria-hidden="true" tabindex="-1"></a>&#125;</span>
<span id="cb8-4"><a href="#cb8-4" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb8-5"><a href="#cb8-5" aria-hidden="true" tabindex="-1"></a>p &#123;</span>
<span id="cb8-6"><a href="#cb8-6" aria-hidden="true" tabindex="-1"></a>    <span class="kw">background</span>: <span class="cn">red</span><span class="op">;</span></span>
<span id="cb8-7"><a href="#cb8-7" aria-hidden="true" tabindex="-1"></a>    <span class="kw">font-size</span>: <span class="dv">2</span><span class="dt">rem</span><span class="op">;</span></span>
<span id="cb8-8"><a href="#cb8-8" aria-hidden="true" tabindex="-1"></a>&#125;</span>
<span id="cb8-9"><a href="#cb8-9" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb8-10"><a href="#cb8-10" aria-hidden="true" tabindex="-1"></a><span class="fu">.first</span> &#123;</span>
<span id="cb8-11"><a href="#cb8-11" aria-hidden="true" tabindex="-1"></a>    <span class="kw">white-space</span>: <span class="dv">nowrap</span><span class="op">;</span></span>
<span id="cb8-12"><a href="#cb8-12" aria-hidden="true" tabindex="-1"></a>&#125;</span>
<span id="cb8-13"><a href="#cb8-13" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb8-14"><a href="#cb8-14" aria-hidden="true" tabindex="-1"></a><span class="fu">.second</span> &#123;</span>
<span id="cb8-15"><a href="#cb8-15" aria-hidden="true" tabindex="-1"></a>    <span class="kw">white-space</span>: <span class="dv">pre</span><span class="op">;</span></span>
<span id="cb8-16"><a href="#cb8-16" aria-hidden="true" tabindex="-1"></a>&#125;</span>
<span id="cb8-17"><a href="#cb8-17" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb8-18"><a href="#cb8-18" aria-hidden="true" tabindex="-1"></a><span class="fu">.third</span> &#123;</span>
<span id="cb8-19"><a href="#cb8-19" aria-hidden="true" tabindex="-1"></a>    <span class="kw">white-space</span>: <span class="dv">pre-line</span><span class="op">;</span></span>
<span id="cb8-20"><a href="#cb8-20" aria-hidden="true" tabindex="-1"></a>&#125;</span>
<span id="cb8-21"><a href="#cb8-21" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb8-22"><a href="#cb8-22" aria-hidden="true" tabindex="-1"></a><span class="fu">.fourth</span> &#123;</span>
<span id="cb8-23"><a href="#cb8-23" aria-hidden="true" tabindex="-1"></a>    <span class="kw">white-space</span>: <span class="dv">nowrap</span><span class="op">;</span></span>
<span id="cb8-24"><a href="#cb8-24" aria-hidden="true" tabindex="-1"></a>    <span class="kw">text-overflow</span>: <span class="dv">ellipsis</span><span class="op">;</span></span>
<span id="cb8-25"><a href="#cb8-25" aria-hidden="true" tabindex="-1"></a>    <span class="kw">overflow</span>: <span class="dv">hidden</span><span class="op">;</span></span>
<span id="cb8-26"><a href="#cb8-26" aria-hidden="true" tabindex="-1"></a>&#125;</span></code></pre></div>
<p>效果:</p>
<figure>
<img src="https://cdn-images-1.medium.com/max/2000/1*9L39xG8cZkPXO2rkiuvHOg.jpeg" alt="图源作者">
<figcaption aria-hidden="true">图源作者</figcaption>
</figure>
<h2 id="border-image">6. <code>border-image</code></h2>
<p>此属性非常适合设计我们的网站，我们可以使用此属性在元素周围创建漂亮的边框
—— <code>border-image</code> 允许你将自定义图像设置为边框。</p>
<p>下面的图像就展示了这个属性的应用：</p>
<figure>
<img src="https://cdn-images-1.medium.com/max/2000/1*7SOVwmouXHD1lxWGVeSEMw.png" alt="图源: MDN 网站">
<figcaption aria-hidden="true">图源: <a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/border-image">MDN
网站</a></figcaption>
</figure>
<p>HTML 和 CSS 代码如下：</p>
<div class="sourceCode" id="cb9"><pre class="sourceCode html"><code class="sourceCode html"><span id="cb9-1"><a href="#cb9-1" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb9-2"><a href="#cb9-2" aria-hidden="true" tabindex="-1"></a><span class="kw">&lt;body&gt;</span></span>
<span id="cb9-3"><a href="#cb9-3" aria-hidden="true" tabindex="-1"></a><span class="kw">&lt;h1&gt;</span>This is a title<span class="kw">&lt;/h1&gt;</span></span>
<span id="cb9-4"><a href="#cb9-4" aria-hidden="true" tabindex="-1"></a><span class="kw">&lt;/body&gt;</span></span></code></pre></div>
<div class="sourceCode" id="cb10"><pre class="sourceCode css"><code class="sourceCode css"><span id="cb10-1"><a href="#cb10-1" aria-hidden="true" tabindex="-1"></a>h1 &#123;</span>
<span id="cb10-2"><a href="#cb10-2" aria-hidden="true" tabindex="-1"></a>    <span class="kw">border</span>: <span class="dv">10</span><span class="dt">px</span> <span class="dv">solid</span> <span class="dv">transparent</span><span class="op">;</span></span>
<span id="cb10-3"><a href="#cb10-3" aria-hidden="true" tabindex="-1"></a>    <span class="kw">padding</span>: <span class="dv">15</span><span class="dt">px</span><span class="op">;</span></span>
<span id="cb10-4"><a href="#cb10-4" aria-hidden="true" tabindex="-1"></a>    <span class="kw">border-image</span>: <span class="fu">url(</span><span class="st">border.png</span><span class="fu">)</span> <span class="dv">20</span><span class="dt">%</span> round<span class="op">;</span></span>
<span id="cb10-5"><a href="#cb10-5" aria-hidden="true" tabindex="-1"></a>&#125;</span></code></pre></div>
<p>效果:</p>
<figure>
<img src="https://cdn-images-1.medium.com/max/2716/1*go4Ajp41jzEj5bPsHAnOkQ.jpeg" alt="图源作者">
<figcaption aria-hidden="true">图源作者</figcaption>
</figure>
<p>此属性可用于创建精美卡片或强调部分文本。</p>
<h2 id="最后的想法">最后的想法</h2>
<p>前端开发者们除了使用 JavaScript 之外，还同时使用着 CSS 和
HTML。了解更多的 CSS 属性知识，能够帮助我们更快、更好地构建 Web
应用程序。</p>
<p>尽管我分享了一些较少被人们所提及的 CSS
属性，但这样的属性还有很多。</p>
<p>虽然 CSS 已有 20 多年的历史了，但它仍然具有许多奇技淫巧。</p>
<p>知道这些 CSS 属性可以实现具有艺术气息的网站。</p>
<p>感谢阅读！</p>]]></content>
      <categories>
        <category>Computer Science</category>
        <category>Frontend</category>
        <category>Styling</category>
      </categories>
      <tags>
        <tag>Computer Science</tag>
        <tag>UI</tag>
        <tag>Frontend</tag>
        <tag>CSS</tag>
      </tags>
  </entry>
  <entry>
    <title>和 Node.js 创始人 Ryan Dahl 的对话</title>
    <url>/2021/03/08/computer%20science/backend/Interview-with-Ryan-Dahl-Creator-of-Node-js/</url>
    <content><![CDATA[<blockquote>
<ul>
<li>原文地址：<a href="https://evrone.com/ryan-dahl-interview">Interview
with Ryan Dahl, Creator of Node.js</a></li>
<li>原文作者：<a href="https://evrone.com/ryan-dahl-interview">Ryan
Dahl</a></li>
<li>译者：<a href="https://github.com/PassionPenguin">霜羽
Hoarfroster</a></li>
<li>校对者：<a href="https://github.com/Chorer">Chorer</a>、<a href="https://github.com/zenblo">zenblo</a>、<a href="https://github.com/lsvih">lsvih</a></li>
</ul>
</blockquote>
<h2 id="导言">导言</h2>
<p>Ryan Dahl 是 Node.js 的创始人以及 Deno JavaScript 和 TypeScript
运行时的早期开发者。我们很高兴有机会与 Ryan 探讨他开发的一些别的项目以及
Deno 面临的主要挑战，了解他对 JavaScript 和 TypeScript
的未来的想法，寻找更多第三方的 Deno
生态系统项目的更多信息，并讨论如果他能时光倒流，他会如何改变 Node.js
的开发！</p>
<h2 id="采访">采访</h2>
<p><strong>Evrone：</strong> 您的新项目 Deno
对开发者们产生了很大影响。请问您现在大部分时间都在做些什么？</p>
<p><strong>Ryan：</strong> 我大部分时间都在研究 Deno！实际上 Deno
是一个相当大的软件集合，我们把它放到可执行文件中。我们现在正在提升 Deno
运行时，同时也在努力将基础架构应用到商业项目中。</p>
<p><strong>Evrone：</strong> 您具有使用多种编程语言的实践经验，例如
C、Rust、Ruby、JavaScript 和
TypeScript。您最喜欢使用哪一种语言进行开发？</p>
<p><strong>Ryan：</strong> 这些天我发现编写 Rust
代码最是有趣。它的学习曲线很是陡峭，并且不适合许多情景，但对于我现在正在研究的东西来说，它真的是完美的，比
C++ 好多了 —— 我坚信我将永远不会再开始一个新的 C++ 项目。Rust
具有如此简单的表达低级机械语言的能力，真的太棒了！</p>
<p>JavaScript
从来不是我最喜欢的语言，它只是最常见的语言，也因此，它能被我们用来表达许多想法。我不认为
TypeScript 是一种独立的语言，毕竟它的优点只在于它拓展了
JavaScript。TypeScript 允许人们使用 JavaScript
构建更大，更强壮健康的系统，而我想，这会是我日常工作的首选语言。</p>
<p>在 Deno 中，我们正试图降低将 TypeScript 代码转换为 JavaScript
所固有的复杂性，希望这将使更多开发者能够使用 TypeScript。</p>
<p><strong>Evrone：</strong> 渐近类型（Gradual typing）已成功添加到
Python 核心库、PHP 和 Ruby 语言中。您认为将类型添加到 JavaScript
的主要作用是什么？</p>
<p><strong>Ryan：</strong> 将类型（像 TypeScript 那样）添加到 JavaScript
的成功远远超过了在 Python、PHP 或 Ruby 中所完成的那样。TypeScript
是具有类型的 JavaScript 语言。更好的问题是：是什么在阻止 JavaScript
标准化组织（TC39）采用
TypeScript？通过设计，标准化会缓慢而谨慎地进行。他们首先正在研究提出
Types-As-Comments 的提议，该提议将允许 JavaScript
运行时通过忽略类型来执行 TypeScript 语法。我认为最终
TypeScript（或类似的东西）将作为 JavaScript
标准的一部分被提出，但这需要时间。</p>
<p><strong>Evrone：</strong> 作为受人尊敬的 VIM 用户，您如何看待像 VS
Code 这样的现代化代码编辑器？他们对老一代开发者友善吗？</p>
<p><strong>Ryan：</strong> 与我一起工作的每个人都使用 VS
Code。他们喜欢它，而且我想多数人都应该去使用它。</p>
<p>我继续使用 VIM 的原因有两个。</p>
<ol type="1">
<li>我对它非常熟悉，并且可以用它快速编码。我喜欢在 ssh 和 tmux
上的工作体验，并且享受全屏终端的宁静。</li>
<li>对于软件基础结构来说，基于文本并可以通过简单工具进行访问非常重要。在
Java 世界中，开发者们犯了将 IDE
过多地与该语言的世界联系在一起的错误，从而造成一种情况，即实际上人们被迫使用
IDE 去编写 Java
代码。而通过使用简单的工具，我可以确保我开发的软件不会不必要地依赖
IDE。如果你去尝试使用 grep
而不是跳转到定义（jump-to-definition），那么你会发现，跳转到定义这种太多的间接寻址实在是令人无法忍受。对于我所做的事情，我认为这会带来更好的软件。</li>
</ol>
<p><strong>Evrone：</strong> Deno
运行时展示了修复依赖项管理、安全性等长期存在的问题的可能方法。您是否希望它像是进行实验的
Haskell
那样的场所，还是您想将它作为最佳实践选择，用在一些什么用途上？</p>
<p><strong>Ryan：</strong> 千万不要将新颖性误认为是实验性的，Deno
绝对是实用的，它建立在服务器端 JavaScript
已有多年经验的基础上。我和我的同事们致力于构建实用的动态语言运行时。我们围绕依赖项管理和安全性所做的设计选择非常保守。我们可以很容易地引入另一个类似于
NPM 的集中式系统，但是选择了基于 Web 标准 URL
的链接系统。我们当然可以更容易地打开文件系统和网络中的各种安全漏洞，但相反，我们选择像浏览器一样仔细管理访问。</p>
<p>Deno 是新软件 —— 这使得它天生就不适合很多用例。但是 Deno 还是一个大型
Rust 代码库，拥有着强大的速度，稳定可靠且成功率高的 CI
管理以及定期的计划发布。你说这是实验性的，这可不是实验！</p>
<p><strong>Evrone：</strong> 在 2020
年，大多数软件开发人员大会都变成了“在线”和“虚拟”会议。您是否尝试参加过这种新形式的会议？您对此又有何看法？</p>
<p><strong>Ryan：</strong>
我参加过，但我现在正避免参加线上会议。对我而言，会议最好的部分是“走廊”（指去交际），这恰恰是在线会议所缺失的一个关键方面。我更喜欢在空闲时间以
2 倍的速度观看 YouTube 上的演讲。希望我能在 2021
年晚些时候参加一些非虚拟的会议。</p>
<p><strong>Evrone：</strong>
将依赖关系图从一个文件分散到单个源代码文件的想法受到了 Webpack
的拥护，也受到许多开发人员的赞扬。但是依赖性管理具有挑战性，Node.js 从
Common.js 迁移到 ESM 花费了多年的时间。请问您要使用 Deno
解决的主要依赖管理问题是什么？</p>
<p><strong>Ryan：</strong> 浏览器没有借助任何一个 CDN 来分发
JavaScript。网络的分散性是其最大的优势，我不明白为什么这也不能用于服务器端的
JavaScript。因此，我希望 Deno 不依赖于任何中心化的代码数据库。</p>
<p><strong>Evrone：</strong> Python 和 JavaScript 正在竞争，PK
究竟谁才是最佳的供新人开发者学习的通用编程语言。您对此有何看法？</p>
<p><strong>Ryan：</strong> 脚本语言非常适合初学者。本质上，Python 和
JavaScript
的语言系统非常相似，只不过语法各异，在语义上也稍微不同。JavaScript
是由国际标准委员会管理的，可以在所有地方运行，并且速度要快一个数量级（将
V8 与 cpython
进行比较时），而且还拥有着更大的用户群。而对于某些领域来说，可用的
Python
库则更多，尤其是在科学计算中。新手程序员想开发的东西因人而异，Python
可能是合适的。但总的来说，我认为 JavaScript 是一种更好的入门语言。</p>
<p><strong>Evrone：</strong> 具有一个主线程和小的 <code>handler</code>
可调用对象的异步并发范例是 Node.js 的基石之一。现在，这种想法通过新的
<code>Async / Await</code>
语法和协程的概念得到了进一步提升。作为平台作者，您如何看待它们及其可用的替代方案，例如
Go Goroutines 或基于 Ruby 线程的并发？</p>
<p><strong>Ryan：</strong> OS
线程无法很好地扩展到高并发应用程序。如果您有许多并发连接，请不要使用
Ruby。</p>
<p>Goroutines 非常易于使用，并能够达到最佳性能。与 Go 一样，Node 和 Deno
都是基于非阻塞 IO 和 OS
事件通知系统（<code>epoll</code>，<code>kqueue</code>）构建的。JavaScript
本质上是一个单线程系统，因此 Node 或 Deno
的单个实例通常无法在不开始创建新实例的情况下利用系统上的所有 CPU
内核。Node / Deno 是 JavaScript 的最佳选择，但在没有其他可能偏向
JavaScript 的其他要求的情况下，Go 最终是高并发系统的更好选择。</p>
<p><strong>Evrone：</strong> 在如此激烈的竞争中，您如何看待 JavaScript
和 TypeScript
的未来，尤其是与后端、嵌入式和机器学习（ML）领域有关的未来？</p>
<p><strong>Ryan：</strong>
动态（或“脚本”）语言**非常有用。程序员要解决的问题通常不受 CPU
限制。问题更多是受工程时间限制。能够快速开发和部署更为重要。在动态语言中，JavaScript（纯
JavaScript 或带类型的
JavaScript）是最受欢迎的，也是迄今为止最快的。未来，我相信我们所追求的唯一动态语言将是这种奇怪的、从网络浏览器中衍生出来的进化语言。借助
Deno，我们正在努力消除障碍，在某些很少使用 JS 的地方应用
JS，像是机器学习领域。例如，我们可能会在 Deno 中添加 WebGPU
支持，从而允许简单的开箱即用的 GPU 编程，最终将使 TensorFlow.js
之类的系统能够在 Deno 上运行。</p>
<p>如前所述，动态语言有其局限性，并不适合所有问题领域。如果您正在对数据库进行编程，则最好使用一种使您对计算机具有最大控制权的语言（例如
Rust 或 C++）进行编写。如果您正在编写高并发性 API 服务器，很难想象有比
Go 更好的选择。</p>
<p><strong>Evrone：</strong> 现代操作系统和新的 Deno
运行时引入了精细的权限，以抵消第三方软件和依赖项的安全风险。但是，使用依赖关系的最终用户和开发人员是否有可能在“允许”和“拒绝”应用程序安全性请求时做出正确的决定？您如何看待几年后像我们大多数人一样自动单击“允许一切”的风险，就像我们大多数人现在对网站
Cookie “安全确认”所做的那样？</p>
<p><strong>Ryan：</strong> 网站 Cookie 弹出窗口不是个最好的类比 ——
它们是相当无用的法律副产品。更好的是内置一个对话框，上面写着“允许该网站访问您的相机”或“允许桌面通知”或“允许该网站查看您的位置”。这些并不是没有用的，这些是相当重要的安全功能。</p>
<p>程序员在计算机上运行许多不同的自动化程序，没有人有时间审核他们将要运行的所有代码，也不足以在
Docker 容器中运行所有代码：当您运行 lint
时，是被隔离的吗？不，答案是您必须相信 lint
脚本不会破坏您的系统。我认为允许用户查看并拒绝不必要的系统访问非常合适。</p>
<p><strong>Evrone：</strong>
全新的“全栈”概念促使开发人员同时编写前端代码和后端代码，而使用相同的语言和诸如
TypeScript
之类的共享技术栈在现在变得非常容易。您认为对于许多开发人员来说，将如此多的不同事物纳入他们的日常工作范围是一个好主意吗？</p>
<p><strong>Ryan：</strong>
降低复杂性总是有益的。程序员必须与之交互的语言、VM、框架和概念越少越好。</p>
<p><strong>Evrone：</strong> 您打算如何处理 TypeScript
语言本身的版本更新？在 Node.js 生态系统内，使用 V8 引擎进行 JavaScript
语法更新通常会导致某些程序包无法正常工作。</p>
<p><strong>Ryan：</strong> TypeScript
语言几乎具有完整的功能。依赖于最先进的语言功能的用户可能会遇到不稳定的情况，请不要这样做。</p>
<p><strong>Evrone：</strong>
您如何看待软件开发人员的良好教育？我们是否需要具有所有数学，算法和数据结构的“科学”（如“计算机科学”），还是需要其他东西？</p>
<p><strong>Ryan：</strong>
想要从事编程职业的人应该去大学学习计算机科学。当然，可以获得相关领域的学位（例如电气工程，物理学，数学）；有许多非常有能力的工程师根本没有学位。但是，通过花几年的时间学习基础知识并进行许多非常困难的实验，确实可以得到一些好处。</p>
<p><strong>Evrone：</strong> 您是否有非常喜欢的已经实施了的第三方 Deno
生态系统项目？</p>
<p><strong>Ryan：</strong> 是的，当然有：</p>
<ul>
<li>一个 React 框架</li>
<li>网络框架（如 Express）</li>
<li>用于桌面应用程序的基于 Web 的 GUI</li>
<li>Puppeteer（与 Node 中的操纵符相同）</li>
<li>可视化模块图</li>
<li>最小但灵活的静态站点生成器</li>
</ul>
<p><strong>Evrone：</strong> 随着 GitHub
之类的社交平台的推出，个体开发者和大公司现在都可以轻松地使用开源并做出贡献。您认为现在是“开源的黄金时代”，还是认为仍存在着一些潜在的问题？</p>
<p><strong>Ryan：</strong>
现在肯定是开源的，许可情况已广为人知并得到了解决。关于维护的激励模型仍然存在未解决的问题，也许
GitHub
赞助商正在朝着这个方向提供帮助。它比以前要好，但是我希望我们能找到一种方法，使维护软件重要部分的人员可以为他们的工作得到独立的报酬。</p>
<p><strong>Evrone：</strong> Deno
已经面世有一段时间了，目前该项目的主要技术挑战是什么？</p>
<p><strong>Ryan：</strong> 正在进行中的很多事情：我们正在构建与 Hyper
Web 服务器的绑定，它将提供 HTTP 2，并且可能比当前的 Web
服务器要快得多。我们正在构建
<code>deno lsp</code>，它提供了语言服务器协议，以便 VS Code（和其他
IDE）可以直接与 Deno 进行交互，以突出显示语法，进行类型检查，格式化等 ——
期望下一次的编辑体验会大大改善几个月。我们正在努力通过尽可能多的 Web
平台测试 —— 因此，随着时间的推移，Deno 会变得与 Web 更加兼容。请查看 Q1
路线图，以了解更多详细信息。</p>
<p><strong>Evrone：</strong>
我们的经典时空旅行问题：如果时光可以倒流，让你给刚开始开发 Node.js
的年轻的自己一个建议，那将是什么建议？</p>
<p><strong>Ryan：</strong> 在 Node 的早期，我不太确定异步 IO
是否可以由新手程序员轻松地用于大型项目中。我四处演讲，提出了这一主张，但我不确定如何解决。如果我能回到过去，我会向自己保证它将起作用。我也会告诉自己，Node
将成为软件的关键部分，大型软件项目与小型项目相比需要不同的关注点：预算、沟通、组织。我会告诉自己要花更多的时间在这些元问题上。</p>
<p><strong>Evrone：</strong> 对于想要通过 npm 软件包支持 Deno
的开发人员有何建议？</p>
<p><strong>Ryan：</strong> 使用 ES 模块，并查看我们的 Node
兼容性层。</p>
<h2 id="结论">结论</h2>
<p>我们很高兴能与 Ryan 对话，进一步地了解他的生活、想法和计划。在
Evrone，我们经常使用 Node.js
为客户构建自定义解决方案。感谢你的阅读！</p>]]></content>
      <categories>
        <category>Computer Science</category>
        <category>Backend</category>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>Computer Science</tag>
        <tag>Backend</tag>
        <tag>JavaScript</tag>
        <tag>Node.js</tag>
      </tags>
  </entry>
  <entry>
    <title>重新审视 undefined 和 null</title>
    <url>/2021/03/06/computer%20science/frontend/undefined-null-revisited/</url>
    <content><![CDATA[<blockquote>
<ul>
<li>原文地址：<a href="https://2ality.com/2021/01/undefined-null-revisited.html">undefined
vs.&nbsp;null revisited</a></li>
<li>原文作者：<a href="http://dr-axel.de/">Dr.&nbsp;Axel Rauschmayer</a></li>
<li>译者：<a href="https://github.com/PassionPenguin">霜羽
Hoarfroster</a></li>
<li>校对者：<a href="https://github.com/Moonball">Moonball</a>、<a href="https://github.com/felixliao">felixliao</a></li>
</ul>
</blockquote>
<p>很多的编程语言都有一种表示空值的类型，叫做
<code>null</code>。它指示了一个变量当前并没有指向任何对象 ——
例如，某个变量还没有初始化的时候。</p>
<p>作为不同，JavaScript 则拥有两种表示空值的类型，一种是
<code>undefined</code>，另一种则是
<code>null</code>。在这篇文章中，我们将测试它们的区别，以及如何去挑选最佳的类型或避免去使用它们。</p>
<h2 id="undefined-vs.-null"><code>undefined</code>
vs.&nbsp;<code>null</code></h2>
<p>两个值都很是相像，并且通常被相互替代着使用，也因此，他们之间的区别很是细微。</p>
<h3 id="undefinednull-在ecmascript-语言标准上的对比"><code>undefined</code>、<code>null</code>
在ECMAScript 语言标准上的对比</h3>
<p>ECMAScript 语言标准按照如下内容描述他们：</p>
<ul>
<li><code>undefined</code> 是在一个变量还没有被赋值时候使用的。<sup><a href="https://tc39.es/ecma262/#sec-undefined-value">出处</a></sup></li>
<li><code>null</code> 表示任何有意地缺省对象值。<sup><a href="https://tc39.es/ecma262/#sec-null-value">出处</a></sup></li>
</ul>
<p>我们等下就会探索一下作为程序员，我们应该如何去以最佳的方式使用这两个值。</p>
<h3 id="两个空值-一个不能弥补的错误">两个空值 —— 一个不能弥补的错误</h3>
<p>在 JavaScript
中同时有两个表示空值的值现在被认为是一个设计错误（哪怕是 JavaScript 之父
Brendan Eich 也这么认为）。</p>
<p>那么为什么不从 JavaScript 中删除这两个值之一呢？JavaScript
的一项核心原则是永不破坏向后的兼容性。该原则具有<a href="https://exploringjs.com/impatient-js/ch_history.html#backward-compatibility">好处</a>，但同时也拥有着最大的缺点，即无法弥补设计错误。</p>
<h3 id="undefined-和-null-的历史"><code>undefined</code> 和
<code>null</code> 的历史</h3>
<p>在 Java（影响了 JavaScript
很多方面的语言）中初始值依赖于一个变量的静态类型：</p>
<ul>
<li>以对象值为类型的变量初始化为 <code>null</code>。</li>
<li>每个基本类型都拥有它的初始值，例如 <code>int</code> 整型对应
<code>0</code>。</li>
</ul>
<p>在 JavaScript 中，每一个变量都可以存储对象值或原始值，意味着如果
<code>null</code> 表示不是一个对象，那么 JavaScript
也同时需要一个初始值表示既不是一个对象也不拥有原始值，这就是
<code>undefined</code>。</p>
<h2 id="undefined-的出现场合"><code>undefined</code> 的出现场合</h2>
<p>如果一个变量 <code>myVar</code> 还没有被初始化，那么它的值就是
<code>undefined</code>：</p>
<div class="sourceCode" id="cb1"><pre class="sourceCode js"><code class="sourceCode javascript"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a><span class="kw">let</span> myVar<span class="op">;</span></span>
<span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a>assert<span class="op">.</span><span class="fu">equal</span>(myVar<span class="op">,</span> <span class="kw">undefined</span>)<span class="op">;</span></span></code></pre></div>
<p>如果一个属性 <code>.unknownProp</code> 不存在，访问这个属性就会生成
<code>undefined</code> 值：</p>
<div class="sourceCode" id="cb2"><pre class="sourceCode js"><code class="sourceCode javascript"><span id="cb2-1"><a href="#cb2-1" aria-hidden="true" tabindex="-1"></a><span class="kw">const</span> obj <span class="op">=</span> &#123;&#125;<span class="op">;</span></span>
<span id="cb2-2"><a href="#cb2-2" aria-hidden="true" tabindex="-1"></a>assert<span class="op">.</span><span class="fu">equal</span>(obj<span class="op">.</span><span class="at">unknownProp</span><span class="op">,</span> <span class="kw">undefined</span>)<span class="op">;</span></span></code></pre></div>
<p>如果一个函数没有明确返回任何内容，那么默认就会返回
<code>undefined</code>：</p>
<div class="sourceCode" id="cb3"><pre class="sourceCode js"><code class="sourceCode javascript"><span id="cb3-1"><a href="#cb3-1" aria-hidden="true" tabindex="-1"></a><span class="kw">function</span> <span class="fu">myFunc</span>() &#123;</span>
<span id="cb3-2"><a href="#cb3-2" aria-hidden="true" tabindex="-1"></a>&#125;</span>
<span id="cb3-3"><a href="#cb3-3" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb3-4"><a href="#cb3-4" aria-hidden="true" tabindex="-1"></a>assert<span class="op">.</span><span class="fu">equal</span>(<span class="fu">myFunc</span>()<span class="op">,</span> <span class="kw">undefined</span>)<span class="op">;</span></span></code></pre></div>
<p>如果一个函数拥有一个 <code>return</code>
语句但没有指定任何返回值，那么也会默认返回 <code>undefined</code>：</p>
<div class="sourceCode" id="cb4"><pre class="sourceCode js"><code class="sourceCode javascript"><span id="cb4-1"><a href="#cb4-1" aria-hidden="true" tabindex="-1"></a><span class="kw">function</span> <span class="fu">myFunc</span>() &#123;</span>
<span id="cb4-2"><a href="#cb4-2" aria-hidden="true" tabindex="-1"></a>    <span class="cf">return</span><span class="op">;</span></span>
<span id="cb4-3"><a href="#cb4-3" aria-hidden="true" tabindex="-1"></a>&#125;</span>
<span id="cb4-4"><a href="#cb4-4" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb4-5"><a href="#cb4-5" aria-hidden="true" tabindex="-1"></a>assert<span class="op">.</span><span class="fu">equal</span>(<span class="fu">myFunc</span>()<span class="op">,</span> <span class="kw">undefined</span>)<span class="op">;</span></span></code></pre></div>
<p>如果一个参数 <code>x</code> 没有传实参，那么就会被初始化为
<code>undefined</code>：</p>
<div class="sourceCode" id="cb5"><pre class="sourceCode js"><code class="sourceCode javascript"><span id="cb5-1"><a href="#cb5-1" aria-hidden="true" tabindex="-1"></a><span class="kw">function</span> <span class="fu">myFunc</span>(x) &#123;</span>
<span id="cb5-2"><a href="#cb5-2" aria-hidden="true" tabindex="-1"></a>    assert<span class="op">.</span><span class="fu">equal</span>(x<span class="op">,</span> <span class="kw">undefined</span>)<span class="op">;</span></span>
<span id="cb5-3"><a href="#cb5-3" aria-hidden="true" tabindex="-1"></a>&#125;</span>
<span id="cb5-4"><a href="#cb5-4" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb5-5"><a href="#cb5-5" aria-hidden="true" tabindex="-1"></a><span class="fu">myFunc</span>()<span class="op">;</span></span></code></pre></div>
<p>通过 <code>obj?.someProp</code> 访问的<a href="https://exploringjs.com/impatient-js/ch_single-objects.html#optional-chaining">可选链</a>在<code>obj</code>
是 <code>undefined</code> 或 <code>null</code> 的时候返回
<code>undefined</code>：</p>
<pre class="repl"><code>&gt; undefined?.someProp
undefined
&gt; null?.someProp
undefined</code></pre>
<h2 id="null-的出现场合"><code>null</code> 的出现场合</h2>
<p>一个对象的原型要么是另一个对象，要么是原型链末尾的
<code>null</code>。<code>Object.prototype</code> 没有原型：</p>
<pre class="repl"><code>&gt; Object.getPrototypeOf(Object.prototype)
null</code></pre>
<p>如果我们使用一个正则表达式（例如
<code>/a/</code>）匹配一个字符串（例如
<code>x</code>），我们要么得到一个存储着匹配数据的对象（如果匹配成功），要么得到
<code>null</code>（如果匹配失败）。</p>
<pre class="repl"><code>&gt; /a/.exec('x')
null</code></pre>
<p><a href="https://exploringjs.com/impatient-js/ch_json.html">JSON
数据格式</a> 不支持 <code>undefined</code>，只支持
<code>null</code>：</p>
<pre class="repl"><code>&gt; JSON.stringify(&#123;a: undefined, b: null&#125;)
'&#123;"b":null&#125;'</code></pre>
<h2 id="专门用来对付-undefined-和-null-的操作符">专门用来对付
<code>undefined</code> 和 <code>null</code> 的操作符</h2>
<h3 id="undefined-以及默认参数值"><code>undefined</code>
以及默认参数值</h3>
<p>一个参数的默认值会在以下情况下被使用：</p>
<ul>
<li>这个参数被我们忽略掉了。</li>
<li>这个参数被赋予 <code>undefined</code> 值。</li>
</ul>
<p>举个例子：</p>
<div class="sourceCode" id="cb10"><pre class="sourceCode js"><code class="sourceCode javascript"><span id="cb10-1"><a href="#cb10-1" aria-hidden="true" tabindex="-1"></a><span class="kw">function</span> <span class="fu">myFunc</span>(arg <span class="op">=</span> <span class="st">'abc'</span>) &#123;</span>
<span id="cb10-2"><a href="#cb10-2" aria-hidden="true" tabindex="-1"></a>    <span class="cf">return</span> arg<span class="op">;</span></span>
<span id="cb10-3"><a href="#cb10-3" aria-hidden="true" tabindex="-1"></a>&#125;</span>
<span id="cb10-4"><a href="#cb10-4" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb10-5"><a href="#cb10-5" aria-hidden="true" tabindex="-1"></a>assert<span class="op">.</span><span class="fu">equal</span>(<span class="fu">myFunc</span>(<span class="st">'hello'</span>)<span class="op">,</span> <span class="st">'hello'</span>)<span class="op">;</span></span>
<span id="cb10-6"><a href="#cb10-6" aria-hidden="true" tabindex="-1"></a>assert<span class="op">.</span><span class="fu">equal</span>(<span class="fu">myFunc</span>()<span class="op">,</span> <span class="st">'abc'</span>)<span class="op">;</span></span>
<span id="cb10-7"><a href="#cb10-7" aria-hidden="true" tabindex="-1"></a>assert<span class="op">.</span><span class="fu">equal</span>(<span class="fu">myFunc</span>(<span class="kw">undefined</span>)<span class="op">,</span> <span class="st">'abc'</span>)<span class="op">;</span></span></code></pre></div>
<p>当指向它的值为一个元值时，<code>undefined</code>
也会触发默认参数值。</p>
<p>以下的例子示范了这个特性有用的地方：</p>
<div class="sourceCode" id="cb11"><pre class="sourceCode js"><code class="sourceCode javascript"><span id="cb11-1"><a href="#cb11-1" aria-hidden="true" tabindex="-1"></a><span class="kw">function</span> <span class="fu">concat</span>(str1 <span class="op">=</span> <span class="st">''</span><span class="op">,</span> str2 <span class="op">=</span> <span class="st">''</span>) &#123;</span>
<span id="cb11-2"><a href="#cb11-2" aria-hidden="true" tabindex="-1"></a>    <span class="cf">return</span> str1 <span class="op">+</span> str2<span class="op">;</span></span>
<span id="cb11-3"><a href="#cb11-3" aria-hidden="true" tabindex="-1"></a>&#125;</span>
<span id="cb11-4"><a href="#cb11-4" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb11-5"><a href="#cb11-5" aria-hidden="true" tabindex="-1"></a><span class="kw">function</span> <span class="fu">twice</span>(str) &#123; <span class="co">// (A)</span></span>
<span id="cb11-6"><a href="#cb11-6" aria-hidden="true" tabindex="-1"></a>    <span class="cf">return</span> <span class="fu">concat</span>(str<span class="op">,</span> str)<span class="op">;</span></span>
<span id="cb11-7"><a href="#cb11-7" aria-hidden="true" tabindex="-1"></a>&#125;</span></code></pre></div>
<p>在 A 行，我们并没有制定参数 <code>str</code>
的默认值，而当这个参数被忽略掉的时候，我们将该状态转发到
<code>concat()</code>，让其选择默认值。</p>
<h3 id="undefined解构默认值"><code>undefined</code>，解构默认值</h3>
<p>解构下的默认值的工作方式与参数默认值类似 ——
如果变量在数据中不匹配或与 <code>undefined</code> 匹配，则使用它们：</p>
<div class="sourceCode" id="cb12"><pre class="sourceCode js"><code class="sourceCode javascript"><span id="cb12-1"><a href="#cb12-1" aria-hidden="true" tabindex="-1"></a><span class="kw">const</span> [a <span class="op">=</span> <span class="st">'a'</span>] <span class="op">=</span> []<span class="op">;</span></span>
<span id="cb12-2"><a href="#cb12-2" aria-hidden="true" tabindex="-1"></a>assert<span class="op">.</span><span class="fu">equal</span>(a<span class="op">,</span> <span class="st">'a'</span>)<span class="op">;</span></span>
<span id="cb12-3"><a href="#cb12-3" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb12-4"><a href="#cb12-4" aria-hidden="true" tabindex="-1"></a><span class="kw">const</span> [b <span class="op">=</span> <span class="st">'b'</span>] <span class="op">=</span> [<span class="kw">undefined</span>]<span class="op">;</span></span>
<span id="cb12-5"><a href="#cb12-5" aria-hidden="true" tabindex="-1"></a>assert<span class="op">.</span><span class="fu">equal</span>(b<span class="op">,</span> <span class="st">'b'</span>)<span class="op">;</span></span>
<span id="cb12-6"><a href="#cb12-6" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb12-7"><a href="#cb12-7" aria-hidden="true" tabindex="-1"></a><span class="kw">const</span> &#123;<span class="dt">prop</span><span class="op">:</span> c <span class="op">=</span> <span class="st">'c'</span>&#125; <span class="op">=</span> &#123;&#125;<span class="op">;</span></span>
<span id="cb12-8"><a href="#cb12-8" aria-hidden="true" tabindex="-1"></a>assert<span class="op">.</span><span class="fu">equal</span>(c<span class="op">,</span> <span class="st">'c'</span>)<span class="op">;</span></span>
<span id="cb12-9"><a href="#cb12-9" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb12-10"><a href="#cb12-10" aria-hidden="true" tabindex="-1"></a><span class="kw">const</span> &#123;<span class="dt">prop</span><span class="op">:</span> d <span class="op">=</span> <span class="st">'d'</span>&#125; <span class="op">=</span> &#123;<span class="dt">prop</span><span class="op">:</span> <span class="kw">undefined</span>&#125;<span class="op">;</span></span>
<span id="cb12-11"><a href="#cb12-11" aria-hidden="true" tabindex="-1"></a>assert<span class="op">.</span><span class="fu">equal</span>(d<span class="op">,</span> <span class="st">'d'</span>)<span class="op">;</span></span></code></pre></div>
<h3 id="undefinednull-和可选链"><code>undefined</code>、<code>null</code>
和可选链</h3>
<p>如果通过 <code>value?.prop</code> 使用了<a href="https://exploringjs.com/impatient-js/ch_single-objects.html#optional-chaining">可选链</a>：</p>
<ul>
<li>如果 <code>value</code> 是 <code>undefined</code> 或
<code>null</code> 的，将会返回 <code>undefined</code>。也就是说，如果
<code>value.prop</code> 抛出错误，就会返回 <code>undefined</code>。</li>
<li>否则会返回 <code>value.prop</code>.</li>
</ul>
<div class="sourceCode" id="cb13"><pre class="sourceCode js"><code class="sourceCode javascript"><span id="cb13-1"><a href="#cb13-1" aria-hidden="true" tabindex="-1"></a><span class="kw">function</span> <span class="fu">getProp</span>(value) &#123;</span>
<span id="cb13-2"><a href="#cb13-2" aria-hidden="true" tabindex="-1"></a>    <span class="co">// 可选的静态属性访问</span></span>
<span id="cb13-3"><a href="#cb13-3" aria-hidden="true" tabindex="-1"></a>    <span class="cf">return</span> value<span class="op">?.</span><span class="at">prop</span><span class="op">;</span></span>
<span id="cb13-4"><a href="#cb13-4" aria-hidden="true" tabindex="-1"></a>&#125;</span>
<span id="cb13-5"><a href="#cb13-5" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb13-6"><a href="#cb13-6" aria-hidden="true" tabindex="-1"></a>assert<span class="op">.</span><span class="fu">equal</span>(</span>
<span id="cb13-7"><a href="#cb13-7" aria-hidden="true" tabindex="-1"></a>    <span class="fu">getProp</span>(&#123;<span class="dt">prop</span><span class="op">:</span> <span class="dv">123</span>&#125;)<span class="op">,</span> <span class="dv">123</span>)<span class="op">;</span></span>
<span id="cb13-8"><a href="#cb13-8" aria-hidden="true" tabindex="-1"></a>assert<span class="op">.</span><span class="fu">equal</span>(</span>
<span id="cb13-9"><a href="#cb13-9" aria-hidden="true" tabindex="-1"></a>    <span class="fu">getProp</span>(<span class="kw">undefined</span>)<span class="op">,</span> <span class="kw">undefined</span>)<span class="op">;</span></span>
<span id="cb13-10"><a href="#cb13-10" aria-hidden="true" tabindex="-1"></a>assert<span class="op">.</span><span class="fu">equal</span>(</span>
<span id="cb13-11"><a href="#cb13-11" aria-hidden="true" tabindex="-1"></a>    <span class="fu">getProp</span>(<span class="kw">null</span>)<span class="op">,</span> <span class="kw">undefined</span>)<span class="op">;</span></span></code></pre></div>
<p>以下的两个操作也很是类似的工作：</p>
<div class="sourceCode" id="cb14"><pre class="sourceCode js"><code class="sourceCode javascript"><span id="cb14-1"><a href="#cb14-1" aria-hidden="true" tabindex="-1"></a>obj<span class="op">?.</span>[«expr»] <span class="co">// 可选的动态属性访问</span></span>
<span id="cb14-2"><a href="#cb14-2" aria-hidden="true" tabindex="-1"></a>func<span class="op">?.</span>(«arg0»<span class="op">,</span> «arg1») <span class="co">// 可选的函数或方法调用</span></span></code></pre></div>
<h3 id="undefinednull-和空合并"><code>undefined</code>、<code>null</code>
和空合并</h3>
<p><a href="https://exploringjs.com/impatient-js/ch_operators.html#nullish-coalescing-operator">空合并操作符
<code>??</code></a> 可让我们在一个值是 <code>undefined</code> 或
<code>null</code> 时，使用默认值：</p>
<pre class="repl"><code>&gt; undefined ?? 'default value'
'default value'
&gt; null ?? 'default value'
'default value'

&gt; 0 ?? 'default value'
0
&gt; 123 ?? 'default value'
123
&gt; '' ?? 'default value'
''
&gt; 'abc' ?? 'default value'
'abc'</code></pre>
<p><a href="https://2ality.com/2020/06/logical-assignment-operators.html">空合并赋值操作符
<code>??=</code></a> 合并了空合并操作符与赋值操作符：</p>
<div class="sourceCode" id="cb16"><pre class="sourceCode js"><code class="sourceCode javascript"><span id="cb16-1"><a href="#cb16-1" aria-hidden="true" tabindex="-1"></a><span class="kw">function</span> <span class="fu">setName</span>(obj) &#123;</span>
<span id="cb16-2"><a href="#cb16-2" aria-hidden="true" tabindex="-1"></a>    obj<span class="op">.</span><span class="at">name</span> <span class="op">??=</span> <span class="st">'(Unnamed)'</span><span class="op">;</span></span>
<span id="cb16-3"><a href="#cb16-3" aria-hidden="true" tabindex="-1"></a>    <span class="cf">return</span> obj<span class="op">;</span></span>
<span id="cb16-4"><a href="#cb16-4" aria-hidden="true" tabindex="-1"></a>&#125;</span>
<span id="cb16-5"><a href="#cb16-5" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb16-6"><a href="#cb16-6" aria-hidden="true" tabindex="-1"></a>assert<span class="op">.</span><span class="fu">deepEqual</span>(</span>
<span id="cb16-7"><a href="#cb16-7" aria-hidden="true" tabindex="-1"></a>    <span class="fu">setName</span>(&#123;&#125;)<span class="op">,</span></span>
<span id="cb16-8"><a href="#cb16-8" aria-hidden="true" tabindex="-1"></a>    &#123;<span class="dt">name</span><span class="op">:</span> <span class="st">'(Unnamed)'</span>&#125;</span>
<span id="cb16-9"><a href="#cb16-9" aria-hidden="true" tabindex="-1"></a>)<span class="op">;</span></span>
<span id="cb16-10"><a href="#cb16-10" aria-hidden="true" tabindex="-1"></a>assert<span class="op">.</span><span class="fu">deepEqual</span>(</span>
<span id="cb16-11"><a href="#cb16-11" aria-hidden="true" tabindex="-1"></a>    <span class="fu">setName</span>(&#123;<span class="dt">name</span><span class="op">:</span> <span class="kw">undefined</span>&#125;)<span class="op">,</span></span>
<span id="cb16-12"><a href="#cb16-12" aria-hidden="true" tabindex="-1"></a>    &#123;<span class="dt">name</span><span class="op">:</span> <span class="st">'(Unnamed)'</span>&#125;</span>
<span id="cb16-13"><a href="#cb16-13" aria-hidden="true" tabindex="-1"></a>)<span class="op">;</span></span>
<span id="cb16-14"><a href="#cb16-14" aria-hidden="true" tabindex="-1"></a>assert<span class="op">.</span><span class="fu">deepEqual</span>(</span>
<span id="cb16-15"><a href="#cb16-15" aria-hidden="true" tabindex="-1"></a>    <span class="fu">setName</span>(&#123;<span class="dt">name</span><span class="op">:</span> <span class="kw">null</span>&#125;)<span class="op">,</span></span>
<span id="cb16-16"><a href="#cb16-16" aria-hidden="true" tabindex="-1"></a>    &#123;<span class="dt">name</span><span class="op">:</span> <span class="st">'(Unnamed)'</span>&#125;</span>
<span id="cb16-17"><a href="#cb16-17" aria-hidden="true" tabindex="-1"></a>)<span class="op">;</span></span>
<span id="cb16-18"><a href="#cb16-18" aria-hidden="true" tabindex="-1"></a>assert<span class="op">.</span><span class="fu">deepEqual</span>(</span>
<span id="cb16-19"><a href="#cb16-19" aria-hidden="true" tabindex="-1"></a>    <span class="fu">setName</span>(&#123;<span class="dt">name</span><span class="op">:</span> <span class="st">'Jane'</span>&#125;)<span class="op">,</span></span>
<span id="cb16-20"><a href="#cb16-20" aria-hidden="true" tabindex="-1"></a>    &#123;<span class="dt">name</span><span class="op">:</span> <span class="st">'Jane'</span>&#125;</span>
<span id="cb16-21"><a href="#cb16-21" aria-hidden="true" tabindex="-1"></a>)<span class="op">;</span></span></code></pre></div>
<h2 id="处理-undefined-与-null">处理 <code>undefined</code> 与
<code>null</code></h2>
<p>以下的部分解释了在我们代码中最常见的处理 <code>undefined</code> 和
<code>null</code> 的方法：</p>
<h3 id="实际值既不是-undefined-也不是-null">实际值既不是
<code>undefined</code> 也不是 <code>null</code></h3>
<p>例如，我们可能希望属性 <code>file.title</code>
始终存在并且始终是字符串，那么有两种常见的方法可以实现此目的。</p>
<p>请注意，在此博客文章中，我们仅检查 <code>undefined</code> 和
<code>null</code>，而不检查值是否为字符串。你需要自己决定是否要添加检查器，作为附加的安全保障措施。</p>
<h4 id="同时禁止-undefined-和-null">同时禁止 <code>undefined</code> 和
<code>null</code></h4>
<p>例如：</p>
<div class="sourceCode" id="cb17"><pre class="sourceCode js"><code class="sourceCode javascript"><span id="cb17-1"><a href="#cb17-1" aria-hidden="true" tabindex="-1"></a><span class="kw">function</span> <span class="fu">createFile</span>(title) &#123;</span>
<span id="cb17-2"><a href="#cb17-2" aria-hidden="true" tabindex="-1"></a>    <span class="cf">if</span> (title <span class="op">===</span> <span class="kw">undefined</span> <span class="op">||</span> title <span class="op">===</span> <span class="kw">null</span>) &#123;</span>
<span id="cb17-3"><a href="#cb17-3" aria-hidden="true" tabindex="-1"></a>        <span class="cf">throw</span> <span class="kw">new</span> <span class="bu">Error</span>(<span class="st">'`title` must not be nullish'</span>)<span class="op">;</span></span>
<span id="cb17-4"><a href="#cb17-4" aria-hidden="true" tabindex="-1"></a>    &#125;</span>
<span id="cb17-5"><a href="#cb17-5" aria-hidden="true" tabindex="-1"></a>    <span class="co">// ···</span></span>
<span id="cb17-6"><a href="#cb17-6" aria-hidden="true" tabindex="-1"></a>&#125;</span></code></pre></div>
<p>为什么选择这个方法？</p>
<ul>
<li><p>我们希望以相同的方式处理 <code>undefined</code> 和
<code>null</code>，因为 JavaScript 代码就是经常那样做，例如：</p>
<div class="sourceCode" id="cb18"><pre class="sourceCode js"><code class="sourceCode javascript"><span id="cb18-1"><a href="#cb18-1" aria-hidden="true" tabindex="-1"></a><span class="co">// 检查一个属性是否存在</span></span>
<span id="cb18-2"><a href="#cb18-2" aria-hidden="true" tabindex="-1"></a><span class="cf">if</span> (<span class="op">!</span>obj<span class="op">.</span><span class="at">requiredProp</span>) &#123;</span>
<span id="cb18-3"><a href="#cb18-3" aria-hidden="true" tabindex="-1"></a>  obj<span class="op">.</span><span class="at">requiredProp</span> <span class="op">=</span> <span class="dv">123</span><span class="op">;</span></span>
<span id="cb18-4"><a href="#cb18-4" aria-hidden="true" tabindex="-1"></a>&#125;</span>
<span id="cb18-5"><a href="#cb18-5" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb18-6"><a href="#cb18-6" aria-hidden="true" tabindex="-1"></a><span class="co">// 通过空合并操作符使用默认值</span></span>
<span id="cb18-7"><a href="#cb18-7" aria-hidden="true" tabindex="-1"></a><span class="kw">const</span> myValue <span class="op">=</span> myParameter <span class="op">??</span> <span class="st">'some default'</span><span class="op">;</span></span></code></pre></div></li>
<li><p>如果我们的代码中出现了问题，让 <code>undefined</code> 或
<code>null</code> 出现了，我们需要让它尽早结束执行并抛出错误。</p></li>
</ul>
<h4 id="同时对-undefined-和-null-使用默认值">同时对
<code>undefined</code> 和 <code>null</code> 使用默认值</h4>
<p>例如：</p>
<div class="sourceCode" id="cb19"><pre class="sourceCode js"><code class="sourceCode javascript"><span id="cb19-1"><a href="#cb19-1" aria-hidden="true" tabindex="-1"></a><span class="kw">function</span> <span class="fu">createFile</span>(title) &#123;</span>
<span id="cb19-2"><a href="#cb19-2" aria-hidden="true" tabindex="-1"></a>    title <span class="op">??=</span> <span class="st">'(Untitled)'</span><span class="op">;</span></span>
<span id="cb19-3"><a href="#cb19-3" aria-hidden="true" tabindex="-1"></a>    <span class="co">// ···</span></span>
<span id="cb19-4"><a href="#cb19-4" aria-hidden="true" tabindex="-1"></a>&#125;</span></code></pre></div>
<p>我们不能使用参数默认值，因为它只会被 <code>undefined</code>
触发。在这里，我们依赖于<a href="https://2ality.com/2020/06/logical-assignment-operators.html">空合并赋值运算符
<code>??=</code></a>。</p>
<p>为什么选择这个方法？</p>
<ul>
<li>我们希望以相同方式对待 <code>undefined</code> 和
<code>null</code>（见上文）。</li>
<li>我们希望我们的代码无声但有力地对待 <code>undefined</code> 和
<code>null</code>。</li>
</ul>
<h3 id="undefined-或-null-是一个被忽略的值"><code>undefined</code> 或
<code>null</code> 是一个被忽略的值</h3>
<p>例如，我们可能希望属性 <code>file.title</code>
是字符串或是被忽略的值（即 <code>file</code>
没有标题），那么有几种方法可以实现此目的。</p>
<h4 id="null-是被忽略值"><code>null</code> 是被忽略值</h4>
<p>例如：</p>
<div class="sourceCode" id="cb20"><pre class="sourceCode js"><code class="sourceCode javascript"><span id="cb20-1"><a href="#cb20-1" aria-hidden="true" tabindex="-1"></a><span class="kw">function</span> <span class="fu">createFile</span>(title) &#123;</span>
<span id="cb20-2"><a href="#cb20-2" aria-hidden="true" tabindex="-1"></a>    <span class="cf">if</span> (title <span class="op">===</span> <span class="kw">undefined</span>) &#123;</span>
<span id="cb20-3"><a href="#cb20-3" aria-hidden="true" tabindex="-1"></a>        <span class="cf">throw</span> <span class="kw">new</span> <span class="bu">Error</span>(<span class="st">'`title` 不应该是 undefined'</span>)<span class="op">;</span></span>
<span id="cb20-4"><a href="#cb20-4" aria-hidden="true" tabindex="-1"></a>    &#125;</span>
<span id="cb20-5"><a href="#cb20-5" aria-hidden="true" tabindex="-1"></a>    <span class="cf">return</span> &#123;title&#125;<span class="op">;</span></span>
<span id="cb20-6"><a href="#cb20-6" aria-hidden="true" tabindex="-1"></a>&#125;</span></code></pre></div>
<p>或者，<code>undefined</code> 也可以触发默认值：</p>
<div class="sourceCode" id="cb21"><pre class="sourceCode js"><code class="sourceCode javascript"><span id="cb21-1"><a href="#cb21-1" aria-hidden="true" tabindex="-1"></a><span class="kw">function</span> <span class="fu">createFile</span>(title <span class="op">=</span> <span class="st">'(Untitled)'</span>) &#123;</span>
<span id="cb21-2"><a href="#cb21-2" aria-hidden="true" tabindex="-1"></a>    <span class="cf">return</span> &#123;title&#125;<span class="op">;</span></span>
<span id="cb21-3"><a href="#cb21-3" aria-hidden="true" tabindex="-1"></a>&#125;</span></code></pre></div>
<p>为什么要选择这个方法？</p>
<ul>
<li>我们需要一个空值来表示被忽略。</li>
<li>我们不希望空值触发参数默认值并破坏默认值。</li>
<li>我们想将空值字符串化为 JSON（这是我们无法对 <code>undefined</code>
进行的处理）。</li>
</ul>
<h4 id="undefined-是被忽略的值"><code>undefined</code> 是被忽略的值</h4>
<p>例如：</p>
<div class="sourceCode" id="cb22"><pre class="sourceCode js"><code class="sourceCode javascript"><span id="cb22-1"><a href="#cb22-1" aria-hidden="true" tabindex="-1"></a><span class="kw">function</span> <span class="fu">createFile</span>(title) &#123;</span>
<span id="cb22-2"><a href="#cb22-2" aria-hidden="true" tabindex="-1"></a>    <span class="cf">if</span> (title <span class="op">===</span> <span class="kw">null</span>) &#123;</span>
<span id="cb22-3"><a href="#cb22-3" aria-hidden="true" tabindex="-1"></a>        <span class="cf">throw</span> <span class="kw">new</span> <span class="bu">Error</span>(<span class="st">'`title` 不应该是 null'</span>)<span class="op">;</span></span>
<span id="cb22-4"><a href="#cb22-4" aria-hidden="true" tabindex="-1"></a>    &#125;</span>
<span id="cb22-5"><a href="#cb22-5" aria-hidden="true" tabindex="-1"></a>    <span class="cf">return</span> &#123;title&#125;<span class="op">;</span></span>
<span id="cb22-6"><a href="#cb22-6" aria-hidden="true" tabindex="-1"></a>&#125;</span></code></pre></div>
<p>为什么选择这种方法？</p>
<ul>
<li>我们需要一个空值来表示被忽略。</li>
<li>我们确实希望空值触发参数或解构默认值。</li>
</ul>
<p><code>undefined</code> 的一个缺点是它通常是在 JavaScript 中意外赋予的
—— 在未初始化的变量，属性名称中的错字，忘记从函数中返回内容等。</p>
<h4 id="为什么不同时将-undefined-和-null-看作是被忽略的值">为什么不同时将
<code>undefined</code> 和 <code>null</code> 看作是被忽略的值？</h4>
<p>当接收到一个值时，将 <code>undefined</code> 和 <code>null</code>
都视为 “空值” 是有意义的。
但是，当我们创建值时，我们不希望模棱两可，以避免不必要的麻烦。</p>
<p>这指向了另一种角度：如果我们需要一个被忽略的值，但又不想使用
<code>undefined</code> 或 <code>null</code>
作为被忽略值时该怎么办？看看下文吧：</p>
<h3 id="其他处理被忽略值的方法">其他处理被忽略值的方法</h3>
<h4 id="特殊值">特殊值</h4>
<p>我们可以创建一个特殊值，每当属性被忽略时 <code>.title</code>
时就使用该值：</p>
<div class="sourceCode" id="cb23"><pre class="sourceCode js"><code class="sourceCode javascript"><span id="cb23-1"><a href="#cb23-1" aria-hidden="true" tabindex="-1"></a><span class="kw">const</span> UNTITLED <span class="op">=</span> <span class="bu">Symbol</span>(<span class="st">'UNTITLED'</span>)<span class="op">;</span></span>
<span id="cb23-2"><a href="#cb23-2" aria-hidden="true" tabindex="-1"></a><span class="kw">const</span> file <span class="op">=</span> &#123;</span>
<span id="cb23-3"><a href="#cb23-3" aria-hidden="true" tabindex="-1"></a>    <span class="dt">title</span><span class="op">:</span> UNTITLED<span class="op">,</span></span>
<span id="cb23-4"><a href="#cb23-4" aria-hidden="true" tabindex="-1"></a>&#125;<span class="op">;</span></span></code></pre></div>
<h4 id="null-对象模式">Null 对象模式</h4>
<p><strong>Null 对象模式</strong> 来自 OOP（面对对象编程）：</p>
<ul>
<li>一个公共超类的所有子类都具有相同的接口。</li>
<li>每个子类实现一种不同的模式供其实例使用。</li>
<li>这些模式之一是 <code>null</code>。</li>
</ul>
<p>在下文中，<code>UntitledFile</code> 继承了 “null” 模式。</p>
<div class="sourceCode" id="cb24"><pre class="sourceCode js"><code class="sourceCode javascript"><span id="cb24-1"><a href="#cb24-1" aria-hidden="true" tabindex="-1"></a><span class="co">// Abstract superclass</span></span>
<span id="cb24-2"><a href="#cb24-2" aria-hidden="true" tabindex="-1"></a><span class="kw">class</span> <span class="bu">File</span> &#123;</span>
<span id="cb24-3"><a href="#cb24-3" aria-hidden="true" tabindex="-1"></a>    <span class="fu">constructor</span>(content) &#123;</span>
<span id="cb24-4"><a href="#cb24-4" aria-hidden="true" tabindex="-1"></a>        <span class="cf">if</span> (<span class="kw">new</span><span class="op">.</span><span class="at">target</span> <span class="op">===</span> <span class="bu">File</span>) &#123;</span>
<span id="cb24-5"><a href="#cb24-5" aria-hidden="true" tabindex="-1"></a>            <span class="cf">throw</span> <span class="kw">new</span> <span class="bu">Error</span>(<span class="st">'Can’t instantiate this class'</span>)<span class="op">;</span></span>
<span id="cb24-6"><a href="#cb24-6" aria-hidden="true" tabindex="-1"></a>        &#125;</span>
<span id="cb24-7"><a href="#cb24-7" aria-hidden="true" tabindex="-1"></a>        <span class="kw">this</span><span class="op">.</span><span class="at">content</span> <span class="op">=</span> content<span class="op">;</span></span>
<span id="cb24-8"><a href="#cb24-8" aria-hidden="true" tabindex="-1"></a>    &#125;</span>
<span id="cb24-9"><a href="#cb24-9" aria-hidden="true" tabindex="-1"></a>&#125;</span>
<span id="cb24-10"><a href="#cb24-10" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb24-11"><a href="#cb24-11" aria-hidden="true" tabindex="-1"></a><span class="kw">class</span> TitledFile <span class="kw">extends</span> <span class="bu">File</span> &#123;</span>
<span id="cb24-12"><a href="#cb24-12" aria-hidden="true" tabindex="-1"></a>    <span class="fu">constructor</span>(content<span class="op">,</span> title) &#123;</span>
<span id="cb24-13"><a href="#cb24-13" aria-hidden="true" tabindex="-1"></a>        <span class="kw">super</span>(content)<span class="op">;</span></span>
<span id="cb24-14"><a href="#cb24-14" aria-hidden="true" tabindex="-1"></a>        <span class="kw">this</span><span class="op">.</span><span class="at">title</span> <span class="op">=</span> title<span class="op">;</span></span>
<span id="cb24-15"><a href="#cb24-15" aria-hidden="true" tabindex="-1"></a>    &#125;</span>
<span id="cb24-16"><a href="#cb24-16" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb24-17"><a href="#cb24-17" aria-hidden="true" tabindex="-1"></a>    <span class="fu">getTitle</span>() &#123;</span>
<span id="cb24-18"><a href="#cb24-18" aria-hidden="true" tabindex="-1"></a>        <span class="cf">return</span> <span class="kw">this</span><span class="op">.</span><span class="at">title</span><span class="op">;</span></span>
<span id="cb24-19"><a href="#cb24-19" aria-hidden="true" tabindex="-1"></a>    &#125;</span>
<span id="cb24-20"><a href="#cb24-20" aria-hidden="true" tabindex="-1"></a>&#125;</span>
<span id="cb24-21"><a href="#cb24-21" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb24-22"><a href="#cb24-22" aria-hidden="true" tabindex="-1"></a><span class="kw">class</span> UntitledFile <span class="kw">extends</span> <span class="bu">File</span> &#123;</span>
<span id="cb24-23"><a href="#cb24-23" aria-hidden="true" tabindex="-1"></a>    <span class="fu">constructor</span>(content) &#123;</span>
<span id="cb24-24"><a href="#cb24-24" aria-hidden="true" tabindex="-1"></a>        <span class="kw">super</span>(content)<span class="op">;</span></span>
<span id="cb24-25"><a href="#cb24-25" aria-hidden="true" tabindex="-1"></a>    &#125;</span>
<span id="cb24-26"><a href="#cb24-26" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb24-27"><a href="#cb24-27" aria-hidden="true" tabindex="-1"></a>    <span class="fu">getTitle</span>() &#123;</span>
<span id="cb24-28"><a href="#cb24-28" aria-hidden="true" tabindex="-1"></a>        <span class="cf">return</span> <span class="st">'(Untitled)'</span><span class="op">;</span></span>
<span id="cb24-29"><a href="#cb24-29" aria-hidden="true" tabindex="-1"></a>    &#125;</span>
<span id="cb24-30"><a href="#cb24-30" aria-hidden="true" tabindex="-1"></a>&#125;</span>
<span id="cb24-31"><a href="#cb24-31" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb24-32"><a href="#cb24-32" aria-hidden="true" tabindex="-1"></a><span class="kw">const</span> files <span class="op">=</span> [</span>
<span id="cb24-33"><a href="#cb24-33" aria-hidden="true" tabindex="-1"></a>    <span class="kw">new</span> <span class="fu">TitledFile</span>(<span class="st">'Dear diary!'</span><span class="op">,</span> <span class="st">'My Diary'</span>)<span class="op">,</span></span>
<span id="cb24-34"><a href="#cb24-34" aria-hidden="true" tabindex="-1"></a>    <span class="kw">new</span> <span class="fu">UntitledFile</span>(<span class="st">'Reminder: pick a title!'</span>)<span class="op">,</span></span>
<span id="cb24-35"><a href="#cb24-35" aria-hidden="true" tabindex="-1"></a>]<span class="op">;</span></span>
<span id="cb24-36"><a href="#cb24-36" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb24-37"><a href="#cb24-37" aria-hidden="true" tabindex="-1"></a>assert<span class="op">.</span><span class="fu">deepEqual</span>(</span>
<span id="cb24-38"><a href="#cb24-38" aria-hidden="true" tabindex="-1"></a>    files<span class="op">.</span><span class="fu">map</span>(f <span class="kw">=&gt;</span> f<span class="op">.</span><span class="fu">getTitle</span>())<span class="op">,</span></span>
<span id="cb24-39"><a href="#cb24-39" aria-hidden="true" tabindex="-1"></a>    [</span>
<span id="cb24-40"><a href="#cb24-40" aria-hidden="true" tabindex="-1"></a>        <span class="st">'My Diary'</span><span class="op">,</span></span>
<span id="cb24-41"><a href="#cb24-41" aria-hidden="true" tabindex="-1"></a>        <span class="st">'(Untitled)'</span><span class="op">,</span></span>
<span id="cb24-42"><a href="#cb24-42" aria-hidden="true" tabindex="-1"></a>    ])<span class="op">;</span></span></code></pre></div>
<p>我们也可以只为标题（而不是整个文件对象）使用空对象模式。</p>
<h4 id="也许类型">“也许”类型</h4>
<p>“也许”类型是一种函数编程技术：</p>
<div class="sourceCode" id="cb25"><pre class="sourceCode js"><code class="sourceCode javascript"><span id="cb25-1"><a href="#cb25-1" aria-hidden="true" tabindex="-1"></a><span class="kw">function</span> <span class="fu">getTitle</span>(file) &#123;</span>
<span id="cb25-2"><a href="#cb25-2" aria-hidden="true" tabindex="-1"></a>    <span class="cf">switch</span> (file<span class="op">.</span><span class="at">title</span><span class="op">.</span><span class="at">kind</span>) &#123;</span>
<span id="cb25-3"><a href="#cb25-3" aria-hidden="true" tabindex="-1"></a>        <span class="cf">case</span> <span class="st">'just'</span><span class="op">:</span></span>
<span id="cb25-4"><a href="#cb25-4" aria-hidden="true" tabindex="-1"></a>            <span class="cf">return</span> file<span class="op">.</span><span class="at">title</span><span class="op">.</span><span class="at">value</span><span class="op">;</span></span>
<span id="cb25-5"><a href="#cb25-5" aria-hidden="true" tabindex="-1"></a>        <span class="cf">case</span> <span class="st">'nothing'</span><span class="op">:</span></span>
<span id="cb25-6"><a href="#cb25-6" aria-hidden="true" tabindex="-1"></a>            <span class="cf">return</span> <span class="st">'(Untitled)'</span><span class="op">;</span></span>
<span id="cb25-7"><a href="#cb25-7" aria-hidden="true" tabindex="-1"></a>        <span class="cf">default</span><span class="op">:</span></span>
<span id="cb25-8"><a href="#cb25-8" aria-hidden="true" tabindex="-1"></a>            <span class="cf">throw</span> <span class="kw">new</span> <span class="bu">Error</span>()<span class="op">;</span></span>
<span id="cb25-9"><a href="#cb25-9" aria-hidden="true" tabindex="-1"></a>    &#125;</span>
<span id="cb25-10"><a href="#cb25-10" aria-hidden="true" tabindex="-1"></a>&#125;</span>
<span id="cb25-11"><a href="#cb25-11" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb25-12"><a href="#cb25-12" aria-hidden="true" tabindex="-1"></a><span class="kw">const</span> files <span class="op">=</span> [</span>
<span id="cb25-13"><a href="#cb25-13" aria-hidden="true" tabindex="-1"></a>    &#123;</span>
<span id="cb25-14"><a href="#cb25-14" aria-hidden="true" tabindex="-1"></a>        <span class="dt">title</span><span class="op">:</span> &#123;<span class="dt">kind</span><span class="op">:</span> <span class="st">'just'</span><span class="op">,</span> <span class="dt">value</span><span class="op">:</span> <span class="st">'My Diary'</span>&#125;<span class="op">,</span></span>
<span id="cb25-15"><a href="#cb25-15" aria-hidden="true" tabindex="-1"></a>        <span class="dt">content</span><span class="op">:</span> <span class="st">'Dear diary!'</span><span class="op">,</span></span>
<span id="cb25-16"><a href="#cb25-16" aria-hidden="true" tabindex="-1"></a>    &#125;<span class="op">,</span></span>
<span id="cb25-17"><a href="#cb25-17" aria-hidden="true" tabindex="-1"></a>    &#123;</span>
<span id="cb25-18"><a href="#cb25-18" aria-hidden="true" tabindex="-1"></a>        <span class="dt">title</span><span class="op">:</span> &#123;<span class="dt">kind</span><span class="op">:</span> <span class="st">'nothing'</span>&#125;<span class="op">,</span></span>
<span id="cb25-19"><a href="#cb25-19" aria-hidden="true" tabindex="-1"></a>        <span class="dt">content</span><span class="op">:</span> <span class="st">'Reminder: pick a title!'</span><span class="op">,</span></span>
<span id="cb25-20"><a href="#cb25-20" aria-hidden="true" tabindex="-1"></a>    &#125;<span class="op">,</span></span>
<span id="cb25-21"><a href="#cb25-21" aria-hidden="true" tabindex="-1"></a>]<span class="op">;</span></span>
<span id="cb25-22"><a href="#cb25-22" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb25-23"><a href="#cb25-23" aria-hidden="true" tabindex="-1"></a>assert<span class="op">.</span><span class="fu">deepEqual</span>(</span>
<span id="cb25-24"><a href="#cb25-24" aria-hidden="true" tabindex="-1"></a>    files<span class="op">.</span><span class="fu">map</span>(f <span class="kw">=&gt;</span> <span class="fu">getTitle</span>(f))<span class="op">,</span></span>
<span id="cb25-25"><a href="#cb25-25" aria-hidden="true" tabindex="-1"></a>    [</span>
<span id="cb25-26"><a href="#cb25-26" aria-hidden="true" tabindex="-1"></a>        <span class="st">'My Diary'</span><span class="op">,</span></span>
<span id="cb25-27"><a href="#cb25-27" aria-hidden="true" tabindex="-1"></a>        <span class="st">'(Untitled)'</span><span class="op">,</span></span>
<span id="cb25-28"><a href="#cb25-28" aria-hidden="true" tabindex="-1"></a>    ])<span class="op">;</span></span></code></pre></div>
<p>我们本可以通过数组对 “just” 和 “nothing”
进行编码，但我们的方法的好处是 TypeScript 对其有很好的支持（通过<a href="https://www.typescriptlang.org/docs/handbook/unions-and-intersections.html#discriminate-unions">可辨识联合</a>）。</p>
<h2 id="我的方法">我的方法</h2>
<p>我不喜欢将 <code>undefined</code> 用作被忽略的值的原因有三个：</p>
<ul>
<li><code>undefined</code> 通常是在 JavaScript 中意外出现的。</li>
<li><code>undefined</code>
会触发参数和解构的默认值（出于某些原因，某些人更喜欢
<code>undefined</code>）。</li>
</ul>
<p>因此，如果需要特殊值，可以使用以下两种方法之一：</p>
<ul>
<li>我将 <code>null</code> 用作被忽略的值。（顺便说一句，TypeScript
相对较好地支持了这种方法。）</li>
<li>我通过上述的其中一种技术避免了同时出现 <code>undefined</code> 和
<code>null</code>
的情况，优点在乎让代码更干净，而缺点在于需要做出更多的工作。</li>
</ul>]]></content>
      <categories>
        <category>Computer Science</category>
        <category>Frontend</category>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>Computer Science</tag>
        <tag>JavaScript</tag>
        <tag>Frontend</tag>
      </tags>
  </entry>
  <entry>
    <title>Deno 1.8 发行公告</title>
    <url>/2021/03/04/computer%20science/backend/Deno-1-8-Release-Notes/</url>
    <content><![CDATA[<blockquote>
<ul>
<li>原文地址：<a href="https://deno.land/posts/v1.8">Deno 1.8 Release
Notes</a></li>
<li>原文作者：<a href="https://deno.land/posts/v1.8">Deno官方</a></li>
<li>译者：<a href="https://github.com/PassionPenguin">霜羽
Hoarfroster</a></li>
<li>校对者：<a href="https://github.com/zenblo">zenblo</a></li>
</ul>
</blockquote>
<p>今天我们正式地发布了 Deno 1.8.0
版本。我们在这个版本中添加了大量的新功能，也同时优化了它的稳定性：</p>
<ul>
<li><p><strong><a href="https://deno.land/posts/v1.8#experimental-support-for-the-webgpu-api">对
WebGPU API 的实验性功能支持</a></strong>：提供在 Deno 中开箱即用的使用
GPU 去加速机器学习的路径。</p></li>
<li><p><strong><a href="https://deno.land/posts/v1.8#icu-support">内置国际化 API
的启用</a></strong>：所有的 JS <code>Intl</code> API
现在都支持开箱即用。</p></li>
<li><p><strong><a href="https://deno.land/posts/v1.8#revamped-coverage-tooling-codedeno-coveragecode">改进了的覆盖率工具</a></strong>：覆盖率工具现在支持输出
<code>lcov</code> 格式的报告。</p></li>
<li><p><strong><a href="https://deno.land/posts/v1.8#import-maps-are-now-stable">导入映射功能现已稳定</a></strong>：我们已经发布了
Web 兼容的依赖的重写。</p></li>
<li><p><strong><a href="https://deno.land/posts/v1.8#auth-token-support-for-fetching-modules">对引入私有模块的支持</a></strong>：通过使用验证
token 来引入你的私有服务器上的远程模块。</p></li>
</ul>
<p>如果你已经安装了 Deno 那么你可以直接通过运行
<code>deno upgrade</code> 命令更新到 1.8
版本，而如果你是第一次使用，那么你可以用下面的方法去获取：</p>
<pre class="shell"><code># 使用 Shell (macOS 和 Linux):
curl -fsSL https://deno.land/x/install/install.sh | sh

# 使用 PowerShell (Windows):
iwr https://deno.land/x/install/install.ps1 -useb | iex

# 使用 Homebrew (macOS):
brew install deno

# 使用 Scoop (Windows):
scoop install deno

# Using Chocolatey (Windows):
choco install deno</code></pre>
<h2 id="新功能和变化">新功能和变化</h2>
<h3 id="对-webgpu-api-的实验性功能支持">对 WebGPU API
的实验性功能支持</h3>
<p>WebGPU API 为开发者们提供了一种更低级，高性能，跨体系结构的方式，通过
JavaScript 去编写运行在 GPU 硬件上的程序。它是 WebGL 在 Web
应用程序上的有效替代品，虽然尚未确定最终规范，但是目前 Firefox，Chromium
和 Safari 都提供了支持，同样我们 Deno 也对其提供了支持。</p>
<p>通过此 API，我们可以直接从 Deno 内部访问 GPU 的渲染和通用 GPU
计算。一旦我们完成了移植且功能稳定取消标记后，这个方式将会让我们可以在
Web 端、服务器和开发者的设备上实现可移植地去访问 GPU 资源。</p>
<p>GPU
能够帮助开发者实现高度并行某些数值算法，而不是局限于图形渲染和游戏。在机器学习中有效使用
GPU，使得运行更复杂的神经网络 ——
也就是我们所说的深度学习中能更有效地使用
GPU，成为可能。计算机视觉、翻译、图像生成、强化学习等方面的飞速发展都源于
GPU 硬件的有效利用。</p>
<p>如今，大多数神经网络都是用 Python 编写的，而计算则转移到了 GPU
上。但我们相信，如果存在适当的基础架构，JavaScript（而不是
Python）也可以用作表达数学思想的理想语言。在 Deno 中我们提供的现成的
WebGPU 支持就是我们朝这个方向迈出的一步。我们的目标是通过 GPU 加速在
Deno 上运行 <a href="https://www.tensorflow.org/js">Tensorflow.js</a>。我们预计这将在未来几周或几个月内实现。</p>
<p>这是一个基本示例，演示了如何访问连接的 GPU
设备以及读取名称和支持的功能：</p>
<div class="sourceCode" id="cb2"><pre class="sourceCode js"><code class="sourceCode javascript"><span id="cb2-1"><a href="#cb2-1" aria-hidden="true" tabindex="-1"></a><span class="co">// 使用 `deno run --unstable https://deno.land/posts/v1.8/webgpu_discover.ts` 运行</span></span>
<span id="cb2-2"><a href="#cb2-2" aria-hidden="true" tabindex="-1"></a><span class="co">// 尝试去从 UserAgent 中获取一个适配器</span></span>
<span id="cb2-3"><a href="#cb2-3" aria-hidden="true" tabindex="-1"></a><span class="kw">const</span> adapter <span class="op">=</span> <span class="cf">await</span> <span class="bu">navigator</span><span class="op">.</span><span class="at">gpu</span><span class="op">.</span><span class="fu">requestAdapter</span>()<span class="op">;</span></span>
<span id="cb2-4"><a href="#cb2-4" aria-hidden="true" tabindex="-1"></a><span class="cf">if</span> (adapter) &#123;</span>
<span id="cb2-5"><a href="#cb2-5" aria-hidden="true" tabindex="-1"></a>    <span class="co">// 打印一些有关适配器的基础的信息</span></span>
<span id="cb2-6"><a href="#cb2-6" aria-hidden="true" tabindex="-1"></a>    <span class="bu">console</span><span class="op">.</span><span class="fu">log</span>(<span class="vs">`找到了适配器：</span><span class="sc">$&#123;</span>adapter<span class="op">.</span><span class="at">name</span><span class="sc">&#125;</span><span class="vs">`</span>)<span class="op">;</span></span>
<span id="cb2-7"><a href="#cb2-7" aria-hidden="true" tabindex="-1"></a>    <span class="kw">const</span> features <span class="op">=</span> [<span class="op">...</span>adapter<span class="op">.</span><span class="at">features</span><span class="op">.</span><span class="fu">values</span>()]<span class="op">;</span></span>
<span id="cb2-8"><a href="#cb2-8" aria-hidden="true" tabindex="-1"></a>    <span class="bu">console</span><span class="op">.</span><span class="fu">log</span>(<span class="vs">`支持的功能：</span><span class="sc">$&#123;</span>features<span class="op">.</span><span class="fu">join</span>(<span class="st">", "</span>)<span class="sc">&#125;</span><span class="vs">`</span>)<span class="op">;</span></span>
<span id="cb2-9"><a href="#cb2-9" aria-hidden="true" tabindex="-1"></a>&#125; <span class="cf">else</span> &#123;</span>
<span id="cb2-10"><a href="#cb2-10" aria-hidden="true" tabindex="-1"></a>    <span class="bu">console</span><span class="op">.</span><span class="fu">error</span>(<span class="st">"没找到适配器"</span>)<span class="op">;</span></span>
<span id="cb2-11"><a href="#cb2-11" aria-hidden="true" tabindex="-1"></a>&#125;</span></code></pre></div>
<p>以下是一个小示例，演示了 GPU
渲染着色器在一个简单的绿色背景上渲染红色三角形：</p>
<pre class="shell"><code>$ deno run --unstable --allow-write=output.png https://raw.githubusercontent.com/crowlKats/webgpu-examples/f3b979f57fd471b11a28c5b0c91d0447221ba77b/hello-triangle/mod.ts</code></pre>
<figure>
<img src="https://raw.githubusercontent.com/PassionPenguin/picgo-database/main/v2-85594ad0a400c1d77cbbbddb95d2d9b1_720w.png" alt="一个简单的绿色背景的红色三角形">
<figcaption aria-hidden="true">一个简单的绿色背景的红色三角形</figcaption>
</figure>
<p><a href="https://github.com/crowlKats/webgpu-examples/blob/f3b979f57fd471b11a28c5b0c91d0447221ba77b/utils.ts#L77-L106">需要注意的是在输出
PNG 上使用了 WebAssembly</a>。有关更多的信息请访问这一个 GitHub 仓库：<a href="https://github.com/crowlKats/webgpu-examples">crowlKats/webgpu-examples</a>。</p>
<p>最终的 PR 拉取请求有 15.5k 行的代码，我们花费了整整 5
个月的时间进行审查以及并入仓库。我们十分感谢领导 Deno 中引入 WebGPU
项目的 <a href="https://github.com/crowlKats">crowlKats</a>。我们同样感谢所有对 <a href="https://github.com/gfx-rs/wgpu">wgpu</a> 和 gfx-rs 这些加固了 Deno
WebGPU 项目的贡献者。我们同样向 <a href="https://github.com/kvark">kvark</a> 为他所在 WebGPu
规范中作出的贡献以及 wgpu 和 gfx-rs 项目中的开发的引领（为我们做出了
WebGPU 的模范）致以衷心的感谢。</p>
<h3 id="icu-支持">ICU 支持</h3>
<p>ICU 支持一直是 Deno 版本库中第二大需求的功能。我们很高兴地宣布，Deno
v1.8 已经提供了完整的 ICU 支持。</p>
<p>所有依赖于 ICU 的 JavaScript API 现在都能对应浏览器的 API 了。</p>
<p>尝试在 REPL 中使用一下：</p>
<pre class="shell"><code>$ deno
Deno 1.8.0
exit using ctrl+d or close()
&gt; const d = new Date(Date.UTC(2020, 5, 26, 7, 0, 0));
undefined
&gt; d.toLocaleString("de-DE", &#123;
    weekday: "long",
    year: "numeric",
    month: "long",
    day: "numeric",
&#125;);
"Freitag, 26. Juni 2020"</code></pre>
<h3 id="改进了的覆盖率工具-deno-coverage">改进了的覆盖率工具
<code>deno coverage</code></h3>
<p>新的 Deno
版本的发行扩大了我们的代码覆盖范围基础架构，添加了一些强大的新功能。此版本的主要变化是代码覆盖的处理现在分为覆盖集合和覆盖报告。</p>
<p>以前，代码覆盖范围的收集和报告都将在单个子命令中进行，只需在启动
<code>deno test</code> 时指定 <code>--coverage</code>
标志即可。而现在，<code>deno test</code> 的<code>--coverage</code>
标志带来了一个参数，用来存储收集的配置文件的目录的路径，即代码覆盖的集合。在第二步中，我们现在会去调用
<code>deno coverage</code>，其路径指向存储代码覆盖配置文件的目录。此子命令可以直接在控制台上以美观的文本输出形式返回报告，也可以输出
<a href="https://manpages.debian.org/testing/lcov/lcov.1.en.html">lcov</a>
文件（<code>--lcov</code> 标志），用于诸如
<code>genhtml</code>，coveralls.io 或 codecov.io 之类的工具。</p>
<p>最近几天，我们一直在 <a href="https://github.com/denoland/deno_std"><code>deno_std</code></a>
上对该功能进行测试。对于每次的提交，我们都将覆盖率报告上传到
codecov.io，然后我们就可以在 <a href="https://codecov.io/gh/denoland/deno_std">codecov.io</a>
中查看这些内容。添加这些代码也很简单，我们的 GitHub Actions
工作流配置中仅有 10 行的更改：</p>
<div class="sourceCode" id="cb5"><pre class="sourceCode yml"><code class="sourceCode yaml"><span id="cb5-1"><a href="#cb5-1" aria-hidden="true" tabindex="-1"></a><span class="at">       </span><span class="kw">-</span><span class="at"> </span><span class="fu">name</span><span class="kw">:</span><span class="at"> Run tests</span></span>
<span id="cb5-2"><a href="#cb5-2" aria-hidden="true" tabindex="-1"></a><span class="at">       </span><span class="kw">-</span><span class="at"> </span><span class="fu">run</span><span class="kw">:</span><span class="at"> deno test --unstable --allow-all</span></span>
<span id="cb5-3"><a href="#cb5-3" aria-hidden="true" tabindex="-1"></a><span class="at">       </span><span class="fu">+        run</span><span class="kw">:</span><span class="at"> deno test --coverage=./cov --unstable --allow-all</span></span>
<span id="cb5-4"><a href="#cb5-4" aria-hidden="true" tabindex="-1"></a><span class="at">         +</span></span>
<span id="cb5-5"><a href="#cb5-5" aria-hidden="true" tabindex="-1"></a><span class="at">       </span><span class="fu">+      - name</span><span class="kw">:</span><span class="at"> Generate lcov</span></span>
<span id="cb5-6"><a href="#cb5-6" aria-hidden="true" tabindex="-1"></a><span class="at">       </span><span class="fu">+        run</span><span class="kw">:</span><span class="at"> deno coverage --unstable --lcov ./cov &gt; cov.lcov</span></span>
<span id="cb5-7"><a href="#cb5-7" aria-hidden="true" tabindex="-1"></a><span class="at">         +</span></span>
<span id="cb5-8"><a href="#cb5-8" aria-hidden="true" tabindex="-1"></a><span class="at">       </span><span class="fu">+      - name</span><span class="kw">:</span><span class="at"> Upload coverage</span></span>
<span id="cb5-9"><a href="#cb5-9" aria-hidden="true" tabindex="-1"></a><span class="at">       </span><span class="fu">+        uses</span><span class="kw">:</span><span class="at"> codecov/codecov-action@v1</span></span>
<span id="cb5-10"><a href="#cb5-10" aria-hidden="true" tabindex="-1"></a><span class="at">       </span><span class="fu">+        with</span><span class="kw">:</span></span>
<span id="cb5-11"><a href="#cb5-11" aria-hidden="true" tabindex="-1"></a><span class="fu">       +          name</span><span class="kw">: </span><span class="at">$&#123;&#123; matrix.os &#125;&#125;-$&lt;!--swig￼1--</span><span class="ch">&gt;</span></span>
<span id="cb5-12"><a href="#cb5-12" aria-hidden="true" tabindex="-1"></a><span class="at">       </span><span class="fu">+          files</span><span class="kw">:</span><span class="at"> cov.lcov</span></span></code></pre></div>
<p>要查看使用 coveralls.io 的例子，看看这个仓库即可：<a href="https://github.com/lucacasonato/deno_s3">https://github.com/lucacasonato/deno_s3</a>。</p>
<h3 id="导入映射功能现已稳定">导入映射功能现已稳定</h3>
<p><a href="https://github.com/WICG/import-maps">导入映射</a> 功能在
Chrome 89
版本是稳定的，之后，我们已经更新功能实现，以符合最新版本的规范，现在也被认为是稳定的。这意味着在使用
<code>--import-map</code> 时候我们不必再提供 <code>--unstable</code>
标志。</p>
<pre class="shell"><code>$ deno run --import-map=./import_map.json ./mod.ts</code></pre>
<p>同时，<code>--import-map</code>
标记现在不仅支持本地路径，也支持其他超链接，让我们能够从远程服务器中导入映射。</p>
<pre class="shell"><code>$ deno run --import-map=https://example.com/import_map.json ./mod.ts</code></pre>
<p>导入映射功能允许开发者使用所谓的“裸露”说明符来代替相对或绝对的文件路径或者是
HTTP URL 路径。</p>
<div class="sourceCode" id="cb8"><pre class="sourceCode js"><code class="sourceCode javascript"><span id="cb8-1"><a href="#cb8-1" aria-hidden="true" tabindex="-1"></a><span class="co">// Deno 默认不支持这样的说明符，</span></span>
<span id="cb8-2"><a href="#cb8-2" aria-hidden="true" tabindex="-1"></a><span class="co">// 但通过提供一个映射，我们就可以重新映射</span></span>
<span id="cb8-3"><a href="#cb8-3" aria-hidden="true" tabindex="-1"></a><span class="co">// 这些空白的说明符去其他的 URL</span></span>
<span id="cb8-4"><a href="#cb8-4" aria-hidden="true" tabindex="-1"></a><span class="im">import</span> <span class="op">*</span> <span class="im">as</span> http <span class="im">from</span> <span class="st">"std/http"</span><span class="op">;</span></span></code></pre></div>
<div class="sourceCode" id="cb9"><pre class="sourceCode json"><code class="sourceCode json"><span id="cb9-1"><a href="#cb9-1" aria-hidden="true" tabindex="-1"></a><span class="fu">&#123;</span></span>
<span id="cb9-2"><a href="#cb9-2" aria-hidden="true" tabindex="-1"></a>    <span class="dt">"imports"</span><span class="fu">:</span> <span class="fu">&#123;</span></span>
<span id="cb9-3"><a href="#cb9-3" aria-hidden="true" tabindex="-1"></a>        <span class="dt">"std/http"</span><span class="fu">:</span> <span class="st">"https://deno.land/std@0.85.0/http/mod.ts"</span></span>
<span id="cb9-4"><a href="#cb9-4" aria-hidden="true" tabindex="-1"></a>    <span class="fu">&#125;</span></span>
<span id="cb9-5"><a href="#cb9-5" aria-hidden="true" tabindex="-1"></a><span class="fu">&#125;</span></span></code></pre></div>
<p>开发者应该注意，导入映射是不能组合的：这意味着你只能提供一个导入映射到
<code>deno run</code> 或
<code>deno test</code>。正因为如此，依赖库的作者应该仍然使用常规的、非裸露的说明符（相对或绝对的文件路径或者是
http URL
路径），否则依赖库的使用者将需要手动将依赖库（以及库的依赖）裸露说明符添加到他们的导入映射中。</p>
<p>导入映射的一个更有用的功能是能够将常规说明符重新映射为完全不同的说明符。例如如果我们的模块图中嵌套了一些支离破碎的依赖关系，我们可以在将其固定到上游之前替换它为固定版本。或者如果我们使用将哈希添加到模块文件名的构建过程，我们可以在源代码中直接引用该文件而非哈希值，并且只需要在运行时使用一个导入的映射去重新映射说明符。</p>
<p>有关更多示例和详细说明，请参考<a href="https://github.com/WICG/import-maps#the-import-map">规范</a>。</p>
<h3 id="支持使用-auth-token-获取模块">支持使用 Auth Token 获取模块</h3>
<p>并非所有代码都可以在公共互联网上公开获得。以前，Deno
无法从需要身份验证的服务器上下载代码。在此版本中，我们增加了用户指定第一次提取模块时使用的每个域身份验证令牌的功能。</p>
<p>为此，Deno CLI 将查找名为 <code>DENO_AUTH_TOKENS</code>
的环境变量，以确定在请求远程模块时应考虑使用的身份验证令牌。环境变量的值采用以分号（<code>;</code>）分隔的
n 个令牌的格式，其中每个令牌的格式为
<code>&#123;token&#125;@&#123;hostname[:port]&#125;</code>。</p>
<p>例如，单个令牌看起来像这样：</p>
<pre class="text"><code>DENO_AUTH_TOKENS=a1b2c3d4e5f6@deno.land</code></pre>
<p>多个令牌看起来像这样：</p>
<pre class="text"><code>DENO_AUTH_TOKENS=a1b2c3d4e5f6@deno.land; f1e2d3c4b5a6@example.com：8080</code></pre>
<p>当 Deno 提取主机名与远程模块的主机名匹配的远程模块时，Deno 会将请求的
<code>Authorization</code> 标头设置为 <code>Bearer &#123;token&#125;</code>
的值。这允许远程服务器明白这个请求是一个被授权的请求，与一个特定的被授权的用户相关联，以提供对服务器上特定资源和模块的访问权限。</p>
<p>有关配置我们的环境以从私有 GitHub
存储库获取数据的更详细的使用指南和说明，请参阅<a href="https://deno.land/manual/linking_to_external_code/private">相关手册条目</a>。</p>
<h2 id="deno.test-的-exit-清理程序"><strong><code>Deno.test</code> 的
Exit 清理程序</strong></h2>
<p><code>Deno.test</code> API 已经拥有了<a href="https://deno.land/manual@v1.7.5/testing#resource-and-async-op-sanitizers">两个清理程序</a>帮助我们确保我们的代码没有泄露运营机密或是资源，例如，所有打开的文件或网络请求都会在测试代码结束前被关闭，并且不会有更多的系统调用出现。</p>
<p>Deno 1.8 版本添加了一个新的清理程序，保证测试的代码不会调用
<code>Deno.exit()</code>。流氓的 exit
声明可能表示错误的阳性测试结果，并且经常被滥用或忘记删除。</p>
<p>这个清理程序默认为所有的测试启用，但是可以在测试定义中设置
<code>sanitizeExit</code> 布尔值为 <code>false</code> 以关闭：</p>
<div class="sourceCode" id="cb12"><pre class="sourceCode js"><code class="sourceCode javascript"><span id="cb12-1"><a href="#cb12-1" aria-hidden="true" tabindex="-1"></a>Deno<span class="op">.</span><span class="fu">test</span>(&#123;</span>
<span id="cb12-2"><a href="#cb12-2" aria-hidden="true" tabindex="-1"></a>    <span class="dt">name</span><span class="op">:</span> <span class="st">"false success"</span><span class="op">,</span></span>
<span id="cb12-3"><a href="#cb12-3" aria-hidden="true" tabindex="-1"></a>    <span class="fu">fn</span>() &#123;</span>
<span id="cb12-4"><a href="#cb12-4" aria-hidden="true" tabindex="-1"></a>        Deno<span class="op">.</span><span class="fu">exit</span>(<span class="dv">0</span>)<span class="op">;</span></span>
<span id="cb12-5"><a href="#cb12-5" aria-hidden="true" tabindex="-1"></a>    &#125;<span class="op">,</span></span>
<span id="cb12-6"><a href="#cb12-6" aria-hidden="true" tabindex="-1"></a>    <span class="dt">sanitizeExit</span><span class="op">:</span> <span class="kw">false</span><span class="op">,</span></span>
<span id="cb12-7"><a href="#cb12-7" aria-hidden="true" tabindex="-1"></a>&#125;)<span class="op">;</span></span>
<span id="cb12-8"><a href="#cb12-8" aria-hidden="true" tabindex="-1"></a><span class="co">// 这个测试不会被运行：</span></span>
<span id="cb12-9"><a href="#cb12-9" aria-hidden="true" tabindex="-1"></a>Deno<span class="op">.</span><span class="fu">test</span>(&#123;</span>
<span id="cb12-10"><a href="#cb12-10" aria-hidden="true" tabindex="-1"></a>    <span class="dt">name</span><span class="op">:</span> <span class="st">"failing test"</span><span class="op">,</span></span>
<span id="cb12-11"><a href="#cb12-11" aria-hidden="true" tabindex="-1"></a>    <span class="fu">fn</span>() &#123;</span>
<span id="cb12-12"><a href="#cb12-12" aria-hidden="true" tabindex="-1"></a>        <span class="cf">throw</span> <span class="kw">new</span> <span class="bu">Error</span>(<span class="st">"this test fails"</span>)<span class="op">;</span></span>
<span id="cb12-13"><a href="#cb12-13" aria-hidden="true" tabindex="-1"></a>    &#125;<span class="op">,</span></span>
<span id="cb12-14"><a href="#cb12-14" aria-hidden="true" tabindex="-1"></a>&#125;)<span class="op">;</span></span></code></pre></div>
<p>你可以试着自己去运行这段代码：<code>deno test https://deno.land/posts/v1.8/exit_sanitizer.ts</code>。</p>
<h3 id="deno.permissions-api-现在进入稳定状态"><code>Deno.permissions</code>
API 现在进入稳定状态</h3>
<p>Deno
的安全模型是基于权限的。当前，只有在启动应用程序时才能授予这些权限。这在大多数情况下都适用，但是在某些情况下，在运行时请求或撤消权限会带来更好的用户体验。</p>
<p>在 Deno 1.8 中，我们有了一个稳定的 API 可以去
<code>query</code>、<code>request</code> 和 <code>revoke</code>
权限。这些 API 包含在 <code>Deno.permissions</code>
对象中。这是一个示例：</p>
<div class="sourceCode" id="cb13"><pre class="sourceCode js"><code class="sourceCode javascript"><span id="cb13-1"><a href="#cb13-1" aria-hidden="true" tabindex="-1"></a><span class="kw">function</span> <span class="fu">homedir</span>() &#123;</span>
<span id="cb13-2"><a href="#cb13-2" aria-hidden="true" tabindex="-1"></a>    <span class="cf">try</span> &#123;</span>
<span id="cb13-3"><a href="#cb13-3" aria-hidden="true" tabindex="-1"></a>        <span class="bu">console</span><span class="op">.</span><span class="fu">log</span>(<span class="vs">`你的目录是：</span><span class="sc">$&#123;</span>Deno<span class="op">.</span><span class="at">env</span><span class="op">.</span><span class="fu">get</span>(<span class="st">"HOME"</span>)<span class="sc">&#125;</span><span class="vs">`</span>)<span class="op">;</span></span>
<span id="cb13-4"><a href="#cb13-4" aria-hidden="true" tabindex="-1"></a>    &#125; <span class="cf">catch</span> (err) &#123;</span>
<span id="cb13-5"><a href="#cb13-5" aria-hidden="true" tabindex="-1"></a>        <span class="bu">console</span><span class="op">.</span><span class="fu">log</span>(<span class="vs">`无法获取目录：</span><span class="sc">$&#123;</span>err<span class="sc">&#125;</span><span class="vs">`</span>)<span class="op">;</span></span>
<span id="cb13-6"><a href="#cb13-6" aria-hidden="true" tabindex="-1"></a>    &#125;</span>
<span id="cb13-7"><a href="#cb13-7" aria-hidden="true" tabindex="-1"></a>&#125;</span>
<span id="cb13-8"><a href="#cb13-8" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb13-9"><a href="#cb13-9" aria-hidden="true" tabindex="-1"></a><span class="co">// 尝试获取主目录（此操作将失败，因为还没有 env 的权限）。</span></span>
<span id="cb13-10"><a href="#cb13-10" aria-hidden="true" tabindex="-1"></a><span class="fu">homedir</span>()<span class="op">;</span></span>
<span id="cb13-11"><a href="#cb13-11" aria-hidden="true" tabindex="-1"></a><span class="kw">const</span> &#123;granted&#125; <span class="op">=</span> <span class="cf">await</span> Deno<span class="op">.</span><span class="at">permissions</span><span class="op">.</span><span class="fu">request</span>(&#123;<span class="dt">name</span><span class="op">:</span> <span class="st">"env"</span>&#125;)<span class="op">;</span></span>
<span id="cb13-12"><a href="#cb13-12" aria-hidden="true" tabindex="-1"></a><span class="cf">if</span> (granted) &#123;</span>
<span id="cb13-13"><a href="#cb13-13" aria-hidden="true" tabindex="-1"></a>    <span class="bu">console</span><span class="op">.</span><span class="fu">log</span>(<span class="vs">`你被授予了 "env" 权限`</span>)<span class="op">;</span></span>
<span id="cb13-14"><a href="#cb13-14" aria-hidden="true" tabindex="-1"></a>&#125; <span class="cf">else</span> &#123;</span>
<span id="cb13-15"><a href="#cb13-15" aria-hidden="true" tabindex="-1"></a>    <span class="bu">console</span><span class="op">.</span><span class="fu">log</span>(<span class="vs">`你没有被授予 "env" 权限`</span>)<span class="op">;</span></span>
<span id="cb13-16"><a href="#cb13-16" aria-hidden="true" tabindex="-1"></a>&#125;</span>
<span id="cb13-17"><a href="#cb13-17" aria-hidden="true" tabindex="-1"></a><span class="co">// 尝试获取主目录（如果用户授权，则应成功）</span></span>
<span id="cb13-18"><a href="#cb13-18" aria-hidden="true" tabindex="-1"></a><span class="fu">homedir</span>()<span class="op">;</span></span>
<span id="cb13-19"><a href="#cb13-19" aria-hidden="true" tabindex="-1"></a><span class="cf">await</span> Deno<span class="op">.</span><span class="at">permissions</span><span class="op">.</span><span class="fu">revoke</span>(&#123;<span class="dt">name</span><span class="op">:</span> <span class="st">"env"</span>&#125;)<span class="op">;</span></span>
<span id="cb13-20"><a href="#cb13-20" aria-hidden="true" tabindex="-1"></a><span class="co">// 尝试获取主目录（此操作将失败，因为权限被撤销了）</span></span>
<span id="cb13-21"><a href="#cb13-21" aria-hidden="true" tabindex="-1"></a><span class="fu">homedir</span>()<span class="op">;</span></span></code></pre></div>
<p>你可以自己尝试运行一下这段脚本：<code>deno run https://deno.land/posts/v1.8/permission_api.ts</code>。</p>
<h3 id="deno.link-和-deno.symlink-api-现在进入稳定状态"><code>Deno.link</code>
和 <code>Deno.symlink</code> API 现在进入稳定状态</h3>
<p>这个发行还提供了有关符号链接的四个 API 的稳定版本：</p>
<ul>
<li><code>Deno.link</code></li>
<li><code>Deno.linkSync</code></li>
<li><code>Deno.symlink</code></li>
<li><code>Deno.symlinkSync</code></li>
</ul>
<p>在这些 API
的稳定化之前，他们通过了一项安全评估，并且我们需要特定的权限去使用它。</p>
<p><code>Deno.link</code> 和 <code>Deno.linkSync</code>
需要对源文件和目标路径的读写权限。</p>
<p><code>Deno.symlink</code> 和 <code>Deno.symlinkSync</code>
需要目标路径的写权限。</p>
<h3 id="更细致的-deno.metrics">更细致的 <code>Deno.metrics</code></h3>
<p>随着 Deno
变得更加稳定，对于开发者来说，使用简便的方法来检测其应用程序变得越来越重要。这从最低级别（在运行时本身）开始。在
Deno 中，JS 中的所有特权操作（转到 Rust 的那些操作）都是通过 JS 和 Rust
之间的单个中心接口来完成的。我们称通过该接口的请求为
<code>ops</code>。例如，调用 <code>Deno.open</code>
会在特权端调用<code>op_open_async</code> 操作，返回打开文件的资源
ID（或错误）。</p>
<p>两年多以前，在 2018 年 10 月 11 日，我们提供了一种查看 Rust 和 JS
之间所有操作的指标的方法：<code>Deno.metrics</code>。该 API
当前会暴露出已启动和已完成的同步和异步操作的数量，以及通过操作接口发送的数据量。到目前为止，这仅限于所有不同操作的组合数据。我们没有办法找出<strong>某个</strong>操作被调用的次数
—— 只能获取所有操作的数据。</p>
<p>当使用 <code>--unstable</code> 运行这段代码时候，此版本会向
<code>Deno.metrics</code> 中添加一个名为 <code>ops</code>
的新字段。此字段会包含每个操作的信息，涉及 API 的调用频率以及通过 API
传输的数据量。这允许对运行时进行更精细的检测。</p>
<p>这是示例：</p>
<pre class="shell"><code>$ deno --unstable
Deno 1.8.0
exit using ctrl+d or close()
&gt; Deno.metrics().ops["op_open_async"]
undefined
&gt; await Deno.open("./README.md")
File &#123;&#125;
&gt; Deno.metrics().ops["op_open_async"]
&#123;
  opsDispatched: 1,
  opsDispatchedSync: 0,
  opsDispatchedAsync: 1,
  opsDispatchedAsyncUnref: 0,
  opsCompleted: 1,
  opsCompletedSync: 0,
  opsCompletedAsync: 1,
  opsCompletedAsyncUnref: 0,
  bytesSentControl: 54,
  bytesSentData: 0,
  bytesReceived: 22
&#125;</code></pre>
<p>在即将发布的版本中，<code>Deno.test</code>
中的异步操作清理工具将使用此新信息，以在测试完成之前未完成异步操作时提供更多可操作的错误。我们已经看到此功能用于检测应用程序并将数据通过管道传输到监视软件中：</p>
<figure>
<img src="https://raw.githubusercontent.com/PassionPenguin/picgo-database/main/v2-4fae6d12908d01b0d324f9594d7fae10_1440w.jpg" alt="一个网站表格显示着 Deno.metrics 的输出">
<figcaption aria-hidden="true">一个网站表格显示着
<code>Deno.metrics</code> 的输出</figcaption>
</figure>
<h3 id="deno-fmt-对-json-的支持"><code>deno fmt</code> 对 JSON
的支持</h3>
<p><code>deno fmt</code> 现在可以格式化 <code>.json</code> 和
<code>.jsonc</code> 文件，就像是 JS 或 TS 文件一样，格式化工具会同时将
Markdown 文件中的 JSON 和 JSONC 代码格式化掉。</p>
<h2 id="deno.emit-对-iife-捆绑包的支持"><code>Deno.emit</code> 对 IIFE
捆绑包的支持</h2>
<p>内置捆绑程序现在可以发出立即调用函数表达式（IIFE）格式的捆绑包。</p>
<p>默认情况下，输出格式仍然是 <code>esm</code>，但是用户可以通过将
<code>EmitOptions.bundle</code> 选项设置为 <code>iife</code>
来更改它：</p>
<div class="sourceCode" id="cb15"><pre class="sourceCode js"><code class="sourceCode javascript"><span id="cb15-1"><a href="#cb15-1" aria-hidden="true" tabindex="-1"></a><span class="kw">const</span> &#123;files&#125; <span class="op">=</span> <span class="cf">await</span> Deno<span class="op">.</span><span class="fu">emit</span>(<span class="st">"/a.ts"</span><span class="op">,</span> &#123;</span>
<span id="cb15-2"><a href="#cb15-2" aria-hidden="true" tabindex="-1"></a>    <span class="dt">bundle</span><span class="op">:</span> <span class="st">"iife"</span><span class="op">,</span></span>
<span id="cb15-3"><a href="#cb15-3" aria-hidden="true" tabindex="-1"></a>    <span class="dt">sources</span><span class="op">:</span> &#123;</span>
<span id="cb15-4"><a href="#cb15-4" aria-hidden="true" tabindex="-1"></a>        <span class="st">"/a.ts"</span><span class="op">:</span> <span class="vs">`import &#123; b &#125; from "./b.ts";</span></span>
<span id="cb15-5"><a href="#cb15-5" aria-hidden="true" tabindex="-1"></a><span class="vs">        console.log(b);`</span><span class="op">,</span></span>
<span id="cb15-6"><a href="#cb15-6" aria-hidden="true" tabindex="-1"></a>        <span class="st">"/b.ts"</span><span class="op">:</span> <span class="vs">`export const b = "b";`</span><span class="op">,</span></span>
<span id="cb15-7"><a href="#cb15-7" aria-hidden="true" tabindex="-1"></a>    &#125;<span class="op">,</span></span>
<span id="cb15-8"><a href="#cb15-8" aria-hidden="true" tabindex="-1"></a>&#125;)<span class="op">;</span></span>
<span id="cb15-9"><a href="#cb15-9" aria-hidden="true" tabindex="-1"></a><span class="bu">console</span><span class="op">.</span><span class="fu">log</span>(files[<span class="st">"deno:///bundle.js"</span>])<span class="op">;</span></span></code></pre></div>
<p>结果是：</p>
<div class="sourceCode" id="cb16"><pre class="sourceCode js"><code class="sourceCode javascript"><span id="cb16-1"><a href="#cb16-1" aria-hidden="true" tabindex="-1"></a>(<span class="kw">function</span> () &#123;</span>
<span id="cb16-2"><a href="#cb16-2" aria-hidden="true" tabindex="-1"></a>    <span class="kw">const</span> b <span class="op">=</span> <span class="st">"b"</span><span class="op">;</span></span>
<span id="cb16-3"><a href="#cb16-3" aria-hidden="true" tabindex="-1"></a>    <span class="bu">console</span><span class="op">.</span><span class="fu">log</span>(b)<span class="op">;</span></span>
<span id="cb16-4"><a href="#cb16-4" aria-hidden="true" tabindex="-1"></a>    <span class="cf">return</span> &#123;&#125;<span class="op">;</span></span>
<span id="cb16-5"><a href="#cb16-5" aria-hidden="true" tabindex="-1"></a>&#125;)()<span class="op">;</span></span></code></pre></div>
<p>你可以自己运行下这个：<code>deno run --unstable https://deno.land/posts/v1.8/emit_iife.ts</code>。</p>
<p>这对于为不支持ESM的较旧浏览器创建捆绑包特别有用。</p>
<h3 id="deno-lsp-现在进入了稳定状态"><code>deno lsp</code>
现在进入了稳定状态</h3>
<p>在过去的几个月中，我们一直在努力更新着旧的 VS Code 编辑器集成（Deno
扩展）。旧的扩展名仅适用于 VS Code，而且解析的类型并不总是与 Deno CLI
中的类型匹配。</p>
<p>在 Deno 1.6 中，我们在 canary 版本中发布了 <code>deno lsp</code> ——
Deno 的内置语言服务器。LSP 使我们能够从单个代码库向所有支持 LSP
的编辑器提供编辑器集成。内置的语言服务器与 Deno CLI
的其余部分基于相同的体系结构，也因此，它提供的 TypeScript 诊断与 CLI
的其余部分相同。</p>
<p>两周前，在 Deno 1.7.5 中，我们稳定了 <code>deno lsp</code>
并切换了我们的 <a href="https://marketplace.visualstudio.com/items?itemName=denoland.vscode-deno">VS
Code
扩展名</a>来使用它。到目前为止，我们已经收到了很好的反馈，并将努力解决所有报告的问题。如果你在扩展程序中遇到问题，请在我们的问题跟踪器中报告该问题，毕竟我们无法解决我们不知道的问题。</p>
<p>除了官方的 VS Code 集成以外，我们还创建了更多基于
<code>deno lsp</code> 的社区集成：</p>
<ul>
<li>带有 CoC 的 Vim：<a href="https://github.com/fannheyward/coc-deno">https://github.com/fannheyward/coc-deno</a></li>
<li>Neovim：<a href="https://github.com/neovim/nvim-lspconfig/blob/master/CONFIG.md#denols">https://github.com/neovim/nvim-lspconfig/blob/master/CONFIG.md#denols</a></li>
<li>Emacs：<a href="https://emacs-lsp.github.io/lsp-mode/page/lsp-deno/">https://emacs-lsp.github.io/lsp-mode/page/lsp-deno/</a></li>
<li>Kakoune：<a href="https://deno.land/manual/getting_started/setup_your_environment#example-for-kakoune">https://deno.land/manual/getting_started/setup_your_environment#example-for-kakoune</a></li>
<li>Sublime：<a href="https://deno.land/manual/getting_started/setup_your_environment#example-for-sublime-text">https://deno.land/manual/getting_started/setup_your_environment#example-for-sublime-text</a></li>
</ul>
<h3 id="typescript-4.2">TypeScript 4.2</h3>
<p>Deno 1.8 捆绑了 TypeScript 的最新稳定版本。</p>
<p>有关 Typescript 4.2 中新功能的更多信息，请参见 <a href="https://devblogs.microsoft.com/typescript/announcing-typescript-4-2/">TypeScript
4.2</a></p>]]></content>
      <categories>
        <category>Computer Science</category>
        <category>Backend</category>
        <category>Deno</category>
      </categories>
      <tags>
        <tag>Computer Science</tag>
        <tag>Backend</tag>
        <tag>Deno</tag>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title>为什么我对 TypeScript 黑转粉？一个 JS 开发者的深情自白</title>
    <url>/2021/03/04/computer%20science/frontend/how-an-anti-typescript-javascript-developer-like-me-became-a-typescript-fan/</url>
    <content><![CDATA[<blockquote>
<ul>
<li>原文地址：<a href="https://chiragswadia.medium.com/how-an-anti-typescript-javascript-developer-like-me-became-a-typescript-fan-a4e043151ad7">How
an Anti-TypeScript “JavaScript developer” like me became a TypeScript
fan</a></li>
<li>原文作者：<a href="https://chiragswadia.medium.com/">chiragswadia</a></li>
<li>译者：<a href="https://github.com/PassionPenguin">霜羽
Hoarfroster</a></li>
<li>校对者：<a href="https://github.com/itcodes">itcodes</a>、<a href="https://github.com/husiyu">husiyu</a></li>
</ul>
</blockquote>
<p>在这篇博客文章中，我将会讲述我是如何从一名 TypeScript
黑粉的开发者转变到如今不想回到原生 JavaScript 世界的开发者的旅程
🚀，也许我的想法可以帮助和我几年前一样境遇的人们。</p>
<h1 id="为什么我曾经是-typescript-的黑粉"><strong>为什么我曾经是
TypeScript 的黑粉？</strong></h1>
<p>我一直觉得给函数和变量设定类型，满足 TypeScript
编译器的各种检查是一种过度的设计，并且没有任何意义上的好处。而且这个设计也让我编写程序的速度很慢，也是因为我经常会遇到一些作为一名新人所难以理解的编译错误。我挠头三千尺，白发飘落，试图去找出问题所在，也同时增生了一丝惆怅与挫败。我开始讨厌
TypeScript 这门语言了。</p>
<p>另一个原因是 TypeScript 中诸如<a href="https://www.typescriptlang.org/docs/handbook/generics.html">范型</a>之类的概念我一开始觉得很难理解。我开始觉得自己又深陷
<strong>Java</strong>
世界那般的泥潭，似乎每句代码的输入都是强类型并且令我极度厌烦的。当我开始学习
TypeScript 时，即使像下面这样的简单代码也足以让我感到恐惧。</p>
<figure>
<img src="https://miro.medium.com/max/1544/1*ccNIwcBOISh4ZJ7kAuaY4A.png" alt="TypeScript 泛型示例">
<figcaption aria-hidden="true">TypeScript 泛型示例</figcaption>
</figure>
<p>由于上述的原因，即使我通过观看一些在线的教程或是尝试去阅读书籍来学习
TypeScript，我也从未主导或参与过任何使用 TypeScript
编写的企业应用程序的开发之中。实际上，我过去常常选择 JavaScript 而不是
TypeScript（如果可以选择）去完成家庭作业这一公司面试过程的一部分
🙈。</p>
<p>但是，当我转任现职时，我失去了使用 JavaScript
的权利！因为我将要处理的所有应用程序都是用 TypeScript 编写的（JavaScript
部分都是些旧代码）。我对 TypeScript
的仇恨，与日俱增！但在几个月后，我终于明白了为什么会有人更喜欢
TypeScript，而不是喜欢 JavaScript 的原因，明白了使用 TypeScript
的好处和一些激励我去尝试使用的的理由。这些内容我将在下面的部分中列出：</p>
<h2 id="我成为-typescript-粉丝的三大原因"><strong>我成为 TypeScript
粉丝的三大原因</strong></h2>
<h3 id="避免无效状态的出现-拥有详尽的检查"><strong>避免无效状态的出现
&amp; 拥有详尽的检查</strong></h3>
<p>这就是我喜欢 TypeScript
的主要原因。如果你想了解更多这个概念的信息，我建议你看下面的视频 ——
虽说它说的是 Elm 语言，但该概念也适用于 TypeScript 语言。</p>
<figure>
<img src="https://youtu.be/IcgmSRJHu_8" alt="Making Impossible State Impossible">
<figcaption aria-hidden="true">Making Impossible State
Impossible</figcaption>
</figure>
<p>如果你想查看一些有关如何在 React 应用程序中利用 TypeScript
来避免程序出现无效状态的示例，我建议你去阅读一下下面的博客文章：</p>
<ol type="1">
<li><a href="https://zohaib.me/leverage-union-types-in-typescript-to-avoid-invalid-state/">交通信号灯系统是如何处理无效状态的现实示例
🚦</a></li>
<li><a href="https://dev.to/housinganywhere/matching-your-way-consistent-states-1oag">带有加载中、已加载和加载错误状态的
React 组件 ⚛️</a></li>
</ol>
<h3 id="及早发现错误"><strong>及早发现错误</strong></h3>
<p>在使用 JavaScript
时，我多次遇到过由于在前端没有进行类型检查而在生产环境发现 bug
的情况。这些 bug 本可以被避免，并且可以在编译时被 TypeScript
编译器发现，这样可以节省研发和 QA 的工作周期。</p>
<p>使用
TypeScript，一切都保持最初定义的方式。如果将变量声明为布尔型，则它将始终是布尔型，并且不会变成数字。这增加了代码按照最初预期的方式工作的可能性。简而言之，代码是可预测的！</p>
<h3 id="丰富的-ide-支持-易于重构"><strong>丰富的 IDE 支持 &amp;
易于重构</strong></h3>
<p>集成开发环境（IDE）让有关类型的信息更加有用 —— 我们可以在 IDE
中使用上代码导航和自动完成等功能，并借助这些准确的建议修复错误。我们还可以在输入代码时获得反馈：编辑器会在错误发生时立即标记出错误，包括与类型相关的错误。这些功能可帮助开发者写出可维护的代码，并带来巨大的生产力提升
🚀。</p>
<p>关于重构，比如引入一个新状态或者移除应用程序正在使用的不需要的状态，如果在过程中我们忘记了要去更新部分引用，TypeScript
编译器就会进行警告。重构后的应用程序将像重构之前一样工作，不用担心兼容问题。这能让你对重构充满信心。</p>
<h2 id="结论"><strong>结论</strong></h2>
<p>总而言之，使用 TypeScript
有许多的好处（如果你还没有这样做的话），而以上的几点就是我的主要动力，也是因为这些动力，我对
TypeScript 黑转粉了。</p>
<p>如果你是 TypeScript
的初学者或想提高你的知识，那么我可以推荐一些书：</p>
<ol type="1">
<li><a href="https://amzn.to/37YslR2">TypeScript
50课</a>（是个会员链接）</li>
<li><a href="https://exploringjs.com/tackling-ts/">使用
TypeScript</a></li>
</ol>
<p>让我们一起干杯! 🙂</p>]]></content>
      <categories>
        <category>Computer Science</category>
        <category>Backend</category>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>Computer Science</tag>
        <tag>Backend</tag>
        <tag>JavaScript</tag>
        <tag>TypeScript</tag>
        <tag>Frontend</tag>
      </tags>
  </entry>
  <entry>
    <title>自适应 CSS 栅格：自由布局的最终版本</title>
    <url>/2021/03/02/computer%20science/frontend/understanding-css-grid/</url>
    <content><![CDATA[<blockquote>
<ul>
<li>原文地址：<a href="https://medium.muz.li/understanding-css-grid-ce92b7aa67cb">Responsive
CSS Grid: The Ultimate Layout Freedom</a></li>
<li>原文作者：<a href="https://medium.com/@christinevallaure">Christine
Vallaure</a></li>
<li>译者：<a href="https://github.com/PassionPenguin">霜羽
Hoarfroster</a></li>
<li>校对者：<a href="https://github.com/zenblo">zenblo</a>、<a href="https://github.com/Chorer">Chorer</a>、<a href="https://github.com/lsvih">lsvih</a></li>
</ul>
</blockquote>
<p><img src="https://cdn-images-1.medium.com/max/2800/0*MJfiLHUiFLi5M2sm.png"></p>
<p>CSS 栅格布局（Grid）是一种全新的在 Web
上创建二维布局的方法。我们仅需几行 CSS，就可以创建一个之前不用
JavaScript
根本不可能实现的栅格布局。我们不需要任何插件或复杂的安装步骤，不需要繁琐的附加文件，同时也不需要局限于
12 列的栅格布局（译者注：指 Bootstrap 提供的 12 栅格系统）。</p>
<h2 id="我们可以使用什么栅格">我们可以使用什么栅格？</h2>
<p>简而言之：我们实际上可以使用<strong>几乎所有能够想到的栅格布局</strong>，并且还不限于此。我们可以自由地选择不同栅格的尺寸、大小和位置。你可以在<a href="https://gridbyexample.com/examples/">栅格示例</a>中找到最常见的带有标记的栅格的概述。</p>
<h3 id="让我们从构建示例的-html-标记开始吧">让我们从构建示例的 HTML
标记开始吧！</h3>
<p>一个类名为 <code>container</code> 的 <code>div</code> 元素容纳了 5
个子 <code>div</code> 元素，或称之为项目（当然，可以比 5
个更多或者更少）。如果你愿意，我们可以直接从 <a href="https://codepen.io/chrisvall/pen/YJJdxQ">CodePen 中的 HTML 和 CSS
标记</a>代码入手。</p>
<div class="sourceCode" id="cb1"><pre class="sourceCode html"><code class="sourceCode html"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a><span class="kw">&lt;div</span> <span class="er">class</span><span class="ot">=</span><span class="st">"container"</span><span class="kw">&gt;</span></span>
<span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a>    <span class="kw">&lt;div</span> <span class="er">class</span><span class="ot">=</span><span class="st">"item color-1"</span><span class="kw">&gt;</span>item-1<span class="kw">&lt;/div&gt;</span></span>
<span id="cb1-3"><a href="#cb1-3" aria-hidden="true" tabindex="-1"></a>    <span class="kw">&lt;div</span> <span class="er">class</span><span class="ot">=</span><span class="st">"item color-2"</span><span class="kw">&gt;</span>item-2<span class="kw">&lt;/div&gt;</span></span>
<span id="cb1-4"><a href="#cb1-4" aria-hidden="true" tabindex="-1"></a>    <span class="kw">&lt;div</span> <span class="er">class</span><span class="ot">=</span><span class="st">"item color-3"</span><span class="kw">&gt;</span>item-3<span class="kw">&lt;/div&gt;</span></span>
<span id="cb1-5"><a href="#cb1-5" aria-hidden="true" tabindex="-1"></a>    <span class="kw">&lt;div</span> <span class="er">class</span><span class="ot">=</span><span class="st">"item color-4"</span><span class="kw">&gt;</span>item-4<span class="kw">&lt;/div&gt;</span></span>
<span id="cb1-6"><a href="#cb1-6" aria-hidden="true" tabindex="-1"></a>    <span class="kw">&lt;div</span> <span class="er">class</span><span class="ot">=</span><span class="st">"item color-5"</span><span class="kw">&gt;</span>item-5<span class="kw">&lt;/div&gt;</span></span>
<span id="cb1-7"><a href="#cb1-7" aria-hidden="true" tabindex="-1"></a><span class="kw">&lt;/div&gt;</span></span></code></pre></div>
<figure>
<img src="https://cdn-images-1.medium.com/max/2800/0*lCX1UQBdGhuXCuJl.jpeg" alt="我额外添加了一些 CSS 代码让大家更好理解，与 Grid 实现毫无关系">
<figcaption aria-hidden="true">我额外添加了一些 CSS
代码让大家更好理解，与 Grid 实现毫无关系</figcaption>
</figure>
<h3 id="基础在-css-中设置栅格和行列">基础：在 CSS 中设置栅格和行列</h3>
<p>在 CSS 中，我们可以通过 <code>display: grid</code> 定义将
<code>.container</code> 类的元素变为栅格布局。通过使用
<code>grid-template-columns</code>，我们划分了所需的列（本例中将划分 5
列，每列设置为 250px）。通过使用
<code>grid-template-rows</code>，我们可以设置行的高度（如果需要的话），本例中是
150px。完成以上步骤之后，我们就实现了第一个栅格布局！</p>
<div class="sourceCode" id="cb2"><pre class="sourceCode css"><code class="sourceCode css"><span id="cb2-1"><a href="#cb2-1" aria-hidden="true" tabindex="-1"></a><span class="fu">.container</span> &#123;</span>
<span id="cb2-2"><a href="#cb2-2" aria-hidden="true" tabindex="-1"></a>    <span class="kw">display</span>: grid<span class="op">;</span></span>
<span id="cb2-3"><a href="#cb2-3" aria-hidden="true" tabindex="-1"></a>    <span class="kw">grid-template-columns</span>: <span class="dv">250</span><span class="dt">px</span> <span class="dv">250</span><span class="dt">px</span> <span class="dv">250</span><span class="dt">px</span> <span class="dv">250</span><span class="dt">px</span> <span class="dv">250</span><span class="dt">px</span><span class="op">;</span></span>
<span id="cb2-4"><a href="#cb2-4" aria-hidden="true" tabindex="-1"></a>    <span class="kw">grid-template-rows</span>: <span class="dv">150</span><span class="dt">px</span><span class="op">;</span></span>
<span id="cb2-5"><a href="#cb2-5" aria-hidden="true" tabindex="-1"></a>&#125;</span>
<span id="cb2-6"><a href="#cb2-6" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb2-7"><a href="#cb2-7" aria-hidden="true" tabindex="-1"></a><span class="co">/* 缩写：</span></span>
<span id="cb2-8"><a href="#cb2-8" aria-hidden="true" tabindex="-1"></a><span class="co"> grid-template-columns: repeat(5, 250px); */</span> </span></code></pre></div>
<p><img src="https://cdn-images-1.medium.com/max/2800/0*yYYJTjLzTLzogzyu.jpeg"></p>
<h3 id="设置间隔">设置间隔</h3>
<p>我们可以使用 <code>grip-gap</code> 来设置每一项之间的间隔，也可以使用
<code>column-gap</code> 和 <code>row-gap</code>
分别设置水平和垂直的间隔。顺便提一句，我们可以使用所有通用单位，例如使用
<code>px</code> 用于设置固定的间隔，或使用 <code>％</code>
来设置自适应的间隔。</p>
<div class="sourceCode" id="cb3"><pre class="sourceCode css"><code class="sourceCode css"><span id="cb3-1"><a href="#cb3-1" aria-hidden="true" tabindex="-1"></a><span class="fu">.container</span> &#123;</span>
<span id="cb3-2"><a href="#cb3-2" aria-hidden="true" tabindex="-1"></a>    <span class="kw">display</span>: grid<span class="op">;</span></span>
<span id="cb3-3"><a href="#cb3-3" aria-hidden="true" tabindex="-1"></a>    <span class="kw">grid-template-columns</span>: <span class="fu">repeat(</span><span class="dv">5</span><span class="op">,</span> <span class="dv">250</span><span class="dt">px</span><span class="fu">)</span><span class="op">;</span></span>
<span id="cb3-4"><a href="#cb3-4" aria-hidden="true" tabindex="-1"></a>    <span class="kw">grid-template-rows</span>: <span class="dv">150</span><span class="dt">px</span><span class="op">;</span></span>
<span id="cb3-5"><a href="#cb3-5" aria-hidden="true" tabindex="-1"></a>    <span class="kw">grid-gap</span>: <span class="dv">30</span><span class="dt">px</span><span class="op">;</span></span>
<span id="cb3-6"><a href="#cb3-6" aria-hidden="true" tabindex="-1"></a>&#125;</span></code></pre></div>
<figure>
<img src="https://cdn-images-1.medium.com/max/2800/0*CR0ENpYQu_-fNCuD.png" alt="需要注意的是容器的左边会将间隔减半，因此在本例中他们的间隔是 15px（对大多数其它的栅格同理）">
<figcaption aria-hidden="true">需要注意的是容器的左边会将间隔减半，因此在本例中他们的间隔是
15px（对大多数其它的栅格同理）</figcaption>
</figure>
<p><small>译者注：在 Chrome 91，Safari 14.0.2，Firefox 86.0a1
均未有此现象，估摸为原文笔误或版本不同</small></p>
<h3 id="使用-fr-自动填充剩余空间">使用 <code>fr</code>
自动填充剩余空间</h3>
<p>这可是每一个设计师的梦想！我们可以使用
<strong>分数单位</strong>（Fractional Units）或简写
<code>fr</code>，根据我们自己的想法分配可用空间！例如，在这里，我们将屏幕空间划分为
6 个部分。 第一列占用空间的 1/6 = 1fr，第二列 3/6 = 3fr，第三列 2/6 =
2fr。当然，我们也可以根据需要添加 <code>grid-gap</code>。</p>
<div class="sourceCode" id="cb4"><pre class="sourceCode css"><code class="sourceCode css"><span id="cb4-1"><a href="#cb4-1" aria-hidden="true" tabindex="-1"></a><span class="fu">.container</span> &#123;</span>
<span id="cb4-2"><a href="#cb4-2" aria-hidden="true" tabindex="-1"></a>    <span class="kw">display</span>: grid<span class="op">;</span></span>
<span id="cb4-3"><a href="#cb4-3" aria-hidden="true" tabindex="-1"></a>    <span class="kw">grid-template-columns</span>: <span class="dv">1</span>fr <span class="dv">3</span>fr <span class="dv">2</span>fr<span class="op">;</span></span>
<span id="cb4-4"><a href="#cb4-4" aria-hidden="true" tabindex="-1"></a>&#125;</span></code></pre></div>
<p><img src="https://cdn-images-1.medium.com/max/2980/0*yh7hFOcFs43LM9q8.gif"></p>
<p>现在所有的行都是自适应的！</p>
<h3 id="混合使用-px-和-fr-构建自适应而又固定的列">混合使用
<code>px</code> 和 <code>fr</code> 构建自适应而又固定的列</h3>
<p><code>px</code> 和 <code>fr</code>
的按需同时使用可以让栅格适应可用的空间，这非常好用！</p>
<div class="sourceCode" id="cb5"><pre class="sourceCode css"><code class="sourceCode css"><span id="cb5-1"><a href="#cb5-1" aria-hidden="true" tabindex="-1"></a><span class="fu">.container</span> &#123;</span>
<span id="cb5-2"><a href="#cb5-2" aria-hidden="true" tabindex="-1"></a>    <span class="kw">display</span>: grid<span class="op">;</span></span>
<span id="cb5-3"><a href="#cb5-3" aria-hidden="true" tabindex="-1"></a>    <span class="kw">grid-template-columns</span>: <span class="dv">300</span><span class="dt">px</span> <span class="dv">3</span>fr <span class="dv">2</span>fr<span class="op">;</span></span>
<span id="cb5-4"><a href="#cb5-4" aria-hidden="true" tabindex="-1"></a>&#125;</span></code></pre></div>
<figure>
<img src="https://cdn-images-1.medium.com/max/2000/0*9buHg29Y9pG0bJir.gif" alt="第一列用了 px 去固定尺寸，而剩余的布局是自适应的">
<figcaption aria-hidden="true">第一列用了 <code>px</code>
去固定尺寸，而剩余的布局是自适应的</figcaption>
</figure>
<h3 id="排序上的绝对自由">排序上的绝对自由</h3>
<p>私以为，最棒的是在栅格中，我们可以自由设置每一项所占用的尺寸！我们可以用
<code>grid-column-start</code> 设置起点，并用
<code>grid-column-end</code> 设置终点，或采用缩写方式
<code>grid-column: startpoint / endpoint;</code>：</p>
<div class="sourceCode" id="cb6"><pre class="sourceCode css"><code class="sourceCode css"><span id="cb6-1"><a href="#cb6-1" aria-hidden="true" tabindex="-1"></a><span class="fu">.container</span> &#123;</span>
<span id="cb6-2"><a href="#cb6-2" aria-hidden="true" tabindex="-1"></a>    <span class="kw">display</span>: grid<span class="op">;</span></span>
<span id="cb6-3"><a href="#cb6-3" aria-hidden="true" tabindex="-1"></a>    <span class="kw">grid-template-columns</span>: <span class="dv">1</span>fr <span class="dv">3</span>fr <span class="dv">2</span>fr<span class="op">;</span></span>
<span id="cb6-4"><a href="#cb6-4" aria-hidden="true" tabindex="-1"></a>&#125;</span>
<span id="cb6-5"><a href="#cb6-5" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb6-6"><a href="#cb6-6" aria-hidden="true" tabindex="-1"></a><span class="fu">.item-1</span> &#123;</span>
<span id="cb6-7"><a href="#cb6-7" aria-hidden="true" tabindex="-1"></a>    <span class="kw">grid-column</span>: <span class="dv">1</span> / <span class="dv">4</span><span class="op">;</span></span>
<span id="cb6-8"><a href="#cb6-8" aria-hidden="true" tabindex="-1"></a>&#125;</span>
<span id="cb6-9"><a href="#cb6-9" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb6-10"><a href="#cb6-10" aria-hidden="true" tabindex="-1"></a><span class="fu">.item-5</span> &#123;</span>
<span id="cb6-11"><a href="#cb6-11" aria-hidden="true" tabindex="-1"></a>    <span class="kw">grid-column</span>: <span class="dv">3</span> / <span class="dv">4</span><span class="op">;</span></span>
<span id="cb6-12"><a href="#cb6-12" aria-hidden="true" tabindex="-1"></a>&#125;</span></code></pre></div>
<p><img src="https://cdn-images-1.medium.com/max/2800/0*fGVZP5_NMbf9UJs3.png"></p>
<p>别被栅格线所迷惑，它们总是在第一项的开始！</p>
<h3 id="同样适用于垂直或全区域的分布">同样适用于垂直或全区域的分布！</h3>
<p>在这方面 CSS Grid 耀眼十足，表现出了对比 Bootstrap 和 Co 的优越性 ——
借助
<code>grid-row</code>，每一项都可以定义任意的位置及宽度。正如我们将在下一个示例中看到的那样，这对于适应不同屏幕尺寸和设备具有绝对优势：</p>
<div class="sourceCode" id="cb7"><pre class="sourceCode css"><code class="sourceCode css"><span id="cb7-1"><a href="#cb7-1" aria-hidden="true" tabindex="-1"></a><span class="fu">.container</span> &#123;</span>
<span id="cb7-2"><a href="#cb7-2" aria-hidden="true" tabindex="-1"></a>    <span class="kw">display</span>: grid<span class="op">;</span></span>
<span id="cb7-3"><a href="#cb7-3" aria-hidden="true" tabindex="-1"></a>    <span class="kw">grid-template-columns</span>: <span class="dv">1</span>fr <span class="dv">3</span>fr <span class="dv">2</span>fr<span class="op">;</span></span>
<span id="cb7-4"><a href="#cb7-4" aria-hidden="true" tabindex="-1"></a>&#125;</span>
<span id="cb7-5"><a href="#cb7-5" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb7-6"><a href="#cb7-6" aria-hidden="true" tabindex="-1"></a><span class="fu">.item-2</span> &#123;</span>
<span id="cb7-7"><a href="#cb7-7" aria-hidden="true" tabindex="-1"></a>    <span class="kw">grid-row</span>: <span class="dv">1</span> / <span class="dv">3</span><span class="op">;</span></span>
<span id="cb7-8"><a href="#cb7-8" aria-hidden="true" tabindex="-1"></a>&#125;</span>
<span id="cb7-9"><a href="#cb7-9" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb7-10"><a href="#cb7-10" aria-hidden="true" tabindex="-1"></a><span class="fu">.item-1</span> &#123;</span>
<span id="cb7-11"><a href="#cb7-11" aria-hidden="true" tabindex="-1"></a>    <span class="kw">grid-column</span>: <span class="dv">1</span> / <span class="dv">4</span><span class="op">;</span></span>
<span id="cb7-12"><a href="#cb7-12" aria-hidden="true" tabindex="-1"></a>    <span class="kw">grid-row</span>: <span class="dv">3</span> / <span class="dv">4</span><span class="op">;</span></span>
<span id="cb7-13"><a href="#cb7-13" aria-hidden="true" tabindex="-1"></a>&#125;</span></code></pre></div>
<figure>
<img src="https://cdn-images-1.medium.com/max/2800/0*a3fS5-GjETjWhArV.png" alt="任何垂直方向上的宽度和位置">
<figcaption aria-hidden="true">任何垂直方向上的宽度和位置</figcaption>
</figure>
<h3 id="想要适应不同的屏幕尺寸和设备当然没问题">想要适应不同的屏幕尺寸和设备？当然没问题！</h3>
<p>CSS Grid
与常规栅格相比也具有明显的优势，根据屏幕大小，我们不仅可以通过媒体查询从自适应值切换到固定值，还可以调整整个项目的位置！</p>
<div class="sourceCode" id="cb8"><pre class="sourceCode css"><code class="sourceCode css"><span id="cb8-1"><a href="#cb8-1" aria-hidden="true" tabindex="-1"></a><span class="fu">.container</span> &#123;</span>
<span id="cb8-2"><a href="#cb8-2" aria-hidden="true" tabindex="-1"></a>    <span class="kw">display</span>: grid<span class="op">;</span></span>
<span id="cb8-3"><a href="#cb8-3" aria-hidden="true" tabindex="-1"></a>    <span class="kw">grid-template-columns</span>: <span class="dv">250</span><span class="dt">px</span> <span class="dv">3</span>fr <span class="dv">2</span>fr<span class="op">;</span></span>
<span id="cb8-4"><a href="#cb8-4" aria-hidden="true" tabindex="-1"></a>&#125;</span>
<span id="cb8-5"><a href="#cb8-5" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb8-6"><a href="#cb8-6" aria-hidden="true" tabindex="-1"></a><span class="fu">.item-1</span> &#123;</span>
<span id="cb8-7"><a href="#cb8-7" aria-hidden="true" tabindex="-1"></a>    <span class="kw">grid-column</span>: <span class="dv">1</span> / <span class="dv">4</span><span class="op">;</span></span>
<span id="cb8-8"><a href="#cb8-8" aria-hidden="true" tabindex="-1"></a>&#125;</span>
<span id="cb8-9"><a href="#cb8-9" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb8-10"><a href="#cb8-10" aria-hidden="true" tabindex="-1"></a><span class="fu">.item-2</span> &#123;</span>
<span id="cb8-11"><a href="#cb8-11" aria-hidden="true" tabindex="-1"></a>    <span class="kw">grid-row</span>: <span class="dv">2</span> / <span class="dv">4</span><span class="op">;</span></span>
<span id="cb8-12"><a href="#cb8-12" aria-hidden="true" tabindex="-1"></a>&#125;</span>
<span id="cb8-13"><a href="#cb8-13" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb8-14"><a href="#cb8-14" aria-hidden="true" tabindex="-1"></a><span class="im">@media</span> <span class="kw">only</span> <span class="dv">screen</span> <span class="kw">and</span> (<span class="kw">max-width</span>: <span class="dv">720</span><span class="dt">px</span>) &#123;</span>
<span id="cb8-15"><a href="#cb8-15" aria-hidden="true" tabindex="-1"></a>    <span class="fu">.container</span> &#123;</span>
<span id="cb8-16"><a href="#cb8-16" aria-hidden="true" tabindex="-1"></a>        <span class="kw">grid-template-columns</span>: <span class="dv">1</span>fr <span class="dv">1</span>fr<span class="op">;</span></span>
<span id="cb8-17"><a href="#cb8-17" aria-hidden="true" tabindex="-1"></a>    &#125;</span>
<span id="cb8-18"><a href="#cb8-18" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb8-19"><a href="#cb8-19" aria-hidden="true" tabindex="-1"></a>    <span class="fu">.item-1</span> &#123;</span>
<span id="cb8-20"><a href="#cb8-20" aria-hidden="true" tabindex="-1"></a>        <span class="kw">grid-column</span>: <span class="dv">1</span> / <span class="dv">3</span><span class="op">;</span></span>
<span id="cb8-21"><a href="#cb8-21" aria-hidden="true" tabindex="-1"></a>        <span class="kw">grid-row</span>: <span class="dv">2</span> / <span class="dv">3</span><span class="op">;</span></span>
<span id="cb8-22"><a href="#cb8-22" aria-hidden="true" tabindex="-1"></a>    &#125;</span>
<span id="cb8-23"><a href="#cb8-23" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb8-24"><a href="#cb8-24" aria-hidden="true" tabindex="-1"></a>    <span class="fu">.item-2</span> &#123;</span>
<span id="cb8-25"><a href="#cb8-25" aria-hidden="true" tabindex="-1"></a>        <span class="kw">grid-row</span>: <span class="dv">1</span> / <span class="dv">1</span><span class="op">;</span></span>
<span id="cb8-26"><a href="#cb8-26" aria-hidden="true" tabindex="-1"></a>    &#125;</span>
<span id="cb8-27"><a href="#cb8-27" aria-hidden="true" tabindex="-1"></a>&#125;</span></code></pre></div>
<p><img src="https://cdn-images-1.medium.com/max/2856/0*zF54G2_cLwYLyNh-.gif"></p>
<h2 id="浏览器支持">浏览器支持</h2>
<p>现在，所有现代浏览器（Safari、Chrome、Firefox、Edge）都原生地支持 CSS
Grid。凭借 87.85% 的全球支持率（译者注：截止至译文发布时，支持率已达到
95.47％），CSS Grid 已经成为 Boostrap 和 Co 的替代品。</p>
<figure>
<img src="https://github.com/PassionPenguin/picgo-database/blob/main/understanding-css-grid-caniuse.com__search=CSS%2520Grid.png?raw=true" alt="2021 年 3 月的状态，数据来自 caniuse.com">
<figcaption aria-hidden="true">2021 年 3 月的状态，数据来自 <a href="https://caniuse.com/#search=CSS%20Grid">caniuse.com</a></figcaption>
</figure>
<h2 id="css-栅格的实践案例">CSS 栅格的实践案例</h2>
<ul>
<li><a href="http://www.christinevallaure.com">christinevallaure.com,</a>，UX/UI
设计</li>
<li><a href="https://moonlearning.io/">moonlearning.io</a>，UX/UI
在线课程</li>
<li><a href="https://slack.com/intl/de-de/">Slack</a>，企业网站</li>
<li><a href="https://medium.com/">Medium</a>，原文发布的地方</li>
<li><a href="https://photo.skylerhughes.com/">Skyler
Hughes</a>，摄影网站</li>
<li><a href="https://mxb.at/">Max Böck</a>，前端开发者网站</li>
<li><a href="https://designcode.io/">Design+Code</a>，Web
设计师站点</li>
<li><a href="http://www.hi.agency/deck/">Hi Agency,
Deck</a>，模版页面</li>
</ul>
<h2 id="在你开始使用-grid-之前">在你开始使用 Grid 之前</h2>
<p>我想你可能还会喜欢我在 <a href="https://moonlearning.io/">moonlearning.io</a> 或<a href="https://www.udemy.com/course/design-handoff/?referralCode=1296BF141742FFA166C2">完整的设计移交到开发课程</a>
上发布的其它文章和课程（有关如何使用 Grid 的更多信息！）。</p>]]></content>
      <categories>
        <category>Computer Science</category>
        <category>Frontend</category>
        <category>Styling</category>
      </categories>
      <tags>
        <tag>Computer Science</tag>
        <tag>UI</tag>
        <tag>Frontend</tag>
        <tag>CSS</tag>
      </tags>
  </entry>
  <entry>
    <title>TypeScript 4.2 正式发布：优化了类型和开发者体验</title>
    <url>/2021/03/02/computer%20science/frontend/Typescript-4-2-Released-Improves-Types-and-Developer-Experience/</url>
    <content><![CDATA[<blockquote>
<ul>
<li>原文地址：<a href="https://www.infoq.com/news/2021/02/typescript-4-2-released/">Typescript
4.2 Released, Improves Types and Developer Experience</a></li>
<li>原文作者：<a href="https://www.infoq.com/profile/Bruno-Couriol/">Bruno-Couriol</a></li>
<li>译者：<a href="https://github.com/PassionPenguin">霜羽
Hoarfroster</a></li>
<li>校对者：<a href="https://github.com/lsvih">lsvih</a>、<a href="https://github.com/zenblo">zenblo</a></li>
</ul>
</blockquote>
<p>TypeScript 团队最近正式发布了 <a href="https://devblogs.microsoft.com/typescript/announcing-typescript-4-2/">TypeScript
4.2</a> 版本！该版本的 TypeScript
拥有了更灵活的类型注释，更严格的检查，额外的配置选项以及一些其他的重大变化。我们现在可以在元组的类型定义中的任意位置使用
Rest
参数（而不是只能在末尾使用）了！类型别名不再在类型错误消息中扩展，从而让我们开发者拥有更好的体验。</p>
<p>TypeScript 4.2 <a href="https://github.com/microsoft/TypeScript/pull/41544">支持元组类型中任何位置的
Rest 参数（Rest Parameters）</a>：</p>
<div class="sourceCode" id="cb1"><pre class="sourceCode ts"><code class="sourceCode typescript"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a><span class="kw">type</span> T1 <span class="op">=</span> [<span class="op">...</span><span class="dt">string</span>[]<span class="op">,</span> <span class="dt">number</span>]<span class="op">;</span>  <span class="co">// 任意个 string 以及一个 number</span></span>
<span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a><span class="kw">type</span> T2 <span class="op">=</span> [<span class="dt">number</span><span class="op">,</span> <span class="op">...</span><span class="dt">boolean</span>[]<span class="op">,</span> <span class="dt">string</span><span class="op">,</span> <span class="dt">string</span>]<span class="op">;</span>  <span class="co">// 一个 number，跟着任意个 boolean，跟着两个 string</span></span></code></pre></div>
<p>在以前的版本中，Rest 参数只能在末尾处使用，例如
<code>type T1 = [number, ...string[]];</code>，因此我们不能对包含 Rest
参数却以固定类型参数结尾的参数集使用强类型定义。</p>
<div class="sourceCode" id="cb2"><pre class="sourceCode ts"><code class="sourceCode typescript"><span id="cb2-1"><a href="#cb2-1" aria-hidden="true" tabindex="-1"></a><span class="kw">function</span> <span class="fu">f1</span>(<span class="op">...</span>args<span class="op">:</span> [<span class="op">...</span><span class="dt">string</span>[]<span class="op">,</span> <span class="dt">number</span>]) &#123;</span>
<span id="cb2-2"><a href="#cb2-2" aria-hidden="true" tabindex="-1"></a>    <span class="kw">const</span> strs <span class="op">=</span> args<span class="op">.</span><span class="fu">slice</span>(<span class="dv">0</span><span class="op">,</span> <span class="op">-</span><span class="dv">1</span>) <span class="im">as</span> <span class="dt">string</span>[]<span class="op">;</span></span>
<span id="cb2-3"><a href="#cb2-3" aria-hidden="true" tabindex="-1"></a>    <span class="kw">const</span> num <span class="op">=</span> args[args<span class="op">.</span><span class="at">length</span> <span class="op">-</span> <span class="dv">1</span>] <span class="im">as</span> <span class="dt">number</span><span class="op">;</span></span>
<span id="cb2-4"><a href="#cb2-4" aria-hidden="true" tabindex="-1"></a>    <span class="co">// ...</span></span>
<span id="cb2-5"><a href="#cb2-5" aria-hidden="true" tabindex="-1"></a>&#125;</span>
<span id="cb2-6"><a href="#cb2-6" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb2-7"><a href="#cb2-7" aria-hidden="true" tabindex="-1"></a><span class="fu">f1</span>(<span class="dv">5</span>)<span class="op">;</span></span>
<span id="cb2-8"><a href="#cb2-8" aria-hidden="true" tabindex="-1"></a><span class="fu">f1</span>(<span class="st">'abc'</span><span class="op">,</span> <span class="dv">5</span>)<span class="op">;</span></span>
<span id="cb2-9"><a href="#cb2-9" aria-hidden="true" tabindex="-1"></a><span class="fu">f1</span>(<span class="st">'abc'</span><span class="op">,</span> <span class="st">'def'</span><span class="op">,</span> <span class="dv">5</span>)<span class="op">;</span></span>
<span id="cb2-10"><a href="#cb2-10" aria-hidden="true" tabindex="-1"></a><span class="fu">f1</span>(<span class="st">'abc'</span><span class="op">,</span> <span class="st">'def'</span><span class="op">,</span> <span class="dv">5</span><span class="op">,</span> <span class="dv">6</span>)<span class="op">;</span>  <span class="co">// Error</span></span></code></pre></div>
<p>函数 <code>f1</code> 的 <code>string</code>
参数的个数是不确定的，它的后面跟着一个 <code>number</code>
类型的参数。我们现在可以精确的定义 <code>f1</code>
参数的类型了。当然我们还是不能够使用多个 Rest
参数，可选元素不能在必需元素之前，也不能在其余元素之后。以下的参数类型定义是支持的：</p>
<div class="sourceCode" id="cb3"><pre class="sourceCode ts"><code class="sourceCode typescript"><span id="cb3-1"><a href="#cb3-1" aria-hidden="true" tabindex="-1"></a><span class="kw">type</span> Tup3<span class="op">&lt;</span>T <span class="kw">extends</span> <span class="dt">unknown</span>[]<span class="op">,</span> U <span class="kw">extends</span> <span class="dt">unknown</span>[]<span class="op">,</span> V <span class="kw">extends</span> <span class="dt">unknown</span>[]<span class="op">&gt;</span> <span class="op">=</span> [<span class="op">...</span>T<span class="op">,</span> <span class="op">...</span>U<span class="op">,</span> <span class="op">...</span>V]<span class="op">;</span></span>
<span id="cb3-2"><a href="#cb3-2" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb3-3"><a href="#cb3-3" aria-hidden="true" tabindex="-1"></a><span class="kw">type</span> TN1 <span class="op">=</span> Tup3<span class="op">&lt;</span>[<span class="dt">number</span>]<span class="op">,</span> <span class="dt">string</span>[]<span class="op">,</span> [<span class="dt">number</span>]<span class="op">&gt;;</span>  <span class="co">// [number, ...string[], number]</span></span>
<span id="cb3-4"><a href="#cb3-4" aria-hidden="true" tabindex="-1"></a><span class="co">// Optional element following required element</span></span>
<span id="cb3-5"><a href="#cb3-5" aria-hidden="true" tabindex="-1"></a><span class="kw">type</span> TN2 <span class="op">=</span> Tup3<span class="op">&lt;</span>[<span class="dt">number</span>]<span class="op">,</span> [<span class="dt">string</span><span class="op">?</span>]<span class="op">,</span> [<span class="dt">boolean</span>]<span class="op">&gt;;</span>  <span class="co">// [number, string | undefined, boolean]</span></span>
<span id="cb3-6"><a href="#cb3-6" aria-hidden="true" tabindex="-1"></a><span class="kw">type</span> TN3 <span class="op">=</span> Tup3<span class="op">&lt;</span>[<span class="dt">number</span>]<span class="op">,</span> <span class="dt">string</span>[]<span class="op">,</span> [<span class="dt">boolean</span><span class="op">?</span>]<span class="op">&gt;;</span>  <span class="co">// [number, ...(string | boolean | undefined)[]]</span></span>
<span id="cb3-7"><a href="#cb3-7" aria-hidden="true" tabindex="-1"></a><span class="kw">type</span> TN4 <span class="op">=</span> Tup3<span class="op">&lt;</span>[<span class="dt">number</span>]<span class="op">,</span> <span class="dt">string</span>[]<span class="op">,</span> <span class="dt">boolean</span>[]<span class="op">&gt;;</span>  <span class="co">// [number, ...(string | boolean)[]]</span></span>
<span id="cb3-8"><a href="#cb3-8" aria-hidden="true" tabindex="-1"></a><span class="kw">type</span> TN5 <span class="op">=</span> Tup3<span class="op">&lt;</span><span class="dt">string</span>[]<span class="op">,</span> <span class="dt">number</span>[]<span class="op">,</span> <span class="dt">boolean</span>[]<span class="op">&gt;;</span>  <span class="co">// (string | number | boolean)[] </span></span></code></pre></div>
<p>TypeScript 4.2 还让我们在使用类型别名时候拥有更好的开发体验：</p>
<figure>
<img src="https://imgur.com/rQkqilu.png" alt="https://imgur.com/rQkqilu.png">
<figcaption aria-hidden="true">https://imgur.com/rQkqilu.png</figcaption>
</figure>
<p>前面的示例表明，类型别名 <code>BasicPrimitive</code>
在某些情况下被拓展或规范化（例如为
<code>number | string | boolean</code>类型），但现在不会这样了。发行说明还强调了在不同地方的
TypeScript 开发者体验感受方面都做出了改进：</p>
<blockquote>
<p>你可以避免显示一些可怕的超长的类型定义 ——
类型别名现在通常会出现在快速信息和签名帮助中，以及转译的
<code>.d.ts</code> 文件输出中。这可以使 TypeScript
对于新手来说更加友善。</p>
</blockquote>
<p><strong><code>abstract</code></strong>
修饰符现在可以在构造函数签名上使用，实例：</p>
<div class="sourceCode" id="cb4"><pre class="sourceCode ts"><code class="sourceCode typescript"><span id="cb4-1"><a href="#cb4-1" aria-hidden="true" tabindex="-1"></a><span class="kw">abstract</span> <span class="kw">class</span> Shape &#123;</span>
<span id="cb4-2"><a href="#cb4-2" aria-hidden="true" tabindex="-1"></a>    <span class="kw">abstract</span> <span class="fu">getArea</span>()<span class="op">:</span> <span class="dt">number</span><span class="op">;</span></span>
<span id="cb4-3"><a href="#cb4-3" aria-hidden="true" tabindex="-1"></a>&#125;</span>
<span id="cb4-4"><a href="#cb4-4" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb4-5"><a href="#cb4-5" aria-hidden="true" tabindex="-1"></a><span class="co">// 这是个错误！我们不能实例化一个抽象的类 </span></span>
<span id="cb4-6"><a href="#cb4-6" aria-hidden="true" tabindex="-1"></a><span class="kw">new</span> <span class="fu">Shape</span>()<span class="op">;</span></span>
<span id="cb4-7"><a href="#cb4-7" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb4-8"><a href="#cb4-8" aria-hidden="true" tabindex="-1"></a><span class="kw">interface</span> HasArea &#123;</span>
<span id="cb4-9"><a href="#cb4-9" aria-hidden="true" tabindex="-1"></a>    <span class="fu">getArea</span>()<span class="op">:</span> <span class="dt">number</span><span class="op">;</span></span>
<span id="cb4-10"><a href="#cb4-10" aria-hidden="true" tabindex="-1"></a>&#125;</span>
<span id="cb4-11"><a href="#cb4-11" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb4-12"><a href="#cb4-12" aria-hidden="true" tabindex="-1"></a><span class="co">// 这是一个错误！我们不能赋予抽象的构造器类型给一个不是抽象的构造器类型</span></span>
<span id="cb4-13"><a href="#cb4-13" aria-hidden="true" tabindex="-1"></a><span class="kw">let</span> Ctor<span class="op">:</span> <span class="kw">new</span>  () <span class="kw">=&gt;</span> HasArea <span class="op">=</span> Shape<span class="op">;</span></span>
<span id="cb4-14"><a href="#cb4-14" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb4-15"><a href="#cb4-15" aria-hidden="true" tabindex="-1"></a><span class="co">// 这就很棒啦</span></span>
<span id="cb4-16"><a href="#cb4-16" aria-hidden="true" tabindex="-1"></a><span class="kw">let</span> Ctor<span class="op">:</span> <span class="kw">abstract</span> <span class="kw">new</span> () <span class="kw">=&gt;</span> HasArea <span class="op">=</span> Shape<span class="op">;</span></span>
<span id="cb4-17"><a href="#cb4-17" aria-hidden="true" tabindex="-1"></a><span class="co">//        ^^^^^^^^</span></span></code></pre></div>
<p><strong><code>abstract</code></strong> 修饰符的新语义允许我们<a href="https://github.com/microsoft/TypeScript/pull/36392">以支持抽象类的方式编写
<code>mixin factories</code> 的构造器</a>。</p>
<p>我们现在可以将已解构的变量明确标记为未使用，而一些开发人员以前会写：</p>
<div class="sourceCode" id="cb5"><pre class="sourceCode ts"><code class="sourceCode typescript"><span id="cb5-1"><a href="#cb5-1" aria-hidden="true" tabindex="-1"></a><span class="kw">const</span> [Input<span class="op">,</span> <span class="co">/* state */</span><span class="op">,</span> <span class="co">/* actions */</span><span class="op">,</span> meta] <span class="op">=</span> input </span></code></pre></div>
<p>而如果要更好的维护和阅读性，而非使用这个：</p>
<div class="sourceCode" id="cb6"><pre class="sourceCode ts"><code class="sourceCode typescript"><span id="cb6-1"><a href="#cb6-1" aria-hidden="true" tabindex="-1"></a><span class="kw">const</span> [Input<span class="op">,</span> <span class="op">,</span> <span class="op">,</span> meta] <span class="op">=</span> input </span></code></pre></div>
<p>开发者们现在可以在未使用的变量名称的前面使用一个下划线标记：</p>
<div class="sourceCode" id="cb7"><pre class="sourceCode ts"><code class="sourceCode typescript"><span id="cb7-1"><a href="#cb7-1" aria-hidden="true" tabindex="-1"></a><span class="kw">const</span> [Input<span class="op">,</span> _state<span class="op">,</span> _actions<span class="op">,</span> meta] <span class="op">=</span> input</span></code></pre></div>
<p>新版本的 TypeScript 还对 <code>in</code>
运算符提供了更严格的检查：<code>"foo" in 42</code> 将触发类型错误。而
TypeScript 的未调用函数检查现在适用于 <code>&amp;&amp;</code> 和
<code>||</code> 表达式。<a href="https://devblogs.microsoft.com/typescript/announcing-typescript-4-2/#no-property-access-index-signature">当类型具有字符串索引签名时，设置
<code>noPropertyAccessFromIndexSignature</code>
标志不再使用点运算符（例如
<code>person.name</code>），让我们进行属性访问成为可能</a>，而
<code>explainFiles</code> 编译器标志（例如
<code>tsc --explainFiles</code>
命令）让编译器能够产生更详尽的信息告诉我们解决的和处理的文件的信息：</p>
<div class="sourceCode" id="cb8"><pre class="sourceCode sh"><code class="sourceCode bash"><span id="cb8-1"><a href="#cb8-1" aria-hidden="true" tabindex="-1"></a><span class="ex">TS_Compiler_Directory/4.2.2/lib/lib.es5.d.ts</span></span>
<span id="cb8-2"><a href="#cb8-2" aria-hidden="true" tabindex="-1"></a>  <span class="ex">Library</span> referenced via <span class="st">'es5'</span> from file <span class="st">'TS_Compiler_Directory/4.2.2/lib/lib.es2015.d.ts'</span></span>
<span id="cb8-3"><a href="#cb8-3" aria-hidden="true" tabindex="-1"></a><span class="ex">TS_Compiler_Directory/4.2.2/lib/lib.es2015.d.ts</span></span>
<span id="cb8-4"><a href="#cb8-4" aria-hidden="true" tabindex="-1"></a>  <span class="ex">Library</span> referenced via <span class="st">'es2015'</span> from file <span class="st">'TS_Compiler_Directory/4.2.2/lib/lib.es2016.d.ts'</span></span>
<span id="cb8-5"><a href="#cb8-5" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb8-6"><a href="#cb8-6" aria-hidden="true" tabindex="-1"></a><span class="ex">...</span> More Library References...</span>
<span id="cb8-7"><a href="#cb8-7" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb8-8"><a href="#cb8-8" aria-hidden="true" tabindex="-1"></a><span class="ex">foo.ts</span></span>
<span id="cb8-9"><a href="#cb8-9" aria-hidden="true" tabindex="-1"></a>  <span class="ex">Matched</span> by include pattern <span class="st">'**/*'</span> in <span class="st">'tsconfig.json'</span></span></code></pre></div>
<p>TypeScript 4.2 还包含了一些重大更改：<a href="https://devblogs.microsoft.com/typescript/announcing-typescript-4-2/#type-arguments-in-javascript-are-not-parsed-as-type-arguments">JavaScript
中的类型参数不会解析为类型参数</a>，这意味着有效的 TypeScript 代码
<code>f&lt;T&gt;(100)</code> 将按照 JavaScript 规范解析到 JavaScript
文件中 <code>(f &lt; T) &gt; (100)</code>。与此同时，<code>.d.ts</code>
扩展名不能在导入路径中使用了（例如
<code>import &#123; Foo &#125; from "./foo.d.ts;</code>），而我们可以用以下任何一种替换：</p>
<div class="sourceCode" id="cb9"><pre class="sourceCode ts"><code class="sourceCode typescript"><span id="cb9-1"><a href="#cb9-1" aria-hidden="true" tabindex="-1"></a><span class="im">import</span> &#123;Foo&#125; <span class="im">from</span> <span class="st">"./foo.js"</span><span class="op">;</span></span>
<span id="cb9-2"><a href="#cb9-2" aria-hidden="true" tabindex="-1"></a><span class="im">import</span> &#123;Foo&#125; <span class="im">from</span> <span class="st">"./foo"</span><span class="op">;</span></span>
<span id="cb9-3"><a href="#cb9-3" aria-hidden="true" tabindex="-1"></a><span class="im">import</span> &#123;Foo&#125; <span class="im">from</span> <span class="st">"./foo/index.js"</span><span class="op">;</span></span></code></pre></div>
<p>TypeScript 4.2 实现在任何规模或位置更加准确编写 JavaScript
的目标，但是，在每个发行版中，TypeScript
都会增加其复杂性。一位开发者指出：</p>
<blockquote>
<p>由于 TypeScript 进行了大量更新导致的担忧，人们开始怀疑 TypeScript
是否会变得太复杂使得我们无法了解全部的问题，就像 C++ 那样。。</p>
</blockquote>
<p>TypeScript 4.2
还有其他的重大更改和功能新增，欢迎开发者阅读完整的发行说明。TypeScript
是基于 Apache 2 许可的开源软件，我们鼓励通过 TypeScript 在 GitHub
上的项目，在遵循 TypeScript 贡献准则和 Microsoft
开源行为准则的前提下进行贡献和反馈。</p>]]></content>
      <categories>
        <category>Computer Science</category>
        <category>Backend</category>
        <category>TypeScript</category>
      </categories>
      <tags>
        <tag>Computer Science</tag>
        <tag>Backend</tag>
        <tag>TypeScript</tag>
        <tag>Frontend</tag>
      </tags>
  </entry>
  <entry>
    <title>你有设计作品的作品集吗？挺好的，但这还不够</title>
    <url>/2021/02/28/computer%20science/frontend/dont-show-me-your-design-portfolio/</url>
    <content><![CDATA[<blockquote>
<ul>
<li>原文地址：<a href="https://medium.com/design-bootcamp/dont-show-me-your-design-portfolio-e46053651055">Have
a design portfolio? Great, but that’s not enough</a></li>
<li>原文作者：<a href="https://medium.com/@stellaguan">Stella
Guan</a></li>
<li>译者：<a href="https://github.com/PassionPenguin">霜羽
Hoarfroster</a></li>
<li>校对者：<a href="https://github.com/zhuzilin">zhuzilin</a>、<a href="https://github.com/HumenBeingXenon">HumanBeing</a>、<a href="https://github.com/lsvih">lsvih</a></li>
</ul>
</blockquote>
<p>在实际工作中担任视觉设计师近十年后，我开始在大学和职业学校教授设计课程。学生们最常问的一个问题是：<strong>如何建立一个自己的作品集（从而让我能找到一份工作）</strong>？</p>
<figure>
<img src="https://cdn-images-1.medium.com/max/2048/0*zUi3lI3_1Ji7fjtU.jpg" alt="移动端 stellaguan.com 的视图">
<figcaption aria-hidden="true">移动端 <a href="https://www.stellaguan.com">stellaguan.com</a> 的视图</figcaption>
</figure>
<p>我很想给他们通用的答案：就如你所知道那样制作出色的作品、将你的设计作品挂在网站上、精心设计网页的布局、为你的作品撰写周到的案例研究、创建精美的缩略图、添加一些交互性和动画……</p>
<p>我仍然将这些建议给我的学生们，毕竟它们都是基础知识，我们必须对之加以注意和研究。</p>
<p>但是，如果我们去 Dribbble 和 Behance
之类的设计作品展示网站实地考察一下，又或者是去像是 Awwwards 和 CSS
Design Awards 这样的奖项网站看一下，我们就会发现问题所在。</p>
<p>那里有数以百万计令人难以置信的美丽的，极富想象力和实际效应的设计作品。尽管其中许多都是没有实际应用的，仅仅只是一些令人眼花缭乱的设计概念，但我们仍然可以从中找到大量具有实际业务成果的出色案例。</p>
<p>作为设计师，我们应该努力成为能创造出如此精彩的作品的设计师中的一员，不是嘛？</p>
<p>当然是这样的！但其实我们还可以做更多别的！</p>
<p>现在有个问题是，即使我们成为能够制作令人难以置信的作品的超级才华设计师之一，我们也只是其中之一。即便您在这些站点上花费更多的时间，你会发现，这些设计看起来有些大同小异，没什么新颖之处。</p>
<blockquote>
<p>……而且，优秀的作品集不一定会为你带来一份工作。</p>
</blockquote>
<p>这就是招聘人员、招聘经理、客户在不得不审视成百上千份作品集时的感受，这就是优秀的作品集不一定能给您带来一份工作的原因！</p>
<p>那什么能给你带来工作呢？</p>
<h2 id="建立独特的视觉风格">建立独特的视觉风格</h2>
<p>回顾了一下自己的设计历程，有一件事始终很是吸睛 —— <a href="https://www.stellaguan.com"><strong>我的个人形象网站</strong></a>
它一直受到人们的关注。</p>
<p>我很早就意识到，<a href="https://www.stellaguan.com"><strong>我的作品集</strong></a>
可能是我唯一可以完全掌控并乐在其中的项目。</p>
<p>与其尝试制作一个外观类似其他人的精美极简网站，我决定以一种能表达我个性的视觉风格来讲述自己的故事。</p>
<blockquote>
<p>我很早就意识到，<a href="https://www.stellaguan.com"><strong>我的作品集</strong></a>
可能是我唯一可以完全掌控并乐在其中的项目。</p>
</blockquote>
<p>为了创建网页的外观，我问了自己这几个问题： 1.
<strong>我会被什么颜色吸引住</strong> 2.
<strong>什么样的形状和形式能够很好地表达我的性格？</strong> 3.
<strong>我想讲一些什么样的故事？</strong></p>
<p>前两个问题帮助我定义了网站的图形样式。</p>
<p>长期以来，我一直迷恋着上世纪中叶的现代建筑和家具设计，因此我决定以常见于许多
20 世纪中叶设计的变形和流体几何形状作为主要形式。</p>
<figure>
<img src="https://cdn-images-1.medium.com/max/2048/0*iSS3gia1_v_Y5Ih0.jpg" alt="图源 stellaguan.com">
<figcaption aria-hidden="true">图源 <a href="https://www.stellaguan.com">stellaguan.com</a></figcaption>
</figure>
<p>随后，我回顾了自己对上世纪六七十年代的时尚和音乐的喜爱。橘红色、黄色、米色和浅粉红色是对我来说最喜欢的颜色，因为它们代表着复古的暖色调，完全符合我的审美观。</p>
<figure>
<img src="https://cdn-images-1.medium.com/max/2048/0*L2OxUfYFUCsddQfq.jpg" alt="图源 stellaguan.com">
<figcaption aria-hidden="true">图源 <a href="https://www.stellaguan.com">stellaguan.com</a></figcaption>
</figure>
<p>最有力地展示个人风格的方式之一就是自信地向别人展示我们所爱的东西，而不会感觉不好意思。</p>
<p>我想你可能已经注意到，我的站点上散布着许多化妆精致的自己的照片，但我当然不是在建立时尚博客（尽管我在
2018
年有过一段短暂的时尚之旅，这也是其中一些照片的由来），那我为什么要那样布置它们呢？</p>
<p>我很清楚将这些照片放在那里可能会让别人认为我很自恋，但是我仍然决定将它们放置在那里。我的理由很简单
—— 我热爱时尚，并将个人风格视作创造力的延伸。</p>
<blockquote>
<p>我们能够最有力展示个人风格的方式之一，就是自信地向他人展示我们所爱，且丝毫不会为之愧疚。</p>
</blockquote>
<p>当然，我花了一些时间来适应它，毕竟，我不是一个外向的人。</p>
<p>就像许多人一样，我认为自己是一个内向的人。直到 25
岁前后，我才明白自信给人带来的力量。</p>
<p>长大后，我讨厌很多关于自己的事情。</p>
<p>在我职业生涯的几年中，我遇到了一位同事，她尽管比我年轻且没有大学学位，但她已经是公司的高级职员！她的成功窍门就恰好是她的自信
——
在她的每一次面试中，她总是能够镇定自若，就像她已经拿下这份工作了。而这恰好帮助了她快速追踪她的职业发展。我深以为然，以此为灵感，致力于提升我自己的自信心。</p>
<p>在二十多快三十岁时，我已经建立起了足够的自信，不会在面对镜头或是人群讲话时感到害羞或尴尬。我也将这一点转化融入了我的个人形象中，并具象化在了我的网站上。</p>
<h2 id="就像写传记片一样讲自己的故事">就像写传记片一样讲自己的故事</h2>
<p>在定义网站的外观样式后，我决定在 <a href="https://www.stellaguan.com/about">About</a> 页面上增添一些小乐趣
—— 我用相互关联的小片段和使用了叙事语气讲述了自己的人生故事。</p>
<figure>
<img src="https://cdn-images-1.medium.com/max/2048/0*bPGcutdSSef1Sn9A.jpg" alt="图源 stellaguan.com/about">
<figcaption aria-hidden="true">图源 <a href="https://www.stellaguan.com/about">stellaguan.com/about</a></figcaption>
</figure>
<p>如果我们阅览在社交媒体或任何其他平台上优质的内容，就会发现它们之间的一些共性。人们喜欢听能够感同身受的故事
——
他们想听听您的奋斗史，他们想知道您在奋斗之中是如何达到现在的地步。<strong>实际上并没有人愿意听您描述自己有多优秀！</strong></p>
<blockquote>
<p>他们想听听您的奋斗史，他们想知道您在奋斗之中是如何达到现在的地步。<strong>实际上并没有人愿意听您描述自己有多优秀！</strong></p>
</blockquote>
<p>看了足够多的电影后，我们会发现人们喜欢为弱者加油 ——
为黑马加油，为奋斗者加油，为一个尽管取得了一些成就但仍在进步的人加油。</p>
<p>通过我的生活经历，我还发现自嘲可能是一种在情感上与他人联系的强大工具。</p>
<p>如果我们可以嘲笑自己，那么其他人就不可能嘲笑我们（不得不承认，我从我最喜欢的电视节目之—
—— <a href="https://abc.com/shows/scandal">丑闻 Scandal</a>
中借用了这句话）。<strong>它会使其他人对我们的缺点与不幸产生共鸣，并建立一种称为共享人类经验的即时纽带</strong>。</p>
<blockquote>
<p>如果我们可以嘲笑自己，那么其他人就无法嘲笑我们</p>
</blockquote>
<p>考虑到这些关键因素，我用可视化的形式讲述了自己的人生故事，而非写下平淡无奇的个人陈述来列出我过去的雇主和我的技能。</p>
<p>我从本科广播电视和电影专业的培训中受益。我记得我最喜欢的大学课程是由一位名叫比尔·韦恩（Bill
Wine）的滑稽而严格的教授执教的，他是一名费城著名的电影评论家。而尽管我当时写了一份极度糟糕的剧本，但我坚信我还是从他身上学会了讲故事的本领。<strong>回想起来，这一个技能远比我后来获得的许多其他技能更为重要！</strong></p>
<p>但现在有太多的设计师几乎像套用信函一样用大量的套话写关于自己的陈述。</p>
<p><strong>“我是一名在 [某个地方] 的 UI / UX
设计人员。我专职为全球客户设计漂亮且用户友好的界面，其中包括……
[一长串令人印象深刻的客户]。”</strong></p>
<p>尽管此类个人简介没有错，但并不能使你脱颖而出 ——
它读起来很空洞，没有灵魂。</p>
<p>但如果你以简洁的格式向他人讲述你的经历，他们更可能愿意为你驻足 ——
这就如同你向他们展示电影的预告片。它将会是一个颇受好评的令人分神的事（好的方面），使面试官从无尽的雷同作品集网页中脱离出来，尽管有的页面可能也很美丽。</p>
<blockquote>
<p>但是，如果你以简洁的格式向他人讲述你的个人故事，他们很可能愿意为你停留，因为这就像你要向他们展示电影的预告片。</p>
</blockquote>
<p>更重要的是，你正在向他们展示你是他们的合适人选。人们往往喜欢与自己喜欢的人一起工作。你的个人经历陈述页面将使他们相信你是（或不是）他们所要的雇员。</p>
<blockquote>
<p>人们往往喜欢与自己喜欢的人一起工作。</p>
</blockquote>
<p>实际上，我已经与多家公司建立了工作关系，这些公司的创始人都喜欢我的故事，而他们甚至没有提到我的工作经历。相反，我们分享了自己生活中的故事后就一起开展了不少项目。</p>
<p>我们生活在一个相互联系的世界中，人际关系是我们社会的基石。人们乐于知道你是如何成为今天的你的，因此不要害怕将你的经历展示给他们看。</p>
<p>顺便提一句，并不是每个人都需要像我一样在自己的网站上摆出张大脸。讲故事和个人品牌塑造可以不借助任何照片，这取决于您作为设计师的创造力来为您完成这项工作。</p>
<h2 id="内容创作是你新的好朋友">内容创作是你新的好朋友</h2>
<p>我们并非每个人都是伟大的作家。显然，我并非大佬中的一员，可我并不在乎，我就要写！</p>
<p>实际上，在成为设计师之前，我曾经短暂做过电视制片人。在做制片人的初期，我的写作能力非常差。我因为无法完成我的写作量（大约
5,000 词 / 天）而感到恐慌，因而不愿意去上班。</p>
<p>当我成为设计师时，写作成为几乎无关紧要的技能，这让我很高兴。</p>
<p>然而，当我在 Medium 上写的第一篇文章（讲的是<a href="https://medium.com/s/story/my-fast-and-furious-journey-to-getting-a-green-card-51dd0a9e4511">移民经历</a>，注：原文已被作者删除）一夜爆红，我才意识到了写作的意义与作用。我收到了很多人的评论分享他们的奋斗与一些有关潜在培训的询问。</p>
<figure>
<img src="https://cdn-images-1.medium.com/max/2048/0*cqe3pvaUgo3HTSBl.jpg" alt="图源 stellaguan.com/blog-and-news">
<figcaption aria-hidden="true">图源 <a href="https://www.stellaguan.com/blog-and-news">stellaguan.com/blog-and-news</a></figcaption>
</figure>
<p>从那时起，我意识到自己不讨厌写作 ——
我只是讨厌写自己没有兴趣和别人布置的内容。</p>
<p>当我分享自己的经验时，写作就变得很愉快。</p>
<p>写作可能不是你的菜，但这丝毫没有关系。如果你是设计师，其实关键只在于你的创造力。</p>
<p>内容创作并不仅限于写作。您可以制作内容丰富的视频。你可以将你的旧的作品转化为可分享的社交帖子。你还可以制作播客，参加活动小组并分享你的专业知识，以启发他人使他们能够从这些内容中学习。</p>
<p>可能性是无限的。问题是，你确定你要这样做吗 ——
入门是最困难的事情，正如我的母亲所指出的那样，我和其他人一样都有拖延症。</p>
<p><strong>一些最成功的设计师和其他创意专业人士不在公司工作是是有原因的</strong>。他们通过建立强大的个人品牌为自己工作。他们始终如一地分享自己的工作和思想；他们随着时间的推移建立了受众群；他们伸出援手并保持联系；然后工作机会就来了，并且源源不断而来。</p>
<blockquote>
<p>一些最成功的设计师和其他创意专业人士不在公司工作是是有原因的</p>
</blockquote>
<p>当您犹豫是否应该建立博客，产出内容，并把在社交媒体上活跃作为品牌建立日常的一部分时，请扪心自问
——
您想成为<strong>一个摆脱“躬薪阶层”的人</strong>吗？如果这样做，则必须立即开始产出内容并与他人分享。</p>
<p>##与其制定新的一年的计划，不如脚踏实地去落实</p>
<p>我注意到一个趋势，当一些设计师开始带薪工作时，他们通常会停止更新他的作品集网站。实际上，我见过
20 年没有更新网站的设计师。</p>
<p>您可以想象他们的作品集在视觉上或技术上可能都不是很好。</p>
<p>就像是你有 20
年来都没有装修过房屋，那么不管当时的房屋多么宏伟，它都会被投资者认为是需要整修的，价值低廉的。</p>
<p>你真的想成为那所房子吗？我知道我宁愿成为维护良好并及时更新的另一座房子，像它一样抢手。</p>
<p>您的个人品牌与网站上显示的相同。</p>
<p>您对更新的懈怠越多，最终由于新的工作机会或其他原因而最终对其进行更新时，就会感到不堪重负。</p>
<p>另一个原因，也许是更重要的原因，是如果你不每年重新评估自己的个人形象，那你就不会为新的一年做好准备。</p>
<blockquote>
<p>如果你不每年重新评估自己的个人形象，那你就不会为新的一年做好准备。</p>
</blockquote>
<p>仅仅因为我将自己的站点用作案例研究并不意味着我的工作已经完备。我知道我会做出改变，总会有一些我可以改进或改变的地方。</p>
<p>与其制定新年计划，我固定在每年的 12 月 31
日之前更新我的个人形象。</p>
<p>今年，我可以很高兴地说，我做到了。</p>
<h1 id="你的作品并不能为自己发声">你的作品并不能为自己发声</h1>
<p>完成上述所有操作后，您将开始拥有一个称为个人形象的东西。</p>
<p>这并不意味着任何有形或具体的含义，而是通过视觉和言语传达有关自己的信息而创建的协同作用。</p>
<p><strong>这种协同作用将吸引与您拥有相同价值和利益的人们支持</strong>。他们将成为您的客户，顾客，业务合作伙伴，关注者和朋友。</p>
<blockquote>
<p>个人形象的力量在于，如果人们喜欢你的作品，他们就很大概率会购买你所出售的产品。</p>
</blockquote>
<p>我坚信您的“作品本身<strong>并不能</strong>说明一切”，以下是我的理由。</p>
<blockquote>
<p>不仅仅只是让工作成果展现自己的效果，我们还需要做好工作，然后再谈论它们。</p>
</blockquote>
<p>当设计师认为自己的作品能说明问题时，他们实际上是在为商业失败做好准备。不仅仅只是让工作成果展现自己的效果，我们还需要做好工作，然后再谈论它们。</p>
<p>下次你寻找工作，项目或客户时，没必要在现场向他们展示你的作品集。你应该直接将你的作品集<strong>嵌入您的个人形象中</strong>。</p>
<p>最后，我想分享一些其他领域的设计师和专业人士的示例，这些设计师和专业人士都拥有出色的个人品牌。</p>
<ol type="1">
<li><a href="https://www.tgoodman.com/"><strong>Timothy
Goodman</strong></a></li>
</ol>
<figure>
<img src="https://cdn-images-1.medium.com/max/2048/0*_f3NnINKvVhkqWwB.png" alt="From tgoodman.com">
<figcaption aria-hidden="true">From <a href="https://www.tgoodman.com">tgoodman.com</a></figcaption>
</figure>
<p>蒂莫西·古德曼（Timothy
Goodman）是一名扎根纽约的插画家、设计师、壁画家以及艺术家，他经营着自己的工作室。他的作品出现在众多出版物，品牌商品和公共场所的商品中。他因为在分享个人生活和社交活动方面非常开放而出名。他的个人形象就是一个很好的例子，印证着你不必在首页上放你的照片来塑造强大的个人形象。</p>
<ol start="2" type="1">
<li><a href="https://www.marieforleo.com"><strong>Marie
Forleo</strong></a></li>
</ol>
<figure>
<img src="https://cdn-images-1.medium.com/max/2048/0*X_98u5Qm0Ps4Vyyb.png" alt="From marieforleo.com">
<figcaption aria-hidden="true">From <a href="https://www.marieforleo.com">marieforleo.com</a></figcaption>
</figure>
<p>Marie Forleo
不是一位设计师，她是一位经营多个培训业务的成功的女商人，而她的个人品牌以清晰的视觉外观和有目的性的品牌信息脱颖而出。在写我们自己的故事时，我们可以借鉴玛丽寻求灵感，了解她如何与其受众建立联系。</p>
<ol start="3" type="1">
<li><a href="https://creativeankit.com/"><strong>Ankit
Bhatnagar</strong></a></li>
</ol>
<figure>
<img src="https://cdn-images-1.medium.com/max/2048/0*SmVYKTlmCM1v6tqv.png" alt="From creativeankit.com">
<figcaption aria-hidden="true">From <a href="https://creativeankit.com">creativeankit.com</a></figcaption>
</figure>
<p>Ankit Bhatnagar 是拥有出色个人形象的 UI / UX
设计师。他的形象质朴，但在展示自己的技能方面非常有效，同时让你对他是何许人产生初略形象。他并不着重于讲故事，但他的视觉形象使他的网站远比一个使用朴素纯白极简模板的作品集网页有趣。</p>
<ol start="4" type="1">
<li><a href="https://www.designbyroka.com"><strong>Shawn
Park</strong></a></li>
</ol>
<p><img src="https://cdn-images-1.medium.com/max/2048/0*_zc0nm9n5JCa-80o.png"></p>
<p>Shawn Park
是产品设计师。他很好地展示了他的作品集的重新设计之旅，重申了作品集的重要性。他的网站也很抢眼，因为他在不扰乱设计作品内容的情况下巧妙地融合了韩国文化底蕴。</p>
<hr>
<p><strong>最初于 2021 年 1 月 4 日在 <a href="https://www.stellaguan.com/dont-show-me-your-design-portfolio/">https://www.stellaguan.com</a>
上发布</strong></p>]]></content>
      <categories>
        <category>Computer Science</category>
        <category>Frontend</category>
        <category>Styling</category>
      </categories>
      <tags>
        <tag>Computer Science</tag>
        <tag>UI</tag>
        <tag>Frontend</tag>
        <tag>CSS</tag>
      </tags>
  </entry>
  <entry>
    <title>构建像 `Messenger` 短信软件那样的 ImageView</title>
    <url>/2021/02/25/computer%20science/android/messengers-like-imageview/</url>
    <content><![CDATA[<blockquote>
<ul>
<li>原文地址：<a href="https://proandroiddev.com/messengers-like-imageview-90e9f1da19f4">Messengers-like
ImageView</a></li>
<li>原文作者：<a href="https://medium.com/@programmerr47">Michael
Spitsin</a></li>
<li>译者：<a href="https://github.com/PassionPenguin">霜羽
Hoarfroster</a></li>
<li>校对者：<a href="https://github.com/HumanBeingXenon">HumanBeing</a>、<a href="https://github.com/keepmovingljzy">keepmovingljzy</a></li>
</ul>
</blockquote>
<p><img src="https://cdn-images-1.medium.com/max/2372/1*eUsCLT2MWPgMMc_7ltldOw.png"></p>
<p>在上一篇论述中，我们讨论了<a href="https://proandroiddev.com/telegram-like-uploading-animation-e284f1404f63">发送图片消息时候的上传动画以及构建这个动画的方法</a>。今天我决定写一篇与图片的显示有关的文章。先来提个问题，在消息历史记录中，我们应该如何显示图片？</p>
<p>当然是使用 <code>ImageView</code> 啦！好的这篇文章到此结束啦！</p>
<p>嘿，别走！虽说我们可以使用 ImageView
简简单单就能呈现图片信息，但要做到像 Messenger
应用那样显示图片并非像我们想象中那么简单。虽说本质上难度并不大，但是，我们所需要的不仅是一个
<code>ImageView</code>，还要一些小计算，以查看尺寸是否适合我们要向用户展示的内容。</p>
<h2 id="测量">测量</h2>
<p>首先我们需要了解我们应该要做什么。我们解决方案的核心是，我们要基于某些图片或动图，或任何其他可显示媒体的预定义大小（宽度和高度），在考虑显示图片的容器的尺寸限制（例如我们可能需要把尺寸为
1000x1000 的图片缩小以适合尺寸只有 100x100
的容器），而且应该在大多数情况下保持长宽比的情况下绘制图片。</p>
<p>也就是说基本步骤可以分为两部分：</p>
<ol type="1">
<li>依据容器尺寸界定最佳的尺寸并将其提供给程序程序。如果图像太小，我们需要将其调整直到其最短的边的长度等于容器最短的边长。</li>
<li>给予其与容器一些约束条件（例如使用 <code>maxSize</code>
控制大小）。并且如果可能的话，我们应该就长宽比来计算得出最终的大小（稍后我们将讨论其他可能的情况）</li>
</ol>
<h3 id="定义尺寸">定义尺寸</h3>
<p>让我们从一个简单的 <code>Size</code> 类的定义开始。它将包含图像的
<code>width</code> 和
<code>height</code>，并且向它添加对我们计算有帮助的方法：</p>
<div class="sourceCode" id="cb1"><pre class="sourceCode kotlin"><code class="sourceCode kotlin"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a><span class="kw">internal</span> <span class="kw">class</span> Size<span class="op">(</span></span>
<span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a>    <span class="kw">var</span> <span class="va">width</span><span class="op">:</span> <span class="dt">Int</span><span class="op">,</span></span>
<span id="cb1-3"><a href="#cb1-3" aria-hidden="true" tabindex="-1"></a>    <span class="kw">var</span> <span class="va">height</span><span class="op">:</span> <span class="dt">Int</span></span>
<span id="cb1-4"><a href="#cb1-4" aria-hidden="true" tabindex="-1"></a><span class="op">)</span> <span class="op">&#123;</span></span>
<span id="cb1-5"><a href="#cb1-5" aria-hidden="true" tabindex="-1"></a>    <span class="kw">val</span> <span class="va">area</span><span class="op">:</span> <span class="kw">Int</span> <span class="kw">get</span><span class="op">()</span> <span class="op">=</span> width <span class="op">*</span> height</span>
<span id="cb1-6"><a href="#cb1-6" aria-hidden="true" tabindex="-1"></a>    <span class="kw">val</span> <span class="va">ratio</span><span class="op">:</span> <span class="kw">Float</span> <span class="kw">get</span><span class="op">()</span> <span class="op">=</span> height<span class="op">.</span>toFloat<span class="op">()</span> <span class="op">/</span> width</span>
<span id="cb1-7"><a href="#cb1-7" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-8"><a href="#cb1-8" aria-hidden="true" tabindex="-1"></a>    <span class="kw">operator</span> <span class="kw">fun</span> <span class="fu">contains</span><span class="op">(</span><span class="va">other</span><span class="op">:</span> <span class="dt">Size</span><span class="op">)</span> <span class="op">=</span> width <span class="op">&gt;=</span> other<span class="op">.</span>width <span class="op">&amp;&amp;</span> height <span class="op">&gt;=</span> other<span class="op">.</span>height</span>
<span id="cb1-9"><a href="#cb1-9" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-10"><a href="#cb1-10" aria-hidden="true" tabindex="-1"></a>    <span class="kw">fun</span> <span class="fu">update</span><span class="op">(</span><span class="va">new</span><span class="op">:</span> <span class="dt">Size</span><span class="op">)</span> <span class="op">&#123;</span></span>
<span id="cb1-11"><a href="#cb1-11" aria-hidden="true" tabindex="-1"></a>        width <span class="op">=</span> new<span class="op">.</span>width</span>
<span id="cb1-12"><a href="#cb1-12" aria-hidden="true" tabindex="-1"></a>        height <span class="op">=</span> new<span class="op">.</span>height</span>
<span id="cb1-13"><a href="#cb1-13" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#125;</span></span>
<span id="cb1-14"><a href="#cb1-14" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-15"><a href="#cb1-15" aria-hidden="true" tabindex="-1"></a>    <span class="co">// 这里不希望让 mutable class 变成 data class</span></span>
<span id="cb1-16"><a href="#cb1-16" aria-hidden="true" tabindex="-1"></a>    <span class="kw">fun</span> <span class="fu">copy</span><span class="op">(</span><span class="va">width</span><span class="op">:</span> <span class="dt">Int</span> <span class="op">=</span> this<span class="op">.</span>width<span class="op">,</span> <span class="va">height</span><span class="op">:</span> <span class="dt">Int</span> <span class="op">=</span> this<span class="op">.</span>height<span class="op">)</span> <span class="op">=</span> Size<span class="op">(</span>width<span class="op">,</span> height<span class="op">)</span></span>
<span id="cb1-17"><a href="#cb1-17" aria-hidden="true" tabindex="-1"></a><span class="op">&#125;</span></span></code></pre></div>
<p>这里有几点说明：</p>
<ol type="1">
<li>我们之所以把这个类定义为可变类，是因为它将在视图内使用，并且我们希望优化实例的创建
——
因为我们的程序是在一个线程中工作的，我们不希望也不需要因为创造它而浪费大量资源。</li>
<li>我们其实可以将 <code>Size</code> 类本身视作数据类而不是自定义一个
<code>copy</code>
函数，但是我不想将可变性与数据类搭上边，因为数据类本应是不可变的。</li>
</ol>
<p>我们现在定义好了 <code>Size</code> 类，可以接着创建一个
<code>ImageSizeMeasurer</code> 类，负责尺寸的定义、调整和测量。</p>
<h3 id="设置所需的尺寸">设置所需的尺寸</h3>
<p>首先我们将设置图片所需的尺寸以及最小尺寸。在这个方法中，我们将检查所需大小是否小于最小值，如果是则对其进行依次调整：</p>
<div class="sourceCode" id="cb2"><pre class="sourceCode kotlin"><code class="sourceCode kotlin"><span id="cb2-1"><a href="#cb2-1" aria-hidden="true" tabindex="-1"></a><span class="kw">internal</span> <span class="kw">class</span> ImageSizeMeasurer <span class="op">&#123;</span></span>
<span id="cb2-2"><a href="#cb2-2" aria-hidden="true" tabindex="-1"></a>    <span class="kw">private</span> <span class="kw">var</span> <span class="va">minSize</span><span class="op">:</span> Size <span class="op">=</span> Size<span class="op">(</span><span class="dv">0</span><span class="op">,</span> <span class="dv">0</span><span class="op">)</span></span>
<span id="cb2-3"><a href="#cb2-3" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb2-4"><a href="#cb2-4" aria-hidden="true" tabindex="-1"></a>    <span class="kw">private</span> <span class="kw">var</span> <span class="va">desiredSize</span> <span class="op">=</span> Size<span class="op">(</span><span class="dv">0</span><span class="op">,</span> <span class="dv">0</span><span class="op">)</span></span>
<span id="cb2-5"><a href="#cb2-5" aria-hidden="true" tabindex="-1"></a>    <span class="kw">val</span> <span class="va">desired</span> <span class="kw">get</span><span class="op">()</span> <span class="op">=</span> desiredSize<span class="op">.</span>copy<span class="op">()</span></span>
<span id="cb2-6"><a href="#cb2-6" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb2-7"><a href="#cb2-7" aria-hidden="true" tabindex="-1"></a>    <span class="co">// = (height/width)</span></span>
<span id="cb2-8"><a href="#cb2-8" aria-hidden="true" tabindex="-1"></a>    <span class="kw">var</span> <span class="va">fixRatio</span><span class="op">:</span> <span class="kw">Float</span> <span class="op">=</span> <span class="fl">1f</span></span>
<span id="cb2-9"><a href="#cb2-9" aria-hidden="true" tabindex="-1"></a>        <span class="kw">private</span> <span class="kw">set</span></span>
<span id="cb2-10"><a href="#cb2-10" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb2-11"><a href="#cb2-11" aria-hidden="true" tabindex="-1"></a>    <span class="co">// ...</span></span>
<span id="cb2-12"><a href="#cb2-12" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb2-13"><a href="#cb2-13" aria-hidden="true" tabindex="-1"></a>    <span class="kw">fun</span> <span class="fu">setDesiredSize</span><span class="op">(</span><span class="va">desired</span><span class="op">:</span> <span class="dt">Size</span><span class="op">,</span> <span class="va">min</span><span class="op">:</span> <span class="dt">Size</span><span class="op">)</span> <span class="op">&#123;</span></span>
<span id="cb2-14"><a href="#cb2-14" aria-hidden="true" tabindex="-1"></a>        minSize <span class="op">=</span> min<span class="op">.</span>copy<span class="op">()</span></span>
<span id="cb2-15"><a href="#cb2-15" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb2-16"><a href="#cb2-16" aria-hidden="true" tabindex="-1"></a>        desiredSize <span class="op">=</span> desired<span class="op">.</span>copy<span class="op">()</span></span>
<span id="cb2-17"><a href="#cb2-17" aria-hidden="true" tabindex="-1"></a>        fixRatio <span class="op">=</span> desired<span class="op">.</span>ratio</span>
<span id="cb2-18"><a href="#cb2-18" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb2-19"><a href="#cb2-19" aria-hidden="true" tabindex="-1"></a>        adjustDesiredHeight<span class="op">()</span></span>
<span id="cb2-20"><a href="#cb2-20" aria-hidden="true" tabindex="-1"></a>        adjustDesiredWidth<span class="op">()</span></span>
<span id="cb2-21"><a href="#cb2-21" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#125;</span></span>
<span id="cb2-22"><a href="#cb2-22" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb2-23"><a href="#cb2-23" aria-hidden="true" tabindex="-1"></a>    <span class="kw">private</span> <span class="kw">fun</span> <span class="fu">adjustDesiredHeight</span><span class="op">()</span> <span class="op">&#123;</span></span>
<span id="cb2-24"><a href="#cb2-24" aria-hidden="true" tabindex="-1"></a>        <span class="cf">if</span> <span class="op">(</span>desiredSize<span class="op">.</span>height <span class="op">&lt;</span> minSize<span class="op">.</span>height<span class="op">)</span> <span class="op">&#123;</span></span>
<span id="cb2-25"><a href="#cb2-25" aria-hidden="true" tabindex="-1"></a>            desiredSize<span class="op">.</span>height <span class="op">=</span> minSize<span class="op">.</span>height</span>
<span id="cb2-26"><a href="#cb2-26" aria-hidden="true" tabindex="-1"></a>            desiredSize<span class="op">.</span>width <span class="op">=</span> <span class="op">(</span>minSize<span class="op">.</span>height <span class="op">/</span> fixRatio<span class="op">).</span>toInt<span class="op">()</span></span>
<span id="cb2-27"><a href="#cb2-27" aria-hidden="true" tabindex="-1"></a>        <span class="op">&#125;</span></span>
<span id="cb2-28"><a href="#cb2-28" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#125;</span></span>
<span id="cb2-29"><a href="#cb2-29" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb2-30"><a href="#cb2-30" aria-hidden="true" tabindex="-1"></a>    <span class="kw">private</span> <span class="kw">fun</span> <span class="fu">adjustDesiredWidth</span><span class="op">()</span> <span class="op">&#123;</span></span>
<span id="cb2-31"><a href="#cb2-31" aria-hidden="true" tabindex="-1"></a>        <span class="cf">if</span> <span class="op">(</span>desiredSize<span class="op">.</span>width <span class="op">&lt;</span> minSize<span class="op">.</span>width<span class="op">)</span> <span class="op">&#123;</span></span>
<span id="cb2-32"><a href="#cb2-32" aria-hidden="true" tabindex="-1"></a>            desiredSize<span class="op">.</span>width <span class="op">=</span> minSize<span class="op">.</span>width</span>
<span id="cb2-33"><a href="#cb2-33" aria-hidden="true" tabindex="-1"></a>            desiredSize<span class="op">.</span>height <span class="op">=</span> <span class="op">(</span>minSize<span class="op">.</span>width <span class="op">*</span> fixRatio<span class="op">).</span>toInt<span class="op">()</span></span>
<span id="cb2-34"><a href="#cb2-34" aria-hidden="true" tabindex="-1"></a>        <span class="op">&#125;</span></span>
<span id="cb2-35"><a href="#cb2-35" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#125;</span></span>
<span id="cb2-36"><a href="#cb2-36" aria-hidden="true" tabindex="-1"></a><span class="op">&#125;</span></span></code></pre></div>
<p>此处我们使用了 <code>copy</code>
方法以避免数据被客户端操作修改的时候影响到。<code>copy</code>
方法让这些数据可以暗地里在不同地方之间共享（因此我们就不会因为字段不知道什么时候被更改而震惊）。</p>
<p>这里的关键点在于设置大小和比例后，我们需要对其进行调整。不必担忧调用
<code>adjustDesiredHeight</code> 和 <code>adjustDesiredWidth</code>
方法时没有进行任何智能检查会造成任何严重后果。因为第一个方法在
<code>height</code> 小于 <code>width</code> 的情况下会把
<code>desiredSize</code> 中处于最小值的高度增加到
<code>minSize</code>，第二个函数在 <code>width</code> 小于
<code>height</code> 的情况下会把 <code>desiredSize</code>
处在最小值的宽度增加到 <code>minSize</code>。</p>
<h4 id="分别测量约束条件">分别测量约束条件</h4>
<p>我们调整好了期望尺寸的最小尺寸，现在该测量实际尺寸的最大尺寸的了。该方法本身并不难，我们只需要记住，应该保证所有的更新不改变高宽比，除非降低图像的高度和宽度会导致两者之一小于
<code>minSize</code>。</p>
<p>比如说，应用于非常窄的图片。</p>
<p><img src="https://github.com/PassionPenguin/picgo-database/blob/main/messengers-like-imageview-example.png?raw=true"></p>
<ul>
<li>要么宽度符合最大限值，但高度太小</li>
<li>要么高度达到最小限值，但宽度过大</li>
<li>要么将宽度设置为最大限值，高度设置为最小限值，但这个做法破坏了宽高比。</li>
</ul>
<p>在那种情况下，最后一个选项是最合适的选择，因为我们不能让图像大小超过约束尺寸，并且我们也不希望图像太窄，因为过于小的图片可能会让我们很难看清图片的内容，或与之交互。在这里我们可以使用
<code>scaleType = imageCrop</code>：它能帮助你在打破图片显示的宽高比的情况下正确地显示图片。</p>
<div class="sourceCode" id="cb3"><pre class="sourceCode kotlin"><code class="sourceCode kotlin"><span id="cb3-1"><a href="#cb3-1" aria-hidden="true" tabindex="-1"></a><span class="kw">internal</span> <span class="kw">class</span> ImageSizeMeasurer <span class="op">&#123;</span></span>
<span id="cb3-2"><a href="#cb3-2" aria-hidden="true" tabindex="-1"></a>    <span class="kw">private</span> <span class="kw">var</span> <span class="va">minSize</span><span class="op">:</span> Size <span class="op">=</span> Size<span class="op">(</span><span class="dv">0</span><span class="op">,</span> <span class="dv">0</span><span class="op">)</span></span>
<span id="cb3-3"><a href="#cb3-3" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb3-4"><a href="#cb3-4" aria-hidden="true" tabindex="-1"></a>    <span class="kw">var</span> <span class="va">desiredSize</span> <span class="op">=</span> Size<span class="op">(</span><span class="dv">0</span><span class="op">,</span> <span class="dv">0</span><span class="op">)</span></span>
<span id="cb3-5"><a href="#cb3-5" aria-hidden="true" tabindex="-1"></a>        <span class="kw">get</span><span class="op">()</span> <span class="op">=</span> field<span class="op">.</span>copy<span class="op">()</span></span>
<span id="cb3-6"><a href="#cb3-6" aria-hidden="true" tabindex="-1"></a>        <span class="kw">private</span> <span class="kw">set</span></span>
<span id="cb3-7"><a href="#cb3-7" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb3-8"><a href="#cb3-8" aria-hidden="true" tabindex="-1"></a>    <span class="co">// 放缩因子： `height` : `width`</span></span>
<span id="cb3-9"><a href="#cb3-9" aria-hidden="true" tabindex="-1"></a>    <span class="kw">var</span> <span class="va">fixRatio</span><span class="op">:</span> <span class="kw">Float</span> <span class="op">=</span> <span class="fl">1f</span></span>
<span id="cb3-10"><a href="#cb3-10" aria-hidden="true" tabindex="-1"></a>        <span class="kw">private</span> <span class="kw">set</span></span>
<span id="cb3-11"><a href="#cb3-11" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb3-12"><a href="#cb3-12" aria-hidden="true" tabindex="-1"></a>    <span class="co">// ...</span></span>
<span id="cb3-13"><a href="#cb3-13" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb3-14"><a href="#cb3-14" aria-hidden="true" tabindex="-1"></a>    <span class="kw">fun</span> <span class="fu">measure</span><span class="op">(</span><span class="va">max</span><span class="op">:</span> <span class="dt">Size</span><span class="op">,</span> <span class="kw">out</span><span class="op">:</span> <span class="dt">Size</span><span class="op">)</span> <span class="op">&#123;</span></span>
<span id="cb3-15"><a href="#cb3-15" aria-hidden="true" tabindex="-1"></a>        <span class="cf">when</span> <span class="op">&#123;</span></span>
<span id="cb3-16"><a href="#cb3-16" aria-hidden="true" tabindex="-1"></a>            desiredSize <span class="kw">in</span> max <span class="op">-&gt;</span> <span class="kw">out</span><span class="op">.</span>update<span class="op">(</span>desiredSize<span class="op">)</span></span>
<span id="cb3-17"><a href="#cb3-17" aria-hidden="true" tabindex="-1"></a>            fixRatio <span class="op">&lt;</span> max<span class="op">.</span>ratio <span class="op">-&gt;</span> <span class="op">&#123;</span></span>
<span id="cb3-18"><a href="#cb3-18" aria-hidden="true" tabindex="-1"></a>                <span class="kw">out</span><span class="op">.</span>width <span class="op">=</span> max<span class="op">.</span>width</span>
<span id="cb3-19"><a href="#cb3-19" aria-hidden="true" tabindex="-1"></a>                <span class="kw">out</span><span class="op">.</span>height <span class="op">=</span> max<span class="op">((</span>max<span class="op">.</span>width <span class="op">*</span> desiredSize<span class="op">.</span>height<span class="op">)</span> <span class="op">/</span> desiredSize<span class="op">.</span>width<span class="op">,</span> minSize<span class="op">.</span>height<span class="op">)</span></span>
<span id="cb3-20"><a href="#cb3-20" aria-hidden="true" tabindex="-1"></a>            <span class="op">&#125;</span></span>
<span id="cb3-21"><a href="#cb3-21" aria-hidden="true" tabindex="-1"></a>            fixRatio <span class="op">&gt;</span> max<span class="op">.</span>ratio <span class="op">-&gt;</span> <span class="op">&#123;</span></span>
<span id="cb3-22"><a href="#cb3-22" aria-hidden="true" tabindex="-1"></a>                <span class="kw">out</span><span class="op">.</span>width <span class="op">=</span> max<span class="op">((</span>max<span class="op">.</span>height <span class="op">*</span> desiredSize<span class="op">.</span>width<span class="op">)</span> <span class="op">/</span> desiredSize<span class="op">.</span>height<span class="op">,</span> minSize<span class="op">.</span>width<span class="op">)</span></span>
<span id="cb3-23"><a href="#cb3-23" aria-hidden="true" tabindex="-1"></a>                <span class="kw">out</span><span class="op">.</span>height <span class="op">=</span> max<span class="op">.</span>height</span>
<span id="cb3-24"><a href="#cb3-24" aria-hidden="true" tabindex="-1"></a>            <span class="op">&#125;</span></span>
<span id="cb3-25"><a href="#cb3-25" aria-hidden="true" tabindex="-1"></a>            <span class="cf">else</span> <span class="op">-&gt;</span> <span class="kw">out</span><span class="op">.</span>update<span class="op">(</span>max<span class="op">)</span></span>
<span id="cb3-26"><a href="#cb3-26" aria-hidden="true" tabindex="-1"></a>        <span class="op">&#125;</span></span>
<span id="cb3-27"><a href="#cb3-27" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#125;</span></span>
<span id="cb3-28"><a href="#cb3-28" aria-hidden="true" tabindex="-1"></a>    </span>
<span id="cb3-29"><a href="#cb3-29" aria-hidden="true" tabindex="-1"></a>    <span class="co">// ... 或者在这里设置需要的尺寸</span></span>
<span id="cb3-30"><a href="#cb3-30" aria-hidden="true" tabindex="-1"></a><span class="op">&#125;</span></span></code></pre></div>
<p>让我们快速分析该 <code>measure</code> 方法。</p>
<ul>
<li>当所需大小适合最大大小时，一切正常。<code>setDesiredSize</code>
确定尺寸之后，我们将确保尺寸不小于最小尺寸。现在，我们只需要确保它不大于最大大小。因此，我们将返回它本身（<code>when</code>
代码块中的第一个条件句）</li>
<li>如果以上预测错误，则说明要么宽度大于 <code>max.width</code>
，要么高度大于 <code>max.height</code>
，要么两者都超了。在这种情况下，图片的长宽比将与最大尺寸的长宽比相同，则我们可以输出最大尺寸，因为它将缩小为所需尺寸的结果。（<code>when</code>
代码块中的 <code>else</code> 语句）</li>
<li>在另一种情况下，我们只需要比较宽高比。例如 <code>width</code>
的期望尺寸大于最大尺寸。但是期望尺寸的宽高比也大于最大尺寸的长宽比。意味着，当我们缩小期望尺寸时（因此当前尺寸的
<code>width</code> 将会和最大尺寸的相等），期望尺寸的
<code>height</code> 仍然大于最大尺寸的 <code>height</code>。
因此，当期望尺寸的宽高比小于最大尺寸的长宽比时，我们只需将
<code>width</code> 更新为
<code>max.width</code>，然后高度也会相应地更新。但是如果小于
<code>minSize.height</code> ，我们将打破结果的宽高比，并把
<code>out.height</code> 设置为 <code>minSize.height</code>。</li>
<li>类似地，如果期望尺寸的宽高比大于最大尺寸的宽高比，我们只需要将
<code>height</code> 更新为
<code>max.height</code>，宽度也相应地更新。但是，如果小于
<code>minSize.width</code> 我们将打破结果的宽高比，并且将
<code>out.width</code> 设置为 <code>minSize.width</code>。</li>
</ul>
<h2 id="所有计算中都带有一点魔术使一切变得更自然更漂亮">所有计算中都带有一点魔术，使一切变得更自然，更漂亮</h2>
<p>现在，我们准备好要衡量的所有内容：</p>
<div class="sourceCode" id="cb4"><pre class="sourceCode kotlin"><code class="sourceCode kotlin"><span id="cb4-1"><a href="#cb4-1" aria-hidden="true" tabindex="-1"></a><span class="kw">private</span> <span class="kw">val</span> <span class="va">measurer</span><span class="op">:</span> ImageSizeMeasurer</span>
<span id="cb4-2"><a href="#cb4-2" aria-hidden="true" tabindex="-1"></a><span class="kw">private</span> <span class="kw">val</span> <span class="va">measureResult</span> <span class="op">=</span> Size<span class="op">(</span><span class="dv">0</span><span class="op">,</span> <span class="dv">0</span><span class="op">)</span></span>
<span id="cb4-3"><a href="#cb4-3" aria-hidden="true" tabindex="-1"></a><span class="kw">private</span> <span class="kw">val</span> <span class="va">maxSize</span> <span class="op">=</span> Size<span class="op">(</span><span class="dv">0</span><span class="op">,</span> <span class="dv">0</span><span class="op">)</span></span>
<span id="cb4-4"><a href="#cb4-4" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb4-5"><a href="#cb4-5" aria-hidden="true" tabindex="-1"></a><span class="co">// ...</span></span>
<span id="cb4-6"><a href="#cb4-6" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb4-7"><a href="#cb4-7" aria-hidden="true" tabindex="-1"></a><span class="kw">override</span> <span class="kw">fun</span> <span class="fu">onMeasure</span><span class="op">(</span><span class="va">widthMeasureSpec</span><span class="op">:</span> <span class="dt">Int</span><span class="op">,</span> <span class="va">heightMeasureSpec</span><span class="op">:</span> <span class="dt">Int</span><span class="op">)</span> <span class="op">&#123;</span></span>
<span id="cb4-8"><a href="#cb4-8" aria-hidden="true" tabindex="-1"></a>    <span class="cf">if</span> <span class="op">(</span>MeasureSpec<span class="op">.</span>getMode<span class="op">(</span>widthMeasureSpec<span class="op">)</span> <span class="op">==</span> MeasureSpec<span class="op">.</span>UNSPECIFIED<span class="op">)</span> <span class="op">&#123;</span></span>
<span id="cb4-9"><a href="#cb4-9" aria-hidden="true" tabindex="-1"></a>        setMeasuredDimension<span class="op">(</span>measurer<span class="op">.</span>desired<span class="op">.</span>width<span class="op">,</span> measurer<span class="op">.</span>desired<span class="op">.</span>height<span class="op">)</span></span>
<span id="cb4-10"><a href="#cb4-10" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#125;</span> <span class="cf">else</span> <span class="op">&#123;</span></span>
<span id="cb4-11"><a href="#cb4-11" aria-hidden="true" tabindex="-1"></a>        measure<span class="op">(</span>widthMeasureSpec<span class="op">,</span> heightMeasureSpec<span class="op">)</span></span>
<span id="cb4-12"><a href="#cb4-12" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#125;</span></span>
<span id="cb4-13"><a href="#cb4-13" aria-hidden="true" tabindex="-1"></a><span class="op">&#125;</span></span>
<span id="cb4-14"><a href="#cb4-14" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb4-15"><a href="#cb4-15" aria-hidden="true" tabindex="-1"></a><span class="kw">private</span> <span class="kw">fun</span> <span class="fu">measure</span><span class="op">(</span><span class="va">widthSpec</span><span class="op">:</span> <span class="dt">Int</span><span class="op">,</span> <span class="va">heightSpec</span><span class="op">:</span> <span class="dt">Int</span><span class="op">)</span> <span class="op">&#123;</span></span>
<span id="cb4-16"><a href="#cb4-16" aria-hidden="true" tabindex="-1"></a>    maxSize<span class="op">.</span>width <span class="op">=</span> <span class="co">// 你可以在这里定义最大的尺寸：可以使用两个输入的尺寸，也可以使用硬编码的</span></span>
<span id="cb4-17"><a href="#cb4-17" aria-hidden="true" tabindex="-1"></a>    maxSize<span class="op">.</span>height <span class="op">=</span> <span class="co">// 宽高比并且只使用其中一个输入的尺寸，随你选择 :)</span></span>
<span id="cb4-18"><a href="#cb4-18" aria-hidden="true" tabindex="-1"></a>    measurer<span class="op">.</span>measure<span class="op">(</span>maxSize<span class="op">,</span> measureResult<span class="op">)</span></span>
<span id="cb4-19"><a href="#cb4-19" aria-hidden="true" tabindex="-1"></a>    setMeasuredDimension<span class="op">(</span>measureResult<span class="op">.</span>width<span class="op">,</span> measureResult<span class="op">.</span>height<span class="op">)</span></span>
<span id="cb4-20"><a href="#cb4-20" aria-hidden="true" tabindex="-1"></a><span class="op">&#125;</span></span></code></pre></div>
<p>这里的一切都足够简单。如果我们有未指明的尺寸，我们会告诉视图的父控件在理想状况下的期望尺寸。在另一种情况下（大多数情况下），我们需要提供
<code>width</code> 与 <code>height</code> 来设置
<code>maxSize</code>，并将它们传递进入我们的 <code>measurer</code>。</p>
<p>现在让我们看一下结果：</p>
<p><img src="https://cdn-images-1.medium.com/max/2000/1*lTedeH88K2J4Z8snpeSOfw.png"></p>
<p>一切看起来都很棒，<span class="x x-first x-last">但是那些比较小图片似乎显示得太小了。我们希望让它们比现在的更大一些。你可能会说，“那就增大最小尺寸呗。”</span>我们当然可以这样做，但是在那种情况下，<span class="x x-first x-last">小图和更小尺寸的图片之间的显示上的大小不会有任何区别，因为它们将使用一个相同的最小尺寸定义</span>。</p>
<p>除此之外，我们可以施加点魔法！</p>
<p>而魔法的主要目的是通过增加一些幻数或公式使小图变大，并保持小图和更微小的图之间的大小差异：）</p>
<div class="sourceCode" id="cb5"><pre class="sourceCode kotlin"><code class="sourceCode kotlin"><span id="cb5-1"><a href="#cb5-1" aria-hidden="true" tabindex="-1"></a><span class="kw">fun</span> <span class="fu">measure</span><span class="op">(</span><span class="va">max</span><span class="op">:</span> <span class="dt">Size</span><span class="op">,</span> <span class="kw">out</span><span class="op">:</span> <span class="dt">Size</span><span class="op">)</span> <span class="op">&#123;</span></span>
<span id="cb5-2"><a href="#cb5-2" aria-hidden="true" tabindex="-1"></a>    <span class="kw">val</span> <span class="va">desired</span> <span class="op">=</span> desiredSize<span class="op">.</span>copy<span class="op">()</span></span>
<span id="cb5-3"><a href="#cb5-3" aria-hidden="true" tabindex="-1"></a>    magicallyStretchTooSmallSize<span class="op">(</span>max<span class="op">,</span> desired<span class="op">)</span></span>
<span id="cb5-4"><a href="#cb5-4" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb5-5"><a href="#cb5-5" aria-hidden="true" tabindex="-1"></a>    <span class="co">// ... </span></span>
<span id="cb5-6"><a href="#cb5-6" aria-hidden="true" tabindex="-1"></a><span class="op">&#125;</span></span>
<span id="cb5-7"><a href="#cb5-7" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb5-8"><a href="#cb5-8" aria-hidden="true" tabindex="-1"></a><span class="kw">private</span> <span class="kw">fun</span> <span class="fu">magicallyStretchTooSmallSize</span><span class="op">(</span><span class="va">max</span><span class="op">:</span> <span class="dt">ChatImageView</span>.<span class="va">Size</span><span class="op">,</span> <span class="va">desired</span><span class="op">:</span> <span class="dt">ChatImageView</span>.<span class="va">Size</span><span class="op">)</span> <span class="op">&#123;</span></span>
<span id="cb5-9"><a href="#cb5-9" aria-hidden="true" tabindex="-1"></a>    <span class="cf">if</span> <span class="op">(</span>desired <span class="kw">in</span> max<span class="op">)</span> <span class="op">&#123;</span></span>
<span id="cb5-10"><a href="#cb5-10" aria-hidden="true" tabindex="-1"></a>        <span class="co">// 如果图像小于最大尺寸，我们可以将图片尽可能往容器的边缘靠拢</span></span>
<span id="cb5-11"><a href="#cb5-11" aria-hidden="true" tabindex="-1"></a>        <span class="co">// 这是有意而为，目的是告诉用户他正在发送小图，</span></span>
<span id="cb5-12"><a href="#cb5-12" aria-hidden="true" tabindex="-1"></a>        <span class="co">// 调整后的图片不会变得太小，我们仅仅只需要用魔法调整一下就可以让图片变得更加漂亮了。</span></span>
<span id="cb5-13"><a href="#cb5-13" aria-hidden="true" tabindex="-1"></a>        <span class="kw">val</span> <span class="va">adjustedArea</span> <span class="op">=</span> desired<span class="op">.</span>area <span class="op">+</span> <span class="op">(</span>max<span class="op">.</span>area <span class="op">-</span> desired<span class="op">.</span>area<span class="op">)</span> <span class="op">/</span> <span class="fl">3f</span></span>
<span id="cb5-14"><a href="#cb5-14" aria-hidden="true" tabindex="-1"></a>        <span class="kw">val</span> <span class="va">outW</span> <span class="op">=</span> sqrt<span class="op">(</span>adjustedArea <span class="op">/</span> fixRatio<span class="op">)</span></span>
<span id="cb5-15"><a href="#cb5-15" aria-hidden="true" tabindex="-1"></a>        desired<span class="op">.</span>height <span class="op">=</span> <span class="op">(</span>outW <span class="op">*</span> fixRatio<span class="op">).</span>toInt<span class="op">()</span></span>
<span id="cb5-16"><a href="#cb5-16" aria-hidden="true" tabindex="-1"></a>        desired<span class="op">.</span>width <span class="op">=</span> outW<span class="op">.</span>toInt<span class="op">()</span></span>
<span id="cb5-17"><a href="#cb5-17" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#125;</span></span>
<span id="cb5-18"><a href="#cb5-18" aria-hidden="true" tabindex="-1"></a><span class="op">&#125;</span></span></code></pre></div>
<p>这个算法思路很简短：将期望面积增加到最大和期望面积之差的
1/3，然后通过新的面积和宽高比计算得出新的宽度和高度。</p>
<p>这是一个比较结果。</p>
<figure>
<img src="https://cdn-images-1.medium.com/max/2996/1*-pTHSTbjjPZlveMdtuTaeQ.gif" alt="Left: without magic, Right: with magic">
<figcaption aria-hidden="true"><strong>Left:</strong> without magic,
<strong>Right:</strong> with magic</figcaption>
</figure>
<p>我更喜欢新的结果：我们能够拥有更大的图片，能更方便地看清图片内容。但在同时，我们又能够理解图片的尺寸有所差异，有的图片比较大有的比较小。</p>
<h2 id="如果我只知道比例就想要获取尺寸该怎么办">如果我只知道比例就想要获取尺寸，该怎么办</h2>
<p>让我们再进一步讨论一下能否有更多的改进吧。有时，我们并没有所要展示的图片的真实尺寸，而只获得了缩略图的尺寸。在这种情况下，我们不能缩略图的尺寸当作是所需的尺寸，因为这些规格要小得多，但是我们可以计算出比例是大了，小了还是完全相等，然后使用
<code>ImageSizeMeasurer</code>
对象，在只有固定宽高比得情况下，尝试计算得出所需尺寸并让这个尺寸尽可能满足最大约束。</p>
<p>因此，首先，我们向 <code>Size</code> 类添加一个新属性：</p>
<pre><code>val isSpecified: Boolean get() = width &gt; 0 &amp;&amp; height &gt; 0</code></pre>
<p>接下来，我们需要添加方法以设置所需的比率而不是所需的大小：</p>
<pre><code>fun setDesiredRatio(ratio: Float, min: Size) &#123;
    minSize = min.copy()
    desiredSize = Size(0, 0)
    fixRatio = ratio
&#125;</code></pre>
<p>然后，我们需要通过添加其他调整到所需的大小来更新 <code>measure</code>
方法：</p>
<div class="sourceCode" id="cb8"><pre class="sourceCode kotlin"><code class="sourceCode kotlin"><span id="cb8-1"><a href="#cb8-1" aria-hidden="true" tabindex="-1"></a><span class="kw">fun</span> <span class="fu">measure</span><span class="op">(</span><span class="va">max</span><span class="op">:</span> <span class="dt">ChatImageView</span>.<span class="va">Size</span><span class="op">,</span> <span class="kw">out</span><span class="op">:</span> <span class="dt">ChatImageView</span>.<span class="va">Size</span><span class="op">)</span> <span class="op">&#123;</span></span>
<span id="cb8-2"><a href="#cb8-2" aria-hidden="true" tabindex="-1"></a>    <span class="kw">val</span> <span class="va">desired</span> <span class="op">=</span> desiredSize<span class="op">.</span>copy<span class="op">()</span></span>
<span id="cb8-3"><a href="#cb8-3" aria-hidden="true" tabindex="-1"></a>    fixUnspecifiedDesiredSize<span class="op">(</span>max<span class="op">,</span> desired<span class="op">)</span></span>
<span id="cb8-4"><a href="#cb8-4" aria-hidden="true" tabindex="-1"></a>    magicallyStretchTooSmallSize<span class="op">(</span>max<span class="op">,</span> desired<span class="op">)</span></span>
<span id="cb8-5"><a href="#cb8-5" aria-hidden="true" tabindex="-1"></a>    </span>
<span id="cb8-6"><a href="#cb8-6" aria-hidden="true" tabindex="-1"></a>    <span class="co">// ...</span></span>
<span id="cb8-7"><a href="#cb8-7" aria-hidden="true" tabindex="-1"></a><span class="op">&#125;</span></span>
<span id="cb8-8"><a href="#cb8-8" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb8-9"><a href="#cb8-9" aria-hidden="true" tabindex="-1"></a><span class="co">// 没有指定所需的大小，但指定了宽高比，那么先将图片最大化伸展。</span></span>
<span id="cb8-10"><a href="#cb8-10" aria-hidden="true" tabindex="-1"></a><span class="kw">private</span> <span class="kw">fun</span> <span class="fu">fixUnspecifiedDesiredSize</span><span class="op">(</span><span class="va">max</span><span class="op">:</span> <span class="dt">ChatImageView</span>.<span class="va">Size</span><span class="op">,</span> <span class="va">desired</span><span class="op">:</span> <span class="dt">ChatImageView</span>.<span class="va">Size</span><span class="op">)</span> <span class="op">&#123;</span></span>
<span id="cb8-11"><a href="#cb8-11" aria-hidden="true" tabindex="-1"></a>    <span class="cf">if</span> <span class="op">(!</span>desired<span class="op">.</span>isSpecified<span class="op">)</span> <span class="op">&#123;</span></span>
<span id="cb8-12"><a href="#cb8-12" aria-hidden="true" tabindex="-1"></a>        <span class="cf">if</span> <span class="op">(</span>fixRatio <span class="op">&gt;</span> max<span class="op">.</span>ratio<span class="op">)</span> <span class="op">&#123;</span></span>
<span id="cb8-13"><a href="#cb8-13" aria-hidden="true" tabindex="-1"></a>            desired<span class="op">.</span>width <span class="op">=</span> max<span class="op">.</span>width</span>
<span id="cb8-14"><a href="#cb8-14" aria-hidden="true" tabindex="-1"></a>            desired<span class="op">.</span>height <span class="op">=</span> <span class="op">(</span>max<span class="op">.</span>width <span class="op">*</span> fixRatio<span class="op">).</span>toInt<span class="op">()</span></span>
<span id="cb8-15"><a href="#cb8-15" aria-hidden="true" tabindex="-1"></a>        <span class="op">&#125;</span> <span class="cf">else</span> <span class="op">&#123;</span></span>
<span id="cb8-16"><a href="#cb8-16" aria-hidden="true" tabindex="-1"></a>            desired<span class="op">.</span>width <span class="op">=</span> <span class="op">(</span>max<span class="op">.</span>height <span class="op">/</span> fixRatio<span class="op">).</span>toInt<span class="op">()</span></span>
<span id="cb8-17"><a href="#cb8-17" aria-hidden="true" tabindex="-1"></a>            desired<span class="op">.</span>height <span class="op">=</span> max<span class="op">.</span>height</span>
<span id="cb8-18"><a href="#cb8-18" aria-hidden="true" tabindex="-1"></a>        <span class="op">&#125;</span></span>
<span id="cb8-19"><a href="#cb8-19" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#125;</span></span>
<span id="cb8-20"><a href="#cb8-20" aria-hidden="true" tabindex="-1"></a><span class="op">&#125;</span></span></code></pre></div>
<p>最后，让我们更新 <code>onMeasure</code> 方法：</p>
<div class="sourceCode" id="cb9"><pre class="sourceCode kotlin"><code class="sourceCode kotlin"><span id="cb9-1"><a href="#cb9-1" aria-hidden="true" tabindex="-1"></a><span class="kw">override</span> <span class="kw">fun</span> <span class="fu">onMeasure</span><span class="op">(</span><span class="va">widthMeasureSpec</span><span class="op">:</span> <span class="dt">Int</span><span class="op">,</span> <span class="va">heightMeasureSpec</span><span class="op">:</span> <span class="dt">Int</span><span class="op">)</span> <span class="op">&#123;</span></span>
<span id="cb9-2"><a href="#cb9-2" aria-hidden="true" tabindex="-1"></a>    <span class="cf">if</span> <span class="op">(</span>measurer<span class="op">.</span>desired<span class="op">.</span>isSpecified<span class="op">)</span> <span class="op">&#123;</span></span>
<span id="cb9-3"><a href="#cb9-3" aria-hidden="true" tabindex="-1"></a>        <span class="cf">if</span> <span class="op">(</span>MeasureSpec<span class="op">.</span>getMode<span class="op">(</span>widthMeasureSpec<span class="op">)</span> <span class="op">==</span> MeasureSpec<span class="op">.</span>UNSPECIFIED<span class="op">)</span> <span class="op">&#123;</span></span>
<span id="cb9-4"><a href="#cb9-4" aria-hidden="true" tabindex="-1"></a>            setMeasuredDimension<span class="op">(</span>measurer<span class="op">.</span>desired<span class="op">.</span>width<span class="op">,</span> measurer<span class="op">.</span>desired<span class="op">.</span>height<span class="op">)</span></span>
<span id="cb9-5"><a href="#cb9-5" aria-hidden="true" tabindex="-1"></a>        <span class="op">&#125;</span> <span class="cf">else</span> <span class="op">&#123;</span></span>
<span id="cb9-6"><a href="#cb9-6" aria-hidden="true" tabindex="-1"></a>            measure<span class="op">(</span>widthMeasureSpec<span class="op">)</span></span>
<span id="cb9-7"><a href="#cb9-7" aria-hidden="true" tabindex="-1"></a>        <span class="op">&#125;</span></span>
<span id="cb9-8"><a href="#cb9-8" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#125;</span> <span class="cf">else</span> <span class="cf">if</span> <span class="op">(</span>measurer<span class="op">.</span>fixRatio <span class="op">&gt;</span> <span class="dv">0</span><span class="op">)</span> <span class="op">&#123;</span></span>
<span id="cb9-9"><a href="#cb9-9" aria-hidden="true" tabindex="-1"></a>        <span class="cf">if</span> <span class="op">(</span>MeasureSpec<span class="op">.</span>getMode<span class="op">(</span>widthMeasureSpec<span class="op">)</span> <span class="op">==</span> MeasureSpec<span class="op">.</span>UNSPECIFIED<span class="op">)</span> <span class="op">&#123;</span></span>
<span id="cb9-10"><a href="#cb9-10" aria-hidden="true" tabindex="-1"></a>            <span class="kw">super</span><span class="op">.</span>onMeasure<span class="op">(</span>widthMeasureSpec<span class="op">,</span> heightMeasureSpec<span class="op">)</span></span>
<span id="cb9-11"><a href="#cb9-11" aria-hidden="true" tabindex="-1"></a>        <span class="op">&#125;</span> <span class="cf">else</span> <span class="op">&#123;</span></span>
<span id="cb9-12"><a href="#cb9-12" aria-hidden="true" tabindex="-1"></a>            measure<span class="op">(</span>widthMeasureSpec<span class="op">)</span></span>
<span id="cb9-13"><a href="#cb9-13" aria-hidden="true" tabindex="-1"></a>        <span class="op">&#125;</span></span>
<span id="cb9-14"><a href="#cb9-14" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#125;</span> <span class="cf">else</span> <span class="op">&#123;</span></span>
<span id="cb9-15"><a href="#cb9-15" aria-hidden="true" tabindex="-1"></a>        <span class="kw">super</span><span class="op">.</span>onMeasure<span class="op">(</span>widthMeasureSpec<span class="op">,</span> heightMeasureSpec<span class="op">)</span></span>
<span id="cb9-16"><a href="#cb9-16" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#125;</span></span>
<span id="cb9-17"><a href="#cb9-17" aria-hidden="true" tabindex="-1"></a><span class="op">&#125;</span></span>
<span id="cb9-18"><a href="#cb9-18" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb9-19"><a href="#cb9-19" aria-hidden="true" tabindex="-1"></a><span class="kw">private</span> <span class="kw">fun</span> <span class="fu">measure</span><span class="op">(</span><span class="va">widthSpec</span><span class="op">:</span> <span class="dt">Int</span><span class="op">)</span> <span class="op">&#123;</span></span>
<span id="cb9-20"><a href="#cb9-20" aria-hidden="true" tabindex="-1"></a>    maxSize<span class="op">.</span>width <span class="op">=</span> <span class="co">// 我们可以同时使用两个规格或具有一些预定义的</span></span>
<span id="cb9-21"><a href="#cb9-21" aria-hidden="true" tabindex="-1"></a>    maxSize<span class="op">.</span>height <span class="op">=</span> <span class="co">// 同时使用宽高或仅使用其中之一来定义最大尺寸，任君挑选；）</span></span>
<span id="cb9-22"><a href="#cb9-22" aria-hidden="true" tabindex="-1"></a>    measurer<span class="op">.</span>measure<span class="op">(</span>maxSize<span class="op">,</span> measureResult<span class="op">)</span></span>
<span id="cb9-23"><a href="#cb9-23" aria-hidden="true" tabindex="-1"></a>    setMeasuredDimension<span class="op">(</span>measureResult<span class="op">.</span>width<span class="op">,</span> measureResult<span class="op">.</span>height<span class="op">)</span></span>
<span id="cb9-24"><a href="#cb9-24" aria-hidden="true" tabindex="-1"></a><span class="op">&#125;</span></span></code></pre></div>
<h2 id="让我们一起讨论一下视图">让我们一起讨论一下视图</h2>
<p>到现在为止一切表现得还挺好。我们拥有了一个绝妙的图片尺寸计算工具！我们甚至对如何将其与视图整合都有一个粗略的了解，但是我们仍然没有思路如何表现。</p>
<p>让我们首先描述一下我们想要什么。实际上，指定 <code>minWidth</code> 和
<code>minHeight</code> 并不难。这些属性是 xml
的一部分，<code>maxWidth</code> 和 <code>maxHeight</code>
也如此。但是我不想在这里硬编码任何特定的大小。相反，我想更多地依靠设备屏幕。意思是，最好用百分比来指定这些最大约束。我们现在已经拥有了
<code>ConstraintLayout</code>
控件，按理说像这样指定最大宽度（例如屏幕宽度的
70%）并不难…但是高度应该怎么办？</p>
<p>其实你可以任意指定约束比例，毕竟这只是我的一点想法罢了。出于某些原因，我决定根据宽度决定高度，乘以缩放因子。因此，假设我们的
<code>factor</code> 值为
<code>1</code>，那便就是一个正方形。也就是说，只需指定
<code>width</code>（以及比例），程序就能计算对应的高度。</p>
<p>如你所见，做法极其简单，但也极度依赖屏幕尺寸，而不是取决于设备的不同因素的
dimens.xml 中的各种定义，尽管后者的解决方案是安卓化的：</p>
<div class="sourceCode" id="cb10"><pre class="sourceCode kotlin"><code class="sourceCode kotlin"><span id="cb10-1"><a href="#cb10-1" aria-hidden="true" tabindex="-1"></a><span class="kw">open</span> <span class="kw">class</span> FixRatioImageView @JvmOverloads <span class="kw">constructor</span><span class="op">(</span></span>
<span id="cb10-2"><a href="#cb10-2" aria-hidden="true" tabindex="-1"></a>    <span class="va">context</span><span class="op">:</span> <span class="dt">Context</span><span class="op">,</span> <span class="va">attrs</span><span class="op">:</span> <span class="dt">AttributeSet</span><span class="op">?</span> <span class="op">=</span> null<span class="op">,</span> <span class="va">defStyleAttr</span><span class="op">:</span> <span class="dt">Int</span> <span class="op">=</span> <span class="dv">0</span></span>
<span id="cb10-3"><a href="#cb10-3" aria-hidden="true" tabindex="-1"></a><span class="op">)</span> <span class="op">:</span> <span class="dt">AppCompatImageView</span><span class="op">(</span><span class="va">context</span><span class="op">,</span> <span class="va">attrs</span><span class="op">,</span> <span class="va">defStyleAttr</span><span class="op">)</span> <span class="op">&#123;</span></span>
<span id="cb10-4"><a href="#cb10-4" aria-hidden="true" tabindex="-1"></a>    <span class="kw">var</span> <span class="va">factor</span> <span class="op">=</span> DEFAULT_FACTOR</span>
<span id="cb10-5"><a href="#cb10-5" aria-hidden="true" tabindex="-1"></a>        <span class="kw">set</span><span class="op">(</span>value<span class="op">)</span> <span class="op">&#123;</span></span>
<span id="cb10-6"><a href="#cb10-6" aria-hidden="true" tabindex="-1"></a>            <span class="cf">if</span> <span class="op">(</span>field <span class="op">!=</span> value<span class="op">)</span> <span class="op">&#123;</span></span>
<span id="cb10-7"><a href="#cb10-7" aria-hidden="true" tabindex="-1"></a>                field <span class="op">=</span> value</span>
<span id="cb10-8"><a href="#cb10-8" aria-hidden="true" tabindex="-1"></a>                requestLayout<span class="op">()</span></span>
<span id="cb10-9"><a href="#cb10-9" aria-hidden="true" tabindex="-1"></a>            <span class="op">&#125;</span></span>
<span id="cb10-10"><a href="#cb10-10" aria-hidden="true" tabindex="-1"></a>        <span class="op">&#125;</span></span>
<span id="cb10-11"><a href="#cb10-11" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb10-12"><a href="#cb10-12" aria-hidden="true" tabindex="-1"></a>    init <span class="op">&#123;</span></span>
<span id="cb10-13"><a href="#cb10-13" aria-hidden="true" tabindex="-1"></a>        attrs<span class="op">?.</span>parseAttrs<span class="op">(</span>context<span class="op">,</span> R<span class="op">.</span>styleable<span class="op">.</span>FixRatioImageView<span class="op">)</span> <span class="op">&#123;</span></span>
<span id="cb10-14"><a href="#cb10-14" aria-hidden="true" tabindex="-1"></a>            factor <span class="op">=</span> getFloat<span class="op">(</span>R<span class="op">.</span>styleable<span class="op">.</span>FixRatioImageView_factor<span class="op">,</span> DEFAULT_FACTOR<span class="op">)</span></span>
<span id="cb10-15"><a href="#cb10-15" aria-hidden="true" tabindex="-1"></a>        <span class="op">&#125;</span></span>
<span id="cb10-16"><a href="#cb10-16" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#125;</span></span>
<span id="cb10-17"><a href="#cb10-17" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb10-18"><a href="#cb10-18" aria-hidden="true" tabindex="-1"></a>    <span class="kw">override</span> <span class="kw">fun</span> <span class="fu">onMeasure</span><span class="op">(</span><span class="va">widthMeasureSpec</span><span class="op">:</span> <span class="dt">Int</span><span class="op">,</span> <span class="va">heightMeasureSpec</span><span class="op">:</span> <span class="dt">Int</span><span class="op">)</span> <span class="op">&#123;</span></span>
<span id="cb10-19"><a href="#cb10-19" aria-hidden="true" tabindex="-1"></a>        <span class="kw">super</span><span class="op">.</span>onMeasure<span class="op">(</span>widthMeasureSpec<span class="op">,</span> heightMeasureSpec<span class="op">)</span></span>
<span id="cb10-20"><a href="#cb10-20" aria-hidden="true" tabindex="-1"></a>        <span class="kw">val</span> <span class="va">width</span> <span class="op">=</span> View<span class="op">.</span>getDefaultSize<span class="op">(</span>suggestedMinimumWidth<span class="op">,</span> widthMeasureSpec<span class="op">)</span></span>
<span id="cb10-21"><a href="#cb10-21" aria-hidden="true" tabindex="-1"></a>        setMeasuredDimension<span class="op">(</span>width<span class="op">,</span> ceil<span class="op">(</span>width <span class="op">*</span> factor<span class="op">).</span>toInt<span class="op">())</span></span>
<span id="cb10-22"><a href="#cb10-22" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#125;</span></span>
<span id="cb10-23"><a href="#cb10-23" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb10-24"><a href="#cb10-24" aria-hidden="true" tabindex="-1"></a>    <span class="kw">companion</span> <span class="kw">object</span> <span class="op">&#123;</span></span>
<span id="cb10-25"><a href="#cb10-25" aria-hidden="true" tabindex="-1"></a>        <span class="kw">private</span> const <span class="kw">val</span> <span class="va">DEFAULT_FACTOR</span> <span class="op">=</span> <span class="fl">.6f</span></span>
<span id="cb10-26"><a href="#cb10-26" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#125;</span></span>
<span id="cb10-27"><a href="#cb10-27" aria-hidden="true" tabindex="-1"></a><span class="op">&#125;</span></span></code></pre></div>
<h2 id="合并所有代码">合并所有代码！</h2>
<p>让我们看看最终的代码：</p>
<div class="sourceCode" id="cb11"><pre class="sourceCode kotlin"><code class="sourceCode kotlin"><span id="cb11-1"><a href="#cb11-1" aria-hidden="true" tabindex="-1"></a><span class="kw">class</span> ChatImageView @JvmOverloads <span class="kw">constructor</span><span class="op">(</span></span>
<span id="cb11-2"><a href="#cb11-2" aria-hidden="true" tabindex="-1"></a>    <span class="va">context</span><span class="op">:</span> <span class="dt">Context</span><span class="op">,</span> <span class="va">attrs</span><span class="op">:</span> <span class="dt">AttributeSet</span><span class="op">?</span> <span class="op">=</span> null<span class="op">,</span> <span class="va">defStyleAttr</span><span class="op">:</span> <span class="dt">Int</span> <span class="op">=</span> <span class="dv">0</span></span>
<span id="cb11-3"><a href="#cb11-3" aria-hidden="true" tabindex="-1"></a><span class="op">)</span> <span class="op">:</span> <span class="dt">FixRatioImageView</span><span class="op">(</span><span class="va">context</span><span class="op">,</span> <span class="va">attrs</span><span class="op">,</span> <span class="va">defStyleAttr</span><span class="op">)</span> <span class="op">&#123;</span></span>
<span id="cb11-4"><a href="#cb11-4" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb11-5"><a href="#cb11-5" aria-hidden="true" tabindex="-1"></a>    <span class="kw">private</span> <span class="kw">val</span> <span class="va">measurer</span> <span class="op">=</span> ImageSizeMeasurer<span class="op">()</span></span>
<span id="cb11-6"><a href="#cb11-6" aria-hidden="true" tabindex="-1"></a>    <span class="kw">private</span> <span class="kw">val</span> <span class="va">measureResult</span> <span class="op">=</span> Size<span class="op">(</span><span class="dv">0</span><span class="op">,</span> <span class="dv">0</span><span class="op">)</span></span>
<span id="cb11-7"><a href="#cb11-7" aria-hidden="true" tabindex="-1"></a>    <span class="kw">private</span> <span class="kw">val</span> <span class="va">maxSize</span> <span class="op">=</span> Size<span class="op">(</span><span class="dv">0</span><span class="op">,</span> <span class="dv">0</span><span class="op">)</span></span>
<span id="cb11-8"><a href="#cb11-8" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb11-9"><a href="#cb11-9" aria-hidden="true" tabindex="-1"></a>    <span class="kw">override</span> <span class="kw">fun</span> <span class="fu">onMeasure</span><span class="op">(</span><span class="va">widthMeasureSpec</span><span class="op">:</span> <span class="dt">Int</span><span class="op">,</span> <span class="va">heightMeasureSpec</span><span class="op">:</span> <span class="dt">Int</span><span class="op">)</span> <span class="op">&#123;</span></span>
<span id="cb11-10"><a href="#cb11-10" aria-hidden="true" tabindex="-1"></a>        <span class="cf">if</span> <span class="op">(</span>measurer<span class="op">.</span>desired<span class="op">.</span>isSpecified<span class="op">)</span> <span class="op">&#123;</span></span>
<span id="cb11-11"><a href="#cb11-11" aria-hidden="true" tabindex="-1"></a>            <span class="cf">if</span> <span class="op">(</span>MeasureSpec<span class="op">.</span>getMode<span class="op">(</span>widthMeasureSpec<span class="op">)</span> <span class="op">==</span> MeasureSpec<span class="op">.</span>UNSPECIFIED<span class="op">)</span> <span class="op">&#123;</span></span>
<span id="cb11-12"><a href="#cb11-12" aria-hidden="true" tabindex="-1"></a>                setMeasuredDimension<span class="op">(</span>measurer<span class="op">.</span>desired<span class="op">.</span>width<span class="op">,</span> measurer<span class="op">.</span>desired<span class="op">.</span>height<span class="op">)</span></span>
<span id="cb11-13"><a href="#cb11-13" aria-hidden="true" tabindex="-1"></a>            <span class="op">&#125;</span> <span class="cf">else</span> <span class="op">&#123;</span></span>
<span id="cb11-14"><a href="#cb11-14" aria-hidden="true" tabindex="-1"></a>                measure<span class="op">(</span>widthMeasureSpec<span class="op">)</span></span>
<span id="cb11-15"><a href="#cb11-15" aria-hidden="true" tabindex="-1"></a>            <span class="op">&#125;</span></span>
<span id="cb11-16"><a href="#cb11-16" aria-hidden="true" tabindex="-1"></a>        <span class="op">&#125;</span> <span class="cf">else</span> <span class="cf">if</span> <span class="op">(</span>measurer<span class="op">.</span>fixRatio <span class="op">&gt;</span> <span class="dv">0</span><span class="op">)</span> <span class="op">&#123;</span></span>
<span id="cb11-17"><a href="#cb11-17" aria-hidden="true" tabindex="-1"></a>            <span class="cf">if</span> <span class="op">(</span>MeasureSpec<span class="op">.</span>getMode<span class="op">(</span>widthMeasureSpec<span class="op">)</span> <span class="op">==</span> MeasureSpec<span class="op">.</span>UNSPECIFIED<span class="op">)</span> <span class="op">&#123;</span></span>
<span id="cb11-18"><a href="#cb11-18" aria-hidden="true" tabindex="-1"></a>                <span class="kw">super</span><span class="op">.</span>onMeasure<span class="op">(</span>widthMeasureSpec<span class="op">,</span> heightMeasureSpec<span class="op">)</span></span>
<span id="cb11-19"><a href="#cb11-19" aria-hidden="true" tabindex="-1"></a>            <span class="op">&#125;</span> <span class="cf">else</span> <span class="op">&#123;</span></span>
<span id="cb11-20"><a href="#cb11-20" aria-hidden="true" tabindex="-1"></a>                measure<span class="op">(</span>widthMeasureSpec<span class="op">)</span></span>
<span id="cb11-21"><a href="#cb11-21" aria-hidden="true" tabindex="-1"></a>            <span class="op">&#125;</span></span>
<span id="cb11-22"><a href="#cb11-22" aria-hidden="true" tabindex="-1"></a>        <span class="op">&#125;</span> <span class="cf">else</span> <span class="op">&#123;</span></span>
<span id="cb11-23"><a href="#cb11-23" aria-hidden="true" tabindex="-1"></a>            <span class="kw">super</span><span class="op">.</span>onMeasure<span class="op">(</span>widthMeasureSpec<span class="op">,</span> heightMeasureSpec<span class="op">)</span></span>
<span id="cb11-24"><a href="#cb11-24" aria-hidden="true" tabindex="-1"></a>        <span class="op">&#125;</span></span>
<span id="cb11-25"><a href="#cb11-25" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#125;</span></span>
<span id="cb11-26"><a href="#cb11-26" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb11-27"><a href="#cb11-27" aria-hidden="true" tabindex="-1"></a>    <span class="kw">private</span> <span class="kw">fun</span> <span class="fu">measure</span><span class="op">(</span><span class="va">widthSpec</span><span class="op">:</span> <span class="dt">Int</span><span class="op">)</span> <span class="op">&#123;</span></span>
<span id="cb11-28"><a href="#cb11-28" aria-hidden="true" tabindex="-1"></a>        maxSize<span class="op">.</span>width <span class="op">=</span> MeasureSpec<span class="op">.</span>getSize<span class="op">(</span>widthSpec<span class="op">)</span></span>
<span id="cb11-29"><a href="#cb11-29" aria-hidden="true" tabindex="-1"></a>        maxSize<span class="op">.</span>height <span class="op">=</span> <span class="op">(</span>maxSize<span class="op">.</span>width <span class="op">*</span> factor<span class="op">).</span>toInt<span class="op">()</span></span>
<span id="cb11-30"><a href="#cb11-30" aria-hidden="true" tabindex="-1"></a>        measurer<span class="op">.</span>measure<span class="op">(</span>maxSize<span class="op">,</span> measureResult<span class="op">)</span></span>
<span id="cb11-31"><a href="#cb11-31" aria-hidden="true" tabindex="-1"></a>        setMeasuredDimension<span class="op">(</span>measureResult<span class="op">.</span>width<span class="op">,</span> measureResult<span class="op">.</span>height<span class="op">)</span></span>
<span id="cb11-32"><a href="#cb11-32" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#125;</span></span>
<span id="cb11-33"><a href="#cb11-33" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb11-34"><a href="#cb11-34" aria-hidden="true" tabindex="-1"></a>    <span class="kw">fun</span> <span class="fu">setDesiredSize</span><span class="op">(</span><span class="va">width</span><span class="op">:</span> <span class="dt">Int</span><span class="op">,</span> <span class="va">height</span><span class="op">:</span> <span class="dt">Int</span><span class="op">)</span> <span class="op">&#123;</span></span>
<span id="cb11-35"><a href="#cb11-35" aria-hidden="true" tabindex="-1"></a>        measurer<span class="op">.</span>setDesiredSize<span class="op">(</span>Size<span class="op">(</span>width<span class="op">,</span> height<span class="op">),</span> Size<span class="op">(</span>minimumWidth<span class="op">,</span> minimumHeight<span class="op">))</span></span>
<span id="cb11-36"><a href="#cb11-36" aria-hidden="true" tabindex="-1"></a>        invalidate<span class="op">()</span></span>
<span id="cb11-37"><a href="#cb11-37" aria-hidden="true" tabindex="-1"></a>        requestLayout<span class="op">()</span></span>
<span id="cb11-38"><a href="#cb11-38" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#125;</span></span>
<span id="cb11-39"><a href="#cb11-39" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb11-40"><a href="#cb11-40" aria-hidden="true" tabindex="-1"></a>    <span class="kw">fun</span> <span class="fu">setDesiredRatio</span><span class="op">(</span><span class="va">ratio</span><span class="op">:</span> <span class="dt">Float</span><span class="op">)</span> <span class="op">&#123;</span></span>
<span id="cb11-41"><a href="#cb11-41" aria-hidden="true" tabindex="-1"></a>        measurer<span class="op">.</span>setDesiredRatio<span class="op">(</span>ratio<span class="op">,</span> Size<span class="op">(</span>minimumWidth<span class="op">,</span> minimumHeight<span class="op">))</span></span>
<span id="cb11-42"><a href="#cb11-42" aria-hidden="true" tabindex="-1"></a>        invalidate<span class="op">()</span></span>
<span id="cb11-43"><a href="#cb11-43" aria-hidden="true" tabindex="-1"></a>        requestLayout<span class="op">()</span></span>
<span id="cb11-44"><a href="#cb11-44" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#125;</span></span>
<span id="cb11-45"><a href="#cb11-45" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb11-46"><a href="#cb11-46" aria-hidden="true" tabindex="-1"></a>    <span class="kw">internal</span> <span class="kw">class</span> ImageSizeMeasurer <span class="op">&#123;</span></span>
<span id="cb11-47"><a href="#cb11-47" aria-hidden="true" tabindex="-1"></a>        <span class="kw">private</span> <span class="kw">var</span> <span class="va">minSize</span><span class="op">:</span> Size <span class="op">=</span> Size<span class="op">(</span><span class="dv">0</span><span class="op">,</span> <span class="dv">0</span><span class="op">)</span></span>
<span id="cb11-48"><a href="#cb11-48" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb11-49"><a href="#cb11-49" aria-hidden="true" tabindex="-1"></a>        <span class="kw">private</span> <span class="kw">var</span> <span class="va">desiredSize</span> <span class="op">=</span> Size<span class="op">(</span><span class="dv">0</span><span class="op">,</span> <span class="dv">0</span><span class="op">)</span></span>
<span id="cb11-50"><a href="#cb11-50" aria-hidden="true" tabindex="-1"></a>        <span class="kw">val</span> <span class="va">desired</span> <span class="kw">get</span><span class="op">()</span> <span class="op">=</span> desiredSize<span class="op">.</span>copy<span class="op">()</span></span>
<span id="cb11-51"><a href="#cb11-51" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb11-52"><a href="#cb11-52" aria-hidden="true" tabindex="-1"></a>        <span class="co">// 缩放因子 height : width</span></span>
<span id="cb11-53"><a href="#cb11-53" aria-hidden="true" tabindex="-1"></a>        <span class="kw">var</span> <span class="va">fixRatio</span><span class="op">:</span> <span class="kw">Float</span> <span class="op">=</span> <span class="fl">1f</span></span>
<span id="cb11-54"><a href="#cb11-54" aria-hidden="true" tabindex="-1"></a>            <span class="kw">private</span> <span class="kw">set</span></span>
<span id="cb11-55"><a href="#cb11-55" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb11-56"><a href="#cb11-56" aria-hidden="true" tabindex="-1"></a>        init <span class="op">&#123;</span> reset<span class="op">()</span> <span class="op">&#125;</span></span>
<span id="cb11-57"><a href="#cb11-57" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb11-58"><a href="#cb11-58" aria-hidden="true" tabindex="-1"></a>        <span class="co">// 我们依赖客户端的 MATCH_PARENT 的设置以获取宽度</span></span>
<span id="cb11-59"><a href="#cb11-59" aria-hidden="true" tabindex="-1"></a>        <span class="co">// 并且不创建新的 Size</span></span>
<span id="cb11-60"><a href="#cb11-60" aria-hidden="true" tabindex="-1"></a>        <span class="kw">fun</span> <span class="fu">measure</span><span class="op">(</span><span class="va">max</span><span class="op">:</span> <span class="dt">Size</span><span class="op">,</span> <span class="kw">out</span><span class="op">:</span> <span class="dt">Size</span><span class="op">)</span> <span class="op">&#123;</span></span>
<span id="cb11-61"><a href="#cb11-61" aria-hidden="true" tabindex="-1"></a>            <span class="kw">val</span> <span class="va">desired</span> <span class="op">=</span> desiredSize<span class="op">.</span>copy<span class="op">()</span></span>
<span id="cb11-62"><a href="#cb11-62" aria-hidden="true" tabindex="-1"></a>            fixUnspecifiedDesiredSize<span class="op">(</span>max<span class="op">,</span> desired<span class="op">)</span></span>
<span id="cb11-63"><a href="#cb11-63" aria-hidden="true" tabindex="-1"></a>            magicallyStretchTooSmallSize<span class="op">(</span>max<span class="op">,</span> desired<span class="op">)</span></span>
<span id="cb11-64"><a href="#cb11-64" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb11-65"><a href="#cb11-65" aria-hidden="true" tabindex="-1"></a>            <span class="cf">when</span> <span class="op">&#123;</span></span>
<span id="cb11-66"><a href="#cb11-66" aria-hidden="true" tabindex="-1"></a>                desired <span class="kw">in</span> max <span class="op">-&gt;</span> <span class="kw">out</span><span class="op">.</span>update<span class="op">(</span>desired<span class="op">)</span></span>
<span id="cb11-67"><a href="#cb11-67" aria-hidden="true" tabindex="-1"></a>                fixRatio <span class="op">&lt;</span> max<span class="op">.</span>ratio <span class="op">-&gt;</span> <span class="op">&#123;</span></span>
<span id="cb11-68"><a href="#cb11-68" aria-hidden="true" tabindex="-1"></a>                    <span class="kw">out</span><span class="op">.</span>width <span class="op">=</span> max<span class="op">.</span>width</span>
<span id="cb11-69"><a href="#cb11-69" aria-hidden="true" tabindex="-1"></a>                    <span class="kw">out</span><span class="op">.</span>height <span class="op">=</span> max<span class="op">((</span>max<span class="op">.</span>width <span class="op">*</span> desired<span class="op">.</span>height<span class="op">)</span> <span class="op">/</span> desired<span class="op">.</span>width<span class="op">,</span> minSize<span class="op">.</span>height<span class="op">)</span></span>
<span id="cb11-70"><a href="#cb11-70" aria-hidden="true" tabindex="-1"></a>                <span class="op">&#125;</span></span>
<span id="cb11-71"><a href="#cb11-71" aria-hidden="true" tabindex="-1"></a>                fixRatio <span class="op">&gt;</span> max<span class="op">.</span>ratio <span class="op">-&gt;</span> <span class="op">&#123;</span></span>
<span id="cb11-72"><a href="#cb11-72" aria-hidden="true" tabindex="-1"></a>                    <span class="kw">out</span><span class="op">.</span>width <span class="op">=</span> max<span class="op">((</span>max<span class="op">.</span>height <span class="op">*</span> desired<span class="op">.</span>width<span class="op">)</span> <span class="op">/</span> desired<span class="op">.</span>height<span class="op">,</span> minSize<span class="op">.</span>width<span class="op">)</span></span>
<span id="cb11-73"><a href="#cb11-73" aria-hidden="true" tabindex="-1"></a>                    <span class="kw">out</span><span class="op">.</span>height <span class="op">=</span> max<span class="op">.</span>height</span>
<span id="cb11-74"><a href="#cb11-74" aria-hidden="true" tabindex="-1"></a>                <span class="op">&#125;</span></span>
<span id="cb11-75"><a href="#cb11-75" aria-hidden="true" tabindex="-1"></a>                <span class="cf">else</span> <span class="op">-&gt;</span> <span class="kw">out</span><span class="op">.</span>update<span class="op">(</span>max<span class="op">)</span></span>
<span id="cb11-76"><a href="#cb11-76" aria-hidden="true" tabindex="-1"></a>            <span class="op">&#125;</span></span>
<span id="cb11-77"><a href="#cb11-77" aria-hidden="true" tabindex="-1"></a>        <span class="op">&#125;</span></span>
<span id="cb11-78"><a href="#cb11-78" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb11-79"><a href="#cb11-79" aria-hidden="true" tabindex="-1"></a>        <span class="co">// 如果没有指定期望尺寸，但指定了缩放因数，那么先将图像最大程度地伸展</span></span>
<span id="cb11-80"><a href="#cb11-80" aria-hidden="true" tabindex="-1"></a>        <span class="kw">private</span> <span class="kw">fun</span> <span class="fu">fixUnspecifiedDesiredSize</span><span class="op">(</span><span class="va">max</span><span class="op">:</span> <span class="dt">Size</span><span class="op">,</span> <span class="va">desired</span><span class="op">:</span> <span class="dt">Size</span><span class="op">)</span> <span class="op">&#123;</span></span>
<span id="cb11-81"><a href="#cb11-81" aria-hidden="true" tabindex="-1"></a>            <span class="cf">if</span> <span class="op">(!</span>desired<span class="op">.</span>isSpecified<span class="op">)</span> <span class="op">&#123;</span></span>
<span id="cb11-82"><a href="#cb11-82" aria-hidden="true" tabindex="-1"></a>                <span class="cf">if</span> <span class="op">(</span>fixRatio <span class="op">&gt;</span> max<span class="op">.</span>ratio<span class="op">)</span> <span class="op">&#123;</span></span>
<span id="cb11-83"><a href="#cb11-83" aria-hidden="true" tabindex="-1"></a>                    desired<span class="op">.</span>width <span class="op">=</span> max<span class="op">.</span>width</span>
<span id="cb11-84"><a href="#cb11-84" aria-hidden="true" tabindex="-1"></a>                    desired<span class="op">.</span>height <span class="op">=</span> <span class="op">(</span>max<span class="op">.</span>width <span class="op">*</span> fixRatio<span class="op">).</span>toInt<span class="op">()</span></span>
<span id="cb11-85"><a href="#cb11-85" aria-hidden="true" tabindex="-1"></a>                <span class="op">&#125;</span> <span class="cf">else</span> <span class="op">&#123;</span></span>
<span id="cb11-86"><a href="#cb11-86" aria-hidden="true" tabindex="-1"></a>                    desired<span class="op">.</span>width <span class="op">=</span> <span class="op">(</span>max<span class="op">.</span>height <span class="op">/</span> fixRatio<span class="op">).</span>toInt<span class="op">()</span></span>
<span id="cb11-87"><a href="#cb11-87" aria-hidden="true" tabindex="-1"></a>                    desired<span class="op">.</span>height <span class="op">=</span> max<span class="op">.</span>height</span>
<span id="cb11-88"><a href="#cb11-88" aria-hidden="true" tabindex="-1"></a>                <span class="op">&#125;</span></span>
<span id="cb11-89"><a href="#cb11-89" aria-hidden="true" tabindex="-1"></a>            <span class="op">&#125;</span></span>
<span id="cb11-90"><a href="#cb11-90" aria-hidden="true" tabindex="-1"></a>        <span class="op">&#125;</span></span>
<span id="cb11-91"><a href="#cb11-91" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb11-92"><a href="#cb11-92" aria-hidden="true" tabindex="-1"></a>        <span class="at">@Suppress</span><span class="op">(</span><span class="st">"MagicNumber"</span><span class="op">)</span></span>
<span id="cb11-93"><a href="#cb11-93" aria-hidden="true" tabindex="-1"></a>        <span class="kw">private</span> <span class="kw">fun</span> <span class="fu">magicallyStretchTooSmallSize</span><span class="op">(</span><span class="va">max</span><span class="op">:</span> <span class="dt">Size</span><span class="op">,</span> <span class="va">desired</span><span class="op">:</span> <span class="dt">Size</span><span class="op">)</span> <span class="op">&#123;</span></span>
<span id="cb11-94"><a href="#cb11-94" aria-hidden="true" tabindex="-1"></a>            <span class="cf">if</span> <span class="op">(</span>desired <span class="kw">in</span> max<span class="op">)</span> <span class="op">&#123;</span></span>
<span id="cb11-95"><a href="#cb11-95" aria-hidden="true" tabindex="-1"></a>                <span class="co">// 如果图像比最大界限小，我们就把这张图额外拉伸一点儿至边界值</span></span>
<span id="cb11-96"><a href="#cb11-96" aria-hidden="true" tabindex="-1"></a>                <span class="co">// 这是有意这么做的，因为如果我们要发送小图像，图像不应该太小。</span></span>
<span id="cb11-97"><a href="#cb11-97" aria-hidden="true" tabindex="-1"></a>                <span class="co">// 因此，它只是某种调整魔法，让图片看起来更靓 ;)</span></span>
<span id="cb11-98"><a href="#cb11-98" aria-hidden="true" tabindex="-1"></a>                <span class="kw">val</span> <span class="va">adjustedArea</span> <span class="op">=</span> desired<span class="op">.</span>area <span class="op">+</span> <span class="op">(</span>max<span class="op">.</span>area <span class="op">-</span> desired<span class="op">.</span>area<span class="op">)</span> <span class="op">/</span> <span class="fl">3f</span></span>
<span id="cb11-99"><a href="#cb11-99" aria-hidden="true" tabindex="-1"></a>                <span class="kw">val</span> <span class="va">outW</span> <span class="op">=</span> sqrt<span class="op">(</span>adjustedArea <span class="op">/</span> fixRatio<span class="op">)</span></span>
<span id="cb11-100"><a href="#cb11-100" aria-hidden="true" tabindex="-1"></a>                desired<span class="op">.</span>height <span class="op">=</span> <span class="op">(</span>outW <span class="op">*</span> fixRatio<span class="op">).</span>toInt<span class="op">()</span></span>
<span id="cb11-101"><a href="#cb11-101" aria-hidden="true" tabindex="-1"></a>                desired<span class="op">.</span>width <span class="op">=</span> outW<span class="op">.</span>toInt<span class="op">()</span></span>
<span id="cb11-102"><a href="#cb11-102" aria-hidden="true" tabindex="-1"></a>            <span class="op">&#125;</span></span>
<span id="cb11-103"><a href="#cb11-103" aria-hidden="true" tabindex="-1"></a>        <span class="op">&#125;</span></span>
<span id="cb11-104"><a href="#cb11-104" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb11-105"><a href="#cb11-105" aria-hidden="true" tabindex="-1"></a>        <span class="kw">fun</span> <span class="fu">setDesiredRatio</span><span class="op">(</span><span class="va">ratio</span><span class="op">:</span> <span class="dt">Float</span><span class="op">,</span> <span class="va">min</span><span class="op">:</span> <span class="dt">Size</span><span class="op">)</span> <span class="op">&#123;</span></span>
<span id="cb11-106"><a href="#cb11-106" aria-hidden="true" tabindex="-1"></a>            reset<span class="op">()</span></span>
<span id="cb11-107"><a href="#cb11-107" aria-hidden="true" tabindex="-1"></a>            minSize <span class="op">=</span> min<span class="op">.</span>copy<span class="op">()</span></span>
<span id="cb11-108"><a href="#cb11-108" aria-hidden="true" tabindex="-1"></a>            fixRatio <span class="op">=</span> ratio</span>
<span id="cb11-109"><a href="#cb11-109" aria-hidden="true" tabindex="-1"></a>        <span class="op">&#125;</span></span>
<span id="cb11-110"><a href="#cb11-110" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb11-111"><a href="#cb11-111" aria-hidden="true" tabindex="-1"></a>        <span class="kw">fun</span> <span class="fu">setDesiredSize</span><span class="op">(</span><span class="va">desired</span><span class="op">:</span> <span class="dt">Size</span><span class="op">,</span> <span class="va">min</span><span class="op">:</span> <span class="dt">Size</span><span class="op">)</span> <span class="op">&#123;</span></span>
<span id="cb11-112"><a href="#cb11-112" aria-hidden="true" tabindex="-1"></a>            minSize <span class="op">=</span> min<span class="op">.</span>copy<span class="op">()</span></span>
<span id="cb11-113"><a href="#cb11-113" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb11-114"><a href="#cb11-114" aria-hidden="true" tabindex="-1"></a>            <span class="cf">if</span> <span class="op">(!</span>desired<span class="op">.</span>isSpecified<span class="op">)</span> <span class="op">&#123;</span></span>
<span id="cb11-115"><a href="#cb11-115" aria-hidden="true" tabindex="-1"></a>                reset<span class="op">()</span></span>
<span id="cb11-116"><a href="#cb11-116" aria-hidden="true" tabindex="-1"></a>            <span class="op">&#125;</span> <span class="cf">else</span> <span class="op">&#123;</span></span>
<span id="cb11-117"><a href="#cb11-117" aria-hidden="true" tabindex="-1"></a>                desiredSize <span class="op">=</span> desired<span class="op">.</span>copy<span class="op">()</span></span>
<span id="cb11-118"><a href="#cb11-118" aria-hidden="true" tabindex="-1"></a>                fixRatio <span class="op">=</span> desired<span class="op">.</span>ratio</span>
<span id="cb11-119"><a href="#cb11-119" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb11-120"><a href="#cb11-120" aria-hidden="true" tabindex="-1"></a>                adjustDesiredHeight<span class="op">()</span></span>
<span id="cb11-121"><a href="#cb11-121" aria-hidden="true" tabindex="-1"></a>                adjustDesiredWidth<span class="op">()</span></span>
<span id="cb11-122"><a href="#cb11-122" aria-hidden="true" tabindex="-1"></a>            <span class="op">&#125;</span></span>
<span id="cb11-123"><a href="#cb11-123" aria-hidden="true" tabindex="-1"></a>        <span class="op">&#125;</span></span>
<span id="cb11-124"><a href="#cb11-124" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb11-125"><a href="#cb11-125" aria-hidden="true" tabindex="-1"></a>        <span class="kw">private</span> <span class="kw">fun</span> <span class="fu">adjustDesiredHeight</span><span class="op">()</span> <span class="op">&#123;</span></span>
<span id="cb11-126"><a href="#cb11-126" aria-hidden="true" tabindex="-1"></a>            <span class="cf">if</span> <span class="op">(</span>desiredSize<span class="op">.</span>height <span class="op">&lt;</span> minSize<span class="op">.</span>height<span class="op">)</span> <span class="op">&#123;</span></span>
<span id="cb11-127"><a href="#cb11-127" aria-hidden="true" tabindex="-1"></a>                desiredSize<span class="op">.</span>height <span class="op">=</span> minSize<span class="op">.</span>height</span>
<span id="cb11-128"><a href="#cb11-128" aria-hidden="true" tabindex="-1"></a>                desiredSize<span class="op">.</span>width <span class="op">=</span> <span class="op">(</span>minSize<span class="op">.</span>height <span class="op">/</span> fixRatio<span class="op">).</span>toInt<span class="op">()</span></span>
<span id="cb11-129"><a href="#cb11-129" aria-hidden="true" tabindex="-1"></a>            <span class="op">&#125;</span></span>
<span id="cb11-130"><a href="#cb11-130" aria-hidden="true" tabindex="-1"></a>        <span class="op">&#125;</span></span>
<span id="cb11-131"><a href="#cb11-131" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb11-132"><a href="#cb11-132" aria-hidden="true" tabindex="-1"></a>        <span class="kw">private</span> <span class="kw">fun</span> <span class="fu">adjustDesiredWidth</span><span class="op">()</span> <span class="op">&#123;</span></span>
<span id="cb11-133"><a href="#cb11-133" aria-hidden="true" tabindex="-1"></a>            <span class="cf">if</span> <span class="op">(</span>desiredSize<span class="op">.</span>width <span class="op">&lt;</span> minSize<span class="op">.</span>width<span class="op">)</span> <span class="op">&#123;</span></span>
<span id="cb11-134"><a href="#cb11-134" aria-hidden="true" tabindex="-1"></a>                desiredSize<span class="op">.</span>width <span class="op">=</span> minSize<span class="op">.</span>width</span>
<span id="cb11-135"><a href="#cb11-135" aria-hidden="true" tabindex="-1"></a>                desiredSize<span class="op">.</span>height <span class="op">=</span> <span class="op">(</span>minSize<span class="op">.</span>width <span class="op">*</span> fixRatio<span class="op">).</span>toInt<span class="op">()</span></span>
<span id="cb11-136"><a href="#cb11-136" aria-hidden="true" tabindex="-1"></a>            <span class="op">&#125;</span></span>
<span id="cb11-137"><a href="#cb11-137" aria-hidden="true" tabindex="-1"></a>        <span class="op">&#125;</span></span>
<span id="cb11-138"><a href="#cb11-138" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb11-139"><a href="#cb11-139" aria-hidden="true" tabindex="-1"></a>        <span class="kw">private</span> <span class="kw">fun</span> <span class="fu">reset</span><span class="op">()</span> <span class="op">&#123;</span></span>
<span id="cb11-140"><a href="#cb11-140" aria-hidden="true" tabindex="-1"></a>            desiredSize <span class="op">=</span> Size<span class="op">(</span><span class="dv">0</span><span class="op">,</span> <span class="dv">0</span><span class="op">)</span></span>
<span id="cb11-141"><a href="#cb11-141" aria-hidden="true" tabindex="-1"></a>            fixRatio <span class="op">=</span> <span class="fl">1f</span></span>
<span id="cb11-142"><a href="#cb11-142" aria-hidden="true" tabindex="-1"></a>        <span class="op">&#125;</span></span>
<span id="cb11-143"><a href="#cb11-143" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#125;</span></span>
<span id="cb11-144"><a href="#cb11-144" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb11-145"><a href="#cb11-145" aria-hidden="true" tabindex="-1"></a>    <span class="kw">internal</span> <span class="kw">class</span> Size<span class="op">(</span></span>
<span id="cb11-146"><a href="#cb11-146" aria-hidden="true" tabindex="-1"></a>        <span class="kw">var</span> <span class="va">width</span><span class="op">:</span> <span class="dt">Int</span><span class="op">,</span></span>
<span id="cb11-147"><a href="#cb11-147" aria-hidden="true" tabindex="-1"></a>        <span class="kw">var</span> <span class="va">height</span><span class="op">:</span> <span class="dt">Int</span></span>
<span id="cb11-148"><a href="#cb11-148" aria-hidden="true" tabindex="-1"></a>    <span class="op">)</span> <span class="op">&#123;</span></span>
<span id="cb11-149"><a href="#cb11-149" aria-hidden="true" tabindex="-1"></a>        <span class="kw">val</span> <span class="va">area</span><span class="op">:</span> <span class="kw">Int</span> <span class="kw">get</span><span class="op">()</span> <span class="op">=</span> width <span class="op">*</span> height</span>
<span id="cb11-150"><a href="#cb11-150" aria-hidden="true" tabindex="-1"></a>        <span class="kw">val</span> <span class="va">ratio</span><span class="op">:</span> <span class="kw">Float</span> <span class="kw">get</span><span class="op">()</span> <span class="op">=</span> height<span class="op">.</span>toFloat<span class="op">()</span> <span class="op">/</span> width</span>
<span id="cb11-151"><a href="#cb11-151" aria-hidden="true" tabindex="-1"></a>        <span class="kw">val</span> <span class="va">isSpecified</span><span class="op">:</span> <span class="kw">Boolean</span> <span class="kw">get</span><span class="op">()</span> <span class="op">=</span> width <span class="op">&gt;</span> <span class="dv">0</span> <span class="op">&amp;&amp;</span> height <span class="op">&gt;</span> <span class="dv">0</span></span>
<span id="cb11-152"><a href="#cb11-152" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb11-153"><a href="#cb11-153" aria-hidden="true" tabindex="-1"></a>        <span class="kw">operator</span> <span class="kw">fun</span> <span class="fu">contains</span><span class="op">(</span><span class="va">other</span><span class="op">:</span> <span class="dt">Size</span><span class="op">)</span> <span class="op">=</span> width <span class="op">&gt;=</span> other<span class="op">.</span>width <span class="op">&amp;&amp;</span> height <span class="op">&gt;=</span> other<span class="op">.</span>height</span>
<span id="cb11-154"><a href="#cb11-154" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb11-155"><a href="#cb11-155" aria-hidden="true" tabindex="-1"></a>        <span class="kw">fun</span> <span class="fu">update</span><span class="op">(</span><span class="va">new</span><span class="op">:</span> <span class="dt">Size</span><span class="op">)</span> <span class="op">&#123;</span></span>
<span id="cb11-156"><a href="#cb11-156" aria-hidden="true" tabindex="-1"></a>            width <span class="op">=</span> new<span class="op">.</span>width</span>
<span id="cb11-157"><a href="#cb11-157" aria-hidden="true" tabindex="-1"></a>            height <span class="op">=</span> new<span class="op">.</span>height</span>
<span id="cb11-158"><a href="#cb11-158" aria-hidden="true" tabindex="-1"></a>        <span class="op">&#125;</span></span>
<span id="cb11-159"><a href="#cb11-159" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb11-160"><a href="#cb11-160" aria-hidden="true" tabindex="-1"></a>        <span class="co">// 不想使可变类成为数据类</span></span>
<span id="cb11-161"><a href="#cb11-161" aria-hidden="true" tabindex="-1"></a>        <span class="kw">fun</span> <span class="fu">copy</span><span class="op">(</span><span class="va">width</span><span class="op">:</span> <span class="dt">Int</span> <span class="op">=</span> this<span class="op">.</span>width<span class="op">,</span> <span class="va">height</span><span class="op">:</span> <span class="dt">Int</span> <span class="op">=</span> this<span class="op">.</span>height<span class="op">)</span> <span class="op">=</span> Size<span class="op">(</span>width<span class="op">,</span> height<span class="op">)</span></span>
<span id="cb11-162"><a href="#cb11-162" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#125;</span></span>
<span id="cb11-163"><a href="#cb11-163" aria-hidden="true" tabindex="-1"></a><span class="op">&#125;</span></span></code></pre></div>
<p>我们的努力所换来的完美的运行结果：</p>
<p><img src="https://cdn-images-1.medium.com/max/2000/1*gSYcSTxF0jS3NbpbAR0MXQ.gif"></p>
<h2 id="后记">后记</h2>
<p>如果你喜欢这篇文章，别忘记点赞或一键三连来支持我们。如果你有任何的疑问，请在评论区留言，让我们可以一起讨论！祝你编程快乐！</p>]]></content>
      <categories>
        <category>Computer Science</category>
        <category>Android</category>
      </categories>
      <tags>
        <tag>Computer Science</tag>
        <tag>Android</tag>
        <tag>Kotlin</tag>
        <tag>UI</tag>
      </tags>
  </entry>
  <entry>
    <title>使用 Android 11 进行机器学习：新功能</title>
    <url>/2021/02/25/computer%20science/android/machine-learning-with-android-11-whats-new/</url>
    <content><![CDATA[<blockquote>
<ul>
<li>原文地址：<a href="https://proandroiddev.com/machine-learning-with-android-11-whats-new-1a8d084c7398">Machine
Learning with Android 11: What’s new</a></li>
<li>原文作者：<a href="https://medium.com/@rishit.dagli">Rishit
Dagli</a></li>
<li>译者：<a href="https://github.com/PassionPenguin">霜羽
Hoarfroster</a></li>
<li>校对者：<a href="https://github.com/HumanBeingXenon">HumanBeing</a>、<a href="https://github.com/keepmovingljzy">keepmovingljzy</a>、<a href="https://github.com/lsvih">lsvih</a></li>
</ul>
</blockquote>
<figure>
<img src="https://cdn-images-1.medium.com/max/3840/1*_6zTCa-SeOV2q549ey3b5Q.jpeg" alt="使用 Android 11 进行机器学习：新功能">
<figcaption aria-hidden="true">使用 Android 11
进行机器学习：新功能</figcaption>
</figure>
<p>本文将会向大家展示如何使用专为 <a href="https://developer.android.com/11">Android 11</a>
设计的工具或插件来开始使用设备上的 ML（Machine
Learning，机器学习）功能。如果你以前在 Android 中使用过
ML，则可以跟随本文一起探索将你的 ML 应用程序与 Android
应用程序集成的更简便方法。而如果你没有在 Android 中使用过
ML，那么这可能是你使用 Android 进行 ML 的起点，开始你使用 ML 为你的
Android 应用程序提供超强功能之旅。在此博客中，我将主要演示 Android 11
的两个最强大的更新：<a href="https://developer.android.com/studio/preview/features#tensor-flow-lite-models">ML
模型绑定插件</a>和<a href="https://g.co/mlkit">新的 ML Kit
套件</a>。我们下面讨论的所有示例应用程序代码都可以在<a href="https://github.com/Rishit-dagli/ML-with-Android-11">此 GitHub
存储库</a>中找到。</p>
<p>你也可以在 <a href="https://github.com/Rishit-dagli/ML-with-Android-11/blob/master/talks.md">GitHub
存储库</a>中查看有关该主题的讨论。</p>
<h2 id="为什么我们要关心-android-设备上-ml-功能">为什么我们要关心
Android 设备上 ML 功能？</h2>
<p>如你所见，我们在本文中主要关注设备上的 ML。Android 11 对设备上的 ML
做出了许多很酷的更新，但先简述一下我们为什么要对此加以关注。你也将这里知道为什么会有这么多关于
ML 或 终端 ML 的宣传。</p>
<p><strong>设备上的 ML 背后的理念：</strong></p>
<p>这里使用 ML
的方法与我们的旧有方法恰好相反，我们不再将设备上的数据发送到服务器或某个基于云的系统，在上面使用
ML
判断数据，然后再将得出的结论返回给设备。取而代之的是，直接利用设备上的
ML
模型获取输出或推断，即不再让设备发送数据给服务器判断数据，利用移动设备本身，完成所有的处理和推断。</p>
<figure>
<img src="https://cdn-images-1.medium.com/max/3836/1*O1a_Su6P-XggXk9IXTSzMQ.jpeg" alt="设备上 ML 背后的理念">
<figcaption aria-hidden="true">设备上 ML 背后的理念</figcaption>
</figure>
<p>你不会直接将模型用于你的设备，而需要在导入前先对你的模型进行压缩或优化，以便能够在设备上正常的运行它
——
因为终端设备的计算能力、网络可用性和磁盘空间有限。但在本文中，我们将跳过优化过程，直接部署
<code>.tflite</code> 模型文件。而你可以进一步了解 <a href="https://www.tensorflow.org/lite/">TensorFlow Lite</a>和<a href="https://www.tensorflow.org/lite/performance/model_optimization">模型优化过程</a>。</p>
<p><strong>设备上进行 ML 的优势</strong></p>
<p>使用设备上 ML 的一些优点：</p>
<ul>
<li>能量消耗</li>
</ul>
<p>你所能够想到的第一件事应该就是能耗：曾经你需要耗费大量的能量，将你的视频数据连续发送或流式传输到服务器。但有时这样做是不可行的
——
没有数据网络的时候。值得一提的是，如果你对你的数据先做大量的预处理，倒也能节省些能耗。</p>
<ul>
<li>推理时间</li>
</ul>
<p>另一项要考虑的重要事项是获取输出或实际运行模型所花的时间。对于实时应用而言，这是一个相当重要的层面。程序无需发送或接受数据，加快了推理的速度。</p>
<ul>
<li>网络可用性</li>
</ul>
<p>使用传统方法在考虑网络可用性层面也是相当昂贵的，因为你的设备必须在适宜的带宽或网络环境中，才能连续发送数据并从服务器接收数据才能正常获取
ML 结果。</p>
<ul>
<li>安全</li>
</ul>
<p>最后，你的数据的安全性也将提升：设备不再需要将数据发送到服务器或基于云的系统，即不再将数据发送出设备，从而增强了安全性。</p>
<h2 id="ml-模型绑定插件">ML 模型绑定插件</h2>
<blockquote>
<p>注意：您需要 Android Studio 4.1 或更高版本才能使用 ML
模型绑定插件</p>
</blockquote>
<p><strong>ML 模型绑定插件主要关注什么？</strong></p>
<p>你可以从“模型构建”这个名称中做出足够合理的猜测，从而了解 <a href="https://developer.android.com/studio/preview/features#tensor-flow-lite-models">ML
模型绑定插件</a>。它确实可以使我们非常轻松地使用自定义 TF Lite
模型，让我们这群开发人员可以方便地导入任何 TFLite
模型，读取导入的模型的输入或输出的签名，并且只需要再调用几行代码，就可以使用
TensorFlow Lite Android 支持库。</p>
<p>ML 模型绑定插件使您可以在应用程序中轻松使用 TF
模型。从本质上讲，你需要编写的调用 TensorFlow Lite Android
支持库的代码要少得多。如果你曾经使用过 TensorFlow Lite
模型，则你可能知道你首先需要将所有内容都转换为
<code>ByteArray</code>。使用 ML
模型绑定插件，你将不再需要再将所有内容都转换为
<code>ByteArray</code>。</p>
<p>我喜欢这个新插件的另一个原因是我可以轻松地使用 GPU 和 NN API。使用 ML
模型绑定插件，使用它们从未如此简单。现在，要使用它们，我们仅仅只需要调用一个依赖项和一行代码。难道使用
模型绑定 插件不酷嘛？借助 Android 11 神经网络
API，我们甚至还拥有了无符号整数权重支持和新的服务质量（QOS）API，也同时还支持了更多的终端场景。使用上文谈及的这些功能，你绝对可以更快地进行开发！</p>
<p><strong>使用模型绑定插件</strong></p>
<p>现在让我们看看如何实现所讨论的内容。</p>
<p>因此，第一步是导入带有元数据的 TensorFlow Lite 模型。Android Studio
现在有一个用于导入 TensorFlow
模型的新选项：只需右键单击要导入它的模块，随后你将会在
<code>Others</code> 下看到一个叫 <code>TF Lite Model</code> 的选项。</p>
<figure>
<img src="https://cdn-images-1.medium.com/max/2500/1*fnNNyLYKqafERAjUfwPsxQ.jpeg" alt="Android Studio 中的导入模型选项">
<figcaption aria-hidden="true">Android Studio
中的导入模型选项</figcaption>
</figure>
<p>我们只需传递 <code>tflite</code>
模型的路径即可，而它就会自动地在你之前选择的 <code>ml</code>
模块中的目录中为我们导入模型。我们现在就可以在其中使用该模型，并且我们只需几个单击即可添加依赖项目和使用
GPU 加速。</p>
<figure>
<img src="https://cdn-images-1.medium.com/max/2502/1*wJmnVf7wtCOV50HnXXmmPQ.jpeg" alt="导入 tflite 模型">
<figcaption aria-hidden="true">导入 <code>tflite</code>
模型</figcaption>
</figure>
<p>现在从我的模型元数据中，我还可以知道输入、输出的类型以及其他需要被使用的信息
—— 我们可以通过在 Android Studio 中打开 <code>tflite</code>
模型文件来查看此信息。在这个屏幕截图中，我使用的是我制作的开源模型来对剪刀、石头、布进行区分。我们只需将手放在摄像头前即可识别出是剪刀还是石头还是布，这也是我在本文中演示的内容。</p>
<figure>
<img src="https://cdn-images-1.medium.com/max/2502/1*ZHuSORcTLhxtSWr60TzxWA.jpeg" alt="查看模型元数据">
<figcaption aria-hidden="true">查看模型元数据</figcaption>
</figure>
<p>最后，让我们开始使用该模型，以便进行流推断，这很可能也是你想要执行的操作：实时图像分类。要实现这个，最简单的方法是使用
Camera
X，并将每个帧传递给可以执行推理的函数。在这里，其实我感兴趣的是进行推断的函数。我们可以发现执行此操作真的是非常容易：在导入可以使用的
TF Lite 模型时，似乎也同时生成了一份示例代码。</p>
<div class="sourceCode" id="cb1"><pre class="sourceCode kotlin"><code class="sourceCode kotlin"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a><span class="kw">private</span> <span class="kw">val</span> <span class="va">rpsModel</span> <span class="op">=</span> RPSModel<span class="op">.</span>newInstance<span class="op">(</span>ctx<span class="op">)</span></span></code></pre></div>
<p>这里我们将首先实例化一个 <code>rps</code>
模型，该模型是剪刀石头布模型的缩写，并将其传递给上下文。在使用这个插件，同时我的模型名称为
<code>RPS Model.tflite</code>
的情况下，程序为我创建了一个完全相同名称的类，一个名为
<code>RPS Model</code> 的类。</p>
<div class="sourceCode" id="cb2"><pre class="sourceCode kotlin"><code class="sourceCode kotlin"><span id="cb2-1"><a href="#cb2-1" aria-hidden="true" tabindex="-1"></a><span class="kw">val</span> <span class="va">tfImage</span> <span class="op">=</span> TensorImage<span class="op">.</span>fromBitmap<span class="op">(</span>toBitmap<span class="op">(</span>imageProxy<span class="op">))</span></span></code></pre></div>
<p>现在我们需要将数据转换为可使用的格式，以便将其从 <code>Bitmap</code>
转换为 <code>Tensor Image</code>。如果我们使用 TF
解释器，则我们需要将图像转换为一个<code>ByteArray</code>。但现在我们无需再这样做了
—— 直接交给一个图片代理去处理即可。</p>
<div class="sourceCode" id="cb3"><pre class="sourceCode kotlin"><code class="sourceCode kotlin"><span id="cb3-1"><a href="#cb3-1" aria-hidden="true" tabindex="-1"></a><span class="kw">val</span> <span class="va">outputs</span> <span class="op">=</span> rpsModel<span class="op">.</span>process<span class="op">(</span>tfImage<span class="op">)</span></span>
<span id="cb3-2"><a href="#cb3-2" aria-hidden="true" tabindex="-1"></a>    <span class="op">.</span>probabilityAsCategoryList<span class="op">.</span>apply <span class="op">&#123;</span></span>
<span id="cb3-3"><a href="#cb3-3" aria-hidden="true" tabindex="-1"></a>        sortByDescending <span class="op">&#123;</span> it<span class="op">.</span>score <span class="op">&#125;</span> <span class="co">// 排序，高匹配率优先</span></span>
<span id="cb3-4"><a href="#cb3-4" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#125;.</span>take<span class="op">(</span>MAX_RESULT_DISPLAY<span class="op">)</span> <span class="co">// 抱走第一</span></span></code></pre></div>
<p>现在我们已经将数据传递给模型，我们将处理模型中的图像并获得输出，我们将基本上得到一个匹配率的数组并对其进行降序排序，以获取具有最大值的概率，然后选择降序列表的第一名显示出来。</p>
<div class="sourceCode" id="cb4"><pre class="sourceCode kotlin"><code class="sourceCode kotlin"><span id="cb4-1"><a href="#cb4-1" aria-hidden="true" tabindex="-1"></a><span class="cf">for</span> <span class="op">(</span>output <span class="kw">in</span> outputs<span class="op">)</span> <span class="op">&#123;</span></span>
<span id="cb4-2"><a href="#cb4-2" aria-hidden="true" tabindex="-1"></a>    items<span class="op">.</span>add<span class="op">(</span></span>
<span id="cb4-3"><a href="#cb4-3" aria-hidden="true" tabindex="-1"></a>        Recognition<span class="op">(</span></span>
<span id="cb4-4"><a href="#cb4-4" aria-hidden="true" tabindex="-1"></a>            output<span class="op">.</span>label<span class="op">,</span></span>
<span id="cb4-5"><a href="#cb4-5" aria-hidden="true" tabindex="-1"></a>            output<span class="op">.</span>score</span>
<span id="cb4-6"><a href="#cb4-6" aria-hidden="true" tabindex="-1"></a>        <span class="op">)</span></span>
<span id="cb4-7"><a href="#cb4-7" aria-hidden="true" tabindex="-1"></a>    <span class="op">)</span></span>
<span id="cb4-8"><a href="#cb4-8" aria-hidden="true" tabindex="-1"></a><span class="op">&#125;</span></span></code></pre></div>
<p>最后，我需要向用户显示标签，因此我将在输出中添加与每个条目相对应的标签。这就是我们所需要的全部代码！
🚀～</p>
<p><strong>使用 GPU 加速</strong></p>
<p>如果我们想要使用 GPU 加速，其实做法非常简单。我们只需要在要使用 GPU
并进行构建模型的地方创建一个 <code>options</code>
对象。我只是将其作为参数传递给实例化过程。我们现在就可以使用
GPU，这个简易操作让使用 NN API 加速并在 Android 11
上执行更多操作变得非常容易。</p>
<div class="sourceCode" id="cb5"><pre class="sourceCode kotlin"><code class="sourceCode kotlin"><span id="cb5-1"><a href="#cb5-1" aria-hidden="true" tabindex="-1"></a><span class="kw">private</span> <span class="kw">val</span> <span class="va">options</span> <span class="op">=</span> Model<span class="op">.</span>Options<span class="op">.</span>Builder<span class="op">().</span>setDevice<span class="op">(</span>Model<span class="op">.</span>Device<span class="op">.</span>GPU<span class="op">).</span>build<span class="op">()</span></span>
<span id="cb5-2"><a href="#cb5-2" aria-hidden="true" tabindex="-1"></a><span class="kw">private</span> <span class="kw">val</span> <span class="va">rpsModel</span> <span class="op">=</span> rpsModel<span class="op">.</span>newInstance<span class="op">(</span>ctx<span class="op">,</span> options<span class="op">)</span></span></code></pre></div>
<h2 id="一个新的-ml-kit-套件">一个新的 ML Kit 套件</h2>
<blockquote>
<p>我们现在不再需要 Firebase 项目来与 ML Kit
一起使用，虽然说我们依旧可以在 Firebase 中使用它。</p>
</blockquote>
<p>另一个值得注意的更新是可以通过 <a href="https://g.co/mlkit">ML
Kit</a> 使用 TensorFlow Lite 模型。而且即使我们不使用 Firebase
项目，我们现在也可以直接使用 ML Kit 了。</p>
<p>正如我之前提到的，由于我之前提到的好处，Android 11
中有许多更新集中在设备上的 ML 上。现在，新的 ML Kit
在设备上具有更好的可用性。ML Kit 的<a href="https://developers.google.com/ml-kit/vision/image-labeling/custom-models/android">图像分类</a>和<a href="https://developers.google.com/ml-kit/vision/object-detection/custom-models/android">对象检测和跟踪（ODT）</a>现在也支持自定义模型，这意味着我们可以使用
<code>tflite</code> 模型文件走遍 Android 的 ML
了。这也意味着如果我们正在处理某些常见场景，例如对特定类型的对象检测，那么
ML Kit 是最好的选择。</p>
<p><strong>使用 ML Kit</strong></p>
<p>让我们在代码中看看如何做到这一点～我们现在将要建立一个可以对不同食品分类的模型，</p>
<div class="sourceCode" id="cb6"><pre class="sourceCode kotlin"><code class="sourceCode kotlin"><span id="cb6-1"><a href="#cb6-1" aria-hidden="true" tabindex="-1"></a><span class="kw">private</span> localModel <span class="op">=</span> LocalModel<span class="op">.</span>Builder<span class="op">()</span></span>
<span id="cb6-2"><a href="#cb6-2" aria-hidden="true" tabindex="-1"></a>    <span class="op">.</span>setAssetFilePath<span class="op">(</span><span class="st">"lite-model_aiy_vision_classifier_food_V1_1.tflite"</span><span class="op">).</span></span>
<span id="cb6-3"><a href="#cb6-3" aria-hidden="true" tabindex="-1"></a>    <span class="op">.</span>build<span class="op">()</span></span></code></pre></div>
<p>在这里我将首先通过设置模型并为其指定 <code>tflite</code>
模型文件路径开始。</p>
<div class="sourceCode" id="cb7"><pre class="sourceCode kotlin"><code class="sourceCode kotlin"><span id="cb7-1"><a href="#cb7-1" aria-hidden="true" tabindex="-1"></a><span class="kw">private</span> <span class="kw">val</span> <span class="va">customObjectDetectorOptions</span> <span class="op">=</span> CustomObjectDetectorOptions</span>
<span id="cb7-2"><a href="#cb7-2" aria-hidden="true" tabindex="-1"></a>    <span class="op">.</span>Builder<span class="op">(</span>localModel<span class="op">)</span></span>
<span id="cb7-3"><a href="#cb7-3" aria-hidden="true" tabindex="-1"></a>    <span class="op">.</span>setDetectorMode<span class="op">(</span>CustomObjectDetectorOptions<span class="op">.</span>STREAM_MODE<span class="op">)</span> </span>
<span id="cb7-4"><a href="#cb7-4" aria-hidden="true" tabindex="-1"></a>    <span class="op">.</span>setClassificationConfidenceThreshold<span class="op">(</span><span class="fl">0.8f</span><span class="op">)</span> </span>
<span id="cb7-5"><a href="#cb7-5" aria-hidden="true" tabindex="-1"></a>    <span class="op">.</span>build<span class="op">()</span></span></code></pre></div>
<p>然后，此 <code>tflite</code> 模型将在带有 ML Kit
的对象检测模型的顶部运行。我们现在可以稍微自定义这些选项。在这里，由于要使用流输入并指定置信度阈值，因此我专门设置了
<code>STREAM_MODE</code>。</p>
<div class="sourceCode" id="cb8"><pre class="sourceCode kotlin"><code class="sourceCode kotlin"><span id="cb8-1"><a href="#cb8-1" aria-hidden="true" tabindex="-1"></a><span class="kw">private</span> <span class="kw">val</span> <span class="va">objectDetector</span> <span class="op">=</span> ObjectDetection<span class="op">.</span>getClient<span class="op">(</span>customObjectDetectorOptions<span class="op">)</span> objectDetector<span class="op">.</span>process<span class="op">(</span>image<span class="op">)</span> </span>
<span id="cb8-2"><a href="#cb8-2" aria-hidden="true" tabindex="-1"></a>    <span class="op">.</span>addOnFailureListener<span class="op">(</span>Log<span class="op">.</span>d<span class="op">(...))</span></span>
<span id="cb8-3"><a href="#cb8-3" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb8-4"><a href="#cb8-4" aria-hidden="true" tabindex="-1"></a>    <span class="op">.</span>addOnSuccessListener<span class="op">&#123;</span> </span>
<span id="cb8-5"><a href="#cb8-5" aria-hidden="true" tabindex="-1"></a>        graphicsOverlay<span class="op">.</span>clear<span class="op">()</span> </span>
<span id="cb8-6"><a href="#cb8-6" aria-hidden="true" tabindex="-1"></a>        <span class="cf">for</span> <span class="op">(</span>detectedObject <span class="kw">in</span> it<span class="op">)&#123;</span> </span>
<span id="cb8-7"><a href="#cb8-7" aria-hidden="true" tabindex="-1"></a>            graphicsOverlay<span class="op">.</span>add<span class="op">(</span>ObjectGraphic<span class="op">(</span>graphicsOverlay<span class="op">,</span> detectedObject<span class="op">))</span></span>
<span id="cb8-8"><a href="#cb8-8" aria-hidden="true" tabindex="-1"></a>        <span class="op">&#125;</span> </span>
<span id="cb8-9"><a href="#cb8-9" aria-hidden="true" tabindex="-1"></a>        graphicsOverlay<span class="op">.</span>postInvalidate<span class="op">()&#125;</span> </span>
<span id="cb8-10"><a href="#cb8-10" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb8-11"><a href="#cb8-11" aria-hidden="true" tabindex="-1"></a>    <span class="op">.</span>addOnCompleteListenerl imageProxy<span class="op">.</span>close<span class="op">()</span> <span class="op">&#125;</span></span></code></pre></div>
<p>让我们进入运行模型的那一部分，这样我们可能会看到一些类似于此处前面示例的语法。我将处理我的图像，这里需要注意的是，所有处于失败或成功状态的侦听器都是必不可缺的代码，在我们的每次运行上都需要附加上这些侦听器。这就是我们所有需要编写的代码！我们已经搞定了！🚀～</p>
<h2 id="查找模型">查找模型</h2>
<p>我们讨论了很多有关模型制作后的内容，让我们看看如何为您的用例找到模型。</p>
<ul>
<li>TF Lite Model Maker</li>
</ul>
<p>TensorFlow 团队也于 2020 年初开启了 TF Lite Model
Maker。这使得制作好的模型超级容易使用，具有很高的性能，还可以进行大量的自定义。我们现在可以简单地传递数据并使用很少的代码来构建
<code>tflite</code> 模型。我们可以查看官网中的 <a href="https://github.com/Rishit-dagli/ML-with-Android-11/blob/dev/TensorFlow_Lite_Model_Maker_example.ipynb">TensorFlow
Lite Model Maker 示例</a>。</p>
<ul>
<li>TensorFlow Hub</li>
</ul>
<p>TensorFlow Hub
是一个开放源代码存储库，其中包含最新技术和有据可查的模型。我们使用 ML
Kit 构建的食品分类应用程序也出现在 TF Hub 上。我们还可以使用<a href="https://tfhub.dev/">社区 tfhub.dev</a> 中的模型。</p>
<figure>
<img src="https://cdn-images-1.medium.com/max/2022/0*cv-fzgw2WPuf4PQI.png" alt="tfhub.dev 上的一些发布者">
<figcaption aria-hidden="true">tfhub.dev 上的一些发布者</figcaption>
</figure>
<figure>
<img src="https://cdn-images-1.medium.com/max/2000/1*Cu-XiVrzOi2MdKatQ1dpzw.png" alt="TF Hub 中的过滤器">
<figcaption aria-hidden="true">TF Hub 中的过滤器</figcaption>
</figure>
<p>如果你只想查找基于图像或文本的模型，则可以在 TF Hub
中通过添加过滤条件来搜索。例如如果我们要在网络、终端设备或 Corals 上运行
ML，请通过架构、使用的数据集等筛选等等。</p>
<p>我们可以进一步直接从 TF Hub
下载这些模型，也可以非常轻松地使用您自己的数据对这些模型进行迁移学习。但是，在本文中我们将不进一步介绍使用
TF Hub 的迁移学习了。有关 TF Hub 的更多信息，请前往<a href="https://towardsdatascience.com/building-better-ai-apps-with-tf-hub-88716b302265">我的博客</a>查看。</p>
<p>除此之外，还有不少的服务提供商，例如 <a href="https://teachablemachine.withgoogle.com/">Teachable
Machine</a>，<a href="https://cloud.google.com/automl">AutoML</a>，但上述的都算是比较常见的提供商。</p>
<hr>
<p><a href="https://github.com/Rishit-dagli/ML-with-Android-11">GitHub
仓库</a> 中提供了此处展示的所有有关 TF Lite Model Maker
的示例的代码。我还为您你供了一些已训练的模型，供初学者入门和实验。</p>]]></content>
      <categories>
        <category>Computer Science</category>
        <category>Android</category>
      </categories>
      <tags>
        <tag>Computer Science</tag>
        <tag>Android</tag>
        <tag>Kotlin</tag>
      </tags>
  </entry>
  <entry>
    <title>CSS3 会替代 SCSS 吗？</title>
    <url>/2021/02/23/computer%20science/frontend/will-scss-be-replaced-by-css3/</url>
    <content><![CDATA[<blockquote>
<ul>
<li>原文地址：<a href="https://blog.bitsrc.io/will-scss-be-replaced-by-css3-754842d6b681">Will
SCSS be replaced by CSS3?</a></li>
<li>原文作者：<a href="https://medium.com/@viduniwickramarachchi">Viduni
Wickramarachchi</a></li>
<li>译者：<a href="https://github.com/PassionPenguin">霜羽
Hoarfroster</a></li>
<li>校对者：<a href="https://github.com/Chorer">Chorer</a>、<a href="https://github.com/Usualminds">Usualminds</a></li>
</ul>
</blockquote>
<p><img src="https://cdn-images-1.medium.com/max/5760/1*iiuMRihN7Lj3i1-hTk8PjA.jpeg"></p>
<p>当谈及设置网页样式的时候，我们可以选择在项目中使用纯 CSS 或是
SCSS（除了其它处理器之外）。SCSS 是 CSS
的超集。大多数的开发者都认为，受益于高级的功能和清晰的语法，SCSS
使用起来比 CSS 更加方便。</p>
<p>在这篇文章中我想要带着大家一起探索 SCSS 的功能以及 CSS
这些年来在功能上的提升。此外，我还会评估是否可以在实际项目中用 CSS 替代
SCSS。</p>
<h2 id="css-当前的功能">CSS 当前的功能</h2>
<p>CSS 自诞生以来已经取得了很大的进展。近些年来 CSS
的发展也降低了在动画领域使用 JavaScript 的必要性。现代浏览器甚至使用了
GPU 去提升这些 CSS
动画的性能。我们现在甚至只需要稍微学习一下，就可以使用 CSS
构建复杂的响应式网格布局。</p>
<p>如今 CSS 有了许多新的功能，但本文只会重点提及一些在现代 Web
应用中常用的新功能。</p>
<ul>
<li>在任何 Web
应用的构建中，最主要的一部分就是页面的布局。我们当中的大多数人这些年都依赖于诸如
Bootstrap 这样的 CSS 框架，但 CSS 如今已经提供了
Grid（网格）、Subgrid（子网格）、Flexbox（弹性盒）等新功能去原生地构建布局。虽说
Flexbox 在开发者当中广受欢迎，但 Grid 布局也正迎头赶上。</li>
<li>灵活的文字排版</li>
<li>Transition 和 Transform 的强大能力让我们不再需要使用 JavaScript
去制作动画</li>
<li>自定义属性或变量</li>
</ul>
<h2 id="scss-的功能">SCSS 的功能</h2>
<h4 id="scss-支持使用变量-避免冗杂的代码">SCSS 支持使用变量 ——
避免冗杂的代码</h4>
<p>我们其实可以在我们的样式表中重用一堆的颜色 <code>color</code>
或其他元素定义（例如字体
<code>font</code>）。为了做到在统一的一个地方声明这些可重用的东西，SCSS
为我们提供了变量功能，让我们能够用一个变量名表示某个颜色，并在项目的其它地方使用该变量名，而不是重写一遍颜色值。</p>
<p>例如下面这个例子：</p>
<pre class="scss"><code>$black: #000000;
$primary-font: 'Ubuntu', 'Helvetica', sans-serif;
$unit: 1rem;

body &#123;
    color: $black;
    font-family: $primary-font;
    padding: #&#123;$unit * 2&#125;;
&#125;</code></pre>
<p>CSS 也支持变量和自定义属性，以下就是 CSS 中的自定义属性：</p>
<div class="sourceCode" id="cb2"><pre class="sourceCode css"><code class="sourceCode css"><span id="cb2-1"><a href="#cb2-1" aria-hidden="true" tabindex="-1"></a>--black<span class="in">: #000000;</span></span>
<span id="cb2-2"><a href="#cb2-2" aria-hidden="true" tabindex="-1"></a>--width<span class="in">: 800px;</span></span>
<span id="cb2-3"><a href="#cb2-3" aria-hidden="true" tabindex="-1"></a>--primaryFont<span class="in">: 'Ubuntu</span>'<span class="op">,</span> 'Helvetica'<span class="op">,</span> sans-serif;</span>
<span id="cb2-4"><a href="#cb2-4" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb2-5"><a href="#cb2-5" aria-hidden="true" tabindex="-1"></a>body &#123;</span>
<span id="cb2-6"><a href="#cb2-6" aria-hidden="true" tabindex="-1"></a>    <span class="kw">width</span>: <span class="fu">var(</span><span class="va">--width</span><span class="fu">)</span><span class="op">;</span></span>
<span id="cb2-7"><a href="#cb2-7" aria-hidden="true" tabindex="-1"></a>    <span class="kw">color</span>: <span class="fu">var(</span><span class="va">--black</span><span class="fu">)</span><span class="op">;</span></span>
<span id="cb2-8"><a href="#cb2-8" aria-hidden="true" tabindex="-1"></a>    <span class="kw">font-family</span>: <span class="fu">var(</span><span class="va">--primaryFont</span><span class="fu">)</span><span class="op">;</span></span>
<span id="cb2-9"><a href="#cb2-9" aria-hidden="true" tabindex="-1"></a>&#125;</span></code></pre></div>
<blockquote>
<h1 id="但是在运行时-css-自定义属性比-scss-变量更耗时">但是在运行时 CSS
自定义属性比 SCSS 变量更耗时。</h1>
</blockquote>
<p>这是因为浏览器会在运行时去处理这些属性。而 SCSS
则相反，它在预处理阶段会被转化为 CSS，并去处理变量。因此，SCSS
中变量的使用和代码的重用相比 CSS 而言有着更好的性能。</p>
<h4 id="scss-允许嵌套的语法-更简洁的源代码">SCSS 允许嵌套的语法 ——
更简洁的源代码</h4>
<p>假如有下面这样的 CSS 代码块：</p>
<div class="sourceCode" id="cb3"><pre class="sourceCode css"><code class="sourceCode css"><span id="cb3-1"><a href="#cb3-1" aria-hidden="true" tabindex="-1"></a><span class="fu">.header</span> &#123;</span>
<span id="cb3-2"><a href="#cb3-2" aria-hidden="true" tabindex="-1"></a>    <span class="kw">padding</span>: <span class="dv">1</span><span class="dt">rem</span><span class="op">;</span></span>
<span id="cb3-3"><a href="#cb3-3" aria-hidden="true" tabindex="-1"></a>    <span class="kw">border-bottom</span>: <span class="dv">1</span><span class="dt">px</span> <span class="dv">solid</span> <span class="cn">grey</span><span class="op">;</span></span>
<span id="cb3-4"><a href="#cb3-4" aria-hidden="true" tabindex="-1"></a>&#125;</span>
<span id="cb3-5"><a href="#cb3-5" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb3-6"><a href="#cb3-6" aria-hidden="true" tabindex="-1"></a><span class="fu">.header</span> <span class="fu">.nav</span> &#123;</span>
<span id="cb3-7"><a href="#cb3-7" aria-hidden="true" tabindex="-1"></a>    <span class="kw">list-style</span>: <span class="dv">none</span><span class="op">;</span></span>
<span id="cb3-8"><a href="#cb3-8" aria-hidden="true" tabindex="-1"></a>&#125;</span>
<span id="cb3-9"><a href="#cb3-9" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb3-10"><a href="#cb3-10" aria-hidden="true" tabindex="-1"></a><span class="fu">.header</span> <span class="fu">.nav</span> li &#123;</span>
<span id="cb3-11"><a href="#cb3-11" aria-hidden="true" tabindex="-1"></a>    <span class="kw">display</span>: inline-flex<span class="op">;</span></span>
<span id="cb3-12"><a href="#cb3-12" aria-hidden="true" tabindex="-1"></a>&#125;</span>
<span id="cb3-13"><a href="#cb3-13" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb3-14"><a href="#cb3-14" aria-hidden="true" tabindex="-1"></a><span class="fu">.header</span> <span class="fu">.nav</span> li a &#123;</span>
<span id="cb3-15"><a href="#cb3-15" aria-hidden="true" tabindex="-1"></a>    <span class="kw">display</span>: flex<span class="op">;</span></span>
<span id="cb3-16"><a href="#cb3-16" aria-hidden="true" tabindex="-1"></a>    <span class="kw">padding</span>: <span class="dv">0.5</span><span class="dt">rem</span><span class="op">;</span></span>
<span id="cb3-17"><a href="#cb3-17" aria-hidden="true" tabindex="-1"></a>    <span class="kw">color</span>: <span class="cn">red</span><span class="op">;</span></span>
<span id="cb3-18"><a href="#cb3-18" aria-hidden="true" tabindex="-1"></a>&#125;</span></code></pre></div>
<p>上述的代码看起来很混乱，为了给子元素添加样式，不得不重复声明同一个父元素。</p>
<p>但如果使用 SCSS
的嵌套语法，我们可以编写更简洁的代码。上述的代码如果用 SCSS
编写，是这样的：</p>
<pre class="scss"><code>.header &#123;
    padding: 1rem;
    border-bottom: 1px solid grey;

    .nav &#123;
        list-style: none;

        li &#123;
            display: inline-flex;

            a &#123;
                display: flex;
                padding: 0.5rem;
                color: red;
            &#125;
        &#125;
    &#125;
&#125;</code></pre>
<p>因此，与传统的 CSS 相比，使用 SCSS 设计组件似乎更加优雅而简洁。</p>
<h4 id="extend-功能-避免重复同样的样式"><span class="citation" data-cites="extend">@extend</span> 功能 —— 避免重复同样的样式！</h4>
<p>在 SCSS 中，我们可以使用 <code>@extend</code>
在不同的选择器中共享相同的属性。带有占位符的 <code>@extend</code>
的使用方法如下所示：</p>
<pre class="scss"><code>%unstyled-list &#123;
    list-style: none;
    margin: 0;
    padding: 0;
&#125;</code></pre>
<p><code>%unstyled-list</code>
是一个可以避免重复编写代码的语法糖，我们可以在不同的地方使用这个列表样式模版，例如说：</p>
<pre class="scss"><code>.search-results &#123;
    @extend %unstyled-list;
&#125;

.advertisements &#123;
    @extend %unstyled-list;
&#125;

.dashboard &#123;
    @extend %unstyled-list;
&#125;</code></pre>
<p>同样，我们可以在所有引入了这个定义的样式表中重用它。</p>
<p>SCSS 中还有很多例如<a href="https://sass-lang.com/documentation/at-rules/function">函数</a>、<a href="https://sass-lang.com/documentation/at-rules/mixin">混入</a>、<a href="https://sass-lang.com/documentation/at-rules/control/for">循环</a>
的功能，能让我们的前端开发更加高效。</p>
<h2 id="我应该从-scss-切换到-css-吗">我应该从 SCSS 切换到 CSS 吗？</h2>
<p>在上文中我们探索了 CSS 现有提供的功能以及 SCSS 的功能。但是，如果将
CSS 与 SCSS 进行比较，我们会发现还有一些必要的功能无法在 CSS
中使用。</p>
<ul>
<li>随着 Web 应用的不断发展，样式表会变得越发复杂和庞大。CSS
的嵌套功能将大幅度地提高代码的可读性，让我们在开发此类项目的时候得心应手。但是，截止撰写本文的时间，CSS
尚未支持该功能。</li>
<li>CSS 无法处理流控制规则。 SCSS 内置提供了诸如
<code>@if</code>、<code>@else</code>、<code>@each</code>、<code>for</code>
和 <code>@while</code>
的流控制规则。作为程序员，我发现这个功能对于定义样式来说是非常有用的。这也让我们可以编写更少更简洁的代码。</li>
<li>此外，SCSS 还支持数字运算符的标准集，而在 CSS 中我们必须使用
<code>calc()</code> 函数才能完成数值运算。SCSS
的数值运算还能在其兼容的单位之间进行自动转换。</li>
</ul>
<p><strong>但是</strong>, <code>calc()</code> 这个 CSS
函数几乎没有限制，例如除法中除数必须是数字，或是对于乘法运算至少有一个参数是数字。</p>
<ul>
<li>另一个重要方面是样式重用，这是 SCSS 的”杀手锏“。在这个方面，SCSS
提供了许多功能，例如内置模块、映射、循环和变量。</li>
</ul>
<p>因此我认为，即使 CSS 已经诞生了很多新功能，SCSS
仍然是更好的选择。你可以在下面的评论区中谈谈你的想法。</p>
<p>希望你能够喜欢这篇文章。谢谢阅读！</p>]]></content>
      <categories>
        <category>Computer Science</category>
        <category>Frontend</category>
        <category>Styling</category>
      </categories>
      <tags>
        <tag>Computer Science</tag>
        <tag>Frontend</tag>
        <tag>CSS</tag>
        <tag>SCSS</tag>
      </tags>
  </entry>
  <entry>
    <title>Bash 中的 if else 语句</title>
    <url>/2021/02/21/computer%20science/backend/bashif-else-statement/</url>
    <content><![CDATA[<blockquote>
<ul>
<li>原文地址：<a href="https://linuxize.com/post/bash-if-else-statement/">Bash if..else
Statement</a></li>
<li>原文作者：<a href="https://twitter.com/linuxize">linuxize</a></li>
<li>译者：<a href="https://github.com/PassionPenguin">霜羽
Hoarfroster</a></li>
<li>校对者：<a href="https://github.com/zenblo">zenblo</a>、<a href="https://github.com/flying-yogurt">flying-yogurt</a>、<a href="https://github.com/lsvih">lsvih</a></li>
</ul>
</blockquote>
<figure>
<img src="https://raw.githubusercontent.com/PassionPenguin/picgo-database/main/featured_hu91e1d6741dfcdbd79b4fecce3479ee44_25821_768x0_resize_q75_lanczos.jpg" alt="Bash 中的 if else 语句">
<figcaption aria-hidden="true">Bash 中的 if else 语句</figcaption>
</figure>
<p>在本篇教程中，我们会逐步深入 Bash 中的 if
语句基础，带着大家一起学习如何在 Shell 脚本中使用 if 语句。</p>
<p>决策，计算机程序中的一个最基础的要素。就如同其他的编程语言一样，通过使用
<code>if</code>、<code>if..else</code>、<code>if..elif..else</code>
以及嵌套 <code>if</code> 语句，我们可以在 Bash
中基于特定条件执行对应的代码。</p>
<h2 id="if-语句"><code>if</code> 语句</h2>
<p>Bash 中的 <code>if</code>
条件语句拥有不同的实现格式。例如最基本的形式：</p>
<div class="sourceCode" id="cb1"><pre class="sourceCode zsh"><code class="sourceCode zsh"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a><span class="cf">if</span> <span class="ex">TEST-COMMAND</span></span>
<span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a><span class="cf">then</span></span>
<span id="cb1-3"><a href="#cb1-3" aria-hidden="true" tabindex="-1"></a>  <span class="ex">STATEMENTS</span></span>
<span id="cb1-4"><a href="#cb1-4" aria-hidden="true" tabindex="-1"></a><span class="cf">fi</span></span></code></pre></div>
<p><code>if</code> 语句由 <code>if</code>
关键字引导，接上一段条件表达式，然后是 <code>then</code> 关键字，并以
<code>fi</code> 关键字结束。</p>
<p>如果 <code>TEST-COMMAND</code> 执行后为真，那么相应地，
<code>STATEMENTS</code> 就会被执行；而如果为假，则
<code>STATEMENTS</code> 会被忽略。</p>
<p>大多数情况下，（在原文件中）保持你的代码拥有优秀的缩进及空行，可是个很好的习惯，能让你的代码具有更强的可读性和组织性结构性。大多数人都是用
4 个空格或 2 个空格的缩进。</p>
<p>让我们看看如下用于检查给定数字是否大于 10 的一段代码：</p>
<div class="sourceCode" id="cb2"><pre class="sourceCode zsh"><code class="sourceCode zsh"><span id="cb2-1"><a href="#cb2-1" aria-hidden="true" tabindex="-1"></a><span class="co">#!/bin/zsh</span></span>
<span id="cb2-2"><a href="#cb2-2" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb2-3"><a href="#cb2-3" aria-hidden="true" tabindex="-1"></a><span class="bu">echo</span> <span class="at">-n</span> <span class="st">"输入一个数字："</span></span>
<span id="cb2-4"><a href="#cb2-4" aria-hidden="true" tabindex="-1"></a><span class="bu">read</span> <span class="va">VAR</span></span>
<span id="cb2-5"><a href="#cb2-5" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb2-6"><a href="#cb2-6" aria-hidden="true" tabindex="-1"></a><span class="cf">if</span> <span class="kw">[[</span> <span class="va">$VAR</span> <span class="ot">-gt</span> 10 <span class="kw">]]</span></span>
<span id="cb2-7"><a href="#cb2-7" aria-hidden="true" tabindex="-1"></a><span class="cf">then</span></span>
<span id="cb2-8"><a href="#cb2-8" aria-hidden="true" tabindex="-1"></a>  <span class="bu">echo</span> <span class="st">"该变量大于 10。"</span></span>
<span id="cb2-9"><a href="#cb2-9" aria-hidden="true" tabindex="-1"></a><span class="cf">fi</span></span></code></pre></div>
<p>保存上面的代码并在命令行中执行它：</p>
<div class="sourceCode" id="cb3"><pre class="sourceCode zsh"><code class="sourceCode zsh"><span id="cb3-1"><a href="#cb3-1" aria-hidden="true" tabindex="-1"></a><span class="co"># 注意，在运行该段代码前，你可能需要先赋予其相应权限。</span></span>
<span id="cb3-2"><a href="#cb3-2" aria-hidden="true" tabindex="-1"></a><span class="co"># chmod +x test.sh</span></span>
<span id="cb3-3"><a href="#cb3-3" aria-hidden="true" tabindex="-1"></a><span class="co"># ./test.sh</span></span>
<span id="cb3-4"><a href="#cb3-4" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb3-5"><a href="#cb3-5" aria-hidden="true" tabindex="-1"></a><span class="fu">bash</span> test.sh</span></code></pre></div>
<p>这段脚本会要求你输入一个数字，举个例子，如果你输入了 15，那么
<code>TEST-COMMAND</code> 即 <code>[[ $VAR -gt 10 ]]</code>
等同于真，然后 <code>then</code> 分句中的 <a href="https://linuxize.com/post/echo-command-in-linux-with-examples/"><code>echo</code></a>
语句就会被执行。</p>
<p>因此上述代码的输出是：</p>
<div class="sourceCode" id="cb4"><pre class="sourceCode zsh"><code class="sourceCode zsh"><span id="cb4-1"><a href="#cb4-1" aria-hidden="true" tabindex="-1"></a><span class="ex">该变量大于</span> 10。</span></code></pre></div>
<h2 id="if..else-语句"><code>if..else</code> 语句</h2>
<p>Bash 中的 <code>if..else</code> 语句是这个样子的：</p>
<div class="sourceCode" id="cb5"><pre class="sourceCode zsh"><code class="sourceCode zsh"><span id="cb5-1"><a href="#cb5-1" aria-hidden="true" tabindex="-1"></a><span class="cf">if</span> <span class="ex">TEST-COMMAND</span></span>
<span id="cb5-2"><a href="#cb5-2" aria-hidden="true" tabindex="-1"></a><span class="cf">then</span></span>
<span id="cb5-3"><a href="#cb5-3" aria-hidden="true" tabindex="-1"></a>  <span class="ex">STATEMENTS1</span></span>
<span id="cb5-4"><a href="#cb5-4" aria-hidden="true" tabindex="-1"></a><span class="cf">else</span></span>
<span id="cb5-5"><a href="#cb5-5" aria-hidden="true" tabindex="-1"></a>  <span class="ex">STATEMENTS2</span></span>
<span id="cb5-6"><a href="#cb5-6" aria-hidden="true" tabindex="-1"></a><span class="cf">fi</span></span></code></pre></div>
<p>如果 <code>TEST-COMMAND</code> 为真，那么 <code>STATEMENT1</code>
会被执行；而如果为假，那么 <code>STATEMENT2</code>
就会被执行。对于每一个 <code>if</code> 语句，只能有一个
<code>else</code> 语句与之对应。</p>
<p>让我们给上一个例子加一个 <code>else</code> 语句：</p>
<pre><code>#!/bin/bash

echo -n "输入一个数字："
read VAR

if [[ $VAR -gt 10 ]]
then
  echo "该变量大于 10。"
else
  echo "该变量小于等于 10。"
fi</code></pre>
<p>如果你执行上述代码并输入一段数字，脚本会给予你输入的数字与 10
之间的大小关系输出不同的信息。</p>
<h2 id="if..elif..else-语句"><code>if..elif..else</code> 语句</h2>
<p>Bash 的 <code>if..elif..else</code> 语句是这样子的：</p>
<pre><code>if TEST-COMMAND1
then
  STATEMENTS1
elif TEST-COMMAND2
then
  STATEMENTS2
else
  STATEMENTS3
fi</code></pre>
<p>如果 <code>TEST-COMMAND1</code> 条件为真，那么
<code>STATEMENTS1</code> 就会被执行。若为假，则继续如下判断：如果
<code>TEST-COMMAND2</code> 条件为真，那么 <code>STATEMENTS2</code>
就会被执行。否则，<code>STATEMENTS3</code> 将会被执行。</p>
<p>你可以拥有一个或多个 <code>elif</code> 语句在一段语句中，而
<code>else</code> 则是可有可无的。</p>
<p>这些条件判断语句是按顺序执行的，一旦其中一个条件从句是真，那么剩下的判断都不会执行，并且程序会在执行完语句以后，直接跳转到
<code>if</code> 整个段落的末尾，执行下一段代码。</p>
<p>让我们给上一个例子添加 <code>elif</code> 语句吧：</p>
<pre><code>#!/bin/bash

echo -n "输入一个数字："
read VAR

if [[ $VAR -gt 10 ]]
then
  echo "该变量大于 10。"
elif [[ $VAR -eq 10 ]]
then
  echo "该变量等于 10。"
else
  echo "该变量小于 10。"
fi</code></pre>
<h2 id="嵌套-if-语句">嵌套 <code>if</code> 语句</h2>
<p>Bash 允许在一个 <code>if</code> 语句中嵌套一个或多个<code>if</code>
语句。</p>
<p>下面的脚本会要求你输入三个数字，然后会打印其中最大的数字：</p>
<pre><code>#!/bin/bash

echo -n "输入一个数字："
read VAR1
echo -n "再输入一个数字："
read VAR2
echo -n "再再输入一个数字："
read VAR3

if [[ $VAR1 -ge $VAR2 ]] &amp;&amp; [[ $VAR1 -ge $VAR3 ]]
then
  echo "$VAR1 是最大的数字。"
elif [[ $VAR2 -ge $VAR1 ]] &amp;&amp; [[ $VAR2 -ge $VAR3 ]]
then
  echo "$VAR2 是最大的数字。"
else
  echo "$VAR3 是最大的数字。"
fi</code></pre>
<p>而输出就是这样子的：</p>
<pre><code>7 是最大的数字。</code></pre>
<p>一般来说，使用 <a href="https://linuxize.com/post/bash-case-statement/"><code>case</code></a>
语句比使用 <code>if</code> 语句更高效。</p>
<h2 id="多重条件">多重条件</h2>
<p>逻辑运算符 <code>OR</code> 和 <code>AND</code> 能够让你在一条
<code>if</code> 语句中使用多重条件。</p>
<p>下面就是获取三个数中最大数字的另一种写法，而在这个版本中，我们用了逻辑
<code>AND</code>（<code>&amp;&amp;</code>） 运算符而非嵌套
<code>if</code> 语句。</p>
<pre><code>#!/bin/bash

echo -n "输入一个数字："
read VAR1
echo -n "再输入一个数字："
read VAR2
echo -n "再再输入一个数字："
read VAR3

if [[ $VAR1 -ge $VAR2 ]] &amp;&amp; [[ $VAR1 -ge $VAR3 ]]
then
  echo "$VAR1 是最大的数字"
elif [[ $VAR2 -ge $VAR1 ]] &amp;&amp; [[ $VAR2 -ge $VAR3 ]]
then
  echo "$VAR2 是最大的数字"
else
  echo "$VAR3 是最大的数字"
fi</code></pre>
<h2 id="test-操作"><code>test</code> 操作</h2>
<p>在 Bash 中，<code>test</code> 语句可以长这样的：</p>
<p><code>test EXPRESSION [ EXPRESSION ] [[ EXPRESSION ]]</code></p>
<p>为了使我们的脚本可移植，最好使用兼容所有 POSIX shell 的旧版本
<code>[</code> …… <code>]</code>语句。使用 Bash、Zsh、Ksh 作为默认 shell
的大多数现代系统都支持 <code>[[</code> ……
<code>]]</code>（双括号）新版语法。</p>
<p>要否定测试表达式，请使用逻辑
<code>NOT</code>（<code>!</code>）运算符。在<a href="https://linuxize.com/post/how-to-compare-strings-in-bash/">比较字符串</a>时，请始终使用单引号或双引号，以避免单词拆分和乱码问题。</p>
<p>以下是一些最常用的运算符：</p>
<ul>
<li><code>n VAR</code> —— 如果 <code>VAR</code>
的长度大于零，则为真。</li>
<li><code>z VAR</code> —— 如果 <code>VAR</code> 为空，则为真。</li>
<li><code>STRING1 = STRING2</code> —— 如果 <code>STRING1</code> 和
<code>STRING2</code> 相等，则为真。</li>
<li><code>STRING1 != STRING2</code> —— 如果 <code>STRING1</code> 和
<code>STRING2</code> 不相等，则为真。</li>
<li><code>INTEGER1 -eq INTEGER2</code> —— 如果 <code>INTEGER1</code> 和
<code>INTEGER2</code>相等则为真。</li>
<li><code>INTEGER1 -gt INTEGER2</code> —— 如果 <code>INTEGER1</code>
大于 <code>INTEGER2</code>，则为真。</li>
<li><code>INTEGER1 -lt INTEGER2</code> —— 如果 <code>INTEGER1</code>
小于 <code>INTEGER2</code>，则为真。</li>
<li><code>INTEGER1 -ge INTEGER2</code> —— 如果 <code>INTEGER1</code>
等于或大于 <code>INTEGER2</code>，则为真。</li>
<li><code>INTEGER1 -le INTEGER2</code> —— 如果 <code>INTEGER1</code>
等于或小于 <code>INTEGER2</code>，则为真。</li>
<li><code>h FILE</code> —— 如果 <code>FILE</code>
存在并且是符号链接，则为真。</li>
<li><code>r FILE</code> —— 如果 <code>FILE</code>
存在并且可读，则为真。</li>
<li><code>w FILE</code> —— 如果 <code>FILE</code>
存在且可写，则为真。</li>
<li><code>x FILE</code> —— 如果 <code>FILE</code>
存在且可执行，则为真。</li>
<li><code>d FILE</code> —— 如果 <code>FILE</code>
存在并且是目录，则为真。</li>
<li><code>e FILE</code> —— 如果 <code>FILE</code>
存在并且是一个文件并且不管它的类型（不管是节点、目录还是
socket），则为真。</li>
<li><code>f FILE</code> —— 如果 <a href="https://linuxize.com/post/bash-check-if-file-exists/"><code>FILE</code>
存在</a>，并且是常规文件（不是目录或设备什么的） ，则为真。</li>
</ul>
<h2 id="结论">结论</h2>
<p><code>if</code>、<code>if..else</code> 和 <code>if..elif..else</code>
语句让我们能够基于不同的判断条件来控制 Bash 脚本中逻辑语句的执行。</p>
<p>如果你有任何疑问或反馈，请随时发表评论。</p>]]></content>
      <categories>
        <category>Computer Science</category>
        <category>Backend</category>
        <category>Bash</category>
      </categories>
      <tags>
        <tag>Computer Science</tag>
        <tag>Backend</tag>
        <tag>Bash</tag>
      </tags>
  </entry>
  <entry>
    <title>我后悔没有在自己成为 React 开发者之前做的 6 件事情</title>
    <url>/2021/02/21/computer%20science/frontend/6-regrets-i-have-as-a-react-developer/</url>
    <content><![CDATA[<blockquote>
<ul>
<li>原文地址：<a href="https://medium.com/better-programming/6-regrets-i-have-as-a-react-developer-52e95a8ff8a4">6
Regrets I Have As a React Developer</a></li>
<li>原文作者：<a href="https://medium.com/@56faisal">Mohammad
Faisal</a></li>
<li>译者：<a href="https://github.com/PassionPenguin">霜羽
Hoarfroster</a></li>
<li>校对者：<a href="https://github.com/zhuzilin">zhuzilin</a>、<a href="https://github.com/zenblo">zenblo</a>、<a href="https://github.com/Ivocin">Ivocin</a></li>
</ul>
</blockquote>
<figure>
<img src="https://cdn-images-1.medium.com/max/8396/1*b_I4LDS0bICAcnC1bdOM2g.jpeg" alt="由 Francisco Gonzalez 上传至 Unsplash">
<figcaption aria-hidden="true">由 <a href="https://unsplash.com/@franciscoegonzalez?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText">Francisco
Gonzalez</a> 上传至 <a href="https://unsplash.com/s/photos/sadness?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText">Unsplash</a></figcaption>
</figure>
<p>React
是一个很好的适合我们去学习的工具，它让我们能够以我们自己的方法编写代码完成任务。但即使它的功能很强大，它也有着不少的限制。</p>
<p>对于新的开发者而言，其实并没有明确的指南告诉我们，某一个场景最适合用哪一个工具。这让每一个问题都有各种各样的解决方案，而我也同样掉到了这个坑里面，并且已经无力回天，没法去采用一些别的最佳实践了。</p>
<p>今天我将要分享我最应该在我的 React 开发旅程前期就应该开始做的 6
件事。</p>
<h2 id="测试">1. 测试</h2>
<p>长期以来，测试是我的弱项。我并没有为 React
组件编写测试样例，并且正如预期的那样，我经常因为某些输入错误而不得不进行调试。</p>
<p>但即便测试这个词语看起来很吓人，在 React
中进行测试真的是很简单的一件事情（对于大多数情况而言）。</p>
<p>写一个简单的测试只需要花费两分钟，但这可能会为我们在未来节省大量的时间。下面就是一个测试
<code>Title</code> 组件渲染是否可以正确渲染的例子：</p>
<div class="sourceCode" id="cb1"><pre class="sourceCode js"><code class="sourceCode javascript"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a><span class="fu">it</span>(<span class="st">'checks if the title component is in the document'</span><span class="op">,</span> () <span class="kw">=&gt;</span> &#123;</span>
<span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a>    <span class="fu">expect</span>(<span class="bu">screen</span><span class="op">.</span><span class="fu">getByText</span>(<span class="st">'Title'</span>))<span class="op">.</span><span class="fu">toBeInTheDocument</span>()</span>
<span id="cb1-3"><a href="#cb1-3" aria-hidden="true" tabindex="-1"></a>&#125;)</span></code></pre></div>
<p>而如果你使用的是 <code>create-react-app</code> 命令创建你的 React
应用程序，那么命令本身已经正确地为你设置好了测试套件，只需要尽早地开始编写测试代码即可。</p>
<h2 id="使用正确的文件夹结构">2. 使用正确的文件夹结构</h2>
<p>我认为当我还是一个 React
的新手时，我犯下的最大错误就是没有使用正确的文件夹结构。我基本上将文件按照他们的类别分类：</p>
<pre><code>|-store
  |--actions
    |---UserAction.js
    |---ProductAction.js
    |---OrderAction.js
  |--reducers
    |---UserReducer.js
    |---ProductReducer.js
    |---OrderReducer.js</code></pre>
<p>但当项目逐步变大以后，我发现查找文件变得困难了许多。</p>
<p>因此我最终还是开始按照文件的特征去排序整理，意味着所有类似的文件将放在一个同样的文件夹下面，例如：</p>
<pre><code>|-store
  |--user
    |---UserAction.js
    |---UserReducer.js
  |--product    
    |---ProductAction.js
    |---ProductReducer.js
  |--order    
    |---OrderAction.js
    |---OrderReducer.js</code></pre>
<p>现在对我而言在文件系统中导航到我想要查看的文件变得简单了许多！</p>
<h2 id="使用样式化的组件">3. 使用样式化的组件</h2>
<p>我一开始使用 <code>css</code>
文件去给我的组件添加样式，但是随着时间的推进以及项目的扩大，这真的变得越发混乱。</p>
<p>在一段时间以后我了解并学习了
<code>sass</code>，而它真是棒极了！不过即使它在原 <code>css</code>
上提供了些语法糖，但给我的组件加样式还是真的困难，尤其是在重复使用某些样式的时候
—— 我总是会忘记我已经编写了这一种样式在我的样式表中了。</p>
<div class="sourceCode" id="cb4"><pre class="sourceCode jsx"><code class="sourceCode javascriptreact"><span id="cb4-1"><a href="#cb4-1" aria-hidden="true" tabindex="-1"></a><span class="co">// inside jsx</span></span>
<span id="cb4-2"><a href="#cb4-2" aria-hidden="true" tabindex="-1"></a><span class="kw">&lt;button</span> <span class="ot">className</span><span class="op">=</span><span class="st">"btn-submit"</span><span class="kw">&gt;</span></span>
<span id="cb4-3"><a href="#cb4-3" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb4-4"><a href="#cb4-4" aria-hidden="true" tabindex="-1"></a><span class="kw">&lt;button/&gt;</span></span>
<span id="cb4-5"><a href="#cb4-5" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb4-6"><a href="#cb4-6" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb4-7"><a href="#cb4-7" aria-hidden="true" tabindex="-1"></a>// inside css files</span>
<span id="cb4-8"><a href="#cb4-8" aria-hidden="true" tabindex="-1"></a>.btn-submit <span class="va">&#123;</span></span>
<span id="cb4-9"><a href="#cb4-9" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb4-10"><a href="#cb4-10" aria-hidden="true" tabindex="-1"></a><span class="va">&#125;</span></span></code></pre></div>
<p>同样，个人而言，我并不喜欢 <code>JSX</code> 的 <code>className</code>
属性。</p>
<p>过了一段时间我发现了一个可以拯救我的叫做
<code>styled-components</code>
的库。现在我仅仅需要对不同的组件定义我的样式，而我的代码也变得干净了许多，阅读起来也舒服、轻松了许多。</p>
<p>同样的，这个组件也支持 <code>props</code>
属性，帮助我大量地减少了特定条件下的特殊样式。</p>
<div class="sourceCode" id="cb5"><pre class="sourceCode jsx"><code class="sourceCode javascriptreact"><span id="cb5-1"><a href="#cb5-1" aria-hidden="true" tabindex="-1"></a><span class="kw">const</span> Button <span class="op">=</span> styled<span class="op">.</span><span class="fu">button</span><span class="vs">`</span></span>
<span id="cb5-2"><a href="#cb5-2" aria-hidden="true" tabindex="-1"></a><span class="vs">  font-size: 1em;</span></span>
<span id="cb5-3"><a href="#cb5-3" aria-hidden="true" tabindex="-1"></a><span class="vs">  margin: 1em;</span></span>
<span id="cb5-4"><a href="#cb5-4" aria-hidden="true" tabindex="-1"></a><span class="vs">  padding: 0.25em 1em;</span></span>
<span id="cb5-5"><a href="#cb5-5" aria-hidden="true" tabindex="-1"></a><span class="vs">  border-radius: 3px;</span></span>
<span id="cb5-6"><a href="#cb5-6" aria-hidden="true" tabindex="-1"></a><span class="vs">`</span><span class="op">;</span></span></code></pre></div>
<h2 id="尽早转向使用函数组件">4. 尽早转向使用函数组件</h2>
<p>一开始，我是通过 <code>class-components</code> 学习的
React。在那一年左右，我<strong>只</strong>使用了类组件。</p>
<p>当我转向使用函数组件后，我发现了它们巨大的优点。我想
<code>react-hooks</code> 是自 React 出现以来的最好的东西。</p>
<p>但现在几乎没有任何原因让人们尝试使用基于类的组件。</p>
<p>而现在，我正尝试着将所有组件重写为函数组件。</p>
<p>译者注：React 的函数组件是 React
组件的另一种定义方式，两种方式都可以用于定义组件，但是相比于类组件，函数组件要更简单好用些，它会直接返回一个元素，如果希望了解更多内容，请直接搜索
<code>函数组件</code>～</p>
<div class="sourceCode" id="cb6"><pre class="sourceCode jsx"><code class="sourceCode javascriptreact"><span id="cb6-1"><a href="#cb6-1" aria-hidden="true" tabindex="-1"></a><span class="kw">const</span> Hello <span class="op">=</span> () <span class="kw">=&gt;</span> &#123;</span>
<span id="cb6-2"><a href="#cb6-2" aria-hidden="true" tabindex="-1"></a>    <span class="cf">return </span><span class="kw">&lt;div&gt;</span>Hello Word<span class="kw">&lt;/div&gt;</span></span>
<span id="cb6-3"><a href="#cb6-3" aria-hidden="true" tabindex="-1"></a>&#125;</span></code></pre></div>
<h2 id="使用表单处理库">5. 使用表单处理库</h2>
<p>处理表单可能是任何应用程序中最常见的功能之一，但我在原生的
<code>onChange</code>
方法上花了很多时间尝试去使用它来完成表单处理的时候，我才发现，使用这个功能处理数据和验证真的非常痛苦！</p>
<p><strong>直到我发现了 <code>Formik</code> 和
<code>react-hook-form</code>。</strong></p>
<p>使用这两个库能让表单处理变得更加容易和简洁。最重要的是，目前对我来说，表单验证是可以通过简单的一两句声明，就可以完成的，真的变得极度容易。</p>
<h2 id="使用-linter-和-formatter">6.使用 Linter 和 Formatter</h2>
<p>长时间以来，手动格式化我的代码是一件很麻烦的事情。我喜欢我的代码整洁干净，因此每次需要：</p>
<ul>
<li>删除未使用的变量</li>
<li>删除未使用的功能</li>
<li>删除未使用的进口</li>
<li>使用适当的缩进</li>
</ul>
<p>而在遇到 <code>Eslint</code> 和 <code>Prettier</code>
之前，我不得不手动完成这些。而这两个库能让痛苦的格式化工作变得容易许多！</p>
<p>因此，这些是我希望在职业生涯早期开始使用的前 6
个库，你的想法是什么呢？</p>
<p>感谢阅读，祝你有个明媚的好日子嗷！</p>]]></content>
      <categories>
        <category>Computer Science</category>
        <category>Frontend</category>
        <category>React</category>
      </categories>
      <tags>
        <tag>Computer Science</tag>
        <tag>JavaScript</tag>
        <tag>Frontend</tag>
        <tag>React</tag>
      </tags>
  </entry>
  <entry>
    <title>3 个最棒的最值得你去在产品中使用的 CSS Grid 功能</title>
    <url>/2021/02/19/computer%20science/frontend/top-3-css-grid-features-to-start-using-in-production/</url>
    <content><![CDATA[<blockquote>
<ul>
<li>原文地址：<a href="https://medium.com/better-programming/top-3-css-grid-features-to-start-using-in-production-b0fe59b2e0f7">Top
3 CSS Grid Features To Start Using in Production</a></li>
<li>原文作者：<a href="https://medium.com/@dioxmio">Jose Granja</a></li>
<li>译者：<a href="https://github.com/PassionPenguin">霜羽
Hoarfroster</a></li>
<li>校对者：<a href="https://github.com/Usualminds">Usualminds</a>、<a href="https://github.com/zqp1226358">zqp1226358</a></li>
</ul>
</blockquote>
<figure>
<img src="https://cdn-images-1.medium.com/max/8096/0*mWiTIfu6BVlYQ5lf" alt="由 Sigmund 拍摄并在 Unsplash 上传的图片">
<figcaption aria-hidden="true">由 <a href="https://unsplash.com/@sigmund?utm_source=medium&amp;utm_medium=referral">Sigmund</a>
拍摄并在 <a href="https://unsplash.com?utm_source=medium&amp;utm_medium=referral">Unsplash</a>
上传的图片</figcaption>
</figure>
<p>Grid 最初是由 Microsoft 团队起草的，并于 2011 年在 IE 10
中落实的。经过近 9 年的发展，我们现在可以说，浏览器对 Grid
的支持已经变得足够好，这样我们可以安心在生产环境中中使用 Grid 了。</p>
<p>本篇文章我们主要讨论浏览器支持且使用频率最高的 3 个 Grid
布局相关的特性。即使有一些更酷的新功能的出现，例如 <code>subgrid</code>
等的问世，也请注意谨慎在生产中不要使用这些功能。在发布产品前，请先检查
<a href="https://www.caniuse.com">Can I Use</a>
网站上的浏览器支持信息。养成这样一个好习惯，百利而无一害。</p>
<h2 id="一个简要的复习">一个简要的复习</h2>
<p>究竟什么是 Grid？Grid
其实就是一个以容器为中心的多维布局系统。简而言之：它可以在任何 x / y
方向上拓展，并且所有布局信息都存储在父节点中，而子节点则大多掌握有关如何将自己放置在
Grid 上的信息。</p>
<figure>
<img src="https://cdn-images-1.medium.com/max/2000/1*6YeEVVXSRcJwnZBHo2EgpQ.png" alt="一维布局与二维布局">
<figcaption aria-hidden="true">一维布局与二维布局</figcaption>
</figure>
<p>在使用 Grid 开发时，建议使用 Firefox 浏览器，因为它的 Dev Tools
比其他浏览器的都要好 —— 支持 Grid
相关属性最棒的浏览器，而且它也是目前唯一支持 <code>subgrid</code>
属性的浏览器。</p>
<p>现在，让我们深入研究可用于生产的三大 CSS Grid 功能。</p>
<h2 id="grid-模板区域">1. Grid 模板区域</h2>
<p>这是我一直以来最喜欢的 CSS Grid 功能，允许我们以声明的方式定义 Grid
布局。</p>
<p>我们可以使用几行 CSS 行创建一个非常复杂且响应迅速的布局：</p>
<div class="sourceCode" id="cb1"><pre class="sourceCode html"><code class="sourceCode html"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a><span class="dt">&lt;!DOCTYPE </span>html<span class="dt">&gt;</span></span>
<span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a><span class="kw">&lt;html</span> <span class="er">lang</span><span class="ot">=</span><span class="st">"en"</span><span class="kw">&gt;</span></span>
<span id="cb1-3"><a href="#cb1-3" aria-hidden="true" tabindex="-1"></a><span class="kw">&lt;head&gt;</span></span>
<span id="cb1-4"><a href="#cb1-4" aria-hidden="true" tabindex="-1"></a>    <span class="kw">&lt;title&gt;</span>Grid Playground<span class="kw">&lt;/title&gt;</span></span>
<span id="cb1-5"><a href="#cb1-5" aria-hidden="true" tabindex="-1"></a>    <span class="kw">&lt;meta</span> <span class="er">charset</span><span class="ot">=</span><span class="st">"UTF-8"</span><span class="kw">/&gt;</span></span>
<span id="cb1-6"><a href="#cb1-6" aria-hidden="true" tabindex="-1"></a>    <span class="kw">&lt;style</span> <span class="er">type</span><span class="ot">=</span><span class="st">"text/css"</span><span class="kw">&gt;</span></span>
<span id="cb1-7"><a href="#cb1-7" aria-hidden="true" tabindex="-1"></a>        body &#123;</span>
<span id="cb1-8"><a href="#cb1-8" aria-hidden="true" tabindex="-1"></a>            <span class="kw">color</span>: <span class="cn">white</span><span class="op">;</span></span>
<span id="cb1-9"><a href="#cb1-9" aria-hidden="true" tabindex="-1"></a>            <span class="kw">text-align</span>: <span class="dv">center</span><span class="op">;</span></span>
<span id="cb1-10"><a href="#cb1-10" aria-hidden="true" tabindex="-1"></a>        &#125;</span>
<span id="cb1-11"><a href="#cb1-11" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-12"><a href="#cb1-12" aria-hidden="true" tabindex="-1"></a>        <span class="pp">#grid</span> &#123;</span>
<span id="cb1-13"><a href="#cb1-13" aria-hidden="true" tabindex="-1"></a>            <span class="kw">background-color</span>: <span class="cn">#73937E</span><span class="op">;</span></span>
<span id="cb1-14"><a href="#cb1-14" aria-hidden="true" tabindex="-1"></a>            <span class="kw">height</span>: <span class="fu">calc(</span><span class="dv">100</span><span class="dt">vh</span> <span class="op">-</span> <span class="dv">20</span><span class="dt">px</span><span class="fu">)</span><span class="op">;</span></span>
<span id="cb1-15"><a href="#cb1-15" aria-hidden="true" tabindex="-1"></a>            <span class="kw">display</span>: grid<span class="op">;</span></span>
<span id="cb1-16"><a href="#cb1-16" aria-hidden="true" tabindex="-1"></a>            <span class="kw">grid-template-rows</span>: <span class="dv">1</span>fr <span class="dv">3</span>fr <span class="dv">1</span>fr<span class="op">;</span></span>
<span id="cb1-17"><a href="#cb1-17" aria-hidden="true" tabindex="-1"></a>            <span class="kw">grid-template-areas</span>:</span>
<span id="cb1-18"><a href="#cb1-18" aria-hidden="true" tabindex="-1"></a>                <span class="st">"navigation navigation navigation navigation"</span></span>
<span id="cb1-19"><a href="#cb1-19" aria-hidden="true" tabindex="-1"></a>                <span class="st">"left content content right"</span></span>
<span id="cb1-20"><a href="#cb1-20" aria-hidden="true" tabindex="-1"></a>                <span class="st">"footer footer footer footer"</span><span class="op">;</span></span>
<span id="cb1-21"><a href="#cb1-21" aria-hidden="true" tabindex="-1"></a>        &#125;</span>
<span id="cb1-22"><a href="#cb1-22" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-23"><a href="#cb1-23" aria-hidden="true" tabindex="-1"></a>        <span class="im">@media</span> <span class="dv">screen</span> <span class="kw">and</span> (<span class="kw">max-width</span>: <span class="dv">700</span><span class="dt">px</span>) &#123;</span>
<span id="cb1-24"><a href="#cb1-24" aria-hidden="true" tabindex="-1"></a>            <span class="pp">#grid</span> &#123;</span>
<span id="cb1-25"><a href="#cb1-25" aria-hidden="true" tabindex="-1"></a>                <span class="kw">grid-template-rows</span>: <span class="dv">1</span>fr <span class="dv">3</span>fr <span class="dv">1</span>fr <span class="dv">1</span>fr <span class="dv">1</span>fr<span class="op">;</span></span>
<span id="cb1-26"><a href="#cb1-26" aria-hidden="true" tabindex="-1"></a>                <span class="kw">grid-template-areas</span>:</span>
<span id="cb1-27"><a href="#cb1-27" aria-hidden="true" tabindex="-1"></a>                    <span class="st">"navigation"</span></span>
<span id="cb1-28"><a href="#cb1-28" aria-hidden="true" tabindex="-1"></a>                    <span class="st">"content"</span></span>
<span id="cb1-29"><a href="#cb1-29" aria-hidden="true" tabindex="-1"></a>                    <span class="st">"left"</span></span>
<span id="cb1-30"><a href="#cb1-30" aria-hidden="true" tabindex="-1"></a>                    <span class="st">"right"</span></span>
<span id="cb1-31"><a href="#cb1-31" aria-hidden="true" tabindex="-1"></a>                    <span class="st">"footer"</span><span class="op">;</span></span>
<span id="cb1-32"><a href="#cb1-32" aria-hidden="true" tabindex="-1"></a>            &#125;</span>
<span id="cb1-33"><a href="#cb1-33" aria-hidden="true" tabindex="-1"></a>        &#125;</span>
<span id="cb1-34"><a href="#cb1-34" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-35"><a href="#cb1-35" aria-hidden="true" tabindex="-1"></a>        <span class="fu">.navigation</span> &#123;</span>
<span id="cb1-36"><a href="#cb1-36" aria-hidden="true" tabindex="-1"></a>            <span class="kw">padding</span>: <span class="dv">10</span><span class="dt">px</span><span class="op">;</span></span>
<span id="cb1-37"><a href="#cb1-37" aria-hidden="true" tabindex="-1"></a>            <span class="kw">background-color</span>: <span class="cn">#471323</span><span class="op">;</span></span>
<span id="cb1-38"><a href="#cb1-38" aria-hidden="true" tabindex="-1"></a>            <span class="kw">grid-area</span>: navigation<span class="op">;</span></span>
<span id="cb1-39"><a href="#cb1-39" aria-hidden="true" tabindex="-1"></a>        &#125;</span>
<span id="cb1-40"><a href="#cb1-40" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-41"><a href="#cb1-41" aria-hidden="true" tabindex="-1"></a>        <span class="fu">.content</span> &#123;</span>
<span id="cb1-42"><a href="#cb1-42" aria-hidden="true" tabindex="-1"></a>            <span class="kw">padding</span>: <span class="dv">10</span><span class="dt">px</span><span class="op">;</span></span>
<span id="cb1-43"><a href="#cb1-43" aria-hidden="true" tabindex="-1"></a>            <span class="kw">background-color</span>: <span class="cn">#5B2E48</span><span class="op">;</span></span>
<span id="cb1-44"><a href="#cb1-44" aria-hidden="true" tabindex="-1"></a>            <span class="kw">grid-area</span>: content<span class="op">;</span></span>
<span id="cb1-45"><a href="#cb1-45" aria-hidden="true" tabindex="-1"></a>        &#125;</span>
<span id="cb1-46"><a href="#cb1-46" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-47"><a href="#cb1-47" aria-hidden="true" tabindex="-1"></a>        <span class="fu">.left</span> &#123;</span>
<span id="cb1-48"><a href="#cb1-48" aria-hidden="true" tabindex="-1"></a>            <span class="kw">padding</span>: <span class="dv">10</span><span class="dt">px</span><span class="op">;</span></span>
<span id="cb1-49"><a href="#cb1-49" aria-hidden="true" tabindex="-1"></a>            <span class="kw">background-color</span>: <span class="cn">#585563</span><span class="op">;</span></span>
<span id="cb1-50"><a href="#cb1-50" aria-hidden="true" tabindex="-1"></a>            <span class="kw">grid-area</span>: <span class="dv">left</span><span class="op">;</span></span>
<span id="cb1-51"><a href="#cb1-51" aria-hidden="true" tabindex="-1"></a>        &#125;</span>
<span id="cb1-52"><a href="#cb1-52" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-53"><a href="#cb1-53" aria-hidden="true" tabindex="-1"></a>        <span class="fu">.right</span> &#123;</span>
<span id="cb1-54"><a href="#cb1-54" aria-hidden="true" tabindex="-1"></a>            <span class="kw">padding</span>: <span class="dv">10</span><span class="dt">px</span><span class="op">;</span></span>
<span id="cb1-55"><a href="#cb1-55" aria-hidden="true" tabindex="-1"></a>            <span class="kw">background-color</span>: <span class="cn">#585563</span><span class="op">;</span></span>
<span id="cb1-56"><a href="#cb1-56" aria-hidden="true" tabindex="-1"></a>            <span class="kw">grid-area</span>: <span class="dv">right</span><span class="op">;</span></span>
<span id="cb1-57"><a href="#cb1-57" aria-hidden="true" tabindex="-1"></a>        &#125;</span>
<span id="cb1-58"><a href="#cb1-58" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-59"><a href="#cb1-59" aria-hidden="true" tabindex="-1"></a>        <span class="fu">.footer</span> &#123;</span>
<span id="cb1-60"><a href="#cb1-60" aria-hidden="true" tabindex="-1"></a>            <span class="kw">padding</span>: <span class="dv">10</span><span class="dt">px</span><span class="op">;</span></span>
<span id="cb1-61"><a href="#cb1-61" aria-hidden="true" tabindex="-1"></a>            <span class="kw">background-color</span>: <span class="cn">#CEB992</span><span class="op">;</span></span>
<span id="cb1-62"><a href="#cb1-62" aria-hidden="true" tabindex="-1"></a>            <span class="kw">grid-area</span>: footer<span class="op">;</span></span>
<span id="cb1-63"><a href="#cb1-63" aria-hidden="true" tabindex="-1"></a>        &#125;</span>
<span id="cb1-64"><a href="#cb1-64" aria-hidden="true" tabindex="-1"></a>    <span class="kw">&lt;/style&gt;</span></span>
<span id="cb1-65"><a href="#cb1-65" aria-hidden="true" tabindex="-1"></a><span class="kw">&lt;/head&gt;</span></span>
<span id="cb1-66"><a href="#cb1-66" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-67"><a href="#cb1-67" aria-hidden="true" tabindex="-1"></a><span class="kw">&lt;body&gt;</span></span>
<span id="cb1-68"><a href="#cb1-68" aria-hidden="true" tabindex="-1"></a><span class="kw">&lt;div</span> <span class="er">id</span><span class="ot">=</span><span class="st">"grid"</span><span class="kw">&gt;</span></span>
<span id="cb1-69"><a href="#cb1-69" aria-hidden="true" tabindex="-1"></a>    <span class="kw">&lt;div</span> <span class="er">class</span><span class="ot">=</span><span class="st">"navigation"</span><span class="kw">&gt;</span>Nav<span class="kw">&lt;/div&gt;</span></span>
<span id="cb1-70"><a href="#cb1-70" aria-hidden="true" tabindex="-1"></a>    <span class="kw">&lt;div</span> <span class="er">class</span><span class="ot">=</span><span class="st">"left"</span><span class="kw">&gt;</span>Left<span class="kw">&lt;/div&gt;</span></span>
<span id="cb1-71"><a href="#cb1-71" aria-hidden="true" tabindex="-1"></a>    <span class="kw">&lt;div</span> <span class="er">class</span><span class="ot">=</span><span class="st">"content"</span><span class="kw">&gt;</span>Content<span class="kw">&lt;/div&gt;</span></span>
<span id="cb1-72"><a href="#cb1-72" aria-hidden="true" tabindex="-1"></a>    <span class="kw">&lt;div</span> <span class="er">class</span><span class="ot">=</span><span class="st">"right"</span><span class="kw">&gt;</span>Right<span class="kw">&lt;/div&gt;</span></span>
<span id="cb1-73"><a href="#cb1-73" aria-hidden="true" tabindex="-1"></a>    <span class="kw">&lt;div</span> <span class="er">class</span><span class="ot">=</span><span class="st">"footer"</span><span class="kw">&gt;</span>Footer<span class="kw">&lt;/div&gt;</span></span>
<span id="cb1-74"><a href="#cb1-74" aria-hidden="true" tabindex="-1"></a><span class="kw">&lt;/div&gt;</span></span>
<span id="cb1-75"><a href="#cb1-75" aria-hidden="true" tabindex="-1"></a><span class="kw">&lt;/body&gt;</span></span>
<span id="cb1-76"><a href="#cb1-76" aria-hidden="true" tabindex="-1"></a><span class="kw">&lt;/html&gt;</span></span></code></pre></div>
<figure>
<img src="https://cdn-images-1.medium.com/max/2000/1*kxxETOv_yi4ECBfYz_D-mw.png" alt="复杂的 Grid 布局">
<figcaption aria-hidden="true">复杂的 Grid 布局</figcaption>
</figure>
<p>所有的变化都由 <code>grid-templates-areas</code> 和
<code>grid-area</code> 两个属性产生。前者定义了所有 Grid 轨迹，而后者将
Grid 元素定位在那些区域上。</p>
<p>提示： Grid 轨迹是两条 Grid 线之间的空间。</p>
<p>让我们使用 Firefox Inspector 审查页面元素，能够清晰地了解我们所创建的
Grid 布局。</p>
<figure>
<img src="https://cdn-images-1.medium.com/max/2090/1*U9o4_M-wfMeBHindl1H4sw.png" alt="Grid 布局的内部">
<figcaption aria-hidden="true">Grid 布局的内部</figcaption>
</figure>
<p>如果我们想在内容周围留一些空白，而不是直接挨着左右两列，我们可以使用<code>.</code>
/ <code>...</code> 符号。</p>
<div class="sourceCode" id="cb2"><pre class="sourceCode css"><code class="sourceCode css"><span id="cb2-1"><a href="#cb2-1" aria-hidden="true" tabindex="-1"></a><span class="pp">#grid</span> &#123;</span>
<span id="cb2-2"><a href="#cb2-2" aria-hidden="true" tabindex="-1"></a>    <span class="kw">background-color</span>: <span class="cn">#73937E</span><span class="op">;</span></span>
<span id="cb2-3"><a href="#cb2-3" aria-hidden="true" tabindex="-1"></a>    <span class="kw">height</span>: <span class="fu">calc(</span><span class="dv">100</span><span class="dt">vh</span> <span class="op">-</span> <span class="dv">20</span><span class="dt">px</span><span class="fu">)</span><span class="op">;</span></span>
<span id="cb2-4"><a href="#cb2-4" aria-hidden="true" tabindex="-1"></a>    <span class="kw">display</span>: grid<span class="op">;</span></span>
<span id="cb2-5"><a href="#cb2-5" aria-hidden="true" tabindex="-1"></a>    <span class="kw">grid-template-rows</span>:<span class="dv">1</span>fr <span class="dv">2</span>fr <span class="dv">1</span>fr<span class="op">;</span></span>
<span id="cb2-6"><a href="#cb2-6" aria-hidden="true" tabindex="-1"></a>    <span class="kw">grid-template-areas</span>:</span>
<span id="cb2-7"><a href="#cb2-7" aria-hidden="true" tabindex="-1"></a>    <span class="st">"navigation navigation navigation navigation"</span></span>
<span id="cb2-8"><a href="#cb2-8" aria-hidden="true" tabindex="-1"></a>    <span class="st">". content content ."</span></span>
<span id="cb2-9"><a href="#cb2-9" aria-hidden="true" tabindex="-1"></a>    <span class="st">"footer footer footer footer"</span><span class="op">;</span></span>
<span id="cb2-10"><a href="#cb2-10" aria-hidden="true" tabindex="-1"></a>&#125;</span></code></pre></div>
<figure>
<img src="https://cdn-images-1.medium.com/max/2074/1*frMRKP1wKAGbxlAuQVI_SQ.png" alt="在主要内容两边定义空白 Grid">
<figcaption aria-hidden="true">在主要内容两边定义空白 Grid</figcaption>
</figure>
<p>注意：使用 <code>grid-template-areas</code>
时，需要注意以下几点：</p>
<ul>
<li>每个区域名称只能定义一次。如果没有连接具有相同区域名称的单元，则将会被视为两个声明。</li>
<li>Grid 区域单元必须形成一个矩形。如果不是，则声明无效。</li>
</ul>
<div class="sourceCode" id="cb3"><pre class="sourceCode css"><code class="sourceCode css"><span id="cb3-1"><a href="#cb3-1" aria-hidden="true" tabindex="-1"></a><span class="co">/* 一个无效的 Grid */</span></span>
<span id="cb3-2"><a href="#cb3-2" aria-hidden="true" tabindex="-1"></a><span class="pp">#grid</span> &#123;</span>
<span id="cb3-3"><a href="#cb3-3" aria-hidden="true" tabindex="-1"></a>    <span class="kw">background-color</span>: <span class="cn">#73937E</span><span class="op">;</span></span>
<span id="cb3-4"><a href="#cb3-4" aria-hidden="true" tabindex="-1"></a>    <span class="kw">height</span>: <span class="fu">calc(</span><span class="dv">100</span><span class="dt">vh</span> <span class="op">-</span> <span class="dv">20</span><span class="dt">px</span><span class="fu">)</span><span class="op">;</span></span>
<span id="cb3-5"><a href="#cb3-5" aria-hidden="true" tabindex="-1"></a>    <span class="kw">display</span>: grid<span class="op">;</span></span>
<span id="cb3-6"><a href="#cb3-6" aria-hidden="true" tabindex="-1"></a>    <span class="kw">grid-template-areas</span>:</span>
<span id="cb3-7"><a href="#cb3-7" aria-hidden="true" tabindex="-1"></a>    <span class="st">"navigation navigation navigation navigation"</span></span>
<span id="cb3-8"><a href="#cb3-8" aria-hidden="true" tabindex="-1"></a>    <span class="st">"left content content right"</span></span>
<span id="cb3-9"><a href="#cb3-9" aria-hidden="true" tabindex="-1"></a>    <span class="st">"content content content content"</span></span>
<span id="cb3-10"><a href="#cb3-10" aria-hidden="true" tabindex="-1"></a>    <span class="st">"left content content right"</span></span>
<span id="cb3-11"><a href="#cb3-11" aria-hidden="true" tabindex="-1"></a>    <span class="st">"footer footer footer footer"</span><span class="op">;</span></span>
<span id="cb3-12"><a href="#cb3-12" aria-hidden="true" tabindex="-1"></a>&#125;</span></code></pre></div>
<p>上面的示例不起作用。因为 <code>right</code> 和 <code>left</code>
的定义都重复了。删除 <code>content content content content</code>
一行，让 <code>left</code> 和 <code>right</code>
连接起来，就能够解决该问题。</p>
<div class="sourceCode" id="cb4"><pre class="sourceCode css"><code class="sourceCode css"><span id="cb4-1"><a href="#cb4-1" aria-hidden="true" tabindex="-1"></a><span class="co">/* 一个无效的 Grid */</span></span>
<span id="cb4-2"><a href="#cb4-2" aria-hidden="true" tabindex="-1"></a><span class="pp">#grid</span> &#123;</span>
<span id="cb4-3"><a href="#cb4-3" aria-hidden="true" tabindex="-1"></a>    <span class="kw">background-color</span>: <span class="cn">#73937E</span><span class="op">;</span></span>
<span id="cb4-4"><a href="#cb4-4" aria-hidden="true" tabindex="-1"></a>    <span class="kw">height</span>: <span class="fu">calc(</span><span class="dv">100</span><span class="dt">vh</span> <span class="op">-</span> <span class="dv">20</span><span class="dt">px</span><span class="fu">)</span><span class="op">;</span></span>
<span id="cb4-5"><a href="#cb4-5" aria-hidden="true" tabindex="-1"></a>    <span class="kw">display</span>: grid<span class="op">;</span></span>
<span id="cb4-6"><a href="#cb4-6" aria-hidden="true" tabindex="-1"></a>    <span class="kw">grid-template-areas</span>:</span>
<span id="cb4-7"><a href="#cb4-7" aria-hidden="true" tabindex="-1"></a>    <span class="st">"navigation navigation navigation navigation"</span></span>
<span id="cb4-8"><a href="#cb4-8" aria-hidden="true" tabindex="-1"></a>    <span class="st">"content right"</span></span>
<span id="cb4-9"><a href="#cb4-9" aria-hidden="true" tabindex="-1"></a>    <span class="st">"content content"</span></span>
<span id="cb4-10"><a href="#cb4-10" aria-hidden="true" tabindex="-1"></a>    <span class="st">"right"</span></span>
<span id="cb4-11"><a href="#cb4-11" aria-hidden="true" tabindex="-1"></a>    <span class="st">"footer"</span><span class="op">;</span></span>
<span id="cb4-12"><a href="#cb4-12" aria-hidden="true" tabindex="-1"></a>&#125;</span></code></pre></div>
<p>上面的示例不起作用，因为我们定义了描述了一个非矩形区域，而 Grid
并非为此而建，也不支持它。</p>
<p>提示：我们可以将 <code>grid-template-rows</code> 和
<code>grid-template-areas</code>
结合使用，但是结果将有所不同。我们必须选择一种适合我们特定场景的方案。</p>
<div class="sourceCode" id="cb5"><pre class="sourceCode css"><code class="sourceCode css"><span id="cb5-1"><a href="#cb5-1" aria-hidden="true" tabindex="-1"></a><span class="co">/* 方法 A */</span></span>
<span id="cb5-2"><a href="#cb5-2" aria-hidden="true" tabindex="-1"></a><span class="pp">#grid</span> &#123;</span>
<span id="cb5-3"><a href="#cb5-3" aria-hidden="true" tabindex="-1"></a>    <span class="kw">grid-template-rows</span>: <span class="dv">1</span>fr <span class="dv">3</span>fr <span class="dv">1</span>fr<span class="op">;</span></span>
<span id="cb5-4"><a href="#cb5-4" aria-hidden="true" tabindex="-1"></a>    <span class="kw">grid-template-areas</span>:</span>
<span id="cb5-5"><a href="#cb5-5" aria-hidden="true" tabindex="-1"></a>      <span class="st">"navigation navigation navigation navigation"</span></span>
<span id="cb5-6"><a href="#cb5-6" aria-hidden="true" tabindex="-1"></a>      <span class="st">"left content content right"</span></span>
<span id="cb5-7"><a href="#cb5-7" aria-hidden="true" tabindex="-1"></a>      <span class="st">"footer footer footer footer"</span><span class="op">;</span></span>
<span id="cb5-8"><a href="#cb5-8" aria-hidden="true" tabindex="-1"></a>&#125;</span>
<span id="cb5-9"><a href="#cb5-9" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb5-10"><a href="#cb5-10" aria-hidden="true" tabindex="-1"></a><span class="co">/* 方法 B */</span></span>
<span id="cb5-11"><a href="#cb5-11" aria-hidden="true" tabindex="-1"></a><span class="pp">#grid</span> &#123;</span>
<span id="cb5-12"><a href="#cb5-12" aria-hidden="true" tabindex="-1"></a>    <span class="kw">grid-template-areas</span>:</span>
<span id="cb5-13"><a href="#cb5-13" aria-hidden="true" tabindex="-1"></a>      <span class="st">"navigation navigation navigation navigation"</span></span>
<span id="cb5-14"><a href="#cb5-14" aria-hidden="true" tabindex="-1"></a>      <span class="st">"left content content right"</span></span>
<span id="cb5-15"><a href="#cb5-15" aria-hidden="true" tabindex="-1"></a>      <span class="st">"left content content right"</span></span>
<span id="cb5-16"><a href="#cb5-16" aria-hidden="true" tabindex="-1"></a>      <span class="st">"left content content right"</span></span>
<span id="cb5-17"><a href="#cb5-17" aria-hidden="true" tabindex="-1"></a>      <span class="st">"footer footer footer footer"</span><span class="op">;</span></span>
<span id="cb5-18"><a href="#cb5-18" aria-hidden="true" tabindex="-1"></a>&#125;</span></code></pre></div>
<figure>
<img src="https://cdn-images-1.medium.com/max/2090/1*U9o4_M-wfMeBHindl1H4sw.png" alt="方法 A">
<figcaption aria-hidden="true">方法 A</figcaption>
</figure>
<figure>
<img src="https://cdn-images-1.medium.com/max/2082/1*18VMr9MkDmUHOS-biKfckQ.png" alt="方法 B">
<figcaption aria-hidden="true">方法 B</figcaption>
</figure>
<p>提示：使用 <code>grid-template-area</code> 可以简单创建 Grid
线。这意味着即使使用 <code>grid-template-area</code>，我们仍然可以使用
Grid 线的位置逻辑。接下来，让我们简要介绍一下负索引
<code>-1</code>。</p>
<div class="sourceCode" id="cb6"><pre class="sourceCode css"><code class="sourceCode css"><span id="cb6-1"><a href="#cb6-1" aria-hidden="true" tabindex="-1"></a><span class="fu">.customContent</span> &#123;</span>
<span id="cb6-2"><a href="#cb6-2" aria-hidden="true" tabindex="-1"></a>    <span class="kw">background-color</span>: <span class="cn">white</span><span class="op">;</span></span>
<span id="cb6-3"><a href="#cb6-3" aria-hidden="true" tabindex="-1"></a>    <span class="kw">grid-row</span>: <span class="dv">1</span> / <span class="dv">-1</span><span class="op">;</span></span>
<span id="cb6-4"><a href="#cb6-4" aria-hidden="true" tabindex="-1"></a>    <span class="kw">grid-column</span>: <span class="dv">1</span><span class="op">;</span></span>
<span id="cb6-5"><a href="#cb6-5" aria-hidden="true" tabindex="-1"></a>&#125;</span></code></pre></div>
<p>添加负索引会使我们的 CSS 更强大。我们可能会对 Grid
线的数量不了解：通过负索引，我们可以将内容设置为扩展到最后一个 Grid
线。</p>
<figure>
<img src="https://cdn-images-1.medium.com/max/2078/1*mFCCFIxCWZ_EA5H80t-BjQ.png" alt="行上面使用负索引的结果">
<figcaption aria-hidden="true">行上面使用负索引的结果</figcaption>
</figure>
<h2 id="grid-间隔">2. Grid 间隔</h2>
<p>Grid 的 <code>gap</code> 特性的使用是很简捷的。我们仅需使用
<code>column-gap</code>、<code>row-gap</code> 或 <code>gap</code>
就能定义 Grid 布局中的间隙。</p>
<div class="sourceCode" id="cb7"><pre class="sourceCode css"><code class="sourceCode css"><span id="cb7-1"><a href="#cb7-1" aria-hidden="true" tabindex="-1"></a><span class="pp">#grid</span> &#123;</span>
<span id="cb7-2"><a href="#cb7-2" aria-hidden="true" tabindex="-1"></a>    <span class="kw">background-color</span>: <span class="cn">#73937E</span><span class="op">;</span></span>
<span id="cb7-3"><a href="#cb7-3" aria-hidden="true" tabindex="-1"></a>    <span class="kw">height</span>: <span class="fu">calc(</span><span class="dv">100</span><span class="dt">vh</span> <span class="op">-</span> <span class="dv">20</span><span class="dt">px</span><span class="fu">)</span><span class="op">;</span></span>
<span id="cb7-4"><a href="#cb7-4" aria-hidden="true" tabindex="-1"></a>    <span class="kw">display</span>: grid<span class="op">;</span></span>
<span id="cb7-5"><a href="#cb7-5" aria-hidden="true" tabindex="-1"></a>    <span class="kw">row-gap</span>: <span class="dv">5</span><span class="dt">px</span><span class="op">;</span></span>
<span id="cb7-6"><a href="#cb7-6" aria-hidden="true" tabindex="-1"></a>    <span class="kw">column-gap</span>: <span class="dv">15</span><span class="dt">px</span><span class="op">;</span></span>
<span id="cb7-7"><a href="#cb7-7" aria-hidden="true" tabindex="-1"></a>    <span class="kw">grid-template-areas</span>:</span>
<span id="cb7-8"><a href="#cb7-8" aria-hidden="true" tabindex="-1"></a>    <span class="st">"navigation navigation navigation navigation"</span></span>
<span id="cb7-9"><a href="#cb7-9" aria-hidden="true" tabindex="-1"></a>    <span class="st">"left content content right"</span></span>
<span id="cb7-10"><a href="#cb7-10" aria-hidden="true" tabindex="-1"></a>    <span class="st">"content content content content"</span></span>
<span id="cb7-11"><a href="#cb7-11" aria-hidden="true" tabindex="-1"></a>    <span class="st">"left content content right"</span></span>
<span id="cb7-12"><a href="#cb7-12" aria-hidden="true" tabindex="-1"></a>    <span class="st">"footer footer footer footer"</span><span class="op">;</span></span>
<span id="cb7-13"><a href="#cb7-13" aria-hidden="true" tabindex="-1"></a>&#125;</span></code></pre></div>
<figure>
<img src="https://cdn-images-1.medium.com/max/2000/1*aajG-IirnfyHHYyPb2YKsw.png" alt="使用 gap 功能">
<figcaption aria-hidden="true">使用 gap 功能</figcaption>
</figure>
<p>注意：请勿使用 <code>grid-gap</code>、<code>grid-column-gap</code> 或
<code>grid-column-gap</code>：现在它们已过时，浏览器的支持会不断下降。</p>
<h2 id="minmax">3. MinMax</h2>
<p>起初，<code>MinMax</code>
看起来并不像一个令人兴奋的功能。这个功能非常简单：</p>
<pre><code>minmax(min, max)</code></pre>
<p>它将在 <code>min</code> 和 <code>max</code>
之间获取最大值。它接受：<code>length</code>、<code>percentage</code>、<code>max-content</code>、<code>min-content</code>
和 <code>auto</code> 五种类型的值。它就是专门为 Grid 打造的，因此能够在
Grid 上发挥出超强的作用。</p>
<p>让我们创建一个包含三列的布局，并使用 <code>minmax</code>
将其扩展到整个 Grid 区域。</p>
<pre><code>grid-template-columns: repeat(3, minmax(100px, 1fr));</code></pre>
<figure>
<img src="https://cdn-images-1.medium.com/max/2000/1*DqLyXYT5DlN7k8NHejQ1nQ.png" alt="使用 minmax 定义三列布局">
<figcaption aria-hidden="true">使用 minmax 定义三列布局</figcaption>
</figure>
<p>注意：这看起来很棒，但是有一个很大的缺点 —— 如果容器小于
<code>3 * 100px + 2 * 10px</code>，则内容将溢出。</p>
<figure>
<img src="https://cdn-images-1.medium.com/max/2000/1*q-y32_HSK0RUABQregRtJw.png" alt="没有足够的空间来渲染最小宽度为 100px 的三列布局">
<figcaption aria-hidden="true">没有足够的空间来渲染最小宽度为 100px
的三列布局</figcaption>
</figure>
<p>我们该如何解决？直接以响应方式构建 Grid 布局！我们可以让 Grid
容器通过使用 <code>auto-fill</code> 或 <code>auto-fit</code>
来确定列数。</p>
<p>通过简单的更改，我们的三列布局现在可以响应视口的大小：</p>
<div class="sourceCode" id="cb10"><pre class="sourceCode html"><code class="sourceCode html"><span id="cb10-1"><a href="#cb10-1" aria-hidden="true" tabindex="-1"></a><span class="dt">&lt;!DOCTYPE </span>html<span class="dt">&gt;</span></span>
<span id="cb10-2"><a href="#cb10-2" aria-hidden="true" tabindex="-1"></a><span class="kw">&lt;html</span> <span class="er">lang</span><span class="ot">=</span><span class="st">"en"</span><span class="kw">&gt;</span></span>
<span id="cb10-3"><a href="#cb10-3" aria-hidden="true" tabindex="-1"></a><span class="kw">&lt;head&gt;</span></span>
<span id="cb10-4"><a href="#cb10-4" aria-hidden="true" tabindex="-1"></a>    <span class="kw">&lt;title&gt;</span>Grid Playground<span class="kw">&lt;/title&gt;</span></span>
<span id="cb10-5"><a href="#cb10-5" aria-hidden="true" tabindex="-1"></a>    <span class="kw">&lt;meta</span> <span class="er">charset</span><span class="ot">=</span><span class="st">"UTF-8"</span><span class="kw">/&gt;</span></span>
<span id="cb10-6"><a href="#cb10-6" aria-hidden="true" tabindex="-1"></a>    <span class="kw">&lt;style</span> <span class="er">type</span><span class="ot">=</span><span class="st">"text/css"</span><span class="kw">&gt;</span></span>
<span id="cb10-7"><a href="#cb10-7" aria-hidden="true" tabindex="-1"></a>        body &#123;</span>
<span id="cb10-8"><a href="#cb10-8" aria-hidden="true" tabindex="-1"></a>            <span class="kw">color</span>: <span class="cn">white</span><span class="op">;</span></span>
<span id="cb10-9"><a href="#cb10-9" aria-hidden="true" tabindex="-1"></a>            <span class="kw">text-align</span>: <span class="dv">center</span><span class="op">;</span></span>
<span id="cb10-10"><a href="#cb10-10" aria-hidden="true" tabindex="-1"></a>            <span class="kw">box-sizing</span>: <span class="dv">content-box</span><span class="op">;</span></span>
<span id="cb10-11"><a href="#cb10-11" aria-hidden="true" tabindex="-1"></a>        &#125;</span>
<span id="cb10-12"><a href="#cb10-12" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb10-13"><a href="#cb10-13" aria-hidden="true" tabindex="-1"></a>        <span class="pp">#grid</span> &#123;</span>
<span id="cb10-14"><a href="#cb10-14" aria-hidden="true" tabindex="-1"></a>            <span class="kw">background-color</span>: <span class="cn">#73937E</span><span class="op">;</span></span>
<span id="cb10-15"><a href="#cb10-15" aria-hidden="true" tabindex="-1"></a>            <span class="kw">display</span>: grid<span class="op">;</span></span>
<span id="cb10-16"><a href="#cb10-16" aria-hidden="true" tabindex="-1"></a>            <span class="kw">grid-template-columns</span>: <span class="fu">repeat(</span>auto-fill<span class="op">,</span> minmax(<span class="dv">200</span><span class="dt">px</span><span class="op">,</span> <span class="dv">1</span>fr<span class="fu">)</span>)<span class="op">;</span></span>
<span id="cb10-17"><a href="#cb10-17" aria-hidden="true" tabindex="-1"></a>            <span class="kw">gap</span>: <span class="dv">10</span><span class="dt">px</span><span class="op">;</span></span>
<span id="cb10-18"><a href="#cb10-18" aria-hidden="true" tabindex="-1"></a>            <span class="kw">padding</span>: <span class="dv">20</span><span class="dt">px</span><span class="op">;</span></span>
<span id="cb10-19"><a href="#cb10-19" aria-hidden="true" tabindex="-1"></a>        &#125;</span>
<span id="cb10-20"><a href="#cb10-20" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb10-21"><a href="#cb10-21" aria-hidden="true" tabindex="-1"></a>        <span class="fu">.item</span> &#123;</span>
<span id="cb10-22"><a href="#cb10-22" aria-hidden="true" tabindex="-1"></a>            <span class="kw">padding</span>: <span class="dv">20</span><span class="dt">px</span><span class="op">;</span></span>
<span id="cb10-23"><a href="#cb10-23" aria-hidden="true" tabindex="-1"></a>            <span class="kw">background-color</span>: <span class="cn">#5B2E48</span><span class="op">;</span></span>
<span id="cb10-24"><a href="#cb10-24" aria-hidden="true" tabindex="-1"></a>        &#125;</span>
<span id="cb10-25"><a href="#cb10-25" aria-hidden="true" tabindex="-1"></a>    <span class="kw">&lt;/style&gt;</span></span>
<span id="cb10-26"><a href="#cb10-26" aria-hidden="true" tabindex="-1"></a><span class="kw">&lt;/head&gt;</span></span>
<span id="cb10-27"><a href="#cb10-27" aria-hidden="true" tabindex="-1"></a><span class="kw">&lt;body&gt;</span></span>
<span id="cb10-28"><a href="#cb10-28" aria-hidden="true" tabindex="-1"></a><span class="kw">&lt;div</span> <span class="er">id</span><span class="ot">=</span><span class="st">"grid"</span><span class="kw">&gt;</span></span>
<span id="cb10-29"><a href="#cb10-29" aria-hidden="true" tabindex="-1"></a>    <span class="kw">&lt;div</span> <span class="er">class</span><span class="ot">=</span><span class="st">"item"</span><span class="kw">&gt;&lt;/div&gt;</span></span>
<span id="cb10-30"><a href="#cb10-30" aria-hidden="true" tabindex="-1"></a>    <span class="kw">&lt;div</span> <span class="er">class</span><span class="ot">=</span><span class="st">"item"</span><span class="kw">&gt;&lt;/div&gt;</span></span>
<span id="cb10-31"><a href="#cb10-31" aria-hidden="true" tabindex="-1"></a>    <span class="kw">&lt;div</span> <span class="er">class</span><span class="ot">=</span><span class="st">"item"</span><span class="kw">&gt;&lt;/div&gt;</span></span>
<span id="cb10-32"><a href="#cb10-32" aria-hidden="true" tabindex="-1"></a>    <span class="kw">&lt;div</span> <span class="er">class</span><span class="ot">=</span><span class="st">"item"</span><span class="kw">&gt;&lt;/div&gt;</span></span>
<span id="cb10-33"><a href="#cb10-33" aria-hidden="true" tabindex="-1"></a>    <span class="kw">&lt;div</span> <span class="er">class</span><span class="ot">=</span><span class="st">"item"</span><span class="kw">&gt;&lt;/div&gt;</span></span>
<span id="cb10-34"><a href="#cb10-34" aria-hidden="true" tabindex="-1"></a>    <span class="kw">&lt;div</span> <span class="er">class</span><span class="ot">=</span><span class="st">"item"</span><span class="kw">&gt;&lt;/div&gt;</span></span>
<span id="cb10-35"><a href="#cb10-35" aria-hidden="true" tabindex="-1"></a>    <span class="kw">&lt;div</span> <span class="er">class</span><span class="ot">=</span><span class="st">"item"</span><span class="kw">&gt;&lt;/div&gt;</span></span>
<span id="cb10-36"><a href="#cb10-36" aria-hidden="true" tabindex="-1"></a>    <span class="kw">&lt;div</span> <span class="er">class</span><span class="ot">=</span><span class="st">"item"</span><span class="kw">&gt;&lt;/div&gt;</span></span>
<span id="cb10-37"><a href="#cb10-37" aria-hidden="true" tabindex="-1"></a>    <span class="kw">&lt;div</span> <span class="er">class</span><span class="ot">=</span><span class="st">"item"</span><span class="kw">&gt;&lt;/div&gt;</span></span>
<span id="cb10-38"><a href="#cb10-38" aria-hidden="true" tabindex="-1"></a>    <span class="kw">&lt;div</span> <span class="er">class</span><span class="ot">=</span><span class="st">"item"</span><span class="kw">&gt;&lt;/div&gt;</span></span>
<span id="cb10-39"><a href="#cb10-39" aria-hidden="true" tabindex="-1"></a>    <span class="kw">&lt;div</span> <span class="er">class</span><span class="ot">=</span><span class="st">"item"</span><span class="kw">&gt;&lt;/div&gt;</span></span>
<span id="cb10-40"><a href="#cb10-40" aria-hidden="true" tabindex="-1"></a>    <span class="kw">&lt;div</span> <span class="er">class</span><span class="ot">=</span><span class="st">"item"</span><span class="kw">&gt;&lt;/div&gt;</span></span>
<span id="cb10-41"><a href="#cb10-41" aria-hidden="true" tabindex="-1"></a>    <span class="kw">&lt;div</span> <span class="er">class</span><span class="ot">=</span><span class="st">"item"</span><span class="kw">&gt;&lt;/div&gt;</span></span>
<span id="cb10-42"><a href="#cb10-42" aria-hidden="true" tabindex="-1"></a>    <span class="kw">&lt;div</span> <span class="er">class</span><span class="ot">=</span><span class="st">"item"</span><span class="kw">&gt;&lt;/div&gt;</span></span>
<span id="cb10-43"><a href="#cb10-43" aria-hidden="true" tabindex="-1"></a>    <span class="kw">&lt;div</span> <span class="er">class</span><span class="ot">=</span><span class="st">"item"</span><span class="kw">&gt;&lt;/div&gt;</span></span>
<span id="cb10-44"><a href="#cb10-44" aria-hidden="true" tabindex="-1"></a>    <span class="kw">&lt;div</span> <span class="er">class</span><span class="ot">=</span><span class="st">"item"</span><span class="kw">&gt;&lt;/div&gt;</span></span>
<span id="cb10-45"><a href="#cb10-45" aria-hidden="true" tabindex="-1"></a>    <span class="kw">&lt;div</span> <span class="er">class</span><span class="ot">=</span><span class="st">"item"</span><span class="kw">&gt;&lt;/div&gt;</span></span>
<span id="cb10-46"><a href="#cb10-46" aria-hidden="true" tabindex="-1"></a>    <span class="kw">&lt;div</span> <span class="er">class</span><span class="ot">=</span><span class="st">"item"</span><span class="kw">&gt;&lt;/div&gt;</span></span>
<span id="cb10-47"><a href="#cb10-47" aria-hidden="true" tabindex="-1"></a>    <span class="kw">&lt;div</span> <span class="er">class</span><span class="ot">=</span><span class="st">"item"</span><span class="kw">&gt;&lt;/div&gt;</span></span>
<span id="cb10-48"><a href="#cb10-48" aria-hidden="true" tabindex="-1"></a>    <span class="kw">&lt;div</span> <span class="er">class</span><span class="ot">=</span><span class="st">"item"</span><span class="kw">&gt;&lt;/div&gt;</span></span>
<span id="cb10-49"><a href="#cb10-49" aria-hidden="true" tabindex="-1"></a><span class="kw">&lt;/div&gt;</span></span>
<span id="cb10-50"><a href="#cb10-50" aria-hidden="true" tabindex="-1"></a><span class="kw">&lt;/body&gt;</span></span>
<span id="cb10-51"><a href="#cb10-51" aria-hidden="true" tabindex="-1"></a><span class="kw">&lt;/html&gt;</span></span></code></pre></div>
<figure>
<img src="https://cdn-images-1.medium.com/max/2000/1*wu16vXlLxgjnrI8Gragp1g.png" alt="响应式 Grid 布局">
<figcaption aria-hidden="true">响应式 Grid 布局</figcaption>
</figure>
<p>那就是我们所有变化所发生的源头：</p>
<pre><code>grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));</code></pre>
<p>我们告诉 Grid 布局创建填充 Grid 空间的轨迹，并且它们的最小值应为
<code>200px</code>，最大值应为 <code>1fr</code>。</p>
<p>注意：我们不能使用 <code>auto-fill</code>
来设置最大列数。但这并不是要那样工作。为了设置最大列数，我们必须使用媒体查询并调整
<code>minMax</code> 的值。 另一种选择是使用
<code>css变量</code>。任一选项都需要使用媒体查询。</p>
<div class="sourceCode" id="cb12"><pre class="sourceCode css"><code class="sourceCode css"><span id="cb12-1"><a href="#cb12-1" aria-hidden="true" tabindex="-1"></a><span class="co">/* 使用媒体查询 + CSS 变量去构建响应式的固定栏目布局 */</span></span>
<span id="cb12-2"><a href="#cb12-2" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb12-3"><a href="#cb12-3" aria-hidden="true" tabindex="-1"></a><span class="fu">.grid</span> &#123;</span>
<span id="cb12-4"><a href="#cb12-4" aria-hidden="true" tabindex="-1"></a>    <span class="va">--repeat</span>: auto-fit<span class="op">;</span></span>
<span id="cb12-5"><a href="#cb12-5" aria-hidden="true" tabindex="-1"></a>&#125;</span>
<span id="cb12-6"><a href="#cb12-6" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb12-7"><a href="#cb12-7" aria-hidden="true" tabindex="-1"></a><span class="im">@media</span> <span class="dv">screen</span> <span class="kw">and</span> (<span class="kw">max-width</span>: <span class="dv">700</span><span class="dt">px</span>) &#123;</span>
<span id="cb12-8"><a href="#cb12-8" aria-hidden="true" tabindex="-1"></a>    <span class="fu">.grid</span> &#123;</span>
<span id="cb12-9"><a href="#cb12-9" aria-hidden="true" tabindex="-1"></a>        <span class="va">--repeat</span>: <span class="dv">3</span><span class="op">;</span></span>
<span id="cb12-10"><a href="#cb12-10" aria-hidden="true" tabindex="-1"></a>    &#125;</span>
<span id="cb12-11"><a href="#cb12-11" aria-hidden="true" tabindex="-1"></a>&#125;</span>
<span id="cb12-12"><a href="#cb12-12" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb12-13"><a href="#cb12-13" aria-hidden="true" tabindex="-1"></a><span class="co">/* 使用： grid-template-columns: repeat(var(--repeat, auto-fit), minmax(200px, 1fr)); */</span></span></code></pre></div>
<p>最后，让我们进一步了解 <code>auto-fill</code> 和
<code>auto-fit</code> 之间的区别：</p>
<p><em><code>auto-fill</code>：尝试在给定约束条件下用尽可能多的列填充行
</em><code>auto-fit</code>：行为与<code>auto-fill</code>相同，但是任何空的重复轨道将被折叠，它将扩展其他轨道以占用所有可用空间（如果有）。</p>
<figure>
<img src="https://cdn-images-1.medium.com/max/2000/1*Be3yz9t1oZ-OzfWghQ_l0g.png" alt="自动填充与自动调整">
<figcaption aria-hidden="true">自动填充与自动调整</figcaption>
</figure>
<p>当有足够的元素填充 Grid
时，两个属性的效果将相同。这意味着根据分辨率的不同，它们可能渲染的效果是一样的。这就是为什么了解他们的内部情况是很重要的。</p>
<figure>
<img src="https://cdn-images-1.medium.com/max/2000/1*bjQpF-R9e7ki-5u2c5zOwg.png" alt="在某些分辨率下，它们的作用效果可能相同">
<figcaption aria-hidden="true">在某些分辨率下，它们的作用效果可能相同</figcaption>
</figure>
<h2 id="总结">总结</h2>
<figure>
<img src="https://cdn-images-1.medium.com/max/10944/0*qOzhnK7sH5tZyk_T" alt="Denys Nevozhai 拍摄并发布于 Unsplash 的照片">
<figcaption aria-hidden="true"><a href="https://unsplash.com/@dnevozhai?utm_source=medium&amp;utm_medium=referral">Denys
Nevozhai</a> 拍摄并发布于 <a href="https://unsplash.com?utm_source=medium&amp;utm_medium=referral">Unsplash</a>
的照片</figcaption>
</figure>
<p>我们介绍了最突出的三个 Grid
特性并深入探讨了如何以最恰当的方式使用它们。现在，我想我们已经可以使用更少的
CSS 代码以更高效的方式构建布局。使用 Flex API
的日子已经过去了，现在就让我们一起使用 Grid 功能来美化我们的页面吧～</p>
<p>不幸的是，我们无法等待 IE 11 的终结，因为它至少在 4
年内不会发生，毕竟它仍然在企业级别被广泛地使用着。现在我们需要添加一些
polyfill 确保 100％ 的用户都能够正常地使用。</p>
<p>我希望我的文章能为阅读的你提供开始在生产中使用 Grid
的信心。毕竟一旦开始使用它，就再也没有回头路了，这玩意真是太好用了！</p>]]></content>
      <categories>
        <category>Computer Science</category>
        <category>Frontend</category>
        <category>Styling</category>
      </categories>
      <tags>
        <tag>Computer Science</tag>
        <tag>Frontend</tag>
        <tag>CSS</tag>
      </tags>
  </entry>
  <entry>
    <title>使用 CSS Painting API 自动生成图像</title>
    <url>/2021/02/19/computer%20science/frontend/programmatically-generate-images-with-css-painting-api/</url>
    <content><![CDATA[<blockquote>
<ul>
<li>原文地址：<a href="https://blog.bitsrc.io/programmatically-generate-images-with-css-painting-api-3b1a860dae3b">Programmatically
generate images with CSS Painting API</a></li>
<li>原文作者：<a href="https://medium.com/@viduniwickramarachchi">Viduni
Wickramarachchi</a></li>
<li>译者：<a href="https://github.com/PassionPenguin">霜羽
Hoarfroster</a></li>
<li>校对者：<a href="https://github.com/zenblo">zenblo</a>、<a href="https://github.com/lsvih">lsvih</a></li>
</ul>
</blockquote>
<figure>
<img src="https://cdn-images-1.medium.com/max/5760/1*wKYGWd-7eWgpmMeBNiLCDA.jpeg" alt="Banner">
<figcaption aria-hidden="true">Banner</figcaption>
</figure>
<p>图像为应用程序增添色彩，丰富内容。然而，如果网页中嵌入了大量高分辨率图像，会大量增加页面资源加载时间，严重影响用户体验。对于展示产品、方案等必须内容的图像，我们别无选择，只能按照正常方式嵌入这些图像并通过缓存它们来优化应用程序。但是，如果我们在应用程序中需要几何图像，则不必再将其作为资源来加载。</p>
<blockquote>
<p>我们可以使用 CSS Painting API 即时生成几何图像。</p>
</blockquote>
<p>让我们一起来走进这个 API，并且学习如何使用它生成图像吧～</p>
<h2 id="css-painting-api-的简介">CSS Painting API 的简介</h2>
<p>开发者们能够使用 <a href="https://developer.mozilla.org/en-US/docs/Web/API/CSS_Painting_API">CSS
Painting API</a> 使用编写的 JavaScript 函数将图像绘制到 CSS 属性中，例如
<code>background-image</code>和 <code>border</code>。它提供了一组
API，使开发人员可以访问 CSSOM，CSS Houdini（<a href="https://github.com/w3c/css-houdini-drafts">Houdini</a>）的一部分
—— 新浏览器 API 的集合，为开发人员提供了对 CSS
本身的更底层的访问方法。）</p>
<p>嵌入图像的传统方法如下。</p>
<div class="sourceCode" id="cb1"><pre class="sourceCode css"><code class="sourceCode css"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a>div &#123;</span>
<span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a>    <span class="kw">background-image</span>: <span class="fu">url(</span><span class="st">'assets/background.jpg'</span><span class="fu">)</span><span class="op">;</span></span>
<span id="cb1-3"><a href="#cb1-3" aria-hidden="true" tabindex="-1"></a>&#125;</span></code></pre></div>
<p>而如果使用 CSS Painting API，我们只需要调用 <code>paint()</code>
函数，并且传入一个 JavaScript 声明好的 Worklet：</p>
<div class="sourceCode" id="cb2"><pre class="sourceCode css"><code class="sourceCode css"><span id="cb2-1"><a href="#cb2-1" aria-hidden="true" tabindex="-1"></a>div &#123;</span>
<span id="cb2-2"><a href="#cb2-2" aria-hidden="true" tabindex="-1"></a>    <span class="kw">background-image</span>: paint<span class="fu">(</span><span class="cn">background</span><span class="fu">)</span><span class="op">;</span></span>
<span id="cb2-3"><a href="#cb2-3" aria-hidden="true" tabindex="-1"></a>&#125;</span></code></pre></div>
<p>这串代码的工作逻辑是这样的：</p>
<p><img src="https://cdn-images-1.medium.com/max/2000/1*c2EShrISdnmcxc87qJdKPg.png"></p>
<p>在上文中似乎存在着一些晦涩难懂的术语。例如，我们提及了
<code>worklet</code>？</p>
<p>简而言之，让程序自动生成图像的 JavaScript 代码称为 Paint Worklet。<a href="https://www.w3.org/TR/worklets-1/#intro">Worklet</a>
是浏览器渲染管道的一个扩展。除了 Paint Worklet 之外，还有其他类型的
Worklet，例如 Animation Worklet 和 Layout Worklet。</p>
<p>现在，让我们看一下程序生成图像的分步方法。</p>
<h2 id="在实践中使用-css-painting-api">在实践中使用 CSS Painting
API</h2>
<p>在本文中，我们将会探讨如何创建一个气泡背景</p>
<h4 id="第一步添加-css-paint-函数">第一步：添加 CSS paint() 函数</h4>
<p>在开始这一切之前，我们需要往所需要添加图片的 CSS 属性中添加
<code>paint()</code> 函数。</p>
<div class="sourceCode" id="cb3"><pre class="sourceCode css"><code class="sourceCode css"><span id="cb3-1"><a href="#cb3-1" aria-hidden="true" tabindex="-1"></a><span class="fu">.bubble-background</span> &#123;</span>
<span id="cb3-2"><a href="#cb3-2" aria-hidden="true" tabindex="-1"></a>    <span class="kw">width</span>: <span class="dv">400</span><span class="dt">px</span><span class="op">;</span></span>
<span id="cb3-3"><a href="#cb3-3" aria-hidden="true" tabindex="-1"></a>    <span class="kw">height</span>: <span class="dv">400</span><span class="dt">px</span><span class="op">;</span></span>
<span id="cb3-4"><a href="#cb3-4" aria-hidden="true" tabindex="-1"></a>    <span class="kw">background-image</span>: paint<span class="fu">(</span>bubble<span class="fu">)</span><span class="op">;</span></span>
<span id="cb3-5"><a href="#cb3-5" aria-hidden="true" tabindex="-1"></a>&#125;</span></code></pre></div>
<p><code>bubble</code> 就是我们等下生成图片的 Worklet，而要生成
Worklet，仅仅只需要短短几步。</p>
<h4 id="第二步定义-worklet">第二步：定义 Worklet</h4>
<p>Worklet 需要在外部 JavaScript 文件中被保存，而 Painting Worklet
应该是一个 <code>class</code>，例如
<code>class Bubble &#123; …… &#125;</code>，然后这个 Worklet 需要使用
<code>registerPaint()</code> 函数注册。</p>
<div class="sourceCode" id="cb4"><pre class="sourceCode js"><code class="sourceCode javascript"><span id="cb4-1"><a href="#cb4-1" aria-hidden="true" tabindex="-1"></a><span class="kw">class</span> Bubble &#123;</span>
<span id="cb4-2"><a href="#cb4-2" aria-hidden="true" tabindex="-1"></a>    <span class="fu">paint</span>(context<span class="op">,</span> canvas<span class="op">,</span> properties) &#123;</span>
<span id="cb4-3"><a href="#cb4-3" aria-hidden="true" tabindex="-1"></a>        <span class="co">/* </span><span class="al">TODO</span><span class="co">: ... */</span></span>
<span id="cb4-4"><a href="#cb4-4" aria-hidden="true" tabindex="-1"></a>    &#125;</span>
<span id="cb4-5"><a href="#cb4-5" aria-hidden="true" tabindex="-1"></a>&#125;</span>
<span id="cb4-6"><a href="#cb4-6" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb4-7"><a href="#cb4-7" aria-hidden="true" tabindex="-1"></a><span class="fu">registerPaint</span>(<span class="st">'bubble'</span><span class="op">,</span> Bubble)<span class="op">;</span></span></code></pre></div>
<p><code>registerPaint()</code> 函数的第一个参数是我们向在 CSS
中使用的参考名。</p>
<p>现在就让我们来绘制背景吧！</p>
<div class="sourceCode" id="cb5"><pre class="sourceCode js"><code class="sourceCode javascript"><span id="cb5-1"><a href="#cb5-1" aria-hidden="true" tabindex="-1"></a><span class="kw">class</span> Bubble &#123;</span>
<span id="cb5-2"><a href="#cb5-2" aria-hidden="true" tabindex="-1"></a>    <span class="fu">paint</span>(context<span class="op">,</span> canvas<span class="op">,</span> properties) &#123;</span>
<span id="cb5-3"><a href="#cb5-3" aria-hidden="true" tabindex="-1"></a>        <span class="kw">const</span> circleSize <span class="op">=</span> <span class="dv">10</span><span class="op">;</span></span>
<span id="cb5-4"><a href="#cb5-4" aria-hidden="true" tabindex="-1"></a>        <span class="kw">const</span> bodyWidth <span class="op">=</span> canvas<span class="op">.</span><span class="at">width</span><span class="op">;</span></span>
<span id="cb5-5"><a href="#cb5-5" aria-hidden="true" tabindex="-1"></a>        <span class="kw">const</span> bodyHeight <span class="op">=</span> canvas<span class="op">.</span><span class="at">height</span><span class="op">;</span></span>
<span id="cb5-6"><a href="#cb5-6" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb5-7"><a href="#cb5-7" aria-hidden="true" tabindex="-1"></a>        <span class="kw">const</span> maxX <span class="op">=</span> <span class="bu">Math</span><span class="op">.</span><span class="fu">floor</span>(bodyWidth <span class="op">/</span> circleSize)<span class="op">;</span></span>
<span id="cb5-8"><a href="#cb5-8" aria-hidden="true" tabindex="-1"></a>        <span class="kw">const</span> maxY <span class="op">=</span> <span class="bu">Math</span><span class="op">.</span><span class="fu">floor</span>(bodyHeight <span class="op">/</span> circleSize)<span class="op">;</span></span>
<span id="cb5-9"><a href="#cb5-9" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb5-10"><a href="#cb5-10" aria-hidden="true" tabindex="-1"></a>        <span class="cf">for</span> (<span class="kw">let</span> y <span class="op">=</span> <span class="dv">0</span><span class="op">;</span> y <span class="op">&lt;</span> maxY<span class="op">;</span> y<span class="op">++</span>) &#123;</span>
<span id="cb5-11"><a href="#cb5-11" aria-hidden="true" tabindex="-1"></a>            <span class="cf">for</span> (<span class="kw">let</span> x <span class="op">=</span> <span class="dv">0</span><span class="op">;</span> x <span class="op">&lt;</span> maxX<span class="op">;</span> x<span class="op">++</span>) &#123;</span>
<span id="cb5-12"><a href="#cb5-12" aria-hidden="true" tabindex="-1"></a>                context<span class="op">.</span><span class="at">fillStyle</span> <span class="op">=</span> <span class="st">'#eee'</span><span class="op">;</span></span>
<span id="cb5-13"><a href="#cb5-13" aria-hidden="true" tabindex="-1"></a>                context<span class="op">.</span><span class="fu">beginPath</span>()<span class="op">;</span></span>
<span id="cb5-14"><a href="#cb5-14" aria-hidden="true" tabindex="-1"></a>                context<span class="op">.</span><span class="fu">arc</span>(x <span class="op">*</span> circleSize <span class="op">*</span> <span class="dv">2</span> <span class="op">+</span> circleSize<span class="op">,</span> y <span class="op">*</span> circleSize <span class="op">*</span> <span class="dv">2</span> <span class="op">+</span> circleSize<span class="op">,</span> circleSize<span class="op">,</span> <span class="dv">0</span><span class="op">,</span> <span class="dv">2</span> <span class="op">*</span> <span class="bu">Math</span><span class="op">.</span><span class="cn">PI</span><span class="op">,</span> <span class="kw">true</span>)<span class="op">;</span></span>
<span id="cb5-15"><a href="#cb5-15" aria-hidden="true" tabindex="-1"></a>                context<span class="op">.</span><span class="fu">closePath</span>()<span class="op">;</span></span>
<span id="cb5-16"><a href="#cb5-16" aria-hidden="true" tabindex="-1"></a>                context<span class="op">.</span><span class="fu">fill</span>()<span class="op">;</span></span>
<span id="cb5-17"><a href="#cb5-17" aria-hidden="true" tabindex="-1"></a>            &#125;</span>
<span id="cb5-18"><a href="#cb5-18" aria-hidden="true" tabindex="-1"></a>        &#125;</span>
<span id="cb5-19"><a href="#cb5-19" aria-hidden="true" tabindex="-1"></a>    &#125;</span>
<span id="cb5-20"><a href="#cb5-20" aria-hidden="true" tabindex="-1"></a>&#125;</span>
<span id="cb5-21"><a href="#cb5-21" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb5-22"><a href="#cb5-22" aria-hidden="true" tabindex="-1"></a><span class="fu">registerPaint</span>(<span class="st">'bubble'</span><span class="op">,</span> Bubble)<span class="op">;</span></span></code></pre></div>
<p>创建图像的运算是在 <code>paint()</code>
函数的内部进行的。我们将需要一些有关 Canvas
的知识来绘制上述图像。如果不熟悉，我们其实可以看一下 <a href="https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API/Tutorial">Canvas
API</a> 文档。</p>
<h4 id="第三步调用-worklet">第三步：调用 Worklet</h4>
<p>最后一步是在 HTML 文件中调用 Worklet。</p>
<div class="sourceCode" id="cb6"><pre class="sourceCode html"><code class="sourceCode html"><span id="cb6-1"><a href="#cb6-1" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb6-2"><a href="#cb6-2" aria-hidden="true" tabindex="-1"></a><span class="kw">&lt;div</span> <span class="er">class</span><span class="ot">=</span><span class="st">"bubble-background"</span><span class="kw">&gt;&lt;/div&gt;</span></span>
<span id="cb6-3"><a href="#cb6-3" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb6-4"><a href="#cb6-4" aria-hidden="true" tabindex="-1"></a><span class="kw">&lt;script&gt;</span></span>
<span id="cb6-5"><a href="#cb6-5" aria-hidden="true" tabindex="-1"></a>    <span class="bu">CSS</span><span class="op">.</span><span class="at">paintWorklet</span><span class="op">.</span><span class="fu">addModule</span>(<span class="st">'https://codepen.io/viduni94/pen/ZEpgMja.js'</span>)<span class="op">;</span></span>
<span id="cb6-6"><a href="#cb6-6" aria-hidden="true" tabindex="-1"></a><span class="kw">&lt;/script&gt;</span></span></code></pre></div>
<p>这就好啦！</p>
<p>你现在已经在三步之内用程序自动生成一张图片啦！</p>
<h2 id="生成的图片">生成的图片</h2>
<p>我们所编写的的代码的运行效果应该是这样的：</p>
<figure>
<img src="https://cdn-images-1.medium.com/max/2448/1*vvLIdPpqWdRWswddJ9CgUw.png" alt="在编辑器中查看">
<figcaption aria-hidden="true"><a href="https://codepen.io/viduni94/pen/jOMgpNX">在编辑器中查看</a></figcaption>
</figure>
<h2 id="我们还可以用-css-painting-api-干些什么呢">我们还可以用 CSS
Painting API 干些什么呢？</h2>
<p>The power of the CSS Painting API is not over yet. There are more
things you can do with it.</p>
<h4 id="我们可以创建动图">1. 我们可以创建动图</h4>
<p>例如，我们可以动态更改气泡的颜色，而 CSS
变量就是服务此目的的。为了使用 CSS
变量，浏览器应该先明白我们在使用它。我们可以使用
<code>inputProperties()</code> 函数来做到这一点。</p>
<div class="sourceCode" id="cb7"><pre class="sourceCode js"><code class="sourceCode javascript"><span id="cb7-1"><a href="#cb7-1" aria-hidden="true" tabindex="-1"></a><span class="fu">registerPaint</span>(<span class="st">'bubble'</span><span class="op">,</span> <span class="kw">class</span> &#123;</span>
<span id="cb7-2"><a href="#cb7-2" aria-hidden="true" tabindex="-1"></a>    <span class="kw">static</span> get <span class="fu">inputProperties</span>() &#123;</span>
<span id="cb7-3"><a href="#cb7-3" aria-hidden="true" tabindex="-1"></a>        <span class="cf">return</span> [<span class="st">'--bubble-size'</span><span class="op">,</span> <span class="st">'--bubble-color'</span>]<span class="op">;</span></span>
<span id="cb7-4"><a href="#cb7-4" aria-hidden="true" tabindex="-1"></a>    &#125;</span>
<span id="cb7-5"><a href="#cb7-5" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb7-6"><a href="#cb7-6" aria-hidden="true" tabindex="-1"></a>    <span class="fu">paint</span>() &#123;</span>
<span id="cb7-7"><a href="#cb7-7" aria-hidden="true" tabindex="-1"></a>        <span class="co">/* ... */</span></span>
<span id="cb7-8"><a href="#cb7-8" aria-hidden="true" tabindex="-1"></a>    &#125;</span>
<span id="cb7-9"><a href="#cb7-9" aria-hidden="true" tabindex="-1"></a>&#125;)<span class="op">;</span></span></code></pre></div>
<p>变量们可以通过第三个参数传给 <code>paint()</code> 方法</p>
<div class="sourceCode" id="cb8"><pre class="sourceCode js"><code class="sourceCode javascript"><span id="cb8-1"><a href="#cb8-1" aria-hidden="true" tabindex="-1"></a><span class="fu">paint</span>(context<span class="op">,</span> canvas<span class="op">,</span> properties)</span>
<span id="cb8-2"><a href="#cb8-2" aria-hidden="true" tabindex="-1"></a>&#123;</span>
<span id="cb8-3"><a href="#cb8-3" aria-hidden="true" tabindex="-1"></a>    <span class="kw">const</span> circleSize <span class="op">=</span> <span class="pp">parseInt</span>(properties<span class="op">.</span><span class="fu">get</span>(<span class="st">'--bubble-size'</span>)<span class="op">.</span><span class="fu">toString</span>())<span class="op">;</span></span>
<span id="cb8-4"><a href="#cb8-4" aria-hidden="true" tabindex="-1"></a>    <span class="kw">const</span> circleColor <span class="op">=</span> properties<span class="op">.</span><span class="fu">get</span>(<span class="st">'--bubble-color'</span>)<span class="op">.</span><span class="fu">toString</span>()<span class="op">;</span></span>
<span id="cb8-5"><a href="#cb8-5" aria-hidden="true" tabindex="-1"></a>    <span class="kw">const</span> bodyWidth <span class="op">=</span> canvas<span class="op">.</span><span class="at">width</span><span class="op">;</span></span>
<span id="cb8-6"><a href="#cb8-6" aria-hidden="true" tabindex="-1"></a>    <span class="kw">const</span> bodyHeight <span class="op">=</span> canvas<span class="op">.</span><span class="at">height</span><span class="op">;</span></span>
<span id="cb8-7"><a href="#cb8-7" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb8-8"><a href="#cb8-8" aria-hidden="true" tabindex="-1"></a>    <span class="kw">const</span> maxX <span class="op">=</span> <span class="bu">Math</span><span class="op">.</span><span class="fu">floor</span>(bodyWidth <span class="op">/</span> circleSize)<span class="op">;</span></span>
<span id="cb8-9"><a href="#cb8-9" aria-hidden="true" tabindex="-1"></a>    <span class="kw">const</span> maxY <span class="op">=</span> <span class="bu">Math</span><span class="op">.</span><span class="fu">floor</span>(bodyHeight <span class="op">/</span> circleSize)<span class="op">;</span></span>
<span id="cb8-10"><a href="#cb8-10" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb8-11"><a href="#cb8-11" aria-hidden="true" tabindex="-1"></a>    <span class="cf">for</span> (<span class="kw">let</span> y <span class="op">=</span> <span class="dv">0</span><span class="op">;</span> y <span class="op">&lt;</span> maxY<span class="op">;</span> y<span class="op">++</span>) &#123;</span>
<span id="cb8-12"><a href="#cb8-12" aria-hidden="true" tabindex="-1"></a>        <span class="cf">for</span> (<span class="kw">let</span> x <span class="op">=</span> <span class="dv">0</span><span class="op">;</span> x <span class="op">&lt;</span> maxX<span class="op">;</span> x<span class="op">++</span>) &#123;</span>
<span id="cb8-13"><a href="#cb8-13" aria-hidden="true" tabindex="-1"></a>            context<span class="op">.</span><span class="at">fillStyle</span> <span class="op">=</span> circleColor<span class="op">;</span></span>
<span id="cb8-14"><a href="#cb8-14" aria-hidden="true" tabindex="-1"></a>            context<span class="op">.</span><span class="fu">beginPath</span>()<span class="op">;</span></span>
<span id="cb8-15"><a href="#cb8-15" aria-hidden="true" tabindex="-1"></a>            context<span class="op">.</span><span class="fu">arc</span>(x <span class="op">*</span> circleSize <span class="op">*</span> <span class="dv">2</span> <span class="op">+</span> circleSize<span class="op">,</span> y <span class="op">*</span> circleSize <span class="op">*</span> <span class="dv">2</span> <span class="op">+</span> circleSize<span class="op">,</span> circleSize<span class="op">,</span> <span class="dv">0</span><span class="op">,</span> <span class="dv">2</span> <span class="op">*</span> <span class="bu">Math</span><span class="op">.</span><span class="cn">PI</span><span class="op">,</span> <span class="kw">true</span>)<span class="op">;</span></span>
<span id="cb8-16"><a href="#cb8-16" aria-hidden="true" tabindex="-1"></a>            context<span class="op">.</span><span class="fu">closePath</span>()<span class="op">;</span></span>
<span id="cb8-17"><a href="#cb8-17" aria-hidden="true" tabindex="-1"></a>            context<span class="op">.</span><span class="fu">fill</span>()<span class="op">;</span></span>
<span id="cb8-18"><a href="#cb8-18" aria-hidden="true" tabindex="-1"></a>        &#125;</span>
<span id="cb8-19"><a href="#cb8-19" aria-hidden="true" tabindex="-1"></a>    &#125;</span>
<span id="cb8-20"><a href="#cb8-20" aria-hidden="true" tabindex="-1"></a>&#125;</span></code></pre></div>
<h4 id="我们可以使用-math.random-在-paint-函数中生成随机的图片">2.
我们可以使用 <code>Math.random()</code> 在 <code>paint()</code>
函数中生成随机的图片</h4>
<div class="sourceCode" id="cb9"><pre class="sourceCode css"><code class="sourceCode css"><span id="cb9-1"><a href="#cb9-1" aria-hidden="true" tabindex="-1"></a>body &#123;</span>
<span id="cb9-2"><a href="#cb9-2" aria-hidden="true" tabindex="-1"></a>    <span class="kw">width</span>: <span class="dv">200</span><span class="dt">px</span><span class="op">;</span></span>
<span id="cb9-3"><a href="#cb9-3" aria-hidden="true" tabindex="-1"></a>    <span class="kw">height</span>: <span class="dv">200</span><span class="dt">px</span><span class="op">;</span></span>
<span id="cb9-4"><a href="#cb9-4" aria-hidden="true" tabindex="-1"></a>    <span class="kw">background-image</span>: paint<span class="fu">(</span>random<span class="fu">)</span><span class="op">;</span></span>
<span id="cb9-5"><a href="#cb9-5" aria-hidden="true" tabindex="-1"></a>&#125;</span></code></pre></div>
<div class="sourceCode" id="cb10"><pre class="sourceCode javascript"><code class="sourceCode javascript"><span id="cb10-1"><a href="#cb10-1" aria-hidden="true" tabindex="-1"></a><span class="kw">function</span> <span class="fu">getRandomHexColor</span>() &#123;</span>
<span id="cb10-2"><a href="#cb10-2" aria-hidden="true" tabindex="-1"></a>    <span class="cf">return</span> <span class="st">'#'</span> <span class="op">+</span> <span class="bu">Math</span><span class="op">.</span><span class="fu">floor</span>(<span class="bu">Math</span><span class="op">.</span><span class="fu">random</span>() <span class="op">*</span> <span class="dv">16777215</span>)<span class="op">.</span><span class="fu">toString</span>(<span class="dv">16</span>)</span>
<span id="cb10-3"><a href="#cb10-3" aria-hidden="true" tabindex="-1"></a>&#125;</span>
<span id="cb10-4"><a href="#cb10-4" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb10-5"><a href="#cb10-5" aria-hidden="true" tabindex="-1"></a><span class="kw">class</span> Random &#123;</span>
<span id="cb10-6"><a href="#cb10-6" aria-hidden="true" tabindex="-1"></a>    <span class="fu">paint</span>(context<span class="op">,</span> canvas) &#123;</span>
<span id="cb10-7"><a href="#cb10-7" aria-hidden="true" tabindex="-1"></a>        <span class="kw">const</span> color1 <span class="op">=</span> <span class="fu">getRandomHexColor</span>()<span class="op">;</span></span>
<span id="cb10-8"><a href="#cb10-8" aria-hidden="true" tabindex="-1"></a>        <span class="kw">const</span> color2 <span class="op">=</span> <span class="fu">getRandomHexColor</span>()<span class="op">;</span></span>
<span id="cb10-9"><a href="#cb10-9" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb10-10"><a href="#cb10-10" aria-hidden="true" tabindex="-1"></a>        <span class="kw">const</span> gradient <span class="op">=</span> context<span class="op">.</span><span class="fu">createLinearGradient</span>(<span class="dv">0</span><span class="op">,</span> <span class="dv">0</span><span class="op">,</span> canvas<span class="op">.</span><span class="at">width</span><span class="op">,</span> <span class="dv">0</span>)<span class="op">;</span></span>
<span id="cb10-11"><a href="#cb10-11" aria-hidden="true" tabindex="-1"></a>        gradient<span class="op">.</span><span class="fu">addColorStop</span>(<span class="dv">0</span><span class="op">,</span> color1)<span class="op">;</span></span>
<span id="cb10-12"><a href="#cb10-12" aria-hidden="true" tabindex="-1"></a>        gradient<span class="op">.</span><span class="fu">addColorStop</span>(<span class="dv">1</span><span class="op">,</span> color2)<span class="op">;</span></span>
<span id="cb10-13"><a href="#cb10-13" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb10-14"><a href="#cb10-14" aria-hidden="true" tabindex="-1"></a>        context<span class="op">.</span><span class="at">fillStyle</span> <span class="op">=</span> gradient<span class="op">;</span></span>
<span id="cb10-15"><a href="#cb10-15" aria-hidden="true" tabindex="-1"></a>        context<span class="op">.</span><span class="fu">fillRect</span>(<span class="dv">0</span><span class="op">,</span> <span class="dv">0</span><span class="op">,</span> canvas<span class="op">.</span><span class="at">width</span><span class="op">,</span> canvas<span class="op">.</span><span class="at">height</span>)<span class="op">;</span></span>
<span id="cb10-16"><a href="#cb10-16" aria-hidden="true" tabindex="-1"></a>    &#125;</span>
<span id="cb10-17"><a href="#cb10-17" aria-hidden="true" tabindex="-1"></a>&#125;</span>
<span id="cb10-18"><a href="#cb10-18" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb10-19"><a href="#cb10-19" aria-hidden="true" tabindex="-1"></a><span class="fu">registerPaint</span>(<span class="st">'random'</span><span class="op">,</span> Random)<span class="op">;</span></span></code></pre></div>
<p>如果你在如何做到这些上存在疑惑，请在评论区中提出你的问题。</p>
<p>这个真是太棒啦！</p>
<p>但是，好事总有糟糕的一面，这个 API
现在仅仅只被部分浏览器所有限制的支持。</p>
<h2 id="浏览器支持">浏览器支持</h2>
<figure>
<img src="https://github.com/PassionPenguin/picgo-database/blob/main/programmatically-generate-images-with-css-painting-api-caniuse.com_css-paint-api.png?raw=true" alt="数据源：Can I Use">
<figcaption aria-hidden="true">数据源：<a href="https://caniuse.com/css-paint-api">Can I Use</a></figcaption>
</figure>
<p>包括 Firefox 在内的大多数浏览器都不支持 CSS Painting
API。到目前为止，只有基于 Chromium
的浏览器完全支持此功能，真希望不久的将来浏览器支持会有所改善。</p>
<h2 id="摘要">摘要</h2>
<p>CSS Painting API
对于减少网络请求的响应时间非常有用，因为图片是程序化生成而非获取网络数据得到的。</p>
<p>最重要的是，我认为主要的好处如下。</p>
<ul>
<li>能够创建完全可定制的图像，而不是静态图像。</li>
<li>它创建与分辨率无关的图像（让我们的站点上不再有质量差的图像）。</li>
</ul>
<p>需要注意的重要一点是，我们可以使用 <code>polyfill</code>
等库作为解决方案来支持尚未实现 CSS Painting API 的 Firefox
等浏览器。</p>
<hr>
<p>如果你对本文有任何疑问或想法，请在评论区告诉我们！感谢你的阅读！</p>]]></content>
      <categories>
        <category>Computer Science</category>
        <category>Frontend</category>
        <category>Styling</category>
      </categories>
      <tags>
        <tag>Computer Science</tag>
        <tag>JavaScript</tag>
        <tag>UI</tag>
        <tag>Frontend</tag>
        <tag>CSS</tag>
      </tags>
  </entry>
  <entry>
    <title>恭喜 Safari 荣获「第二个 Internet Explorer」的美誉</title>
    <url>/2021/02/15/computer%20science/frontend/safari-has-become-the-second-internet-explorer/</url>
    <content><![CDATA[<blockquote>
<ul>
<li>原文地址：<a href="https://medium.com/javascript-in-plain-english/safari-has-become-the-second-internet-explorer-e2c2dd114837">Safari
Has Become The Second Internet Explorer</a></li>
<li>原文作者：<a href="https://medium.com/@golosay">Golosay
Volodymyr</a></li>
<li>译者：<a href="https://github.com/PassionPenguin">霜羽
Hoarfroster</a></li>
<li>校对者：<a href="https://github.com/lsvih">lsvih</a></li>
</ul>
</blockquote>
<figure>
<img src="https://cdn-images-1.medium.com/max/2300/1*obluMaNgoWxwefRpP__Elg.png" alt="Safari 有时候看起来长得跟 IE 没啥不一样的">
<figcaption aria-hidden="true">Safari 有时候看起来长得跟 IE
没啥不一样的</figcaption>
</figure>
<p>如果你去问问一个程序员他对听到 IE
这个词的感受，一般来说，绝对是这样的 —— OMG
痛苦的要死！我当然也不是例外！我作为一名 Web
开发者已经有了十多年，在这段时间里面，开发过不少必须要兼容 IE
的项目。我清晰地认识到，某些奇葩浏览器不支持别的浏览器支持的常见功能这个问题，是如何令我们这群本已秃头的程序员们更加头秃沮丧的。或者说，有的时候，这种坑货浏览器甚至还会错误地将部分元素渲染在错误的地方！更糟糕的是，你可能有些时候还得去调试某些意料之外的错误的行为。</p>
<p>幸（讽）运（刺）的是，我在日常生活中使用着一台 M1 芯片的新款 MacBook
Pro。我超级喜欢使用 Apple
所开发的软件，因为它们总是快速、节能、美观的。Safari 就是 Apple
所提供的软件的其中之一。我好想再爱一遍 Safari
啊，可惜我越多地与它共事，就越多地回想起
IE。因此，点明这些关切到我们每个人切身头发安全的问题是非常之重要的。而对于其中一些问题，我将会为大家提供防脱发治疗手段。</p>
<h2 id="pwa-支持">PWA 支持</h2>
<p>Safari 对 PWA 的支持？更确切地说应该是缺乏支持！Apple
是现当时最离谱的拒绝 PWA 的厂商之一。你知道什么是 PWA 吗？PWA
是一类可以在浏览器中打开它，并在本地安装的网络应用。它看起来和从应用商店中安装的普通应用一样，并且具有离线启动的功能。从理论上讲，你可以立即在你的浏览器上尝试一下（例如在
iPhone 上安装 PWA 应用程序），但是好心的 Apple
会用如下的借口劝退你：</p>
<ul>
<li>你不能存储超过 50 MB 的数据</li>
<li>不支持蓝牙</li>
<li>不支持原生的分享框</li>
<li>没有后台同步或是 Web 推送通知</li>
<li>没有 Web App 横幅提醒用户安装应用</li>
<li>不支持自定义启动画面</li>
</ul>
<p>这些限制使 PWA 这项技术毫无用处。比起技术，Apple
可能更希望控制市场，让用户仅可以通过 App Store
安装所谓真正的应用程序。</p>
<p>在 Mac 上的 Safari 中，你根本无法用它。</p>
<h2 id="web-推送通知">Web 推送通知</h2>
<p>这个话题虽说位列 PWA 的限制列表中，但也值得单独一提。</p>
<p>在 Mac 上，某些应用程序的 Web
版本无法发送推送通知，导致不能提供全部功能。</p>
<figure>
<img src="https://github.com/PassionPenguin/picgo-database/blob/main/safari-has-become-the-second-internet-explorer-developer.mozilla.org_en-US_docs_Web_API_Push_API.png?raw=true" alt="推送通知浏览器支持表格">
<figcaption aria-hidden="true">推送通知浏览器支持表格</figcaption>
</figure>
<p>Messenger 应用们就是最好的例子。如今，Telegram 或 Facebook Messenger
只能在网站打开时通过变更标题和播放声音来通知用户有关新消息的信息。如果用户静音了，并将浏览器最小化了，显然就会错过新的消息。</p>
<p>此限制的唯一好处是，新闻站点没有烦人的通知告示希望你去订阅它们的提醒
—— 这可真棒，但丝毫不等同于我们不需要通知功能！</p>
<h2 id="滑动表现">滑动表现</h2>
<p>Apple 为 Safari 的性能和能效感到骄傲（这点的确如此）！</p>
<p>为了获得如此好的性能，他们实施了许多优化，其中之一是在用户进行动态滚动操作时阻止
DOM
更新。但是优化之后，用户们开始发现浏览器出现了一些滚动的滞后。最著名的问题
—— 在 YouTube 视频页面上滚动评论。大量的用户在<a href="https://discussions.apple.com/thread/250853003">官方支持论坛</a>和
MacRumors 上对有关问题进行了讨论。</p>
<p>要解决此问题，你必须安装 UserScripts 扩展并添加一些 CSS 样式：</p>
<pre class="scss"><code>// ==UserScript==
// @name        FixYouTubeScrolling
// @description Stop improper styling, Google
// @match       *://*youtube.*
// ==/UserScript==

ytd-page-manager &#123;
    overflow-y: unset !important;
&#125;

#page-manager.ytd-app &#123;
    overflow-x: unset !important;
&#125;</code></pre>
<p>但这不是存在此问题的唯一地方。我在许多不同的在滚动事件上附加了很多功能的网站（例如
Youtube 音乐、Facebook、Reddit 等）上都发现了类似的滚动上的问题。</p>
<p>这就实现快速滚动的代价，所以我希望 Apple
能够在性能和表现上找到一个更好的平衡点。</p>
<h2 id="youtube">YouTube</h2>
<p>让我们讨论讨论
YouTube！你大概率遇到过缩略图或头像无法加载的问题，可以在 Apple
论坛中找到有关此问题的许多帖子（例如<a href="https://discussions.apple.com/thread/252092264">这个</a>和<a href="https://forums.macrumors.com/threads/youtube-website-scrolling-issue.2272026/">这个</a>）。</p>
<p>我不知道问题的根源，但已经明确了是缓存中的错误。虽说清除缓存可以解决此问题。但是它有时仍然会复现。</p>
<p>有两种清除 Safari 中缓存的方法：</p>
<ol type="1">
<li>在 Safari 中单击”刷新”按钮的同时，按键盘上的 <code>Shift</code>
键。</li>
<li>按键盘上的 <strong><code>Command（⌘）</code></strong> +
<strong><code>Option（⌥, alt）</code></strong> +
<strong><code>R</code></strong>。</li>
</ol>
<p>随你选择～</p>
<h2 id="图标">图标</h2>
<p>你是否能在 Mac 的 Safari 中看到 Instagram
网页的图标？出于某种原因，它是黑白的。</p>
<figure>
<img src="https://cdn-images-1.medium.com/max/5744/1*GgbMRIpIX_cuz6eCaLSoXA.png" alt="左上角的黑白图标">
<figcaption aria-hidden="true">左上角的黑白图标</figcaption>
</figure>
<p>这是个次要的但也是个非常奇怪的问题。你可以自己尝试访问一下，会发现真正的图标应该是有颜色的。这个问题也出现在了我的
<a href="https://methodist.io">methodist.io</a>
网页上。我在许多站点上都发现了此问题，而如果你知道此问题的发生原因以及解决方法，麻烦在评论中分享～</p>
<h2 id="拓展">拓展</h2>
<p>在 2018 年之前，Safari 并没有用于构建浏览器扩展的框架。因此，App
Store 中针对 Safari 的扩展程序真的很少。仅在 2018 年之后，他们才开始像
Chrome 一样使用 WebExtensions
Api。对于扩展程序开发人员而言，这是一个巨大的进步，因为主要浏览器的核心
API 已经相同了。虽说已经过了很长一段时间了，但如今，Safari
与其他浏览器相比，扩展的数量依旧存在着巨大的差异。</p>
<h2 id="媒体格式标准化">媒体格式标准化</h2>
<p>你们可能都知道 JPEG 和 PNG 图像格式。它们年代久远（诞生于 1992
年），文件又大。因此，在 2017
年，科技巨头们都决定设计更高效的媒体格式。苹果发布了
HEIC（High-Efficiency Image Coding 高效图片编码），谷歌推广了
WebP。但是由于某些原因，他们都彼此不认可对方。Chrome 仅支持 WebP，而
Safari 又仅支持 HEIC。直到 2020 年年中，Apple 才在 Safari 中添加了对
WebP 的支持。</p>
<p>这个问题是关于图像的，但同样也适用于视频。Google 为视频设计了
<strong>WebM</strong> 格式，但即使现在（2021 年 1 月），<strong>Safari
也不支持这个格式</strong>。</p>
<p>在 2019 年，IT 巨头开始合作，开发先进、免费的视频编解码器
<strong>AV1</strong>。苹果、谷歌、Netflix
等公司（这个名单令人印象深刻）成立了一家”开放媒体联盟“公司，这些企业共享了他们的技术和专利，以创建跨时代的解编码器。目前，解编码器已开发完了，Netflix
也业已在其应用中使用了它，但是 Safari 还是不支持它。</p>
<figure>
<img src="https://cdn-images-1.medium.com/max/2000/1*4Hu_Vd2eexqGCyRn16_AZg.jpeg" alt="开放媒体联盟">
<figcaption aria-hidden="true">开放媒体联盟</figcaption>
</figure>
<p>如你所见，Safari 是一款非常保守的浏览器，而 Apple
总是不愿意与用户的意愿保持一致。</p>
<h2 id="小结">小结</h2>
<p>Safari 是快速的、节能的一款（甚至是）安全的浏览器。但是 Apple
它呢有它自己的想法。当然，Apple 还是喜欢赚钱，而让用户能够避开 App Store
安装应用程序可不是什么有利可图的想法。类似的辩解口径对于自己不兼容某些主流的媒体格式都是通用的，但是这些问题可真真实实地阻碍了技术的发展，给我们这群头秃的开发人员平添了更多的麻烦。</p>
<p><strong>感谢你的阅读！</strong></p>]]></content>
      <categories>
        <category>Computer Science</category>
        <category>Frontend</category>
        <category>Browser</category>
      </categories>
      <tags>
        <tag>Computer Science</tag>
        <tag>Frontend</tag>
        <tag>Browser</tag>
      </tags>
  </entry>
  <entry>
    <title>你应该编译你的 JavaScript 代码吗？</title>
    <url>/2021/02/09/computer%20science/frontend/should-you-compile-your-javascript-code/</url>
    <content><![CDATA[<blockquote>
<ul>
<li>原文地址：<a href="https://blog.bitsrc.io/should-you-compile-your-javascript-code-a857ad2e3032">Should
You Compile Your JavaScript Code?</a></li>
<li>原文作者：<a href="https://medium.com/@deleteman123">Fernando
Doglio</a></li>
<li>译者：<a href="https://github.com/PassionPenguin">霜羽
Hoarfroster</a></li>
<li>校对者：<a href="https://github.com/zenblo">zenblo</a>、<a href="https://github.com/Ashira97">Ashira97</a></li>
</ul>
</blockquote>
<figure>
<img src="https://cdn-images-1.medium.com/max/3840/1*_7N-LnDFVgKcgEgzczZVmg.jpeg" alt="Image by seznandy from Pixabay">
<figcaption aria-hidden="true">Image by <a href="https://pixabay.com/users/seznandy-15803435/?utm_source=link-attribution&amp;utm_medium=referral&amp;utm_campaign=image&amp;utm_content=5093898">seznandy</a>
from <a href="https://pixabay.com/?utm_source=link-attribution&amp;utm_medium=referral&amp;utm_campaign=image&amp;utm_content=5093898">Pixabay</a></figcaption>
</figure>
<p>我们都会也都喜爱
JavaScript，并且我们都通过编写代码和在我们最爱的运行环境（通常是浏览器，Node.js
和 Deno）中来执行 JavaScript 代码。但你是否曾经尝试过去编译你的
JavaScript 代码呢？</p>
<p>不对，等一下，我们都知道 JavaScript
是一门动态语言啊！其实它同样也会被解析，但是与常见的运行时大不相同，它是会在运行时被一个
<a href="https://blog.bitsrc.io/the-jit-in-javascript-just-in-time-compiler-798b66e44143">JIT
编译器</a>优化的。</p>
<p>这可是事实！</p>
<p>但它能够被编译吗？这两个问题可不搭边呢！在运行之前编译一款动态语言（或称为
AOT，运行前编译）是可能的，这是当然的。但我们真的值得去这样做吗？</p>
<h2 id="aot-vs-jit">AOT vs JIT</h2>
<p><strong>首先让我们再走进 AOT 和
JIT（要不然这文章也太短太水了。当然其实还有别的相关的能够帮助你的内容可能会被你所找到）</strong></p>
<p>AOT 和 JIT 最主要的区别是它们所作用的时间。AOT
是在你的代码的执行之前运行的，而 JIT
是与你的代码的执行同时进行的。还有什么不同吗？</p>
<p>几乎全都不同啊！</p>
<p>AOT
通常是为那些静态语言所使用的，因为对于他们而言，没有什么需要在运行时判断和决定的动态行为。所有的规则都已经摆在代码中了，编译器可以很简单地阅读这些内容，明白其中的数据流并且有针对性的对其进行优化，并同时将这些代码转译为原生的解析语言（也叫做机器指令）.</p>
<p>JIT
呢，则是与之相对，一般用于动态语言，因为它会侦测代码的执行并且基于它所控制的数据的类型，会对其优化并创造一个更好的机器指令。</p>
<p>如果让我们来就这些实时优化来考虑编译代码的进行优化的时间吧，AOT
会在一开始就为你提供一份最优化的代码，而你会直接执行这一份最优化的代码。但对于
JIT
而言，他会在代码运行过程中先耗费一段时间去计算分析这段代码，但会在潜在地在代码的后续执行中能够因为<a href="https://blog.bitsrc.io/the-jit-in-javascript-just-in-time-compiler-798b66e44143">这个原因</a>更多地节省和优化。它有更多去优化的角度，而不仅仅只是针对于类型定义上（例如函数的调用就只能在运行时优化）。</p>
<p>对于每一种方案当然都有它们的优劣，但如果你想要概述并决定其中之一，我大概会说：</p>
<ul>
<li>如果你的代码只需要运行短时间，那就用 AOT 吧。</li>
<li>如果你的代码会运行地比较长时间，那么就用 JIT
吧，这样可以让你的代码在一些运行时分析后获得更好的优化。</li>
</ul>
<h2 id="那么对于编译你的-javascript">那么对于编译你的 JavaScript ？</h2>
<p>同样的，为什么 JavaScript 是被解析并且 JIT 并不能直接去编译
JavaScript 为机器代码的原因：JavaScript
的动态功能让它在实时编译中更占优势。</p>
<p>但需要注意的是，我并没有提及 <a href="https://blog.bitsrc.io/whats-wrong-with-web-assembly-3b9abb671ec2">WebAssembly</a>
。事实上在哪些情况下，WASM 将所有代码（C、C++
或别的什么语言的代码）编译为一个 JavaScript
运行时兼容的原生代码。这与编译 JavaScript 可不是一个东西。</p>
<p>事实上，并没有那么多项目正在尝试去编译 JavaScript
代码为机器指令，因为我可以确定这是个很大的挑战 ——
我指的是，例如让我们编译下面的代码：</p>
<div class="sourceCode" id="cb1"><pre class="sourceCode js"><code class="sourceCode javascript"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a><span class="kw">let</span> result <span class="op">=</span> <span class="kw">null</span><span class="op">;</span></span>
<span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a><span class="cf">if</span> (<span class="fu">my_complex_function</span>()) &#123;</span>
<span id="cb1-3"><a href="#cb1-3" aria-hidden="true" tabindex="-1"></a>    result <span class="op">=</span> <span class="dv">10</span><span class="op">;</span></span>
<span id="cb1-4"><a href="#cb1-4" aria-hidden="true" tabindex="-1"></a>&#125; <span class="cf">else</span> &#123;</span>
<span id="cb1-5"><a href="#cb1-5" aria-hidden="true" tabindex="-1"></a>    result <span class="op">=</span> <span class="st">"something else"</span><span class="op">;</span></span>
<span id="cb1-6"><a href="#cb1-6" aria-hidden="true" tabindex="-1"></a>&#125;</span>
<span id="cb1-7"><a href="#cb1-7" aria-hidden="true" tabindex="-1"></a><span class="bu">console</span><span class="op">.</span><span class="fu">log</span>(<span class="st">"The result is "</span> <span class="op">+</span> result)<span class="op">;</span></span></code></pre></div>
<p>你真的在运行之前能够判定 <code>result</code>
变量的类型吗？你可能需要先在心中思考一下所有可能的类型，并且同时将不同的情况判断一遍。即便你解决了这个问题，你依旧添加了不少的逻辑到你的思考与判断之中。这听起来可并不那么好啊！</p>
<p>事实上，有一个专门解决这个问题的项目，尽管不一定是最佳的（至少在纸面上）：<a href="https://github.com/NectarJS/nectarjs">NectarJS</a></p>
<h2 id="通过使用-nectarjs-进行编译">通过使用 NectarJS 进行编译</h2>
<p>该项目旨在将 JavaScript
代码编译为机器指令，以便让我们可以在任何兼容的平台上运行它。现在，兼容的名单包括了
Windows、Linux、Arduino、<a href="https://www.st.comenevaluation-toolsstm32-nucleo-boards.html">STM32
Nucleo</a>、Android、Web（<a href="https://www.st.com/en/evaluation-tools/stm32-nucleo-boards.html">WASM</a>,
Android, Web (<a href="https://blog.bitsrc.io/whats-wrong-with-web-assembly-3b9abb671ec2">WASM</a>）、macOS
和 SunOS。</p>
<p>虽说实际上上述所有的平台基本上都有对应的，用于运行你的 JavaScript
代码的解析器，这个项目能够让最终的编译输出一个比当前可用编译器输出的更优化的一个输出。</p>
<p>针对它们输出的结果而言，它们早已对 Windows 上 Node.js 的 v12
有了一些优化。在某些情况下并不是提升速度，而是内存的使用甚至是输出文件的大小。</p>
<figure>
<img src="https://cdn-images-1.medium.com/max/3036/1*HyX7ShDvXey6u9mo9_3ezg.png" alt="NectarJS’ 网站上的一份表格">
<figcaption aria-hidden="true">NectarJS’ 网站上的一份表格</figcaption>
</figure>
<p>当然，该项目仍然有其局限性，特别是到目前为止，该项目仅支持大约 80％
的 ES3 标准，这意味着您可以编写的 JavaScript
代码是非常有限且不符合当今的标准的。</p>
<p>但是，对于你的某些项目而言你并不一定要编写兼容 ES6
的代码。而且能够去编译这些代码，并原生地在你的 Arduino
开发板上面运行这些代码，可能真的会是非常好用的</p>
<p>但是话又说回来，对于特定项目而言，你可能并不需要在其中编写兼容 ES6
的代码，并且在对其进行编译并在 Arduino
板上本地运行这段代码的情况下它可能会派上用场。</p>
<h4 id="安装并测试-nectarjs">安装并测试 NectarJS</h4>
<p>这个项目可以直接以一个 NPM
模块的形式被安装到你的计算机，所以你所需要做的仅仅是运行下面这行代码（这里默认了你已经安装了
Node 环境）：</p>
<pre><code>
$ npm install nectarjs -g
</code></pre>
<p>在安装并同时设置或导入了<a href="https://github.com/NectarJS/nectarjs/blob/master/docs/ADVANCED_USAGE.md#requirements-and-compilation">必要的依赖</a>以后，你就可以简单的编写一段
HelloWorld 代码并编译这段代码：</p>
<div class="sourceCode" id="cb3"><pre class="sourceCode javascript"><code class="sourceCode javascript"><span id="cb3-1"><a href="#cb3-1" aria-hidden="true" tabindex="-1"></a><span class="bu">console</span><span class="op">.</span><span class="fu">log</span>(<span class="st">"Hello 编译过的 world！"</span>)</span></code></pre></div>
<p>要去编译这段代码，简简单单的使用这段指令即可：</p>
<pre><code>$ nectar your-file.js</code></pre>
<p>这就是我在我的 macOS 系统上能够获得的输出：</p>
<p><img src="https://cdn-images-1.medium.com/max/2028/1*7i_ihlwJ8Kx49n7v3wrePw.png"></p>
<p>需要注意的是，被创建的文件并没有一个拓展名 ——
它是一个二进制文件。如果你给予它执行的权限，你就能够执行这段代码。这很简单，并且它能够正常工作。</p>
<hr>
<h2 id="这就是-javascript-的未来吗">这就是 JavaScript 的未来吗？</h2>
<p>就我个人而言我不会为之打赌。这个项目本身也还在初期，拥有着不完善的文档，并且只有对旧语言的部分支持。但是，它目前正处于活跃的开发状态并且这些可以在快速地变化。</p>
<p>对于编译 JavaScript
做法的推广，我并不认为会是一个很大的趋势，毕竟事实证明了，现有的运行时已经足以满足最常见的使用情况。对于希望拥有原生性能并且不愿意切换到其他技术的朋友来说，编译
JavaScript 真的有用吗？这当然有用，但这只是 JavaScript
广泛用途的其中一种情况。</p>
<p>你会考虑编译你的 JavaScript 代码吗？发表一下你的看法吧！</p>]]></content>
      <categories>
        <category>Computer Science</category>
        <category>Frontend</category>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>Computer Science</tag>
        <tag>Backend</tag>
        <tag>JavaScript</tag>
        <tag>Frontend</tag>
      </tags>
  </entry>
  <entry>
    <title>Android 中意料之外的应用崩溃以及它们的解决方案</title>
    <url>/2021/02/04/computer%20science/android/unexpected-app-crashes-on-android-and-how-to-deal-with-them/</url>
    <content><![CDATA[<blockquote>
<ul>
<li>原文地址：<a href="https://levelup.gitconnected.com/unexpected-app-crashes-on-android-and-how-to-deal-with-them-c5d07512d99f">Unexpected
App Crashes on Android and How to Deal with Them</a></li>
<li>原文作者：<a href="https://medium.com/@kunalchaubal">Kunal
Chaubal</a></li>
<li>译者：<a href="https://github.com/PassionPenguin">霜羽
Hoarfroster</a></li>
<li>校对者：<a href="https://github.com/zenblo">zenblo</a>、<a href="https://github.com/HumanBeingXenon">HumanBeing</a></li>
</ul>
</blockquote>
<figure>
<img src="https://cdn-images-1.medium.com/max/2560/1*4WT3_B3SVKgvexQOTE_ZqQ.jpeg" alt="图自 testbytes 源于 Pixabay">
<figcaption aria-hidden="true">图自 <a href="https://pixabay.com/users/testbytes-1013799/?utm_source=link-attribution&amp;utm_medium=referral&amp;utm_campaign=image&amp;utm_content=762486">testbytes</a>
源于 <a href="https://pixabay.com/?utm_source=link-attribution&amp;utm_medium=referral&amp;utm_campaign=image&amp;utm_content=762486">Pixabay</a></figcaption>
</figure>
<p>如果问前端、后端甚至游戏开发人员之间存在什么共同点，那就是我们都讨厌应用产品出现
Bug，尤其是当这些错误导致应用崩溃时。而在应用发布后，监视应用程序中这些不断增加的崩溃是一种极其不愉快的体验。</p>
<p>不管应用程序的业务逻辑如何，都可能会因为运行的系统或平台问题而导致出现某些奇怪的崩溃现象。在
Android 中，从后台状态恢复应用程序时可能会产生崩溃 ——
此类崩溃是意外发生的，而且仅通过查看崩溃日志，我们很难理解崩溃的具体原因以及解决问题，而本文讨论了此类问题及其解决方法。</p>
<h2 id="问题">问题</h2>
<p>在监视产品的崩溃日志时，我注意到一些问题与日俱增。该应用在正常测试条件下似乎运行良好，并且崩溃不可复现，直到应用程序从后台任务中进入前台。</p>
<p>每个 Android
应用程序都在其自己的进程中运行，并且操作系统已为该进程分配了一些内存。当用户与其他应用程序交互时将应用程序置于后台时，如果应用程序没有足够的可用内存，则操作系统会终止你的应用程序进程。而这一情况通常发生在前台运行另一个需要更大手机内存
(RAM) 的应用程序时。</p>
<p>当应用程序进程被终止的时候，所有的单例对象和临时数据都同时丢失了，而现在如果你返回你的应用程序，系统会创建一个新的进程，而你的应用程序会从你退出时候的
Activity 栈顶执行 Resume 函数恢复该 Activity。</p>
<p>由于此时你的所有的单例对象都丢失了，因此当这个 Activity
尝试访问相同的对象时，就会遇到空指针异常而崩溃退出。</p>
<p>这是个问题。在我们继续讨论解决方案之前，让我们复现一下这种情况。</p>
<h2 id="复现崩溃">复现崩溃</h2>
<ol type="1">
<li>在模拟器或通过 USB 电缆（译者注：Android 11 也可使用 Wi-Fi
连接设备调试）连接的实际设备上使用 ADB 运行指令（如 Android
Studio）运行的任何应用程序。</li>
<li>导航到任意一个页面，然后按下“主页”按钮。</li>
<li>打开终端，键入以下命令，我们就可以获取应用程序的进程
ID（PID）。</li>
</ol>
<div class="sourceCode" id="cb1"><pre class="sourceCode bash"><code class="sourceCode bash"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a><span class="ex">adb</span> shell pidof com.darktheme.example</span></code></pre></div>
<p>该命令的语法为 <code>adb shell pidof APP_BUNDLE_ID</code></p>
<p>请记下你在终端窗口上看到的
PID（这可用于验证现有的应用程序进程是否已被终止，并在我们恢复应用程序时启动了新的进程）。</p>
<ol start="4" type="1">
<li>键入以下终端命令以终止你的应用程序进程</li>
</ol>
<div class="sourceCode" id="cb2"><pre class="sourceCode bash"><code class="sourceCode bash"><span id="cb2-1"><a href="#cb2-1" aria-hidden="true" tabindex="-1"></a><span class="ex">adb</span> shell am kill com.darktheme.example</span></code></pre></div>
<p>此时，你的终端窗口应如下所示：</p>
<figure>
<img src="https://cdn-images-1.medium.com/max/2276/1*pYpZN8FbnrYeo_6QPGqc0g.png" alt="执行 kill 命令后的命令行窗口">
<figcaption aria-hidden="true">执行 kill 命令后的命令行窗口</figcaption>
</figure>
<p>现在，从后台任务中打开你的应用程序，并检查该应用程序是否崩溃。如果是，请不要担心，我们将在下一部分中讨论如何处理此问题。如果没有，你可以松一口气了，因为这是你应得的。</p>
<p>需要注意的是，从后台打开应用后，请重新获取应用所属进程的
PID。如果你在第 3 步中记下的 PID 与新的 PID
相等，则该过程并没有被终止。</p>
<h2 id="建议的解决方案">建议的解决方案</h2>
<p>有两种方法可以解决此问题。根据你所处的情况，你可以决定用哪一个方法来推进问题的解决：</p>
<h4 id="解决方案-1">解决方案 1：</h4>
<p>一种简便的解决方案是，当用户从后台恢复应用程序时，让应用程序检查我们现有的应用程序进程是否被结束并重新创建。如果是，则可以导航回启动界面，使其看起来像是一个应用程序的初始化界面。</p>
<p>你可以将以下代码放在 BaseActivity 中：</p>
<div class="sourceCode" id="cb3"><pre class="sourceCode kotlin"><code class="sourceCode kotlin"><span id="cb3-1"><a href="#cb3-1" aria-hidden="true" tabindex="-1"></a>    <span class="kw">override</span> <span class="kw">fun</span> <span class="fu">onCreate</span><span class="op">(</span><span class="va">savedInstanceState</span><span class="op">:</span> <span class="dt">Bundle</span><span class="op">?)</span> <span class="op">&#123;</span></span>
<span id="cb3-2"><a href="#cb3-2" aria-hidden="true" tabindex="-1"></a>        <span class="kw">super</span><span class="op">.</span>onCreate<span class="op">(</span>savedInstanceState<span class="op">)</span></span>
<span id="cb3-3"><a href="#cb3-3" aria-hidden="true" tabindex="-1"></a>        <span class="cf">if</span> <span class="op">(</span>savedInstanceState <span class="op">!=</span> <span class="kw">null</span><span class="op">)</span> <span class="op">&#123;</span></span>
<span id="cb3-4"><a href="#cb3-4" aria-hidden="true" tabindex="-1"></a>            <span class="co">// 获取当前 PID</span></span>
<span id="cb3-5"><a href="#cb3-5" aria-hidden="true" tabindex="-1"></a>            <span class="kw">val</span> <span class="va">currentPID</span> <span class="op">=</span> android<span class="op">.</span>os<span class="op">.</span>Process<span class="op">.</span>myPid<span class="op">().</span>toString<span class="op">()</span></span>
<span id="cb3-6"><a href="#cb3-6" aria-hidden="true" tabindex="-1"></a>            </span>
<span id="cb3-7"><a href="#cb3-7" aria-hidden="true" tabindex="-1"></a>            <span class="co">// 比较当前 PID 与 保存的 PID 是否一致</span></span>
<span id="cb3-8"><a href="#cb3-8" aria-hidden="true" tabindex="-1"></a>            <span class="cf">if</span> <span class="op">(</span>currentPID <span class="op">!=</span> savedInstanceState<span class="op">.</span>getString<span class="op">(</span>PID<span class="op">))</span> <span class="op">&#123;</span></span>
<span id="cb3-9"><a href="#cb3-9" aria-hidden="true" tabindex="-1"></a>                <span class="co">// 如果当前 PID 与 保存的 PID 不相同，意味着新的进程被创建，从 SplashActivity 重启应用</span></span>
<span id="cb3-10"><a href="#cb3-10" aria-hidden="true" tabindex="-1"></a>                <span class="kw">val</span> <span class="va">intent</span> <span class="op">=</span> Intent<span class="op">(</span>applicationContext<span class="op">,</span> SplashActivity<span class="op">::</span><span class="kw">class</span>.java)</span>
<span id="cb3-11"><a href="#cb3-11" aria-hidden="true" tabindex="-1"></a>                intent.flags = Intent.FLAG_ACTIVITY_NEW_TASK or Intent.FLAG_ACTIVITY_CLEAR_TASK</span>
<span id="cb3-12"><a href="#cb3-12" aria-hidden="true" tabindex="-1"></a>                startActivity<span class="op">(</span><span class="va">intent</span><span class="op">)</span></span>
<span id="cb3-13"><a href="#cb3-13" aria-hidden="true" tabindex="-1"></a>                finish<span class="op">()</span></span>
<span id="cb3-14"><a href="#cb3-14" aria-hidden="true" tabindex="-1"></a>            &#125;</span>
<span id="cb3-15"><a href="#cb3-15" aria-hidden="true" tabindex="-1"></a>        &#125;</span>
<span id="cb3-16"><a href="#cb3-16" aria-hidden="true" tabindex="-1"></a>    &#125;</span>
<span id="cb3-17"><a href="#cb3-17" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb3-18"><a href="#cb3-18" aria-hidden="true" tabindex="-1"></a>    <span class="kw">override</span> <span class="kw">fun</span> onSaveInstanceState<span class="op">(</span><span class="va">bundle</span><span class="op">:</span> <span class="dt">Bundle</span><span class="op">)</span> <span class="op">&#123;</span></span>
<span id="cb3-19"><a href="#cb3-19" aria-hidden="true" tabindex="-1"></a>        <span class="kw">super</span><span class="op">.</span>onSaveInstanceState<span class="op">(</span>bundle<span class="op">)</span></span>
<span id="cb3-20"><a href="#cb3-20" aria-hidden="true" tabindex="-1"></a>        bundle<span class="op">.</span>putString<span class="op">(</span>PID<span class="op">,</span> android<span class="op">.</span>os<span class="op">.</span>Process<span class="op">.</span>myPid<span class="op">().</span>toString<span class="op">())</span></span>
<span id="cb3-21"><a href="#cb3-21" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#125;</span></span></code></pre></div>
<ul>
<li>通过覆写 <code>onSaveInstanceState()</code> 功能，你可以将你的 PID
打包保存下来。</li>
<li>在 <code>onCreate()</code> 方法中，你需要比较当前 PID 和打包保存的
PID。</li>
<li>如果当前进程是是重新创建的流程，则重定向导航到 Splash
Activity。</li>
</ul>
<p>当用户从后台导航回被结束了的应用程序时候，该应用程序将从
SplashActivity 重新启动，就像是一次新的启动。</p>
<p>这将防止应用程序访问在进程重建过程中可能已丢失的数据，从而防止应用程序崩溃。</p>
<p>虽然此解决方案可以防止崩溃，但是这种方法其实就是重新启动应用程序，而不是从中断的位置恢复应用程序。如果你在发布应用后遇到此问题，并且急切地希望快速解决这个问题，则此解决方案应该能帮你大忙。</p>
<p>但是，如果你刚从头开始开发，则解决方案 2
将是你的理想选择，因为它可以做到从中断的位置恢复应用程序。</p>
<h4 id="解决方案-2">解决方案 2：</h4>
<p>现在，你肯定已经注意到可以利用“包”对象保存和访问数据。与前面的示例中的操作类似，将每个
Activity / Fragment 中所有必要的信息保存下来。</p>
<p>由于我们访问是被保存在“包”中的数据，这会避免应用程序崩溃，并且应用程序能从中断处恢复。所有其他
Activity / Fragment 也会被重新创建。</p>
<p>对于 Fragment 中的 RecyclerView，做法应该是：</p>
<div class="sourceCode" id="cb4"><pre class="sourceCode kotlin"><code class="sourceCode kotlin"><span id="cb4-1"><a href="#cb4-1" aria-hidden="true" tabindex="-1"></a>    <span class="kw">override</span> <span class="kw">fun</span> <span class="fu">onViewCreated</span><span class="op">(</span><span class="va">view</span><span class="op">:</span> <span class="dt">View</span><span class="op">,</span> <span class="va">savedInstanceState</span><span class="op">:</span> <span class="dt">Bundle</span><span class="op">?)</span> <span class="op">&#123;</span></span>
<span id="cb4-2"><a href="#cb4-2" aria-hidden="true" tabindex="-1"></a>        <span class="kw">super</span><span class="op">.</span>onViewCreated<span class="op">(</span>view<span class="op">,</span> savedInstanceState<span class="op">)</span></span>
<span id="cb4-3"><a href="#cb4-3" aria-hidden="true" tabindex="-1"></a>        <span class="kw">val</span> <span class="va">recyclerView</span> <span class="op">=</span> view<span class="op">.</span>findViewById<span class="op">(</span>R<span class="op">.</span>id<span class="op">.</span>recyclerView<span class="op">)</span></span>
<span id="cb4-4"><a href="#cb4-4" aria-hidden="true" tabindex="-1"></a>        recyclerView<span class="op">.</span>layoutManager <span class="op">=</span> LinearLayoutManager<span class="op">(</span>context<span class="op">)</span></span>
<span id="cb4-5"><a href="#cb4-5" aria-hidden="true" tabindex="-1"></a>        users <span class="op">=</span> savedInstanceState<span class="op">?.</span>getParcelableArrayList<span class="op">(</span><span class="st">"userList"</span><span class="op">)</span> <span class="op">?:</span> viewModel<span class="op">.</span>getUsers<span class="op">()</span></span>
<span id="cb4-6"><a href="#cb4-6" aria-hidden="true" tabindex="-1"></a>        rv<span class="op">.</span>adapter <span class="op">=</span> DataAdapter<span class="op">(</span>users<span class="op">,</span> <span class="kw">this</span><span class="op">)</span></span>
<span id="cb4-7"><a href="#cb4-7" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#125;</span></span>
<span id="cb4-8"><a href="#cb4-8" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb4-9"><a href="#cb4-9" aria-hidden="true" tabindex="-1"></a>    <span class="kw">override</span> <span class="kw">fun</span> <span class="fu">onSaveInstanceState</span><span class="op">(</span><span class="va">outState</span><span class="op">:</span> <span class="dt">Bundle</span><span class="op">)</span> <span class="op">&#123;</span></span>
<span id="cb4-10"><a href="#cb4-10" aria-hidden="true" tabindex="-1"></a>        <span class="kw">super</span><span class="op">.</span>onSaveInstanceState<span class="op">(</span>outState<span class="op">)</span></span>
<span id="cb4-11"><a href="#cb4-11" aria-hidden="true" tabindex="-1"></a>        outState<span class="op">.</span>putParcelableArrayList<span class="op">(</span><span class="st">"userList"</span><span class="op">,</span> users <span class="kw">as</span> ArrayList<span class="op">)</span></span>
<span id="cb4-12"><a href="#cb4-12" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#125;</span></span></code></pre></div>
<ul>
<li>通过覆写 <code>onSaveInstanceState()</code>
功能，我们可以将所需信息保存在 Bundle 对象中。</li>
<li>我们会让应用程序检查 <code>onViewCreated()</code>
函数中捆绑包中的数据是否可用，如果不可用，则会通过访问 ViewModel
的方法获取数据。</li>
</ul>
<h2 id="结论">结论</h2>
<p>在 Android
平台上，由于进程被终止而导致的应用崩溃是很常见的。而如果我们使用较新的
Android
版本，我们可以注意到，出于节省电源的目的，大量的后台应用程序被强制结束运行了。</p>
<p>解决方案 1 可以快速解决你现有的应用崩溃问题。</p>
<p>但是，如果你正在从头开始开发应用程序，我建议使用解决方案
2，因为它可以确保系统会从先前关闭的位置恢复该应用程序，因此带来更好的用户体验。</p>
<p>研究此类崩溃的根本原因可能会挺困难的，因此我希望本文能够以任何可能的方式对你有所帮助。请告诉我你们对文中讨论的解决方案有何看法。</p>
<p>这就是本文的全部内容，祝编程愉快，代码无 Bug！</p>]]></content>
      <categories>
        <category>Computer Science</category>
        <category>Android</category>
        <category>Kotlin</category>
      </categories>
      <tags>
        <tag>Computer Science</tag>
        <tag>Android</tag>
        <tag>Kotlin</tag>
      </tags>
  </entry>
  <entry>
    <title>幻数并没有我们想象中的那么奇幻</title>
    <url>/2021/02/03/computer%20science/backend/magic-numbers-are-not-that-magic/</url>
    <content><![CDATA[<blockquote>
<ul>
<li>原文地址：<a href="https://medium.com/better-programming/magic-numbers-are-not-that-magic-132297d435f5">Magic
Numbers Are Not That Magic</a></li>
<li>原文作者：<a href="https://medium.com/@steven.popovich">Steven
Popovich</a></li>
<li>译者：<a href="https://github.com/PassionPenguin">霜羽
Hoarfroster</a></li>
<li>校对者：<a href="https://github.com/fltenwall">fltenwall</a>、<a href="https://github.com/HumanBeingXenon">HumanBeingXenon</a></li>
</ul>
</blockquote>
<blockquote>
<p>A better solution for hardcoded numbers</p>
</blockquote>
<figure>
<img src="https://cdn-images-1.medium.com/max/9562/1*fzMDTQAsZ8D9O3YXJwLW5A.jpeg" alt="图自 Maail 源 Unsplash">
<figcaption aria-hidden="true">图自 <a href="https://unsplash.com/@maail?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText">Maail</a>
源 <a href="https://unsplash.com/s/photos/feathers?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText">Unsplash</a></figcaption>
</figure>
<p>我真的不喜欢幻数这个词 ——
我看到太多人都理解错了。我见过这么一种代码审查，一看见代码中或者注释中有数字就评论：“哦，这是个幻数呢，请您务必给它取个名并放在代码头部”，我好多的代码里也会有这样的评论。</p>
<p>（我也很不喜欢有的时候我们会有应该要把所有的变量放在一个文件的顶部的想法，但这是另一个故事。）</p>
<p>亲爱的开发人员们啊，您可以在代码中大量使用纯数字，只是请务必注意自己在干什么啊。</p>
<h2 id="什么是幻数">什么是幻数？</h2>
<p>我的意思是，您可以在 Google
上搜索它，并获得一堆如金银绸缎但却又站不住脚的定义。但实际上，幻数其实就是代码中难以理解的数字。</p>
<div class="sourceCode" id="cb1"><pre class="sourceCode kotlin"><code class="sourceCode kotlin"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a><span class="kw">fun</span> <span class="fu">generate</span><span class="op">()</span> <span class="op">&#123;</span></span>
<span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a>    <span class="cf">for</span> <span class="op">(</span>i <span class="kw">in</span> <span class="dv">0</span> until <span class="dv">52</span><span class="op">)</span> <span class="op">&#123;</span></span>
<span id="cb1-3"><a href="#cb1-3" aria-hidden="true" tabindex="-1"></a>        deck<span class="op">[</span>i<span class="op">]</span> <span class="op">=</span> uniqueCard<span class="op">()</span></span>
<span id="cb1-4"><a href="#cb1-4" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#125;</span></span>
<span id="cb1-5"><a href="#cb1-5" aria-hidden="true" tabindex="-1"></a><span class="op">&#125;</span></span></code></pre></div>
<p>这个 52 从哪来的？</p>
<p>好吧，事实证明这是生成纸牌组的代码，而 52
恰好是纸牌组中的纸牌总数。不妨让我们给数字起个名字。</p>
<div class="sourceCode" id="cb2"><pre class="sourceCode kotlin"><code class="sourceCode kotlin"><span id="cb2-1"><a href="#cb2-1" aria-hidden="true" tabindex="-1"></a>const <span class="kw">val</span> <span class="va">numberOfCardsInADeck</span> <span class="op">=</span> <span class="dv">52</span></span>
<span id="cb2-2"><a href="#cb2-2" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb2-3"><a href="#cb2-3" aria-hidden="true" tabindex="-1"></a><span class="kw">fun</span> <span class="fu">generate</span><span class="op">()</span> <span class="op">&#123;</span></span>
<span id="cb2-4"><a href="#cb2-4" aria-hidden="true" tabindex="-1"></a>    <span class="cf">for</span> <span class="op">(</span>i <span class="kw">in</span> <span class="dv">0</span> until numberOfCardsInADeck<span class="op">)</span> <span class="op">&#123;</span></span>
<span id="cb2-5"><a href="#cb2-5" aria-hidden="true" tabindex="-1"></a>        deck<span class="op">[</span>i<span class="op">]</span> <span class="op">=</span> uniqueCard<span class="op">()</span></span>
<span id="cb2-6"><a href="#cb2-6" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#125;</span></span>
<span id="cb2-7"><a href="#cb2-7" aria-hidden="true" tabindex="-1"></a><span class="op">&#125;</span></span></code></pre></div>
<p>这样，代码就会更具可读性、可维护性。太好了，您已经掌握了如何编写干净的代码的不二法门。</p>
<p>嘿嘿，不，这只是冰山一角。这个示例（这是一个非常常见的示例）告诉我们一个非常深奥的道理
—— 开发人员可能很容易地从其余的代码中明白 52 究竟是什么 ——
这是一只非常温顺的幻数怪。</p>
<p>当幻数怪突然冒出来的时候，那才是它们展示真实面孔的时间嗷。例如使用以下代码调整搜索算法：</p>
<div class="sourceCode" id="cb3"><pre class="sourceCode kotlin"><code class="sourceCode kotlin"><span id="cb3-1"><a href="#cb3-1" aria-hidden="true" tabindex="-1"></a><span class="kw">fun</span> <span class="fu">search</span><span class="op">(</span><span class="va">query</span><span class="op">:</span> <span class="dt">String</span><span class="op">)</span> <span class="op">&#123;</span></span>
<span id="cb3-2"><a href="#cb3-2" aria-hidden="true" tabindex="-1"></a>    find<span class="op">(</span>query<span class="op">,</span> <span class="fl">2.4f</span><span class="op">,</span> <span class="fl">10.234f</span><span class="op">,</span> <span class="dv">999</span><span class="op">,</span> <span class="kw">Int</span><span class="op">.</span>MAX_VALUE<span class="op">,</span> <span class="kw">false</span><span class="op">)</span></span>
<span id="cb3-3"><a href="#cb3-3" aria-hidden="true" tabindex="-1"></a><span class="op">&#125;</span></span></code></pre></div>
<p>噢这奇怪的数字到底意味着什么？看来想要弄清楚这些数字的用途和作用并不容易。</p>
<h2 id="为什么使用幻数是个问题">为什么使用幻数是个问题？</h2>
<p>假设您的应用规模不断扩大，需要搜索的内容还很多，突然之间，您的搜索结果并没有完全满足您的需求。</p>
<p>我们有一个错误：“当我搜索”麦片”时，即使我知道谷物一定是它的成分，谷物也不会出现在结果中。”</p>
<p>在本算法四年前那最后一次被修改以后，我的 Joe Schmo
啊，您现在需要更改这些值以解决此错误，而您首先需要改变什么？</p>
<p>——
幻数。如果您将这些幻数怪与一个描述性名称或者注释文档组合在一起，那么就可以杀害幻数怪。当然，幻数怪那么可爱，杀害它们会让我们更容易理解这个算法！让我们一起来解决这个问题：</p>
<div class="sourceCode" id="cb4"><pre class="sourceCode kotlin"><code class="sourceCode kotlin"><span id="cb4-1"><a href="#cb4-1" aria-hidden="true" tabindex="-1"></a>const <span class="kw">val</span> <span class="va">searchWeight</span> <span class="op">=</span> <span class="fl">2.4f</span> <span class="co">// 查询结果的具体程度，增加此数字以获得更多模糊的结果</span></span>
<span id="cb4-2"><a href="#cb4-2" aria-hidden="true" tabindex="-1"></a>const <span class="kw">val</span> <span class="va">searchSpread</span> <span class="op">=</span> <span class="fl">10.234f</span> <span class="co">// 结果的连续程度。在数据库中连续选择更多单词</span></span>
<span id="cb4-3"><a href="#cb4-3" aria-hidden="true" tabindex="-1"></a>const <span class="kw">val</span> <span class="va">searchPageSize</span> <span class="op">=</span> <span class="dv">999</span> <span class="co">// 每个搜索页面所需的结果数</span></span>
<span id="cb4-4"><a href="#cb4-4" aria-hidden="true" tabindex="-1"></a>const <span class="kw">val</span> <span class="va">searchMaxResults</span> <span class="op">=</span> <span class="kw">Int</span><span class="op">.</span>MAX_VALUE <span class="co">// 我们希望的能从搜索中获得所有可能的结果</span></span>
<span id="cb4-5"><a href="#cb4-5" aria-hidden="true" tabindex="-1"></a>const <span class="kw">val</span> <span class="va">shouldSearchIndex</span> <span class="op">=</span> <span class="kw">false</span> <span class="co">// 我们不想搜索索引</span></span>
<span id="cb4-6"><a href="#cb4-6" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb4-7"><a href="#cb4-7" aria-hidden="true" tabindex="-1"></a><span class="kw">fun</span> <span class="fu">search</span><span class="op">(</span><span class="va">query</span><span class="op">:</span> <span class="dt">String</span><span class="op">)</span> <span class="op">&#123;</span></span>
<span id="cb4-8"><a href="#cb4-8" aria-hidden="true" tabindex="-1"></a>    find<span class="op">(</span>query<span class="op">,</span> searchWeight<span class="op">,</span> searchSpread<span class="op">,</span> searchPageSize<span class="op">,</span> searchMaxResults<span class="op">,</span> shouldSearchIndex<span class="op">)</span></span>
<span id="cb4-9"><a href="#cb4-9" aria-hidden="true" tabindex="-1"></a><span class="op">&#125;</span></span>
<span id="cb4-10"><a href="#cb4-10" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb4-11"><a href="#cb4-11" aria-hidden="true" tabindex="-1"></a><span class="co">// 调用我们的加权搜索算法。在foo.bar.com上阅读有关此算法的文档</span></span>
<span id="cb4-12"><a href="#cb4-12" aria-hidden="true" tabindex="-1"></a><span class="kw">fun</span> <span class="fu">find</span><span class="op">(</span><span class="va">query</span><span class="op">:</span> <span class="dt">String</span><span class="op">,</span> <span class="va">weight</span><span class="op">:</span> <span class="dt">Float</span><span class="op">,</span> <span class="va">spread</span><span class="op">:</span> <span class="dt">Float</span><span class="op">,</span> <span class="va">pageSize</span><span class="op">:</span> <span class="dt">Int</span><span class="op">,</span> <span class="va">maxResults</span><span class="op">:</span> <span class="dt">Int</span><span class="op">,</span> <span class="va">index</span><span class="op">:</span> <span class="dt">Boolean</span><span class="op">)</span> <span class="op">&#123;&#125;</span></span></code></pre></div>
<p>处理这样的代码，您会不会感觉舒服多了？您甚至可能对如何进行更改有所了解。优化搜索可能很困难，但是接手的人凭着这份文档，就能更好地解决这个漏洞</p>
<h2 id="什么不能称之为幻数">什么不能称之为幻数？</h2>
<p>实际上，难以推理的数字不会像容易推理的数字那样频繁出现。例如这个数据：</p>
<div class="sourceCode" id="cb5"><pre class="sourceCode kotlin"><code class="sourceCode kotlin"><span id="cb5-1"><a href="#cb5-1" aria-hidden="true" tabindex="-1"></a>view<span class="op">.</span>height <span class="op">=</span> <span class="dv">42</span></span></code></pre></div>
<p>这可不是一个幻数，我再强调一遍：这不是一个幻数！</p>
<p>我知道。我给一些 Java 代码纯粹主义者和洁癖一个暴击。</p>
<p>但是这个数字并不难推论 —— 它的意义是完全独立的 —— 该视图的高度为
42！最多的翻译就是这样，但是像这样数据，即使我们给它取一个名称，又会增加什么价值？</p>
<div class="sourceCode" id="cb6"><pre class="sourceCode kotlin"><code class="sourceCode kotlin"><span id="cb6-1"><a href="#cb6-1" aria-hidden="true" tabindex="-1"></a>const <span class="kw">val</span> <span class="va">viewHeight</span> <span class="op">=</span> <span class="dv">42</span></span>
<span id="cb6-2"><a href="#cb6-2" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb6-3"><a href="#cb6-3" aria-hidden="true" tabindex="-1"></a><span class="kw">fun</span> <span class="fu">buildView</span><span class="op">()</span> <span class="op">&#123;</span></span>
<span id="cb6-4"><a href="#cb6-4" aria-hidden="true" tabindex="-1"></a>    view<span class="op">.</span>height <span class="op">=</span> viewHeight</span>
<span id="cb6-5"><a href="#cb6-5" aria-hidden="true" tabindex="-1"></a><span class="op">&#125;</span></span></code></pre></div>
<p>以上做法只会导致冗杂代码。而这似乎是一个很小的例子，但是这种不必要地命名数字的想法会迅速增加
UI 代码的大小 —— 增加代码行数，完成绩效。</p>
<h2 id="所以我们是否可以在代码中使用数字">所以我们是否可以在代码中使用数字？</h2>
<p>这是当然的！世界上有很多不错的代码里面使用了数字。要做到不出现幻数，您只需要记住以下几点：</p>
<ul>
<li>确保您的数字易于理解 —— 就算是孩子也能指出数字是哪里来的</li>
<li>如果您要更改数字，调整某些内容，或在纸上进行一些计算才能得到的硬编码数字，请务必进行解释。在代码中，在数字旁边，或至少在更改的提交中，应当提出并解释硬编码数字发生的变更。</li>
<li>额外一招：请确保您的硬编码数字是干净的</li>
</ul>
<p>相信我，使用注释解释或使用变量名解释数字是很有用的！</p>
<p>祝你好运，感谢你的阅读！</p>]]></content>
      <categories>
        <category>Computer Science</category>
        <category>Backend</category>
      </categories>
      <tags>
        <tag>Computer Science</tag>
        <tag>Backend</tag>
        <tag>Kotlin</tag>
      </tags>
  </entry>
  <entry>
    <title>2021 年 JavaScript 测试框架回顾</title>
    <url>/2021/02/02/computer%20science/frontend/a-review-of-javascript-testing-frameworks-in-2021/</url>
    <content><![CDATA[<blockquote>
<ul>
<li>原文地址：<a href="https://medium.com/javascript-in-plain-english/a-review-of-javascript-testing-frameworks-in-2021-fe5934567c2a">A
Review of JavaScript Testing Frameworks in 2021</a></li>
<li>原文作者：<a href="https://medium.com/@kisantamang">Kisan
Tamang</a></li>
<li>译者：<a href="https://github.com/PassionPenguin">霜羽
Hoarfroster</a></li>
<li>校对者：<a href="https://github.com/zenblo">zenblo</a>、<a href="https://github.com/Ashira97">Ashira97</a></li>
</ul>
</blockquote>
<figure>
<img src="https://github.com/PassionPenguin/picgo-database/blob/main/a-review-of-javascript-testing-frameworks-in-2021-UsageRanking.jpg?raw=true" alt="JavaScript 测试框架的使用情况，数据来源《2020 年 Javascript 状况调查》">
<figcaption aria-hidden="true">JavaScript
测试框架的使用情况，数据来源《2020 年 Javascript 状况调查》</figcaption>
</figure>
<p>测试环节是软件工程中的重要组成部分。如果你不熟悉测试，那你可能会提出和别人一样的问题
—— 如果我的软件的所有功能都在正常运作，我为什么还要进行测试呢？</p>
<p>我们进行测试的目的是检查代码的功能是否正常，检查代码是否按预期工作。一般来说，我们并不会通过测试来查找代码中的
Bug。</p>
<p>而如果我们要针对 JavaScript 和 Node.js
应用程序进行测试，实际上有很多可用的框架供我们选择。</p>
<p>在本文中，我们将仔细研究当今可用的一些流行的测试框架。</p>
<h3 id="jest">1. Jest</h3>
<p><strong>Github Stars</strong>：<strong>38.3k</strong></p>
<p><img src="https://cdn-images-1.medium.com/max/2000/0*ORx4FzFx1702SS1x.png"></p>
<p>Jest 是一个易于操作的，delightful 的 JavaScript
测试框架。它的特性是是易于操作。我们可以在：<a href="https://babeljs.io/">Babel</a>、<a href="https://www.typescriptlang.org/">TypeScript</a>、<a href="https://nodejs.org/en/">Node</a>、<a href="https://reactjs.org/">React</a>、<a href="https://angular.io/">Angular</a>、<a href="https://vuejs.org/">Vue</a> 等项目中使用它！</p>
<p>Jest
是我最喜欢的框架之一，因为它快速、安全，易于使用而且它还为我们提供了大量文档。基于
<a href="https://2020.stateofjs.com/zh-Hans">2020 年 Javascript
状况调查</a>，它是 JavaScript
开发人员中最常用的测试框架之一。而且调查显示，大多数开发人员都感兴趣于学习它。</p>
<figure>
<img src="https://github.com/PassionPenguin/picgo-database/blob/main/a-review-of-javascript-testing-frameworks-in-2021-UsageRanking.jpg?raw=true" alt="JavaScript 测试框架的使用情况，数据来源《2020 年 Javascript 状况调查》">
<figcaption aria-hidden="true">JavaScript
测试框架的使用情况，数据来源《2020 年 Javascript 状况调查》</figcaption>
</figure>
<h3 id="mocha">2. Mocha</h3>
<p><strong>GitHub Stars</strong>：<strong>20.2k</strong></p>
<figure>
<img src="https://cdn-images-1.medium.com/max/2000/1*if41jUf_RLXNEjCSz-2aBQ.png" alt="Mocha Logo">
<figcaption aria-hidden="true">Mocha Logo</figcaption>
</figure>
<p>Mocha 是 Node.js 程序的 JavaScript
测试框架，支持浏览器、异步测试、测试覆盖率报告以及任何断言库的使用。</p>
<p>它简单、灵活、有趣，而且适用于 Node.js 和浏览器。<a href="https://2020.stateofjs.com/zh-Hans">2020 年 Javascript
状况调查</a> 显示，它是仅次于 Jest 的 JavaScript
开发人员中第二常用的测试框架。</p>
<h3 id="jasmine">3. Jasmine</h3>
<p><strong>GitHub Stars</strong>：<strong>15k</strong></p>
<p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/ffd4f0612a61489d901fa29b153a3dbe~tplv-k3u1fbpfcp-watermark.image"></p>
<p>Jasmine 是一个用于测试 JavaScript
代码的行为驱动开发框架。它不依赖于任何其他 JavaScript 框架。它不需要 DOM
节点，而且它的语法清晰明了，因此我们可以轻松使用它进行测试。</p>
<p>调查显示，虽然许多开发人员正在使用
Jasmine，但是他们对该框架的兴趣的趋势是下降的。</p>
<figure>
<img src="https://github.com/PassionPenguin/picgo-database/blob/main/a-review-of-javascript-testing-frameworks-in-2021-InterestRanking.jpg?raw=true" alt="JavaScript 测试框架的兴趣情况，数据来源《2020 年 Javascript 状况》">
<figcaption aria-hidden="true">JavaScript
测试框架的兴趣情况，数据来源《2020 年 Javascript 状况》</figcaption>
</figure>
<h3 id="ava">4. AVA</h3>
<p><strong>GitHub Stars</strong>：<strong>18.6k</strong></p>
<p><img src="https://cdn-images-1.medium.com/max/2000/0*_MnNTc5DD3wLQJMu"></p>
<p>AVA 是 Node.js 的测试框架。它拥有简洁的
API、详细的错误输出。它支持新的语言功能、支持测试文件隔离，能让我们更有信心进行开发。</p>
<h3 id="puppeteer">5. Puppeteer</h3>
<p><strong>GitHub Stars</strong>：<strong>68.2k</strong></p>
<p><img src="https://cdn-images-1.medium.com/max/2560/0*gfOux77U2JV6g3C5"></p>
<p>Puppeteer 是一个 Node.js 库，提供了高级的 API，通过 <a href="https://chromedevtools.github.io/devtools-protocol/">DevTools
协议</a> 控制 Chrome 或 Chromium。Puppeteer 默认运行在 <a href="https://developers.google.com/web/updates/2017/04/headless-chrome">Headless
Chrome</a> 上，但我们也可以通过配置它，让它运行在完整的 Chrome 或
Chromium 上。</p>
<hr>
<p>其他受欢迎的测试库还包括 <a href="https://github.com/sinonjs/">Sinon.js</a>、<a href="https://www.chaijs.com/">Chai</a>、<a href="https://www.cypress.io/">Cypress</a>。我个人使用了 Sinon.js ——
它是支持行为监控、桩模块设置和测试数据模拟的 JavaScript 测试框架</p>
<h2 id="结论">结论</h2>
<p>不必要被这些测试框架所搞混，套进去。他们所做的，甚至最多能够做的，也只是提供一个更好的用于测试我们的代码的环境。调查也同时显示，Jest
已成为开发人员最爱的测试框架，而我也一直在使用 Jest 测试我的 Node
应用程序。</p>
<p>如果你是 Node.js 开发人员或 React 开发人员，我强烈推介你使用
Jest。</p>
<p>祝学习愉快！</p>]]></content>
      <categories>
        <category>Computer Science</category>
        <category>Frontend</category>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>Computer Science</tag>
        <tag>JavaScript</tag>
        <tag>Frontend</tag>
      </tags>
  </entry>
  <entry>
    <title>如何让 JavaScript 中的循环慢下来</title>
    <url>/2021/02/02/computer%20science/frontend/how-to-slow-down-a-for-loop-in-javascript/</url>
    <content><![CDATA[<blockquote>
<ul>
<li>原文地址：<a href="https://medium.com/javascript-in-plain-english/javascript-slow-down-for-loop-9d1caaeeeeed">How
To Slow Down A For-Loop in JavaScript</a></li>
<li>原文作者：<a href="https://medium.com/@louispetrik">Louis
Petrik</a></li>
<li>译者：<a href="https://github.com/PassionPenguin">霜羽
Hoarfroster</a></li>
<li>校对者：<a href="https://github.com/Usualminds">Usualminds</a>、<a href="https://github.com/samyu2000">samyu2000</a></li>
</ul>
</blockquote>
<figure>
<img src="https://cdn-images-1.medium.com/max/10368/0*kcAWzuiAUolF3Zkr" alt="图源 Charlotte Coneybeer，上传于 Unsplash">
<figcaption aria-hidden="true">图源 <a href="https://unsplash.com/@she_sees?utm_source=medium&amp;utm_medium=referral">Charlotte
Coneybeer</a>，上传于 <a href="https://unsplash.com?utm_source=medium&amp;utm_medium=referral">Unsplash</a></figcaption>
</figure>
<p>For 循环在 JavaScript 中是必不可少的。使用 For
循环，我们可以写出与列表有关的程序。但是这里存在一个问题 —— For
循环是尽可能快地执行。当然如果我们只是用它来遍历数组那绝对是没有问题的。</p>
<p>但是如果我们在循环中执行请求，那就可能会出现一些问题（例如过高的请求速度让服务器封锁
IP
之类的我们不想看到的情况就会纷至沓来了）。如果我们能实现每隔一段时间才执行一次循环（例如，每秒只执行一次循环操作），也就是使
For 循环的执行放慢一些，那该会有多棒啊！</p>
<p>在下文中，我们将一起开启探索之旅～</p>
<h2 id="首先无效的方法">首先：无效的方法</h2>
<p>如果你正在寻找直接解决问题的方法，请直接跳过这里吧。而如果你想学习更多有关
JavaScript 的知识，那么就请留步～</p>
<p>我想在这里先解释一下为什么常见的解决方案不起作用。</p>
<p>首先还是先要感谢 JavaScript 为我们提供的 <code>setTimeout</code>
方法，让我们能够实现在一定时间后执行某些代码的功能。咦？这似乎能够满足我们题目的要求啊
—— 我们只需要将 <code>setTimeout</code> 加入 For
循环体中，循环速度就会变慢：</p>
<div class="sourceCode" id="cb1"><pre class="sourceCode js"><code class="sourceCode javascript"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a><span class="cf">for</span> (<span class="kw">let</span> i <span class="op">=</span> <span class="dv">0</span><span class="op">;</span> i <span class="op">&lt;</span> <span class="dv">100</span><span class="op">;</span> i<span class="op">++</span>) &#123;</span>
<span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a>    <span class="pp">setTimeout</span>(() <span class="kw">=&gt;</span> &#123;</span>
<span id="cb1-3"><a href="#cb1-3" aria-hidden="true" tabindex="-1"></a>        <span class="bu">console</span><span class="op">.</span><span class="fu">log</span>(i)<span class="op">;</span></span>
<span id="cb1-4"><a href="#cb1-4" aria-hidden="true" tabindex="-1"></a>    &#125;<span class="op">,</span> <span class="dv">1000</span>)<span class="op">;</span></span>
<span id="cb1-5"><a href="#cb1-5" aria-hidden="true" tabindex="-1"></a>&#125;</span></code></pre></div>
<p>但我们运行上面的代码，却会发生以下情况：</p>
<ul>
<li>起初先卡顿了一下，随后所有日志同时被打印在控制台上。</li>
</ul>
<p>这完全就不是我们想要的结果呢～</p>
<p>造成这个结果的原因是我们陷入了误区。似乎这里 For
循环也并没有为每一个元素设置
<code>timeout</code>（但实际上，程序设置了）。</p>
<p>我们只是忘记了 JavaScript 是如何执行代码的。循环是会立即创建所有的
<code>timeout</code>，而不是顺序创建。这非常快，也因此所有的
<code>timeout</code> 都具有几乎相同的<strong>开始时间</strong>。</p>
<p>而一旦设置的时间到了，所有的任务都会立即执行 —— 同时打印日志。</p>
<p>即便我们按照下面的代码去重写代码，我们仍会看到相同的效果。</p>
<div class="sourceCode" id="cb2"><pre class="sourceCode js"><code class="sourceCode javascript"><span id="cb2-1"><a href="#cb2-1" aria-hidden="true" tabindex="-1"></a><span class="cf">for</span> (<span class="kw">let</span> i <span class="op">=</span> <span class="dv">0</span><span class="op">;</span> i <span class="op">&lt;</span> <span class="dv">100</span><span class="op">;</span> i<span class="op">++</span>) &#123;</span>
<span id="cb2-2"><a href="#cb2-2" aria-hidden="true" tabindex="-1"></a>    <span class="pp">setTimeout</span>(() <span class="kw">=&gt;</span> &#123;</span>
<span id="cb2-3"><a href="#cb2-3" aria-hidden="true" tabindex="-1"></a>    &#125;<span class="op">,</span> <span class="dv">1000</span>)<span class="op">;</span></span>
<span id="cb2-4"><a href="#cb2-4" aria-hidden="true" tabindex="-1"></a>    <span class="bu">console</span><span class="op">.</span><span class="fu">log</span>(i)<span class="op">;</span></span>
<span id="cb2-5"><a href="#cb2-5" aria-hidden="true" tabindex="-1"></a>&#125;</span></code></pre></div>
<p>如果以这个想法为出发点，其实我们可以在其他一些编程语言中达到我们的目标
—— 循环创建 <code>timeout</code>，且只有当这些任务执行后，循环才继续执行
—— 至少在其他编程语言中是这样的。但是，在 JavaScript
中，程序可不会停下来，只会继续创建
<code>timeout</code>。代码也只会继续执行下去不会停留。因此，JavaScript
可以看作是创建了两个并行运行的线程同时处理 For 循环和 For 循环创建的
<code>timeout</code>。</p>
<h2 id="如何正确地降低-for-循环的执行速度">如何正确地降低 For
循环的执行速度</h2>
<p>显然，如果我们只使用
<strong><code>setTimeout</code></strong>，将永远无法达到我们的预期，那我们应该怎么做呢？</p>
<p>其实解决方案很简单，只需要用一段简单的 <code>Promise</code>
语句就行了。</p>
<div class="sourceCode" id="cb3"><pre class="sourceCode js"><code class="sourceCode javascript"><span id="cb3-1"><a href="#cb3-1" aria-hidden="true" tabindex="-1"></a><span class="kw">const</span> sleep <span class="op">=</span> (time) <span class="kw">=&gt;</span> &#123;</span>
<span id="cb3-2"><a href="#cb3-2" aria-hidden="true" tabindex="-1"></a>    <span class="cf">return</span> <span class="kw">new</span> <span class="bu">Promise</span>((resolve) <span class="kw">=&gt;</span> &#123;</span>
<span id="cb3-3"><a href="#cb3-3" aria-hidden="true" tabindex="-1"></a>        <span class="cf">return</span> <span class="pp">setTimeout</span>(<span class="kw">function</span> () &#123;</span>
<span id="cb3-4"><a href="#cb3-4" aria-hidden="true" tabindex="-1"></a>            <span class="fu">resolve</span>()</span>
<span id="cb3-5"><a href="#cb3-5" aria-hidden="true" tabindex="-1"></a>        &#125;<span class="op">,</span> time)</span>
<span id="cb3-6"><a href="#cb3-6" aria-hidden="true" tabindex="-1"></a>    &#125;)</span>
<span id="cb3-7"><a href="#cb3-7" aria-hidden="true" tabindex="-1"></a>&#125;</span></code></pre></div>
<p>我们通过函数调用 <code>Promise</code>，而它会获取
<strong>setTimeout</strong>
应该被设置的时间（以毫秒为单位）。在一定时间后，所有
<code>timeout</code> 都会执行 <code>resolve</code> 函数。这意味着
<code>Promise</code> 被我们执行了。我们可以简化上面显示的代码：</p>
<div class="sourceCode" id="cb4"><pre class="sourceCode js"><code class="sourceCode javascript"><span id="cb4-1"><a href="#cb4-1" aria-hidden="true" tabindex="-1"></a><span class="kw">const</span> sleep <span class="op">=</span> (time) <span class="kw">=&gt;</span> &#123;</span>
<span id="cb4-2"><a href="#cb4-2" aria-hidden="true" tabindex="-1"></a>    <span class="cf">return</span> <span class="kw">new</span> <span class="bu">Promise</span>(resolve <span class="kw">=&gt;</span> <span class="pp">setTimeout</span>(resolve<span class="op">,</span> time))</span>
<span id="cb4-3"><a href="#cb4-3" aria-hidden="true" tabindex="-1"></a>&#125;</span></code></pre></div>
<p>使用 <code>Promise</code>
可以实现我们需要的功能。现在让我们将它添加到 For 循环中：</p>
<div class="sourceCode" id="cb5"><pre class="sourceCode js"><code class="sourceCode javascript"><span id="cb5-1"><a href="#cb5-1" aria-hidden="true" tabindex="-1"></a><span class="kw">const</span> sleep <span class="op">=</span> (time) <span class="kw">=&gt;</span> &#123;</span>
<span id="cb5-2"><a href="#cb5-2" aria-hidden="true" tabindex="-1"></a>    <span class="cf">return</span> <span class="kw">new</span> <span class="bu">Promise</span>((resolve) <span class="kw">=&gt;</span> <span class="pp">setTimeout</span>(resolve<span class="op">,</span> time))</span>
<span id="cb5-3"><a href="#cb5-3" aria-hidden="true" tabindex="-1"></a>&#125;</span>
<span id="cb5-4"><a href="#cb5-4" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb5-5"><a href="#cb5-5" aria-hidden="true" tabindex="-1"></a><span class="kw">const</span> doSomething <span class="op">=</span> <span class="kw">async</span> () <span class="kw">=&gt;</span> &#123;</span>
<span id="cb5-6"><a href="#cb5-6" aria-hidden="true" tabindex="-1"></a>    <span class="cf">for</span> (<span class="kw">let</span> i <span class="op">=</span> <span class="dv">0</span><span class="op">;</span> i <span class="op">&lt;</span> <span class="dv">100</span><span class="op">;</span> i<span class="op">++</span>) &#123;</span>
<span id="cb5-7"><a href="#cb5-7" aria-hidden="true" tabindex="-1"></a>        <span class="cf">await</span> <span class="fu">sleep</span>(<span class="dv">1000</span>)</span>
<span id="cb5-8"><a href="#cb5-8" aria-hidden="true" tabindex="-1"></a>        <span class="bu">console</span><span class="op">.</span><span class="fu">log</span>(i)</span>
<span id="cb5-9"><a href="#cb5-9" aria-hidden="true" tabindex="-1"></a>    &#125;</span>
<span id="cb5-10"><a href="#cb5-10" aria-hidden="true" tabindex="-1"></a>&#125;</span>
<span id="cb5-11"><a href="#cb5-11" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb5-12"><a href="#cb5-12" aria-hidden="true" tabindex="-1"></a><span class="fu">doSomething</span>()</span></code></pre></div>
<p>程序每秒执行一次日志打印操作。因此，要输出循环的所有数字，我们需要等待
100 秒。现在我们已经成功的放缓了 For 循环的执行速度！</p>
<p>感谢你的阅读！</p>]]></content>
      <categories>
        <category>Computer Science</category>
        <category>Frontend</category>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>Computer Science</tag>
        <tag>JavaScript</tag>
        <tag>Frontend</tag>
      </tags>
  </entry>
  <entry>
    <title>使用 Flutter 的 `Container` 控件构建优美的用户界面</title>
    <url>/2021/01/31/computer%20science/dart/flutter-creating-elegant-uis-with-containers/</url>
    <content><![CDATA[<blockquote>
<ul>
<li>原文地址：<a href="https://maneesha-erandi.medium.com/flutter-creating-elegant-uis-with-containers-1d05ca90fccf">Flutter — Creating
Elegant UIs with Containers</a></li>
<li>原文作者：<a href="https://medium.com/@maneesha-erandi">Maneesha
Erandi</a></li>
<li>译者：<a href="https://github.com/PassionPenguin">霜羽
Hoarfroster</a></li>
<li>校对者：<a href="https://github.com/zenblo">zenblo</a></li>
</ul>
</blockquote>
<p>当我们使用 Flutter 构建绝佳的 UI 界面的时候，<code>Container</code>
扮演着重要的角色。我真的极度喜欢在任何地方添加 <code>Container</code>
控件，而这也是因为它确实能够在快速简单地创建 UI 界面上帮上我大忙。</p>
<p>我真心希望本文内容能对初学者们有所帮助！</p>
<p>让我们一起看看我们能够怎样利用 <code>Container</code> 控件让我们的 UI
更加有吸引力吧！</p>
<p>要生成一个简简单单的正方形或矩形，我们可以创造一个
<code>Container</code>
控件并给它制定一个宽度和高度（我们可以看到下面的例子就避免了使用子控件去绘制形状）。</p>
<p><img src="https://cdn-images-1.medium.com/max/2078/1*mzCSaRJfZi8BiBHYUrUbqg.png"></p>
<pre class="dart"><code>Widget squareContainer() &#123;
  return Container(
    color: Colors.purpleAccent,
    width: 100,
    height: 100,
  );
&#125;

Widget rectContainer() &#123;
  return Container(
    color: Colors.greenAccent,
    width: 200,
    height: 100,
  );
&#125;</code></pre>
<p>而下面的例子展示了如何给 <code>Container</code>
控件加上圆角。首先操作的两个控件是使用了 <code>BoxDecoration</code>
圆角化控件的。我们同样可以通过使用 <code>BoxDecoration</code>
绘制一个圆形，就像第三个控件那样：</p>
<p><img src="https://cdn-images-1.medium.com/max/2202/1*lK_CjuIIFxIMSrijjme1qg.png"></p>
<pre class="dart"><code>Widget roundedContainer() &#123;
  return Container(
    width: 100,
    height: 50,
    decoration: BoxDecoration(
        color: Colors.tealAccent,
        borderRadius: BorderRadius.all(Radius.circular(10))),
  );
&#125;

Widget fullyRoundedContainer() &#123;
  return Container(
    width: 100,
    height: 50,
    decoration: BoxDecoration(
        color: Colors.blueAccent,
        borderRadius: BorderRadius.all(Radius.circular(50))),
  );
&#125;

Widget circleContainer() &#123;
  return Container(
    width: 100,
    height: 100,
    decoration: BoxDecoration(color: Colors.redAccent, shape: BoxShape.circle),
  );
&#125;</code></pre>
<p>如果我们用 <code>Container</code> 控件包裹一个有 <code>onTap</code>
功能（本例中为 <code>InkWell</code>
控件）的子控件，我们甚至可以构建一个自定义的按钮：</p>
<p><img src="https://cdn-images-1.medium.com/max/2000/1*0CUGG-lyqxr-iP4wb9PRNQ.png"></p>
<pre class="dart"><code>Widget containerButton() &#123;
  return InkWell(
    onTap: () &#123;&#125;,
    child: Container(
        decoration: BoxDecoration(
            color: Colors.deepOrange,
            borderRadius: BorderRadius.all(Radius.circular(10))),
        padding: EdgeInsets.symmetric(horizontal: 60, vertical: 20),
        child: Text(
          "Button",
          style: TextStyle(color: Colors.white),
        )),
  );
&#125;</code></pre>
<p>我们还可以通过使用 <code>Border.all()</code> 来生成边框装饰我们的
<code>Container</code> 控件。<code>BoxShadow</code> 则可以给我们的
<code>Container</code> 添加所设置的阴影，如控件二：</p>
<p><img src="https://cdn-images-1.medium.com/max/2000/1*SAcNvyxyzu-ofhDJ9_qhWg.png"></p>
<pre class="dart"><code>Widget containerWithBorders() &#123;
  return Container(
    width: 100,
    height: 100,
    decoration: BoxDecoration(
        color: Colors.yellow,
        border: Border.all(),
        borderRadius: BorderRadius.all(Radius.circular(15))),
  );
&#125;

Widget containerWithShadow() &#123;
  return Container(
    width: 100,
    height: 100,
    decoration: BoxDecoration(
      color: Colors.white,
      borderRadius: BorderRadius.all(Radius.circular(15)),
      boxShadow: [
        BoxShadow(
          color: Colors.grey.withOpacity(0.4),
          spreadRadius: 5,
          blurRadius: 9,
          offset: Offset(0, 3), // changes position of shadow
        ),
      ],
    ),
  );
&#125;</code></pre>
<p>在一个 <code>Container</code> 控件中，我们可以通过使用
<code>BoxDecoration</code> 以及 <code>DecorationImage</code>
给它添加装饰图片。这里大家可以试着找找两张图片中 <code>Container</code>
的区别，探究添加的装饰是如何被应用到控件上的：</p>
<p><img src="https://cdn-images-1.medium.com/max/2224/1*W0xtgxhy3hLNkrcHbZEGhQ.png"></p>
<pre class="dart"><code>Widget containerImgDecoration() &#123;
  return Container(
    width: 150,
    height: 150,
    decoration: BoxDecoration(
        borderRadius: BorderRadius.all(Radius.circular(15)),
        image: DecorationImage(
            image: AssetImage("assets/images/img.jpg"), fit: BoxFit.cover)),
  );
&#125;

Widget containerImg() &#123;
  return Container(
    width: 150,
    height: 150,
    decoration:
        BoxDecoration(borderRadius: BorderRadius.all(Radius.circular(15))),
    child: Image(image: AssetImage("assets/images/img.jpg"), fit: BoxFit.cover),
  );
&#125;</code></pre>
<p>我们可以添加多彩的标题背景，让我们的 UI 更有吸引力。下面是三个使用
<code>Container</code> 控件构造的标题栏的例子：</p>
<p><img src="https://cdn-images-1.medium.com/max/2458/1*I5-WNUcfc8gRxQiiTD59zQ.png"></p>
<p><img src="https://cdn-images-1.medium.com/max/2422/1*F3DS06d7jMIPJxwqVQlWKg.png"></p>
<p><img src="https://cdn-images-1.medium.com/max/2484/1*0LAhQZtJZx2bgvHFgEvELw.png"></p>
<pre class="dart"><code>Widget containerHeaderOne(&#123;width&#125;) &#123;
  return Container(
    width: width,
    height: 200,
    decoration: BoxDecoration(
      color: Colors.deepPurpleAccent,
      borderRadius:  BorderRadius.vertical(
          bottom:  Radius.elliptical(width, 200.0)),
    ),
  );
&#125;

Widget containerHeaderTwo(&#123;width&#125;) &#123;
  return Container(
    width: width,
    height: 200,
    decoration: BoxDecoration(
      color: Colors.redAccent,
      borderRadius: BorderRadius.only(
          bottomRight: Radius.circular(200)),
    ),
  );
&#125;

Widget containerHeaderThree(&#123;width&#125;) &#123;
  return Container(
    width: width,
    height: 200,
    decoration: BoxDecoration(
      color: Colors.green,
      borderRadius: BorderRadius.only(
          bottomLeft: Radius.circular(200),
          bottomRight: Radius.circular(200)),
    ),
  );
&#125;</code></pre>
<p>你可以在 <a href="https://github.com/manee92/FlutterDemo/blob/master/lib/screens/UIDemo/ContainerDemo.dart">这里</a>
找到完整的代码。</p>
<p>感谢你的阅读！</p>]]></content>
      <categories>
        <category>Computer Science</category>
        <category>Dart</category>
        <category>Flutter</category>
      </categories>
      <tags>
        <tag>Computer Science</tag>
        <tag>UI</tag>
        <tag>Dart</tag>
        <tag>Flutter</tag>
      </tags>
  </entry>
  <entry>
    <title>在 TypeScript 中引入 JSON 模块</title>
    <url>/2021/01/29/computer%20science/backend/importing-json-modules-in-typescript/</url>
    <content><![CDATA[<blockquote>
<ul>
<li>原文地址：<a href="https://mariusschulz.com/blog/importing-json-modules-in-typescript">Importing
JSON Modules in TypeScript</a></li>
<li>原文作者：<a href="https://mariusschulz.com/">Marius Schulz</a></li>
<li>译者：<a href="https://github.com/PassionPenguin">霜羽
Hoarfroster</a></li>
<li>校对者：<a href="https://github.com/zenblo">zenblo</a>、<a href="https://github.com/regon-cao">regonCao</a></li>
</ul>
</blockquote>
<p>TypeScript 2.9 版本引入了一个新的 <code>--resolveJsonModule</code>
编译选项，让我们可以在 TypeScript 模块内部引入 JSON 模块。</p>
<h2 id="通过-require-函数的调用引入-json-模块">通过 <code>require</code>
函数的调用引入 JSON 模块</h2>
<p>假设我们有一个用 TypeScript 编写的 Node
应用程序，并且假设我们要导入以下 JSON 文件：</p>
<div class="sourceCode" id="cb1"><pre class="sourceCode json"><code class="sourceCode json"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a><span class="fu">&#123;</span></span>
<span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a>    <span class="dt">"server"</span><span class="fu">:</span> <span class="fu">&#123;</span></span>
<span id="cb1-3"><a href="#cb1-3" aria-hidden="true" tabindex="-1"></a>        <span class="dt">"nodePort"</span><span class="fu">:</span> <span class="dv">8080</span></span>
<span id="cb1-4"><a href="#cb1-4" aria-hidden="true" tabindex="-1"></a>    <span class="fu">&#125;</span></span>
<span id="cb1-5"><a href="#cb1-5" aria-hidden="true" tabindex="-1"></a><span class="fu">&#125;</span></span></code></pre></div>
<p>在 Node 中，我们可以调用 <code>require</code> 函数导入这一个 JSON
文件，就像是导入别的 CommonJS 模块一样：</p>
<div class="sourceCode" id="cb2"><pre class="sourceCode typescript"><code class="sourceCode typescript"><span id="cb2-1"><a href="#cb2-1" aria-hidden="true" tabindex="-1"></a><span class="kw">const</span> config <span class="op">=</span> <span class="pp">require</span>(<span class="st">"./config.json"</span>)<span class="op">;</span></span></code></pre></div>
<p>这一个 JSON 文件会被自动的反序列化为普通的 JavaScript
对象，让我们可以轻松访问配置对象的属性：</p>
<div class="sourceCode" id="cb3"><pre class="sourceCode typescript"><code class="sourceCode typescript"><span id="cb3-1"><a href="#cb3-1" aria-hidden="true" tabindex="-1"></a><span class="st">"use strict"</span><span class="op">;</span></span>
<span id="cb3-2"><a href="#cb3-2" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb3-3"><a href="#cb3-3" aria-hidden="true" tabindex="-1"></a><span class="kw">const</span> express <span class="op">=</span> <span class="pp">require</span>(<span class="st">"express"</span>)<span class="op">;</span></span>
<span id="cb3-4"><a href="#cb3-4" aria-hidden="true" tabindex="-1"></a><span class="kw">const</span> config <span class="op">=</span> <span class="pp">require</span>(<span class="st">"./config.json"</span>)<span class="op">;</span></span>
<span id="cb3-5"><a href="#cb3-5" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb3-6"><a href="#cb3-6" aria-hidden="true" tabindex="-1"></a><span class="kw">const</span> app <span class="op">=</span> <span class="fu">express</span>()<span class="op">;</span></span>
<span id="cb3-7"><a href="#cb3-7" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb3-8"><a href="#cb3-8" aria-hidden="true" tabindex="-1"></a>app<span class="op">.</span><span class="fu">listen</span>(config<span class="op">.</span><span class="at">server</span><span class="op">.</span><span class="at">nodePort</span><span class="op">,</span> () <span class="kw">=&gt;</span> &#123;</span>
<span id="cb3-9"><a href="#cb3-9" aria-hidden="true" tabindex="-1"></a>    <span class="bu">console</span><span class="op">.</span><span class="fu">log</span>(<span class="vs">`在端口 </span><span class="sc">$&#123;</span>config<span class="op">.</span><span class="at">server</span><span class="op">.</span><span class="at">nodePort</span><span class="sc">&#125;</span><span class="vs"> 上监听...`</span>)<span class="op">;</span></span>
<span id="cb3-10"><a href="#cb3-10" aria-hidden="true" tabindex="-1"></a>&#125;)<span class="op">;</span></span></code></pre></div>
<p>迄今为止，一切都挺棒的！</p>
<h2 id="通过使用静态的-import-声明语句导入-json-文件">通过使用静态的
<code>import</code> 声明语句导入 JSON 文件</h2>
<p>现在如果说我们要使用原生的 ECMAScript 模块而不是 CommonJS
模块，那么我们必须将 <code>require</code> 的调用转换为静态的
<code>import</code> 声明：</p>
<div class="sourceCode" id="cb4"><pre class="sourceCode typescript"><code class="sourceCode typescript"><span id="cb4-1"><a href="#cb4-1" aria-hidden="true" tabindex="-1"></a><span class="co">// 因为所有的 ECMAScript 模块都默认使用 strict 模式</span></span>
<span id="cb4-2"><a href="#cb4-2" aria-hidden="true" tabindex="-1"></a><span class="co">// 我们不需要再声明 `use strict`</span></span>
<span id="cb4-3"><a href="#cb4-3" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb4-4"><a href="#cb4-4" aria-hidden="true" tabindex="-1"></a><span class="im">import</span> <span class="op">*</span> <span class="im">as</span> express <span class="im">from</span> <span class="st">"express"</span><span class="op">;</span></span>
<span id="cb4-5"><a href="#cb4-5" aria-hidden="true" tabindex="-1"></a><span class="im">import</span> <span class="op">*</span> <span class="im">as</span> config <span class="im">from</span> <span class="st">"./config.json"</span><span class="op">;</span></span>
<span id="cb4-6"><a href="#cb4-6" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb4-7"><a href="#cb4-7" aria-hidden="true" tabindex="-1"></a><span class="kw">const</span> app <span class="op">=</span> <span class="fu">express</span>()<span class="op">;</span></span>
<span id="cb4-8"><a href="#cb4-8" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb4-9"><a href="#cb4-9" aria-hidden="true" tabindex="-1"></a>app<span class="op">.</span><span class="fu">listen</span>(config<span class="op">.</span><span class="at">server</span><span class="op">.</span><span class="at">nodePort</span><span class="op">,</span> () <span class="kw">=&gt;</span> &#123;</span>
<span id="cb4-10"><a href="#cb4-10" aria-hidden="true" tabindex="-1"></a>    <span class="bu">console</span><span class="op">.</span><span class="fu">log</span>(<span class="vs">`在端口 </span><span class="sc">$&#123;</span>config<span class="op">.</span><span class="at">server</span><span class="op">.</span><span class="at">nodePort</span><span class="sc">&#125;</span><span class="vs"> 上监听...`</span>)<span class="op">;</span></span>
<span id="cb4-11"><a href="#cb4-11" aria-hidden="true" tabindex="-1"></a>&#125;)<span class="op">;</span></span></code></pre></div>
<p>现在，程序在第 2 行中出现了类型错误。TypeScript
不允许我们按照这种方式开箱即用地导入 JSON 模块。这是 TypeScript
团队的一项明智的设计决定：获取较大的 JSON 文件可能会<a href="https://github.com/Microsoft/TypeScript/pull/22167#issuecomment-385479553">消耗大量内存</a>。这就是为什么我们需要通过启用
<code>--resolveJsonModule</code> 编译器标志来选择使用该功能：</p>
<blockquote>
<p>让人们有意识地选择这个做法帮助着用户了解耗费的成本。</p>
</blockquote>
<p>让我们转到 <strong>tsconfig.json</strong>
文件并在其中启用该选项：</p>
<div class="sourceCode" id="cb5"><pre class="sourceCode json"><code class="sourceCode json"><span id="cb5-1"><a href="#cb5-1" aria-hidden="true" tabindex="-1"></a><span class="fu">&#123;</span></span>
<span id="cb5-2"><a href="#cb5-2" aria-hidden="true" tabindex="-1"></a>    <span class="dt">"compilerOptions"</span><span class="fu">:</span> <span class="fu">&#123;</span></span>
<span id="cb5-3"><a href="#cb5-3" aria-hidden="true" tabindex="-1"></a>        <span class="dt">"target"</span><span class="fu">:</span> <span class="st">"es2015"</span><span class="fu">,</span></span>
<span id="cb5-4"><a href="#cb5-4" aria-hidden="true" tabindex="-1"></a>        <span class="dt">"module"</span><span class="fu">:</span> <span class="st">"commonjs"</span><span class="fu">,</span></span>
<span id="cb5-5"><a href="#cb5-5" aria-hidden="true" tabindex="-1"></a>        <span class="dt">"strict"</span><span class="fu">:</span> <span class="kw">true</span><span class="fu">,</span></span>
<span id="cb5-6"><a href="#cb5-6" aria-hidden="true" tabindex="-1"></a>        <span class="dt">"moduleResolution"</span><span class="fu">:</span> <span class="st">"node"</span><span class="fu">,</span></span>
<span id="cb5-7"><a href="#cb5-7" aria-hidden="true" tabindex="-1"></a>        <span class="dt">"resolveJsonModule"</span><span class="fu">:</span> <span class="kw">true</span></span>
<span id="cb5-8"><a href="#cb5-8" aria-hidden="true" tabindex="-1"></a>    <span class="fu">&#125;</span></span>
<span id="cb5-9"><a href="#cb5-9" aria-hidden="true" tabindex="-1"></a><span class="fu">&#125;</span></span></code></pre></div>
<p>在声明了 <code>--resolveJsonModule</code> 以后，我们的 TypeScript
文件现在不会再出现类型错误。而且，我们现在还拥有了类型检查和自动补全功能！</p>
<p>如果使用上面显示的编译器选项编译 TypeScript 文件，则会得到以下
JavaScript 输出：</p>
<div class="sourceCode" id="cb6"><pre class="sourceCode typescript"><code class="sourceCode typescript"><span id="cb6-1"><a href="#cb6-1" aria-hidden="true" tabindex="-1"></a><span class="st">"use strict"</span><span class="op">;</span></span>
<span id="cb6-2"><a href="#cb6-2" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb6-3"><a href="#cb6-3" aria-hidden="true" tabindex="-1"></a><span class="bu">Object</span><span class="op">.</span><span class="fu">defineProperty</span>(exports<span class="op">,</span> <span class="st">"__esModule"</span><span class="op">,</span> &#123;value<span class="op">:</span> <span class="kw">true</span>&#125;)<span class="op">;</span></span>
<span id="cb6-4"><a href="#cb6-4" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb6-5"><a href="#cb6-5" aria-hidden="true" tabindex="-1"></a><span class="kw">const</span> express <span class="op">=</span> <span class="pp">require</span>(<span class="st">"express"</span>)<span class="op">;</span></span>
<span id="cb6-6"><a href="#cb6-6" aria-hidden="true" tabindex="-1"></a><span class="kw">const</span> config <span class="op">=</span> <span class="pp">require</span>(<span class="st">"./config.json"</span>)<span class="op">;</span></span>
<span id="cb6-7"><a href="#cb6-7" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb6-8"><a href="#cb6-8" aria-hidden="true" tabindex="-1"></a><span class="kw">const</span> app <span class="op">=</span> <span class="fu">express</span>()<span class="op">;</span></span>
<span id="cb6-9"><a href="#cb6-9" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb6-10"><a href="#cb6-10" aria-hidden="true" tabindex="-1"></a>app<span class="op">.</span><span class="fu">listen</span>(config<span class="op">.</span><span class="at">server</span><span class="op">.</span><span class="at">nodePort</span><span class="op">,</span> () <span class="kw">=&gt;</span> &#123;</span>
<span id="cb6-11"><a href="#cb6-11" aria-hidden="true" tabindex="-1"></a>    <span class="bu">console</span><span class="op">.</span><span class="fu">log</span>(<span class="vs">`在端口 </span><span class="sc">$&#123;</span>config<span class="op">.</span><span class="at">server</span><span class="op">.</span><span class="at">nodePort</span><span class="sc">&#125;</span><span class="vs"> 上监听...`</span>)<span class="op">;</span></span>
<span id="cb6-12"><a href="#cb6-12" aria-hidden="true" tabindex="-1"></a>&#125;)<span class="op">;</span></span></code></pre></div>
<p>注意，输出与我们的第一个方法（使用 <code>require</code>）
几乎相同：</p>
<div class="sourceCode" id="cb7"><pre class="sourceCode typescript"><code class="sourceCode typescript"><span id="cb7-1"><a href="#cb7-1" aria-hidden="true" tabindex="-1"></a><span class="st">"use strict"</span><span class="op">;</span></span>
<span id="cb7-2"><a href="#cb7-2" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb7-3"><a href="#cb7-3" aria-hidden="true" tabindex="-1"></a><span class="kw">const</span> express <span class="op">=</span> <span class="pp">require</span>(<span class="st">"express"</span>)<span class="op">;</span></span>
<span id="cb7-4"><a href="#cb7-4" aria-hidden="true" tabindex="-1"></a><span class="kw">const</span> config <span class="op">=</span> <span class="pp">require</span>(<span class="st">"./config.json"</span>)<span class="op">;</span></span>
<span id="cb7-5"><a href="#cb7-5" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb7-6"><a href="#cb7-6" aria-hidden="true" tabindex="-1"></a><span class="kw">const</span> app <span class="op">=</span> <span class="fu">express</span>()<span class="op">;</span></span>
<span id="cb7-7"><a href="#cb7-7" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb7-8"><a href="#cb7-8" aria-hidden="true" tabindex="-1"></a>app<span class="op">.</span><span class="fu">listen</span>(config<span class="op">.</span><span class="at">server</span><span class="op">.</span><span class="at">nodePort</span><span class="op">,</span> () <span class="kw">=&gt;</span> &#123;</span>
<span id="cb7-9"><a href="#cb7-9" aria-hidden="true" tabindex="-1"></a>    <span class="bu">console</span><span class="op">.</span><span class="fu">log</span>(<span class="vs">`在端口 </span><span class="sc">$&#123;</span>config<span class="op">.</span><span class="at">server</span><span class="op">.</span><span class="at">nodePort</span><span class="sc">&#125;</span><span class="vs"> 上监听...`</span>)<span class="op">;</span></span>
<span id="cb7-10"><a href="#cb7-10" aria-hidden="true" tabindex="-1"></a>&#125;)<span class="op">;</span></span></code></pre></div>
<p>这就是在 TypeScript 模块中导入 JSON
模块的方法！我们仅需在配置文件中通过设置 <code>resolveJsonModule</code>
这个编译器选项的值为 <code>true</code> 即可启用这个功能！</p>]]></content>
      <categories>
        <category>Computer Science</category>
        <category>Backend</category>
        <category>TypeScript</category>
      </categories>
      <tags>
        <tag>Computer Science</tag>
        <tag>Backend</tag>
        <tag>TypeScript</tag>
      </tags>
  </entry>
  <entry>
    <title>3 个鲜为人知的 Bash 技巧</title>
    <url>/2021/01/26/computer%20science/backend/3-uncommon-bash-tricks-that-you-should-know/</url>
    <content><![CDATA[<blockquote>
<ul>
<li>原文地址：<a href="https://medium.com/better-programming/3-uncommon-bash-tricks-that-you-should-know-c0fc988065c7">3
Uncommon Bash Tricks That You Should Know</a></li>
<li>原文作者：<a href="https://medium.com/@adgefficiency">Adam
Green</a></li>
<li>译者：<a href="https://github.com/PassionPenguin">霜羽
Hoarfroster</a></li>
<li>校对者：<a href="https://github.com/flashhu">flashhu</a>、<a href="https://github.com/plusmultiply0">plusmultiply0</a></li>
</ul>
</blockquote>
<figure>
<img src="https://cdn-images-1.medium.com/max/4000/0*-UdH52A57htDgdu0.png" alt="图源 Matera，摄于意大利">
<figcaption aria-hidden="true">图源 Matera，摄于意大利</figcaption>
</figure>
<p>优秀的开发人员往往键入的内容更少 —— 这也让他们能够：</p>
<ul>
<li>更快地工作</li>
<li>更准确地工作</li>
<li>减少错误</li>
<li>减轻双手疲劳的压力</li>
</ul>
<p>一种减少键入的方法是恰当地使用你的命令行（通常是
Bash），<strong>而本文将要向大家介绍的内容就是 —— 3 个减少键入的 Bash
技巧。</strong></p>
<p>本文中介绍的 3 个 Bash 技巧是：</p>
<ol type="1">
<li>使用 <code>&#123;a,b&#125;</code> —— 扩展参数，以避免再次键入单个命令</li>
<li>使用 <code>$_</code> ——
访问最后一个参数，以避免从最后一个命令中重新键入</li>
<li>使用 <code>^old^new</code> —— 快速更改最后一条命令的一部分</li>
</ol>
<p>所有这些技巧都与 zsh 兼容。</p>
<p><strong>本文输入的命令均以 <code>$</code>
开头。对于命令行解析后的代码，我将在相关代码下面以不带 <code>$</code>
的单独一行写出这句代码等同的解析后的代码。</strong></p>
<h2 id="ab-拓展参数"><code>&#123;a,b&#125;</code> 拓展参数</h2>
<p>当我们在编写命令时，我们常会重复输入同一个命令。</p>
<p>以更改文件后缀为例，我们一般使用的是 <code>mv</code>：</p>
<div class="sourceCode" id="cb1"><pre class="sourceCode bash"><code class="sourceCode bash"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a><span class="ex">$</span> mv README.txt README.md</span></code></pre></div>
<p>注意到我们写了两次 README，而参数扩展就可以避免这种重复 ——
更改文件的后缀而无需输入 README 两次：</p>
<div class="sourceCode" id="cb2"><pre class="sourceCode bash"><code class="sourceCode bash"><span id="cb2-1"><a href="#cb2-1" aria-hidden="true" tabindex="-1"></a><span class="ex">$</span> mv README.<span class="dt">&#123;txt</span><span class="op">,</span><span class="dt">md&#125;</span></span>
<span id="cb2-2"><a href="#cb2-2" aria-hidden="true" tabindex="-1"></a><span class="fu">mv</span> README.txt README.md</span></code></pre></div>
<p>我们使用的参数扩展为 <code>&#123;txt,md&#125;</code>，而它将会扩展为两个参数 ——
<code>txt md</code>（会以空格分隔）。</p>
<p><strong>参数扩展会为花括号内，以逗号分割的每个元素分别创建一个参数：</strong></p>
<div class="sourceCode" id="cb3"><pre class="sourceCode bash"><code class="sourceCode bash"><span id="cb3-1"><a href="#cb3-1" aria-hidden="true" tabindex="-1"></a><span class="ex">$</span> echo <span class="dt">&#123;1</span><span class="op">,</span><span class="dt">2</span><span class="op">,</span><span class="dt">3&#125;</span></span>
<span id="cb3-2"><a href="#cb3-2" aria-hidden="true" tabindex="-1"></a><span class="ex">1</span> 2 3</span>
<span id="cb3-3"><a href="#cb3-3" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb3-4"><a href="#cb3-4" aria-hidden="true" tabindex="-1"></a><span class="ex">$</span> echo pre<span class="dt">&#123;1</span><span class="op">,</span><span class="dt">2</span><span class="op">,</span><span class="dt">3&#125;</span></span>
<span id="cb3-5"><a href="#cb3-5" aria-hidden="true" tabindex="-1"></a><span class="ex">pre1</span> pre2 pre3</span></code></pre></div>
<p>空元素将创建不带任何替换项的参数：</p>
<div class="sourceCode" id="cb4"><pre class="sourceCode bash"><code class="sourceCode bash"><span id="cb4-1"><a href="#cb4-1" aria-hidden="true" tabindex="-1"></a><span class="ex">$</span> echo pre<span class="dt">&#123;</span><span class="op">,</span><span class="dt">1</span><span class="op">,</span><span class="dt">2&#125;</span>fix</span>
<span id="cb4-2"><a href="#cb4-2" aria-hidden="true" tabindex="-1"></a><span class="ex">prefix</span> pre1fix pre2fix</span></code></pre></div>
<p>另一个例子 —— 我们将要把 <code>data</code> 文件夹中的
<code>models</code> 文件夹重命名为 <code>ml</code>：</p>
<div class="sourceCode" id="cb5"><pre class="sourceCode bash"><code class="sourceCode bash"><span id="cb5-1"><a href="#cb5-1" aria-hidden="true" tabindex="-1"></a><span class="ex">$</span> mv data/models data/ml</span></code></pre></div>
<p>我们可以使用参数扩展来节省重新输入 <code>data/</code> 的时间：</p>
<div class="sourceCode" id="cb6"><pre class="sourceCode bash"><code class="sourceCode bash"><span id="cb6-1"><a href="#cb6-1" aria-hidden="true" tabindex="-1"></a><span class="ex">$</span> mv data/<span class="dt">&#123;models</span><span class="op">,</span><span class="dt">ml&#125;</span></span>
<span id="cb6-2"><a href="#cb6-2" aria-hidden="true" tabindex="-1"></a><span class="fu">mv</span> data/models data/ml</span></code></pre></div>
<p>我们可以使用带有数字序列的参数扩展 ——
这在创建顺序编号目录时很有用：</p>
<div class="sourceCode" id="cb7"><pre class="sourceCode bash"><code class="sourceCode bash"><span id="cb7-1"><a href="#cb7-1" aria-hidden="true" tabindex="-1"></a><span class="ex">$</span> mkdir data<span class="dt">&#123;</span><span class="dv">0</span><span class="dt">..</span><span class="dv">2</span><span class="dt">&#125;</span></span>
<span id="cb7-2"><a href="#cb7-2" aria-hidden="true" tabindex="-1"></a><span class="fu">mkdir</span> data0 data1 data2</span></code></pre></div>
<p>我们还可以在<strong>参数内部进行参数扩展</strong> ——
例如，更改路径中的文件夹名称：</p>
<div class="sourceCode" id="cb8"><pre class="sourceCode bash"><code class="sourceCode bash"><span id="cb8-1"><a href="#cb8-1" aria-hidden="true" tabindex="-1"></a><span class="ex">$</span> cat models/<span class="dt">&#123;baseline</span><span class="op">,</span><span class="dt">final&#125;</span>/data.csv</span>
<span id="cb8-2"><a href="#cb8-2" aria-hidden="true" tabindex="-1"></a><span class="fu">cat</span> models/baseline/data.csv models/final/data.csv</span></code></pre></div>
<p>最后一个示例：在 <code>mv</code> 命令中，我们使用了 3 个参数 ——
将两个 Python 文件移动到 tests 文件夹中：</p>
<div class="sourceCode" id="cb9"><pre class="sourceCode bash"><code class="sourceCode bash"><span id="cb9-1"><a href="#cb9-1" aria-hidden="true" tabindex="-1"></a><span class="ex">$</span> mv test_unit.py test_system.py tests</span></code></pre></div>
<h3 id="小结">小结</h3>
<p><strong>每当你在单个命令中多次键入某些内容时，参数扩展极大可能可以帮助你节省精力。</strong></p>
<h2 id="使用-_-使用访问最后一个参数">使用 <code>$_</code>
使用访问最后一个参数</h2>
<p>终端由一系列命令操作构成，而我们经常在多个命令之间重用信息。</p>
<p>如果说我们前面的技巧，参数扩展，是用于减少在单个命令上的键入的。那么现在这个技巧则是用于减少对多个命令的键入。</p>
<p>以创建文件夹并将当前目录转移到其中的情况为例：</p>
<div class="sourceCode" id="cb10"><pre class="sourceCode bash"><code class="sourceCode bash"><span id="cb10-1"><a href="#cb10-1" aria-hidden="true" tabindex="-1"></a><span class="ex">$</span> mkdir temp</span>
<span id="cb10-2"><a href="#cb10-2" aria-hidden="true" tabindex="-1"></a><span class="ex">$</span> cd temp</span></code></pre></div>
<p>现在我们其实可以通过使用 <code>$_</code>
<strong>将上个命令的参数传递过来</strong>，避免让自己重复键入同样的内容：</p>
<div class="sourceCode" id="cb11"><pre class="sourceCode bash"><code class="sourceCode bash"><span id="cb11-1"><a href="#cb11-1" aria-hidden="true" tabindex="-1"></a><span class="ex">$</span> mkdir temp    </span>
<span id="cb11-2"><a href="#cb11-2" aria-hidden="true" tabindex="-1"></a><span class="ex">$</span> cd <span class="va">$_</span> </span>
<span id="cb11-3"><a href="#cb11-3" aria-hidden="true" tabindex="-1"></a><span class="bu">cd</span> temp </span></code></pre></div>
<p>上面的代码中，我们使用了 <code>$_</code>
访问上一个命令的最后一个参数，在本例中这个参数为 <code>temp</code>。</p>
<p>想要重用上一个命令的最后一个参数（本例中为
<code>temp</code>）的场景其实非常普遍，以至于 Bash
会将其存储在一个特殊的变量 <code>_</code> 中。我们需要使用
<code>$</code> 前缀来访问它（与 <code>$PATH</code> 或 <code>$HOME</code>
相同）。</p>
<p>下面是使用 <code>$_</code> 的另一个示例 —— 移动文件并借助
<code>cat</code> 使用打印内容到 <code>STDOUT</code>：</p>
<div class="sourceCode" id="cb12"><pre class="sourceCode bash"><code class="sourceCode bash"><span id="cb12-1"><a href="#cb12-1" aria-hidden="true" tabindex="-1"></a><span class="ex">$</span> mv main.py src/main.py </span>
<span id="cb12-2"><a href="#cb12-2" aria-hidden="true" tabindex="-1"></a><span class="ex">$</span> cat src/main.py</span></code></pre></div>
<p>那么现在我们该如何再次重用最后一个参数 <code>src/main.py</code>？</p>
<p>你可以使用以下命令重写此代码，<code>$_</code>
在第二个命令中会自动替换为 <code>src/main.py</code>：</p>
<div class="sourceCode" id="cb13"><pre class="sourceCode bash"><code class="sourceCode bash"><span id="cb13-1"><a href="#cb13-1" aria-hidden="true" tabindex="-1"></a><span class="ex">$</span> mv main.py src/main.py </span>
<span id="cb13-2"><a href="#cb13-2" aria-hidden="true" tabindex="-1"></a><span class="ex">$</span> cat <span class="va">$_</span></span>
<span id="cb13-3"><a href="#cb13-3" aria-hidden="true" tabindex="-1"></a><span class="fu">cat</span> src/main.py</span></code></pre></div>
<p>使用 <code>$_</code>
意味着你不需要重写复杂的文件路径，从而不会在重新键入时出错。</p>
<h3 id="小结-1">小结</h3>
<p><strong>每当你需要在多个命令重复键入某些内容时，使用 <code>$_</code>
可能有助于减轻疲惫的双手的压力。</strong></p>
<h2 id="使用-oldnew-快速替换">使用 <code>^old^new</code> 快速替换</h2>
<p>有时，我们可能在命令行管理程序中运行了一个命令，并很快意识到自己在命令中犯了一个错误。</p>
<p>但其实我们无需再次键入命令，我们可以使用快速替换，通过更换上一个命令中的内容来修复错误。</p>
<p>举个例子 —— 你希望通过 ssh 连接到服务器，并运行了命令去连接 ——
运行后才意识到用户名应该是 user 而非 ubuntu！</p>
<div class="sourceCode" id="cb14"><pre class="sourceCode bash"><code class="sourceCode bash"><span id="cb14-1"><a href="#cb14-1" aria-hidden="true" tabindex="-1"></a><span class="ex">$</span> ssh ubuntu@198.compute.com</span></code></pre></div>
<p>你可以<strong>使用快速替换来更改所需的部分</strong>，而不必再次重新键入整个命令以在此处将
ubuntu 改为 user：</p>
<div class="sourceCode" id="cb15"><pre class="sourceCode bash"><code class="sourceCode bash"><span id="cb15-1"><a href="#cb15-1" aria-hidden="true" tabindex="-1"></a><span class="ex">$</span> ^ubuntu^user</span>
<span id="cb15-2"><a href="#cb15-2" aria-hidden="true" tabindex="-1"></a><span class="fu">ssh</span> user@198.compute.com</span></code></pre></div>
<p>快速替换的格式是 <code>^old^new</code>，等效于：</p>
<div class="sourceCode" id="cb16"><pre class="sourceCode bash"><code class="sourceCode bash"><span id="cb16-1"><a href="#cb16-1" aria-hidden="true" tabindex="-1"></a><span class="ex">$</span> !!:s/old/new</span></code></pre></div>
<p><code>!!</code> 用于获取最后一个命令，而 <code>:s</code>
是替换的正则表达式。我想你会同意 <code>^old^new</code>
减轻了不少工作负担！</p>
<h3 id="小结-2">小结</h3>
<p><strong>当你写错了命令，并且命令不方便重写（例如很长），那么，使用
<code>^old^new</code> 能够极大的减轻你的麻烦。</strong></p>
<hr>
<p>感谢阅读！</p>]]></content>
      <categories>
        <category>Computer Science</category>
        <category>Backend</category>
        <category>Bash</category>
      </categories>
      <tags>
        <tag>Computer Science</tag>
        <tag>Backend</tag>
        <tag>Bash</tag>
      </tags>
  </entry>
  <entry>
    <title>UIKit 和 SwiftUI：我该选择哪一个运用在实际产品开发中？</title>
    <url>/2021/01/25/computer%20science/ios/uikit-or-swiftui-which-should-you-use-in-production/</url>
    <content><![CDATA[<blockquote>
<ul>
<li>原文地址：<a href="https://medium.com/better-programming/uikit-or-swiftui-which-should-you-use-in-production-f57258bc6ad5">UIKit
or SwiftUI: Which Should You Use in Production?</a></li>
<li>原文作者：<a href="https://medium.com/@nalexn">Alexey
Naumov</a></li>
<li>译者：<a href="https://github.com/PassionPenguin">霜羽
Hoarfroster</a></li>
<li>校对者：<a href="https://github.com/zhuzilin">Zilin Zhu</a>、<a href="https://github.com/lsvih">lsvih</a></li>
</ul>
</blockquote>
<figure>
<img src="https://cdn-images-1.medium.com/max/11516/0*uqSWA_30Auiz_7F4" alt="图自 Mario Dobelmann 源于 Unsplash">
<figcaption aria-hidden="true">图自 <a href="https://unsplash.com/@mariodobelmann?utm_source=medium&amp;utm_medium=referral">Mario
Dobelmann</a> 源于 <a href="https://unsplash.com?utm_source=medium&amp;utm_medium=referral">Unsplash</a></figcaption>
</figure>
<p>Apple 最近发布了 iOS 14 —— 这意味着 Apple
已经给了开发者们一年时间缓冲决定是否使用 SwiftUI 了。而且这意味着
SwiftUI
不仅可以被爱好者们在其闲余的项目中使用，而且要被企业团队评估是否能在其发布的应用中使用了。</p>
<p>从每个人的评论的字面上看，大家都说编写 SwiftUI 代码很有趣，但是
SwiftUI
究竟是仅仅只能充当一个玩具喂饱开发者们的好奇心，还是真的可以当作一个专业的工具在实际生产中使用呢？而如果我们需要在实际生产中使用
SwiftUI，那我们就需要以对待一个专业工具而非对待玩物的态度，开始着手考虑它的稳定性和灵活性了。</p>
<p>那我们应该在什么时候开始在实际生产的应用的代码中使用 SwiftUI？</p>
<p>如果您准备在 2020 年至 2022
年之间开始一个新的重大项目，这个问题着实很难回答。</p>
<p>SwiftUI 带来了不少创新，但是即使在 iOS 14 上运行使用 SwiftUI
构建的应用，我们<a href="https://steipete.com/posts/state-of-swiftui/">仍然会遇到错误，并且
SwiftUI 的自定义灵活性不足</a> 。</p>
<p>尽管可以适时地使用 UIKit
来缓解这些问题，但您能否估计有多少代码最终是用 UIKit
写的呢？从长远来看，SwiftUI 有没有可能成为负担，使您觉得不如单纯使用
UIKit 呢？</p>
<p>真要解决这个问题，我们只能打赌到了 iOS 15 的发布前后，SwiftUI
的问题都被解决了。这意味着最快需要到 2022 年（iOS 16
发布的时候），我们才能完全信任 SwiftUI。</p>
<p>在本文中，我将详细介绍如何在如下两种情况下搭建项目：</p>
<ol type="1">
<li>如果您希望您的应用支持 iOS 11 或 iOS
12，但考虑在未来将应用程序迁移到 SwiftUI。</li>
<li>如果您的应用只用支持 iOS 13+，但希望控制 SwiftUI
库可能会带来的相关的风险，并希望能够同时无缝回退至 UIKit。</li>
</ol>
<h2 id="这是个黏糊糊的-ui-框架">这是个黏糊糊的 UI 框架</h2>
<p>从过往的经验上看，UI 框架对于移动应用程序的结构体系有着非常大的影响
—— 在 iOS 开发上，我们使用 UIKit 并围绕它构建了几乎所有其他的代码。</p>
<p>回忆一下您上一个使用了 UIKit 的项目，并尝试评估一下，如果要完全摆脱
UIKit，将其替换为另一个 UI 框架（例如 <a href="https://github.com/texturegroup/texture/">AsyncDisplayKit</a>
需要耗费多少精力？</p>
<p>—— 对于大多数项目，这可能意味着要完全重写代码。</p>
<p>网络开发者们会嘲笑我们，毕竟他们总是在各种 UI
框架中切换着使用。因此，他们早已定下了应用与依赖库之间的原则，并将 UI
仅仅当作程序的其中一小部分，就像具体使用哪种数据库一样，无关紧要。</p>
<p>这是否意味着我们（移动开发人员）将 UI
与业务逻辑层捆绑的太死了？可是我们应该做到了啊 —— MVC、MVVM、VIPER
等框架都在帮助着我们。</p>
<p>但我们仍然受困于 UI 库啊。</p>
<p>移动应用很少负责任何核心的业务逻辑 ——
例如计算贷款利息并批准贷款。每个企业希望最大程度地减少各种风险，因此他们会让应用程序上传数据并在后端完成计算。</p>
<p>但是，现代移动应用程序上仍然有很多业务逻辑，但是这种计算与上面提到的那些计算是不同的
—— 它只专注于 UI 的呈现，而不是业务运行的核心逻辑。</p>
<p>这意味着我们需要做得更好 —— 将与 UI 呈现相关的计算与正在使用的 UI
框架分离。</p>
<p>如果我们不这样做，也难怪框架会完全捆绑到代码库中。</p>
<p>UIKit 和 SwiftUI 的 API 都粘在了别的非表示层代码中 ——
这些框架正在迫使开发人员将他们变成应用的核心，推动将表示层与其他所有的东西紧密联系，甚至是在根本不是
UI 的地方也要与 UI 捆绑使用！</p>
<p>以 SwiftUI 中的 <code>@FetchRequest</code> 为例。它在表示层中捆绑了
<code>CoreData</code> 模型。看起来的确很是方便。但这同时严重违背了 CS
中的多种软件设计原则和最佳做法 ——
这样的代码可以在短期内节省时间，但从长远来看可能会对项目造成极大的危害。</p>
<p><code>@AppStorage</code>
怎么样？数据、文件操作就在表示层中实现。那您又该如何测试这些代码？您可以轻松识别容器中的键名的冲突吗？您能否能将其无缝迁移到其他数据存储类型，例如使用钥匙串存储数据？</p>
<p>当开发速度得以最大化的提高，我们都忽略了质量、可维护性和代码重用性。</p>
<p>那不同界面之间的导航又会如何表现呢？</p>
<p>UIKit 总是对我们耳语：“噢！你快点用
<code>presentViewController(:，animation：，completion :);</code>
代码替换掉旧代码吧！不要再使用那些代码了！”</p>
<p>而 SwiftUI 不会低语 ——
它只会在向我们大声嚷嚷：“听我的，除非你按照我想要的方式来做，要么我就会以精心设计的方式搞垮你的应用！”</p>
<p>有没有一种方法可以保护我们的代码库免受这些野蛮的 API 的侵害？</p>
<p>当然是有的！这种大声嚷嚷的 API 通常情况下是挺好的 ——
让程序员更不容易犯错。但是，当此类 API
无法正常工作时，这就会变成一个巨大的问题，例如 SwiftUI
的自动化页面导航就出现了问题。</p>
<h2 id="布置-ui-界面">布置 UI 界面</h2>
<p>如您所见，框架中处处是陷阱，您使用框架越多的功能，你就越难在特定屏幕或整个应用程序中停止使用此框架。</p>
<p>如果我们希望应用足够的顽强，可以忍耐 UIKit 与 SwiftUI
之间的痛苦过渡（反之亦然），则需要确保表示层和其他层之间不是简简单单的一个木栅栏分割，而是一堵巨墙完全割裂它们。</p>
<p>我指的是，什么都不应该被留下 ——
即使是字符串格式化也应该完全扔出表示层。</p>
<p>您是否可以在没有 UIKit 或 SwiftUI 库的支持下将浮点数
<code>5434.35</code> 转换为
<code>$5,434.35</code>？就让我们在表示层之外完成这项工作！</p>
<p>UI 框架在屏幕之间的导航的 API
是否会让视图粘合其他代码？就让我们把导航隔离开！</p>
<p>我们不仅需要从 UI 层中提取尽可能多的逻辑，而且还需要使 UIKit 组件或
SwiftUI 组件与获取数据的函数完全兼容。</p>
<p>我们如何让 UIKit 和 SwiftUI 之间兼容？</p>
<p>我们知道，SwiftUI 是完全由数据驱动的 ——
需要提供响应式数据的绑定。幸运的是，UIKit 可以与 MVVM
和响应式框架一起变换。</p>
<p>这意味着数据源，委托，目标操作以及其他 UIKit API 应该在 UI
层中被隔离开。</p>
<p>—— <code>import UIKit</code> 不应出现在任何的 ViewModel 中。</p>
<p>我要提醒一下，只要 UI
组件是完全由数据驱动的，则显示模块的确切架构模式并不重要。为了简化示例，我将在本文中提及
MVVM。</p>
<p>现在。我们应该为 ViewModel 使用哪一个响应式框架？我们知道 SwiftUI
仅可以与 <a href="https://developer.apple.com/documentation/combine">Combine</a>
一起使用，而 UIKit 最好与 RxCocoa 一起使用。</p>
<p>—— 两种方法都可行，因此这取决于您是否支持 iOS 13 即 Combine 以及您对
RxSwift 的喜爱程度。</p>
<p>让我们同时考虑下这两个方法吧！</p>
<h2 id="构建-rxswift-和-swiftui-之间的桥梁">构建 RxSwift 和 SwiftUI
之间的桥梁</h2>
<p>从 iOS 13 开始我们就可以使用 Combine 套件，对于仍然需要支持 iOS 11 或
12 的用户来说这可不是个什么好消息。</p>
<p>在这里，我将讨论一种将 UIKit + RxSwift 迁移到 SwiftUI + RxSwift
的简便方法。</p>
<p>考虑一下下面给出的极简配置：</p>
<div class="sourceCode" id="cb1"><pre class="sourceCode swift"><code class="sourceCode swift"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a><span class="kw">class</span> HomeViewModel <span class="op">&#123;</span></span>
<span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a>    </span>
<span id="cb1-3"><a href="#cb1-3" aria-hidden="true" tabindex="-1"></a>    <span class="kw">let</span> <span class="va">isLoadingData</span><span class="op">:</span> Driver<span class="op">&lt;</span>Bool<span class="op">&gt;</span></span>
<span id="cb1-4"><a href="#cb1-4" aria-hidden="true" tabindex="-1"></a>    <span class="kw">let</span> <span class="va">disposeBag</span> <span class="op">=</span> DisposeBag<span class="op">()</span></span>
<span id="cb1-5"><a href="#cb1-5" aria-hidden="true" tabindex="-1"></a>    </span>
<span id="cb1-6"><a href="#cb1-6" aria-hidden="true" tabindex="-1"></a>    <span class="kw">func</span> <span class="fu">doSomething</span><span class="op">()</span> <span class="op">&#123;</span> <span class="op">...</span> <span class="op">&#125;</span></span>
<span id="cb1-7"><a href="#cb1-7" aria-hidden="true" tabindex="-1"></a><span class="op">&#125;</span></span>
<span id="cb1-8"><a href="#cb1-8" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-9"><a href="#cb1-9" aria-hidden="true" tabindex="-1"></a><span class="kw">class</span> HomeViewController<span class="op">:</span> <span class="dt">UIViewController</span> <span class="op">&#123;</span></span>
<span id="cb1-10"><a href="#cb1-10" aria-hidden="true" tabindex="-1"></a>    </span>
<span id="cb1-11"><a href="#cb1-11" aria-hidden="true" tabindex="-1"></a>    <span class="kw">let</span> <span class="va">loadingIndicator</span><span class="op">:</span> UIActivityIndicatorView<span class="op">!</span></span>
<span id="cb1-12"><a href="#cb1-12" aria-hidden="true" tabindex="-1"></a>    <span class="kw">let</span> <span class="va">viewModel</span> <span class="op">=</span> HomeViewModel<span class="op">()</span></span>
<span id="cb1-13"><a href="#cb1-13" aria-hidden="true" tabindex="-1"></a>    <span class="kw">let</span> <span class="va">disposeBag</span> <span class="op">=</span> DisposeBag<span class="op">()</span></span>
<span id="cb1-14"><a href="#cb1-14" aria-hidden="true" tabindex="-1"></a>    </span>
<span id="cb1-15"><a href="#cb1-15" aria-hidden="true" tabindex="-1"></a>    <span class="kw">override</span> <span class="kw">func</span> <span class="fu">viewDidLoad</span><span class="op">()</span> <span class="op">&#123;</span></span>
<span id="cb1-16"><a href="#cb1-16" aria-hidden="true" tabindex="-1"></a>        <span class="kw">super</span><span class="op">.</span>viewDidLoad<span class="op">()</span></span>
<span id="cb1-17"><a href="#cb1-17" aria-hidden="true" tabindex="-1"></a>        </span>
<span id="cb1-18"><a href="#cb1-18" aria-hidden="true" tabindex="-1"></a>        viewModel</span>
<span id="cb1-19"><a href="#cb1-19" aria-hidden="true" tabindex="-1"></a>            <span class="op">.</span>isLoadingData</span>
<span id="cb1-20"><a href="#cb1-20" aria-hidden="true" tabindex="-1"></a>            <span class="op">.</span>drive<span class="op">(</span>loadingIndicator<span class="op">.</span>rx<span class="op">.</span>isAnimating<span class="op">)</span></span>
<span id="cb1-21"><a href="#cb1-21" aria-hidden="true" tabindex="-1"></a>            <span class="op">.</span>disposed<span class="op">(</span>by<span class="op">:</span> disposeBag<span class="op">)</span></span>
<span id="cb1-22"><a href="#cb1-22" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#125;</span></span>
<span id="cb1-23"><a href="#cb1-23" aria-hidden="true" tabindex="-1"></a>    </span>
<span id="cb1-24"><a href="#cb1-24" aria-hidden="true" tabindex="-1"></a>    <span class="at">@IBAction</span> <span class="kw">func</span> <span class="fu">handleButtonPressed</span><span class="op">()</span> <span class="op">&#123;</span></span>
<span id="cb1-25"><a href="#cb1-25" aria-hidden="true" tabindex="-1"></a>        viewModel<span class="op">.</span>doSomething<span class="op">()</span></span>
<span id="cb1-26"><a href="#cb1-26" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#125;</span></span>
<span id="cb1-27"><a href="#cb1-27" aria-hidden="true" tabindex="-1"></a><span class="op">&#125;</span></span></code></pre></div>
<p>这个视图是完全由数据驱动的 —— ViewModel
完全控制视图的状态、内容更改。</p>
<p>那如果让我们在不涉及 ViewModel 的代码的情况下将该界面迁移到
SwiftUI？</p>
<p>有两种方法可以尝试：</p>
<ol type="1">
<li>在原始 ViewModel 中给绑定了 <code>Driver</code>
（或<code>Observable</code>）的 <code>@Published</code>
的变量绑定一个新的 <code>ObservableObject</code>。 2.在 SwiftUI
的视图内，将每个 <code>Driver</code> 适配为 <code>Publisher</code>
并绑定到 <code>@State</code>。</li>
</ol>
<h2 id="由-observable-到-published-的迁移">由 <code>Observable</code> 到
<code>@Published</code> 的迁移</h2>
<p>对于第一种方法，我们需要创建一个新的
<code>ObservableObject</code>，以将原来的 ViewModel 中的每个
<code>Observable</code>变量镜像过去：</p>
<div class="sourceCode" id="cb2"><pre class="sourceCode swift"><code class="sourceCode swift"><span id="cb2-1"><a href="#cb2-1" aria-hidden="true" tabindex="-1"></a><span class="kw">extension</span> HomeViewModel <span class="op">&#123;</span></span>
<span id="cb2-2"><a href="#cb2-2" aria-hidden="true" tabindex="-1"></a>    <span class="kw">class</span> Adapter<span class="op">:</span> <span class="dt">ObservableObject</span> <span class="op">&#123;</span></span>
<span id="cb2-3"><a href="#cb2-3" aria-hidden="true" tabindex="-1"></a>        <span class="kw">let</span> <span class="va">viewModel</span><span class="op">:</span> HomeViewModel</span>
<span id="cb2-4"><a href="#cb2-4" aria-hidden="true" tabindex="-1"></a>        <span class="at">@Published</span> <span class="kw">var</span> <span class="va">isLoadingData</span> <span class="op">=</span> <span class="kw">false</span></span>
<span id="cb2-5"><a href="#cb2-5" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#125;</span></span>
<span id="cb2-6"><a href="#cb2-6" aria-hidden="true" tabindex="-1"></a><span class="op">&#125;</span></span>
<span id="cb2-7"><a href="#cb2-7" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb2-8"><a href="#cb2-8" aria-hidden="true" tabindex="-1"></a><span class="kw">struct</span> HomeView<span class="op">:</span> <span class="dt">View</span> <span class="op">&#123;</span></span>
<span id="cb2-9"><a href="#cb2-9" aria-hidden="true" tabindex="-1"></a>    <span class="kw">let</span> <span class="va">adapter</span><span class="op">:</span> HomeViewModel<span class="op">.</span>Adapter</span>
<span id="cb2-10"><a href="#cb2-10" aria-hidden="true" tabindex="-1"></a>    </span>
<span id="cb2-11"><a href="#cb2-11" aria-hidden="true" tabindex="-1"></a>    <span class="kw">var</span> <span class="va">body</span><span class="op">:</span> some View <span class="op">&#123;</span></span>
<span id="cb2-12"><a href="#cb2-12" aria-hidden="true" tabindex="-1"></a>        <span class="cf">if</span> adapter<span class="op">.</span>isLoadingData <span class="op">&#123;</span></span>
<span id="cb2-13"><a href="#cb2-13" aria-hidden="true" tabindex="-1"></a>            ProgressView<span class="op">()</span></span>
<span id="cb2-14"><a href="#cb2-14" aria-hidden="true" tabindex="-1"></a>        <span class="op">&#125;</span></span>
<span id="cb2-15"><a href="#cb2-15" aria-hidden="true" tabindex="-1"></a>        Button<span class="op">(</span><span class="st">"Do something!"</span><span class="op">)</span> <span class="op">&#123;</span></span>
<span id="cb2-16"><a href="#cb2-16" aria-hidden="true" tabindex="-1"></a>            <span class="kw">self</span><span class="op">.</span>adapter<span class="op">.</span>viewModel<span class="op">.</span>doSomething<span class="op">()</span></span>
<span id="cb2-17"><a href="#cb2-17" aria-hidden="true" tabindex="-1"></a>        <span class="op">&#125;</span></span>
<span id="cb2-18"><a href="#cb2-18" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#125;</span></span>
<span id="cb2-19"><a href="#cb2-19" aria-hidden="true" tabindex="-1"></a><span class="op">&#125;</span></span></code></pre></div>
<p>原来的 ViewModel 和适配器之间的值的绑定代码应尽可能简洁。这是在
<code>Driver</code> 和 <code>Observable</code> 的情况下桥接的样子：</p>
<div class="sourceCode" id="cb3"><pre class="sourceCode swift"><code class="sourceCode swift"><span id="cb3-1"><a href="#cb3-1" aria-hidden="true" tabindex="-1"></a><span class="kw">let</span> <span class="va">observable</span><span class="op">:</span> Observable<span class="op">&lt;</span>Bool<span class="op">&gt;</span> <span class="op">=</span> <span class="op">...</span></span>
<span id="cb3-2"><a href="#cb3-2" aria-hidden="true" tabindex="-1"></a>observable</span>
<span id="cb3-3"><a href="#cb3-3" aria-hidden="true" tabindex="-1"></a>    <span class="op">.</span>bind<span class="op">(</span>to<span class="op">:</span> <span class="kw">self</span><span class="op">.</span>binder<span class="op">(</span>\<span class="op">.</span>isLoadingData<span class="op">))</span></span>
<span id="cb3-4"><a href="#cb3-4" aria-hidden="true" tabindex="-1"></a>    <span class="op">.</span>disposed<span class="op">(</span>by<span class="op">:</span> disposeBag<span class="op">)</span></span>
<span id="cb3-5"><a href="#cb3-5" aria-hidden="true" tabindex="-1"></a>    </span>
<span id="cb3-6"><a href="#cb3-6" aria-hidden="true" tabindex="-1"></a><span class="kw">let</span> <span class="va">driver</span><span class="op">:</span> Driver<span class="op">&lt;</span>Bool<span class="op">&gt;</span> <span class="op">=</span> <span class="op">...</span></span>
<span id="cb3-7"><a href="#cb3-7" aria-hidden="true" tabindex="-1"></a>driver</span>
<span id="cb3-8"><a href="#cb3-8" aria-hidden="true" tabindex="-1"></a>    <span class="op">.</span>drive<span class="op">(</span><span class="kw">self</span><span class="op">.</span>binder<span class="op">(</span>\<span class="op">.</span>name<span class="op">))</span></span>
<span id="cb3-9"><a href="#cb3-9" aria-hidden="true" tabindex="-1"></a>    <span class="op">.</span>disposed<span class="op">(</span>by<span class="op">:</span> disposeBag<span class="op">)</span></span></code></pre></div>
<p>这里我们需要的是使用 RxSwift 的
<code>Binder</code>，它会将值分配给特定的 <code>@Published</code>
值。这是进行桥接的 <code>binder</code> 函数的代码片段：</p>
<div class="sourceCode" id="cb4"><pre class="sourceCode swift"><code class="sourceCode swift"><span id="cb4-1"><a href="#cb4-1" aria-hidden="true" tabindex="-1"></a><span class="kw">extension</span> ObservableObject <span class="op">&#123;</span></span>
<span id="cb4-2"><a href="#cb4-2" aria-hidden="true" tabindex="-1"></a>    <span class="kw">func</span> <span class="fu">binder</span><span class="op">&lt;</span><span class="dt">Value</span><span class="op">&gt;(</span><span class="va">_</span> <span class="va">keyPath</span><span class="op">:</span> <span class="dt">WritableKeyPath</span>&lt;<span class="va">Self</span><span class="op">,</span> <span class="va">Value</span>&gt;<span class="op">)</span> -&gt; <span class="fu">Binder</span><span class="op">&lt;</span><span class="dt">Value</span><span class="op">&gt;</span> <span class="op">&#123;</span></span>
<span id="cb4-3"><a href="#cb4-3" aria-hidden="true" tabindex="-1"></a>        Binder<span class="op">(</span><span class="kw">self</span><span class="op">)</span> <span class="op">&#123;</span> <span class="op">(</span>object<span class="op">,</span> value<span class="op">)</span> <span class="cf">in</span></span>
<span id="cb4-4"><a href="#cb4-4" aria-hidden="true" tabindex="-1"></a>            <span class="kw">var</span> <span class="va">_object</span> <span class="op">=</span> object</span>
<span id="cb4-5"><a href="#cb4-5" aria-hidden="true" tabindex="-1"></a>            _object<span class="op">[</span>keyPath<span class="op">:</span> keyPath<span class="op">]</span> <span class="op">=</span> value</span>
<span id="cb4-6"><a href="#cb4-6" aria-hidden="true" tabindex="-1"></a>        <span class="op">&#125;</span></span>
<span id="cb4-7"><a href="#cb4-7" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#125;</span></span>
<span id="cb4-8"><a href="#cb4-8" aria-hidden="true" tabindex="-1"></a><span class="op">&#125;</span></span></code></pre></div>
<p>回到我们的 ViewModel，您可以在 <code>Adapter</code>
的初始化中进行绑定：</p>
<div class="sourceCode" id="cb5"><pre class="sourceCode swift"><code class="sourceCode swift"><span id="cb5-1"><a href="#cb5-1" aria-hidden="true" tabindex="-1"></a><span class="kw">extension</span> HomeViewModel <span class="op">&#123;</span></span>
<span id="cb5-2"><a href="#cb5-2" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb5-3"><a href="#cb5-3" aria-hidden="true" tabindex="-1"></a>    <span class="kw">class</span> Adapter<span class="op">:</span> <span class="dt">ObservableObject</span> <span class="op">&#123;</span></span>
<span id="cb5-4"><a href="#cb5-4" aria-hidden="true" tabindex="-1"></a>    </span>
<span id="cb5-5"><a href="#cb5-5" aria-hidden="true" tabindex="-1"></a>        <span class="kw">let</span> <span class="va">viewModel</span><span class="op">:</span> HomeViewModel</span>
<span id="cb5-6"><a href="#cb5-6" aria-hidden="true" tabindex="-1"></a>        <span class="kw">private</span> <span class="kw">let</span> <span class="va">disposeBag</span> <span class="op">=</span> DisposeBag<span class="op">()</span></span>
<span id="cb5-7"><a href="#cb5-7" aria-hidden="true" tabindex="-1"></a>        </span>
<span id="cb5-8"><a href="#cb5-8" aria-hidden="true" tabindex="-1"></a>        <span class="at">@Published</span> <span class="kw">var</span> <span class="va">isLoadingData</span> <span class="op">=</span> <span class="kw">false</span></span>
<span id="cb5-9"><a href="#cb5-9" aria-hidden="true" tabindex="-1"></a>        </span>
<span id="cb5-10"><a href="#cb5-10" aria-hidden="true" tabindex="-1"></a>        <span class="kw">init</span><span class="op">(</span>viewModel<span class="op">:</span> HomeViewModel<span class="op">)</span> <span class="op">&#123;</span></span>
<span id="cb5-11"><a href="#cb5-11" aria-hidden="true" tabindex="-1"></a>            <span class="kw">self</span><span class="op">.</span>viewModel <span class="op">=</span> viewModel</span>
<span id="cb5-12"><a href="#cb5-12" aria-hidden="true" tabindex="-1"></a>            viewModel<span class="op">.</span>isLoadingData</span>
<span id="cb5-13"><a href="#cb5-13" aria-hidden="true" tabindex="-1"></a>                <span class="op">.</span>drive<span class="op">(</span><span class="kw">self</span><span class="op">.</span>binder<span class="op">(</span>\<span class="op">.</span>isLoadingData<span class="op">))</span></span>
<span id="cb5-14"><a href="#cb5-14" aria-hidden="true" tabindex="-1"></a>                <span class="op">.</span>disposed<span class="op">(</span>by<span class="op">:</span> <span class="kw">self</span><span class="op">.</span>disposeBag<span class="op">)</span></span>
<span id="cb5-15"><a href="#cb5-15" aria-hidden="true" tabindex="-1"></a>        <span class="op">&#125;</span></span>
<span id="cb5-16"><a href="#cb5-16" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#125;</span></span>
<span id="cb5-17"><a href="#cb5-17" aria-hidden="true" tabindex="-1"></a><span class="op">&#125;</span></span></code></pre></div>
<p>这种方法的一个缺点是必须为您拥有的每个 <code>@Published</code>
变量重复一份模版化的代码。</p>
<hr>
<h2 id="observable-到-state"><code>Observable</code> 到
<code>@State</code></h2>
<p>第二种方法只需要设置较少的代码，并且基于 SwiftUI
变成可以使用外部状态的另一种方式：使用 View 的 <code>onReceive</code>
方法，将值分配给本地的 <code>@State</code>。</p>
<p>这里的好处是我们可以直接在 SwiftUI 视图中使用原始的 ViewModel：</p>
<div class="sourceCode" id="cb6"><pre class="sourceCode swift"><code class="sourceCode swift"><span id="cb6-1"><a href="#cb6-1" aria-hidden="true" tabindex="-1"></a><span class="kw">struct</span> HomeView<span class="op">:</span> <span class="dt">View</span> <span class="op">&#123;</span></span>
<span id="cb6-2"><a href="#cb6-2" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb6-3"><a href="#cb6-3" aria-hidden="true" tabindex="-1"></a>    <span class="kw">let</span> <span class="va">viewModel</span><span class="op">:</span> HomeViewModel</span>
<span id="cb6-4"><a href="#cb6-4" aria-hidden="true" tabindex="-1"></a>    <span class="at">@State</span> <span class="kw">var</span> <span class="va">isLoadingData</span> <span class="op">=</span> <span class="kw">false</span></span>
<span id="cb6-5"><a href="#cb6-5" aria-hidden="true" tabindex="-1"></a>    </span>
<span id="cb6-6"><a href="#cb6-6" aria-hidden="true" tabindex="-1"></a>    <span class="kw">var</span> <span class="va">body</span><span class="op">:</span> some View <span class="op">&#123;</span></span>
<span id="cb6-7"><a href="#cb6-7" aria-hidden="true" tabindex="-1"></a>        <span class="cf">if</span> isLoadingData <span class="op">&#123;</span></span>
<span id="cb6-8"><a href="#cb6-8" aria-hidden="true" tabindex="-1"></a>            ProgressView<span class="op">()</span></span>
<span id="cb6-9"><a href="#cb6-9" aria-hidden="true" tabindex="-1"></a>        <span class="op">&#125;</span></span>
<span id="cb6-10"><a href="#cb6-10" aria-hidden="true" tabindex="-1"></a>        Button<span class="op">(</span><span class="st">"Do something!"</span><span class="op">)</span> <span class="op">&#123;</span></span>
<span id="cb6-11"><a href="#cb6-11" aria-hidden="true" tabindex="-1"></a>            <span class="kw">self</span><span class="op">.</span>viewModel<span class="op">.</span>doSomething<span class="op">()</span></span>
<span id="cb6-12"><a href="#cb6-12" aria-hidden="true" tabindex="-1"></a>        <span class="op">&#125;</span></span>
<span id="cb6-13"><a href="#cb6-13" aria-hidden="true" tabindex="-1"></a>        <span class="op">.</span>onReceive<span class="op">(</span>viewModel<span class="op">.</span>isLoadingData<span class="op">.</span>publisher<span class="op">)</span> <span class="op">&#123;</span></span>
<span id="cb6-14"><a href="#cb6-14" aria-hidden="true" tabindex="-1"></a>            <span class="kw">self</span><span class="op">.</span>isLoadingData <span class="op">=</span> $<span class="dv">0</span></span>
<span id="cb6-15"><a href="#cb6-15" aria-hidden="true" tabindex="-1"></a>        <span class="op">&#125;</span></span>
<span id="cb6-16"><a href="#cb6-16" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#125;</span></span>
<span id="cb6-17"><a href="#cb6-17" aria-hidden="true" tabindex="-1"></a><span class="op">&#125;</span></span></code></pre></div>
<p>这里的 <code>viewModel.isLoadingData</code> 是一个
<code>Driver</code>，也因此我们需要将其转化为 Combine 中的
<code>Publisher</code>。</p>
<p>开源社区中已经发布了 <a href="https://github.com/CombineCommunity/RxCombine">RxCombine</a>
库，该库支持从 <code>Observable</code> 到 <code>Publisher</code>
的桥接，因此使用该库支持 <code>Driver</code> 会很简单：</p>
<div class="sourceCode" id="cb7"><pre class="sourceCode swift"><code class="sourceCode swift"><span id="cb7-1"><a href="#cb7-1" aria-hidden="true" tabindex="-1"></a><span class="kw">import</span> <span class="im">RxCombine</span></span>
<span id="cb7-2"><a href="#cb7-2" aria-hidden="true" tabindex="-1"></a><span class="kw">import</span> <span class="im">RxCocoa</span></span>
<span id="cb7-3"><a href="#cb7-3" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb7-4"><a href="#cb7-4" aria-hidden="true" tabindex="-1"></a><span class="kw">extension</span> Driver <span class="op">&#123;</span></span>
<span id="cb7-5"><a href="#cb7-5" aria-hidden="true" tabindex="-1"></a>    <span class="kw">var</span> <span class="va">publisher</span><span class="op">:</span> AnyPublisher<span class="op">&lt;</span>Element<span class="op">,</span> Never<span class="op">&gt;</span> <span class="op">&#123;</span></span>
<span id="cb7-6"><a href="#cb7-6" aria-hidden="true" tabindex="-1"></a>        <span class="kw">return</span> <span class="kw">self</span><span class="op">.</span>asObservable<span class="op">()</span></span>
<span id="cb7-7"><a href="#cb7-7" aria-hidden="true" tabindex="-1"></a>            <span class="op">.</span>publisher</span>
<span id="cb7-8"><a href="#cb7-8" aria-hidden="true" tabindex="-1"></a>            <span class="op">.</span><span class="cf">catch</span> <span class="op">&#123;</span> _ <span class="cf">in</span> Empty<span class="op">&lt;</span>Element<span class="op">,</span> Never<span class="op">&gt;()</span> <span class="op">&#125;</span></span>
<span id="cb7-9"><a href="#cb7-9" aria-hidden="true" tabindex="-1"></a>            <span class="op">.</span>eraseToAnyPublisher<span class="op">()</span></span>
<span id="cb7-10"><a href="#cb7-10" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#125;</span></span>
<span id="cb7-11"><a href="#cb7-11" aria-hidden="true" tabindex="-1"></a><span class="op">&#125;</span></span></code></pre></div>
<h2 id="将-uikit-与-combine-连接">将 UIKit 与 Combine 连接</h2>
<p>如果您可以只支持 iOS 13+，则可以考虑在应用程序中使用 Combine
构建网络和其他非 UI 模块。</p>
<p>即使将 Combine 与 UIKit
绑定起来有些不便，但从长远来看，当项目完全迁移到 SwiftUI 时，选择
Combine 作为驱动应用程序中数据的核心框架总是有所裨益的。</p>
<p>而且同时，您可以在 <code>sink</code> 函数中更新 UIKit 视图：</p>
<div class="sourceCode" id="cb8"><pre class="sourceCode swift"><code class="sourceCode swift"><span id="cb8-1"><a href="#cb8-1" aria-hidden="true" tabindex="-1"></a>viewModel<span class="op">.</span>$userName</span>
<span id="cb8-2"><a href="#cb8-2" aria-hidden="true" tabindex="-1"></a>    <span class="op">.</span>sink <span class="op">&#123;</span> <span class="op">[</span><span class="kw">weak</span> <span class="kw">self</span><span class="op">]</span> name <span class="cf">in</span></span>
<span id="cb8-3"><a href="#cb8-3" aria-hidden="true" tabindex="-1"></a>        <span class="kw">self</span><span class="op">?.</span>nameLabel<span class="op">.</span>text <span class="op">=</span> name</span>
<span id="cb8-4"><a href="#cb8-4" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#125;</span></span>
<span id="cb8-5"><a href="#cb8-5" aria-hidden="true" tabindex="-1"></a>    <span class="op">.</span>store<span class="op">(</span><span class="cf">in</span><span class="op">:</span> <span class="op">&amp;</span>cancelBag<span class="op">)</span></span></code></pre></div>
<p>或者，您可以利用上述 RxCombine 库将 RxCocoa 中可用的数据绑定转换为
<code>Publisher</code> 或 <code>Observable</code>。</p>
<div class="sourceCode" id="cb9"><pre class="sourceCode swift"><code class="sourceCode swift"><span id="cb9-1"><a href="#cb9-1" aria-hidden="true" tabindex="-1"></a>viewModel<span class="op">.</span>$userName <span class="co">// Publisher</span></span>
<span id="cb9-2"><a href="#cb9-2" aria-hidden="true" tabindex="-1"></a>    <span class="op">.</span>asObservable<span class="op">()</span> <span class="co">// Observable</span></span>
<span id="cb9-3"><a href="#cb9-3" aria-hidden="true" tabindex="-1"></a>    <span class="op">.</span>bind<span class="op">(</span>to<span class="op">:</span> nameLabel<span class="op">.</span>rx<span class="op">.</span>text<span class="op">)</span> <span class="co">// RxCocoa 绑定</span></span>
<span id="cb9-4"><a href="#cb9-4" aria-hidden="true" tabindex="-1"></a>    <span class="op">.</span>disposed<span class="op">(</span>by<span class="op">:</span> disposeBag<span class="op">)</span></span></code></pre></div>
<p>我应该注意，如果我们在应用程序中选择 Combine 作为主要的响应框架，则
RxSwift、RxCocoa 和 RxCombine 的使用应仅限于将数据绑定到 UIKit
视图，这样我们就可以轻松摆脱这些依赖关系以及应用程序中的最后一个 UIKit
视图。</p>
<p>在这种情况下，ViewModel 应该仅使用 Combine 来构建（不要再使用
<code>import RxSwift</code> !）。</p>
<p>让我们一起回到原始的示例：</p>
<div class="sourceCode" id="cb10"><pre class="sourceCode swift"><code class="sourceCode swift"><span id="cb10-1"><a href="#cb10-1" aria-hidden="true" tabindex="-1"></a><span class="kw">class</span> HomeViewModel<span class="op">:</span> <span class="dt">ObservableObject</span> <span class="op">&#123;</span></span>
<span id="cb10-2"><a href="#cb10-2" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb10-3"><a href="#cb10-3" aria-hidden="true" tabindex="-1"></a>    <span class="at">@Published</span> <span class="kw">var</span> <span class="va">isLoadingData</span> <span class="op">=</span> <span class="kw">false</span></span>
<span id="cb10-4"><a href="#cb10-4" aria-hidden="true" tabindex="-1"></a>    <span class="kw">func</span> <span class="fu">doSomething</span><span class="op">()</span> <span class="op">&#123;</span> <span class="op">...</span> <span class="op">&#125;</span></span>
<span id="cb10-5"><a href="#cb10-5" aria-hidden="true" tabindex="-1"></a><span class="op">&#125;</span></span>
<span id="cb10-6"><a href="#cb10-6" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb10-7"><a href="#cb10-7" aria-hidden="true" tabindex="-1"></a><span class="kw">class</span> HomeViewController<span class="op">:</span> <span class="dt">UIViewController</span> <span class="op">&#123;</span></span>
<span id="cb10-8"><a href="#cb10-8" aria-hidden="true" tabindex="-1"></a>    </span>
<span id="cb10-9"><a href="#cb10-9" aria-hidden="true" tabindex="-1"></a>    <span class="kw">let</span> <span class="va">loadingIndicator</span><span class="op">:</span> UIActivityIndicatorView<span class="op">!</span></span>
<span id="cb10-10"><a href="#cb10-10" aria-hidden="true" tabindex="-1"></a>    <span class="kw">let</span> <span class="va">viewModel</span> <span class="op">=</span> HomeViewModel<span class="op">()</span></span>
<span id="cb10-11"><a href="#cb10-11" aria-hidden="true" tabindex="-1"></a>    <span class="kw">let</span> <span class="va">disposeBag</span> <span class="op">=</span> DisposeBag<span class="op">()</span></span>
<span id="cb10-12"><a href="#cb10-12" aria-hidden="true" tabindex="-1"></a>    </span>
<span id="cb10-13"><a href="#cb10-13" aria-hidden="true" tabindex="-1"></a>    <span class="kw">override</span> <span class="kw">func</span> <span class="fu">viewDidLoad</span><span class="op">()</span> <span class="op">&#123;</span></span>
<span id="cb10-14"><a href="#cb10-14" aria-hidden="true" tabindex="-1"></a>        <span class="kw">super</span><span class="op">.</span>viewDidLoad<span class="op">()</span></span>
<span id="cb10-15"><a href="#cb10-15" aria-hidden="true" tabindex="-1"></a>        </span>
<span id="cb10-16"><a href="#cb10-16" aria-hidden="true" tabindex="-1"></a>        viewModel</span>
<span id="cb10-17"><a href="#cb10-17" aria-hidden="true" tabindex="-1"></a>            <span class="op">.</span>$isLoadingData <span class="co">// 获取 Publisher</span></span>
<span id="cb10-18"><a href="#cb10-18" aria-hidden="true" tabindex="-1"></a>            <span class="op">.</span>asObservable<span class="op">()</span> <span class="co">// 转换到 Observable</span></span>
<span id="cb10-19"><a href="#cb10-19" aria-hidden="true" tabindex="-1"></a>            <span class="op">.</span>bind<span class="op">(</span>to<span class="op">:</span> loadingIndicator<span class="op">.</span>rx<span class="op">.</span>isAnimating<span class="op">)</span> <span class="co">// RxCocoa 绑定</span></span>
<span id="cb10-20"><a href="#cb10-20" aria-hidden="true" tabindex="-1"></a>            <span class="op">.</span>disposed<span class="op">(</span>by<span class="op">:</span> disposeBag<span class="op">)</span></span>
<span id="cb10-21"><a href="#cb10-21" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#125;</span></span>
<span id="cb10-22"><a href="#cb10-22" aria-hidden="true" tabindex="-1"></a>    </span>
<span id="cb10-23"><a href="#cb10-23" aria-hidden="true" tabindex="-1"></a>    <span class="at">@IBAction</span> <span class="kw">func</span> <span class="fu">handleButtonPressed</span><span class="op">()</span> <span class="op">&#123;</span></span>
<span id="cb10-24"><a href="#cb10-24" aria-hidden="true" tabindex="-1"></a>        viewModel<span class="op">.</span>doSomething<span class="op">()</span></span>
<span id="cb10-25"><a href="#cb10-25" aria-hidden="true" tabindex="-1"></a>    <span class="op">&#125;</span></span>
<span id="cb10-26"><a href="#cb10-26" aria-hidden="true" tabindex="-1"></a><span class="op">&#125;</span></span></code></pre></div>
<p>当需要在 SwiftUI 中重建此屏幕时，一切都将为您完成：在 ViewModel
中无需进行任何更改。</p>
<h2 id="关于页面导航的想法">关于页面导航的想法</h2>
<p>过去，我曾探讨 <a href="https://nalexn.github.io/swiftui-deep-linking/">程序导航</a> 在
SwiftUI 中的工作方式，根据我的经验，这是 SwiftUI
中仍然充满着苦难的部分。这里发生着各种故障和崩溃，并且不支持动画的自定义。</p>
<p>随着时间的流逝，这些问题肯定会得到解决，但是到目前为止，我丝毫不信任
SwiftUI 的页面间导航功能。</p>
<p>停止使用 SwiftUI 的页面导航后，我们其实并不会损失太多 —— 只要 SwiftUI
仍是由 UIKit 支持的，与我们使用 UIKit
所实现的性能相比，就不会有什么大的性能差异。</p>
<p>在为本文构建的示例项目中，我使用了传统的协调器模式（MVVM-R），该模式适用于使用
SwiftUI 中的 <code>UIHostingController</code> 构建的页面。</p>
<h2 id="结论">结论</h2>
<p>如果我们想控制与使用特定 UI
框架有关的风险，我们应该付出更多的努力来控制其在代码库中的扩展。</p>
<p>SwiftUI
存在的问题不应阻止您至少在可预见的将来准备将您的项目要迁移到此框架。</p>
<p>从 UI 层中提取尽可能多的业务逻辑，并使 UIKit
屏幕由数据驱动。这样，迁移到 SwiftUI 变得轻而易举。</p>
<p>我用普通的登录/主页/细节屏幕构建了一个 <a href="https://github.com/nalexn/uikit-swiftui">示例项目</a>，该屏幕演示了
UIKit 和 SwiftUI 视图如何变得不再重要，让你可以轻松分离并更换。</p>
<p>有两个目标 —— 一个在 UIKit 上运行，另一个在 SwiftUI
上，其他都共享代码库的基本部分。</p>]]></content>
      <categories>
        <category>Computer Science</category>
        <category>iOS</category>
        <category>SwiftUI</category>
      </categories>
      <tags>
        <tag>Computer Science</tag>
        <tag>iOS</tag>
        <tag>Swift</tag>
        <tag>SwiftUI</tag>
        <tag>UIKit</tag>
      </tags>
  </entry>
  <entry>
    <title>Python 中的列表和元组</title>
    <url>/2021/01/25/computer%20science/backend/python-lists-and-tuples/</url>
    <content><![CDATA[<blockquote>
<ul>
<li>原文地址：<a href="https://medium.com/python-in-plain-english/python-lists-and-tuples-760d45ebeaa8">Lists
and Tuples in Python</a></li>
<li>原文作者：<a href="https://medium.com/@mayur-ds">Mayur Jain</a></li>
<li>译者：<a href="https://github.com/PassionPenguin">霜羽
Hoarfroster</a></li>
<li>校对者：<a href="https://github.com/zenblo">zenblo</a>、<a href="https://github.com/lsvih">lsvih</a></li>
</ul>
</blockquote>
<p>要编写一个高效的程序，我们需要了解两件事事：<strong>首先是程序的输入内容是什么，其次是我们应该如何选择最合适的数据结构来处理该输入。</strong></p>
<p>在这篇博文中，我们将会在与
<strong>dict</strong>、<strong>set</strong>
等其他数据结构的比较中了解数据结构 <strong>List</strong> 和
<strong>Tuple</strong> 以及它可以有效处理的输入内容。</p>
<p>列表和元组属于一类称为<strong>数组</strong>的数据结构。数组是元素的集合，而这些元素的顺序或位置与元素本身一样重要。因为定义数组时我们给定了位置或索引，所以找到元素需要的时间复杂度为
O(1)。</p>
<blockquote>
<p>列表是一个动态数组，我们可以在其中修改和调整存储在其中的数据的大小。
元组是一个静态数组，其元素是固定且不可变的。元组由 Python
运行时缓存，这意味着我们不需要在每次我们需要使用一个元组的时候 Python
不需要与内核对话来获得保留这个元组的内存。</p>
</blockquote>
<p>在计算机系统中，存储器是一系列编号的分配存储块，每个分配存储块都可以容纳一个数字。Python
通过引用将数据存储在这些分配存储块中。这意味着数字本身只是指向或引用了我们实际关心的数据。</p>
<figure>
<img src="https://cdn-images-1.medium.com/max/2664/1*r3B7WgUsBJeYQmExYERwig.png" alt="一个存储了长度为 6 的数组系统内存布局">
<figcaption aria-hidden="true"><strong>一个存储了长度为 6
的数组系统内存布局</strong></figcaption>
</figure>
<p>当创建列表或元组时，我们需要分配一个系统存储块，该块的每个部分都使用整数指针进行引用。为了查找列表中的任何特定元素，我们应该知道分配存储块的编号和所需的元素。</p>
<p>例如，假设我们有一个从<strong>分配存储块编号</strong>
<strong>S</strong> 开始的数组，要找到该数组中的第 5
个元素，我们可以直接搜索分配存储块编号 <strong>S + 5</strong>
，同样类推到数组中的 i
元素。但是，如果分配存储块编号不适用于给定的数组，那么我们需要在整个数组中执行元素搜索，时间复杂度会随着数组大小的增加而增加。此搜索也称为<strong>线性搜索</strong>。最坏的情况是
O(n)，其中 n
是列表中元素的总数。如果列表已排序，则可以使用其他有效的搜索算法来搜索数组中的元素如二分法。</p>
<p>为了进行搜索和排序，Python 内置了
<strong><strong>eq</strong></strong>、<strong><strong>lt</strong></strong>
等比较方法，并且 Python 中的列表内置有 TimSort
的内置排序算法，而它的最佳情况是 O(n)，最坏的情况是 O(nlog n)。</p>
<p>排序完成后，我们可以进行二分法，一个平均复杂度为 O(log n)
的排序方法。它是通过查看列表的中间并将此值与所需值进行比较来实现查找的。如果中点的值小于我们的期望值，程序就会去比较列表的右半部分，然后继续像这样将列表不断缩小，直到找到该值或知道该值不会出现在已排序列表中为止。我们不需要像线性搜索那样需要读取列表中的所有值。相反，我们仅读取其中的一小部分。</p>
<p>注意：我们可以使用 Python 标准库中的 <strong>bisect</strong>
模块，该模块可以将元素添加到列表中、并保持排序顺序。</p>
<p><strong>LISTS 列表</strong></p>
<p>List
是一个动态数组，所以它可以使用调整大小操作，且它也支持动态更改。</p>
<p>如果有一个大小为 N 的列表 A，如果将新项目附加到列表 A，则 Python
会创建一个足够容纳 N 个元素以及更多元素的新列表。即，Python
中的列表的创建，不是分配能够容纳 N + 1 个元素的数组，而是分配能够容纳 M
个元素（ M &gt; N ）的数组。当 Python
复制旧列表到新列表的时候，它会随即删除或销毁旧列表。我们建议在首次分配时请求额外的空间，以减少后续分配的次数
——
出于内存复制的消耗系统资源之大，列表元素的增加会严重影响程序运行速度。</p>
<p><strong>List 的分配方程</strong></p>
<div class="sourceCode" id="cb1"><pre class="sourceCode python"><code class="sourceCode python"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a>M <span class="op">=</span> (N <span class="op">&gt;&gt;</span> <span class="dv">3</span>) <span class="op">+</span> (<span class="dv">3</span> <span class="cf">if</span> N <span class="op">&lt;</span> <span class="dv">9</span> <span class="cf">else</span> <span class="dv">6</span>)</span></code></pre></div>
<figure>
<img src="https://cdn-images-1.medium.com/max/2134/1*mYYlsNHqfxdvdSUUmlSARQ.png" alt="列表的 “过度” 分配">
<figcaption aria-hidden="true">列表的 “过度” 分配</figcaption>
</figure>
<p>该图显示列表尺寸与额外元素的关系。例如，如果使用创建了一个包含 8000
个元素的列表，Python 将返回一个能够容纳大约 8,600
个元素的列表，也就是会多分配 600 个元素的空间！</p>
<figure>
<img src="https://cdn-images-1.medium.com/max/2000/1*Tb-UGxpj6tL93pKUo8EXUg.png" alt="追加元素对列表理解的记忆和时间的影响">
<figcaption aria-hidden="true"><strong>追加元素对列表理解的记忆和时间的影响</strong></figcaption>
</figure>
<p>当我们构建了一个列表并且添加元素时候，我们使用了 2.7
倍的内存。与创建列表相比，添加元素时候分配给列表的额外空间要大得多。</p>
<p><strong>TUPLES 元组</strong></p>
<p>元组是静态的，也就是说，一旦创建了元组，与列表不同，我们再也无法对其进行修改或调整其大小。</p>
<p><strong>特性 1：静态性</strong></p>
<div class="sourceCode" id="cb2"><pre class="sourceCode python"><code class="sourceCode python"><span id="cb2-1"><a href="#cb2-1" aria-hidden="true" tabindex="-1"></a><span class="op">&gt;&gt;&gt;</span> t <span class="op">=</span> (<span class="dv">1</span>, <span class="dv">2</span>, <span class="dv">3</span>, <span class="dv">4</span>)</span>
<span id="cb2-2"><a href="#cb2-2" aria-hidden="true" tabindex="-1"></a><span class="op">&gt;&gt;&gt;</span> t[<span class="dv">0</span>] <span class="op">=</span> <span class="dv">5</span></span>
<span id="cb2-3"><a href="#cb2-3" aria-hidden="true" tabindex="-1"></a>Traceback (most recent call last):</span>
<span id="cb2-4"><a href="#cb2-4" aria-hidden="true" tabindex="-1"></a>  File <span class="st">"&lt;stdin&gt;"</span>, line <span class="dv">1</span>, <span class="kw">in</span> <span class="op">&lt;</span>module<span class="op">&gt;</span></span>
<span id="cb2-5"><a href="#cb2-5" aria-hidden="true" tabindex="-1"></a><span class="pp">TypeError</span>: <span class="st">'tuple'</span> <span class="bu">object</span> does <span class="kw">not</span> support item assignment</span></code></pre></div>
<p><strong>特性 2：可连接性</strong></p>
<div class="sourceCode" id="cb3"><pre class="sourceCode python"><code class="sourceCode python"><span id="cb3-1"><a href="#cb3-1" aria-hidden="true" tabindex="-1"></a><span class="op">&gt;&gt;&gt;</span> t1 <span class="op">=</span> (<span class="dv">1</span>, <span class="dv">2</span>, <span class="dv">3</span>, <span class="dv">4</span>)</span>
<span id="cb3-2"><a href="#cb3-2" aria-hidden="true" tabindex="-1"></a><span class="op">&gt;&gt;&gt;</span> t2 <span class="op">=</span> (<span class="dv">5</span>, <span class="dv">6</span>, <span class="dv">7</span>, <span class="dv">8</span>)</span>
<span id="cb3-3"><a href="#cb3-3" aria-hidden="true" tabindex="-1"></a><span class="op">&gt;&gt;&gt;</span> t1 <span class="op">+</span> t2</span>
<span id="cb3-4"><a href="#cb3-4" aria-hidden="true" tabindex="-1"></a>(<span class="dv">1</span>, <span class="dv">2</span>, <span class="dv">3</span>, <span class="dv">4</span>, <span class="dv">5</span>, <span class="dv">6</span>, <span class="dv">7</span>, <span class="dv">8</span>)</span></code></pre></div>
<p>现在，如果我们考虑将连接操作与列表的 <code>append</code>
操作放在一起，一起使用，那么有趣的是，元组连接所花费的时间将会是
O(n)，而列表所花费的时间为
O(1)。因为列表是追加元素的，所以列表中只要有多余的空间即可。对于元组，每当将一个新元素连接到现有元组时，它就会在不同的内存位置上创建一个新的元组，从而使连接花费
O(n) 时间（因为对于元组来说没有直接添加元素的方法可用）。</p>
<p>元组被认为是轻量的 ——
与列表不同，元组仅占用数据所需的内存。所以说，<strong>如果数据是静态的，我们建议大家去使用元组。</strong></p>
<p>使用元组的另一个好处是<strong>资源回收</strong> —— Python
是支持垃圾回收的，这意味着，当我们不再使用某个变量的时候，它将释放其内存，并将其返回给系统，以便将该内存分配给其他应用程序或变量。对于元组，如果不再使用元组空间，Python
会保留它的内存，并且如果将来需要该大小的内存，则 Python
不会去向系统寻求新的内存，而是直接分配自己保留下来的内存 ——
极大程度上避免了向系统再度调用内存块，节省了时间，优化了资源的配置。</p>
<p><strong>List 和 Tuple 的实例</strong></p>
<div class="sourceCode" id="cb4"><pre class="sourceCode python"><code class="sourceCode python"><span id="cb4-1"><a href="#cb4-1" aria-hidden="true" tabindex="-1"></a><span class="op">&gt;&gt;&gt;</span> <span class="op">%</span>timeit l <span class="op">=</span> [<span class="dv">0</span>, <span class="dv">1</span>, <span class="dv">2</span>, <span class="dv">3</span>, <span class="dv">4</span>, <span class="dv">5</span>, <span class="dv">6</span>, <span class="dv">7</span>, <span class="dv">8</span>, <span class="dv">9</span>]</span>
<span id="cb4-2"><a href="#cb4-2" aria-hidden="true" tabindex="-1"></a><span class="dv">95</span> ns ± <span class="fl">1.87</span> ns per loop (mean ± std. dev. of <span class="dv">7</span> runs, <span class="dv">10000000</span> loops each)</span>
<span id="cb4-3"><a href="#cb4-3" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb4-4"><a href="#cb4-4" aria-hidden="true" tabindex="-1"></a><span class="op">&gt;&gt;&gt;</span> <span class="op">%</span>timeit t <span class="op">=</span> (<span class="dv">0</span>, <span class="dv">1</span>, <span class="dv">2</span>, <span class="dv">3</span>, <span class="dv">4</span>, <span class="dv">5</span>, <span class="dv">6</span>, <span class="dv">7</span>, <span class="dv">8</span>, <span class="dv">9</span>)</span>
<span id="cb4-5"><a href="#cb4-5" aria-hidden="true" tabindex="-1"></a><span class="fl">12.5</span> ns ± <span class="fl">0.199</span> ns per loop (mean ± std. dev. of <span class="dv">7</span> runs, <span class="dv">100000000</span> loops each)</span></code></pre></div>
<p>列表和元组都有优点和缺点，但是重要的是要牢记它们的特性 ——
例如列表中的过度分配以及元组中的静态和缓存资源，同时将其用作可能的数据结构。</p>
<p>希望你会喜欢阅读本文！</p>
<p><strong>参考资料</strong></p>
<p><a href="https://www.oreilly.com/library/view/high-performance-python/9781449361747/">High
Performance Python book</a></p>]]></content>
      <categories>
        <category>Computer Science</category>
        <category>Backend</category>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Computer Science</tag>
        <tag>Backend</tag>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>Flutter 中内置的显式动画</title>
    <url>/2021/01/17/computer%20science/dart/built-in-explicit-animations-in-flutter/</url>
    <content><![CDATA[<blockquote>
<ul>
<li>原文地址：<a href="https://medium.com/flutterdevs/built-in-explicit-animations-in-flutter-438a039dd90">Built-in
Explicit Animations in Flutter</a></li>
<li>原文作者：<a href="https://medium.com/@shaiq_khan">Shaiq
khan</a></li>
<li>译者：<a href="https://github.com/PassionPenguin">霜羽
Hoarfroster</a></li>
<li>校对者：<a href="https://github.com/lsvih">lsvih</a></li>
</ul>
</blockquote>
<p><img src="https://cdn-images-1.medium.com/max/2160/1*-VpftDFf_ArJZoyuOjqBJA.png"></p>
<p>在我们的 <a href="https://medium.com/flutterdevs/staggered-animation-in-flutter-e7282a936b99">上一篇文章</a>
中，我们弄清楚了如何利用 Flutter
的交织动画编写一些完美的动画。<code>AnimatedFoo</code> 和
<code>TweenAnimationBuilder</code>
让我们能够将一些基本动画运用在应用程序中。这些动画通常从头到尾使用补间进行渲染，而在这背后，Flutter
代替了我们控制好了这一切，满足了我们对动画的预期，也让我们不用再担心动画的播放顺序。</p>
<p>对于部分动画来说，使用补间动画是极好的选择。当然，我们也可以用另外一种方式重新开始制作新的动画。</p>
<p>Flutter 有很多带有过渡动画的控件，而它们都以 <code>Transition</code>
结尾，它们包括了 <a href="https://api.flutter.cn/flutter/widgets/ScaleTransition-class.html"><code>ScaleTransition</code></a>、<a href="https://api.flutter.cn/flutter/widgets/SizeTransition-class.html"><code>SizeTransition</code></a>、<a href="https://api.flutter.cn/flutter/widgets/DecoratedBoxTransition-class.html"><code>DecoratedBoxTransition</code></a>。它们与我们所创作的的
<code>AnimateBlah</code> 控件非常类似。</p>
<p>例如说 <a href="https://api.flutter.cn/flutter/widgets/PositionedTransition-class.html"><code>PositionedTransition</code></a>，它可以产生在各个位置移动的小部件的动画。这些动画与补间动画很是相像，但是有明显的不同：这些
<code>Transition</code> 控件应该在 <a href="https://api.flutter.cn/flutter/widgets/AnimatedWidget-class.htmlhttps://api.flutter.dev/flutter/widgets/AnimatedWidget-class.html"><code>AnimatedWidget</code></a>
的构造中使用，而这就是显式动画。</p>
<figure>
<img src="https://cdn-images-1.medium.com/max/5760/1*Rj0MJbE-gRj3gmUTwSkKog.jpeg" alt="一张太阳的图片，没有旋转">
<figcaption aria-hidden="true">一张太阳的图片，没有旋转</figcaption>
</figure>
<h2 id="rotationtransition-旋转变换"><code>RotationTransition</code>
旋转变换</h2>
<p><a href="https://api.flutter.cn/flutter/widgets/RotationTransition-class.html"><code>RotationTransition</code></a>
是一个非常有用的控件，它的构造语句仅仅需要三个属性。</p>
<pre class="dart"><code>// （大多数的） RotationTransition 构造语句
RotationTransition(&#123;
  Widget child,
  Alignment alignment,
  Animation&lt;double&gt; turns
&#125;)</code></pre>
<p><code>child</code> — 提供要旋转的控件，这里是显示太阳的图片的控件
<code>GalaxyWay()</code>。接下来我们要在 <code>alignment</code>
中提供控件旋转的中心（对齐），此处我们规定了图片的中心，即太阳的中心 ——
我们的预期嘛。</p>
<pre class="dart"><code>RotationTransition(
  child: GalaxyWay(),
  alignment: Alignment.center,
  turns: _repeatingAnimationLong
),</code></pre>
<p>简简单单的代码就是使 <code>RotationTransition</code> 和各种
<code>Transition</code>
控件构成的动画被称为显式动画的原因。我们只需通过调用
<code>AnimatedContainer</code>
控件并进行更改就可以轻松实现旋转动画。借助显式动画，我们可以控制时间与旋转次数，使太阳不断旋转。</p>
<p><img src="https://cdn-images-1.medium.com/max/2000/1*oeGSTGSJwkqzQueCykTggw.gif"></p>
<p>对于 <code>RotationTransition</code> 而言，属性 <code>turns</code>
会直接影响我们的控件的旋转次数，而它所接受的输入类型是
<code>Animation&lt;double&gt;</code>。</p>
<h2 id="创建一个-animationcontroller-动画控制器">创建一个
<code>AnimationController</code> 动画控制器</h2>
<p>得到一个 <code>Animation&lt;double&gt;</code>
值最有效的方法是创建一个 <a href="https://api.flutter.cn/flutter/animation/AnimationController-class.html"><code>AnimationController</code>
动画控制器</a>。这个控制器将会为我们控制每一帧的动画。</p>
<p>我们必须在有状态的控件 <code>StatefulWidget</code>
中进行设置，以保证我们能够持续访问并操作动画控制器。由于
<code>AnimationController</code>
同样具有自己的状态要管理，因此我们需要在 <code>initState()</code>
中对其进行初始化，并在 <code>dispose()</code> 中对其进行处理。</p>
<p>我们应为“动画控制器”提供两个参数，第一个是动画的持续长度。Dart
为我们提供了一个 <code>Duration</code>
类供使用。对于这个例子，让我们设定下来，让太阳的图片转动一次持续 5
秒，然后暂停旋转 15 秒，咋样？</p>
<pre class="dart"><code>_animationController = AnimationController(
  duration: Duration(seconds: 15),
  // TODO: 尚需完成剩余构造
);</code></pre>
<p>在我们把控制器制作完成以后，我们不会再需要编写完成太多的代码。这是因为我们已获得一个控制器。</p>
<p>创建 <code>AnimationController</code> 的同时，我们也要赋予一个
<code>vsync</code> 参数。<code>vsync</code>
的存在防止后台动画消耗不必要的资源。我们可以通过添加
<code>SingleTickerProviderStateMixin</code>
到控件的类定义，将有状态的控件赋予给 <code>vsync</code>。</p>
<p>另外，我们需要太阳永远旋转下去，不是吗？为此，我们需要要求控制器重复动画下去。</p>
<pre class="dart"><code>_animationController = AnimationController(
  duration: Duration(seconds: 15),
  vsync: this,
)..repeat();</code></pre>
<h2 id="使用-animationcontroller-动画控制器">使用
<code>AnimationController</code> 动画控制器</h2>
<p>仁慈的我还添加了一个彩蛋，让用户可以控制阳光。我在页面中添加一个基本按钮，并隐藏在了动画中，然后我将其传递给控制器的引用，以便在其
<code>onTap</code> 监听中可以停止或重新开始动画。</p>
<p>控制器将维护包括动画的状态在内的各种状态。如果动画正在播放，我们可以检查动画状态，也可以停止播放动画。而如果动画不在播放中，我们可以使用控制器重新启动动画。也就是说，通过使用动画控制器，我们就可以根据需求控制动画的播放与暂停。除此之外，动画控制器还有一些其它的功能。</p>
<p>通过使用控制器，我们可以同样地为特定值设置动画（或从该值反向），并以给定的速度播放动画，或使用类似的控制器来控制各种动画。</p>
<p><img src="https://cdn-images-1.medium.com/max/2000/1*qmRBKLFSVNTvW8-uWFvbKw.gif"></p>
<p>这只是我们对 Flutter 中的显式动画的第一次尝试。我们看到了 Transition
控件如何运行，以及学会了使用 <code>AnimationController</code>
来命令动画修改方向或其他动画属性。在以后的文章中，我们将进一步剖析显式动画以及介绍如何自定义使用显式动画。</p>
<p>在下面的视频中，我们可以看到这个显式动画的运行结果 ——
当我们在屏幕上的任意位置点击时，动画会被暂停。而在屏幕任意位置再次点击就会恢复动画的播放。同样的，我们也可以通过修改代码来控制动画的速度以及播放的方向。</p>
<p><img src="https://cdn-images-1.medium.com/max/2000/1*y7sP1wxW1UHb_42Wv2foUw.gif"></p>
<p>这就是显式动画的基本入门了，我们在本文中构建了一个示例，而我相信，通过学习，你也同样可以轻松学会如何去制作这样一个动画，感谢你的阅读～</p>]]></content>
      <categories>
        <category>Computer Science</category>
        <category>Dart</category>
        <category>Flutter</category>
      </categories>
      <tags>
        <tag>Computer Science</tag>
        <tag>UI</tag>
        <tag>Dart</tag>
        <tag>Flutter</tag>
      </tags>
  </entry>
  <entry>
    <title>Flutter 中的交织动画</title>
    <url>/2021/01/17/computer%20science/dart/staggered-animation-in-flutter/</url>
    <content><![CDATA[<blockquote>
<ul>
<li>原文地址：<a href="https://medium.com/flutterdevs/staggered-animation-in-flutter-e7282a936b99">Staggered
Animation In Flutter</a></li>
<li>原文作者：<a href="https://medium.com/@shaiq_khan">Shaiq
khan</a></li>
<li>译者：<a href="https://github.com/PassionPenguin">霜羽
Hoarfroster</a></li>
<li>校对者：<a href="https://github.com/lsvih">lsvih</a></li>
</ul>
</blockquote>
<figure>
<img src="https://cdn-images-1.medium.com/max/2000/1*icYuiagsCKqcRapvjiLbmw.png" alt="Flutter 中的交织动画">
<figcaption aria-hidden="true">Flutter 中的交织动画</figcaption>
</figure>
<p>交织动画由一个动画序列或重叠的动画组成，而要制作交织的动画，我们需要使用多个或多组动画对象。我们应该使用同一个
<code>AnimationController</code>
控制所有动画，每个动画对象都应该指定某个点或锚点在一段时间内的运动，并且对于要执行的动画的每个属性，我们都应该创建一个补间（<code>Tween</code>）。</p>
<p>所谓交织动画，直接来说就是：并非在同一时刻发生全部的视觉变化，而是让其随着任务的进行逐步发生。这个动画可能纯粹只是一个顺序动画，视觉上的变化一个接一个的出现；也可能有部分的动画重叠出现，乃至完全重叠。当然，交织动画的动画中同样可能会有一些时刻空着，即在一些间隙中没有发生任何动画。</p>
<p><a href="https://youtu.be/0fFvnZemmh8"><strong>这里是一段有关交织动画的样例视频</strong></a></p>
<p>在这个视频中，你可以看到发生在一控件上，从一个带边框而略微有圆角的蓝色矩形的出现开始的动画。这个矩形会按照以下顺序变化：</p>
<ul>
<li>淡入</li>
<li>水平上变宽</li>
<li>向上移动同时竖直上变得更高</li>
<li>变为一个有边框的圆圈</li>
<li>颜色变为橙色</li>
</ul>
<p>在顺序播放完动画后，将会反向播放上述的动画。</p>
<h4 id="交织动画的基础结构">交织动画的基础结构</h4>
<ul>
<li>所有的动画都是由相同同样的 <code>AnimationController</code>
控制。</li>
<li>无论动画在现实时间中播放多长时间，控制器的值必须在 0.0 和 1.0
之间，包括 0.0 和 1.0。</li>
<li>每个动画都有一个 <code>Interval</code>，这个值必须在 0.0 和 1.0
之间，包括 0.0 和 1.0。</li>
<li>对于每一个间隔内产生动画的属性，创建一个 <code>Tween</code>。
<code>Tween</code> 指定此属性的开始值和结束值。</li>
<li><code>Tween</code> 产生一个由动画控制器管理的 <code>Animation</code>
对象。</li>
</ul>
<h4 id="要设置这样一个动画">要设置这样一个动画</h4>
<ul>
<li>创建一个 <code>AnimationController</code> 管理所有的
<code>Animations</code>。</li>
<li>为每一个有动画的属性创建一个 <code>Tween</code>。</li>
<li>为 <code>Tween</code> 设置不同的值。</li>
<li><code>Tween</code> 的 <code>animate()</code> 方法需要一个
<code>AnimationController</code> 来用这些属性生成一个动画。</li>
<li>通过修改 <code>Animation</code> 构造器中的 <code>curve</code>
属性指定动画的间隔时间</li>
</ul>
<p><strong>如何在 Flutter 中使用交织动画:</strong></p>
<p>下面的代码为 avatarSize 这一属性定义了一个补间动画。它构造了一个 <a href="https://api.flutter.cn/flutter/animation/CurvedAnimation-class.html"><strong>CurvedAnimation</strong></a>
动画类并且指定了动画曲线为一条 elasticOut
曲线。要查看更多的预设动画曲线，请访问网页 <a href="https://api.flutter.cn/flutter/animation/Curves-class.html"><strong>Curves</strong></a>
。</p>
<pre class="dart"><code>avatarSize = Tween&lt;double&gt;(
  begin: 50.0,
  end: 150.0,
).animate(
  CurvedAnimation(
    parent: controller,
    curve: Interval(
      0.125, 0.250,
      curve: Curves.elasticOut,
    ),
  ),
),</code></pre>
<blockquote>
<p><code>AnimationController</code> 和 <code>Animation</code> 定义了类
<code>AnimationController</code> 的实例 以下是
<code>AnimateController</code> 以及 5 个用于控制动画的进展的
<code>Animation</code> 的实例，其中 <code>&lt;double&gt;</code>
用于获取一个用于定义动画过程的数值，该数值必须在 0 到 1 之间。</p>
</blockquote>
<pre class="dart"><code>final AnimationController controller;
final Animation&lt;double&gt; barHeight;
final Animation&lt;double&gt; avatarSize;
final Animation&lt;double&gt; titleOpacity;
final Animation&lt;double&gt; textOpacity;
final Animation&lt;double&gt; imageOpacity;</code></pre>
<blockquote>
<p>我们应该在控件的定义中覆写 <code>initState</code> 方法以在其中完成对
<code>AnimationController</code>
的初始化，在定义语句中，我们实际是在设置动画的参数。下面的例子我们将动画时长设置为
3 秒。</p>
</blockquote>
<pre class="dart"><code>// 译者注：代码从 Flutter 库中截取，路径 /lib/src/animation/animation_controller.dart:150
@override
void initState() &#123;
    super.initState();
    _controller = AnimationController(
        vsync: this, // 对 SingleTickerProviderStateMixin 的引用
        duration: widget.duration,
    );
&#125;</code></pre>
<p><strong>如何在代码中实现：</strong></p>
<p>你需要在代码中实现以下内容：</p>
<ul>
<li>添加一个 <code>StatefulWidget</code> （带有状态的）控件</li>
<li>然后将这个控件与 <code>SingleTickerProviderStateMixin</code>
Mixin，以让 <code>AnimationController</code> 确定它的动画时长为 3500
毫秒。</li>
</ul>
<p>控制器将会播放一个动画，然后会在 widget
树上创建一个无动画的部分。当在屏幕上检测到点击事件时，开始播放动画。动画一开始会顺序播放，然后会倒序播放。</p>
<pre class="dart"><code>import 'package:flutter/material.dart';
import 'package:stag_animation/trekking/staggered_trekking.dart';

class StaggeredTrekkingAnimation extends StatefulWidget &#123;
  @override
  _StaggeredTrekkingAnimationState createState() =&gt;
      _StaggeredTrekkingAnimationState();
&#125;

class _StaggeredTrekkingAnimationState extends State&lt;StaggeredTrekkingAnimation&gt;
    with SingleTickerProviderStateMixin &#123;
  AnimationController _controller;

  @override
  void initState() &#123;
    super.initState();
    _controller = AnimationController(
      duration: const Duration(milliseconds: 3500),
      vsync: this,
    );
    _controller.forward();
  &#125;

  Future&lt;void&gt; _playAnimation() async &#123;
    try &#123;
      await _controller.forward().orCancel;
      await _controller.reverse().orCancel;
    &#125; on TickerCanceled &#123;
      // 这个动画被暂停了，可能因为该控件被 dispose 了。
    &#125;
  &#125;

  @override
  void dispose() &#123;
    super.dispose();
    _controller.dispose();
  &#125;

  @override
  Widget build(BuildContext context) &#123;
    return GestureDetector(
      behavior: HitTestBehavior.opaque,
      onTap: () &#123;
        _playAnimation();
      &#125;,
      child: StaggeredTrekking(
        controller: _controller,
      ),
    );
  &#125;
&#125;</code></pre>
<p>在 Staggered Trekking Enter
动画中，我们使用了补间去决定动画的进展。</p>
<p>接下来，你会完成一个无状态的控件的 <a href="https://github.com/ShaiqAhmedkhan/Flutter_Staggered_Animation/blob/master/lib/trekking/staggered_trekking.dart">Staggered
Trekking 动画</a>。我们会用 <code>build()</code>
函数为这个控件的动画初始化定义一个 <a href="https://api.flutter.cn/flutter/widgets/AnimatedBuilder-class.html"><strong>AnimatedBuilder</strong></a>。同时，我们需要创建一个名为
<code>_buildAnimation()</code> 的函数，负责更新用户界面，并将其分配给
<code>builder</code> 属性.</p>
<pre class="dart"><code>import 'package:flutter/material.dart';

class StaggeredTrekkingEnterAnimation &#123;
  StaggeredTrekkingEnterAnimation(this.controller)
      : barHeight = Tween&lt;double&gt;(begin: 0, end: 150).animate(
          CurvedAnimation(
            parent: controller,
            curve: Interval(0, 0.3, curve: Curves.easeIn),
          ),
        ),
        avatarSize = Tween&lt;double&gt;(begin: 0, end: 1).animate(
          CurvedAnimation(
            parent: controller,
            curve: Interval(0.3, 0.6, curve: Curves.elasticOut),
          ),
        ),
        titleOpacity = Tween&lt;double&gt;(begin: 0, end: 1).animate(
          CurvedAnimation(
            parent: controller,
            curve: Interval(0.6, 0.65, curve: Curves.easeIn),
          ),
        ),
        textOpacity = Tween&lt;double&gt;(begin: 0, end: 1).animate(
          CurvedAnimation(
            parent: controller,
            curve: Interval(0.65, 0.8, curve: Curves.easeIn),
          ),
        ),
        imageOpacity = Tween&lt;double&gt;(begin: 0, end: 1).animate(
          CurvedAnimation(
            parent: controller,
            curve: Interval(0.8, 0.99, curve: Curves.easeIn),
          ),
        );

  final AnimationController controller;
  final Animation&lt;double&gt; barHeight;
  final Animation&lt;double&gt; avatarSize;
  final Animation&lt;double&gt; titleOpacity;
  final Animation&lt;double&gt; textOpacity;
  final Animation&lt;double&gt; imageOpacity;
&#125;</code></pre>
<p><code>AnimatedBuilder</code>
将侦听来自动画控制器的通知，然后会标记该控件的值的改变。对于动画的每一帧，这些值会因为调用
<code>_buildAnimation()</code> 而都被更新。</p>
<p>在下面发布的视频中，你将看到交织动画的工作方式。当你在屏幕上的任意位置点击时，它将启动动画并在向前播放动画之后自动向后播放动画。在这代码中，你还可以控制动画播放的速度。</p>
<p><img src="https://cdn-images-1.medium.com/max/2000/1*vQm1tBYamr7UZSaoApsAdg.gif"></p>
<p>这就是交织动画的基本示例。在这里我们做了一个简单的示例，你可以尝试学习它。</p>
<p><strong>单击下面的 GitHub 链接以找到交织动画的源代码：</strong></p>
<p><a href="https://github.com/flutter-devs/Flutter-StaggeredAnimation"><strong>flutter-devs/Flutter-StaggeredAnimation</strong></a></p>]]></content>
      <categories>
        <category>Computer Science</category>
        <category>Dart</category>
        <category>Flutter</category>
      </categories>
      <tags>
        <tag>Computer Science</tag>
        <tag>UI</tag>
        <tag>Dart</tag>
        <tag>Flutter</tag>
      </tags>
  </entry>
  <entry>
    <title>Node.js 缓冲区的完整指南</title>
    <url>/2021/01/13/computer%20science/backend/a-complete-guide-of-node-js-buffer/</url>
    <content><![CDATA[<blockquote>
<ul>
<li>原文地址：<a href="https://medium.com/javascript-in-plain-english/a-complete-guide-of-node-js-buffer-3a38d2d949b1">A
Complete Guide of Node.js Buffer</a></li>
<li>原文作者：<a href="https://medium.com/@harsh-patel">Harsh
Patel</a></li>
<li>译者：<a href="https://github.com/PassionPenguin">霜羽
Hoarfroster</a></li>
<li>校对者：<a href="https://github.com/flashhu">flashhu</a>、<a href="https://github.com/regon-cao">regon-cao</a></li>
</ul>
</blockquote>
<p>二进制流是大量的二进制数据的集合。由于通常情况下二进制流的大小挺大的，因此二进制流一般不会一起运送，而会在运输前切分成小块然后逐一发送。</p>
<p>当数据处理单元暂时不再接收其他数据流时，剩余的数据将会被保留在缓存中，直到数据处理单元准备好接收更多数据为止。</p>
<p>Node.js
服务器一般需要在文件系统中进行读写，而文件在存储层面而言其实都是二进制流。除此之外，Node.js
还能与 TCP 流一起使用，让 TCP
流在不可靠的互联网络上提供可靠的端到端字节流保障通信。</p>
<p>发送给接收者的数据流会被缓冲，直到接收者准备接收更多要处理的数据为止。这就是
Node.js 处理临时数据部分的工作内容 —— 在 V8
引擎外部管理和存储二进制数据。</p>
<p>让我们一起深入缓冲区（<code>Buffer</code>）的各种使用方法，了解更多有关它们的信息以及一起学习如何在
Node.js 程序中使用它们吧。</p>
<p><img src="https://cdn-images-1.medium.com/max/2000/0*RbpNfHqVXY39GYeC.png"></p>
<h2 id="node.js-buffer-的方法">Node.js Buffer 的方法</h2>
<p>Node.js 缓冲模块的最大优势，其实就是它是内置于 Node.js
中的，因此我们可以在任何我们想要使用它的地方使用它。</p>
<p>让我们一起浏览一些重要的 Node.js 缓冲模块的方法吧。</p>
<h4 id="buffer.alloc"><code>Buffer.alloc()</code></h4>
<p>此方法将创建一个新的缓冲区，但是分配的大小不是固定的。当我们调用此方法时，可以自行分配大小（以字节为单位）。</p>
<div class="sourceCode" id="cb1"><pre class="sourceCode js"><code class="sourceCode javascript"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a><span class="kw">const</span> buf <span class="op">=</span> <span class="bu">Buffer</span><span class="op">.</span><span class="fu">alloc</span>(<span class="dv">6</span>)  <span class="co">// 这会创建一个 6 字节的缓冲区</span></span>
<span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-3"><a href="#cb1-3" aria-hidden="true" tabindex="-1"></a><span class="bu">console</span><span class="op">.</span><span class="fu">log</span>(buf) <span class="co">// &lt;Buffer 00 00 00 00 00 00&gt;</span></span></code></pre></div>
<h4 id="buffer.bytelength"><code>Buffer.byteLength()</code></h4>
<p>如果我们想要获取缓冲区的长度，我们只需调用
<code>Buffer.byteLength()</code> 就行了。</p>
<div class="sourceCode" id="cb2"><pre class="sourceCode js"><code class="sourceCode javascript"><span id="cb2-1"><a href="#cb2-1" aria-hidden="true" tabindex="-1"></a><span class="kw">var</span> buf <span class="op">=</span> <span class="bu">Buffer</span><span class="op">.</span><span class="fu">alloc</span>(<span class="dv">10</span>)</span>
<span id="cb2-2"><a href="#cb2-2" aria-hidden="true" tabindex="-1"></a><span class="kw">var</span> buffLen <span class="op">=</span> <span class="bu">Buffer</span><span class="op">.</span><span class="fu">byteLength</span>(buf) <span class="co">// 检查缓冲区长度</span></span>
<span id="cb2-3"><a href="#cb2-3" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb2-4"><a href="#cb2-4" aria-hidden="true" tabindex="-1"></a><span class="bu">console</span><span class="op">.</span><span class="fu">log</span>(buffLen) <span class="co">// 10</span></span></code></pre></div>
<h4 id="buffer.compare"><code>Buffer.compare()</code></h4>
<p>通过使用 <code>Buffer.compare()</code>
我们可以比较两个缓冲区，此方法的返回值是
<code>-1</code>，<code>0</code>，<code>1</code> 中的一个。</p>
<p>译者注：<code>buf.compare(otherBuffer);</code>
这一句调用会返回一个数字
<code>-1</code>，<code>0</code>，<code>1</code>，分别对应
<code>buf</code> 在 <code>otherBuffer</code> 之前，之后或相同。</p>
<div class="sourceCode" id="cb3"><pre class="sourceCode js"><code class="sourceCode javascript"><span id="cb3-1"><a href="#cb3-1" aria-hidden="true" tabindex="-1"></a><span class="kw">var</span> buf1 <span class="op">=</span> <span class="bu">Buffer</span><span class="op">.</span><span class="fu">from</span>(<span class="st">'Harsh'</span>)</span>
<span id="cb3-2"><a href="#cb3-2" aria-hidden="true" tabindex="-1"></a><span class="kw">var</span> buf2 <span class="op">=</span> <span class="bu">Buffer</span><span class="op">.</span><span class="fu">from</span>(<span class="st">'Harsg'</span>)</span>
<span id="cb3-3"><a href="#cb3-3" aria-hidden="true" tabindex="-1"></a><span class="kw">var</span> a <span class="op">=</span> <span class="bu">Buffer</span><span class="op">.</span><span class="fu">compare</span>(buf1<span class="op">,</span> buf2)</span>
<span id="cb3-4"><a href="#cb3-4" aria-hidden="true" tabindex="-1"></a><span class="bu">console</span><span class="op">.</span><span class="fu">log</span>(a) <span class="co">// 这会打印 0</span></span>
<span id="cb3-5"><a href="#cb3-5" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb3-6"><a href="#cb3-6" aria-hidden="true" tabindex="-1"></a><span class="kw">var</span> buf1 <span class="op">=</span> <span class="bu">Buffer</span><span class="op">.</span><span class="fu">from</span>(<span class="st">'a'</span>)</span>
<span id="cb3-7"><a href="#cb3-7" aria-hidden="true" tabindex="-1"></a><span class="kw">var</span> buf2 <span class="op">=</span> <span class="bu">Buffer</span><span class="op">.</span><span class="fu">from</span>(<span class="st">'b'</span>)</span>
<span id="cb3-8"><a href="#cb3-8" aria-hidden="true" tabindex="-1"></a><span class="kw">var</span> a <span class="op">=</span> <span class="bu">Buffer</span><span class="op">.</span><span class="fu">compare</span>(buf1<span class="op">,</span> buf2)</span>
<span id="cb3-9"><a href="#cb3-9" aria-hidden="true" tabindex="-1"></a><span class="bu">console</span><span class="op">.</span><span class="fu">log</span>(a) <span class="co">// 这会打印 -1</span></span>
<span id="cb3-10"><a href="#cb3-10" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb3-11"><a href="#cb3-11" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb3-12"><a href="#cb3-12" aria-hidden="true" tabindex="-1"></a><span class="kw">var</span> buf1 <span class="op">=</span> <span class="bu">Buffer</span><span class="op">.</span><span class="fu">from</span>(<span class="st">'b'</span>)</span>
<span id="cb3-13"><a href="#cb3-13" aria-hidden="true" tabindex="-1"></a><span class="kw">var</span> buf2 <span class="op">=</span> <span class="bu">Buffer</span><span class="op">.</span><span class="fu">from</span>(<span class="st">'a'</span>)</span>
<span id="cb3-14"><a href="#cb3-14" aria-hidden="true" tabindex="-1"></a><span class="kw">var</span> a <span class="op">=</span> <span class="bu">Buffer</span><span class="op">.</span><span class="fu">compare</span>(buf1<span class="op">,</span> buf2)</span>
<span id="cb3-15"><a href="#cb3-15" aria-hidden="true" tabindex="-1"></a><span class="bu">console</span><span class="op">.</span><span class="fu">log</span>(a) <span class="co">// 这会打印 1</span></span></code></pre></div>
<h4 id="buffer.concat"><code>Buffer.concat()</code></h4>
<p>顾名思义，我们可以使用此函数连接两个缓冲区。当然，就像字符串一样，我们也可以连接两个以上的缓冲区。</p>
<div class="sourceCode" id="cb4"><pre class="sourceCode js"><code class="sourceCode javascript"><span id="cb4-1"><a href="#cb4-1" aria-hidden="true" tabindex="-1"></a><span class="kw">var</span> buffer1 <span class="op">=</span> <span class="bu">Buffer</span><span class="op">.</span><span class="fu">from</span>(<span class="st">'x'</span>)</span>
<span id="cb4-2"><a href="#cb4-2" aria-hidden="true" tabindex="-1"></a><span class="kw">var</span> buffer2 <span class="op">=</span> <span class="bu">Buffer</span><span class="op">.</span><span class="fu">from</span>(<span class="st">'y'</span>)</span>
<span id="cb4-3"><a href="#cb4-3" aria-hidden="true" tabindex="-1"></a><span class="kw">var</span> buffer3 <span class="op">=</span> <span class="bu">Buffer</span><span class="op">.</span><span class="fu">from</span>(<span class="st">'z'</span>)</span>
<span id="cb4-4"><a href="#cb4-4" aria-hidden="true" tabindex="-1"></a><span class="kw">var</span> arr <span class="op">=</span> [buffer1<span class="op">,</span> buffer2<span class="op">,</span> buffer3]</span>
<span id="cb4-5"><a href="#cb4-5" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb4-6"><a href="#cb4-6" aria-hidden="true" tabindex="-1"></a><span class="bu">console</span><span class="op">.</span><span class="fu">log</span>(arr)</span>
<span id="cb4-7"><a href="#cb4-7" aria-hidden="true" tabindex="-1"></a><span class="co">/* buffer, !concat [ &lt;Buffer 78&gt;, &lt;Buffer 79&gt;, &lt;Buffer 7a&gt; ] */</span></span>
<span id="cb4-8"><a href="#cb4-8" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb4-9"><a href="#cb4-9" aria-hidden="true" tabindex="-1"></a><span class="co">// 通过 Buffer.concat 方法连接两个缓冲区</span></span>
<span id="cb4-10"><a href="#cb4-10" aria-hidden="true" tabindex="-1"></a><span class="kw">var</span> buf <span class="op">=</span> <span class="bu">Buffer</span><span class="op">.</span><span class="fu">concat</span>(arr)</span>
<span id="cb4-11"><a href="#cb4-11" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb4-12"><a href="#cb4-12" aria-hidden="true" tabindex="-1"></a><span class="bu">console</span><span class="op">.</span><span class="fu">log</span>(buf)</span>
<span id="cb4-13"><a href="#cb4-13" aria-hidden="true" tabindex="-1"></a><span class="co">// &lt;Buffer 78 79 7a&gt; concat successful</span></span></code></pre></div>
<h4 id="buffer.entries"><code>Buffer.entries()</code></h4>
<p><code>Buffer.entries()</code> 会用这一缓冲区的内容创建并返回一个
[index, byte] 形式的迭代器。</p>
<div class="sourceCode" id="cb5"><pre class="sourceCode js"><code class="sourceCode javascript"><span id="cb5-1"><a href="#cb5-1" aria-hidden="true" tabindex="-1"></a><span class="kw">var</span> buf <span class="op">=</span> <span class="bu">Buffer</span><span class="op">.</span><span class="fu">from</span>(<span class="st">'xyz'</span>)</span>
<span id="cb5-2"><a href="#cb5-2" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb5-3"><a href="#cb5-3" aria-hidden="true" tabindex="-1"></a><span class="cf">for</span> (a <span class="kw">of</span> buf<span class="op">.</span><span class="fu">entries</span>()) &#123;</span>
<span id="cb5-4"><a href="#cb5-4" aria-hidden="true" tabindex="-1"></a>    <span class="bu">console</span><span class="op">.</span><span class="fu">log</span>(a)</span>
<span id="cb5-5"><a href="#cb5-5" aria-hidden="true" tabindex="-1"></a>    <span class="co">/* 这个会在控制台输出一个有缓冲区位置与内容的字节的数组 [ 0, 120 ][ 1, 121 ][ 2, 122 ] */</span></span>
<span id="cb5-6"><a href="#cb5-6" aria-hidden="true" tabindex="-1"></a>&#125;</span></code></pre></div>
<h4 id="buffer.fill"><code>Buffer.fill()</code></h4>
<p>我们可以使用 <code>Buffer.fill()</code>
这个函数将数据插入或填充到缓冲区中。更多信息请参见下文。</p>
<div class="sourceCode" id="cb6"><pre class="sourceCode js"><code class="sourceCode javascript"><span id="cb6-1"><a href="#cb6-1" aria-hidden="true" tabindex="-1"></a><span class="kw">const</span> b <span class="op">=</span> <span class="bu">Buffer</span><span class="op">.</span><span class="fu">alloc</span>(<span class="dv">10</span>)<span class="op">.</span><span class="fu">fill</span>(<span class="st">'a'</span>)</span>
<span id="cb6-2"><a href="#cb6-2" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb6-3"><a href="#cb6-3" aria-hidden="true" tabindex="-1"></a><span class="bu">console</span><span class="op">.</span><span class="fu">log</span>(b<span class="op">.</span><span class="fu">toString</span>())</span>
<span id="cb6-4"><a href="#cb6-4" aria-hidden="true" tabindex="-1"></a><span class="co">// aaaaaaaaaa</span></span></code></pre></div>
<h4 id="buffer.includes"><code>Buffer.includes()</code></h4>
<p>像字符串一样，它将确认缓冲区是否具有该值。我们可以使用
<code>Buffer.includes()</code>
方法来实现这一点，给定方法根据搜索返回一个布尔值，即 <code>true</code>
或 <code>false</code>。</p>
<div class="sourceCode" id="cb7"><pre class="sourceCode js"><code class="sourceCode javascript"><span id="cb7-1"><a href="#cb7-1" aria-hidden="true" tabindex="-1"></a><span class="kw">const</span> buf <span class="op">=</span> <span class="bu">Buffer</span><span class="op">.</span><span class="fu">from</span>(<span class="st">'this is a buffer'</span>)</span>
<span id="cb7-2"><a href="#cb7-2" aria-hidden="true" tabindex="-1"></a><span class="bu">console</span><span class="op">.</span><span class="fu">log</span>(buf<span class="op">.</span><span class="fu">includes</span>(<span class="st">'this'</span>))</span>
<span id="cb7-3"><a href="#cb7-3" aria-hidden="true" tabindex="-1"></a><span class="co">// true</span></span>
<span id="cb7-4"><a href="#cb7-4" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb7-5"><a href="#cb7-5" aria-hidden="true" tabindex="-1"></a><span class="bu">console</span><span class="op">.</span><span class="fu">log</span>(buf<span class="op">.</span><span class="fu">includes</span>(<span class="bu">Buffer</span><span class="op">.</span><span class="fu">from</span>(<span class="st">'a buffer example'</span>)))</span>
<span id="cb7-6"><a href="#cb7-6" aria-hidden="true" tabindex="-1"></a><span class="co">// false</span></span></code></pre></div>
<h4 id="buffer.isencoding"><code>Buffer.isEncoding()</code></h4>
<p>我们可能知道二进制文件必须进行编码，那么如果我们要检查数据类型是否支持字符编码该怎么办呢？我们可以使用
<code>Buffer.isEncoding()</code> 方法进行确认。如果支持，它将返回
<code>true</code>。</p>
<div class="sourceCode" id="cb8"><pre class="sourceCode js"><code class="sourceCode javascript"><span id="cb8-1"><a href="#cb8-1" aria-hidden="true" tabindex="-1"></a><span class="bu">console</span><span class="op">.</span><span class="fu">log</span>(<span class="bu">Buffer</span><span class="op">.</span><span class="fu">isEncoding</span>(<span class="st">'hex'</span>))</span>
<span id="cb8-2"><a href="#cb8-2" aria-hidden="true" tabindex="-1"></a><span class="co">// true</span></span>
<span id="cb8-3"><a href="#cb8-3" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb8-4"><a href="#cb8-4" aria-hidden="true" tabindex="-1"></a><span class="bu">console</span><span class="op">.</span><span class="fu">log</span>(<span class="bu">Buffer</span><span class="op">.</span><span class="fu">isEncoding</span>(<span class="st">'utf-8'</span>))</span>
<span id="cb8-5"><a href="#cb8-5" aria-hidden="true" tabindex="-1"></a><span class="co">// true</span></span>
<span id="cb8-6"><a href="#cb8-6" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb8-7"><a href="#cb8-7" aria-hidden="true" tabindex="-1"></a><span class="bu">console</span><span class="op">.</span><span class="fu">log</span>(<span class="bu">Buffer</span><span class="op">.</span><span class="fu">isEncoding</span>(<span class="st">'utf/8'</span>))</span>
<span id="cb8-8"><a href="#cb8-8" aria-hidden="true" tabindex="-1"></a><span class="co">// false</span></span>
<span id="cb8-9"><a href="#cb8-9" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb8-10"><a href="#cb8-10" aria-hidden="true" tabindex="-1"></a><span class="bu">console</span><span class="op">.</span><span class="fu">log</span>(<span class="bu">Buffer</span><span class="op">.</span><span class="fu">isEncoding</span>(<span class="st">'hey'</span>))</span>
<span id="cb8-11"><a href="#cb8-11" aria-hidden="true" tabindex="-1"></a><span class="co">// false</span></span></code></pre></div>
<h4 id="buffer.slice"><code>Buffer.slice()</code></h4>
<p><code>buf.slice()</code> 将用于使用缓冲区的选定元素创建一个新缓冲区
——
对缓冲区进行切割时，将创建一个新缓冲区，其中包含要在新缓冲区切片中找到的项目的列表。</p>
<div class="sourceCode" id="cb9"><pre class="sourceCode js"><code class="sourceCode javascript"><span id="cb9-1"><a href="#cb9-1" aria-hidden="true" tabindex="-1"></a><span class="kw">var</span> a <span class="op">=</span> <span class="bu">Buffer</span><span class="op">.</span><span class="fu">from</span>(<span class="st">'uvwxyz'</span>)<span class="op">;</span></span>
<span id="cb9-2"><a href="#cb9-2" aria-hidden="true" tabindex="-1"></a><span class="kw">var</span> b <span class="op">=</span> a<span class="op">.</span><span class="fu">slice</span>(<span class="dv">2</span><span class="op">,</span> <span class="dv">5</span>)<span class="op">;</span></span>
<span id="cb9-3"><a href="#cb9-3" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb9-4"><a href="#cb9-4" aria-hidden="true" tabindex="-1"></a><span class="bu">console</span><span class="op">.</span><span class="fu">log</span>(b<span class="op">.</span><span class="fu">toString</span>())<span class="op">;</span></span>
<span id="cb9-5"><a href="#cb9-5" aria-hidden="true" tabindex="-1"></a><span class="co">// wxy</span></span></code></pre></div>
<h4 id="buffer.swapx"><code>Buffer.swapX()</code></h4>
<p><code>Buffer.swapX()</code> 用于交换缓冲区的字节顺序。使用
<code>Buffer.swapX()</code> （此处 <code>X</code> 可以为 16, 32,
64）来交换 16 位，32 位和 64 位缓冲区对象的字节顺序。</p>
<div class="sourceCode" id="cb10"><pre class="sourceCode js"><code class="sourceCode javascript"><span id="cb10-1"><a href="#cb10-1" aria-hidden="true" tabindex="-1"></a><span class="kw">const</span> buf1 <span class="op">=</span> <span class="bu">Buffer</span><span class="op">.</span><span class="fu">from</span>([<span class="bn">0x1</span><span class="op">,</span> <span class="bn">0x2</span><span class="op">,</span> <span class="bn">0x3</span><span class="op">,</span> <span class="bn">0x4</span><span class="op">,</span> <span class="bn">0x5</span><span class="op">,</span> <span class="bn">0x6</span><span class="op">,</span> <span class="bn">0x7</span><span class="op">,</span> <span class="bn">0x8</span>])</span>
<span id="cb10-2"><a href="#cb10-2" aria-hidden="true" tabindex="-1"></a><span class="bu">console</span><span class="op">.</span><span class="fu">log</span>(buf1)</span>
<span id="cb10-3"><a href="#cb10-3" aria-hidden="true" tabindex="-1"></a><span class="co">// &lt;Buffer 01 02 03 04 05 06 07 08&gt;</span></span>
<span id="cb10-4"><a href="#cb10-4" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb10-5"><a href="#cb10-5" aria-hidden="true" tabindex="-1"></a><span class="co">// 交换 16 位字节顺序</span></span>
<span id="cb10-6"><a href="#cb10-6" aria-hidden="true" tabindex="-1"></a>buf1<span class="op">.</span><span class="fu">swap16</span>()</span>
<span id="cb10-7"><a href="#cb10-7" aria-hidden="true" tabindex="-1"></a><span class="bu">console</span><span class="op">.</span><span class="fu">log</span>(buf1)</span>
<span id="cb10-8"><a href="#cb10-8" aria-hidden="true" tabindex="-1"></a><span class="co">// &lt;Buffer 02 01 04 03 06 05 08 07&gt;</span></span>
<span id="cb10-9"><a href="#cb10-9" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb10-10"><a href="#cb10-10" aria-hidden="true" tabindex="-1"></a><span class="co">// 交换 32 位字节顺序</span></span>
<span id="cb10-11"><a href="#cb10-11" aria-hidden="true" tabindex="-1"></a>buf1<span class="op">.</span><span class="fu">swap32</span>()</span>
<span id="cb10-12"><a href="#cb10-12" aria-hidden="true" tabindex="-1"></a><span class="bu">console</span><span class="op">.</span><span class="fu">log</span>(buf1)</span>
<span id="cb10-13"><a href="#cb10-13" aria-hidden="true" tabindex="-1"></a><span class="co">// &lt;Buffer 03 04 01 02 07 08 05 06&gt;</span></span>
<span id="cb10-14"><a href="#cb10-14" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb10-15"><a href="#cb10-15" aria-hidden="true" tabindex="-1"></a><span class="co">// 交换 64 位字节顺序</span></span>
<span id="cb10-16"><a href="#cb10-16" aria-hidden="true" tabindex="-1"></a>buf1<span class="op">.</span><span class="fu">swap64</span>()</span>
<span id="cb10-17"><a href="#cb10-17" aria-hidden="true" tabindex="-1"></a><span class="bu">console</span><span class="op">.</span><span class="fu">log</span>(buf1)</span>
<span id="cb10-18"><a href="#cb10-18" aria-hidden="true" tabindex="-1"></a><span class="co">// &lt;Buffer 06 05 08 07 02 01 04 03&gt;</span></span></code></pre></div>
<h4 id="buffer.json"><code>Buffer.json()</code></h4>
<p>它可以帮助我们从缓冲区创建 JSON 对象，而该方法将返回 JSON
缓冲区对象，</p>
<div class="sourceCode" id="cb11"><pre class="sourceCode js"><code class="sourceCode javascript"><span id="cb11-1"><a href="#cb11-1" aria-hidden="true" tabindex="-1"></a><span class="kw">const</span> buf <span class="op">=</span> <span class="bu">Buffer</span><span class="op">.</span><span class="fu">from</span>([<span class="bn">0x1</span><span class="op">,</span> <span class="bn">0x2</span><span class="op">,</span> <span class="bn">0x3</span><span class="op">,</span> <span class="bn">0x4</span><span class="op">,</span> <span class="bn">0x5</span><span class="op">,</span> <span class="bn">0x6</span><span class="op">,</span> <span class="bn">0x7</span><span class="op">,</span> <span class="bn">0x8</span>])<span class="op">;</span></span>
<span id="cb11-2"><a href="#cb11-2" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb11-3"><a href="#cb11-3" aria-hidden="true" tabindex="-1"></a><span class="bu">console</span><span class="op">.</span><span class="fu">log</span>(buf<span class="op">.</span><span class="fu">toJSON</span>())<span class="op">;</span></span>
<span id="cb11-4"><a href="#cb11-4" aria-hidden="true" tabindex="-1"></a><span class="co">// &#123;"type":"Buffer", data:[1, 2, 3, 4, 5, 6, 7, 8]&#125;</span></span></code></pre></div>
<h2 id="结论">结论</h2>
<p>如果我们需要进一步了解并使用 Node.js 的缓冲区，我们需要对缓冲区以及
Node.js
缓冲区的工作原理有更扎实的基础知识。我们还应该了解为什么我们需要使用
Node.js 缓冲区和各种 Node.js 缓冲区方法的使用。</p>]]></content>
      <categories>
        <category>Computer Science</category>
        <category>Backend</category>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>Computer Science</tag>
        <tag>Backend</tag>
        <tag>JavaScript</tag>
        <tag>Node.js</tag>
      </tags>
  </entry>
</search>
